
(function(window,document,Laya){
	var __un=Laya.un,__uns=Laya.uns,__static=Laya.static,__class=Laya.class,__getset=Laya.getset,__newvec=Laya.__newvec;

	var Animation=laya.display.Animation,AtlasResourceManager=laya.webgl.atlas.AtlasResourceManager,AutoBitmap=laya.ui.AutoBitmap;
	var Base64Tool=laya.debug.tools.Base64Tool,BlendMode=laya.webgl.canvas.BlendMode,BlurFilter=laya.filters.BlurFilter;
	var Box=laya.ui.Box,Browser=laya.utils.Browser,Button=laya.ui.Button,Byte=laya.utils.Byte,CheckBox=laya.ui.CheckBox;
	var ClassUtils=laya.utils.ClassUtils,ColorFilter=laya.filters.ColorFilter,ComboBox=laya.ui.ComboBox,Component=laya.ui.Component;
	var Config=Laya.Config,DebugPanel=laya.debug.DebugPanel,Dictionary=laya.utils.Dictionary,DrawText=laya.webgl.text.DrawText;
	var Ease=laya.utils.Ease,EffectAnimation=laya.display.EffectAnimation,Event=laya.events.Event,EventDispatcher=laya.events.EventDispatcher;
	var Font=laya.display.css.Font,FontClip=laya.ui.FontClip,GlowFilter=laya.filters.GlowFilter,HBox=laya.ui.HBox;
	var HSlider=laya.ui.HSlider,HTMLCanvas=laya.resource.HTMLCanvas,HTMLDivElement=laya.html.dom.HTMLDivElement;
	var Handler=laya.utils.Handler,HttpRequest=laya.net.HttpRequest,Image=laya.ui.Image,Keyboard=laya.events.Keyboard;
	var Label=laya.ui.Label,List=laya.ui.List,Loader=laya.net.Loader,LoaderManager=laya.net.LoaderManager,LocalStorage=laya.net.LocalStorage;
	var MiniAdpter=laya.wx.mini.MiniAdpter,MovieClip=laya.ani.swf.MovieClip,Node=laya.display.Node,Panel=laya.ui.Panel;
	var Particle2D=laya.particle.Particle2D,ParticleTemplate2D=laya.particle.ParticleTemplate2D,Point=laya.maths.Point;
	var ProgressBar=laya.ui.ProgressBar,Rectangle=laya.maths.Rectangle,Render=laya.renders.Render,Resource=laya.resource.Resource;
	var ResourceManager=laya.resource.ResourceManager,Skeleton=laya.ani.bone.Skeleton,Socket=laya.net.Socket;
	var SoundChannel=laya.media.SoundChannel,SoundManager=laya.media.SoundManager,Sprite=laya.display.Sprite;
	var Stage=laya.display.Stage,Stat=laya.utils.Stat,StringTool=laya.debug.tools.StringTool,Styles=laya.ui.Styles;
	var Tab=laya.ui.Tab,Templet=laya.ani.bone.Templet,Text=laya.display.Text,TextArea=laya.ui.TextArea,TextInput=laya.ui.TextInput;
	var Texture=laya.resource.Texture,TimeLine=laya.utils.TimeLine,Tween=laya.utils.Tween,UIUtils=laya.ui.UIUtils;
	var URL=laya.net.URL,VBox=laya.ui.VBox,View=laya.ui.View,ViewStack=laya.ui.ViewStack,WebGL=laya.webgl.WebGL;
Laya.interface('laya.ui.ILayer');
Laya.interface('laya.ui.IResize');
Laya.interface('modules.guild.IGuild');
Laya.interface('mvc.core.IController');
Laya.interface('laya.filters.IRGBAFilter');
Laya.interface('laya.filters.IColorFilter');
Laya.interface('modules.battle.part.role.IRole');
Laya.interface('modules.battle.part.BaseCollision');
var importJS=Laya.importJS=function(jsFile,callback,onerror,evalJs){
	(evalJs===void 0)&& (evalJs=false);
	Laya.importsJS=Laya.importsJS || [];
	if ((jsFile instanceof Array)){
		var s=jsFile.length;
		for (var i=0;i < jsFile.length;i++){
			jsFile[i]=jsFile[i];
			importJS(jsFile[i],function(){
				s--;
				if (s==0)if(callback!=null)callback();
			},false);
		}
		return;
	}

	console.log("import JavaScript:"+jsFile);
	if (Laya.importsJS[jsFile]){
		if(callback!=null)callback();
		return;
	}

	if(!evalJs){
		var document=window.document;
		var body=document.getElementsByTagName('body')[0];
		var script=document.createElement("script");
		script.type="text/javascript";
		script.src=jsFile;
		body.appendChild(script);
		if(callback !=null)script.onload=callback;
		script.onerror=function (e){
			console.log("下载js"+jsFile+"失败!");
			if(onerror !=null)onerror();
		}
	}

	else{
		var arr=jsFile.split("?");
		var idx=arr[0].lastIndexOf('.');
		var isText=arr[0].substring(idx+1).toLowerCase()=="js";
		var xhr=new XMLHttpRequest();
		xhr.onload=function (e){
			window.eval(xhr.responseText+'\n//@ sourceURL='+xhr.url);
			Laya.importsJS[jsFile]=true;
			if(callback!=null)callback();
		}
		xhr.onerror=function (e){
			console.log("下载js"+jsFile+"失败");
			if(onerror !=null)onerror();
		}
		xhr.open("GET",jsFile,true);
		xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		xhr.responseType=isText ? "text" :"arraybuffer";
		xhr.send();
	}

}


Laya.__package('mgplugin');
mgplugin.enterReport=function(appid,userid){
	(appid===void 0)&& (appid='');
	(userid===void 0)&& (userid='');
	var launchOptions;
	var wx=Browser.window.wx;
	try {
		launchOptions=wx.getLaunchOptionsSync();
	}catch(_){};

	var plan='';
	var query=launchOptions ? (launchOptions.query || {}):{};
	function getParam (search,key){
		var reg=new RegExp('(^|&)'+key+'=([^&]*)(&|$)');
		var r=search.substr(1).match(reg);
		if (r!==null)return String(decodeURIComponent(r[2]));
		return '';
	};

	if (query.scene){
		var scene=decodeURIComponent(query.scene);
		plan=getParam(scene,'plan');
		}else {
		if (query.path){
			plan=getParam(query.path,'plan');
		}
	}

	console.log("scene.plan:"+plan);
	if (plan !=''){
		var url='https://goplatform.minigame.qq.com/mpreport/reportsource';
		var data={
			appid:appid,
			userid:userid,
			plan:plan,
			from:''
		};
		var xhr=new HttpRequest();
		xhr.http.timeout=10000;
		xhr.send(url,JSON.stringify(data),'post','json',["Content-Type","application/json"]);
	}

}


//class int
var int=(function(){
	function int(value){
		this.pattern=/^.?[0-9]*(\.|E)?[0-9]*$/;
		(value===void 0)&& (value=0);
		if(value==true)return 1;
		if(!this.pattern.test(value))
		{return 0}
		return !value?0:int.safe_int(parseInt(value));
	}

	__class(int,'int');
	var __proto=int.prototype;
	__proto.toString=function(radix){
		(radix===void 0)&& (radix=10);
		return Number(this).toString(radix);
	}

	__proto.valueOf=function(){
		return this;
	}

	__proto.toExponential=function(p){
		(p===void 0)&& (p=0);
		return Number(this).toExponential(p);
	}

	__proto.toPrecision=function(p){
		(p===void 0)&& (p=0);
		return Number(this).toPrecision(p);
	}

	__proto.toFixed=function(p){
		(p===void 0)&& (p=0);
		return Number(this).toFixed(p);
	}

	int.safe_int=function(x){
		var lsw=(x & 0xFFFF);
		var msw=(x >> 16)+(lsw >> 16);
		return (msw << 16)| (lsw & 0xFFFF);
	}

	int.MIN_VALUE=-2147483648;
	int.MAX_VALUE=2147483647;
	int.length=1;
	return int;
})()


/**
*日志管理
*@author chengwen.yi
*
*/
//class CLog
var CLog=(function(){
	function CLog(){}
	__class(CLog,'CLog');
	CLog.init=function(__isWeinre,__httpRootUrl,__version){
		CLog._isWeinre=__isWeinre ? true :false;
		CLog._httpRootUrl=__httpRootUrl;
		CLog._version=__version;
		CLog.log("_isWeinre:"+CLog._isWeinre);
		if(!CLog._isWeinre){
			LocalStorage.__init__();
			CLog._lastLogTxt=CLog.getAllLog()||"没有日志";
		}
	}

	CLog.setPlayerInfoId=function(value){
		CLog._playerInfoId=value;
	}

	CLog.openErrorLogUpload=function(isOpenUpload){
		var erralert=0;
		if (isOpenUpload){
			Browser.window.onerror=function (msg,url,line,column,detail){
				CLog.log(msg,url,line,column,detail);
				erralert++;
				if(erralert < 10 && detail){
					var idx=msg.indexOf(": ");
					var errorType=idx !=-1 ? msg.substring(0,idx):"";
					CLog.log("开始上传错误日志");
					var httpRequest=new HttpRequest();
					httpRequest.once("complete",this,function(e){
						CLog.log("上传错误日志成功！");
					});
					httpRequest.once("error",this,function(e){
						CLog.log("上传错误日志失败："+e);
					});
					var data={"playerID":CLog._playerInfoId,"clientVersion":CLog._version,"date":new Date().getTime(),"title":errorType,"content":msg+"\r\n"+detail.stack};
					CLog.log("--------------出错日志--------------");
					var errContent=msg+"\r\n"+detail.stack;
					CLog.log(errContent);
					var allLog=LocalStorage.getItem("CLog_AllLog");
					CLog.tempMsg=errContent+allLog;
					var errText=JSON.stringify(data);
					data="data="+errText;
					var requestUrl=CLog._httpRootUrl+"/errorlogupload";
					httpRequest.send(requestUrl,data,"post","text");
				}
				if (erralert < 5 && detail){
					if(LocalStorage.support){
						var lastErrorLog=LocalStorage.getItem("CLog_ErrorLog");
						LocalStorage.setItem("CLog_ErrorLog",(lastErrorLog ? lastErrorLog+"\r\n" :"")+new Date()+"\r\n"+CLog._logArray.join("\r\n")+"\r\n出错位置："+url+":"+line+":"+column+" (点击即可定位)\r\n"+msg);
					}
					else{
						CLog.alert("出错啦，请把此信息截图给研发商\n"+msg+"\n"+detail.stack);
					}
				}
			}
			}else {
			Browser.window.onerror=null;
		}
	}

	CLog.uploadLogFile=function(){
		if(LocalStorage.support){
			var allLog=LocalStorage.getItem("CLog_AllLog");
			if(allLog){
				CLog.log("开始上传上一次所有日志");
				try{
					var httpRequest=new Browser.window.XMLHttpRequest();
					httpRequest.onerror=function (e){
						CLog.log("上传上一次所有日志失败："+e);
					}
					httpRequest.onload=function (e){
						CLog.log("上传上一次所有日志成功！");
						CLog.clearLastAllLog();
						CLog.log("删除上一次所有日志！");
					};
					var requestUrl=CLog._httpRootUrl+"/uploadlog";
					httpRequest.open("post",requestUrl,true);
					var formData=new FormData();
					formData.append("key","ddtankh5");
					formData.append("version",CLog._version);
					var file=CLog.createFile(allLog,CLog.logFilename);
					formData.append(CLog._playerInfoId,file);
					httpRequest.send(formData);
				}
				catch(e){
					CLog.log("上传日志出错："+e);
				}
			}
		}
	}

	CLog.createFile=function(bits,fileName){
		return new File([bits],fileName);
	}

	CLog.console_log=function(__args){
		var args=arguments;
		console.log(args);
	}

	CLog.log=function(__args){
		var args=arguments;
		CLog.print(CLog.argsToStr(args));
	}

	CLog.error=function(__args){
		var args=arguments;
		CLog.print(CLog.argsToStr(args));
		debugger;
	}

	CLog.classLog=function(thisArgs,__args){
		var args=[];for(var i=1,sz=arguments.length;i<sz;i++)args.push(arguments[i]);
		CLog.print("["+(thisArgs ? thisArgs.__className :"undefined")+"] "+CLog.argsToStr(args));
	}

	CLog.errorLog=function(thisArgs,__args){
		var args=[];for(var i=1,sz=arguments.length;i<sz;i++)args.push(arguments[i]);
		CLog.print("["+(thisArgs ? thisArgs.__className :"undefined")+"] "+CLog.argsToStr(args));
		debugger;
	}

	CLog.argsToStr=function(args){
		return args ? [].slice.call(args).join(","):null;
	}

	CLog.print=function(txt){
		if(CLog.useTimestamps){
			txt=CLog.formatTimestamp(new Date())+txt;
		}
		if(CLog.isShowConsole)console.log(txt);
		if(CLog.maxCount==-1){
			CLog._logArray.push(txt);
		}
		else if(CLog.maxCount > 0 && CLog._logArray.length >=CLog.maxCount){
			CLog._logArray.shift();
			CLog._logArray.push(txt);
		}
		if(LocalStorage.support){
			if(CLog.maxCount % 50==0){
				CLog.saveAllLog();
			}
			else{
			}
		}
	}

	CLog.formatTimestamp=function(timestamp){
		var year=timestamp.getFullYear();
		var date=timestamp.getDate();
		var month=('0'+(timestamp.getMonth()+1)).slice(-2);
		var hrs=Number(timestamp.getHours());
		var mins=('0'+timestamp.getMinutes()).slice(-2);
		var secs=('0'+timestamp.getSeconds()).slice(-2);
		var mSecs=('0'+timestamp.getMilliseconds()).slice(-3);;
		return '['+year+'-'+month+'-'+date+' '+hrs+':'+mins+':'+secs+"."+mSecs+']: ';
	}

	CLog.clearLastAllLog=function(){
		CLog._lastLogTxt="";
		LocalStorage.removeItem("CLog_AllLog");
		CLog.saveAllLog();
	}

	CLog.saveAllLog=function(){
		LocalStorage.setItem("CLog_AllLog",CLog._lastLogTxt+"\r\n"+CLog._logArray.join("\r\n"));
	}

	CLog.getAllLog=function(){
		var allLog=LocalStorage.getItem("CLog_AllLog");
		return allLog;
	}

	CLog.downAllLog=function(newFileName){
		var file="data:text/plain;charset=utf-8,";
		var allLog=CLog.getAllLog();
		var encodedAllLog=encodeURIComponent(allLog);
		file+=encodedAllLog;
		var a=document.createElement('a');
		a.href=file;
		a.target='_blank';
		a.download=newFileName || CLog.logFilename;
		document.body.appendChild(a);
		a.click();
		a.remove();
	}

	CLog.alert=function(text){
		if(!LayaEX.isWXAPP)window.alert(text);
	}

	CLog.stack=function(text){
		try{
			throw new Error();
		}
		catch(error){
			console.log(text,error.stack);
		}
	}

	CLog.maxCount=-1;
	CLog.isShowConsole=true;
	CLog.useTimestamps=true;
	CLog.logFilename='log.txt';
	CLog._logArray=[];
	CLog._lastLogTxt="";
	CLog._isWeinre=false;
	CLog._httpRootUrl=null;
	CLog._version=null;
	CLog._playerInfoId=null;
	CLog.isInitVConsole=false;
	CLog.tempMsg=null;
	CLog.saveTimer=0;
	return CLog;
})()


/**
*facebook接口类
*@author shuhao.li
*/
//class FBInterfaceMgr
var FBInterfaceMgr=(function(){
	var InterfaceLog;
	function FBInterfaceMgr(){
		this._advertising=null;
	}

	__class(FBInterfaceMgr,'FBInterfaceMgr');
	var __proto=FBInterfaceMgr.prototype;
	/**
	*获取玩家FB上的ID
	*@return
	*/
	__proto.getPlayerId=function(){
		return Browser.window.FBInstant.player.getID();
	}

	/**
	*获得玩家FB上的名字
	*@return
	*/
	__proto.getPlayerName=function(){
		return Browser.window.FBInstant.player.getName();
	}

	/**
	*获得玩家在FB上的头像
	*@return
	*/
	__proto.getPlayerPhoto=function(){
		return Browser.window.FBInstant.player.getPhoto();
	}

	/**
	*获取游戏好友列表
	*@param $callback :回调方法,回调参数 players:Object={{openId:getID(),名字:getName(),头像:getPhoto()},{},{}... }
	*
	*用法:
	*FBInterfaceMgr.instance.getConnectedPlayersAsync(Handler.create(this,this.getFacebookFriendCallback));
	*
	*function getFacebookFriendCallback(players:Object):void {
		*var data:Object,openId:String;
		*for each(var player:*in players)
		*{
			*data={};
			*data.openId=player.id;
			*data.nickName=player.name;
			*data.avatar=player.photo;
			*}
		*}
	*/
	__proto.getConnectedPlayersAsync=function($callback){
		Browser.window.FBInstant.player.getConnectedPlayersAsync().then(
		function($players){
			var obj,data={};;
			for (var i=0,len=$players.length;i < len;i++){
				obj=$players[i];
				data[ obj.getID()]={id:obj.getID(),name:obj.getName(),photo:obj.getPhoto()};
			}
			$callback.runWith(data);
		});
	}

	/**
	*检查支付接口是否可用
	*/
	__proto.payOnReady=function(){}
	/**
	*提供客户端支持的 API 函数的列表
	*/
	__proto.getSupportedAPIs=function(){
		return Browser.window.FBInstant.getSupportedAPIs();
	}

	/**
	*是否支持支付,需要初始化时调用一次 payOnReady()才能赋值
	*@return true:支持 false:不支持,
	*/
	__proto.getIsOpenPay=function(){
		return Browser.window.fbConfig.isOpenPay;
	}

	/**
	*支付
	*@param $productID :商品ID
	*@param $callback :购买成功回调
	*@param $errorCallback :支付失败回调
	*
	*常规做法:
	*客户端调用 FBInstant.payments.purchaseAsync 支付接口成功后返回 purchase 对象
	*然后把 purchase.signedRequest 发给服务器做校验
	*服务器校验后告诉客户端成功失败,然后客户端调用 FBInstant.payments.consumePurchaseAsync 接口把购买的订单消耗掉
	*登录时调用 FBInstant.payments.getPurchasesAsync 接口检查是否有未消费的订单,把所有订单告诉服务器,然后做校验流程兑换物品
	*/
	__proto.purchaseAsync=function($productID,$callback,$errorCallback){
		SocketManager.Instance.sendStringMsg('准备调用接口');
		Browser.window.FBInstant.payments.purchaseAsync({productID:$productID,developerPayload:'foobar'}).then(
		function(purchase){
			SocketManager.Instance.sendStringMsg('支付API成功返回:'+JSON.stringify(purchase));
			console.log(purchase);
			var data={
				developerPayload :purchase.developerPayload
				,paymentID :purchase.paymentID
				,productID :purchase.productID
				,purchaseTime :purchase.purchaseTime
				,purchaseToken :purchase.purchaseToken
				,signedRequest :purchase.signedRequest
			};
			$callback.runWith(data);
		}).catch(
		function(err){
			SocketManager.Instance.sendStringMsg('支付API失败:'+err.message);
			console.log('Error purchaseAsync() >> 支付失败: '+err.message);
			$errorCallback.runWith(err);
		});
	}

	/**
	*获取玩家未消费的所有购买商品
	*@param $callback :获得物品回调
	*/
	__proto.getPurchasesAsync=function($callback){
		Browser.window.FBInstant.payments.getPurchasesAsync().then(
		function(purchases){
			console.log("getPurchasesAsync complete:"+purchases);
			$callback.runWith([purchases]);
		});
	}

	/**
	*消费当前玩家拥有的特定购买商品
	*@param $purchaseToken :应消费的购买商品的 购买口令
	*@param $callback :消费成功回调
	*/
	__proto.consumePurchaseAsync=function($purchaseToken,$callback){
		Browser.window.FBInstant.payments.consumePurchaseAsync($purchaseToken).then(
		function(){
			$callback.run();
		});
	}

	/**
	*拉取商品列表
	*@param $callback
	*/
	__proto.getCatalogAsync=function($callback){
		Browser.window.FBInstant.payments.getCatalogAsync().then(
		function($catalog){
			console.log($catalog);
			var obj,data={};;
			for (var i=0,len=$catalog.length;i < len;i++){
				obj=$catalog[i];
				data[ obj.productID]={
					productID:obj.productID
					,title:obj.title
					,description:obj.description
					,imageURI:obj.imageURI
					,price:obj.price
					,priceCurrencyCode:obj.priceCurrencyCode
				};
			}
			$callback.runWith(data);
		}).catch(
		function(err){
			console.log('Error getCatalogAsync() >> 拉取商品列表失败: '+err.message);
		});
	}

	/**
	*预加载广告
	*@param $callback :加载成功回调
	*@param $errorCallback :加载失败回调
	*
	*用法:
	*FBInterfaceMgr.instance.getRewardedVideoAsync(Handler.create(this,function(flag:int):void {
		*FBInterfaceMgr.instance.showAsync(Handler.create(...));
		*}));
	*PS:
	*建议游戏刚登录的时候调用一次此预加载方法,再后续所有调用广告都调用 showAsync()方法
	*/
	__proto.getRewardedVideoAsync=function($callback,$errorCallback){
		var _$this=this;
		console.log("getRewardedVideoAsync() >> 执行预加载广告");
		Browser.window.FBInstant.getRewardedVideoAsync(Browser.window.fbConfig.myPlacementId).then(
		function(rewardedVideo){
			if(rewardedVideo){
				console.log('开始加载广告');
				_$this._advertising=rewardedVideo;
				return _$this._advertising.loadAsync();
			}
			else {
				this._advertising=null;
				console.log('rewardedVideo is undefined');
			}
		}).then(
		function(){
			console.log('getRewardedVideoAsync() >> 广告加载完成');
			$callback && $callback.run();
		}).catch(
		function(err){
			this._advertising=null;
			console.log('Error getRewardedVideoAsync() >> 广告加载失败: '+err.message);
			$errorCallback && $errorCallback.runWith(err);
		});
	}

	/**
	*播放广告
	*@param $callback :播放完成触发回调
	*@param $errorCallback :播放失败触发回调
	*
	*用法:
	*FBInterfaceMgr.instance.showAsync(Handler.create(...));
	*/
	__proto.showAsync=function($callback,$errorCallback){
		var self=this;
		if(self._advertising){
			self._advertising.showAsync().then(
			function(){
				console.log('showAsync() >> 广告播放完成');
				$callback.run();
				self._advertising=null;
				self.getRewardedVideoAsync(null,null);
			}).catch(
			function(err){
				console.log('Error showAsync() >> 广告播放失败: '+err.message);
				self._advertising=null;
				self.getRewardedVideoAsync(null,null);
				$errorCallback && $errorCallback.run();
			});
		}
		else {
			self.getRewardedVideoAsync(Handler.create(self,self.showAsync),Handler.create(self,function(err){
				self._advertising=null;
				$errorCallback && $errorCallback.run();
			}));
		}
	}

	__getset(1,FBInterfaceMgr,'ins',function(){return FBInterfaceMgr._instance;});
	__static(FBInterfaceMgr,
	['_instance',function(){return this._instance=new FBInterfaceMgr();}
	]);
	FBInterfaceMgr.__init$=function(){
		//class InterfaceLog
		InterfaceLog=(function(){
			/**
			*接口提示类
			*/
			function InterfaceLog(){}
			__class(InterfaceLog,'');
			InterfaceLog.log=function($tipsStr){
				TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),$tipsStr);
			}
			return InterfaceLog;
		})()
	}

	return FBInterfaceMgr;
})()


//class LayaEX
var LayaEX=(function(){
	function LayaEX(){}
	__class(LayaEX,'LayaEX');
	__getset(1,LayaEX,'isFaceBook',function(){
		if(LayaEX._isFaceBook==null){
			LayaEX._isFaceBook=UrlParam.PARAMS["PLID"]=="fb"
		}
		return LayaEX._isFaceBook;
	});

	__getset(1,LayaEX,'isWXAPP',function(){
		if(LayaEX._isWXAPP==null){
			LayaEX._isWXAPP=window.wx&&window.wx.getSystemInfoSync()? true :false;
		}
		return LayaEX._isWXAPP;
	});

	__getset(1,LayaEX,'isTest',function(){
		if(LayaEX._isTest==null){
			if(!UrlParam.PARAMS["PLID"]){
				LayaEX._isTest=true;
			}
		}
		return LayaEX._isTest;
	});

	__getset(1,LayaEX,'isIphoneX',function(){
		if(LayaEX._isIphoneX==null){
			LayaEX._isIphoneX=window.wx&&window.wx.getSystemInfoSync()&&window.wx.getSystemInfoSync().model.indexOf("iPhone X")>=0 ? true :false;
		}
		return LayaEX._isIphoneX;
	});

	__getset(1,LayaEX,'isAndroid',function(){
		if(LayaEX._isAndroid==null){
			if (window.wx)
				LayaEX._isAndroid=window.wx&&window.wx.getSystemInfoSync()&&window.wx.getSystemInfoSync().system.indexOf("Android")>=0 ? true :false;
			else
			LayaEX._isAndroid=Browser.onAndriod;
		}
		return LayaEX._isAndroid;
	});

	LayaEX._isWXAPP=null;
	LayaEX._isIphoneX=null;
	LayaEX._isAndroid=null;
	LayaEX._isFaceBook=null;
	LayaEX._isTest=null;
	return LayaEX;
})()


/**
*该类主要负责初始化引擎相关属性，游戏相关的初始化请到MainGame里面处理
*@author chengwen.yi
*
*/
//class Main
var Main=(function(){
	function Main(){
		UrlParam.PARAMS=window.GameConfig;
		window.GameConfig=null;
		if(UrlParam.PARAMS==null){
			CLog.alert('请清理项目重新编译！');
			return;
		}
		else{
			if(LayaEX.isWXAPP){
				MiniAdpter.init();
			}
			this.____init();
		}
	}

	__class(Main,'Main');
	var __proto=Main.prototype;
	__proto.____init=function(){
		if(UrlParam.PARAMS["vconsole"]){
			CLog.isInitVConsole=true;
		};
		var _httpRootUrl;
		if(LayaEX.isWXAPP){
			_httpRootUrl=UrlParam.PARAMS["WEB_HTTP"]+UrlParam.PARAMS["HTTP_HOST"];
			}else{
			_httpRootUrl=UrlParam.PARAMS["WEB_HTTP"]+UrlParam.PARAMS["HTTP_HOST"]+(UrlParam.PARAMS["HTTP_PORT"] ? ":"+UrlParam.PARAMS["HTTP_PORT"] :"");
		}
		CLog.init(UrlParam.PARAMS.weinre,_httpRootUrl,UrlParam.version);
		if(LocalStorage.support){
			var lastErrorLog=LocalStorage.getItem("CLog_ErrorLog");
			if(lastErrorLog){
				LocalStorage.removeItem("CLog_ErrorLog");
				CLog.console_log("%c------------------------------------------------上一次出错的日志------------------------------------------------","background: #BBBBBB; color: #FF0000");
				CLog.console_log("%c"+lastErrorLog,"background: #DDDDDD; color: #FF1111")
				CLog.console_log("%c-----------------------------------------------上一次出错的日志END------------------------------------------------","background: #BBBBBB; color: #FF0000");
			}
		}
		this.init(UrlParam.PARAMS);
	}

	__proto.init=function(GameConfig){
		console.log("Laya.version:"+Laya.version);
		if(LayaEX.isWXAPP){
			Config.preserveDrawingBuffer=true;
			URL.rootPath=URL.basePath=GameConfig.rootPath;
		}
		else{
			if(GameConfig.rootPath){
				URL.rootPath=URL.basePath=GameConfig.rootPath;
			}
		}
		if(GameConfig.isCanvas){
			console.log("开启Canvas模式");
			Laya.init(1136,640);
		}
		else{
			console.log("开启WebGL模式");
			Laya.init(1136,640,WebGL);
		}
		if(GameConfig.autoRelease){
			console.log("开启内存自动释放模式");
			ResourceManager.currentResourceManager.autoRelease=true;
			ResourceManager.currentResourceManager.autoReleaseMaxSize=1024 *1024 *160;
		}
		if(!LayaEX.isWXAPP){
			UIAdjust.ins.init(Laya.stage,false);
		}
		else{
			var appid=window.MYAPPID || 'wx7017f3b4aeeab37d';
			var openId=window.wxutil ? window.wxutil.openId():'';
			mgplugin.enterReport(appid,openId);
			console.log("渠道上报 appid:"+appid+",openId:"+openId);
		}
		Laya.stage.screenMode="horizontal";
		Laya.stage.bgColor="#000000";
		Laya.stage.scaleMode="full";
		Laya.stage.frameRate="slow";
		Laya.stage.hitArea=new Rectangle(0,0,1136,640);
		Laya.stage.scrollRect=new Rectangle(0,0,1136,640);
		var mainGame=new MainGame();
		mainGame.zOrder=1000;
		Laya.stage.addChild(mainGame);
		if(LayaEX.isWXAPP){
			setTimeout(function(){
				var width=window.innerWidth;
				var height=window.innerHeight;
				var devicePixelRatio=window.devicePixelRatio;
				window.canvas.width=width *devicePixelRatio;
				window.canvas.height=height *devicePixelRatio;
				window.canvas.style.width=width;
				window.canvas.style.height=height;
			},800);
		}
	}

	return Main;
})()


/**
*序列帧动画模板类
*@author chengwen.yi
*
*/
//class manager.AnimationTemplet
var AnimationTemplet=(function(){
	function AnimationTemplet(aniUrl){
		this.isComplete=false;
		this.aniUrl=null;
		this.methods=[];
		this._frames=null;
		this.aniUrl=aniUrl;
		if(Laya.loader.getRes(aniUrl)){
			this._onLoadCompleted(aniUrl);
		}
		else{
			Laya.loader.load(aniUrl,Handler.create(this,this._onLoadCompleted,[aniUrl]),null,"atlas");
		}
	}

	__class(AnimationTemplet,'manager.AnimationTemplet');
	var __proto=AnimationTemplet.prototype;
	__proto._onLoadCompleted=function(aniUrl){
		for(var i=0;i < this.methods.length;i++){
			this.invoke(this.methods[i]);
		}
		this.methods.length=0;
		this.isComplete=true;
	}

	__proto.onCallBack=function(onComplete){
		if(this.isComplete){
			this.invoke(onComplete);
			}else{
			this.methods.push(onComplete);
		}
	}

	__proto.invoke=function(onComplete){
		if((onComplete instanceof laya.utils.Handler )){
			onComplete.runWith([this.frames]);
		}
		else{
			onComplete(this.frames);
		}
	}

	__proto.destroy=function(releaseResource){
		(releaseResource===void 0)&& (releaseResource=true);
		Laya.loader.clearRes(this.aniUrl);
		if(this._frames){
			this._frames.length=0;
		}
		this._frames=null;
	}

	__getset(0,__proto,'frames',function(){
		if(this._frames==null){
			this._frames=Animation.createFrames(this.aniUrl,null);
		}
		return this._frames;
	});

	return AnimationTemplet;
})()


//class manager.UrlReference
var UrlReference=(function(){
	function UrlReference(){}
	__class(UrlReference,'manager.UrlReference');
	var __proto=UrlReference.prototype;
	__proto.addReference=function(url){
		if(!UrlReference._reference[url]){
			UrlReference._reference[url]=0;
		}
		++UrlReference._reference[url];
	}

	__proto.removeReference=function(url){
		if(UrlReference._reference[url]){
			--UrlReference._reference[url];
			if(UrlReference._reference[url] <=0){
				delete UrlReference._reference[url];
				this.clearReferenceRes(url);
			}
		}
	}

	__proto.getReference=function(url){
		return UrlReference._reference[url] ? UrlReference._reference[url] :0;
	}

	__proto.clearReferenceRes=function(url){
		Laya.loader.clearRes(url);
	}

	__proto.wxAutoGC=function(){
		UrlReference.waitGCNum++;
		if(UrlReference.waitGCNum >=8){
			UrlReference.waitGCNum=0;
			GC.triggerGC(0.6,"动画");
		}
	}

	UrlReference._reference={};
	UrlReference.waitGCNum=0;
	return UrlReference;
})()


/**
*摄像机
*@author weiqiang.huang
*
*/
//class manager.CameraManager
var CameraManager=(function(){
	function CameraManager(){
		this._map=null;
		this._moveTween=null;
		this.closeCamera=false;
		this._isMoving=false;
		/**
		*根据点进行地图位置偏移
		*/
		this._mapX=NaN;
		this.target=new Point();
	}

	__class(CameraManager,'manager.CameraManager');
	var __proto=CameraManager.prototype;
	__proto.setup=function($map){
		this._map=$map;
	}

	/**
	*聚焦某一点
	*
	*/
	__proto.focusPoint=function(posX,posY){}
	__proto.setCloseCamera=function(isClose){
		this.closeCamera=isClose;
	}

	__proto.setMapPos=function(posX,posY,offsetX,offsetY,duration,isBorder,complete){
		(offsetX===void 0)&& (offsetX=0);
		(offsetY===void 0)&& (offsetY=0);
		(duration===void 0)&& (duration=500);
		(isBorder===void 0)&& (isBorder=false);
		if(this._map && !this.closeCamera){
			posX=posX *this._map.scaleX;
			posY=posY *this._map.scaleY;
			offsetX=offsetX *this._map.scaleX;
			offsetY=offsetY *this._map.scaleY;
			var _movePos=this._getMapPos(Math.floor(posX-ResizeMgr.bestFitWidth/2)*-1,Math.floor(posY-ResizeMgr.bestFitHeight/2)*-1);
			Laya.timer.callLater(this,this.callback,[_movePos,duration,complete]);
		}
	}

	__proto.callback=function(movePos,duration,complete){
		var _$this=this;
		this._mapX=movePos.x;
		this._moveTween=Tween.to(this._map,{x:movePos.x,y:movePos.y},duration,Ease.linearNone,Handler.create(this,function(){
			_$this._moveTween=null;
			if(complete){
				complete.run();
			}
			_$this._isMoving=false;
		}));
	}

	__proto.getMapPos=function($x,$y,isBorder){
		(isBorder===void 0)&& (isBorder=false);
		if(this._map){
			$x=$x *this._map.scaleX;
			$y=$y *this._map.scaleY;
			var halfW=Math.floor((isBorder ? this._map.adaptEdgeWidth :this._map.width)>>1)*this._map.scaleX;
			var halfH=Math.floor((isBorder ? this._map.adaptEdgeHeight :this._map.height)>>1)*this._map.scaleY;
			var mapX=Math.floor(halfW-$x);
			var mapY=Math.floor(halfH-$y);
			var _x=mapX > halfW ? halfW :mapX;
			var _y=mapY > halfH ? halfH :mapY;
			var rx=Math.floor(ResizeMgr.bestFitWidth-halfW);
			var ry=Math.floor(ResizeMgr.bestFitHeight-halfH);
			if(_x < rx)_x=rx;
			if(_y < ry)_y=ry;
			this.target.x=Math.floor(_x);
			this.target.y=Math.floor(_y);
		}
		return this.target;
	}

	__proto._getMapPos=function($x,$y){
		if(this._map){
			if($x>0){
				$x=0;
				}else if($x+this._map.width *this._map.scaleX < ResizeMgr.bestFitWidth){
				$x=ResizeMgr.bestFitWidth-this._map.width *this._map.scaleX;
			}
			if($y>0){
				$y=0;
				}else if($y+this._map.height *this._map.scaleY < ResizeMgr.bestFitHeight){
				$y=ResizeMgr.bestFitHeight-this._map.height *this._map.scaleY;
			}
			$x=$x+this._map.width/2 *this._map.scaleX;
			$y=$y+this._map.height/2 *this._map.scaleY;
			this.target.x=Math.floor($x);
			this.target.y=Math.floor($y);
		}
		return this.target;
	}

	__proto.remove=function(){
		if(this._moveTween){
			this._moveTween.clear();
			this._moveTween=null;
		}
		if(this._map)Laya.timer.clearAll(this._map);
		this._map=null;
	}

	__proto.removeTween=function(){
		if(this._moveTween){
			this._moveTween.clear();
			this._moveTween=null;
		}
	}

	__getset(0,__proto,'isMoving',function(){
		return this._isMoving;
	});

	__getset(1,CameraManager,'instance',function(){
		if(CameraManager._instance==null)
			CameraManager._instance=new CameraManager();
		return CameraManager._instance;
	});

	CameraManager._instance=null;
	return CameraManager;
})()


//class manager.GC
var GC=(function(){
	function GC(){}
	__class(GC,'manager.GC');
	GC.triggerGC=function(level,describe){
		(level===void 0)&& (level=0.1);
		(describe===void 0)&& (describe="");
		var curTimer=Browser.now();
		if(curTimer-GC.lastTimer > (1.1-level)*10000||level==1){
			if(LayaEX.isWXAPP)wx.triggerGC();
			console.log("自动GC一次");
			GC.lastTimer=curTimer;
		}
		else{
			console.log((describe ? (describe+"触发检测是否要GC,"):"")+"离上一次GC间隔太短被忽略");
		}
	}

	GC.lastTimer=0;
	return GC;
})()


/**
*@author baohua.chen
*创建时间：2017-10-16 下午9:28:37
*
*/
//class manager.JSMgr
var JSMgr=(function(){
	function JSMgr(){
		//fb插屏广告ID
		this.rootUrl=null;
		/**
		*好友数据列表
		*/
		this.friengAry=[];
		this.friendObj=null;
		this.rootUrl=UrlParam.PARAMS["WEB_HTTP"]+UrlParam.PARAMS["HTTP_HOST"]+"/client/";
	}

	__class(JSMgr,'manager.JSMgr');
	var __proto=JSMgr.prototype;
	__proto.setUp=function(){
		this.addEvent();
	}

	// else if(UrlParam.PARAMS[UrlParam.PLID]=="fb")JSMgr.instance.getFBFriendsList();
	__proto.addEvent=function(){
		SocketManager.Instance.on(0x0060,this,this.onMidsPara);
	}

	__proto.onMidsPara=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.MidasParaReqMsg,pkg);
		this.sendMidasInfo();
	}

	__proto.sendMidasInfo=function(){
		var sessionid="openid";
		var sessiontype="kp_actoken";
		var openid=PlayerInfo.instance.openid;
		var openkey=PlayerInfo.instance.accesstoken;
		var accesstoken=PlayerInfo.instance.accesstoken;
		var pf;
		if(UrlParam.PARAMS["PLID"]=="wx"){
			pf=this.PlatId==2?"iap":"android";
			}else{
			pf=this.PlatId==2?"qq_m_qq-2001-iap-2011":"ddt_m_sq-android-html5";
		};
		var pfkey="pfKey";
		var zoneid="1";
		var plateformType=this.PlatId==2?1:2;
		var platform=UrlParam.PARAMS["PLID"]=="wx"?2:1;
		SocketManager.Instance.out.sendMidasRecharge(sessionid,sessiontype,openid,openkey,accesstoken,pf,pfkey,zoneid,plateformType,platform);
	}

	__proto.stickyStaeChange=function(){
		EventMgr.ins.event('GAME_ISSTICKY_CHAGNGE');
	}

	__proto.wxBuyGoodsBack=function(){
		var sessionid="";
		var sessiontype="";
		var openid=PlayerInfo.instance.openid;
		var openkey=PlayerInfo.instance.accesstoken;
		var accesstoken=PlayerInfo.instance.accesstoken;
		var pf=this.PlatId==2?"iap":"android";
		var pfkey="pfKey";
		var zoneid="1";
		var plateformType=this.PlatId==2?1:2;
		var platform=2;
		SocketManager.Instance.out.sendRecharge(sessionid,sessiontype,openid,openkey,accesstoken,pf,pfkey,zoneid,plateformType,platform,0);
	}

	/**
	*获取当前平台ID
	*/
	__getset(0,__proto,'PlatId',function(){
		if(Browser.onMobile){
			if(Browser.onIOS){
				return 2;
			}
			else if(Browser.onAndriod){
				return 1;
			}
		}
		return 0;
	});

	__getset(1,JSMgr,'instance',function(){
		if(JSMgr._instance==null){
			JSMgr._instance=new JSMgr();
		}
		return JSMgr._instance;
	});

	JSMgr.randomContent=function(type){
		(type===void 0)&& (type=1);
		var min=1;
		var max=0;
		var countStr="";
		if(type==1){
			max=8;
			countStr="121000";
			}else if(type==2){
			max=5;
			countStr="121001";
			}else if(type==3){
			max=8;
			countStr="121002";
		};
		var number=JSMgr.randRange(min,max);
		var id=number < 10 ? "0"+number :number+"";
		return LanguageMgr.Ins.GetLan(countStr+id);
	}

	JSMgr.fbRandomContent=function(type,socre){
		(type===void 0)&& (type=0);
		(socre===void 0)&& (socre=0);
		var min=1;
		var max=0;
		var countStr="";
		var name=PlayerInfo.instance.qqNickName;
		if(type==1){
			countStr=LanguageMgr.Ins.GetLan("12200003",name,socre);
			}else{
			countStr=LanguageMgr.Ins.GetLan(JSMgr.randRange(12200001,12200002).toString(),name);
		}
		return countStr;
	}

	JSMgr.randomTitle=function(minNum,maxNum){
		var number=JSMgr.randRange(minNum,maxNum);
		var id=number < 10 ? "0"+number :number+"";
		var data=LanguageMgr.Ins.GetLan("120000"+id).split("|");
		return data;
	}

	JSMgr.randomImage=function(index,minNum,maxNum){
		var url="";
		var number=JSMgr.randRange(minNum,maxNum);
		var id=number < 10 ? "0"+number :number.toString();
		var imgName=index+"0"+id;
		if(UrlParam.PARAMS["PLID"]=="fb"){
			imgName=JSMgr.randRange(5001,5008).toString();
		}
		if(UrlParam.PARAMS["PLID"]=="wx"){
			url=manager.JSMgr.instance.rootUrl+"assets/textrue/wxshared/"+imgName+".jpg";
		}
		else if(UrlParam.PARAMS["PLID"]=="fb"){
			url="assets/textrue/fbshared/"+imgName+".png";
		}
		return url;
	}

	JSMgr.randRange=function(minNum,maxNum){
		return (Math.floor(Math.random()*(maxNum-minNum+1))+minNum);
	}

	JSMgr.replaceGame=function(){
		ConnectMgr.ins.setServerClose();
		if(UrlParam.PARAMS["PLID"]=="fb"){
			if(Browser.onPC){
				Browser.window.location.replace(Browser.window.location.href);
				}else{
				FBInstant.quit();
			}
			}else{
			Browser.window.location.replace(Browser.window.location.href);
		}
	}

	JSMgr.sendBase64Url=function(base64Url,callHander){
		var _callHander=callHander;
		var requestUrl="https://"+UrlParam.PARAMS["HTTP_HOST"]+"/Webhook/imageupload";
		var httpRequest=new Browser.window.XMLHttpRequest();
		httpRequest.onerror=function (e){
			console.log("onerror"+e);
		}
		httpRequest.onload=function (e){
			if(_callHander)_callHander.run();
		}
		httpRequest.open("post",requestUrl,true);
		var formData=new FormData();
		formData.append("player_id",PlayerInfo.instance.openid);
		formData.append("base64",base64Url);
		httpRequest.send(formData);
	}

	JSMgr.getRandomTipsArray=function(configId){
		var configData=ConfigModel.getConfigData(configId);
		if(!configData)
			return [];
		var data=configData.ConfigValue.split(",");
		var outputArr=data.slice();
		var i=outputArr.length;
		while (i){
			outputArr.push(outputArr.splice(int(Math.random()*i--),1)[0]);
		}
		return outputArr;
	}

	JSMgr.convertUI=function(uiView){
		if ((typeof uiView=='string')){
			var temp=uiView;
			var byte=Base64Tool.decodeUint8Array(temp);
			var inflate=new Zlib.Inflate(byte);
			var json=String.fromCharCode.apply(null,inflate.decompress());
			return JSON.parse(json);
		}
		return uiView;
	}

	JSMgr._instance=null;
	JSMgr.a_appid="1450013188";
	JSMgr.i_appid="1450013177";
	JSMgr.wx_pf="ddt_m_sq-iap-html5";
	JSMgr.qq_a_pf="ddt_m_sq-android-html5";
	JSMgr.qq_i_pf="qq_m_qq-2001-iap-2011";
	JSMgr.wx_a_appid="1450013231";
	JSMgr.wx_i_appid="1450013232";
	JSMgr.wx_a_pf="android";
	JSMgr.wx_i_pf="iap";
	JSMgr.fb_placementID="327842234302652_457693164650891";
	JSMgr.placementObj=[];
	return JSMgr;
})()


/**
*主要供切换场景时,清理散图资源
*@author chengwen.yi
*
*/
//class manager.LoaderResMgr
var LoaderResMgr=(function(){
	function LoaderResMgr(){}
	__class(LoaderResMgr,'manager.LoaderResMgr');
	LoaderResMgr.clearTextureAndParticleRes=function(){
		for(var url in Loader.loadedMap){
			if(url.indexOf("assets/partide/")!=-1 || url.indexOf("assets/textrue/")!=-1){
				Loader.clearRes(url);
			}
		}
	}

	LoaderResMgr.loadLanguageRes=function(complete){
		if(LoaderResMgr.loadGroupName){
			Laya.loader.clearResByGroup(LoaderResMgr.loadGroupName);
			LoaderResMgr.loadGroupName=null;
		}
		LoaderResMgr.loadGroupName="LanguageRes_"+LanguageMgr.Ins.country;
		var res=[
		{url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/hall.atlas",type:"atlas"},
		{url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/setting.atlas",type:"atlas"},
		{url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/skill.atlas",type:"atlas"},
		{url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/common.atlas",type:"atlas"},
		{url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/playerMessage.atlas",type:"atlas"},];
		Laya.loader.load(res,complete,null,null,1,true,LoaderResMgr.loadGroupName);
	}

	LoaderResMgr.clearLanguageRes=function(){
		if(LoaderResMgr.loadGroupName){
			Laya.loader.clearResByGroup(LoaderResMgr.loadGroupName);
			LoaderResMgr.loadGroupName=null;
		}
	}

	LoaderResMgr.loadGroupName=null;
	return LoaderResMgr;
})()


/**
*二维码生成
*@author chengwen.yi
*
*/
//class manager.QRMgr
var QRMgr=(function(){
	function QRMgr(){
		this._isInitComplete=false;
	}

	__class(QRMgr,'manager.QRMgr');
	var __proto=QRMgr.prototype;
	__proto.init=function(handler){
		var _$this=this;
		importJS("js/qr/qrcode.min.js",function(){
			_$this._isInitComplete=true;
			handler.run();
		})
	}

	__proto.toQRBase64=function(url,w,h,callback){}
	__getset(1,QRMgr,'ins',function(){
		if(QRMgr._ins==null){
			QRMgr._ins=new QRMgr();
		}
		return QRMgr._ins;
	});

	QRMgr._ins=null;
	return QRMgr;
})()


//class manager.SkeletonTemplet
var SkeletonTemplet=(function(){
	function SkeletonTemplet(skUrl,isErrorReload){
		this.isComplete=false;
		this.isNew=false;
		this.templet=null;
		this.skUrl=null;
		this.methods=[];
		this.isErrorReload=true;
		this.skUrl=skUrl;
		if(skUrl.indexOf("assets/animation/guide/")!=-1){
			this.isNew=true;
		}
		this.isErrorReload=isErrorReload;
		this.templet=new Templet();
		this.templet.on("complete",this,this._parseComplete);
		this.templet.on("error",this,this._onError);
		this.templet.loadAni(skUrl);
	}

	__class(SkeletonTemplet,'manager.SkeletonTemplet');
	var __proto=SkeletonTemplet.prototype;
	__proto._parseComplete=function(){
		for(var i=0;i < this.methods.length;i++){
			this.invoke(this.methods[i]);
		}
		this.methods.splice(0);
		this.isComplete=true;
	}

	__proto._onError=function(){
		console.log("load error:"+this.skUrl);
		if(this.isErrorReload){
			this.templet.loadAni(this.skUrl);
		}
	}

	__proto.onCallBack=function(onComplete){
		if(this.isComplete){
			this.invoke(onComplete);
			}else{
			this.methods.push(onComplete);
		}
	}

	__proto.invoke=function(onComplete){
		if((onComplete instanceof laya.utils.Handler )){
			onComplete.runWith([this.templet]);
		}
		else{
			onComplete(this.templet);
		}
	}

	__proto.destroy=function(releaseResource){
		(releaseResource===void 0)&& (releaseResource=true);
		this.templet.off("complete",this,this._parseComplete);
		this.templet.off("error",this,this._onError);
		Laya.loader.clearRes(this.skUrl);
		if(releaseResource)this.templet.releaseResource(true);
		this.templet.destroy();
		this.templet=null;
	}

	return SkeletonTemplet;
})()


/**
*提示框管理类
*@author weiqiang.huang
*
*/
//class manager.TipsManager
var TipsManager=(function(){
	function TipsManager(){
		this._y=0;
		this.topicMsgInfo=null;
	}

	__class(TipsManager,'manager.TipsManager');
	var __proto=TipsManager.prototype;
	__proto.init=function(){
		this._y=640 >> 1;
		SocketManager.Instance.on(0x0090,this,this.onTopicMsg);
	}

	/**
	*系统公告
	*@param pkg
	*/
	__proto.onTopicMsg=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.chat.TopicMsg,pkg);
		this.topicMsgInfo=res;
		if (res.type==1){
			UIMgr.ins.openView("GameNoticeTips");
		}
	}

	__proto.showBuyCurrency=function(itemId){
		var itemName=ItemModel.getItemName(itemId);
		if (itemName){
			if(!ShopMgr.ins.IS_OPEN_PAY && itemId==-20){
				manager.TipsManager.Instance().showLanTips(10001178);
			}
			manager.TipsManager.Instance().showAlertDialog(
			LanguageMgr.Ins.GetLan("9007368")
			,LanguageMgr.Ins.GetLan("14300142",itemName)
			,LanguageMgr.Ins.GetLan("9007390")
			,LanguageMgr.Ins.GetLan("9007389")
			,Handler.create(this,function(){
				switch(itemId){
					case-10:
						ShopMgr.ins.selectedIndex=1;
						break ;
					case-20:
						ShopMgr.ins.selectedIndex=4;
						break ;
					case-60:
						ShopMgr.ins.selectedIndex=2;
						break ;
					}
				UIMgr.ins.openView("ShopView");
			}));
		}
	}

	/**
	*标准提示框
	*@param title 标题
	*@param content 内容
	*@param yes 确认按钮文字
	*@param no 取消按钮文字
	*@param yesCallBack 确认回调函数
	*@param noCallBack 取消回调函数
	*/
	__proto.showAlertDialog=function(title,content,yes,no,yesCallBack,noCallBack,closeCallBack){
		(yes===void 0)&& (yes="");
		(no===void 0)&& (no="");
		UIMgr.ins.openView("AlertDialog",Handler.create(this,function(view){
			view.init(title,content,yes,no,yesCallBack,noCallBack,closeCallBack);
		},null,false));
	}

	/**
	*添加 沉默 提示框
	*/
	__proto.addSilentDialog=function(data){
		UIMgr.ins.openView("AlertDialog",Handler.create(this,function(view){
			view.setBySilence(data)
		},null,false));
	}

	/**
	*添加 物品 提示框
	*/
	__proto.addItemTip=function(item,e){
		var tipView=new ItemTipView(item,e)
		return tipView
	}

	__proto.showLanTips=function(lanId,__args){
		var args=[];for(var i=1,sz=arguments.length;i<sz;i++)args.push(arguments[i]);
		var text=LanguageMgr.Ins.GetLan.apply(LanguageMgr.Ins,[lanId].concat(args));
		this.showTips(text);
	}

	__proto.showTips=function(value,isGuide){
		(isGuide===void 0)&& (isGuide=false);
		var self=this;
		self.actionShowTips({tipsText:value,isGuide:isGuide});
	}

	// private const maxNum:int=5;//最大保存提示数量
	__proto.actionShowTips=function(data){
		var self=this;
		var tipsText=data.tipsText;
		var isGuide=data.isGuide;
		var tipContainer=new Sprite;
		tipContainer.mouseThrough=tipContainer.mouseEnabled=false;
		tipContainer.y=640 >> 1;
		var tipUi=new MessageTipUI();
		tipUi.lab_content.text=tipsText;
		tipContainer.addChild(tipUi);
		tipContainer.y=this._y;
		tipContainer.alpha=1;
		if (isGuide){
			this.showGuideTip(tipContainer,tipUi);
		}
		else{
			this.showTip(tipContainer,tipUi);
		}
	}

	__proto.showGuideTip=function(tipContent,tipUi,duration){
		(duration===void 0)&& (duration=500);
		this.addTo(tipContent,tipUi);
		var tempY=(640-tipUi.img_tipsBg.height)/ 2;
		Tween.to(tipContent,{y:tempY-30,alpha:0},duration,null,Handler.create(this,this.hide,[tipContent]),2000)
	}

	__proto.showTip=function(tipContent,tipUi,duration){
		(duration===void 0)&& (duration=500);
		this.addTo(tipContent,tipUi);
		var tempY=(640-tipUi.img_tipsBg.height)/ 2;
		Tween.to(tipContent,{y:tempY-30,alpha:0},duration,null,Handler.create(this,this.hide,[tipContent]),500);
	}

	__proto.addTo=function(tipContent,tipUi){
		LayerMgr.ins.flyWordLayer.addChild(tipContent);
		tipContent.x=(ResizeMgr.bestFitWidth-tipUi.img_tipsBg.width)/ 2;
	}

	//1136
	__proto.hide=function(tipContent){
		tipContent && tipContent.destroy();
		tipContent=null;
	}

	TipsManager.Instance=function(){
		return TipsManager._instance=TipsManager._instance|| new TipsManager();
	}

	TipsManager._instance=null;
	return TipsManager;
})()


/**
*
*@author chengwen.yi
*
*/
//class manager.UIFactory
var UIFactory=(function(){
	function UIFactory(){
		//序列帧
		this.viewRes=null;
		this.effRes=null;
		this.loadingViewDict={};
		/**
		*加载界面资源进度条页面上点击关闭会触发该函数
		*不是真实停止加载，而是停止弹出
		*@param viewType
		*
		*/
		this.stopLoadViewDict={};
		EventMgr.ins.on("UPDATE_ALL_IMAGE",this,this.onRefreshView);
		this.onRefreshView();
	}

	__class(UIFactory,'manager.UIFactory');
	var __proto=UIFactory.prototype;
	__proto.onRefreshView=function(){
		this.viewRes={
			"Login":{"res":this.resArr("login.atlas","language/"+LanguageMgr.Ins.country+"/login.atlas"),"name":"登录信息界面"}
			,"AnimationTest":{"res":this.resArr("comp.atlas"),"name":"动作测试界面"}
			,"ShopView":{"res":this.resArr("shop.atlas","language/"+LanguageMgr.Ins.country+"/shop.atlas"),"name":"商店界面"}
			,"PlayerMessageView":{"res":this.resArr("skillItem.atlas","playerMessage.atlas","language/"+LanguageMgr.Ins.country+"/playerMessage.atlas"),"name":"角色信息界面"}
			,"PVPRoomView":{"res":this.resArr("room.atlas","language/"+LanguageMgr.Ins.country+"/room.atlas"),"name":"PVP房间界面","isCloseLoading":true}
			,"DanUpShowView":{"res":this.resArr(),"name":"多人结算","isCloseLoading":true}
			,"InviteDialog":{"res":this.resArr("language/"+LanguageMgr.Ins.country+"/room.atlas","room/invite.atlas"),"name":"邀请弹窗"}
			,"LevelUp":{"res":this.resArr("levelup.atlas","language/"+LanguageMgr.Ins.country+"/levelup.atlas"),"name":"LevelUp"}
			,"BattleWin":{"res":[],"name":"BattleWin","isCloseLoading":true}
			,"NewBattleWin":{"res":this.resArr("language/"+LanguageMgr.Ins.country+"/battle/menu/result.atlas"),"name":"NewBattleWin","isCloseLoading":true}
			,"Quest":{"res":this.resArr(
				"quest.atlas",
				"language/"+LanguageMgr.Ins.country+"/quest.atlas"),"name":"成就界面"}
			,"Ranking":{"res":this.resArr(
				"ranking.atlas",
				"language/"+LanguageMgr.Ins.country+"/ranking.atlas",
				"player/playerInfo.atlas"),"name":"排行榜界面"}
			,"CommonHelpView":{"res":this.resArr(),"name":"说明界面"}
			,"SkillSystem":{"res":this.resArr("skill.atlas","skillItem.atlas","language/"+LanguageMgr.Ins.country+"/skill.atlas"),"name":"技能界面"}
			,"CardUpdateEffectView":{"res":[],"name":"卡牌升级动画界面"}
			,"CardMessageView":{"res":[],"name":"技能界面 - 卡牌信息界面"}
			,"CardShowMessageView":{"res":[],"name":"其它卡牌信息界面"}
			,"PVPArena":{"res":this.resArr("skillItem.atlas","pvp.atlas","language/"+LanguageMgr.Ins.country+"/pvp.atlas"),"name":"竞技场"}
			,"PVPArenaInfo":{"res":[],"name":"竞技场信息"}
			,"SeasonPage":{"res":this.resArr("season.atlas","pvp.atlas","language/"+LanguageMgr.Ins.country+"/pvp.atlas","language/"+LanguageMgr.Ins.country+"/season.atlas"),"name":"赛季页面"}
			,"SeasonRank":{"res":this.resArr("season1.atlas"),"name":"赛季名人堂页面"}
			,"SeasonResult":{"res":this.resArr("season1.atlas","pvp.atlas","language/"+LanguageMgr.Ins.country+"/pvp.atlas"),"name":"赛季结算页面"}
			,"SeasonInhert":{"res":this.resArr("season1.atlas","pvp.atlas","language/"+LanguageMgr.Ins.country+"/pvp.atlas"),"name":"赛季继承页面"}
			,"RewardLimit":{"res":[],"name":"已达奖励上限"}
			,"GuildList":{"res":this.resArr("guild.atlas","language/"+LanguageMgr.Ins.country+"/guild.atlas"),"name":"公会列表界面"}
			,"GuildCreatePage":{"res":[],"name":"公会列表界面"}
			,"GuildFriendBattlePage":{"res":this.resArr(),"name":"公会战斗界面"}
			,"GuildDonatePage":{"res":this.resArr("skill.atlas","skillItem.atlas"),"name":"公会捐赠界面"}
			,"GuildNoticePage":{"res":[],"name":"公会公告界面"}
			,"ShowGetGoodsView":{"res":this.resArr("reward.atlas","language/"+LanguageMgr.Ins.country+"/reward.atlas"),"name":"显示奖励界面"}
			,"ActivityLogin":{"res":this.resArr(
				"activity/login.atlas",
				"language/"+LanguageMgr.Ins.country+"/activity/login.atlas"),"name":"登录活动界面"}
			,"EmailMainView":{"res":this.resArr("Email.atlas","language/"+LanguageMgr.Ins.country+"/Email.atlas"),"name":"邮件界面"}
			,"HelpDescriptionView":{"res":this.resArr("Email.atlas","language/"+LanguageMgr.Ins.country+"/Email.atlas"),"name":"帮助说明界面"}
			,"HtmlHelpView":{"res":this.resArr("language/"+LanguageMgr.Ins.country+"/Email.atlas"),"name":"富文本通用帮助说明界面"}
			,"LoseConnect":{"res":[],"name":"断连界面","isCloseLoading":true}
			,"PBTest":{"res":this.resArr(),"name":"PBTest"}
			,"GameNoticeTips":{"res":this.resArr(),"name":"游戏公告界面"}
			,"LoginLoseAlert":{"res":this.resArr(),"name":"登录失败界面"}
			,"QueueUpView":{"res":this.resArr("queueup.atlas","language/"+LanguageMgr.Ins.country+"/queueup.atlas"),"name":"排队界面"}
			,"AlertDialog":{"res":this.resArr(),"name":"公共提示界面"}
			,"MaxRewardDialog":{"res":this.resArr(),"name":"公共提示界面"}
			,"OnlineRewardsView":{"res":this.resArr("onlineRewards.atlas","language/"+LanguageMgr.Ins.country+"/onlineRewards.atlas"),"name":"在线奖励界面"}
			,"FriendsMainView":{"res":this.resArr("chat/hall/full/expression.atlas","player/playerInfo.atlas","friends.atlas","language/"+LanguageMgr.Ins.country+"/friends.atlas"),"name":"好友主界面"}
			,"FriendSettingView":{"res":this.resArr(),"name":"好友设置界面"}
			,"ShareGiftView":{"res":this.resArr("skillItem.atlas","shareGift.atlas","language/"+LanguageMgr.Ins.country+"/shareGift.atlas"),"name":"分享得卡界面"}
			,"FriendBattleMsgView":{"res":this.resArr(),"name":"友谊战设置界面"}
			,"FriendBattleDialog":{"res":this.resArr(),"name":"友谊战回应界面"}
			,"FriendSkillTips":{"res":this.resArr(),"name":"好友技能描述"}
			,"AddFriendView":{"res":this.resArr("friends.atlas","language/"+LanguageMgr.Ins.country+"/friends.atlas"),"name":"好友验证界面"}
			,"ChatFullView":{
				"res":this.resArr(
				"chat/hall/full.atlas",
				"chat/hall/full/expression.atlas",
				"player/playerInfo.atlas",
				"language/"+LanguageMgr.Ins.country+"/chat/hall/full.atlas"),
				"isCloseLoading":true
			}
			,"ChatSetView":{
				"res":this.resArr(
				"chat/setting.atlas",
				"language/"+LanguageMgr.Ins.country+"/chat/setting.atlas")
			}
			,"QuestExtraRewardView":{
				"res":this.resArr(
				"quest/extra.atlas",
				"language/"+LanguageMgr.Ins.country+"/quest/extra.atlas")
			}
			,"CreateUserView":{"res":this.resArr("language/"+LanguageMgr.Ins.country+"/createUser.atlas"),"name":"创建角色新界面"}
			,"ShareNewCardView":{"res":this.resArr("shareNewCard.atlas","chest.atlas","language/"+LanguageMgr.Ins.country+"/shareNewCard.atlas"),"name":"分享新卡界面"}
			,"PlayerMsgShareView":{"res":[],"name":"角色分享界面"}
			,"CreateRoleView":{"res":this.resArr("createRole.atlas","language/"+LanguageMgr.Ins.country+"/createRole.atlas"),"name":"创建角色界面","isCloseLoading":true}
			,"ShareCardsView":{"res":this.resArr("shareCards.atlas","language/"+LanguageMgr.Ins.country+"/shareCards.atlas"),"name":"分享界面"}
			,"LevelUpShareView":{"res":this.resArr("levelUpShare.atlas","language/"+LanguageMgr.Ins.country+"/levelUpShare.atlas"),"name":"升级分享界面"}
			,"ShareFbCardsView":{"res":this.resArr("shareCards.atlas","language/"+LanguageMgr.Ins.country+"/shareCards.atlas"),"name":"facebook分享界面"}
			,"ListTestView":{"res":[],"name":"正确的list使用方式例子"}
			,"ChangeCardView":{"res":[],"name":"改名and变形卡界面"}
			,"CardTips":{"res":[],"name":"改名and变形卡界面"}
			,"AdvertisingView":{"res":this.resArr("advertising.atlas"),"name":"广告界面"}
			,"AppleGameRoom":{"res":this.resArr("appleGame/room/fruit.atlas","appleGame/room/fruit/askfor.atlas","appleGame/language/"+LanguageMgr.Ins.country+"/room.atlas"),"name":"苹果作战房间界面","isCloseLoading":true}
			,"AppleGameHelp":{"res":this.resArr("appleGame/room/fruit/help.atlas"),"name":"苹果作战帮助说明界面"}
			,"LocalBattleResult":{"res":this.resArr("appleGame/fruit.atlas","appleGame/language/"+LanguageMgr.Ins.country+"/result.atlas"),"name":"苹果作战结算界面","isCloseLoading":true}
			,"ReviveView":{"res":this.resArr("appleGame/fruit.atlas"),"name":"苹果作战界面","isCloseLoading":true}
			,"BeyondFriend":{"res":this.resArr("appleGame/chaoyue.atlas","appleGame/language/"+LanguageMgr.Ins.country+"/chaoyue.atlas","appleGame/language/"+LanguageMgr.Ins.country+"/result.atlas"),"name":"超越好友","isCloseLoading":true}
		};
		this.viewRes["LevelBoxWindow"]={"res":this.resArr("levelbox.atlas","language/"+LanguageMgr.Ins.country+"/levelbox.atlas"),"name":"等级宝箱界面"}
		this.viewRes["LevelBoxRewardWindow"]={"res":this.resArr("reward.atlas","language/"+LanguageMgr.Ins.country+"/reward.atlas"),"name":"等级宝箱获得物品界面"}
		this.viewRes["CommonRewardWindow"]={"res":this.resArr("reward.atlas","language/"+LanguageMgr.Ins.country+"/reward.atlas"),"name":"通用活动获取奖励界面"}
		this.viewRes["GuildRewardWindow"]={"res":this.resArr("reward.atlas","language/"+LanguageMgr.Ins.country+"/reward.atlas"),"name":"公会捐献获得物品界面"}
		this.viewRes["MysteryShopWindow"]={"res":this.resArr("mysteryshop.atlas","language/"+LanguageMgr.Ins.country+"/mysteryshop.atlas"),"name":"神秘商店界面"}
		this.viewRes["MysteryShopAlertWindow"]={"res":this.resArr("mysteryshop.atlas","language/"+LanguageMgr.Ins.country+"/mysteryshop.atlas"),"name":"神秘商店购买提示界面"}
		this.viewRes["ChestCoinDlg"]={"res":[],"name":"商城宝箱购买界面"}
		this.viewRes["MoneyCoinDig"]={"res":[],"name":"商城金币购买界面"}
		this.viewRes["MulitBattleOpenCard"]={"res":this.resArr("battle/menu/opencard.atlas","language/"+LanguageMgr.Ins.country+"/battle/menu/opencard.atlas","hallbg.atlas","hall.atlas"),"name":"翻卡界面","isCloseLoading":true};
		this.viewRes["SettingWindow"]={"res":this.resArr("setting.atlas","language/"+LanguageMgr.Ins.country+"/setting.atlas"),"name":"设置界面"};
		this.viewRes["FriendsWindow"]={"res":this.resArr("friends.atlas","language/"+LanguageMgr.Ins.country+"/friends.atlas"),"name":"好友主界面"};
		this.viewRes["AddFriendWindow"]={"res":this.resArr("friends.atlas","language/"+LanguageMgr.Ins.country+"/friends.atlas"),"name":"添加好友"};
		this.viewRes["FriendshipWarWindow"]={"res":this.resArr("friends.atlas","language/"+LanguageMgr.Ins.country+"/friends.atlas"),"name":"友谊战邀请"};
		this.viewRes["FriendshipWarAlert"]={"res":this.resArr("friends.atlas","language/"+LanguageMgr.Ins.country+"/friends.atlas"),"name":"友谊战邀请提示"};
		this.viewRes["TreasureBoxDetailWindow"]={"res":this.resArr("chestdetail.atlas","language/"+LanguageMgr.Ins.country+"/chestDetail.atlas"),"name":"开启宝箱界面"};
		this.viewRes["TreasureBoxDetailTips"]={"res":[],"name":"宝箱Tips界面"};
		this.viewRes["PveRoomView"]={"res":this.resArr("pve.atlas","language/"+LanguageMgr.Ins.country+"/pve.atlas"),"name":"PVE房间"};
		this.viewRes["PveResultWinView"]={"res":this.resArr("pveresult.atlas","language/"+LanguageMgr.Ins.country+"/pveresult.atlas"),"name":"PVE结算胜利"};
		this.viewRes["PveResultLoseView"]={"res":this.resArr("pveresult.atlas","language/"+LanguageMgr.Ins.country+"/pveresult.atlas"),"name":"PVE结算失败"};
		this.viewRes["PveResultSweepView"]={"res":this.resArr("pveresult.atlas","language/"+LanguageMgr.Ins.country+"/pveresult.atlas"),"name":"PVE扫荡结果"};
		this.viewRes["PveRankView"]={"res":this.resArr("pve.atlas","language/"+LanguageMgr.Ins.country+"/pve.atlas"),"name":"PVE排行榜"};
		this.viewRes["TreasureBoxOpenView"]={"res":this.resArr("chest.atlas","language/"+LanguageMgr.Ins.country+"/chest.atlas","skillItem.atlas","language/"+LanguageMgr.Ins.country+"/skill.atlas"),"name":"宝箱开启界面"};
		this.viewRes["ActivityView"]={"res":this.resArr("activity.atlas","language/"+LanguageMgr.Ins.country+"/activity.atlas"),"name":"活动界面"};
		this.viewRes["LuckyWheelView"]={"res":this.resArr("activity/luckyWheel.atlas","activity/luckyWheel/shuzi.atlas","language/"+LanguageMgr.Ins.country+"/activity/luckyWheel.atlas"),"name":"弹弹宝藏"};
		this.viewRes["FirstRechargeView"]={"res":[],"name":"首充界面"};
		this.viewRes["BattleOverView"]={"res":this.resArr("battle/menu/over.atlas","language/"+LanguageMgr.Ins.country+"/battle/menu/over.atlas"),"name":"战斗结算界面"};
		this.viewRes["BattleOverDanView"]={"res":this.resArr("battle/menu/over.atlas","language/"+LanguageMgr.Ins.country+"/battle/menu/over.atlas"),"name":"战斗结算含段位界面","isCloseLoading":true};
		this.viewRes["QRView"]={"res":this.resArr("qr.atlas"),"name":"二维码邀请界面"};
		this.viewRes["MAIN_MONTH_CARD_TIPS"]={"res":[],"name":"月卡提示界面"};
		this.viewRes["ARENACHANGE"]={"res":this.resArr("pvp.atlas","language/"+LanguageMgr.Ins.country+"/pvp.atlas"),"name":"段位发生变化"};
		this.viewRes["ShareInviteWindow"]={"res":this.resArr("activity/shareInvite.atlas","language/"+LanguageMgr.Ins.country+"/activity/shareInvite.atlas"),"name":"邀请好友累计界面"};
		this.viewRes["BattleRecordView"]={"res":this.resArr("battleReport.atlas","language/"+LanguageMgr.Ins.country+"/Email.atlas","language/"+LanguageMgr.Ins.country+"/battleReport.atlas"),"name":"战报页面"};
		this.viewRes["MulitPveSelectView"]={"res":this.resArr("mulitpveselect.atlas","language/"+LanguageMgr.Ins.country+"/mulitpveselect.atlas"),"name":"多人pve副本选择页面"};
		this.viewRes["MulitPveRoomView"]={"res":this.resArr("mulitpve.atlas","language/"+LanguageMgr.Ins.country+"/mulitpve.atlas","room.atlas","language/"+LanguageMgr.Ins.country+"/room.atlas"),"name":"多人pve副本房间页面"};
		this.viewRes["MulitPveResultWinView"]={"res":this.resArr("pveresult.atlas","language/"+LanguageMgr.Ins.country+"/pveresult.atlas"),"name":"多人pve副本结算胜利"};
		this.viewRes["MulitPveResultLoseView"]={"res":this.resArr("pveresult.atlas","language/"+LanguageMgr.Ins.country+"/pveresult.atlas"),"name":"多人pve副本结算失败"};
		this.viewRes["GuideTalkView"]={"res":this.resArr("newguide.atlas"),"name":"新手对话框","isCloseLoading":true};
		this.viewRes["InvitePaySendView"]={"res":this.resArr("invitepay.atlas","language/"+LanguageMgr.Ins.country+"/invitepay.atlas"),"name":"邀请好友付费"};
		this.viewRes["InvitePayReceiveView"]={"res":this.resArr("invitepay.atlas","language/"+LanguageMgr.Ins.country+"/invitepay.atlas"),"name":"邀请好友付费"};
		this.viewRes["GuildInfoPage"]={"res":this.resArr("guild.atlas","ranking.atlas","language/"+LanguageMgr.Ins.country+"/guild.atlas"),"name":"公会信息界面"};
		this.viewRes["SevenDayTargetView"]={"res":this.resArr("sevenDayTarget.atlas","language/"+LanguageMgr.Ins.country+"/sevenDayTarget.atlas"),"name":"七日目标主界面"};
		this.viewRes["GuildDonateWindow"]={"res":this.resArr("guild.atlas","skillItem.atlas","language/"+LanguageMgr.Ins.country+"/guild.atlas"),"name":"公会捐献界面"};
		this.viewRes["GuildShopAlertView"]={"res":this.resArr("guild.atlas","language/"+LanguageMgr.Ins.country+"/guild.atlas"),"name":"公会商店购买弹窗"};
		this.viewRes["VipView"]={"res":this.resArr("vip.atlas"),"name":"VIP特权界面"};
		this.viewRes["GetVipRewardView"]={"res":this.resArr("reward.atlas","language/"+LanguageMgr.Ins.country+"/reward.atlas"),"name":"获得VIP礼包界面"}
		this.viewRes["VipUpgrade"]={"res":this.resArr("levelup.atlas","language/"+LanguageMgr.Ins.country+"/levelup.atlas"),"name":"LevelUp"};
		this.viewRes["VipRewardPreView"]={"res":this.resArr("vip.atlas"),"name":"VIP福利礼包预览界面"};
	}

	__proto.atlasObj=function(url,type){
		(type===void 0)&& (type="atlas");
		return {url:url,type:type};
	}

	__proto.resArr=function(__items){
		var items=arguments;
		var arr=[];
		var str;
		var item;
		for(var $each_item in items){
			item=items[$each_item];
			if((typeof item=='string')){
				str="assets/atlas/"+item;
				arr.push(this.atlasObj(str));
			}
			else{
				arr.push(item);
			}
		}
		return arr;
	}

	/**
	*获取不释放资源路径URL
	*@param items
	*@return
	*
	*/
	__proto.getPassResArr=function(__items){
		var items=arguments;
		var arr=[];
		var str;
		var item;
		for(var $each_item in items){
			item=items[$each_item];
			if((typeof item=='string')){
				str=URL.formatURL("assets/atlas/"+item);
				arr.push(str);
			}
			else{
				debugger;
				alert('UIFactory.ins.getPassResArr 只能传入String为参数');
			}
		}
		return arr;
	}

	__proto.createView=function(viewType,createViewComplete){
		var _view=UIMgr.ins.getView(viewType);
		if(!_view){
			var resObject=this.viewRes[viewType];
			if(resObject){
				if(!resObject.isCloseLoading)SmallLoadingManager.instance.showSmallLoading(viewType);
				if(this.stopLoadViewDict[viewType]){
					delete this.stopLoadViewDict[viewType];
					if(createViewComplete !=null){
						createViewComplete.recover();
					}
				}
				else{
					if(this.loadingViewDict[viewType]==null){
						if(resObject.res.length > 0){
							Laya.loader.load(resObject.res,Handler.create(this,this.loadAssetsComplete,[viewType,createViewComplete,false]),Handler.create(this,this.onProgress,null,false),null,1,false,viewType);
						}
						else{
							this.loadAssetsComplete(viewType,createViewComplete,false);
						}
						this.loadingViewDict[viewType]=true;
					}
					else{
						this.loadAssetsComplete(viewType,createViewComplete,false);
					}
				}
			}
			else{
				throw Error("视图"+_view+"未设置需要加载的资源");
			}
		}
		else{
			if(createViewComplete !=null){
				createViewComplete.runWith(_view);
			}
		}
	}

	__proto.clearLoadingView=function(viewType){
		delete this.loadingViewDict[viewType];
	}

	__proto.onProgress=function(value){
		SmallLoadingManager.instance.setProgress(value);
	}

	__proto.stopLoadView=function(viewType){
		this.stopLoadViewDict[viewType]=true;
	}

	__proto.clearViewRes=function(viewType,passClearList){
		if (passClearList==null)passClearList=["assets/atlas/comm.atlas","assets/atlas/common.atlas"];
		else passClearList.push("assets/atlas/comm.atlas","assets/atlas/common.atlas");
		var resObject=this.viewRes[viewType];
		if(resObject){
			if(resObject.res.length > 0){
				Laya.loader.clearResByGroup(viewType,passClearList);
				delete this.loadingViewDict[viewType];
				console.log("释放界面资源:"+viewType);
				GC.triggerGC(0.1,"页面");
			}
			else{
			}
		}
		else{
		}
	}

	/**
	*继承BaseView会调用showView hideView方法 一般都是全屏界面继承使用
	*继承Window的窗口默认会居中显示,非继承Window 可以调用Align.singleViewAlign(view);方法来居中
	*
	*@param viewType
	*@param createViewComplete
	*@param isScene
	*
	*/
	__proto.loadAssetsComplete=function(viewType,createViewComplete,isScene){
		(isScene===void 0)&& (isScene=false);
		if(this.stopLoadViewDict[viewType]){
			delete this.stopLoadViewDict[viewType];
			if(createViewComplete !=null){
				createViewComplete.runWith([null,true]);
			}
			return;
		}
		SmallLoadingManager.instance.removeSmallLoading();
		var view;
		switch(viewType){
			case "Login":{
					view=new LoginView();
					break ;
				}
			case "ShopView":{
					view=new ShopView();
					break ;
				}
			case "ChestCoinDlg":{
					view=new ChestCoinDlg();
					break ;
				}
			case "MoneyCoinDig":{
					view=new MoneyCoinDig();
					break ;
				}
			case "AnimationTest":{
					view=new AnimationTestView();
					break ;
				}
			case "PlayerMessageView":{
					view=new PlayerMessageView();
					break ;
				}
			case "NewBattleWin":{
					view=new NewBattleWin();
					break ;
				}
			case "Quest":{
					view=new QuestMainView();
					break ;
				}
			case "Ranking":{
					view=new RankingView();
					break ;
				}
			case "LevelUp":{
					view=new LevelUpPage();
					break ;
				}
			case "PVPArena":{
					view=new PVPArenaPage();
					break ;
				}
			case "SeasonPage":{
					view=new SeasonPage();
					break ;
				}
			case "SeasonRank":{
					view=new SeasonRankPage();
					break ;
				}
			case "SeasonResult":{
					view=new SeasonResultPage
					break ;
				}
			case "SeasonInhert":{
					view=new SeasonInhertPage();
					break ;
				}
			case "PVPArenaInfo":{
					view=new ArenaInfoPage();
					break ;
				}
			case "RewardLimit":{
					view=new RewardLimitDlg();
					break ;
				}
			case "SkillSystem":{
					view=new SkillView();
					break ;
				}
			case "CardMessageView":{
					view=new CardMessageView();
					break ;
				}
			case "GuildList":{
					view=new GuildMainPage();
					break ;
				}
			case "GuildFriendBattlePage":{
					view=new GuildFriendBattlePage();
					break ;
				}
			case "GuildDonatePage":{
					view=new GuildDonatePage();
					break ;
				}
			case "GuildInfoPage":{
					view=new GuildInfoPage();
					break ;
				}
			case "GuildCreatePage":{
					view=new GuildCreatePage();
					break ;
				}
			case "GuildNoticePage":{
					view=new GuildNoticePage();
					break ;
				}
			case "ShowGetGoodsView":{
					view=new ShowGetGoodsView();
					break ;
				}
			case "PVPRoomView":{
					view=new PVPRoomView();
					break ;
				}
			case "MulitBattleOpenCard":{
					view=new MulitBattleOpenCard();
					break ;
				}
			case "CommonHelpView":{
					view=new CommonHelpView();
					break ;
				}
			case "CardUpdateEffectView":{
					view=new CardUpdateEffectView();
					break ;
				}
			case "InviteDialog":{
					view=new InviteDialog();
					break ;
				}
			case "EmailMainView":{
					view=new EmailMainView();
					break ;
				}
			case "HelpDescriptionView":{
					view=new HelpDescriptionView();
					break ;
				}
			case "HtmlHelpView":{
					view=new HtmlHelpView();
					break ;
				}
			case "LoseConnect":{
					view=new LoseConnectDialog();
					break ;
				}
			case "GameNoticeTips":{
					view=new GameNoticeTips();
					break ;
				}
			case "QueueUpView":{
					view=new QueueUpView();
					break ;
				}
			case "AlertDialog":{
					view=new AlertDialog();
					break ;
				}
			case "ShareGiftView":{
					view=new ShareGiftView();
					break ;
				}
			case "ChatSetView":{
					view=new ChatSetView();
					break ;
				}
			case "ChatFullView":{
					view=new ChatFullView();
					break ;
				}
			case "CreateUserView":{
					view=new CreateUserView();
					break ;
				}
			case "ShareNewCardView":{
					view=new ShareNewCardView();
					break ;
				}
			case "QuestExtraRewardView":{
					view=new QuestExtraRewardView();
					break ;
				}
			case "PlayerMsgShareView":{
					view=new PlayerMsgShareView();
					break ;
				}
			case "CreateRoleView":{
					view=new CreateRoleView();
					break ;
				}
			case "ShareCardsView":{
					view=new ShareCardsView();
					break ;
				}
			case "LevelUpShareView":{
					view=new LevelUpShareView();
					break ;
				}
			case "FriendSkillTips":{
					view=new FriendSkillTips();
					break ;
				}
			case "ShareFbCardsView":{
					view=new ShareFbCardsView();
					break ;
				}
			case "ChangeCardView":{
					view=new ChangeCardView();
					break ;
				}
			case "CardTips":{
					view=new CardTips();
					break ;
				}
			case "AdvertisingView":{
					view=new AdvertisingView();
					break ;
				}
			case "ActivityLogin":{
					view=new ActivityLoginView();
					break ;
				}
			case "SettingWindow":{
					view=new SettingWindow();
					break ;
				}
			case "FriendsWindow":{
					view=new FriendsWindow();
					break ;
				}
			case "AddFriendWindow":{
					view=new AddFriendWindow();
					break ;
				}
			case "FriendshipWarWindow":{
					view=new FriendshipWarWindow();
					break ;
				}
			case "FriendshipWarAlert":{
					view=new FriendshipWarAlert();
					break ;
				}
			case "PveRoomView":{
					view=new PveRoomView;
					break ;
				}
			case "PveResultWinView":{
					UIMgr.ins.closeView("ChatFullView");
					view=new PveResultWinView;
					break ;
				}
			case "PveResultLoseView":{
					UIMgr.ins.closeView("ChatFullView");
					view=new PveResultLoseView;
					break ;
				}
			case "PveResultSweepView":{
					view=new PveResultSweepView;
					break ;
				}
			case "TreasureBoxDetailWindow":{
					view=new TreasureBoxDetailWindow();
					break ;
				}
			case "TreasureBoxDetailTips":{
					view=new TreasureBoxDetailTips();
					break ;
				}
			case "PveRankView":{
					view=new PveRankView;
					break ;
				}
			case "TreasureBoxOpenView":{
					view=new TreasureBoxOpenView();
					break ;
				}
			case "ActivityView":{
					view=new ActivityView();
					break ;
				}
			case "LuckyWheelView":{
					view=new LuckyWheelView();
					break ;
				}
			case "BattleOverView":{
					view=new BattleOverView();
					break ;
				}
			case "BattleOverDanView":{
					view=new BattleOverDanView();
					break ;
				}
			case "CardShowMessageView":{
					view=new CardShowMessageView();
					break ;
				}
			case "QRView":{
					view=new QRView();
					break ;
				}
			case "MAIN_MONTH_CARD_TIPS":{
					view=new MainMonthTips();
					break ;
				}
			case "ARENACHANGE":{
					view=new ArenaChangePage();
					break ;
				}
			case "LevelBoxWindow":{
					view=new LevelBoxWindow();
					break ;
				}
			case "LevelBoxRewardWindow":{
					view=new LevelBoxRewardWindow();
					break ;
				}
			case "CommonRewardWindow":{
					view=new CommonRewardWindow();
					break ;
				}
			case "GuildRewardWindow":{
					view=new GuildRewardWindow();
					break ;
				}
			case "MysteryShopWindow":{
					view=new MysteryShopWindow();
					break ;
				}
			case "MysteryShopAlertWindow":{
					view=new MysteryShopAlertWindow();
					break ;
				}
			case "ShareInviteWindow":{
					view=new ShareInviteView();
					break ;
				}
			case "BattleRecordView":{
					view=new BattleRecordView();
					break ;
				}
			case "MulitPveSelectView":{
					view=new MulitPveSelectView();
					break ;
				}
			case "MulitPveRoomView":{
					view=new MulitPveRoomView();
					break ;
				}
			case "MulitPveResultWinView":{
					view=new MulitPveResultWinView();
					break ;
				}
			case "MulitPveResultLoseView":{
					view=new MulitPveResultLoseView();
					break ;
				}
			case "GuideTalkView":{
					view=new GuideTalkView();
					break ;
				}
			case "InvitePaySendView":{
					view=new InvitePaySendView();
					break ;
				}
			case "InvitePayReceiveView":{
					view=new InvitePayReceiveView();
					break ;
				}
			case "SevenDayTargetView":{
					view=new SevenDayTargetMainView();
					break ;
				}
			case "GuildDonateWindow":{
					view=new GuildDonateWindow();
					break ;
				}
			case "GuildShopAlertView":{
					view=new GuildShopAlertWindow();
					break ;
				}
			case "AppleGameRoom":{
					view=new AppleGameRoom();
					break ;
				}
			case "AppleGameHelp":{
					view=new AppleGameHelp();
					break ;
				}
			case "LocalBattleResult":{
					view=new LocalBattleResult();
					break ;
				}
			case "ReviveView":{
					view=new ReviveView();
					break ;
				}
			case "BeyondFriend":{
					view=new BeyondFriend();
					break ;
				}
			case "FirstRechargeView":{
					view=new FirstRechargeView();
					break ;
				}
			case "VipView":{
					view=new VipView();
					break ;
				}
			case "GetVipRewardView":{
					view=new GetVipRewardView();
					break ;
				}
			case "VipUpgrade":{
					view=new VipUpgradePage();
					break ;
				}
			case "VipRewardPreView":{
					view=new VipRewardPreView();
					break ;
				}
			}
		if(view){
			view.viewType=viewType;
			console.log("创建view:"+viewType);
			UIMgr.ins.addView(viewType,view);
		}
		if(createViewComplete !=null){
			createViewComplete.runWith(view);
		}
	}

	__proto.getSkeletonRootPath=function(type,isLang){
		(isLang===void 0)&& (isLang=false);
		var rootPath="";
		var langStr="";
		if(isLang){
			langStr="assets/animation/language/"+LanguageMgr.Ins.country+"/";
			}else{
			langStr="assets/animation/";
		}
		switch(type){
			case "roleshow":{
					rootPath=langStr+"role/show/";
					break ;
				}
			case "role":{
					rootPath=langStr+"role/fight/";
					break ;
				}
			case "hand":{
					rootPath=langStr+"role/fight/";
					break ;
				}
			case "weapon":{
					rootPath=langStr+"weapon/";
					break ;
				}
			case "npc":{
					rootPath=langStr+"npc/";
					break ;
				}
			case "obj":{
					rootPath=langStr+"obj/";
					break ;
				}
			case "bomb":{
					rootPath=langStr+"bomb/";
					break ;
				}
			case "blast":{
					rootPath=langStr+"blast/";
					break ;
				}
			case "buff":{
					rootPath=langStr+"buff/";
					break ;
				}
			case "ui":{
					rootPath=langStr+"uieffect/";
					break ;
				}
			case "effect":{
					rootPath=langStr+"effect/";
					break ;
				}
			case "emotion":{
					rootPath=langStr+"emotion/";
					break ;
				}
			case "supply":{
					rootPath=langStr+"supply/";
					break ;
				}
			case "guide":{
					rootPath=langStr+"guide/";
					break ;
				}
			default :{
					rootPath=langStr+"other/";
				}
			}
		return rootPath;
	}

	__proto.getSkeletonFullName=function(id,type){
		var prefix="";
		switch(type){
			case "roleshow":{
					prefix="role";
					break ;
				}
			case "role":{
					prefix="role";
					break ;
				}
			case "hand":{
					prefix="hand";
					break ;
				}
			case "weapon":{
					prefix="weapon";
					break ;
				}
			case "npc":{
					prefix="npc";
					break ;
				}
			case "obj":{
					prefix="obj";
					break ;
				}
			case "bomb":{
					prefix="bomb";
					break ;
				}
			case "blast":{
					prefix="blast";
					break ;
				}
			case "buff":{
					prefix="buff";
					break ;
				}
			case "ui":{
					prefix="ui";
					break ;
				}
			case "effect":{
					prefix="effect";
					break ;
				}
			default :{
					prefix="";
				}
			};
		var fullName=prefix+id+".sk";
		return fullName;
	}

	__proto.isExistSkeletonResByName=function(name,type){
		var skUrl;
		if(type){
			var fullName=name+".sk";
			skUrl=this.getSkeletonRootPath(type)+fullName;
		}
		else{
			skUrl=name;
		};
		var res=Laya.loader.getRes(skUrl);
		return res ? true :false;
	}

	__proto.createSkeletonByName=function(name,type,onComplete,isLang){
		(isLang===void 0)&& (isLang=false);
		var skUrl;
		if(type){
			var fullName=name+".sk";
			skUrl=this.getSkeletonRootPath(type,isLang)+fullName;
		}
		else{
			skUrl=name;
		}
		this.createSkeletonByUrl(skUrl,onComplete);
	}

	__proto.createSkeleton=function(id,type,onComplete){
		var fullName=this.getSkeletonFullName(id,type);
		var skUrl=this.getSkeletonRootPath(type)+fullName;
		this.createSkeletonByUrl(skUrl,onComplete);
	}

	__proto.createSkeletonByUrl=function(skUrl,onComplete,nameOrIndex,loop){
		(nameOrIndex===void 0)&& (nameOrIndex=0);
		(loop===void 0)&& (loop=true);
		this.getOrCreateSkeletonTempletByUrl(skUrl,_parseComplete);
		function _parseComplete (templet){
			var skeleton=templet.buildArmature(0);
			skeleton.play(nameOrIndex,loop);
			if(onComplete !=null){
				onComplete.runWith([templet,skeleton]);
			}
		}
	}

	__proto.clearAllSkeletons=function(){
		SkeletonTempletMgr.ins.clearAllSkeletons();
	}

	__proto.clearAllGuideSkeletons=function(){
		SkeletonTempletMgr.ins.clearAllGuideSkeletons();
	}

	// }
	__proto.getOrCreateSkeletonTempletByUrl=function(skUrl,onComplete,isErrorReload){
		(isErrorReload===void 0)&& (isErrorReload=true);
		var _aniTemplet=SkeletonTempletMgr.ins.getAniTemplet(skUrl,isErrorReload);
		_aniTemplet.onCallBack(onComplete);
	}

	__proto.createParticle=function(particleName){
		var url="assets/partide/"+particleName;
		var particle2D=new Particle2D(null);
		particle2D.load(url);
		return particle2D;
	}

	__proto.createGAnimation=function(name,animationType,parent,loop,onPlayComplete,onLoadComplete,anchorX,anchorY,aniInterval){
		(loop===void 0)&& (loop=true);
		(anchorX===void 0)&& (anchorX=0.5);
		(anchorY===void 0)&& (anchorY=0.5);
		(aniInterval===void 0)&& (aniInterval=UIFactory.defaultAniInterval);
		var url="assets/animation/frames/"+animationType+"/"+name+".json";
		return this.createGAnimationByUrl(url,parent,loop,onPlayComplete,onLoadComplete,anchorX,anchorY,aniInterval);
	}

	__proto.createGAnimationByUrl=function(url,parent,loop,onPlayComplete,onLoadComplete,anchorX,anchorY,aniInterval){
		(loop===void 0)&& (loop=true);
		(anchorX===void 0)&& (anchorX=0.5);
		(anchorY===void 0)&& (anchorY=0.5);
		(aniInterval===void 0)&& (aniInterval=UIFactory.defaultAniInterval);
		var ani=new GAnimation();
		ani.interval=aniInterval;
		if(parent && !parent.destroyed){
			parent.addChild(ani);
		};
		var _aniTemplet=AnimationTempletMgr.ins.getAniTemplet(url);
		_aniTemplet.onCallBack(onComplete);
		function onComplete (frames){
			if(ani.destroyed)return;
			ani.setUrlFrames(url,frames);
			if(anchorX || anchorY){
				var bounds=ani.getGraphicBounds();
				ani.pivot(bounds.width*anchorX,bounds.height*anchorY);
			}
			ani.play(0,loop);
			if(onLoadComplete !=null){
				if(onLoadComplete.method.length > 0){
					onLoadComplete.runWith(ani);
				}
				else{
					onLoadComplete.run();
				}
			}
		}
		ani.on("complete",this,function(){
			if(ani.destroyed)return;
			if(ani.loop)return;
			if(onPlayComplete !=null){
				if(onPlayComplete.method.length > 0){
					onPlayComplete.runWith(ani);
				}
				else{
					onPlayComplete.run();
				}
			}
		});
		return ani;
	}

	__getset(1,UIFactory,'ins',function(){
		if (UIFactory._ins==null){
			UIFactory._ins=new UIFactory();
		}
		return UIFactory._ins;
	});

	UIFactory.RoleShow="roleshow";
	UIFactory.Role="role";
	UIFactory.Hand="hand";
	UIFactory.Weapon="weapon";
	UIFactory.Npc="npc";
	UIFactory.Obj="obj";
	UIFactory.Bomb="bomb";
	UIFactory.Blast="blast";
	UIFactory.Buff="buff";
	UIFactory.UI="ui";
	UIFactory.Other="other";
	UIFactory.Effect="effect";
	UIFactory.EMOTION="emotion";
	UIFactory.Supply="supply";
	UIFactory.Guide="guide";
	UIFactory.BlastFrame="blastframe";
	UIFactory.BombFrame="bombframe";
	UIFactory.BuffFrame="buffframe";
	UIFactory.EffectFrame="effectframe";
	UIFactory._ins=null;
	__static(UIFactory,
	['defaultAniInterval',function(){return this.defaultAniInterval=1000/24;}
	]);
	return UIFactory;
})()


//class manager.UIMgr
var UIMgr=(function(){
	function UIMgr(){
		this._viewMap=null;
		//场景视图 窗口视图都放到这里来
		this._compMap=null;
		this._openViewQueue=null;
		//正在打开中的页面
		this._unReleasViewQueue=null;
		//先打开的先释放
		this._showQueue=null;
		this.openViewingDict={};
		if(UIMgr._ins==null){
			this._viewMap={};
			this._compMap={};
			this._openViewQueue=[];
			this._unReleasViewQueue=[];
		}
		else{
			throw new Error(UIMgr._ins+" , this is instance");
		}
	}

	__class(UIMgr,'manager.UIMgr');
	var __proto=UIMgr.prototype;
	__proto.addView=function(viewType,view){
		this._viewMap[viewType]=view;
	}

	__proto.getView=function(viewType){
		return this._viewMap[viewType];
	}

	__proto.hasView=function(viewType){
		return (this._viewMap[viewType] !=null);
	}

	__proto.isShowView=function(viewType){
		if(!this._viewMap[viewType])return false;
		return this._viewMap[viewType].isShow;
	}

	__proto.deleteView=function(viewType){
		delete this._viewMap[viewType];
	}

	__proto.openView=function(viewType,onComplete){
		var _$this=this;
		EventMgr.ins.event("open_view",viewType);
		if(!this.openViewingDict[viewType]){
			this.openViewingDict[viewType]=true;
			var view=manager.UIMgr.ins.getView(viewType);
			if(view){
				createViewComplete2(view);
			}
			else{
				UIFactory.ins.createView(viewType,Handler.create(this,createViewComplete2));
			}
		}
		function createViewComplete2 (view,isStopLoad){
			(isStopLoad===void 0)&& (isStopLoad=false);
			delete _$this.openViewingDict[viewType];
			if(view){
				if(_$this.isWx){
					view.scaleX=view.scaleY=_$this.getScaleNum(viewType);
				}
				if((view instanceof laya.ui.Window )){
					view.showView();
				}
				else if((view instanceof laya.ui.BaseView )){
					LayerMgr.ins.windowLayer.addChild(view);
					if((view instanceof laya.ui.BaseView ))view.showView();
				}
				else{
					LayerMgr.ins.windowLayer.addChild(view);
					NewGuideMgr.ins.checkAllGuide(view,true);
				};
				var idx=_$this._openViewQueue.indexOf(viewType);
				if(idx !=-1){
					_$this._openViewQueue.splice(idx,1);
				}
				_$this._openViewQueue.unshift(viewType);
				idx=_$this._unReleasViewQueue.indexOf(viewType);
				if(idx !=-1){
					_$this._unReleasViewQueue.splice(idx,1);
				}
				_$this._unReleasViewQueue.unshift(viewType);
				if(onComplete !=null){
					onComplete.runWith(view);
				}
			}
			else{
				if(onComplete !=null){
					onComplete.recover();
				}
			}
		}
	}

	/**
	*关闭界面
	*@param viewType :
	*@param destroy
	*@param isClearRes
	*@param passClearList :排除释放资源的资源数组路径 例如:UIFactory.ins.getPassResArr("skill.atlas","skillItem.atlas")
	*如
	*UIMgr.ins.closeView(ViewType.TreasureBoxOpenView,true,true,UIFactory.ins.getPassResArr("skill.atlas","skillItem.atlas"));
	*/
	__proto.closeView=function(viewType,destroy,isClearRes,passClearList){
		(destroy===void 0)&& (destroy=true);
		(isClearRes===void 0)&& (isClearRes=true);
		var view=manager.UIMgr.ins.getView(viewType);
		if(view){
			if((view instanceof laya.ui.Window )){
				view.hideView();
			}
			else if((view instanceof laya.ui.BaseView )){
				if((view instanceof laya.ui.BaseView ))view.hideView();
				if(view.parent){
					view.parent.removeChild(view);
				}
			}
			else{
				if(view.parent){
					view.parent.removeChild(view);
				}
				NewGuideMgr.ins.checkAllGuide(view,false);
			};
			var idx=this._openViewQueue.indexOf(viewType);
			if(idx !=-1){
				this._openViewQueue.splice(idx,1);
			}
			if(destroy){
				view.destroy(true);
				this.deleteView(viewType);
				if(isClearRes){
					UIFactory.ins.clearViewRes(viewType,passClearList);
					idx=this._unReleasViewQueue.indexOf(viewType);
					if(idx !=-1){
						this._unReleasViewQueue.splice(idx,1);
					}
				}
				else{
					UIFactory.ins.clearLoadingView(viewType);
				}
			}
		}
		if (this._showQueue && viewType==this._showQueue[0]){
			this._showQueue.shift();
			if(this._showQueue[0])
				this.openView(this._showQueue[0]);
		}
		EventMgr.ins.event("close_view",viewType);
	}

	/**
	*释放所有打开过的界面资源
	*
	*/
	__proto.clearAllOpenViewRes=function(surplusNum){
		(surplusNum===void 0)&& (surplusNum=0);
		var viewType;
		while(this._unReleasViewQueue.length > surplusNum){
			var idx=this._unReleasViewQueue.length-1;
			viewType=this._unReleasViewQueue[idx];
			this._unReleasViewQueue.splice(idx,1);
			this.closeView(viewType,true,true);
		}
	}

	__proto.openViewQueue=function(viewTypeArray){
		this._showQueue=viewTypeArray;
		var viewType=this._showQueue[0];
		if(viewType)
			this.openView(viewType);
	}

	__proto.getOpenViewNum=function(){
		return this._openViewQueue ? this._openViewQueue.length :0;
	}

	__proto.getScaleNum=function(viewType){
		var scaleNum=1;
		switch(viewType){
			case "PVPArena":
			case "PlayerMessageView":
			case "GuildDonatePage":
				scaleNum=0.85;
				break ;
			}
		return scaleNum;
	}

	__getset(0,__proto,'isWx',function(){
		return UrlParam.PARAMS["PLID"]=="wx";
	});

	__getset(1,UIMgr,'ins',function(){
		if(UIMgr._ins==null){
			UIMgr._ins=new UIMgr();
		}
		return UIMgr._ins;
	});

	UIMgr._ins=null;
	return UIMgr;
})()


//class manager.ViewType
var ViewType=(function(){
	function ViewType(){}
	__class(ViewType,'manager.ViewType');
	ViewType.Login="Login";
	ViewType.SHOP="ShopView";
	ViewType.AnimationTest="AnimationTest";
	ViewType.PlayerMessageView="PlayerMessageView";
	ViewType.Quest="Quest";
	ViewType.Ranking="Ranking";
	ViewType.SkillSystem="SkillSystem";
	ViewType.CardMessageView="CardMessageView";
	ViewType.CardShowMessageView="CardShowMessageView";
	ViewType.MulitBattleOpenCard="MulitBattleOpenCard";
	ViewType.ShowGetGoodsView="ShowGetGoodsView";
	ViewType.CommonHelpView="CommonHelpView";
	ViewType.ActivityLogin="ActivityLogin";
	ViewType.LocalBattleResult="LocalBattleResult";
	ViewType.AppleGameRoom="AppleGameRoom";
	ViewType.AppleGameHelp="AppleGameHelp";
	ViewType.ReviveView="ReviveView";
	ViewType.BeyondFriend="BeyondFriend";
	ViewType.FriendAskForDialog="FriendAskForDialog";
	ViewType.CardUpdateEffectView="CardUpdateEffectView";
	ViewType.EmailMainView="EmailMainView";
	ViewType.HelpDescriptionView="HelpDescriptionView";
	ViewType.HtmlHelpView="HtmlHelpView";
	ViewType.GameNoticeTips="GameNoticeTips";
	ViewType.QueueUpView="QueueUpView";
	ViewType.AlertDialog="AlertDialog";
	ViewType.ShareGiftView="ShareGiftView";
	ViewType.CreateUserView="CreateUserView";
	ViewType.ShareNewCardView="ShareNewCardView";
	ViewType.PlayerMsgShareView="PlayerMsgShareView";
	ViewType.ShareCardsView="ShareCardsView";
	ViewType.LevelUpShareView="LevelUpShareView";
	ViewType.FriendSkillTips="FriendSkillTips";
	ViewType.Battle="Battle";
	ViewType.NewBattleWin="NewBattleWin";
	ViewType.Setting="Setting";
	ViewType.LevelUp="LevelUp";
	ViewType.PVP_ARENA="PVPArena";
	ViewType.ARENA_CHANGE="ARENACHANGE";
	ViewType.SEASON_PAGE="SeasonPage";
	ViewType.SEASON_RANK="SeasonRank";
	ViewType.SEASON_RESULT="SeasonResult";
	ViewType.SEASON_INHERT="SeasonInhert";
	ViewType.PVP_ARENA_INFO="PVPArenaInfo";
	ViewType.RewardLimit="RewardLimit";
	ViewType.GuildList="GuildList";
	ViewType.GuildFriendBattlePage="GuildFriendBattlePage";
	ViewType.GuildDonatePage="GuildDonatePage";
	ViewType.GuildInfoPage="GuildInfoPage";
	ViewType.GuildCreatePage="GuildCreatePage";
	ViewType.GuildNoticePage="GuildNoticePage";
	ViewType.PVPRoomView="PVPRoomView";
	ViewType.RoomMainView="RoomMainView";
	ViewType.InviteDialog="InviteDialog";
	ViewType.LoseConnect="LoseConnect";
	ViewType.MaxRewardDialog="MaxRewardDialog";
	ViewType.ChatSetView="ChatSetView";
	ViewType.ChatFullView="ChatFullView";
	ViewType.ChatExpression="ChatExpression";
	ViewType.QuestExtraRewardView="QuestExtraRewardView";
	ViewType.CreateRoleView="CreateRoleView";
	ViewType.ShareFbCardsView="ShareFbCardsView";
	ViewType.AdvertisingView="AdvertisingView";
	ViewType.ChangeCardView="ChangeCardView";
	ViewType.CardTips="CardTips";
	ViewType.SettingWindow="SettingWindow";
	ViewType.FriendsWindow="FriendsWindow";
	ViewType.AddFriendWindow="AddFriendWindow";
	ViewType.FriendshipWarWindow="FriendshipWarWindow";
	ViewType.FriendshipWarAlert="FriendshipWarAlert";
	ViewType.PVE_ROOM_VIEW="PveRoomView";
	ViewType.PVE_RESULT_WIN_VIEW="PveResultWinView";
	ViewType.PVE_RESULT_LOSE_VIEW="PveResultLoseView";
	ViewType.PVE_RESULT_SWEEP_VIEW="PveResultSweepView";
	ViewType.PVE_RANK_VIEW="PveRankView";
	ViewType.TreasureBoxDetailWindow="TreasureBoxDetailWindow";
	ViewType.TreasureBoxDetailTips="TreasureBoxDetailTips";
	ViewType.TreasureBoxOpenView="TreasureBoxOpenView";
	ViewType.ChestCoinDlg="ChestCoinDlg";
	ViewType.MoneyCoinDig="MoneyCoinDig";
	ViewType.ActivityView="ActivityView";
	ViewType.FirstRechargeView="FirstRechargeView";
	ViewType.BattleOverView="BattleOverView";
	ViewType.QRView="QRView";
	ViewType.MAIN_MONTH_CARD_TIPS="MAIN_MONTH_CARD_TIPS";
	ViewType.LevelBoxWindow="LevelBoxWindow";
	ViewType.LevelBoxRewardWindow="LevelBoxRewardWindow";
	ViewType.CommonRewardWindow="CommonRewardWindow";
	ViewType.MysteryShopWindow="MysteryShopWindow";
	ViewType.MysteryShopAlertWindow="MysteryShopAlertWindow";
	ViewType.ShareInviteWindow="ShareInviteWindow";
	ViewType.BattleRecordView="BattleRecordView";
	ViewType.BattleOverDanView="BattleOverDanView";
	ViewType.MulitPveSelectView="MulitPveSelectView";
	ViewType.MulitPveRoomView="MulitPveRoomView";
	ViewType.MULITPVE_RESULT_WIN_VIEW="MulitPveResultWinView";
	ViewType.MULITPVE_RESULT_LOSE_VIEW="MulitPveResultLoseView";
	ViewType.GuideTalkView="GuideTalkView";
	ViewType.InvitePaySendView="InvitePaySendView";
	ViewType.InvitePayReceiveView="InvitePayReceiveView";
	ViewType.SevenDayTargetView="SevenDayTargetView";
	ViewType.GuildDonateWindow="GuildDonateWindow";
	ViewType.GuildRewardWindow="GuildRewardWindow";
	ViewType.GuildShopAlertView="GuildShopAlertView";
	ViewType.LuckyWheelView="LuckyWheelView";
	ViewType.VipView="VipView";
	ViewType.GetVipRewardView="GetVipRewardView";
	ViewType.VipUpgrade="VipUpgrade";
	ViewType.VipRewardPreView="VipRewardPreView";
	ViewType.BarrageView="BarrageView";
	return ViewType;
})()


/**
*活动数据管理
*@author baohua.chen
*
*/
//class modules.activity.ActivityInfoMgr
var ActivityInfoMgr=(function(){
	function ActivityInfoMgr(){
		this._model=null;
		this.TURN_WHEEL=1;
		//活动类型:转转盘
		this.GET_WHEEL_AWAED=2;
		//活动类型:领累抽
		this.SUM_RECHARGE=3;
		//活动类型:累计充值
		this.SUM_CONSUME=4;
		//活动类型:累计消费
		this.isLuckyWheelResReady=false;
		this.titleTab=0;
		/**
		*当前操作得index；
		*/
		this.currentTabIndex=0;
		/**
		*当前操作得index；
		*/
		this.currentTabInfo=null;
		this._model=new ActivityInfoModel();}
	__class(ActivityInfoMgr,'modules.activity.ActivityInfoMgr');
	var __proto=ActivityInfoMgr.prototype;
	__proto.addEvent=function(){}
	/**
	*
	*@param type(0:精彩活动,1:游戏公告)
	*@return
	*
	*/
	__proto.getTabListInfoByType=function(type){
		return this._model.getTabListInfoByType(type);
	}

	__proto.clearPlacard=function(){
		this._model.placardList=[];
	}

	/**
	*
	*@param info
	*@param type 0:添加与更新，1删除
	*
	*/
	__proto.updatePlacardInfo=function(info,type){
		(type===void 0)&& (type=0);
		if(!this._model.placardList){
			this._model.placardList=[];
		}
		info.activityType="PLACARD";
		this._model.placardList.push(info);
		if(LevelGuideMgr.ins.isLevelGuide || NewGuideMgr.ins.isNewGuide)return;
		EventMgr.ins.event("ACTIVITY_PLACARD_UPDATE");
	}

	__proto.deletePlacardInfo=function(activityId){
		if(!this._model.placardList)return;
		var len=this._model.placardList.length;
		for(var i=0;i<len;i+=1){
			if(this._model.placardList[i].activityId==activityId){
				this._model.placardList.splice(i,1);
				break ;
			}
		}
		if(LevelGuideMgr.ins.isLevelGuide || NewGuideMgr.ins.isNewGuide)return;
		EventMgr.ins.event("ACTIVITY_PLACARD_UPDATE");
	}

	__proto.setup=function(){
		SocketManager.Instance.on(0x0106,this,this.onRecvActivityInfo);
		SocketManager.Instance.on(0x0105,this,this.onLuckyWheelAward);
		EventMgr.ins.on("gm_active_data_update",this,this.onRecvCommonActivityInfo);
	}

	//获取活动信息
	__proto.onRecvCommonActivityInfo=function(){
		if(GmActiveDataMgr.ins.getActivityDataByType(this.SUM_RECHARGE)){
			var rechargeActivityData=GmActiveDataMgr.ins.getActivityDataByType(this.SUM_RECHARGE);
			this.setRechargeActivity(rechargeActivityData);
			}else{
			this.model._recharegeInfo=null;
		}
		if(GmActiveDataMgr.ins.getActivityDataByType(this.SUM_CONSUME)){
			var consumeActivityData=GmActiveDataMgr.ins.getActivityDataByType(this.SUM_CONSUME);
			this.setConsumeActivity(consumeActivityData);
			}else{
			this.model._consumeInfo=null;
		}
		EventMgr.ins.event("ACTIVITY_COMMONACTIVITY_UPDATE");
	}

	__proto.setConsumeActivity=function(consumeActivityData){
		var activityInfo=new ActivityInfo();
		activityInfo.activityId=consumeActivityData.activeId;
		activityInfo.activityType=consumeActivityData.activeType.toString();
		activityInfo.titleStr=consumeActivityData.activeName;
		activityInfo.msg=consumeActivityData.desc;
		activityInfo.isOpen=consumeActivityData.isOpen;
		activityInfo.sort=consumeActivityData.sort;
		activityInfo.activityState=consumeActivityData.state;
		if(TimeManager.Instance.NowTime()> Number(consumeActivityData.closeTime)){
			this._model._consumeInfo=null;
			return;
		}
		this._model.consumeInfo=activityInfo;
	}

	__proto.setRechargeActivity=function(rechargeActivityData){
		var activityInfo=new ActivityInfo();
		activityInfo.activityId=rechargeActivityData.activeId;
		activityInfo.activityType=rechargeActivityData.activeType.toString();
		activityInfo.titleStr=rechargeActivityData.activeName;
		activityInfo.msg=rechargeActivityData.desc;
		activityInfo.isOpen=rechargeActivityData.isOpen;
		activityInfo.sort=rechargeActivityData.sort;
		activityInfo.activityState=rechargeActivityData.state;
		if(TimeManager.Instance.NowTime()> Number(rechargeActivityData.closeTime)){
			this._model._recharegeInfo=null;
			return;
		}
		this._model.recharegeInfo=activityInfo;
	}

	/**
	*请求活动信息
	*@param type:操作类型 (1-转转盘 2-领累抽奖 3-请求活动信息 4-领取充值活动奖励 5-领取消费活动奖励)
	*@param param1:参数 (转转盘时1为单抽2为10连 累抽时为累抽宝箱坐标)
	*/
	__proto.requestActivityInfo=function(activeType,opType,param1){
		(param1===void 0)&& (param1=0);
		var req=new com.road.ddt.proto.gmactive.GmActiveOpMsg();
		req.activeType=Number(activeType);
		req.opType=opType;
		req.param1=param1;
		SocketManager.Instance.sendSocketData(0x290B,req);
	}

	/**
	*监听活动信息(转转盘 /领累抽奖 请求回调 )
	*/
	__proto.onRecvActivityInfo=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.gmactive.GmActiveOpResultMsg,pkg);
		if(!res)return;
		res.result&&res.opType==this.TURN_WHEEL && EventMgr.ins.event("turn_wheel",res);
		res.result&&res.opType==this.GET_WHEEL_AWAED && EventMgr.ins.event("get_wheel_award",res);
	}

	/**
	*解析活动(转盘)信息
	*/
	__proto.onLuckyWheelAward=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.gmactive.LuckyTurnActiveMsg,pkg);
		if(!res){
			this._model._luckyWheelInfo=new ActivityInfo();
			return;
		};
		var activityInfo=new ActivityInfo();
		activityInfo.activityId=res.activeId;
		activityInfo.activityType=res.activeType.toString();
		activityInfo.titleStr=res.activeName;
		activityInfo.msg=res.desc;
		activityInfo.isOpen=res.isOpen;
		if(TimeManager.Instance.NowTime()> Number(res.closeTime)){
			this._model._luckyWheelInfo=null;
			return
		}
		this._model.luckyWheelInfo=activityInfo;
		LuckyTurnActiveItemInfo.Ins.itemInfo(res.items);
		LuckyTurnActiveItemInfo.Ins.startTime=Number(res.openTime);
		LuckyTurnActiveItemInfo.Ins.endTime=Number(res.stopTime);
		LuckyTurnActiveItemInfo.Ins.interValTime=Number(res.closeTime);
		var userInfo=LuckyTurnUserDataInfo.Ins;
		userInfo.lucky=res.data.lucky;
		userInfo.count=res.data.count;
		userInfo.index=res.data.index;
		userInfo.lastIndex=res.data.lastIndex;
		this.isLuckyWheelResReady?EventMgr.ins.event("update_data"):this.isLuckyWheelResReady=true;
	}

	/**
	*请求领取首充奖励
	**/
	__proto.reqFirstRechargeReward=function(){
		SocketManager.Instance.out.reqFirstRechargeReward();
	}

	__proto.destroy=function(){
		SocketManager.Instance.off(0x0106,this,this.onRecvActivityInfo);
		SocketManager.Instance.off(0x0105,this,this.onLuckyWheelAward);
		EventMgr.ins.off("gm_active_data_update",this,this.onRecvCommonActivityInfo);
		this.destroy();
	}

	__getset(0,__proto,'model',function(){
		return this._model;
	});

	__getset(0,__proto,'inviteFrindCount',function(){
		var vo=ShareMgr.ins.checkShareInfo(ShareConst.SHARE_INVITE);
		return vo?vo.count:0;
	});

	__getset(1,ActivityInfoMgr,'ins',function(){
		return ActivityInfoMgr._ins=ActivityInfoMgr._ins|| new ActivityInfoMgr();
	});

	ActivityInfoMgr._ins=null;
	return ActivityInfoMgr;
})()


//class modules.activity.consts.ActivityType
var ActivityType=(function(){
	function ActivityType(){}
	__class(ActivityType,'modules.activity.consts.ActivityType');
	ActivityType.IDEA="IDEA";
	ActivityType.PLACARD="PLACARD";
	ActivityType.LUCKY_WHEEL="LUCKY_WHEEL";
	ActivityType.SHARE_FRIEND="SHARE_FRIEND";
	ActivityType.SUM_RECHARGE="SUM_RECHARGE";
	ActivityType.SUM_CONSUME="SUM_CONSUME";
	ActivityType.SEVEN_LOGIN="SEVEN_LOGIN";
	ActivityType.INVITE_NEW="SHARE";
	return ActivityType;
})()


//class modules.activity.control.ActivityViewControl
var ActivityViewControl=(function(){
	function ActivityViewControl(){
		this.TURN_WHEEL=1;
		//活动类型:转转盘
		this.SUM_RECHARGE=3;
		//活动类型:累计充值
		this.SUM_CONSUME=4;
		this._parent=null;
		this._view=null;
		this.loginView=null;
		this._viewType=null;
		this._currentRes=null;
		this.curView=0;
		this.curActivityInfo=null;
		/**请求活动信息*/
		this.REQUEST_ACTIVITY_INFO=3;
		this.id=0;
	}

	__class(ActivityViewControl,'modules.activity.control.ActivityViewControl');
	var __proto=ActivityViewControl.prototype;
	__proto.openView=function($parent,viewType){
		this.id++;
		this._parent=$parent;
		this._viewType=viewType;
		var res=[];
		switch(viewType){
			case "IDEA":
				RedDotMgr.ins.updateRedDotStatus(viewType,false);
				EventMgr.ins.event("ACTIVITY_REDDOT_UPDATE",viewType);
				res=this.resArr("language/"+LanguageMgr.Ins.country+"/activity/idea.atlas");
				this.curActivityInfo=ActivityInfoMgr.ins.model.systemInfo;
				break ;
			case "PLACARD":
				res=[];
				break ;
			case ActivityInfoMgr.ins.model.luckyWheelInfo.activityType:
				ActivityInfoMgr.ins.requestActivityInfo(ActivityInfoMgr.ins.model.luckyWheelInfo.activityType,this.REQUEST_ACTIVITY_INFO);
				res=this.resArr("activity/luckyWheel.atlas","activity/luckyWheel/shuzi.atlas","language/"+LanguageMgr.Ins.country+"/activity/luckyWheel.atlas");
				this.curView=this.TURN_WHEEL;
				break ;
			case "SHARE_FRIEND":
				res=this.resArr("activity/shareFriend.atlas","language/"+LanguageMgr.Ins.country+"/activity/shareFriend.atlas");
				this.curActivityInfo=ActivityInfoMgr.ins.model.shareInfo;
				break ;
			case GmActiveType.ACTIVITY_CONSUME.toString():
				res=this.resArr("activity/commonActivity.atlas","language/"+LanguageMgr.Ins.country+"/activity/commonActivity.atlas");
				this.curView=this.SUM_CONSUME;
				this.curActivityInfo=ActivityInfoMgr.ins.model.consumeInfo;
				break ;
			case GmActiveType.ACTIVITY_RECHARGE.toString():
				res=this.resArr("activity/commonActivity.atlas","language/"+LanguageMgr.Ins.country+"/activity/commonActivity.atlas");
				this.curView=this.SUM_RECHARGE;
				this.curActivityInfo=ActivityInfoMgr.ins.model.recharegeInfo;
				break ;
			case "SEVEN_LOGIN":
				res=this.resArr("activity/login.atlas",
				"language/"+LanguageMgr.Ins.country+"/activity/login.atlas");
				this._viewType="SEVEN_LOGIN";
				this.curActivityInfo=ActivityInfoMgr.ins.model.sevenResAvtivityInfo;
				break ;
			case "SHARE":
				res=this.resArr("activity/shareInvite.atlas","language/"+LanguageMgr.Ins.country+"/activity/shareInvite.atlas");
				this._viewType="SHARE";
				this.curActivityInfo=ActivityInfoMgr.ins.model.inviteNewPlayerInfo;
				break ;
			}
		this._currentRes=res;
		if(this._currentRes.length > 0){
			Laya.loader.load(this._currentRes,Handler.create(this,this.loadAssetsComplete,[this.id],true));
			}else{
			this.loadAssetsComplete(this.id);
		}
	}

	__proto.closeView=function(){
		if(this._currentRes){
			Laya.loader.cancelLoadByUrls(this._currentRes);
			var len=this._currentRes.length;
			for(var i=0;i<len;i+=1){
				Laya.loader.clearRes(this._currentRes[i].url);
			}
		}
		this._currentRes=null;
		if(this._view){
			this._view.removeSelf();
			this._view.destroy();
			this._view=null;
		}
		this._parent=null;
	}

	__proto.loadAssetsComplete=function(id){
		if (this.id !=id)return;
		if(this._view){
			this._view.removeSelf();
			this._view.destroy();
			this._view=null;
		};
		var newView;
		switch(this._viewType){
			case "IDEA":
				newView=new IdeaView;
				break ;
			case "PLACARD":
				newView=new PlacardView;
				break ;
			case "SHARE_FRIEND":
				newView=new ShareFriendView;
				break ;
			case ActivityInfoMgr.ins.model.luckyWheelInfo.activityType:
				return;
				break ;
			case GmActiveType.ACTIVITY_CONSUME.toString():
				newView=new CommonActivityView(4);
				break ;
			case GmActiveType.ACTIVITY_RECHARGE.toString():
				newView=new CommonActivityView(3);
				break ;
			case "SEVEN_LOGIN":
				newView=this.loginView=new ActivityLoginView();
				break ;
			case "SHARE":
				SocketManager.Instance.record.iconClickRecords(8);
				newView=new ShareInviteView();
				break ;
			}
		if(this._parent){
			this._view=newView;
			this._parent.addChild(this._view);
			}else{
			if(newView){
				newView.removeSelf();
				newView.destroy();
				newView=null;
			}
		}
	}

	__proto.resArr=function(__items){
		var items=arguments;
		var arr=[];
		var str;
		var item;
		for(var $each_item in items){
			item=items[$each_item];
			if((typeof item=='string')){
				str="assets/atlas/"+item;
				arr.push(this.atlasObj(str));
			}
			else{
				arr.push(item);
			}
		}
		return arr;
	}

	__proto.atlasObj=function(url,type){
		(type===void 0)&& (type="atlas");
		return {url:url,type:type};
	}

	__getset(1,ActivityViewControl,'ins',function(){
		return ActivityViewControl._ins=ActivityViewControl._ins|| new ActivityViewControl();
	});

	ActivityViewControl._ins=null;
	return ActivityViewControl;
})()


//class modules.activity.data.ActivityInfo
var ActivityInfo=(function(){
	function ActivityInfo(){
		this.titleStr=null;
		this.msg=null;
		this.startTime=NaN;
		this.endTime=NaN;
		this.activityId=null;
		this.activityType=null;
		this.cycleCount=0;
		this.placardType=0;
		this.interValTime=0;
		this.sort=0;
		this.playCount=0;
		this.playTime=NaN;
		this.lastPlayTime=0;
		this.activityState=null;
		/**幸运大转盘道具信息*/
		this.LuckyTurnActiveItemMsg=null;
		/**活动是否开启*/
		this.isOpen=false;
		/**用户数据*/
		this.UserDataInfoMsg=null;
	}

	__class(ActivityInfo,'modules.activity.data.ActivityInfo');
	return ActivityInfo;
})()


/**
*活动数据
*@author baohua.chen
*
*/
//class modules.activity.data.ActivityInfoModel
var ActivityInfoModel=(function(){
	function ActivityInfoModel(){
		this.placardList=null;
		this._systemInfo=null;
		//转盘活动
		this._luckyWheelInfo=null;
		//邀请新人活动
		this._inviteNewPlayerInfo=null;
		//七天登录活动
		this._sevenResAvtivityInfo=null;
		//消费活动
		this._consumeInfo=null;
		//充值活动
		this._recharegeInfo=null;
		this._shareInfo=null;
	}

	__class(ActivityInfoModel,'modules.activity.data.ActivityInfoModel');
	var __proto=ActivityInfoModel.prototype;
	/**
	*
	*@param type(0:精彩活动,1:游戏公告)
	*@return
	*
	*/
	__proto.getTabListInfoByType=function(type){
		var arr=[];
		if(type==0){
			if(this.recharegeInfo.isOpen){
				arr.push(this.recharegeInfo);
			}
			if(this.consumeInfo.isOpen){
				arr.push(this.consumeInfo);
			}
			arr.sort(function(a,b){
				if(a.sort > b.sort){
					return 1;
				}
				if(a.sort < b.sort){
					return-1;
				}
			});
			if(LoginActivityMgr.ins.isOpenView()){
				arr.push(this.sevenResAvtivityInfo)
			}
			arr.push(this.shareInfo);
			}else{
			arr=this.placardList?this.placardList:[];
		}
		return arr;
	}

	__getset(0,__proto,'systemInfo',function(){
		this._systemInfo=new ActivityInfo;
		this._systemInfo.activityId="-1";
		this._systemInfo.titleStr=LanguageMgr.Ins.GetLan("14300072");
		this._systemInfo.msg=LanguageMgr.Ins.GetLan("14300071");
		this._systemInfo.activityType="IDEA";
		return this._systemInfo;
	});

	__getset(0,__proto,'sevenResAvtivityInfo',function(){
		this._sevenResAvtivityInfo=new ActivityInfo();
		this._sevenResAvtivityInfo.activityId="-4";
		this._sevenResAvtivityInfo.titleStr=LanguageMgr.Ins.GetLan("14300358");
		this._sevenResAvtivityInfo.activityType="SEVEN_LOGIN";
		return this._sevenResAvtivityInfo;
	});

	__getset(0,__proto,'luckyWheelInfo',function(){
		return this._luckyWheelInfo||new ActivityInfo();
		},function(info){
		this._luckyWheelInfo=info;
	});

	__getset(0,__proto,'inviteNewPlayerInfo',function(){
		this._inviteNewPlayerInfo=new ActivityInfo();
		this._inviteNewPlayerInfo.activityId="-3";
		this._inviteNewPlayerInfo.titleStr=LanguageMgr.Ins.GetLan("14300357");
		this._inviteNewPlayerInfo.activityType="SHARE";
		return this._inviteNewPlayerInfo;
	});

	__getset(0,__proto,'consumeInfo',function(){
		return this._consumeInfo||new ActivityInfo();
		},function(info){
		this._consumeInfo=info;
	});

	__getset(0,__proto,'recharegeInfo',function(){
		return this._recharegeInfo||new ActivityInfo();
		},function(info){
		this._recharegeInfo=info;
	});

	__getset(0,__proto,'shareInfo',function(){
		this._shareInfo=new ActivityInfo;
		this._shareInfo.activityId="-2";
		this._shareInfo.titleStr=LanguageMgr.Ins.GetLan("9002322");
		this._shareInfo.activityType="SHARE_FRIEND";
		return this._shareInfo;
	});

	return ActivityInfoModel;
})()


/**
*转盘活动物品
*/
//class modules.activity.data.LuckyTurnActiveItemInfo
var LuckyTurnActiveItemInfo=(function(){
	function LuckyTurnActiveItemInfo(){
		/**道具ID*/
		this.itemId=0;
		/**道具数量*/
		this.itemCount=0;
		/**是否稀有(转盘物品特有)*/
		this.isSpecial=false;
		/**类别(区分转盘物品与累抽奖品 1-物品 2-累抽)*/
		this.sort=0;
		/**坐标*/
		this.index=0;
		/**领取所需次数(累抽奖品特有)*/
		this.needCount=0;
		/**开始时间*/
		this.startTime=NaN;
		/**结束时间*/
		this.endTime=NaN;
		/**关闭时间*/
		this.interValTime=NaN;
		this._itemList=[];
		this._boxList=[];
	}

	__class(LuckyTurnActiveItemInfo,'modules.activity.data.LuckyTurnActiveItemInfo');
	var __proto=LuckyTurnActiveItemInfo.prototype;
	__proto.itemInfo=function(infoList){
		if(!infoList)return;
		this._itemList=[];
		this._boxList=[];
		var item;
		for(var $each_item in infoList){
			item=infoList[$each_item];
			if(item.sort==1){
				this._itemList.push(item);
				}else if(item.sort==2){
				this._boxList.push(item);
			}
		}
	}

	__getset(0,__proto,'itemList',function(){
		return this._itemList;
	});

	__getset(0,__proto,'boxList',function(){
		return this._boxList;
	});

	__getset(1,LuckyTurnActiveItemInfo,'Ins',function(){
		return LuckyTurnActiveItemInfo._ins=LuckyTurnActiveItemInfo._ins||new LuckyTurnActiveItemInfo();
	});

	LuckyTurnActiveItemInfo._ins=null;
	return LuckyTurnActiveItemInfo;
})()


//class modules.activity.data.LuckyTurnUserDataInfo
var LuckyTurnUserDataInfo=(function(){
	function LuckyTurnUserDataInfo(){
		/**幸运值*/
		this.lucky=0;
		/**抽奖次数*/
		this.count=0;
		/**领取奖励坐标*/
		this.index=0;
		/**上次抽奖坐标*/
		this.lastIndex=0;
	}

	__class(LuckyTurnUserDataInfo,'modules.activity.data.LuckyTurnUserDataInfo');
	__getset(1,LuckyTurnUserDataInfo,'Ins',function(){
		return LuckyTurnUserDataInfo._ins=LuckyTurnUserDataInfo._ins|| new LuckyTurnUserDataInfo();
	});

	LuckyTurnUserDataInfo._ins=null;
	return LuckyTurnUserDataInfo;
})()


//class modules.activity.events.ActivityEvents
var ActivityEvents=(function(){
	function ActivityEvents(){}
	__class(ActivityEvents,'modules.activity.events.ActivityEvents');
	ActivityEvents.ACTIVITY_BUTTON_CLICK="ACTIVITY_BUTTON_CLICK";
	ActivityEvents.ACTIVITY_PLACARD_UPDATE="ACTIVITY_PLACARD_UPDATE";
	ActivityEvents.ACTIVITY_REDDOT_UPDATE="ACTIVITY_REDDOT_UPDATE";
	ActivityEvents.ACTIVITY_WHEEL_UPDATE="ACTIVITY_WHEEL_UPDATE";
	ActivityEvents.ACTIVITY_REWARDITEM_UPDATE="ACTIVITY_REWARDITEM_UPDATE";
	ActivityEvents.ACTIVITY_RECHARGE_SET="ACTIVITY_RECHARGE_SET";
	ActivityEvents.ACTIVITY_CONSUME_SET="ACTIVITY_CONSUME_SET";
	ActivityEvents.ACTIVITY_COMMONACTIVITY_UPDATE="ACTIVITY_COMMONACTIVITY_UPDATE";
	return ActivityEvents;
})()


//class modules.AD.consts.ADType
var ADType=(function(){
	function ADType(){}
	__class(ADType,'modules.AD.consts.ADType');
	ADType.OPEN_CARD=1;
	ADType.PVE_LOSE=2;
	ADType.TREASURE_BOX_DETAIL=3;
	ADType.CHU_CHU_ROCKET=4;
	ADType.SHOP_AD=5;
	return ADType;
})()


/**
*导弹工厂
*@author huyouwei
*/
//class modules.battle.bomb.BombFactory
var BombFactory=(function(){
	function BombFactory(){
		this.bombList=[];
	}

	__class(BombFactory,'modules.battle.bomb.BombFactory');
	var __proto=BombFactory.prototype;
	__proto.clearBombList=function(){
		var baseBomb=this.bombList.shift();
		while(baseBomb){
			baseBomb.destroy();
			baseBomb=this.bombList.shift();
		}
	}

	__proto.createBomb=function(bombID,data,bombType){
		var bomb=null;
		if(bombType==1){
			bomb=new NormalBomb(bombID);
			}else if(bombType==2){
			bomb=new TyreBomb(bombID);
		}
		else if(bombType==3){
			bomb=new LocalBomb(bombID)
		}
		this.bombList.push(bomb);
		return bomb;
	}

	BombFactory.getInstance=function(){
		if (BombFactory._instance==null){
			BombFactory._instance=new BombFactory();
		}
		return BombFactory._instance;
	}

	BombFactory._instance=null;
	return BombFactory;
})()


//class modules.battle.core.action.BaseAction
var BaseAction=(function(){
	function BaseAction(begin,end,battleScene){
		this.isOver=false;
		this.frame=0;
		this.begin=0;
		this.end=0;
		this.battleScene=null;
		this.frameRate=1.0 / 30.0;
		this.begin=begin;
		this.end=end;
		this.battleScene=battleScene;
	}

	__class(BaseAction,'modules.battle.core.action.BaseAction');
	var __proto=BaseAction.prototype;
	__proto.update=function(){
		if (this.isOver){
			return;
		}
		this.frame=this.frame+1;
		if (this.frame==this.begin){
			this.start();
		}
		if (this.frame > this.begin && this.frame < this.end){
			this.updateAction(this.frame);
		}
		if (this.frame >=this.end){
			this.over();
		}
	}

	__proto.over=function(){
		this.isOver=true;
	}

	__proto.start=function(){}
	__proto.updateAction=function(frame){}
	__proto.cancel=function(){
		this.isOver=true;
		this.destroy();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.battleScene=null;
		this.isOver=true;
	}

	return BaseAction;
})()


//class modules.battle.core.action.BombDetail
var BombDetail=(function(){
	function BombDetail(startTime,bombDetail,battleScene,fire){
		this.bombDetail=null;
		this.battleScene=null;
		this.bombs=[];
		this.executes=[];
		this.executeings=[];
		this.executers=[];
		this.fire=null;
		this.startTime=0;
		this._isStart=false;
		this._isOver=false;
		this.isMoveOver=false;
		this.bombDetail=bombDetail;
		this.battleScene=battleScene;
		this.fire=fire;
		this.startTime=startTime;
		this.initEvent();
	}

	__class(BombDetail,'modules.battle.core.action.BombDetail');
	var __proto=BombDetail.prototype;
	__proto.initEvent=function(){
		EventMgr.ins.on("ADD_BOMBACTION",this,this.addBombAction);
		EventMgr.ins.on("CLEAR_BOMB_ACTION",this,this.clearAllAction);
		EventMgr.ins.on(String(0x0022),this,this.singleExecuteMsg);
	}

	__proto.addBombAction=function(msg){
		for(var i=0;i < this.bombs.length;i++){
			var obj=this.bombs[i];
			var detailMsg=obj.msg;
			detailMsg.actions.push(msg);
		}
	}

	__proto.clearAllAction=function(){
		this.bombs=[];
	}

	__proto.start=function(){
		if (this._isStart)return;
		this._isStart=true;
		for(var i=0;i < this.bombDetail.length;i++){
			var msg=this.bombDetail[i];
			var ball=this.createBomb(msg);
			var source=this.battleScene.getFighter(msg.livingID);
			if((source && source.type==Fighter.ROLE && source.isHide && msg.bombID==3000001)){
				ball.visible=false;
			}
			this.bombs.push({msg:msg,ball:ball});
			this.playFireSound(msg.bombID);
		}
		this.isMoveOver=false;
	}

	/**播放开炮声音 */
	__proto.playFireSound=function(bombId){
		var bombPer=BombModel.getBombPerformanceConfigByBombId(bombId);
		if(bombPer){
			var fireSoundId=bombPer.FireSoundID;
			if(fireSoundId !=0){
				SoundMgr.instance.playSound(fireSoundId);
			}
		}
	}

	__proto.createBomb=function(msg){
		var bombCount=msg.bombCount;
		var bombID=msg.bombID;
		var beginX=msg.beginX;
		var beginY=msg.beginY;
		var force=msg.force/10;
		var angle=msg.angle/100;
		var bombIndex=msg.bombIndex;
		var bombLivingID=msg.bombLivingID;
		var actions=msg.actions;
		var dir=msg.dir;
		var swing=msg.swing;
		var directionType=msg.directionType;
		var bomb=BombModel.getBombConfigByBombId(bombID);
		var g=bomb.Gravity;
		var fengli=bomb.WindForce;
		var air=bomb.AirResistance;
		var m=bomb.Mass;
		var time=this.getBombTime(msg);
		var type=msg.type;
		if(this.battleScene.executorFactory){
			this.battleScene.execSyncBuffer(bombLivingID);
			this.battleScene.executorFactory.executeBuff(bombLivingID);
			this.battleScene.executorFactory.executeSyncLiving();
			this.battleScene.executorFactory.executeSyncPlayerState();
			var _bomb=this.battleScene.createBomb(bombID,type,g,force,angle,beginX,this.battleScene.height-beginY,fengli,air,m,dir,time,0,msg);
			return _bomb;
			}else{
			return null;
		}
	}

	__proto.getBombTime=function(msg){
		var time=0;
		for(var j=0;j < msg.actions.length;j++){
			var actionMsg=msg.actions[j];
			if(actionMsg.time > time){
				time=actionMsg.time;
			}
		}
		return time/1000;
	}

	__proto.updateAction=function(time){
		if (time > this.startTime)this.start();
		time-=this.startTime;
		var i=0,j=0,n=0,m=0,obj,msg,bomb,singleAction=false;
		var actionMsg,exeTime=NaN;
		for (i=0,n=this.bombs.length;i < n;i++){
			obj=this.bombs[i];
			msg=obj.msg;
			bomb=obj.ball;
			singleAction=false;
			for (j=0,m=msg.actions.length;j < m;j++){
				actionMsg=msg.actions[j];
				if (actionMsg.type==TriggerType.KICKFLY){
					singleAction=true;
					break ;
				}
			}
			for (j=0,m=msg.actions.length;j < m;j++){
				actionMsg=msg.actions[j];
				exeTime=actionMsg.time+this.fire.delayTime;
				if (time >=exeTime || this.isMoveOver || this._isOver){
					if (!this.hasExecute(actionMsg)&& !this.hasExecuteing(actionMsg)){
						if (singleAction){
							if (j >=1){
								var perMsg=msg.actions[j-1];
								if (this.hasExecute(perMsg)|| this._isOver){
									this.executeMsg(actionMsg,msg,bomb);
								}
							}
							else{
								this.executeMsg(actionMsg,msg,bomb);
							}
						}
						else{
							this.executeMsg(actionMsg,msg,bomb);
						}
					}
				}
			}
		}
	}

	__proto.singleExecuteMsg=function(){
		this.isMoveOver=true;
	}

	__proto.executeMsg=function(actionMsg,msg,bomb){
		var executer=TriggerType.createTrigger(actionMsg,msg,bomb,this.battleScene,this.fire,this);
		if(executer){
			this.executers.push(executer);
			executer.execute();
		}
		this.executeings.push(actionMsg);
	}

	__proto.addExecute=function(actionMsg){
		this.executes.push(actionMsg);
	}

	__proto.hasExecuteing=function(actionMsg){
		for(var i=0;i < this.executeings.length;i++){
			if(this.executeings[i]==actionMsg){
				return true;
			}
		}
		return false;
	}

	__proto.hasExecute=function(actionMsg){
		for(var i=0;i < this.executes.length;i++){
			if(this.executes[i]==actionMsg){
				return true;
			}
		}
		return false;
	}

	__proto.destroy=function(){
		this.removeEvent();
		this._isOver=true;
		this.updateAction(0);
		this.bombDetail.splice(0);
		this.bombDetail=null;
		this.battleScene=null;
		while(this.bombs && this.bombs.length > 0){
			var bomb=this.bombs.pop();
			if(bomb && bomb["ball"]){
				bomb["ball"].destroy();
			}
		}
		this.bombs=null;
		for(var i=0;i < this.executers.length;i++){
			this.executers[i].destroy();
		}
		this.executers.splice(0);
		this.executers=null;
		this.executes.splice(0);
		this.executes=null;
		this.executeings.splice(0);
		this.executeings=null;
		this.fire=null;
	}

	__proto.removeEvent=function(){
		EventMgr.ins.off("ADD_BOMBACTION",this,this.addBombAction);
		EventMgr.ins.off("CLEAR_BOMB_ACTION",this,this.clearAllAction);
		EventMgr.ins.off(String(0x0022),this,this.singleExecuteMsg);
	}

	return BombDetail;
})()


//class modules.battle.core.action.type.BaseTrigger
var BaseTrigger=(function(){
	function BaseTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		this.time=0;
		this.type=0;
		this.param1=0;
		this.param2=0;
		this.param3=0;
		this.param6=0;
		this.param7=0;
		this.param5=null;
		this.param4=0;
		this.actionMsg=null;
		this.detailmsg=null;
		this.ball=null;
		this.battlescene=null;
		this.isExecuteOver=false;
		this.fire=null;
		this.executor=null;
		this.actionMsg=actionMsg;
		this.detailmsg=detailmsg;
		this.ball=ball;
		this.battlescene=battlescene;
		this.fire=fire;
		this.executor=executor;
		this.time=actionMsg.time;
		this.type=actionMsg.type;
		this.param1=actionMsg.param1;
		this.param2=actionMsg.param2;
		this.param3=actionMsg.param3;
		this.param4=actionMsg.param4;
		this.param5=actionMsg.param5;
		this.param6=actionMsg.param6;
		this.param7=actionMsg.param7;
	}

	__class(BaseTrigger,'modules.battle.core.action.type.BaseTrigger');
	var __proto=BaseTrigger.prototype;
	__proto.getSourceId=function(){
		return this.detailmsg.livingID;
	}

	__proto.execute=function(){
		this.executeOver();
	}

	__proto.executeOver=function(){
		if(this.executor){
			this.executor.addExecute(this.actionMsg);
		}
	}

	__proto.destroy=function(){
		this.actionMsg=null;
		this.detailmsg=null;
		this.ball=null;
		this.battlescene=null;
		this.fire=null;
		this.executor=null;
	}

	return BaseTrigger;
})()


//class modules.battle.core.action.type.TriggerType
var TriggerType=(function(){
	function TriggerType(){}
	__class(TriggerType,'modules.battle.core.action.type.TriggerType');
	TriggerType.createTrigger=function(actionMsg,detailmsg,ball,battlescene,fire,executor){
		var execute=null;
		switch(actionMsg.type){
			case TriggerType.DAMAGE_PLAYER:execute=new DamagePlayerTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			case TriggerType.START_MOVE:execute=new DropPlayerTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			case TriggerType.BOMB:execute=new BombTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			case TriggerType.PERFECT_HIT:execute=new PerfectHitTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			case TriggerType.FLY:execute=new FlyTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			case TriggerType.KICKFLY:execute=new JiFeiTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			case TriggerType.CHANGE_SPEED:execute=new ChangeSpeedTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			case TriggerType.GUIDE_BOMB:execute=new GuideBombTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			case TriggerType.SUMMON_NPC:execute=new SummonNpcTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			case TriggerType.DIE:execute=new DieTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			case TriggerType.FLY_OUT:execute=new FlyOutTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			case TriggerType.EXPRESSION:execute=new ExpressionTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			case TriggerType.SPLIT:execute=new SplitTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			case TriggerType.MISSION_SUPPLY:execute=new MapSupplyTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			case TriggerType.MELEE_DAMAGE:execute=new MeleeDamageTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			case TriggerType.BATTLE_EVALUATION:execute=new BattleJudgeTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			case TriggerType.DISAPPEAR:execute=new BombDisappearTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			default :execute=new BaseTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor);break ;
			}
		return execute;
	}

	TriggerType.BOMB=1;
	TriggerType.DAMAGE_PLAYER=2;
	TriggerType.FLY_OUT=3;
	TriggerType.PLAYMOVIE=4;
	TriggerType.PLAYBUFFER=5;
	TriggerType.PICK=6;
	TriggerType.EXPRESSION=7;
	TriggerType.START_MOVE=8;
	TriggerType.FLY=9;
	TriggerType.FORZEN=10;
	TriggerType.CURE=11;
	TriggerType.DEFENCE=12;
	TriggerType.CHANGE_SPEED=13;
	TriggerType.DAMAGE_PHYSICAL=14;
	TriggerType.UNFORZEN=15;
	TriggerType.TACTICS_SUPPLY=16;
	TriggerType.SPLIT=17;
	TriggerType.OBJECT_BORM_EFFECT=18;
	TriggerType.SPECIALSKILL=20;
	TriggerType.GUIDE_BOMB=22;
	TriggerType.ENTERFIX=23;
	TriggerType.DISAPPEAR=24;
	TriggerType.SUMMON_NPC=25;
	TriggerType.SUMMON_OBJECT=26;
	TriggerType.PERFECT_HIT=27;
	TriggerType.VAMPIRE=28;
	TriggerType.KICKFLY=29;
	TriggerType.DIE=30;
	TriggerType.MISSION_SUPPLY=31;
	TriggerType.MELEE_DAMAGE=33;
	TriggerType.BATTLE_EVALUATION=34;
	return TriggerType;
})()


//class modules.battle.core.buff.Buffer
var Buffer=(function(){
	function Buffer(msg,targetLivingId,bombLivingId,time){
		this.livingID=0;
		//livingID
		this.bufferID=0;
		//buffer的ID
		this.bufferType="";
		//buffer类型
		this.isAdd=false;
		//true:添加，false移除
		this.sourceLivingID=0;
		//buffer来源ID
		this.value=0;
		//临时参数变量
		this.targetLivingId=0;
		//目标livingID
		this.bombLivingId=0;
		//所属炮弹id
		this.time=0;
		this.executeAdd=false;
		this.livingID=msg.livingID;
		this.bufferID=msg.bufferID;
		this.bufferType=msg.bufferType;
		this.isAdd=msg.isAdd;
		this.sourceLivingID=msg.sourceLivingID;
		this.value=msg.value;
		this.targetLivingId=targetLivingId;
		this.bombLivingId=bombLivingId;
		this.time=time;
	}

	__class(Buffer,'modules.battle.core.buff.Buffer');
	Buffer.SHOW_ATONCE=1;
	Buffer.SHOW_DELAY=2;
	return Buffer;
})()


//class modules.battle.core.executor.Executor
var Executor=(function(){
	function Executor(battleScene){
		this.frameRate=1.0/30.0;
		this.frame=0;
		this.battleScene=null;
		Laya.timer.frameLoop(1,this,this._update);
		this.battleScene=battleScene;
	}

	__class(Executor,'modules.battle.core.executor.Executor');
	var __proto=Executor.prototype;
	__proto._update=function(){
		this.frame=this.frame+1;
		var time=this.frame *this.frameRate *1000;
		this.update(time);
	}

	__proto.update=function(time){}
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		Laya.timer.clear(this,this._update);
		this.battleScene=null;
	}

	return Executor;
})()


//class modules.battle.crater.CraterFactory
var CraterFactory=(function(){
	function CraterFactory(){
		this._craterRes={}
		CraterFactory._instance=this;}
	__class(CraterFactory,'modules.battle.crater.CraterFactory');
	var __proto=CraterFactory.prototype;
	__proto.craterResById=function(craterId,handler){
		var key=craterId;
		if(this._craterRes[key]){
			this._craterRes[key].onCallBack(handler);
			}else{
			var crater=new CraterRes(craterId);
			this._craterRes[key]=crater;
			crater.onCallBack(handler);
		}
	}

	__proto.destroy=function(){
		for (var key in this._craterRes){
			var crater=this._craterRes[key];
			crater.destroy();
			delete this._craterRes[key];
		}
		this._craterRes={};
	}

	__getset(1,CraterFactory,'instance',function(){return CraterFactory._instance=CraterFactory._instance|| new CraterFactory();});
	CraterFactory._instance=null;
	return CraterFactory;
})()


//class modules.battle.crater.CraterRes
var CraterRes=(function(){
	function CraterRes(craterId){
		this.isComplete1=false;
		this.isComplete2=false;
		this.atlas=null;
		this.bomb=null;
		this.craterId=null;
		this.methods=[];
		this.craterId=craterId;
		this.atlas=StringUtils.formate("assets/atlas/crack/{0}.atlas",craterId);
		this.bomb=StringUtils.formate("assets/crack/{0}.bomb",craterId);
		Laya.loader.load(this.atlas,Handler.create(this,this.atlasComplete),null,"atlas");
		Laya.loader.load(this.bomb,Handler.create(this,this.bombComplete),null,"arraybuffer");
	}

	__class(CraterRes,'modules.battle.crater.CraterRes');
	var __proto=CraterRes.prototype;
	__proto.bombComplete=function(){
		var buffer=Laya.loader.getRes(this.bomb);
		Laya.loader.clearRes(this.bomb,true);
		var byteArray=new ByteArray();
		byteArray.writeArrayBuffer(buffer);
		byteArray.position=0;
		TileReader.readCrack(byteArray,this.craterId);
		this.isComplete1=true;
		this.checkInvoke();
	}

	__proto.atlasComplete=function(){
		this.isComplete2=true;
		this.checkInvoke();
	}

	__proto.checkInvoke=function(){
		if(this.isComplete1 && this.isComplete2){
			for(var i=0;i < this.methods.length;i++){
				this.invoke(this.methods[i]);
			}
			this.methods.splice(0);
		}
	}

	__proto.invoke=function(handler){
		if(handler){
			handler.run();
		}
	}

	__proto.onCallBack=function(handler){
		if(this.isComplete1 && this.isComplete2){
			this.invoke(handler);
			}else{
			this.methods.push(handler);
		}
	}

	__proto.destroy=function(){
		Laya.loader.clearRes(this.atlas,true);
	}

	return CraterRes;
})()


//class modules.battle.effect.ShockMapEffect
var ShockMapEffect=(function(){
	function ShockMapEffect(info,scene){
		this.battleScene=null;
		this.posX=0;
		this.posY=0;
		this.offsetX=0;
		this.offsetY=0;
		this.needFrame=0;
		this.frameNum=0;
		this.battleScene=scene;
		this.posX=this.battleScene.x;
		this.posY=this.battleScene.y;
		this.offsetX=info.seekX;
		this.offsetY=info.seekY;
		this.frameNum=info.duration *30 / 1000;
		Laya.timer.frameLoop(1,this,this.updateAction);
	}

	__class(ShockMapEffect,'modules.battle.effect.ShockMapEffect');
	var __proto=ShockMapEffect.prototype;
	__proto.updateAction=function(){
		this.needFrame++;
		this.offsetX=-this.offsetX
		if (this.needFrame <=this.frameNum){
			Tween.to(this.battleScene,{x:this.posX+this.offsetX,y:this.posY+this.offsetY},1);
			}else{
			Laya.timer.clear(this,this.updateAction);
			this.destroySelf();
		}
	}

	__proto.destroySelf=function(){
		Tween.to(this.battleScene,{x:this.posX,y:this.posY},1)
	}

	return ShockMapEffect;
})()


//class modules.battle.part.obj.ObjectFactory
var ObjectFactory=(function(){
	function ObjectFactory(){}
	__class(ObjectFactory,'modules.battle.part.obj.ObjectFactory');
	var __proto=ObjectFactory.prototype;
	__proto.createSupplyObjcet=function(msg,battleScene){
		var object=new Supply(msg,battleScene);
		return object;
	}

	ObjectFactory.getInstance=function(){
		if(ObjectFactory._instance==null){
			ObjectFactory._instance=new ObjectFactory();
		}
		return ObjectFactory._instance;
	}

	ObjectFactory._instance=null;
	return ObjectFactory;
})()


//class modules.battle.part.PartFactory
var PartFactory=(function(){
	function PartFactory(){}
	__class(PartFactory,'modules.battle.part.PartFactory');
	PartFactory.createNpc=function(msg){
		var npc=null;
		if (msg.type==PartFactory.DDJ){
			npc=new DanDanJi(msg);
		}
		else if (msg.type==PartFactory.DUNQIANG){
			npc=new DunQiang(msg);
		}
		else if (msg.type==PartFactory.SUMMON){
			npc=new SummonMonster(msg);
		}
		else if(msg.type==PartFactory.GREEN_HAT){
			npc=new AppleMan(msg);
			npc.name="appleMan";
		}
		return npc;
	}

	PartFactory.createRole=function(msg){
		if (msg.userId==PlayerInfo.instance.playerId){
			return new Hero(msg);
		}
		if (msg.hasRobotId && msg.playerType==1){
			return new BaseMonster(msg);
		}
		return new Role(msg);
	}

	PartFactory.createSupplyObjcet=function(msg,battleScene){
		var object=new Supply(msg,battleScene);
		return object;
	}

	PartFactory.DDJ=0;
	PartFactory.DUNQIANG=1;
	PartFactory.SCARECROW=3;
	PartFactory.GREEN_HAT=4;
	PartFactory.SUMMON=5;
	PartFactory.APPLE_MAN=6;
	PartFactory.PLAYER_TYPE_PLAYER=0;
	PartFactory.PLAYER_TYPE_MONSTER=1;
	return PartFactory;
})()


//class modules.battle.part.role.RoleModelType
var RoleModelType=(function(){
	//215
	function RoleModelType(){}
	__class(RoleModelType,'modules.battle.part.role.RoleModelType');
	__getset(1,RoleModelType,'RandomWamanModel',function(){
		return RoleModelType.WamanModel;
	});

	__getset(1,RoleModelType,'RandomManModel',function(){
		return RoleModelType.ManModel;
	});

	RoleModelType.ManModel=102;
	RoleModelType.WamanModel=204;
	RoleModelType._getManTimes=0;
	return RoleModelType;
})()


//class modules.battle.PathMgr
var PathMgr=(function(){
	function PathMgr(){}
	__class(PathMgr,'modules.battle.PathMgr');
	PathMgr.getMedalRes=function(rank){
		var data={};
		if(rank.Division > 0){
			if(rank.Division < 10){
				data.iconRes="assets/textrue/medal/duanwei_00"+rank.Division+".png";
				data.descRes="assets/textrue/language/"+LanguageMgr.Ins.country+"/medal/ui_00"+rank.Division+".png";
				}else{
				data.iconRes="assets/textrue/medal/duanwei_0"+rank.Division+".png";
				data.descRes="assets/textrue/language/"+LanguageMgr.Ins.country+"/medal/ui_0"+rank.Division+".png";
			}
			data.textRes="assets/textrue/language/"+LanguageMgr.Ins.country+"/medal/ui_zi"+rank.Division+".png";
			if(rank.Star > 0 && rank.Star < 6){
				data.numRes="assets/textrue/medal/ui_"+rank.Star+".png";
				}else{
				data.numRes="";
			}
		}
		return data;
	}

	PathMgr.getItemIcon=function(data){
		switch(data.ItemID){
			case-50:
				return 'assets/textrue/language/'+LanguageMgr.Ins.country+'/itemicon/'+data.Icon+'.png';
				break ;
			case 6008001:
				return 'assets/textrue/language/'+LanguageMgr.Ins.country+'/itemicon/'+data.Icon+'.png';
				break
			}
		return "assets/textrue/itemicon/"+data.Icon+".png";
	}

	PathMgr.getKillDesc=function(value){
		var resPath;
		if(value==1){
			resPath=LanguageMgr.Ins.getBattleLanguagePath("ld/ui_ds.png");
			}else if(value==2){
			resPath=LanguageMgr.Ins.getBattleLanguagePath("ld/ui_sr.png");
			}else if(value==4){
			resPath=LanguageMgr.Ins.getBattleLanguagePath("ld/ui_zj.png");
			}else{
			resPath=LanguageMgr.Ins.getBattleLanguagePath("ld/ui_jb.png");
		}
		return resPath;
	}

	PathMgr.getDivisionIcon=function(div){
		var path;
		if(div <10){
			path=StringUtils.formate("assets/textrue/medal/duanwei_00{0}.png",div);
			}else{
			path="assets/textrue/medal/duanwei_0"+div+".png";
		}
		return path;
	}

	PathMgr.getBoxIcon=function(idx){
		var path=StringUtils.formate("assets/textrue/itemicon/{0}.png",idx);
		return path;
	}

	PathMgr.getBadgeIcon=function(idx){
		var path;
		path=StringUtils.formate("assets/textrue/badge/ui_icon_0{0}.png",idx);
		return path;
	}

	return PathMgr;
})()


//class modules.battle.type.EventType
var EventType=(function(){
	function EventType(){}
	__class(EventType,'modules.battle.type.EventType');
	EventType.ADD_BOMB_ACTION="ADD_BOMBACTION";
	EventType.CLEAR_BOMB_ACTION="CLEAR_BOMB_ACTION";
	EventType.DIG_CRATER_LOCAL="DIG_CRATER_LOCAL";
	EventType.SEND_LOCAL_FIRE="SEND_LOCAL_FIRE";
	EventType.MOVE_NPC_POS="MOVE_NPC_POS";
	EventType.STOP_MOVE_NPC_POS="STOP_MOVE_NPC_POS";
	EventType.SHOW_SINGLE_RESULT="SHOW_SINGLE_RESULT";
	EventType.REFRESH_DIE_NUM="REFRESH_DIE_NUM";
	EventType.UPDATE_SCENE_WIND="UPDATE_SCENE_WIND";
	EventType.OVER_TURN="OVER_TURN";
	EventType.NEXT_TURN="NEXT_TURN";
	EventType.SHOOT_APPLE="SHOOT_APPLE";
	EventType.SHOOT_HEAD="SHOOT_HEAD";
	EventType.SHOOT_BODY="SHOOT_BODY";
	EventType.SHOOT_AIR="SHOOT_AIR";
	EventType.REFRESH_COLLIDE_AREA="REFRESH_COLLIDE_AREA";
	EventType.CHANGE_TREE_HEIGHT="CHANGE_TREE_HEIGHT";
	EventType.RECV_RESULT_REVIVE="RECV_RESULT_REVIVE";
	EventType.BATTLE_PAUSE="BATTLE_PAUSE";
	EventType.BATTLE_RESUME="BATTLE_RESUME";
	EventType.BATTLE_START="BATTLE_START";
	EventType.RANK_APPLE_ALL="RANK_APPLE_ALL";
	EventType.RANK_APPLE_FRIEND="RANK_APPLE_FRIEND";
	EventType.REFRESH_MENUVIEW="REFRESH_MENUVIEW";
	EventType.REFRESH_NPC="REFRESH_NPC";
	EventType.REFRESH_SCORE="REFRESH_SCORE";
	EventType.SHOW_PRELUDE="SHOW_PRELUDE";
	EventType.HIDE_PRELUDE="HIDE_PRELUDE";
	EventType.HIDE_PRELUDE_COMPLETE="HIDE_PRELUDE_COMPLETE";
	EventType.SHOW_PLAY_AGAIN="SHOW_PLAY_AGAIN";
	EventType.SEND_RESULT_TO_SERVER="SEND_RESULT_TO_SERVER";
	EventType.LOCAL_BATTLE_MOVE="LOCAL_BATTLE_MOVE";
	EventType.ROLE_MOVE_OVER="ROLE_MOVE_OVER";
	EventType.ROLE_MOVING="ROLE_MOVING";
	EventType.SHOW_SKILL_GROUP="SHOW_SKILL_GROUP";
	EventType.SHOW_SKILL_GROUP_AFTER_FIRE="SHOW_SKILL_GROUP_AFTER_FIRE";
	EventType.PLAY_AGAIN="PLAY_AGAIN";
	EventType.REFRESH_ROOM_ITEM="REFRESH_ROOM_ITEM";
	EventType.RECORD_ASKFOR_ID="RECORD_ASKFOR_ID";
	EventType.REMOVE_ITEM="REMOVE_ITEM";
	EventType.INIT_APPLE="INIT_APPLE";
	EventType.REFRESH_DATA="REFRESH_DATA";
	EventType.RANK_CHANGE_LIST_DATA_SOURCE="RANK_CHANGE_LIST_DATA_SOURCE";
	return EventType;
})()


//class modules.battle.type.VoteType
var VoteType=(function(){
	//public static const NEXTTURN:String="1";
	function VoteType(){}
	__class(VoteType,'modules.battle.type.VoteType');
	return VoteType;
})()


//class modules.battle.utils.GeometryUtils
var GeometryUtils=(function(){
	function GeometryUtils(){}
	__class(GeometryUtils,'modules.battle.utils.GeometryUtils');
	GeometryUtils.getLineAndCirclePoint=function(curPos,lastPos,oriPos,r){
		var data={}
		data.result=false;
		if(curPos.x==lastPos.x && curPos.y==lastPos.y){
			data.result=false;
			return data
		};
		var k=(curPos.y-lastPos.y)/ (curPos.x-lastPos.x);
		var c=curPos.y-k *curPos.x;
		var a=oriPos.x;
		var b=oriPos.y;
		var diaoTa=Math.pow((2*k*c-2*k*b-2*a),2)-4 *(k*k+1)*(a*a+c*c+b*b-2*b*c-r*r);
		if(diaoTa >=0){
			var x1=(-(2*k*c-2*k*b-2*a)+Math.sqrt(diaoTa))/ (2 *(k*k+1));
			var x2=(-(2*k*c-2*k*b-2*a)-Math.sqrt(diaoTa))/ (2 *(k*k+1));
			var y1=k*x1+c;
			var y2=k*x2+c;
			if(x1 >=lastPos.x && x1 <=curPos.x){
				data.result=true;
				data.point=new Point(oriPos.x,k*oriPos.x+c);
				}else if(x2 >=lastPos.x && x2 <=curPos.x){
				data.result=true;
				data.point=new Point(oriPos.x,k*oriPos.x+c);
			}
		}
		return data
	}

	return GeometryUtils;
})()


/**
*战斗工厂
*@author huyouwe
*/
//class modules.battle.view.BattleSceneFactory
var BattleSceneFactory=(function(){
	function BattleSceneFactory(){}
	__class(BattleSceneFactory,'modules.battle.view.BattleSceneFactory');
	var __proto=BattleSceneFactory.prototype;
	__proto.createBattleScene=function(id){
		var view=null;
		switch(id){
			case "1":view=new BattleScene1UI();break ;
			case "6":view=new BattleScene6UI();break ;
			case "7":view=new BattleScene7UI();break ;
			case "9":view=new BattleScene9UI();break ;
			case "202":view=new BattleScene202UI();break ;
			case "201":view=new BattleScene201UI();break ;
			case "204":view=new BattleScene204UI();break ;
			case "302":view=new BattleScene302UI();break ;
			case "303":view=new BattleScene303UI();break ;
			case "304":view=new BattleScene304UI();break ;
			case "305":view=new BattleScene305UI();break ;
			case "601":view=new BattleScene601UI();break ;
			case "602":view=new BattleScene602UI();break ;
			case "1001":view=new BattleScene1001UI();break ;
			case "1003":view=new BattleScene1003UI();break ;
			case "1103":view=new BattleScene1103UI();break ;
			case "6022":view=new BattleScene6022UI();break ;
			}
		return view;
	}

	BattleSceneFactory.getInstance=function(){
		if (BattleSceneFactory._instance==null){
			BattleSceneFactory._instance=new BattleSceneFactory();
		}
		return BattleSceneFactory._instance;
	}

	BattleSceneFactory._instance=null;
	return BattleSceneFactory;
})()


//class modules.battle.view.result.BattleOverPlayer
var BattleOverPlayer=(function(){
	function BattleOverPlayer(playerMsg){
		this.rank=0;
		this.userId=null;
		this.nickName=null;
		this.headUrl=null;
		this.level=0;
		this.kill=0;
		this.die=0;
		this.damage=0;
		this.topIcon=null;
		this.skillRecord=null;
		this.score=0;
		this.trophy=0;
		this.exp=0;
		this.gold=0;
		this.teamType=0;
		this.reward=null;
		/**胜利宝箱钥匙 */
		this.key=0;
		/**战斗结果1胜利2失败0平局*/
		this.result=0;
		this.isMvp=false;
		this.rank=playerMsg.order;
		this.userId=playerMsg.userId;
		this.nickName=playerMsg.nickName;
		this.headUrl=(playerMsg.headUrl.indexOf("http")==-1 && playerMsg.headUrl !="")? "assets/textrue/aihead/"+playerMsg.headUrl+".png" :playerMsg.headUrl;
		this.level=playerMsg.level;
		this.kill=playerMsg.kill;
		this.die=playerMsg.die;
		this.damage=playerMsg.damge;
		this.score=playerMsg.score;
		this.trophy=playerMsg.trophy;
		this.exp=playerMsg.exp;
		this.gold=playerMsg.gold;
		this.result=playerMsg.result;
		this.teamType=playerMsg.teamType;
		this.skillRecord=[];
		if (Boolean(playerMsg.skillRecord)){
			var group,sub,skillVO;
			group=playerMsg.skillRecord.split("|");
			for (var i=0,n=group.length;i < n;i++){
				sub=group[i].split(",");
				if (int(sub[0])!=1000001){
					skillVO=SkillModel.getSkillConfigData(int(sub[0]));
					this.skillRecord.push({"imgCard":"assets/textrue/skill/min/"+skillVO.Icon});
				}
			}
		}
	}

	__class(BattleOverPlayer,'modules.battle.view.result.BattleOverPlayer');
	var __proto=BattleOverPlayer.prototype;
	__getset(0,__proto,'isSelf',function(){
		return this.userId==String(PlayerInfo.instance.userId);
	});

	return BattleOverPlayer;
})()


//class modules.battle.view.result.BattleOverReward
var BattleOverReward=(function(){
	function BattleOverReward(){
		this.itemTempId=0;
		this.itemCount=0;
		this.isSelect=false;
	}

	__class(BattleOverReward,'modules.battle.view.result.BattleOverReward');
	return BattleOverReward;
})()


//class modules.battleRecord.BattleRecordMgr
var BattleRecordMgr=(function(){
	function BattleRecordMgr(){}
	__class(BattleRecordMgr,'modules.battleRecord.BattleRecordMgr');
	var __proto=BattleRecordMgr.prototype;
	__proto.setup=function(){
		SocketManager.Instance.on(0x0104,this,this.onRecvBattleRecordInfo);
	}

	__proto.onRecvBattleRecordInfo=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.BattleLogListMsg,pkg);
		if(!res)return;
		BattleRecordInfo.Ins.BattleRecordData=res.list;
	}

	__getset(1,BattleRecordMgr,'Ins',function(){
		return BattleRecordMgr._ins=BattleRecordMgr._ins||new BattleRecordMgr();
	});

	BattleRecordMgr._ins=null;
	return BattleRecordMgr;
})()


//class modules.battleRecord.data.BattleRecordInfo
var BattleRecordInfo=(function(){
	function BattleRecordInfo(){
		this.battleType=0;
		// 战斗类型
		this.endTime=NaN;
		// 结束时间
		this.info=null;
		this._arrLength=Number(ConfigModel.getConfigData(1136).ConfigValue);
		this._battleRecordData=[];
	}

	__class(BattleRecordInfo,'modules.battleRecord.data.BattleRecordInfo');
	var __proto=BattleRecordInfo.prototype;
	__getset(0,__proto,'BattleRecordData',function(){
		return BattleRecordInfo.Ins._battleRecordData;
		},function(arr){
		var info;
		for(var $each_info in arr){
			info=arr[$each_info];
			if(BattleRecordInfo.Ins._battleRecordData.length<this._arrLength){
				BattleRecordInfo.Ins._battleRecordData.unshift(info);
				}else{
				BattleRecordInfo.Ins._battleRecordData.pop();
				BattleRecordInfo.Ins._battleRecordData.unshift(info);
			}
		}
	});

	__getset(1,BattleRecordInfo,'Ins',function(){
		return BattleRecordInfo._ins=BattleRecordInfo._ins|| new BattleRecordInfo();
	});

	BattleRecordInfo._ins=null;
	return BattleRecordInfo;
})()


//class modules.battle_apple.LocalBattleMgr
var LocalBattleMgr=(function(){
	function LocalBattleMgr(){
		this.askForNum=0;
		this.itemNum=0;
		this.extraChange=0;
		this.singleScene=null;
		this.isLocalBattle=false;
		this.collideFighterArray=[];
		this.fireMsg=null;
		this.shootLevel=0;
		this.arrowArray=[];
		this.lastPointArr=[];
		this.curPointArr=[];
		this.hitNum=0;
		this.isFirstShoot=false;
		this.isNew=false;
		this.isCurPoint=false;
		this.isBattlePause=false;
		this.isBattleResume=false;
		this.isCanShowRevive=true;
		this.isMoveOver=true;
		this.isRoleMoving=false;
		this.curGold=0;
		this.fireTime=10000;
		this.dieNum=0;
		this.scoreNum=0;
		this.allConfig=null;
		this.hasShoot=false;
		this.posArr=[];
		this.heroPosArr=[];
		this.stdSpeed=40;
		this.singleScore=0;
		this.superScore=0;
		this.reviveGold=0;
		this.moveSpeed=0;
		this.speedUnit=0;
		this.maxMoveOffset=0;
		this.curRoundId=0;
		this.roundId=0;
		this.maxHitNum=0;
		this.continueHitNum=0;
		this.curFragment=0;
		this.passScore=0;
		this.overStepConf=[];
		this.shareConf={};
		this.calcRewardConf=null;
		this.shootRound=0;
		this.rankRewards=[];
		this.qqNickName=null;
		this.qqImgUrl=null;
		this.qqPlayerId=null;
		this.qqSex=0;
		this.curFruitData=null;
		this.hasShareCount=0;
		this.appleTree=null;
		this.treeArrows=[];
		this.oriPosY=NaN;
		//private var voteEventDic:Object={};
		this.itemList=[];
		this.hasCollectComplete=false;
		this.testBool=false;
		this.unitScore=0;
		this.maxScore=0;
		this.goldNum=0;
		this.isGoldLimit=false;
		this.curHeroPos=new Point(0,0);
		this.initTempData();
	}

	__class(LocalBattleMgr,'modules.battle_apple.LocalBattleMgr');
	var __proto=LocalBattleMgr.prototype;
	__proto.addEvents=function(){
		EventMgr.ins.on(0x3AA1,this,this.goToFire);
		EventMgr.ins.on(0x0022,this,this.fireOver);
		EventMgr.ins.on("RECV_RESULT_REVIVE",this,this.recvReviveResult);
		EventMgr.ins.on("BATTLE_PAUSE",this,this.onBattlePause);
		EventMgr.ins.on("BATTLE_RESUME",this,this.onBattleResume);
		EventMgr.ins.on("BATTLE_START",this,this.onBattleStart);
		EventMgr.ins.on("SEND_RESULT_TO_SERVER",this,this.sendMsgToServer);
		EventMgr.ins.on("HIDE_PRELUDE_COMPLETE",this,this.hidePreludeComplete);
		EventMgr.ins.on("ROLE_MOVE_OVER",this,this.onRoleMoveOver);
		EventMgr.ins.on("ROLE_MOVING",this,this.onRoleMovIng);
		SocketManager.Instance.on(0x00A1,this,this.recvBattleResult);
	}

	//Laya.timer.frameLoop(1,this,this.onUpdate);
	__proto.removeEvents=function(){
		EventMgr.ins.event("CLEAR_BOMB_ACTION");
		EventMgr.ins.off(String(0x3AA1),this,this.goToFire);
		EventMgr.ins.off(String(0x0022),this,this.fireOver);
		EventMgr.ins.off("RECV_RESULT_REVIVE",this,this.recvReviveResult);
		EventMgr.ins.off("BATTLE_PAUSE",this,this.onBattlePause);
		EventMgr.ins.off("BATTLE_RESUME",this,this.onBattleResume);
		EventMgr.ins.off("BATTLE_START",this,this.onBattleStart);
		EventMgr.ins.off("SEND_RESULT_TO_SERVER",this,this.sendMsgToServer);
		EventMgr.ins.off("HIDE_PRELUDE_COMPLETE",this,this.hidePreludeComplete);
		EventMgr.ins.off("ROLE_MOVE_OVER",this,this.onRoleMoveOver);
		EventMgr.ins.off("ROLE_MOVING",this,this.onRoleMovIng);
		SocketManager.Instance.off(0x00A1,this,this.recvBattleResult);
	}

	// }
	__proto.recvBattleResult=function(pkg){
		console.log("recvBattleResult");
		var res=ProtoMgr.decode(com.road.ddt.proto.AppleGameOverMsg,pkg);
		this.isGoldLimit=res.goldLimit;
		this.maxScore=res.maxScore;
		this.goldNum=res.gold;
		this.showBattleResult();
		this.removeAllItem();
	}

	// EventMgr.ins.event(EventType.REFRESH_DATA,res);
	__proto.getCurFragment=function(){
		return this.curFragment;
	}

	// }
	__proto.getItemList=function(){
		return this.itemList;
	}

	__proto.refreshItem=function(itemId,isAdd){
		var isHad=this.hasItem(itemId,!isAdd);
		if(!isHad){
			this.itemList.push(itemId);
		}
		EventMgr.ins.event("REMOVE_ITEM",itemId);
	}

	__proto.removeItem=function(itemId){
		for(var i=0;i < this.itemList.length;i++){
			var id=this.itemList[i];
			if(id==itemId){
				this.itemList.splice(i,1);
			}
		}
	}

	__proto.hasItem=function(itemId,isDel){
		(isDel===void 0)&& (isDel=false);
		for(var i=0;i < this.itemList.length;i++){
			var id=this.itemList[i];
			if(id==itemId){
				if(isDel){
					this.itemList.splice(i,1);
				}
				return true;
			}
		}
		return false;
	}

	__proto.removeAllItem=function(){
		this.itemList=[];
	}

	// }
	__proto.getOverStepFriend=function(datas){
		if(!datas){
			datas=[];
		};
		var arr=[];
		for(var i=0;i < datas.length;i++){
			var data=datas[i];
			if(this.scoreNum < data.score){
				arr.push(data);
			}
		}
		return arr;
	}

	__proto.onRoleMoveOver=function(){
		this.isRoleMoving=false;
		this.singleScene.hero.turnRight(true);
		this.sendNextTurnMsg();
	}

	__proto.onRoleMovIng=function(){
		this.isRoleMoving=true;
	}

	__proto.recvReviveResult=function(res){
		if(res.value==0){
			this.dieNum--;
			if(this.dieNum <=0){
				this.dieNum=0;
			}
			EventMgr.ins.event("BATTLE_RESUME");
			EventMgr.ins.event("BATTLE_START");
			this.reqNextTurn();
			UIMgr.ins.closeView("ReviveView");
		}
		else if(res.value==1){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002237"));
		}
		else if(res.value==2){
			console.log("hugh#复活遇到未知错误",res.value);
		}
	}

	__proto.onBattleStart=function(){}
	__proto.onBattlePause=function(){
		this.isBattlePause=true;
		this.isBattleResume=false;
	}

	__proto.onBattleResume=function(){
		this.isBattlePause=false;
		this.isBattleResume=true;
	}

	__proto.fireOver=function(msg){
		this.clearPoint();
		if(msg){
			console.log("fireover1");
			Laya.timer.once(msg.time,this,this.checkNextRound,[Handler.create(this,this.reqNextTurn)]);
			}else{
			console.log("fireover2");
			this.checkNextRound(Handler.create(this,this.reqNextTurn));
		}
	}

	__proto.getFirstPos=function(){
		return this.getCurNpcPos();
	}

	// }
	__proto.getCurNpcPos=function(){
		var data=this.getCurData();
		var posStr=data.npcPosDatas[data.randomPosIndex];
		var posData=posStr.split(",");
		return new Point(parseInt(posData[0]),parseInt(posData[1]));
	}

	__proto.getLastPos=function(){
		return this.getCurNpcPos();
	}

	// return posArr[posArr.length-1]
	__proto.isNeedTree=function(){
		var data=this.getCurData();
		if(int(data.configData.Wood)!=0){
			return true;
		}
		return false;
	}

	__proto.isNeedMove=function(){
		if(this.shootLevel >=this.posArr.length-1){
			return true;
		}
		return false;
	}

	__proto.onEnterSingleBattle=function(_isNew){
		(_isNew===void 0)&& (_isNew=false);
		this.addEvents();
		this.isNew=_isNew;
		this.initData();
		this.collideFighterArray=[];
		this.arrowArray=[];
		this.treeArrows=[];
		var prepareMsg=this.getBattlePrepareMsg({wind:0,isNew:_isNew});
		var mapMsg=this.getBattleMapMsg(this.getFirstPos());LocalBattleScene
		this.singleScene=SceneMgr.ins.runWithSceneByType(SceneType.APPLE_GAME_SCENE,[prepareMsg,mapMsg]);
	}

	__proto.onExitSingleBattle=function(){
		this.isNew=false;
		this.isLocalBattle=false;
		this.singleScene=null;
		this.removeEvents();
	}

	__proto.initData=function(){
		this.updateFirstShoot();
		this.dieNum=0;
		this.scoreNum=0;
		this.shootLevel=0;
		this.shootRound=0;
		this.hitNum=0;
		this.maxHitNum=0;
		this.curRoundId=1;
		this.isFirstShoot=true;
		this.hasShoot=false;
		this.curFruitData={fruitIndex:6,level:this.shootRound,wind:0,configData:{}};
		this.curGold=PlayerInfo.instance.appleGameGold;
		this.isLocalBattle=true;
		this.isCanShowRevive=true;
		this.isBattlePause=false;
		this.isBattleResume=true;
		this.appleTree=null;
		this.curFragment=0;
		this.extraChange=0;
		this.hasCollectComplete=false;
		this.initItemCount();
		this.continueHitNum=0;
		this.unitScore=0;
		this.goldNum=0;
		this.isGoldLimit=false;
		if(FriendsMgr.ins.hasOwnProperty("readyApple"))FriendsMgr.ins.readyApple();
		PlayerInfo.instance.recordHistory();
	}

	__proto.updateFirstShoot=function(){
		var msg=new com.road.ddt.proto.AppleWarSyncMsg();
		msg.start=true;
		msg.useItem=modules.battle_apple.LocalBattleMgr.getInstance().getItemList();
		SocketManager.Instance.sendSocketData(0x2791,msg);
	}

	__proto.sendGameOver=function(){
		var msg=new com.road.ddt.proto.AppleWarSyncMsg();
		msg.gameOver=true;
		SocketManager.Instance.sendSocketData(0x2791,msg);
	}

	__proto.initItemCount=function(){
		for(var i=0;i < this.getItemList().length;i++){
			var id=this.itemList[i];
			if(id==6007003){
				this.extraChange+=1;
			}
		}
	}

	__proto.getCurGold=function(){
		return PlayerInfo.instance.appleGameGold;
	}

	__proto.goToFire=function(msg){
		if (!this.isLocalBattle){
			return;
		}
		this.hasShoot=false;
		this.isMoveOver=false;
		this.fireMsg=msg;
		var sendMsg=this.getBattlePlayerFireMsg(msg);
		Cache.ins.battle.battlePlayerFireMsg=sendMsg;
		EventMgr.ins.event("SEND_LOCAL_FIRE",sendMsg);
	}

	//@param isfragment 如果碎片掉落后不用SHOW_PRELUDE
	__proto.reqNextTurn=function(isfragment){
		(isfragment===void 0)&& (isfragment=false);
		if(this.isBattlePause){
			return;
		}
		this.isMoveOver=true;
		if(this.hasShoot && !isfragment){
			EventMgr.ins.event("SHOW_PRELUDE");
			}else{
			this.hidePreludeComplete(false);
		}
	}

	__proto.hidePreludeComplete=function(hasPrelude){
		(hasPrelude===void 0)&& (hasPrelude=false);
		if(hasPrelude){
			var moveMsg=this.getBattleMoveResultMsg({livingId:1,pos:this.getRandomPos()});
			EventMgr.ins.event("LOCAL_BATTLE_MOVE",moveMsg);
		}
		else{
			this.sendNextTurnMsg();
		}
	}

	__proto.sendNextTurnMsg=function(){
		var msg=this.getBattleNextTurnMsg({turnID:this.curRoundId,delay:30});
		EventMgr.ins.event(String(0x0026),msg);
	}

	__proto.getCurFruit=function(){
		return "fruit"+this.getCurFruitIndex();
	}

	__proto.getCurFruitIndex=function(){
		if (this.curFruitData.level !=this.shootRound){
			this.analyzeData();
		}
		return this.curFruitData.fruitIndex;
	}

	__proto.getCurWind=function(){
		return 0;
		if (this.curFruitData.level !=this.shootRound){
			this.analyzeData();
		}
		return this.curFruitData.wind;
	}

	__proto.getCurData=function(){
		if (this.shootRound==0 || this.curFruitData.level !=this.shootRound){
			this.analyzeData();
		}
		return this.curFruitData;
	}

	__proto.analyzeData=function(){
		var configData=this.getDataByRound(this.shootRound);
		var fruitData=String(configData.Fruit).split(",");
		var index=Math.floor(Math.random()*fruitData.length);
		this.curFruitData.fruitIndex=int(fruitData[index]);
		this.curFruitData.level=this.shootRound;
		this.curFruitData.wind=Math.floor(Math.random()*(Math.abs(configData.WindMax)+Math.abs(configData.WindMin))-Math.abs(configData.WindMax));
		var _speedData=String(configData.Woodspeed).split("|");
		if(_speedData.length > 1){
			this.curFruitData.randomIndex=Math.floor(Math.random()*_speedData.length);
			}else{
			this.curFruitData.randomIndex=0;
		}
		this.curFruitData.speedDatas=_speedData;
		var _treeData=String(configData.WoodHigh).split("|");
		if(_treeData.length > 1){
			this.curFruitData.randomIndex=Math.floor(Math.random()*_treeData.length);
			}else{
			this.curFruitData.randomIndex=0;
		}
		this.curFruitData.treeDatas=_treeData;
		var _npcPosData=String(configData.ChildPosition).split("|");
		if(_npcPosData.length > 1){
			this.curFruitData.randomPosIndex=Math.floor(Math.random()*_npcPosData.length);
			}else{
			this.curFruitData.randomPosIndex=0;
		}
		this.curFruitData.npcPosDatas=_npcPosData;
		this.curFruitData.configData=configData;
	}

	__proto.getMapNpcPos=function(){
		return this.getCurNpcPos();
	}

	// return posArr[shootLevel];
	__proto.refreshMapNpc=function(pos){
		if (pos==null)pos=this.getCurNpcPos();
		var msg=this.getBattleMapMsg(pos);
		EventMgr.ins.event("MOVE_NPC_POS",msg);
	}

	// }
	__proto.clearAllPoints=function(){
		for(var i=0;i < this.curPointArr.length;i++){
			var pointImg=this.curPointArr[i];
			if(pointImg){
				pointImg.removeSelf();
				pointImg.destroy(true);
				this.curPointArr[i]=null;
			}
		}
		for(var i=0;i < this.lastPointArr.length;i++){
			var pointImg=this.lastPointArr[i];
			if(pointImg){
				pointImg.removeSelf();
				pointImg.destroy(true);
				this.lastPointArr[i]=null;
			}
		}
		this.curPointArr=[];
		this.lastPointArr=[];
	}

	__proto.clearPoint=function(){
		var tempArr=this.lastPointArr;
		if (this.getUniformRound()%2 !=0){
			tempArr=this.curPointArr;
		}
		for(var i=0;i < tempArr.length;i++){
			var pointImg=tempArr[i];
			if(pointImg){
				pointImg.removeSelf();
				pointImg.destroy(true);
				tempArr[i]=null;
			}
		}
	}

	__proto.getHitNum=function(){
		return this.hitNum;
	}

	__proto.addHitNum=function(){
		this.hitNum++;
	}

	__proto.getDieNum=function(){
		return this.dieNum
	}

	__proto.getShootLevel=function(){
		return this.shootLevel;
	}

	__proto.addShootLevel=function(){
		this.hasShoot=true;
		this.continueHitNum++;
		this.addScoreNum();
		this.shootLevel++;
		this.shootRound++;
		this.addFragment();
		if (this.shootLevel >=this.posArr.length-1){
			this.maxHitNum++;
			this.shootLevel=this.posArr.length-1;
		}
	}

	__proto.addFragment=function(){
		if(this.isCanShowFragment()){
			if(this.curFragment < 5 && this.curFragment >=0){
				this.curFragment++;
				}else{
				this.curFragment=-1;
			}
		}
	}

	// curFragment=0;
	__proto.resetFragment=function(){
		this.curFragment=0;
		this.hasCollectComplete=false;
	}

	__proto.getShootRound=function(){
		return this.shootRound;
	}

	__proto.setDieNum=function(num){
		this.dieNum=num;
	}

	__proto.addDieNum=function(){
		this.continueHitNum=0;
		this.dieNum++;
		if(this.dieNum >=this.getMaxDieNum()){
			this.dieNum=this.getMaxDieNum();
		}
		EventMgr.ins.event("REFRESH_DIE_NUM");
	}

	__proto.subDieNum=function(){
		this.dieNum--;
		if(this.dieNum<0){
			this.dieNum=0;
		}
	}

	__proto.addShareCount=function(){
		this.hasShareCount++;
	}

	__proto.getHasShareCount=function(){
		return this.hasShareCount;
	}

	__proto.checkCanReviveGold=function(){
		if(PlayerInfo.instance.gold >=this.reviveGold){
			return true;
		}
		return false;
	}

	__proto.addExtraChange=function(){
		this.extraChange++;
	}

	__proto.subExtraChange=function(){
		this.extraChange--;
	}

	__proto.resetLastChance=function(){
		this.extraChange=0;
	}

	__proto.getMaxDieNum=function(){
		return 3+this.extraChange;
	}

	__proto.setHasCollected=function(){
		this.hasCollectComplete=true;
	}

	__proto.checkNextRound=function(handler){
		if(this.dieNum >=3){
			if(this.hasItem(6007003)){
				this.refreshItem(6007003,false);
			}
		}
		if(this.dieNum==this.getMaxDieNum()){
			if(this.scoreNum <=0){
				this.initData();
				this.removeAllItem();
				this.showPlayeAgain(handler);
				return;
			}
			if(this.isCanShowRevive && !this.isNew){
				UIMgr.ins.openView("ReviveView");
				}else{
				if(this.isNew){
					this.showBattleResult();
					}else{
					this.sendGameOver();
				}
			}
			}else{
			if(handler){
				handler.run();
				}else{
				this.hidePreludeComplete();
			}
		}
	}

	__proto.showPlayeAgain=function(handler){
		if(!handler){
			handler=Handler.create(this,this.playAgain);
		}
		EventMgr.ins.event("SHOW_PLAY_AGAIN",handler);
	}

	__proto.showBattleResult=function(){
		var obj=FriendsMgr.ins.checkAppleBeyondFriend();
		var flag=false;
		if(obj.type==-1||flag){
			this.showResult();
			}else{
			UIMgr.ins.openView("BeyondFriend",Handler.create(this,function(view){
				view.init(6,obj.type,obj.friendInfoMsg,Handler.create(this,this.showResult));
			}));
		}
	}

	__proto.showResult=function(){
		UIMgr.ins.openView("LocalBattleResult");
	}

	__proto.playAgain=function(){
		SoundMgr.instance.playSound(this.singleScene.soundId);
		this.clearAllPoints();
		this.initData();
		EventMgr.ins.event("REFRESH_DIE_NUM");
		EventMgr.ins.event("REFRESH_NPC");
		this.refreshMapNpc(this.getFirstPos());
		EventMgr.ins.event("REFRESH_MENUVIEW");
		var npc=modules.battle_apple.LocalBattleMgr.getInstance().singleScene.roleView.getChildByName("appleMan");
		npc.initTree();
		npc.updateFruit(this.getCurFruit());
		EventMgr.ins.event("PLAY_AGAIN");
		this.reqNextTurn();
	}

	__proto.sendMsgToServer=function(isHit){
		var msg=new com.road.ddt.proto.AppleWarSyncMsg();
		msg.hit=isHit;
		msg.start=false;
		SocketManager.Instance.sendSocketData(0x2791,msg);
		if (this.isFirstShoot){
			this.isFirstShoot=false;
		}
	}

	__proto.reqToRevive=function(reviveType){
		var msg=new com.road.ddt.proto.AppleGameReviveMsg();
		msg.type=reviveType;
		SocketManager.Instance.sendSocketData(0x2792,msg);
	}

	__proto.getMoveSpeed=function(){
		return (this.stdSpeed+this.maxHitNum *this.speedUnit)/ 30;
	}

	__proto.getMaxMoveOffset=function(){
		var data=this.getCurData();
		var treeStr=data.treeDatas[data.randomIndex];
		var treeData=treeStr.split(",");
		return parseInt(treeData[1]);
	}

	__proto.getMaxFrame=function(isAdd){
		(isAdd===void 0)&& (isAdd=true);
		return Math.sqrt(2*this.getMaxMoveOffset()/ this.getAcceleration(isAdd));
	}

	__proto.getTreeOriHeight=function(){
		var data=this.getCurData();
		var treeStr=data.treeDatas[data.randomIndex];
		var treeData=treeStr.split(",");
		return parseInt(treeData[0]);
	}

	__proto.getUpStayNum=function(isAdd){
		(isAdd===void 0)&& (isAdd=true);
		var data=this.getCurData();
		var speedStr=data.speedDatas[data.randomIndex];
		var speedData=speedStr.split(",");
		if(isAdd){
			return parseInt(speedData[1])*30;
			}else{
			return parseInt(speedData[3])*30;
		}
	}

	__proto.getAcceleration=function(isAdd){
		(isAdd===void 0)&& (isAdd=true);
		var data=this.getCurData();
		var speedStr=data.speedDatas[data.randomIndex];
		var speedData=speedStr.split(",");
		if(isAdd){
			return parseFloat(speedData[0]);
			}else{
			return parseFloat(speedData[2]);
		}
	}

	__proto.addScoreNum=function(){
		this.scoreNum+=this.getUnitScore();
		EventMgr.ins.event("REFRESH_SCORE");
	}

	__proto.getUnitScore=function(){
		var score=0;
		if(this.continueHitNum>=3){
			score=this.superScore;
			}else{
			score=this.singleScore
		}
		if(this.hasItem(6007002)){
			score=2*score;
		}
		this.unitScore=score;
		return score;
	}

	__proto.getUnitSocreConstant=function(){
		return this.unitScore;
	}

	__proto.getContinueHitNum=function(){
		return this.continueHitNum;
	}

	__proto.isCanShowFragment=function(){
		if(this.getContinueHitNum()>=3){
			return true;
		}
		return false;
	}

	__proto.goToHall=function(){
		SceneMgr.ins.runWithSceneByType(SceneType.HALL_MAIN_SCENE);
	}

	__proto.setScoreNum=function(score){
		this.scoreNum=score;
	}

	__proto.getScoreNum=function(){
		return this.scoreNum;
	}

	__proto.getRandomPos=function(){
		var posIndex=Math.floor(Math.random()*this.heroPosArr.length);
		if(this.curHeroPos.x !=this.heroPosArr[posIndex].x){
			this.curHeroPos=this.heroPosArr[posIndex];
			}else{
			this.curHeroPos=this.getRandomPos();
		}
		return this.curHeroPos
	}

	__proto.getWeaponId=function(){
		if(this.continueHitNum >=2){
			return 26;
			}else{
			return 25;
		}
	}

	__proto.initTempData=function(){
		this.posArr=this.getPosArr(1079);
		this.heroPosArr=this.getPosArr(1078);
		this.passScore=parseInt(ConfigModel.getConfigData(1077).ConfigValue);
		this.reviveGold=parseInt(ConfigModel.getConfigData(1073).ConfigValue);
		this.askForNum=parseInt(ConfigModel.getConfigData(1109).ConfigValue);
		this.itemNum=parseInt(ConfigModel.getConfigData(1109).ConfigValue);
		this.initSpeed();
		this.initAddScore();
		this.initBattleData();
		this.rankRewards=this.getRankRewardConfig();
		this.overStepConf=this.getOverStepConfig();
		this.shareConf=this.getShareConfig();
		this.calcRewardConf=this.getRewardConfig();
	}

	__proto.getAskForNum=function(){
		return this.askForNum;
	}

	__proto.getItemNum=function(){
		return this.itemNum;
	}

	__proto.initAddScore=function(){
		var data=ConfigModel.getConfigData(1072);
		var strArr=data.ConfigValue.split(",");
		this.singleScore=int(strArr[0]);
		this.superScore=int(strArr[1]);
	}

	__proto.getShareConf=function(){
		return this.shareConf;
	}

	__proto.initBattleData=function(){
		this.allConfig=AppleGameModel.allConfig;
	}

	// trace("Hugh#allConfig -> ",allConfig,getDataByRound(1));
	__proto.getMaxGold=function(){
		this.calcRewardConf=this.getRewardConfig();
		return this.calcRewardConf.rewardMax;
	}

	__proto.getReviveGold=function(){
		return this.reviveGold;
	}

	__proto.getRankRewardConfig=function(){
		var arr=[];
		var recordVo;
		var allRewardData=RewardModel.getDataByType(1);
		for(var i=0;i < allRewardData.length;i++){
			var data;
			var curVo=allRewardData[i];
			var lastVo=curVo;
			var nextVo=curVo;
			if(i > 0){
				lastVo=allRewardData[i-1];
			}
			if(i < allRewardData.length-1){
				nextVo=allRewardData[i+1];
			}
			if(i==0 || lastVo.Ranking+1==curVo.Ranking){
				data={rank:StringUtils.formate(LanguageMgr.Ins.GetLan("9070091"),curVo.Ranking),data:curVo};
				}else{
				var firstIndex=lastVo.Ranking+1;
				data={rank:StringUtils.formate(LanguageMgr.Ins.GetLan("9070091"),firstIndex+"~"+curVo.Ranking),data:curVo};
			}
			arr.push(data);
		}
		this.rankRewards=arr;
		return arr
	}

	__proto.getRewardConfig=function(){
		if(this.calcRewardConf){
			return this.calcRewardConf;
		};
		var confStr=ConfigModel.getConfigData(1074).ConfigValue;
		var data={}
		data.rewardUnit=int(confStr.split(",")[0]);
		data.rewardMax=int(confStr.split(",")[1]);
		return data
	}

	__proto.checkGoldLimit=function(){
		return this.isGoldLimit;
	}

	__proto.getRewardByScore=function(score){
		return this.goldNum;
		if(!score){
			score=this.scoreNum;
		};
		var result=score *this.calcRewardConf.rewardUnit;
		if(this.getCurGold()>=this.calcRewardConf.rewardMax){
			return 0;
		}
		if (result+this.getCurGold()> this.calcRewardConf.rewardMax){
			result=this.calcRewardConf.rewardMax-this.getCurGold();
		}
		return result
	}

	__proto.getAddGoldNum=function(){
		if(this.checkGoldLimit()){
			return 0;
			}else{
			return this.goldNum;
		}
	}

	__proto.resetGoldNum=function(){
		this.goldNum=0;
	}

	__proto.getDataByRound=function(roundId){
		if (!roundId){
			roundId=this.getCurShootRound();
		};
		var index=0
		for(var i=0;i < this.allConfig.length;i++){
			var vo=this.allConfig[i];
			if(roundId >=vo.Round){
				index++;
			}
		};
		var result=this.allConfig[index];
		return result;
	}

	__proto.getCurShootRound=function(){
		return this.shootRound;
	}

	__proto.getCurRoundId=function(){
		return this.curRoundId;
	}

	__proto.getUniformRound=function(){
		return this.roundId;
	}

	__proto.addRoundId=function(){
		this.curRoundId++;
		this.roundId++;
	}

	__proto.initSpeed=function(){
		var dataStr=ConfigModel.getConfigData(1075).ConfigValue;
		var tempData=dataStr.split(",");
		this.stdSpeed=int(tempData[0]);
		this.speedUnit=int(tempData[1]);
		this.maxMoveOffset=int(tempData[2]);
	}

	__proto.resetPlayerInfo=function(){
		if(this.isNew){
			PlayerInfo.instance.nickName=this.qqNickName;
			PlayerInfo.instance.headimgurl=this.qqImgUrl;
			PlayerInfo.instance.sex=this.qqSex;
			PlayerInfo.instance.playerId=this.qqPlayerId;
		}
	}

	__proto.getMaxScore=function(){
		if(this.maxScore > PlayerInfo.instance.appleGameScore){
			return this.maxScore;
			}else{
			return PlayerInfo.instance.appleGameScore;
		}
	}

	__proto.isMaxScore=function(){
		return this.getScoreNum()>=this.getMaxScore()
	}

	__proto.getAccountTime=function(){
		var date=TimeManager.Instance.getServerDate();
		var curHour=date.getHours();
		var curDay=TimeManager.Instance.getCurDay();
		var lastDay=0;
		var lastHour=0;
		if(curDay !=7){
			lastDay=7-curDay;
		}
		if(curHour !=0){
			lastHour=24-curHour;
		};
		var data={day:lastDay,hour:lastHour};
		return data;
	}

	__proto.getShareConfig=function(){
		var configStr=ConfigModel.getConfigData(1085).ConfigValue;
		this.shareConf.count=int(configStr.split(",")[0]);
		var itemStr=configStr.split(",")[1];
		var itemId=int(itemStr.split("|")[0]);
		var itemCount=int(itemStr.split("|")[1]);
		var itemData=ItemModel.getItemConfigData(itemId);
		this.shareConf.item=itemData;
		this.shareConf.itemCount=itemCount;
		return this.shareConf
	}

	__proto.getOverStepConfig=function(){
		var arr=[];
		var configStr=ConfigModel.getConfigData(1076).ConfigValue;
		var tempArr=configStr.split(";");
		for(var i=0;i < tempArr.length;i++){
			var scoreStr=String(tempArr[i]).split(",")[0];
			var percentStr=String(tempArr[i]).split(",")[1];
			arr.push({scoreNum:parseInt(scoreStr),percentStr:percentStr});
		}
		return arr;
	}

	__proto.getOverPercentByScore=function(score){
		if (!score){
			score=this.scoreNum;
		};
		var index=0
		for(var i=0;i < this.overStepConf.length;i++){
			var data=this.overStepConf[i];
			if(score >=data.scoreNum){
				index++;
			}
		}
		if(index > this.overStepConf.length-1){
			index=this.overStepConf.length-1;
		};
		var data=this.overStepConf[index];
		return data.percentStr
	}

	__proto.getPosArr=function(tempId){
		var arr=[];
		var configStr=ConfigModel.getConfigData(tempId).ConfigValue;
		var tempArr=configStr.split(";");
		for(var i=0;i < tempArr.length;i++){
			var posXStr=String(tempArr[i]).split(",")[0];
			var posYStr=String(tempArr[i]).split(",")[1];
			arr.push(new Point(parseInt(posXStr),int(posYStr)));
		}
		return arr;
	}

	__proto.getBattleNextTurnMsg=function(data){
		var msg=new com.road.ddt.proto.battle.BattleNextTurnMsg();
		msg.turnID=data.turnIdD;
		msg.delay=data.delay;
		msg.deadFightMode=0;
		msg.deadDamagePer=0;
		return msg;
	}

	__proto.getBattleAddLivingMsg=function(data){
		var msg=new com.road.ddt.proto.battle.BattleAddLivingMsg();
		msg.callingId=0;
		msg.directionType=1;
		msg.fallPosX=0;
		msg.fallPosY=0;
		msg.groupId=0;
		msg.hp=1;
		msg.isFalling=0;
		msg.isShow=1;
		msg.livingId=5;
		msg.template=1200001;
		msg.teamType=1;
		msg.type=4;
		msg.x=data.x;
		msg.y=data.y;
		return msg
	}

	__proto.getBattlePlayerFireMsg=function(fireMsg){
		var msg=new com.road.ddt.proto.battle.BattlePlayerFireMsg();
		msg.attackType=null;
		msg.bombDetail=[];
		msg.bombDetail.push(this.getBattleBombDetailMsg(fireMsg,[3,1]));
		msg.derivationBombDetail=[];
		msg.fireTime=0;;
		msg.isFireOver=true;
		msg.isLine=false;
		msg.isSuicide=false;
		msg.livingDetail=[];
		msg.mapObjectDetail=[];
		msg.supplyList=[];
		msg.time=0;
		return msg;
	}

	__proto.getBattleBombDetailMsg=function(fireMsg,actionTypes){
		var msg=new com.road.ddt.proto.battle.BattleBombDetailMsg();
		msg.actions=[];
		msg.actions.push(this.getBattleFireActionMsg(fireMsg,[0,0,0,0,"",0,0,this.fireTime,3]));
		msg.angle=fireMsg.angle *fireMsg.dir;
		msg.beginX=fireMsg.posX;
		msg.beginY=fireMsg.posY;
		msg.bombCount=1;
		msg.bombID=this.getBombId();
		msg.bombIndex=0;
		msg.bombLivingID=13;
		msg.dir=fireMsg.dir;
		msg.directionType=1;
		msg.force=fireMsg.strength *10 *fireMsg.dir;
		msg.isEnd=true;
		msg.livingID=1;
		msg.swing=0;
		msg.type=3;
		return msg
	}

	__proto.getBombId=function(){
		if(this.continueHitNum >=2){
			return 3000003;
			}else{
			return 3000000;
		}
	}

	__proto.getBattleFireActionMsg=function(fireMsg,data){
		var msg=new com.road.ddt.proto.battle.BattleFireActionMsg();
		msg.param1=data[0];
		msg.param2=data[1];
		msg.param3=data[2];
		msg.param4=data[3];
		msg.param5=data[4];
		msg.param6=data[5];
		msg.param7=data[6];
		msg.time=data[7];
		msg.type=data[8];
		return msg;
	}

	__proto.getBattlePlayerMsg=function(data){
		var msg=new com.road.ddt.proto.battle.BattlePlayerMsg();
		msg.block=0;
		msg.crit=0;
		msg.critDamage=0;
		msg.damage=0;
		msg.damgeScore=0;
		msg.dieNum=0;
		msg.dir=-1;
		msg.gameServerId=0;
		msg.gateServerId=0;
		msg.goldCount=0;
		msg.guildIconId=0;
		msg.guildId=null;
		msg.guildName=null;
		if (data.isNew){
			this.qqNickName=PlayerInfo.instance.nickName;
			this.qqImgUrl=PlayerInfo.instance.headimgurl;
			this.qqSex=PlayerInfo.instance.sex;
			this.qqPlayerId=PlayerInfo.instance.playerId;
			PlayerInfo.instance.headimgurl="";
			PlayerInfo.instance.nickName="冒险者";
			PlayerInfo.instance.sex=0;
			PlayerInfo.instance.playerId="999999";
		}
		msg.headUrl=PlayerInfo.instance.headimgurl;
		msg.hp=600;
		msg.isConsume=false;
		msg.isPrepare=false;
		msg.killNum=0;
		msg.language=0;
		msg.lastFailCount=0;
		msg.level=1;
		msg.livingId=1;
		msg.maxPhyStrength=10;
		msg.maxHp=600;
		msg.nickName=PlayerInfo.instance.nickName;
		msg.phyStrength=10;
		msg.posX=0;
		msg.posY=0;
		msg.robotId=0;
		msg.roomIndex=0;
		msg.roomState=0;
		msg.sex=PlayerInfo.instance.sex;
		msg.shieldHp=0;
		msg.skillList=[];
		msg.skillList.push(this.getPlayerSkillMsg(1000001,0));
		msg.skillList.push(this.getPlayerSkillMsg(1009001,0));
		msg.skillList.push(this.getPlayerSkillMsg(1002001,0));
		msg.skillList.push(this.getPlayerSkillMsg(1001001,0));
		msg.skillList.push(this.getPlayerSkillMsg(1018001,0));
		msg.skillList.push(this.getPlayerSkillMsg(1010001,0));
		msg.skillList.push(this.getPlayerSkillMsg(1003001,0));
		msg.skills="1000001,1009001,1002001,1001001,1018001,1010001,1003001,";
		msg.speed=0;
		msg.talentSkills="1000002";
		msg.totalDamage=0;
		msg.trophy=0;
		msg.userId=PlayerInfo.instance.playerId;
		return msg;
	}

	__proto.getPlayerSkillMsg=function(skillId,cooldown){
		var msg=new com.road.ddt.proto.battle.PlayerSkillMsg();
		msg.skillId=skillId;
		msg.cooldown=cooldown;
		return msg;
	}

	__proto.getBattlePrepareMsg=function(data){
		var msg=new com.road.ddt.proto.battle.BattlePrepareMsg();
		msg.sceneId=5000201;
		msg.battleType=6;
		msg.battleId="999";
		msg.maxTurn=-1;
		msg.players=[];
		msg.players.push(this.getBattlePlayerMsg(data));
		msg.curTurn=0;
		msg.wind=data.wind;
		return msg
	}

	__proto.getBattleMapMsg=function(data){
		var msg=new com.road.ddt.proto.battle.BattleMapMsg();
		msg.battleMode=0;
		msg.waitTime=60;
		msg.battleType=6;
		msg.bombList=[];
		msg.fixedAngle=0;
		msg.functionList=[];
		msg.livingList=[];
		msg.livingList.push(this.getBattleAddLivingMsg(data));
		msg.objectList=[];
		msg.objectList.push(this.getBattleMapObjMsg("BornNode"));
		msg.objectList.push(this.getBattleMapObjMsg("BornNode_1"));
		msg.playerList=[];
		msg.playerList.push(this.getBattleMapPlayerMsg());
		msg.remainTime=0;
		msg.sceneId=0;
		return msg
	}

	__proto.getBattleMapPlayerMsg=function(){
		var msg=new com.road.ddt.proto.battle.BattleMapPlayerMsg();
		msg.bornNodeId=0;
		msg.direction=1;
		msg.livingId=1;
		msg.moveDis=150;
		var pos=this.getRandomPos();
		msg.posX=pos.x;
		msg.posY=pos.y;
		return msg;
	}

	__proto.getBattleMoveResultMsg=function(data){
		var msg=new com.road.ddt.proto.battle.BattleMoveResultMsg();
		msg.livingID=data.livingId;
		var pos=data.pos;
		msg.posX=pos.x;
		msg.posY=pos.y;
		return msg;
	}

	__proto.getBattleMapObjMsg=function(name){
		var msg=new com.road.ddt.proto.battle.BattleMapObjMsg();
		msg.fallPosX=0;
		msg.fallPosY=0;
		msg.isFalling=0;
		msg.isShow=0;
		msg.livingId=2;
		msg.name=name;
		msg.posX=782;
		msg.posY=682;
		msg.templateId=0;
		return msg;
	}

	LocalBattleMgr.getInstance=function(){
		if(!LocalBattleMgr._instance){
			LocalBattleMgr._instance=new LocalBattleMgr();
		}
		return LocalBattleMgr._instance;
	}

	LocalBattleMgr.CONFIG_NPC_AREA=1070;
	LocalBattleMgr.CONFIG_SHOOT_SCORE=1072;
	LocalBattleMgr.CONFIG_REVIVE_COST=1073;
	LocalBattleMgr.CONFIG_REWARD=1074;
	LocalBattleMgr.CONFIG_TREE_SPEED=1075;
	LocalBattleMgr.CONFIG_OVERSTEP=1076;
	LocalBattleMgr.CONFIG_OPEN_NEW_WORLD=1077;
	LocalBattleMgr.CONFIG_HERO_POS=1078;
	LocalBattleMgr.CONFIG_NPC_POS=1079;
	LocalBattleMgr.CONFIG_FRUIT_AREA=1082;
	LocalBattleMgr.CONFIG_SHARE=1085;
	LocalBattleMgr.MAX_DIE_NUM=3;
	LocalBattleMgr.MAX_ASK_FOR=1108;
	LocalBattleMgr.MAX_ITEM_USE=1109;
	LocalBattleMgr.HERO_ID=1;
	LocalBattleMgr.DOUBLE_GOLD_ID=6007001;
	LocalBattleMgr.DOUBLE_SOCRE_ID=6007002;
	LocalBattleMgr.EXTRA_ID=6007003;
	LocalBattleMgr.WEAPON_NORMAL=25;
	LocalBattleMgr.WEAPON_SUPER=26;
	LocalBattleMgr.BOMB_NORMAL=3000000;
	LocalBattleMgr.BOMB_SUPER=3000003;
	LocalBattleMgr._instance=null;
	return LocalBattleMgr;
})()


//class modules.campaign.CampaignConst
var CampaignConst=(function(){
	function CampaignConst(){}
	__class(CampaignConst,'modules.campaign.CampaignConst');
	CampaignConst.TYPE_MULIT_PVE=0;
	CampaignConst.EVENT_UPDATE_CAMPAINGN_INFO='EVENT_UPDATE_CAMPAINGN_INFO';
	CampaignConst.EVENT_UPDATE_CAMPAINGN='EVENT_UPDATE_CAMPAINGN';
	__static(CampaignConst,
	['DifficultLan',function(){return this.DifficultLan={0:14300147,
			1:14300148};}
	]);
	return CampaignConst;
})()


//class modules.campaign.CampaignInfo
var CampaignInfo=(function(){
	function CampaignInfo($campaignId){
		/**副本ID */
		this.campaignId=0;
		/**当前收益次数 */
		this.yieldCount=1;
		/**购买收益次数 */
		this.buyCount=0;
		/**是否通过关 */
		this.isPass=false;
		this.campaignId=$campaignId;
	}

	__class(CampaignInfo,'modules.campaign.CampaignInfo');
	var __proto=CampaignInfo.prototype;
	__proto.update=function(msg){
		this.yieldCount=msg.yieldCount;
		this.buyCount=msg.buyCount;
		this.isPass=msg.isPass;
	}

	return CampaignInfo;
})()


//class modules.chat.ChatUtils
var ChatUtils=(function(){
	function ChatUtils(){}
	__class(ChatUtils,'modules.chat.ChatUtils');
	ChatUtils.replaceExpression=function(msg){
		var chatStr=msg;
		var newChatStr="";
		newChatStr+=chatStr
		.replace(/\[Drool\]/g,"[9001101]")
		.replace(/\[Grimace\]/g,"[9001102]")
		.replace(/\[Slight\]/g,"[9001103]")
		.replace(/\[Pooh-pooh\]/g,"[9001104]")
		.replace(/\[Angry\]/g,"[9001105]")
		.replace(/\[Awkward\]/g,"[9001106]")
		.replace(/\[Joyful\]/g,"[9001107]")
		.replace(/\[Shy\]/g,"[9001108]")
		.replace(/\[Speechless\]/g,"[9001109]")
		.replace(/\[Trick\]/g,"[9001110]")
		.replace(/\[Panic\]/g,"[9001111]")
		.replace(/\[Grin\]/g,"[9001112]")
		.replace(/\[Sob\]/g,"[9001113]")
		.replace(/\[Facepalm\]/g,"[9001114]")
		.replace(/\[Tongue\]/g,"[9001115]")
		.replace(/\[Kiss\]/g,"[9001116]")
		.replace(/\[Toasted\]/g,"[9001117]")
		.replace(/\[Chuckle\]/g,"[9001118]")
		.replace(/\[Puke\]/g,"[9001119]")
		.replace(/\[Hematemesis\]/g,"[9001120]")
		.replace(/\[Shrunken\]/g,"[9001121]")
		.replace(/\[Shocked\]/g,"[9001122]")
		.replace(/\[Smile through tears\]/g,"[9001123]")
		.replace(/\[Scare\]/g,"[9001124]")
		.replace(/\[Sly\]/g,"[9001125]")
		.replace(/\[Dizzy\]/g,"[9001126]")
		.replace(/\[Bye\]/g,"[9001127]")
		.replace(/\[Scold\]/g,"[9001128]")
		.replace(/\[Scream\]/g,"[9001129]")
		.replace(/\[CoolGuy\]/g,"[9001130]")
		.replace(/\[Silent\]/g,"[9001131]")
		.replace(/\[Frown\]/g,"[9001132]")
		.replace(/\[Surprise\]/g,"[9001133]")
		.replace(/\[Sleep\]/g,"[9001134]")
		.replace(/\[Struggle\]/g,"[9001135]");
		return newChatStr;
	}

	ChatUtils.onGetChatInfoZH=function(msg,size){
		if(!size){
			size={
				width:'40',
				height:'40',
				paddingTop:'0',
				imgPaddingTop:'0'
			}
			}else {
			!size.hasOwnProperty('imgPaddingTop')&& (size.imgPaddingTop='0');
		};
		var chatStr=msg;
		var newChatStr="";
		newChatStr+=chatStr
		.replace(/\[9001101\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001101.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001102\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001102.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001103\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001103.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001104\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001104.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001105\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001105.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001106\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001106.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001107\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001107.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001108\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001108.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001109\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001109.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001110\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001110.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001111\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001111.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001112\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001112.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001113\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001113.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001114\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001114.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001115\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001115.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001116\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001116.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001117\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001117.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001118\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001118.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001119\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001119.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001120\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001120.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001121\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001121.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001122\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001122.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001123\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001123.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001124\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001124.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001125\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001125.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001126\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001126.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001127\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001127.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001128\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001128.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001129\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001129.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001130\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001130.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001131\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001131.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001132\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001132.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001133\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001133.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001134\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001134.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>")
		.replace(/\[9001135\]/g,"</span><img style='width:"+size.width+";height:"+size.height+";padding:"+size.imgPaddingTop+" 0 0 0;' src='"+URL.rootPath+"assets/textrue/biaoqing/9001135.png'/><span style='padding:"+size.paddingTop+" 0 0 0'>");
		return newChatStr;
	}

	return ChatUtils;
})()


//class modules.chat.consts.ChatConst
var ChatConst=(function(){
	function ChatConst(){}
	__class(ChatConst,'modules.chat.consts.ChatConst');
	ChatConst.EVENT_CHANNEL_MSG='event_channel_msg';
	ChatConst.EVENT_CHANNEL_INFO_MSG='event_channel_info_msg';
	ChatConst.EVENT_CLICK_LINE_ITEM='event_click_line_item';
	ChatConst.EVENT_ADD_EXPRESSION='event_add_expression';
	ChatConst.EVENT_SHOW_DONATE_TIPS='event_show_donate_tips';
	ChatConst.EVENT_UPDATE_GUILD_ITEM='event_update_guild_item';
	ChatConst.EVENT_REMOVE_GUILD_ITEM='event_remove_guild_item';
	ChatConst.WORLD_CHANNEL='world';
	ChatConst.FRIEND_CHANNEL='friend';
	ChatConst.ROOM_CHANNEL='room';
	ChatConst.BATTLE_CHANNEL='battle';
	ChatConst.GUILD_CHANNEL='guild';
	ChatConst.SYSTEM_CHANNEL='system';
	ChatConst.CHAT_CHANNEL_FILTER='CHAT_SETTING';
	ChatConst.CHAT_BLACKLIST='CHAT_SHIELD';
	ChatConst.SYSTEM_TYPE=-1;
	ChatConst.ALL_TYPE=0;
	ChatConst.WORLD_TYPE=1;
	ChatConst.FRIEND_TYPE=2;
	ChatConst.ROOM_TYPE=3;
	ChatConst.BATTLE_TYPE=4;
	ChatConst.GUILD_TYPE=5;
	ChatConst.MSG_MAX_NUM=200;
	ChatConst.LINE_MAX_NUM=1000;
	ChatConst.OP_ROOM_INVITE=10000;
	ChatConst.GUILD_SUB_TYPE_CHAT=2;
	ChatConst.GUILD_SUB_TYPE_DONATE=10000;
	ChatConst.GUILD_SUB_TYPE_OPTIONRES=10001;
	ChatConst.GUILD_SUB_TYPE_BATTLE=10002;
	ChatConst.GUILD_SUB_TYPE_REQUEST=10003;
	__static(ChatConst,
	['CHANNEL_TYPE_MAP',function(){return this.CHANNEL_TYPE_MAP={
			'all':0,
			'world':1,
			'friend':2,
			'room':3,
			'battle':4,
			'guild':5};},'TYPE_CHANNEL_MAP',function(){return this.TYPE_CHANNEL_MAP={
			1:'world',
			2:'friend',
			3:'room',
			4:'battle',
			5:'guild'};},'COLOR_SETTING',function(){return this.COLOR_SETTING={
			'world':'#ffde00',
			'system':'#ffffff',
			'room':'#00c1ff',
			'battle':'#00c1ff',
			'guild':'#00e315',
			1:'#ffde00',
			3:'#00c1ff',
			4:'#00c1ff',
			5:'#00e315'
			};},'LINE_CONFIG',function(){return this.LINE_CONFIG=[{
			num:900,
			lang:"9002289",
			color:'#ff451f',
			skin:'chat/hall/full/ui_hong.png'
			},{
			num:400,
			lang:"9002290",
			color:'#ffe437',
			skin:'chat/hall/full/ui_huang.png'
			},{
			num:0,
			lang:"9002291",
			color:'#7dfe00',
			skin:'chat/hall/full/ui_lu.png'
	}];}

	]);
	return ChatConst;
})()


//class modules.chat.data.ChatChannelInfo
var ChatChannelInfo=(function(){
	function ChatChannelInfo(id,num){
		this.id=0;
		this.num=0;
		this.id=id;
		this.num=num;
	}

	__class(ChatChannelInfo,'modules.chat.data.ChatChannelInfo');
	return ChatChannelInfo;
})()


//class modules.chat.data.ChatInfo
var ChatInfo=(function(){
	function ChatInfo(){
		this.sendTo=null;
		this.type=0;
		this.subType=0;
		this.sendPlayer=null;
		this.content=null;
		this.channelId=0;
		this.param=null;
		this.msg=null;
		this.sendBarrage=false;
		this.createTime=0;
	}

	__class(ChatInfo,'modules.chat.data.ChatInfo');
	return ChatInfo;
})()


//class modules.chat.data.ChatPlayerInfo
var ChatPlayerInfo=(function(){
	function ChatPlayerInfo(){
		/**玩家ID */
		this.playerId='';
		/**玩家昵称 */
		this.nickName='';
		/**玩家头像 */
		this.avatar=null;
		/**性别 */
		this.sex=false;
		/**段位积分 */
		this.trophy=0;
		/**公会名字*/
		this.guildName=null;
		/**openid */
		this.openId=null;
		/**禁言结束时间 */
		this.punishEnd=null;
		/**禁言提示 */
		this.punishTip=null;
		/***/
		this.siteId=0;
		/**玩家VIP等级 */
		this.vipLevel=0;
	}

	__class(ChatPlayerInfo,'modules.chat.data.ChatPlayerInfo');
	return ChatPlayerInfo;
})()


//class modules.email.EmailMgr
var EmailMgr=(function(){
	function EmailMgr(){
		this._allMainArr=null;
		this.isRed=false;
		this.isOneClick=false;
		/**
		*奖励物品
		*/
		this.rewards=null;
	}

	__class(EmailMgr,'modules.email.EmailMgr');
	var __proto=EmailMgr.prototype;
	__proto.setup=function(){
		SocketManager.Instance.on(0x0067,this,this.onAllMailInfoHandler);
		SocketManager.Instance.on(0x0066,this,this.onUpdateMailHandler);
		SocketManager.Instance.on(0x006A,this,this.onMailReward);
	}

	__proto.onMailReward=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.ActivityRewardMsg,pkg);
		this.rewards=res;
		UIMgr.ins.openView("ShowGetGoodsView",Handler.create(this,this.onGetGoodsViewComplete));
	}

	__proto.onGetGoodsViewComplete=function(view){
		view.setData(this.rewards);
	}

	/**
	*更新邮件数据
	*/
	__proto.onUpdateMailHandler=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.MailListMsg,pkg);
		if(this._allMainArr==null)this._allMainArr=[];
		if(this._allMainArr !=null){
			var info;
			for(var $each_info in res.malls){
				info=res.malls[$each_info];
				if(info.isExist){
					if(this._allMainArr.length==0){
						this._allMainArr.push(info);
						EventMgr.ins.event("UPDATE_MAIL",2);
					}
					else{
						var flagAdd=false;
						for (var i=0,len=this._allMainArr.length;i < len;i++){
							if(this._allMainArr[i].mailId==info.mailId){
								flagAdd=false;
								this._allMainArr[i]=info;
								EventMgr.ins.event("UPDATE_MAIL",1);
								break ;
							}
							else{
								flagAdd=true;
							}
						}
						if(flagAdd){
							this._allMainArr.push(info);
							EventMgr.ins.event("UPDATE_MAIL",2);
						}
					}
				}
				else{
					for (var j=0;j < this._allMainArr.length;j++){
						if(this._allMainArr[j].mailId==info.mailId){
							this._allMainArr.splice(j,1);
							EventMgr.ins.event("UPDATE_MAIL",3);
							break ;
						}
					}
				}
			}
		}
		var item;
		for(var $each_item in this._allMainArr){
			item=this._allMainArr[$each_item];
			if(!item.isRead){
				this.isRed=true;
				break ;
			}
			else{
				this.isRed=false;
			}
		}
		EventMgr.ins.event("SET_HALL_MAIL_RED");
	}

	/**
	*获取所有邮件数据
	*/
	__proto.onAllMailInfoHandler=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.MailListMsg,pkg);
		this._allMainArr=[];
		var flag=false;
		this._allMainArr=res.malls;
		this._allMainArr.sort(this.sortHandler);
		var info;
		for(var $each_info in this._allMainArr){
			info=this._allMainArr[$each_info];
			if(!info.isRead && !flag){
				flag=true;
				break ;
			}
		}
		this.isRed=flag;
		EventMgr.ins.event("SET_HALL_MAIL_RED");
		this.isRed && EventMgr.ins.event("CHAT-send_unread_msg");
	}

	__proto.sortHandler=function(data1,data2){
		var value1=data1.isRead ? 1 :0;
		var value2=data2.isRead ? 1 :0;
		if(value1==value2){
			return parseInt(data2.timestamp)-parseInt(data1.timestamp);
		}
		return value1-value2;
	}

	__getset(0,__proto,'allMainArr',function(){
		return this._allMainArr;
		},function(value){
		this._allMainArr=value;
	});

	__getset(1,EmailMgr,'ins',function(){
		if(EmailMgr._ins==null)
			EmailMgr._ins=new EmailMgr();
		return EmailMgr._ins;
	});

	EmailMgr._ins=null;
	return EmailMgr;
})()


/**
*好友聊天类型
*@author shuhao.li
*/
//class modules.friends.consts.FriendsChatType
var FriendsChatType=(function(){
	function FriendsChatType(){}
	__class(FriendsChatType,'modules.friends.consts.FriendsChatType');
	FriendsChatType.CHAT_TIME_LINE=-1;
	FriendsChatType.CHAT_FRIEND=0;
	FriendsChatType.CHAT_ASK_ITEM=2;
	FriendsChatType.CHAT_SYSTEM_NORMAL=1;
	FriendsChatType.CHAT_SYSTEM_REQ=2;
	FriendsChatType.CHAT_SYSTEM_RESP=3;
	FriendsChatType.CHAT_SYSTEM_DEL=4;
	FriendsChatType.CHAT_SYSTEM_FRIEND_REJ=5;
	FriendsChatType.CHAT_SYSTEM_DEL_BY_FRIEND=6;
	FriendsChatType.GUILD_INVITE=7;
	FriendsChatType.GUILD_INVITE_RESP=8;
	FriendsChatType.GUILD_INVIRE_REJ=9;
	FriendsChatType.SHOOT_REQUEST=10;
	FriendsChatType.SHOOT_GIFT=11;
	return FriendsChatType;
})()


/**
*好友状态
*@author shuhao.li
*/
//class modules.friends.consts.FriendsState
var FriendsState=(function(){
	function FriendsState(){}
	__class(FriendsState,'modules.friends.consts.FriendsState');
	FriendsState.OFFLINE=-1;
	FriendsState.FIGHT=1;
	FriendsState.TEAM=2;
	FriendsState.ONLINE=3;
	return FriendsState;
})()


/**
*好友界面事件类型
*@author shuhao.li
*/
//class modules.friends.consts.FriendsViewEvent
var FriendsViewEvent=(function(){
	function FriendsViewEvent(){}
	__class(FriendsViewEvent,'modules.friends.consts.FriendsViewEvent');
	FriendsViewEvent.EVENT_CHANGE_NOT_FRIENDS_TIPS="event_change_not_friends_tips";
	FriendsViewEvent.EVENT_CHANGE_CHAT_TARGET="event_change_chat_target";
	FriendsViewEvent.EVENT_SHOW_MENU="event_show_menu";
	FriendsViewEvent.EVENT_SELECT_PHIZ="event_select_phiz";
	FriendsViewEvent.EVENT_SET_RIGHT_TIPS="event_set_right_tips";
	FriendsViewEvent.EVENT_CHANGE_SYSTEM_INFO="event_change_system_info";
	return FriendsViewEvent;
})()


/**
*操作类型
*@author shuhao.li
*/
//class modules.friends.consts.OperateType
var OperateType=(function(){
	function OperateType(){}
	__class(OperateType,'modules.friends.consts.OperateType');
	OperateType.TYPE_RECEIVE=0;
	OperateType.TYPE_ASK_FOR=1;
	OperateType.TYPE_SEND_OUT=2;
	return OperateType;
})()


/**
*系统消息类型
*@author shuhao.li
*/
//class modules.friends.consts.SystemInfoType
var SystemInfoType=(function(){
	function SystemInfoType(){}
	__class(SystemInfoType,'modules.friends.consts.SystemInfoType');
	SystemInfoType.TYPE_SYSTEM_INFO="TYPE_SYSTEM_INFO";
	SystemInfoType.TYPE_BATTLE_INFO="TYPE_BATTLE_INFO";
	SystemInfoType.CHAT_SYSTEM_NORMAL=1;
	SystemInfoType.CHAT_SYSTEM_REQ=2;
	SystemInfoType.CHAT_SYSTEM_RESP=3;
	SystemInfoType.CHAT_SYSTEM_DEL=4;
	SystemInfoType.CHAT_SYSTEM_FRIEND_REJ=5;
	SystemInfoType.CHAT_SYSTEM_DEL_BY_FRIEND=6;
	SystemInfoType.GUILD_INVITE=7;
	SystemInfoType.GUILD_INVITE_RESP=8;
	SystemInfoType.GUILD_INVIRE_REJ=9;
	return SystemInfoType;
})()


/**
*友谊战战报
*@author shuhao.li
*/
//class modules.friends.datas.BattleReportData
var BattleReportData=(function(){
	function BattleReportData(){
		/**地图名 **/
		this.mapName=null;
		/**玩家1 UID **/
		this.playerId_1=null;
		/**玩家1名字 **/
		this.nickName_1=null;
		/**玩家1头像url **/
		this.avatar_1=null;
		/**玩家2 UID **/
		this.playerId_2=null;
		/**玩家2名字 **/
		this.nickName_2=null;
		/**玩家2头像url **/
		this.avatar_2=null;
		/**胜利者名字 **/
		this.winName=null;
	}

	__class(BattleReportData,'modules.friends.datas.BattleReportData');
	return BattleReportData;
})()


/**
*私聊数据对象
*@author shuhao.li
*/
//class modules.friends.datas.ChatData
var ChatData=(function(){
	function ChatData(){
		/**玩家ID **/
		this.playerId=null;
		/**玩家昵称 **/
		this.nickName=null;
		/**发送者 **/
		this.sendId=null;
		/**发送者昵称 **/
		this.sendNickName=null;
		/**聊天类型 **/
		this.chatType=0;
		/**聊天内容 **/
		this.msg=null;
		/**头像路径 **/
		this.avatar=null;
		/**好友聊天服ID **/
		this.chatServerId=NaN;
		/**发送时间 **/
		this.sendTime=null;
		/**唯一ID标识 **/
		this.uniqueId=null;
		/**接收到信息的时间(分钟)**/
		this.timeStr=null;
		/**接收到的时间 **/
		this.receiveTime=NaN;
	}

	__class(ChatData,'modules.friends.datas.ChatData');
	return ChatData;
})()


/**
*好友数据对象
*@author shuhao.li
*/
//class modules.friends.datas.FriendsData
var FriendsData=(function(){
	function FriendsData(){
		/**玩家UID **/
		this.playerId="";
		/**好友OPENID **/
		this.openId="";
		/**名字 **/
		this.nickName="";
		/**头像路径 **/
		this.avatar="";
		/**好友杯数 **/
		this.trophy=0;
		/**性别 **/
		this.sex=false;
		/**接收好友状态 **/
		this.friendState=0;
		/**玩家等级 **/
		this.level=0;
		/**玩家VIP等级 **/
		this.vipLevel=0;
		/**在线状态 **/
		this.onlineState=0;
		/**游戏服ID **/
		this.gameServerId=-1;
		/**聊天服ID **/
		this.chatServerId=-1;
		/**公会ID **/
		this.guildId="-1";
		/**公会名 **/
		this.guildName="";
		/**标枪历史最高分 **/
		this.shotMaxScore=-1;
		/**当日索要点金道具次数 **/
		this.dayAskShootCount=-1;
		/**战斗服ID **/
		this.battleServerId=-1;
		/**公会职位 **/
		this.guildJob=0;
		/**可领取物品数量 **/
		this.receiveNum=0;
		/**赠送时间(时间字符串)**/
		this.sendOutTime=NaN;
		/**接收物品时间(毫秒)**/
		this.takeItemTime=NaN;
		/**FB好友所在我的好友列表索引 **/
		this.facebookIndex=0;
	}

	__class(FriendsData,'modules.friends.datas.FriendsData');
	var __proto=FriendsData.prototype;
	/**
	*是否在线中
	*@return
	*/
	__getset(0,__proto,'isOnline',function(){
		return this.onlineState==FriendsState.ONLINE;
	});

	/**
	*是否可以索要
	*@return
	*/
	__getset(0,__proto,'isCanAsk',function(){
		var isToday=TimeManager.Instance.isToday(this.takeItemTime);
		return !isToday;
	});

	/**是否可领取赠送物品 **/
	__getset(0,__proto,'isCanReceive',function(){
		return (this.receiveNum > 0);
	});

	/**
	*获取排序顺序
	*@return 1:往后排-1:往前排
	*/
	__getset(0,__proto,'sort',function(){
		if(this.isOnline){
			if(this.isCanReceive)return 1;
			else return 2;
		}
		if(this.isTeaming){
			if(this.isCanReceive)return 3;
			else return 4;
		}
		if(this.isFighting){
			if(this.isCanReceive)return 5;
			else return 6;
		}
		if(this.isOffLine){
			if(this.isCanReceive)return 7;
			else return 8;
		}
		return 0;
	});

	/**
	*是否可赠送
	*@return
	*/
	__getset(0,__proto,'isCanSendOut',function(){
		var isToday=TimeManager.Instance.isToday(this.sendOutTime);
		return !isToday;
	});

	/**
	*获取性别资源路径
	*@return
	*/
	__getset(0,__proto,'sexUI',function(){
		return this.sex ? "friends/ui_nan.png" :"friends/ui_nv.png";
	});

	/**
	*是否战斗中
	*@return
	*/
	__getset(0,__proto,'isFighting',function(){
		return this.onlineState==FriendsState.FIGHT;
	});

	/**
	*是否组队中
	*@return
	*/
	__getset(0,__proto,'isTeaming',function(){
		return this.onlineState==FriendsState.TEAM;
	});

	/**
	*是否离线中
	*@return
	*/
	__getset(0,__proto,'isOffLine',function(){
		return this.onlineState==FriendsState.OFFLINE;
	});

	return FriendsData;
})()


/**
*友谊战邀请数据对象
*@author shuhao.li
*/
//class modules.friends.datas.InviteFriendBattleData
var InviteFriendBattleData=(function(){
	function InviteFriendBattleData(){
		/**玩家UID **/
		this.playerId=null;
		/**玩家名 **/
		this.nickName=null;
	}

	__class(InviteFriendBattleData,'modules.friends.datas.InviteFriendBattleData');
	return InviteFriendBattleData;
})()


/**
*系统提示数据
*@author shuhao.li
*/
//class modules.friends.datas.SystemTipsData
var SystemTipsData=(function(){
	function SystemTipsData(){
		/**系统消息类型 SystemInfoType.as **/
		this.msgType=0;
		/**唯一ID **/
		this.uuid=null;
		/**消息时间 **/
		this.msgTime=null;
		/**聊天数据 **/
		this.chatData=null;
	}

	__class(SystemTipsData,'modules.friends.datas.SystemTipsData');
	return SystemTipsData;
})()


//class modules.friends.FriendsMgr
var FriendsMgr=(function(){
	function FriendsMgr(){
		/**是否自动打开还有界面 **/
		this.isAutoOpenFriendsWindow=false;
		this._oldTime=0;
		this._chatMaxNum=20;
		this._recentFriendDataMax=15;
		//{key:(String)uid,value:Array.<PrivateChatData> }
		this._chatDatas={};
		this._chatChangeData={};
		this._alreadyAskList={};
		/**
		*当前正在聊天的好友ID
		*/
		this.chatingId=null;
		/**
		*系统消息标识
		*@return
		*/
		this.newSystemFlag=false;
		this._myFriendsDataList=[];
		this._recentFriendDataList=[];
		this._facebookFriendDataList=[];
		this._guildFriendList=null;
		this._battleInfoList=[];
		this._systemInfoList=[];
		this._systemUuids={};
		this._recentBattleList=[];
		//最近对战的玩家信息
		this._recentBattleMax=5;
		this._battleInfoMan=5;
		this._lastCreatTime=NaN;
		this._intervalTime=10*1000;
		this._lastOneKeySendOutTime=NaN;
		this._oneKeySendOutIntervalTime=5*1000;
		this._lastReceiveTime=NaN;
		this._receiveIntervalTime=5*1000;
		this._cdCardMax=0;
		/**加速券ID **/
		this.cdItemId=6007006;
		this._maxFriendsNum=0;
		// /////--超越好友逻辑--//////////
		this.appleMap={};
		this.appleList=[];
	}

	__class(FriendsMgr,'modules.friends.FriendsMgr');
	var __proto=FriendsMgr.prototype;
	__proto.setup=function(){
		var self=this;
		var configVO=ConfigModel.getConfigData(1064);
		self._maxFriendsNum=parseInt(configVO.ConfigValue);
		!self._maxFriendsNum && (self._maxFriendsNum=1000);
		configVO=ConfigModel.getConfigData(1128);
		self._cdCardMax=parseInt(configVO.ConfigValue);
		!self._cdCardMax && (self._cdCardMax=100);
		SocketManager.Instance.on(0x007C,self,self.onFriendList);
		SocketManager.Instance.on(0x007D,self,self.onFriendUpdate);
		SocketManager.Instance.on(0x0085,self,self.onFriendChat);
		SocketManager.Instance.on(0x0082,self,self.onFriendBattleReq);
		SocketManager.Instance.on(0x0083,self,self.onFriendBattleState);
		SocketManager.Instance.on(0x0089,self,self.onSystemNoticeList);
		SocketManager.Instance.on(0x0086,self,self.onSystemNotice);
		SocketManager.Instance.on(0x007E,self,self.onDelFriend);
		SocketManager.Instance.on(0x0100,self,self.onFriendRecommendList);
		SocketManager.Instance.on(0x0101,self,self.onFriendSearchResult);
		EventMgr.ins.on("recv_guild_info",self,self.onGetGuildInfo);
		EventMgr.ins.on("recv_exitGuild",self,self.onRecvExitguild);
		EventMgr.ins.on("recv_guild_member_list",self,self.onGetGuildFriends);
	}

	/**
	*获取好友列表
	*/
	__proto.sendGetFriendsList=function(){
		SocketManager.Instance.out.sendGetFriendList();
	}

	/**
	*玩家操作
	*@param $uid :玩家UID
	*@param $type :操作类型(OperateType.as)
	*@param $chatServerId :聊天服务器ID
	*@return 是否发送数据层共
	*/
	__proto.sendPlayerOperate=function($uid,$type,$chatServerId){
		($chatServerId===void 0)&& ($chatServerId=0);
		switch($type){
			case 0:
				if(this.cdCardNum >=this._cdCardMax){
					TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300105"));
					return false;
				}
				SocketManager.Instance.out.sendFriendTakeItem([$uid]);
				break ;
			case 1:
				if(this._alreadyAskList[$uid]){
					return false;
				}
				this._alreadyAskList[$uid]=true;
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300074"));
				this.sendChatMsg($uid,"1",$chatServerId,2,false);
				break ;
			case 2:
				SocketManager.Instance.out.sendFriendGiftItem([$uid]);
				break ;
			}
		return true;
	}

	/**
	*友谊战发起/取消发起
	*@param $isStart
	*@param $letters
	*@param $mapId
	*/
	__proto.sendFriendsBattle=function($isStart,$data,$mapId){
		if($isStart){
			var friendInfoMsg=new com.road.ddt.proto.FriendInfoMsg();
			friendInfoMsg.friendId=$data.playerId;
			friendInfoMsg.nickName=$data.nickName;
			SocketManager.Instance.out.sendFriendBattle(friendInfoMsg,"",$mapId);
		}
		else {
			SocketManager.Instance.out.sendFriendBattleCancel($data.playerId);
		}
	}

	/**
	*发送友谊战反馈
	*@param $uid :玩家uid
	*@param $agree :是否同意
	*/
	__proto.sendFriendBattle=function($uid,$agree){
		SocketManager.Instance.out.sendFriendBattleBack($uid,($agree ? 2 :1));
	}

	/**
	*发送私聊信息
	*@param $friendId :好友uid
	*@param $msg :发送的文字
	*@param $chatServerId :聊天服务器ID
	*@param $chatType :聊天类型(普通聊天:FriendsChatType.CHAT_FRIEND,索要加速卡FriendsChatType.CHAT_ASK_ITEM )
	*@param $isAddChat :是否添加自己的聊天显示
	*/
	__proto.sendChatMsg=function($friendId,$msg,$chatServerId,$chatType,$isAddChat){
		($isAddChat===void 0)&& ($isAddChat=true);
		var infoChat=new com.road.ddt.proto.FriendChatMsg();
		infoChat.playerId=PlayerInfo.instance.playerId;
		infoChat.nickName=PlayerInfo.instance.nickName;
		infoChat.friendId=$friendId;
		infoChat.chatType=$chatType;
		infoChat.msg=ChatUtils.replaceExpression($msg);
		infoChat.chatServerId=$chatServerId;
		infoChat.sendTime=""+TimeManager.Instance.NowTime();
		if($isAddChat)
			this.addChatMsg($friendId,infoChat);
		EventMgr.ins.event("msg_chat_data_change",$friendId);
		SocketManager.Instance.out.sendFriendChatMsg(infoChat);
	}

	/**发送获取陌生好友 **/
	__proto.sendRefreshRecentFriend=function(){
		SocketManager.Instance.out.sendFriendRecommend();
	}

	/**获取facebook好友列表 **/
	__proto.sendGetFacebookFriend=function(){
		if(PlayerInfo.instance.platid !="fb")return;
		if(!this.isCanGetFacebookFriendList && this._recentFriendDataList.length > 0){
			EventMgr.ins.event("msg_refresh_facebook_friend");
			return;
		}
		FBInterfaceMgr.ins.getConnectedPlayersAsync(Handler.create(this,this.getFacebookFriendCallback));
	}

	/**获得facebook好友列表返回 **/
	__proto.getFacebookFriendCallback=function(players){
		var self=this;
		self._facebookFriendDataList=[];
		var data,openId;
		var player;
		for(var $each_player in players){
			player=players[$each_player];
			openId=player.id;
			data=new FriendsData();
			data.playerId=openId;
			data.openId=openId;
			data.nickName=player.name;
			data.avatar=player.photo;
			data.facebookIndex=self.getFriendsDataIndexByOpenId(openId)
			self._facebookFriendDataList.push(data);
		}
		self._facebookFriendDataList.sort(function(a,b){
			return a.facebookIndex-b.facebookIndex;
		});
		EventMgr.ins.event("msg_refresh_facebook_friend");
	}

	/**
	*一键赠送
	*/
	__proto.sendSendOutGift=function(){
		var self=this;
		var arr=[];
		var data;
		for (var i=0,len=self._myFriendsDataList.length;i < len;i++){
			data=self._myFriendsDataList[i];
			if(data.isCanSendOut)arr.push(data.playerId);
		}
		if(arr.length==0){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300078"));
			return;
		}
		SocketManager.Instance.out.sendFriendGiftItem(arr);
		return;
	}

	/**
	*一键领取
	*/
	__proto.sendReceive=function(){
		var self=this;
		if(self.cdCardNum >=self._cdCardMax){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300105"));
			return;
		};
		var canGetNum=self._cdCardMax-self.cdCardNum;
		var arr=[];
		var data;
		for (var i=0,len=self._myFriendsDataList.length;i < len;i++){
			if(canGetNum <=0)break ;
			data=self._myFriendsDataList[i];
			if(data.isCanReceive){
				arr.push(data.playerId);
				canGetNum--;
			}
		}
		if(arr.length==0){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300075"));
			return;
		}
		SocketManager.Instance.out.sendFriendTakeItem(arr);
	}

	/**
	*同意/拒绝索要
	*@param value
	*@param state :1:拒绝 2：同意
	*/
	__proto.sendAgreeAsk=function($playerId,state){
		this.delChat($playerId);
		if(state==2)
			SocketManager.Instance.out.sendFriendGiftItem([$playerId]);
	}

	/**
	*邀请加入公会
	*@param $playerId :玩家ID
	*@param $nickName :玩家昵称
	*/
	__proto.sendGuildInvite=function($playerId,$nickName){
		var friendInfoMsg=new com.road.ddt.proto.FriendInfoMsg();
		friendInfoMsg.friendId=$playerId;
		friendInfoMsg.nickName=$nickName;
		SocketManager.Instance.out.sendGuildInvite(friendInfoMsg);
	}

	/**
	*邀请进公会反馈
	*@param value
	*@param state :1:拒绝 2：同意
	*/
	__proto.sendGuildInviteResp=function(value,state){
		SocketManager.Instance.out.sendGuildInviteResp(value.chatData.sendId,state,value.chatData.uniqueId);
		this.delSystemInfo(value.uuid);
	}

	/**
	*好友其他邀请
	*@param value
	*@param state :1:拒绝 2：同意
	*/
	__proto.sendAnsFriend=function(value,state){
		SocketManager.Instance.out.sendAnsFriend(value.chatData.sendId,state,value.chatData.uniqueId);
		this.delSystemInfo(value.uuid);
	}

	/**
	*查询玩家
	*/
	__proto.sendInquirePlayer=function($name){
		SocketManager.Instance.out.sendFriendSearchResult($name);
	}

	/**
	*添加好友
	*@param $playerId
	*@param $openId
	*@param $nickName
	*/
	__proto.sendAddFriend=function($playerId,$nickName){
		($nickName===void 0)&& ($nickName="");
		if(this._myFriendsDataList.length >=this._maxFriendsNum){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300094"));
			return;
		}
		if(parseInt($playerId)<=0){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002222"));
			return;
		};
		var msg=new com.road.ddt.proto.FriendInfoMsg();
		msg.friendId=$playerId;
		$nickName !="" && (msg.nickName=$nickName);
		SocketManager.Instance.out.sendAddFriend(msg);
	}

	/**
	*添加Facebook好友
	*@param $openId
	*@param $nickName
	*/
	__proto.sendAddFBFriend=function($openId,$nickName){
		($nickName===void 0)&& ($nickName="");
		if(this._myFriendsDataList.length >=this._maxFriendsNum){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300094"));
			return;
		};
		var msg=new com.road.ddt.proto.FriendInfoMsg();
		msg.friendId="";
		msg.openId=$openId;
		$nickName !="" && (msg.nickName=$nickName);
		SocketManager.Instance.out.sendAddFriend(msg);
	}

	/**
	*删除好友
	*@param $playerId
	*/
	__proto.sendDelFriend=function($playerId){
		SocketManager.Instance.out.sendDelFriend($playerId);
	}

	/**
	*分享邀请好友
	*@param $playerId :分享者ID
	*/
	__proto.sendInviteFriend=function($playerId){
		var arr=[];
		arr[0]=ShareConst.INVITE_FRIEND;
		arr[1]={"invitePId":$playerId};
		EventMgr.ins.event("SHARE",[arr]);
	}

	/**
	*分享索要物品(A向B索要,A为申请者.B为执行者)
	*@param $requestPId :申请者ID
	*@param $executePId :执行者ID
	*/
	__proto.sendShareAsk=function($requestPId,$executePId){
		var arr=[];
		arr[0]=ShareConst.FRIEND_ASK_ITEM;
		arr[1]={"requestPId":$requestPId,"executePId":$executePId};
		EventMgr.ins.event("SHARE",[arr]);
	}

	/**
	*使用加速卡
	*@param $boxId :宝箱ID
	*/
	__proto.sendUseCdCard=function($boxId){
		SocketManager.Instance.out.sendUseCdCard($boxId);
	}

	/**
	*所有好友信息列表
	*@param pkg
	*/
	__proto.onFriendList=function(pkg){
		var self=this;
		var res=ProtoMgr.decode(com.road.ddt.proto.FriendInfoListMsg,pkg);
		var list=res.list;
		var data,msg;
		for (var i=0,len=list.length;i < len;i++){
			msg=list[i];
			data=self.getFriendsDataById(msg.friendId);
			if(!data){
				data=new FriendsData();
				self._myFriendsDataList.push(data);
			}
			self.parseMsgIntoFriendsData(data,msg);
		}
		self._myFriendsDataList.sort(this.sort);
		EventMgr.ins.event("msg_update_my_friend_list");
	}

	/**
	*好友信息更新
	*@param pkg
	*/
	__proto.onFriendUpdate=function(pkg){
		var self=this;
		var res=ProtoMgr.decode(com.road.ddt.proto.FriendInfoListMsg,pkg);
		var list=res.list;
		var data,msg,index=0;
		for (var i=0,len=list.length;i < len;i++){
			msg=list[i];
			if(msg.isExist){
				data=self.getFriendsDataById(msg.friendId);
				if(!data){
					data=new FriendsData();
					self._myFriendsDataList.push(data);
				}
				self.parseMsgIntoFriendsData(data,msg);
			}
			else {
				index=self.getFriendsDataIndexById(msg.friendId);
				if(index < 0)continue ;
				self._myFriendsDataList.splice(index,1);
			}
		}
		self._myFriendsDataList.sort(this.sort);
		EventMgr.ins.event("msg_update_my_friend_list");
	}

	/**
	*好友聊天信息
	*@param pkg
	*/
	__proto.onFriendChat=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.FriendChatMsg,pkg);
		var key=res.playerId;
		this.addChatMsg(key,res);
		EventMgr.ins.event("msg_chat_data_change",key);
	}

	/**
	*添加聊天数据
	*@param chatData
	*/
	__proto.addChatMsg=function(key,res){
		var arr=this._chatDatas[key];
		if(!arr){
			arr=this._chatDatas[key]=[];
		}
		this.chatingId !=key && (this._chatChangeData[key]=true);
		var chatData,date;
		var sendTime=parseInt(res.sendTime);
		var t=Math.floor(sendTime/1000/60);
		if((t-this._oldTime)> 0){
			this._oldTime=t;
			if(arr.length > 0){
				chatData=new ChatData();
				chatData.chatType=FriendsChatType.CHAT_TIME_LINE;
				chatData.receiveTime=sendTime;
				date=TimeManager.Instance.getServerDate(sendTime);
				var minutes=date.getMinutes();
				minutes > 0 && minutes--;
				chatData.timeStr=StringUtils.getNumStr(date.getHours())+":"+StringUtils.getNumStr(minutes);
				arr.unshift(chatData);
			}
		}
		chatData=new ChatData();
		chatData.playerId=res.friendId;
		chatData.nickName=res.friendNickName;
		chatData.sendId=res.playerId;
		chatData.sendNickName=res.nickName;
		chatData.chatType=res.chatType;
		chatData.msg=res.msg;
		chatData.avatar=res.avatar;
		chatData.chatServerId=res.chatServerId;
		chatData.sendTime=res.sendTime;
		chatData.uniqueId=res.uniqueId;
		arr.unshift(chatData);
		if(arr.length > this._chatMaxNum){
			arr.length=this._chatMaxNum;
		}
	}

	/**
	*友谊战回应
	*@author shuhao.li
	*/
	__proto.onFriendBattleReq=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.FriendBattleReqMsg,pkg);
		if((!((SceneMgr.ins.curScene instanceof modules.hall.scene.HallMainScene )))){
			this.sendFriendBattle(res.playerInfo.friendId,false);
			}else {
			UIMgr.ins.openView("FriendshipWarAlert",Handler.create(this,function(view){
				var data=new InviteFriendBattleData();
				data.playerId=res.playerInfo.friendId;
				data.nickName=res.playerInfo.nickName;
				view.init(data);
			}));
		}
	}

	/**
	*友谊战消息提示
	*@param pkg
	*/
	__proto.onFriendBattleState=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.FriendBattleReqMsg,pkg);
		switch(res.state){
			case-2:
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14000004",res.friendInfo.nickName));
				break ;
			case-4:
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14100001"));
				break ;
			case 1:
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14000005",res.friendInfo.nickName));
				break ;
			case-3:
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14000003",res.friendInfo.nickName));
				break ;
			case-6:
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14000001",res.friendInfo.nickName));
				break ;
			case-5:
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14000002",res.friendInfo.nickName));
				break ;
			case-1:
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14000006",res.friendInfo.nickName));
				break ;
			}
		EventMgr.ins.event("msg_refuse_friend_battle");
	}

	/**
	*系统消息列表
	*@param pkg
	*/
	__proto.onSystemNoticeList=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.SystemNoticeListMsg,pkg);
		if(res.list.length > 0){
			var list=res.list,msg;
			for (var i=0,len=list.length;i < len;i++){
				msg=list[i];
				this.resolveSystemInfo(msg,msg.friendChatMsg);
			}
			this.newSystemFlag=true;
			EventMgr.ins.event("msg_update_system_info");
		}
	}

	/**
	*系统消息
	*@param pkg
	*/
	__proto.onSystemNotice=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.SystemNoticeMsg,pkg);
		this.resolveSystemInfo(res,res.friendChatMsg);
		this.newSystemFlag=true;
		EventMgr.ins.event("msg_update_system_info");
	}

	/**
	*解析系统消息数据
	*@param res
	*@param msg
	*/
	__proto.resolveSystemInfo=function(res,msg){
		if(this._systemUuids[res.uuid])return;
		var systemTipsData=new SystemTipsData();
		systemTipsData.msgType=res.msgType;
		systemTipsData.uuid=res.uuid;
		systemTipsData.msgTime=res.msgTime;
		var chatData=new ChatData();
		chatData.playerId=msg.friendId;
		chatData.nickName=msg.friendNickName;
		chatData.sendId=msg.playerId;
		chatData.sendNickName=msg.nickName;
		chatData.chatType=msg.chatType;
		var chatStr="";
		if(msg.msg !=null){
			chatStr=FaceLanguage.onGetChatInfoEN(msg.msg);
			chatStr=FaceLanguage.onGetChatInfoZH(chatStr);
			chatStr=chatStr.replace("&","");
		}
		switch(msg.chatType){
			case SystemInfoType.CHAT_SYSTEM_NORMAL:
				chatStr=msg.msg;
				break ;
			case SystemInfoType.CHAT_SYSTEM_RESP:
				if(msg.playerId==PlayerInfo.instance.playerId){
					chatStr=LanguageMgr.Ins.GetLan("14300007",msg.friendNickName);
				}
				else {
					chatStr=LanguageMgr.Ins.GetLan("14300119",msg.nickName);
				}
				break ;
			case SystemInfoType.CHAT_SYSTEM_DEL:
				chatStr=LanguageMgr.Ins.GetLan("14300006",msg.friendNickName);
				break ;
			case SystemInfoType.CHAT_SYSTEM_FRIEND_REJ:
				chatStr=LanguageMgr.Ins.GetLan("14300005",msg.friendNickName);
				break ;
			case SystemInfoType.CHAT_SYSTEM_DEL_BY_FRIEND:
				chatStr=LanguageMgr.Ins.GetLan("14300008",msg.friendNickName);
				break ;
			case SystemInfoType.GUILD_INVITE_RESP:
				chatData.nickName=LanguageMgr.Ins.GetLan("9002259");
				if(msg.friendId==PlayerInfo.instance.playerId)
					chatStr=LanguageMgr.Ins.GetLan("14300002",msg.nickName);
				else
				chatStr=LanguageMgr.Ins.GetLan("14300003",msg.friendNickName);
				break ;
			case SystemInfoType.GUILD_INVIRE_REJ:
				chatData.nickName=LanguageMgr.Ins.GetLan("9002259");
				chatStr=LanguageMgr.Ins.GetLan("14300004",msg.friendNickName);
				break ;
			case SystemInfoType.CHAT_SYSTEM_REQ:
				chatData.nickName=LanguageMgr.Ins.GetLan("9004137");
				chatStr=StringUtils.formate(LanguageMgr.Ins.GetLan("9002277"),chatStr);
				break ;
			case SystemInfoType.GUILD_INVITE:
				chatData.nickName=LanguageMgr.Ins.GetLan("9002259");
				chatStr=LanguageMgr.Ins.GetLan("14300001",msg.msg);
				break ;
			}
		chatData.msg=chatStr;
		chatData.avatar=msg.avatar;
		chatData.chatServerId=msg.chatServerId;
		chatData.sendTime=msg.sendTime;
		chatData.uniqueId=msg.uniqueId;
		systemTipsData.chatData=chatData;
		this._systemInfoList.push(systemTipsData);
		this._systemUuids[systemTipsData.uuid]=true;
	}

	/**
	*被好友删除
	*@param pkg
	*/
	__proto.onDelFriend=function(pkg){
		var self=this;
		var res=ProtoMgr.decode(com.road.ddt.proto.FriendInfoMsg,pkg);
		var index=self.getFriendsDataIndexById(res.friendId);
		if(index < 0)return;
		self._myFriendsDataList.splice(index,1);
		self._myFriendsDataList.sort(this.sort);
		EventMgr.ins.event("msg_update_my_friend_list");
	}

	/**好友推荐结果 **/
	__proto.onFriendRecommendList=function(pkg){
		var self=this;
		var res=ProtoMgr.decode(com.road.ddt.proto.FriendInfoListMsg,pkg);
		var list=res.list;
		self._recentFriendDataList=[];
		var msg,data;
		for (var i=0,len=list.length;i < len;i++){
			msg=list[i];
			data=new FriendsData();
			self.parseMsgIntoFriendsData(data,msg);
			self._recentFriendDataList.push(data);
		}
		len=self._recentBattleList.length;
		for(i=0;i < len;i++){
			self._recentFriendDataList.unshift(self._recentBattleList[i]);
		}
		if(self._recentFriendDataList.length > self._recentFriendDataMax)
			self._recentFriendDataList.length=self._recentFriendDataMax;
		EventMgr.ins.event("msg_refresh_recent_friend");
	}

	/**
	*查询玩家返回
	*@param pkg
	*/
	__proto.onFriendSearchResult=function(pkg){
		var self=this;
		var res=ProtoMgr.decode(com.road.ddt.proto.FriendInfoListMsg,pkg);
		var list=res.list;
		var arr=[];
		var msg,data;
		for (var i=0,len=list.length;i < len;i++){
			msg=list[i];
			data=new FriendsData();
			self.parseMsgIntoFriendsData(data,msg);
			arr.push(data);
		}
		arr.sort(this.sort);
		EventMgr.ins.event("msg_get_inquire_player",{"arr":arr});
	}

	/**清除聊天数据对象 **/
	__proto.clearChatData=function(){
		var self=this;
		self._chatChangeData={};
		self._battleInfoList=[];
		self._systemInfoList=[];
		self._systemUuids={};
		self._alreadyAskList={};
		self.chatingId="";
		self.newSystemFlag=false;
	}

	/**
	*通过用户UID获取聊天数据数组
	*@param $uid
	*@return :Array.<PrivateChatData>
	*/
	__proto.getChatDataByUID=function($uid){
		return this._chatDatas[$uid];
	}

	/**
	*请求获得公会好友列表
	*/
	__proto.getGuildFriendList=function(){
		GuildMgr.ins.requestGuildInfo();
	}

	/**
	*获取是否为自己的好友
	*@param $playerId
	*@return
	*/
	__proto.getIsMyFriend=function($playerId){
		return (this.getFriendsDataIndexById($playerId)>-1);
	}

	/**
	*添加对战玩家信息
	*@param $list
	*/
	__proto.pushRecentBattle=function($list){
		var self=this;
		var msg,data,userId;
		for (var i=0,len=$list.length;i < len;i++){
			msg=$list[i];
			userId=msg.userId;
			if(userId==PlayerInfo.instance.playerId)continue ;
			if(self.getIsMyFriend(userId))continue ;
			if(parseInt(userId)<=0)continue ;
			data=new FriendsData();
			data.playerId=msg.userId;
			data.nickName=msg.nickName;
			data.avatar=msg.headUrl;
			data.trophy=msg.trophy;
			data.sex=msg.sex;
			data.level=msg.level;
			data.friendState=msg.friendState;
			data.onlineState=FriendsState.ONLINE;
			data.gameServerId=msg.gameServerId;
			data.guildId=msg.guildId;
			data.guildName=msg.guildName;
			self._recentBattleList.unshift(data);
		}
		if(self._recentBattleList.length > self._recentBattleMax)
			self._recentBattleList.length=self._recentBattleMax
	}

	/**
	*友谊战战报添加
	*@param battleOverMsg :战报信息
	*/
	__proto.onFriendBattleNotice=function(battleOverMsg){
		var self=this;
		var data=new BattleReportData();
		var sceneVO=SceneModel.getSceneConfig(battleOverMsg.scenceId);
		data.mapName=LanguageMgr.Ins.GetLan(sceneVO.Name);
		var list=battleOverMsg.playerMsg,result=0;
		var msg,index=0,otherName;
		for (var i=0,len=list.length;i < len;i++){
			msg=list[i];
			index=i+1;
			data["playerId_"+index]=msg.userId;
			data["nickName_"+index]=msg.nickName;
			data["avatar_"+index]=msg.headUrl;
			if(msg.userId !=PlayerInfo.instance.playerId){
				otherName=msg.nickName;
			}
			else {
				result=msg.result;
			}
		}
		switch(result){
			case 1:
				data.winName=LanguageMgr.Ins.GetLan("14300053",PlayerInfo.instance.nickName);
				break ;
			case 2:
				data.winName=LanguageMgr.Ins.GetLan("14300053",otherName);
				break
			case 0:
				data.winName=LanguageMgr.Ins.GetLan("14300064");
				break ;
			}
		self._battleInfoList.unshift(data);
		if(self._battleInfoList.length > self._battleInfoMan)
			self._battleInfoList.length=self._battleInfoMan;
		EventMgr.ins.event("msg_update_friend_battle_info");
	}

	/**
	*通过好友ID获取好友数据
	*@param friendId
	*@return
	*/
	__proto.getFriendsDataById=function(friendId){
		var self=this,data,returnData;
		for (var i=0,len=self._myFriendsDataList.length;i < len;i++){
			data=self._myFriendsDataList[i];
			if(data.playerId==friendId){
				returnData=data;
				break ;
			}
		}
		return returnData;
	}

	/**
	*获取好友索引
	*@param friendId
	*@return
	*/
	__proto.getFriendsDataIndexById=function(friendId){
		var self=this,data,index=-1;
		for (var i=0,len=self._myFriendsDataList.length;i < len;i++){
			data=self._myFriendsDataList[i];
			if(data.playerId==friendId){
				index=i;
				break ;
			}
		}
		return index;
	}

	/**获得公会信息 **/
	__proto.onGetGuildInfo=function(guildMsg,isFromChat){
		(isFromChat===void 0)&& (isFromChat=false);
		GuildMgr.ins.requestGuildMemberList();
	}

	/**公会解散 **/
	__proto.onRecvExitguild=function(){
		this._guildFriendList=[];
	}

	/**
	*通过OpenID获取好友索引
	*@param friendId
	*@return
	*/
	__proto.getFriendsDataIndexByOpenId=function(openId){
		var self=this,data,index=-1;
		for (var i=0,len=self._myFriendsDataList.length;i < len;i++){
			data=self._myFriendsDataList[i];
			if(data.openId==openId){
				index=i;
				break ;
			}
		}
		return index;
	}

	/**获得公会成员列表 **/
	__proto.onGetGuildFriends=function(){
		var self=this;
		self._guildFriendList=[];
		var arr=GuildMgr.ins.guildFriendList,msg,data;
		for (var i=0,len=arr.length;i < arr.length;i++){
			msg=arr[i];
			data=new FriendsData();
			data.playerId=msg.playerId.toString();
			data.openId=msg.openId;
			data.nickName=msg.nickName;
			data.avatar=msg.avatar;
			data.trophy=msg.trophy;
			data.guildJob=msg.guildJob;
			data.level=msg.level;
			data.friendState=msg.friendState;
			data.onlineState=(msg.isOnline?1:0);
			data.battleServerId=msg.battleServerId;
			data.vipLevel=msg.vipLevel;
			self._guildFriendList.push(data);
		}
		self._guildFriendList.sort(this.sort);
		EventMgr.ins.event("msg_update_guild_friend");
	}

	/**
	*删除指定的聊天消息
	*@param value
	*/
	__proto.delChat=function($playerId){
		var arr=this._chatDatas[$playerId];
		if(!arr)return;
		var chatData;
		for (var i=0,len=arr.length;i < len;i++){
			chatData=arr[i];
			if(chatData.sendId==$playerId){
				arr.splice(i,1);
				break ;
			}
		}
		this._chatDatas[$playerId]=arr;
		this.chatingId !=$playerId && (this._chatChangeData[$playerId]=true);
		EventMgr.ins.event("msg_chat_data_change",$playerId);
	}

	/**
	*将 FriendInfoMsg 解析成 FriendsData 对象
	*@param $data
	*@param $msg
	*@return
	*/
	__proto.parseMsgIntoFriendsData=function($data,$msg){
		var data=$data;
		data.playerId=$msg.friendId;
		data.openId=$msg.openId;
		data.nickName=$msg.nickName;
		data.avatar=$msg.avatar;
		data.trophy=$msg.trophy;
		data.sex=$msg.sex;
		data.level=$msg.level;
		data.friendState=$msg.friendState;
		data.onlineState=$msg.onlineState;
		data.gameServerId=$msg.gameServerId;
		data.chatServerId=$msg.chatServerId;
		data.guildId=$msg.guildId;
		data.guildName=$msg.guildName;
		data.shotMaxScore=$msg.shotMaxScore;
		data.dayAskShootCount=$msg.dayAskShootCount;
		data.battleServerId=$msg.battleServerId;
		data.sendOutTime=parseInt($msg.giftItemTime);
		data.takeItemTime=parseInt($msg.takeItemTime);
		data.receiveNum=$msg.takeItemCount;
		data.vipLevel=$msg.vipLevel;
	}

	/**排序 **/
	__proto.sort=function(a,b){
		return a.sort-b.sort;
	}

	/**
	*删除系统消息提示
	*@param uuid
	*/
	__proto.delSystemInfo=function(uuid){
		var self=this;
		var systemTipsData;
		for (var i=0,len=self._systemInfoList.length;i < len;i++){
			systemTipsData=self._systemInfoList[i];
			if(systemTipsData.uuid==uuid){
				this._systemInfoList.splice(i,1);
				this._systemUuids[systemTipsData.uuid]=false;
				break ;
			}
		}
		EventMgr.ins.event("msg_update_system_info");
	}

	__proto.getCanAskList=function(){
		var arr=[];
		for(var i=0;i < this._myFriendsDataList.length;i++){
			var data=this._myFriendsDataList[i];
			if(data.dayAskShootCount <=0){
				arr.push(data);
			}
		}
		return this.filterOffline(arr);
	}

	/**过滤掉不在线成员 */
	__proto.filterOffline=function(arr){
		var result=[];
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			if(item.onlineState !=FriendsState.OFFLINE && item.openId.toString()!=PlayerInfo.instance.playerId){
				result.push(item);
			}
		}
		return result;
	}

	__proto.readyApple=function(){
		this.appleMap={};
		this.appleList=[];
		this.addApple(this._myFriendsDataList);
		for(var key in this.appleMap){
			var friendInfoMsg=this.appleMap[key];
			if(this.appleList.length <=0){
				this.appleList.push(friendInfoMsg);
				}else{
				var insert=false;
				for(var j=0;j < this.appleList.length;j++){
					var _friendInfoMsg=this.appleList[j];
					if(friendInfoMsg.shotMaxScore >=_friendInfoMsg.shotMaxScore){
						this.appleList.splice(j,0,friendInfoMsg);
						insert=true;
						break ;
					}
				}
				if(!insert){
					this.appleList.push(friendInfoMsg);
				}
			}
		}
	}

	__proto.addApple=function(list){
		if(!list)return;
		for(var i=0;i < list.length;i++){
			var friendInfoMsg=list[i];
			if(friendInfoMsg.shotMaxScore > PlayerInfo.instance.appleGameScore){
				this.appleMap[friendInfoMsg.playerId]=friendInfoMsg;
			}
		}
	}

	__proto.checkAppleBeyondFriend=function(){
		var obj={type:-1,friendInfoMsg:null};
		if(this.appleList.length > 0){
			for(var i=0;i < this.appleList.length;i++){
				var friendInfoMsg=this.appleList[i];
				if(PlayerInfo.instance.appleGameScore > friendInfoMsg.shotMaxScore){
					return {type:1,friendInfoMsg:friendInfoMsg};
				}
			}
		}
		if(PlayerInfo.instance.appleGameScore > PlayerInfo.instance.histroyAppleScore){
			return {type:2,friendInfoMsg:null};
		}
		return obj;
	}

	/**
	*聊天消息新消息标识
	*@return
	*/
	__getset(0,__proto,'chatChangeData',function(){return this._chatChangeData;});
	/**
	*系统消息列表
	*@return
	*/
	__getset(0,__proto,'systemInfoList',function(){return this._systemInfoList;});
	/**
	*是否可一键赠送
	*@return
	*/
	__getset(0,__proto,'isCanOneKeySendOut',function(){
		var self=this;
		var t=Browser.now();
		if(t-self._lastOneKeySendOutTime < self._oneKeySendOutIntervalTime){
			return false;
		}
		self._lastOneKeySendOutTime=t;
		return true;
	});

	/**
	*公会好友数据
	*@return :Array.<FriendsData>
	*/
	__getset(0,__proto,'guildFriendList',function(){return this._guildFriendList;});
	/**已经索要列表 **/
	__getset(0,__proto,'alreadyAskList',function(){return this._alreadyAskList;});
	/**
	*是否可调用刷新推荐好友
	*@return
	*/
	__getset(0,__proto,'isCanRefresh',function(){
		var self=this;
		var t=Browser.now();
		if(t-self._lastCreatTime < self._intervalTime){
			return false;
		}
		self._lastCreatTime=t;
		return true;
	});

	/**
	*获得我的好友数据
	*@return :Array.<FriendsData>
	*/
	__getset(0,__proto,'myFriendsDataList',function(){return this._myFriendsDataList;});
	/**CD卡最大上限 **/
	__getset(0,__proto,'cdCardMax',function(){return this._cdCardMax;});
	/**
	*陌生人(最近好友)数据
	*@return :Array.<FriendsData>
	*/
	__getset(0,__proto,'recentFriendDataList',function(){return this._recentFriendDataList;});
	/**
	*facebook好友数据
	*@return :Array.<FriendsData>
	*/
	__getset(0,__proto,'facebookFriendDataList',function(){return this._facebookFriendDataList;});
	/**
	*战报
	*@return
	*/
	__getset(0,__proto,'battleInfoList',function(){return this._battleInfoList;});
	/**
	*是否可一键领取
	*@return
	*/
	__getset(0,__proto,'isCanOneKeyReceive',function(){
		var self=this;
		var t=Browser.now();
		if(t-self._lastReceiveTime < self._receiveIntervalTime){
			return false;
		}
		self._lastReceiveTime=t;
		return true;
	});

	/**
	*是否可获取facebook好友数据
	*@return
	*/
	__getset(0,__proto,'isCanGetFacebookFriendList',function(){
		var self=this;
		var index=3;
		var t=Browser.now();
		if(t-self._lastReceiveTime < self._receiveIntervalTime){
			return false;
		}
		self._lastReceiveTime=t;
		return true;
	});

	/**
	*获得CD加速卡数量
	*@return
	*/
	__getset(0,__proto,'cdCardNum',function(){
		var info=PlayerInfoMgr.ins.itemIdDic[this.cdItemId];
		if(!info)return 0;
		return info.count;
	});

	/**好友上线数量 **/
	__getset(0,__proto,'maxFriendsNum',function(){return this._maxFriendsNum;});
	__getset(1,FriendsMgr,'ins',function(){return FriendsMgr._ins;});
	__static(FriendsMgr,
	['_ins',function(){return this._ins=new FriendsMgr();}
	]);
	return FriendsMgr;
})()


//class modules.friends.mediators.FacebookFriendViewMediator
var FacebookFriendViewMediator=(function(){
	function FacebookFriendViewMediator($parent,$eventdispatch){
		this._view=null;
		this._parent=null;
		this._eventdispatch=null;
		var self=this;
		self._parent=$parent;
		self._eventdispatch=$eventdispatch;
		self.init();
	}

	__class(FacebookFriendViewMediator,'modules.friends.mediators.FacebookFriendViewMediator');
	var __proto=FacebookFriendViewMediator.prototype;
	__proto.init=function(){
		var self=this;
		self._view=new FacebookFriendViewUI();
		self._view.titleText.text=LanguageMgr.Ins.GetLan("14100011");
		self._parent.addChild(self._view);
	}

	__proto.addEvent=function(){
		var self=this;
		self._view.list.renderHandler=Handler.create(self,self.onRenderList,null,false);
		self._view.inviteBtn.clickHandler=Handler.create(self,self.onInviteHandler,null,false);
		EventMgr.ins.on("msg_refresh_facebook_friend",self,self.onRefreshRecentFriend);
	}

	__proto.removeEvent=function(){
		var self=this;
		self._view.list.renderHandler.recover();
		EventMgr.ins.off("msg_refresh_facebook_friend",self,self.onRefreshRecentFriend);
	}

	/**
	*item渲染类
	*@param $item
	*@param $index
	*/
	__proto.onRenderList=function($item,$index){
		$item.eventdispatch=this._eventdispatch;
		$item.data=this._view.list.array[$index];
	}

	/**邀请好友 **/
	__proto.onInviteHandler=function(){
		var self=this;
		FriendsMgr.ins.sendInviteFriend(PlayerInfo.instance.openid);
	}

	/**刷新facebook好友 **/
	__proto.onRefreshRecentFriend=function(){
		this._view.list.array=FriendsMgr.ins.facebookFriendDataList;
	}

	__proto.initData=function(){
		this.onRefreshRecentFriend();
	}

	__proto.show=function(){
		var self=this;
		self.addEvent();
		self._parent.addChild(self._view);
		self.initData();
		FriendsMgr.ins.sendGetFacebookFriend();
	}

	__proto.hide=function(){
		var self=this;
		self.removeEvent();
		self._parent.removeChild(self._view);
	}

	__proto.dispose=function(){
		var self=this;
		self.hide();
		self._view.destroy();
		self._view=null;
		self._parent=null;
		self._eventdispatch=null;
	}

	return FacebookFriendViewMediator;
})()


//class modules.friends.mediators.GuildFriendViewMediator
var GuildFriendViewMediator=(function(){
	function GuildFriendViewMediator($parent,$eventdispatch){
		this._view=null;
		this._parent=null;
		this._eventdispatch=null;
		var self=this;
		self._parent=$parent;
		self._eventdispatch=$eventdispatch;
		self.init();
	}

	__class(GuildFriendViewMediator,'modules.friends.mediators.GuildFriendViewMediator');
	var __proto=GuildFriendViewMediator.prototype;
	__proto.init=function(){
		var self=this;
		self._view=new GuildFriendViewUI();
		self._view.tipsText.text=LanguageMgr.Ins.GetLan("14300046");
	}

	__proto.addEvent=function(){
		var self=this;
		self._view.list.renderHandler=Handler.create(self,self.onRenderList,null,false);
		self._view.addGuild.clickHandler=Handler.create(self,self.onAddGuild,null,false);
		EventMgr.ins.on("msg_update_guild_friend",self,self.onUpdateGuildFriend);
	}

	__proto.removeEvent=function(){
		var self=this;
		self._view.list.renderHandler && self._view.list.renderHandler.recover();
		self._view.addGuild.clickHandler && self._view.addGuild.clickHandler.recover();
		self._view.list.renderHandler=null;
		self._view.addGuild.clickHandler=null;
		EventMgr.ins.off("msg_update_guild_friend",self,self.onUpdateGuildFriend);
	}

	/**
	*更新好友列表
	*/
	__proto.onUpdateGuildFriend=function(){
		var self=this;
		self._view.list.array=FriendsMgr.ins.guildFriendList;
		var hasList=(self._view.list.array.length > 0);
		self._view.tipsText.visible=!hasList;
		self._view.addGuild.visible=!hasList;
	}

	/**
	*加入公会
	*/
	__proto.onAddGuild=function(){
		UIMgr.ins.openView("GuildList");
	}

	/**
	*item渲染类
	*@param $item
	*@param $index
	*/
	__proto.onRenderList=function($item,$index){
		$item.eventdispatch=this._eventdispatch;
		$item.data=this._view.list.array[$index];
	}

	__proto.initData=function(){
		this.onUpdateGuildFriend();
		FriendsMgr.ins.getGuildFriendList();
	}

	__proto.show=function(){
		var self=this;
		self.addEvent();
		self._parent.addChild(self._view);
		self.initData();
	}

	__proto.hide=function(){
		var self=this;
		self.removeEvent();
		self._parent.removeChild(self._view);
	}

	__proto.dispose=function(){
		var self=this;
		self.hide();
		self._view.destroy();
		self._view=null;
		self._parent=null;
		self._eventdispatch=null;
	}

	return GuildFriendViewMediator;
})()


//class modules.friends.mediators.MyFriendViewMediator
var MyFriendViewMediator=(function(){
	function MyFriendViewMediator($parent,$eventdispatch){
		this._view=null;
		this._menuView=null;
		//操作菜单
		this._parent=null;
		this._eventdispatch=null;
		// }
		this._menuData=null;
		//"您暂时还没有好友,快去游戏里找找看吧!");
		this._onlineNum=0;
		this._maxNum=0;
		var self=this;
		self._parent=$parent;
		self._eventdispatch=$eventdispatch;
		self.init();
	}

	__class(MyFriendViewMediator,'modules.friends.mediators.MyFriendViewMediator');
	var __proto=MyFriendViewMediator.prototype;
	__proto.init=function(){
		var self=this;
		self._view=new MyFriendViewUI();
		self._view.titleText.text="";
		self._menuView=new MyFriendsMenuViewUI();
		self._menuView.detailsBtn.label=LanguageMgr.Ins.GetLan("9002163");
		self._menuView.delFriendBtn.label=LanguageMgr.Ins.GetLan("9040044");
		self._menuView.inviteGuildBtn.label=LanguageMgr.Ins.GetLan("9040040");
	}

	__proto.addEvent=function(){
		var self=this;
		self._view.list.renderHandler=Handler.create(self,self.onRenderList,null,false);
		self._view.inviteFriendBtn.clickHandler=Handler.create(self,self.onInviteFriend,null,false);
		self._view.addFriendBtn.clickHandler=Handler.create(self,self.onAddFriend,null,false);
		self._view.sendOutBtn.clickHandler=Handler.create(self,self.onSendOutHandler,null,false);
		self._view.receiveBtn.clickHandler=Handler.create(self,self.onReceiveHandler,null,false);
		self._menuView.detailsBtn.clickHandler=Handler.create(self,self.onDetailsHandler,null,false);
		self._menuView.delFriendBtn.clickHandler=Handler.create(self,self.onDelFriendHandler,null,false);
		self._menuView.inviteGuildBtn.clickHandler=Handler.create(self,self.onInviteGuildHandler,null,false);
		EventMgr.ins.on("msg_update_my_friend_list",self,self.onUpdateFriend);
		EventMgr.ins.on("msg_chat_data_change",self,self.onChatDataChange);
		PlayerInfoMgr.ins.on("item_change_update",self,self.onUpdateItemNum);
		self._eventdispatch.on("event_show_menu",self,self.onShowMenu);
		self._eventdispatch.on("event_change_chat_target",self,self.onChangeChatTarget);
	}

	__proto.removeEvent=function(){
		var self=this;
		self._view.list.renderHandler && self._view.list.renderHandler.recover();
		self._view.inviteFriendBtn.clickHandler && self._view.inviteFriendBtn.clickHandler.recover();
		self._view.addFriendBtn.clickHandler && self._view.addFriendBtn.clickHandler.recover();
		self._view.sendOutBtn.clickHandler && self._view.sendOutBtn.clickHandler.recover();
		self._view.receiveBtn.clickHandler && self._view.receiveBtn.clickHandler.recover();
		self._menuView.detailsBtn.clickHandler && self._menuView.detailsBtn.clickHandler.recover();
		self._menuView.delFriendBtn.clickHandler && self._menuView.delFriendBtn.clickHandler.recover();
		self._menuView.inviteGuildBtn.clickHandler && self._menuView.inviteGuildBtn.clickHandler.recover();
		self._view.list.renderHandler=null;
		self._view.inviteFriendBtn.clickHandler=null;
		self._view.addFriendBtn.clickHandler=null;
		self._view.sendOutBtn.clickHandler=null;
		self._view.receiveBtn.clickHandler=null;
		self._menuView.detailsBtn.clickHandler=null;
		self._menuView.delFriendBtn.clickHandler=null;
		self._menuView.inviteGuildBtn.clickHandler=null;
		EventMgr.ins.off("msg_update_my_friend_list",self,self.onUpdateFriend);
		EventMgr.ins.off("msg_chat_data_change",self,self.onChatDataChange);
		self._eventdispatch.off("event_show_menu",self,self.onShowMenu);
		self._eventdispatch.off("event_change_chat_target",self,self.onChangeChatTarget);
		PlayerInfoMgr.ins.off("item_change_update",self,self.onUpdateItemNum);
	}

	//物品数量
	__proto.onDetailsHandler=function(){
		SocketManager.Instance.out.requestPlayerInfo(this._menuData.playerId);
		this._menuView.visible=false;
	}

	__proto.onDelFriendHandler=function(){
		FriendsMgr.ins.sendDelFriend(this._menuData.playerId);
		this._menuView.visible=false;
	}

	__proto.onInviteGuildHandler=function(){
		FriendsMgr.ins.sendGuildInvite(this._menuData.playerId,this._menuData.nickName);
		this._menuView.visible=false;
	}

	/**
	*显示菜单
	*@param $data
	*/
	__proto.onShowMenu=function($data){
		var self=this;
		self._menuData=$data;
		self._menuView.visible=true;
		self._menuView.x=70;
		self._menuView.y=130;
		self._menuView.headImg.skin=self._menuData.avatar;
		self._menuView.nameText.text=self._menuData.nickName;
		self._menuView.sexImg.skin=self._menuData.sexUI;
		var rankVO=RankModel.getDivison(self._menuData.trophy);
		var medalRes=PathMgr.getMedalRes(rankVO);
		self._menuView.segmentImg.skin=medalRes.iconRes;
		self._menuView.guildNamaText.text=self._menuData.guildName;
	}

	/**
	*一键领取
	*/
	__proto.onReceiveHandler=function(){
		if(!FriendsMgr.ins.isCanOneKeyReceive){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("10001135"));
			return;
		}
		FriendsMgr.ins.sendReceive();
	}

	/**
	*一键赠送
	*/
	__proto.onSendOutHandler=function(){
		if(!FriendsMgr.ins.isCanOneKeySendOut){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("10001135"));
			return;
		}
		FriendsMgr.ins.sendSendOutGift();
	}

	/**
	*添加好友
	*/
	__proto.onAddFriend=function(){
		UIMgr.ins.openView("AddFriendWindow");
	}

	/**
	*邀请好友
	*/
	__proto.onInviteFriend=function(){
		FriendsMgr.ins.sendInviteFriend(PlayerInfo.instance.playerId);
	}

	/**
	*item渲染类
	*@param $item
	*@param $index
	*/
	__proto.onRenderList=function($item,$index){
		$item.eventdispatch=this._eventdispatch;
		$item.data=this._view.list.array[$index];
		var flag=FriendsMgr.ins.chatChangeData[$item.data.playerId];
		$item.tipsPoint.visible=flag;
	}

	/**
	*点击更新私聊对象
	*@param $data
	*/
	__proto.onChangeChatTarget=function($data){
		FriendsMgr.ins.chatingId=$data.playerId;
		FriendsMgr.ins.chatChangeData[FriendsMgr.ins.chatingId]=false;
		this._view.list.array=FriendsMgr.ins.myFriendsDataList;
	}

	/**
	*聊天消息更新
	*@param $id
	*/
	__proto.onChatDataChange=function($id){
		if(FriendsMgr.ins.chatingId==$id)return;
		this._view.list.array=FriendsMgr.ins.myFriendsDataList;
	}

	__proto.initData=function(){
		var self=this;
		FriendsMgr.ins.chatingId="";
		self.onUpdateFriend();
		if(self._maxNum==0)
			self._eventdispatch.event("event_change_not_friends_tips",LanguageMgr.Ins.GetLan("14300037"));
		else
		self._eventdispatch.event("event_change_not_friends_tips",LanguageMgr.Ins.GetLan("14300039"));
		self.onUpdateItemNum();
	}

	/**
	*更新物品数量
	*/
	__proto.onUpdateItemNum=function(){
		var itemVO=ItemModel.getItemConfigData(FriendsMgr.ins.cdItemId);
		this._view.cdCardNumText.text=LanguageMgr.Ins.GetLan(itemVO.Name)+" "+FriendsMgr.ins.cdCardNum+"/"+FriendsMgr.ins.cdCardMax;
	}

	/**更新好友显示 **/
	__proto.onUpdateFriend=function(){
		var self=this;
		var arr=FriendsMgr.ins.myFriendsDataList;
		var isOldHasFriend=(self._maxNum>0);
		self._onlineNum=0;
		self._maxNum=arr.length;
		var data;
		for (var i=0,len=arr.length;i < len;i++){
			data=arr[i];
			if(data.isOnline)self._onlineNum++;
		}
		self._view.list.array=arr;
		self._view.titleText.text=LanguageMgr.Ins.GetLan("14300038",self._onlineNum,self._maxNum);
		this.updateBtnStart();
		if(isOldHasFriend && self._maxNum==0)
			self._eventdispatch.event("event_change_not_friends_tips",LanguageMgr.Ins.GetLan("14300037"));
	}

	/**更新按钮显示 **/
	__proto.updateBtnStart=function(){
		var self=this;
		if(self._maxNum==0){
			self._view.receiveBtn.disabled=true;
			self._view.sendOutBtn.disabled=true;
		}
		else {
			self._view.receiveBtn.disabled=false;
			self._view.sendOutBtn.disabled=false;
		}
	}

	/**
	*设置选中的好友item
	*@param $id
	*/
	__proto.selectFriendsItem=function($id){
		var data;
		for (var i=0,len=this._view.list.array.length;i < len;i++){
			data=this._view.list.array[i];
			if(data.playerId==$id){
				this._eventdispatch.event("event_change_chat_target",data);
				this._view.list.scrollTo(i);
				break ;
			}
		}
	}

	__proto.show=function(){
		var self=this;
		self.addEvent();
		self._parent.addChild(self._view);
		self._parent.addChild(self._menuView);
		self._menuView.visible=false;
		self.initData();
	}

	__proto.hide=function(){
		var self=this;
		self.removeEvent();
		self._view.parent && self._view.parent.removeChild(self._view);
		self._menuView.parent && self._menuView.parent.removeChild(self._menuView);
	}

	__proto.onClickStage=function(){
		this._menuView && (this._menuView.visible=false);
	}

	__proto.dispose=function(){
		var self=this;
		self.hide();
		self._view.destroy();
		self._menuView.destroy();
		self._view=null;
		self._menuView=null;
		self._parent=null;
		self._eventdispatch=null;
		self._menuData=null;
	}

	return MyFriendViewMediator;
})()


//class modules.friends.mediators.PrivateChatViewMediator
var PrivateChatViewMediator=(function(){
	function PrivateChatViewMediator($parent,$eventdispatch){
		this._view=null;
		//聊天界面
		this._tipsView=null;
		//提示界面
		this._phizView=null;
		//表情选择界面
		this._parent=null;
		this._eventdispatch=null;
		this._chatTargetData=null;
		//{key:(String)type,value:Array<ChatLeftItem/ChatRightItem/AskItem> }
		this._pool={};
		this._lastCreatTime=NaN;
		var self=this;
		self._parent=$parent;
		self._eventdispatch=$eventdispatch;
		self.init();
	}

	__class(PrivateChatViewMediator,'modules.friends.mediators.PrivateChatViewMediator');
	var __proto=PrivateChatViewMediator.prototype;
	__proto.init=function(){
		var self=this;
		self._view=new PrivateChatViewUI();
		self._tipsView=new TipsViewUI();
		self._tipsView.tipsText.text="";
		self._view.chatInputText.prompt=LanguageMgr.Ins.GetLan("9070024");
		self._view.itemPanel.addChild(self._view.itemVBox);
	}

	__proto.addEvent=function(){
		var self=this;
		self._view.phizBtn.clickHandler=Handler.create(self,self.showPhizView,null,false);
		self._view.sendBtn.clickHandler=Handler.create(self,self.onSendMsg,null,false);
		self._eventdispatch.on("event_change_not_friends_tips",self,self.onChangeFriendsTips);
		self._eventdispatch.on("event_change_chat_target",self,self.onChangeChatTarget);
		self._eventdispatch.on("event_select_phiz",self,self.onSelectPhiz);
		EventMgr.ins.on("msg_chat_data_change",self,self.onChatDataChange);
	}

	__proto.removeEvent=function(){
		var self=this;
		self._view.phizBtn.clickHandler && self._view.phizBtn.clickHandler.recover();
		self._view.sendBtn.clickHandler && self._view.sendBtn.clickHandler.recover();
		self._view.phizBtn.clickHandler=null;
		self._view.sendBtn.clickHandler=null;
		self._eventdispatch.off("event_change_not_friends_tips",self,self.onChangeFriendsTips);
		self._eventdispatch.off("event_change_chat_target",self,self.onChangeChatTarget);
		self._eventdispatch.off("event_select_phiz",self,self.onSelectPhiz);
		EventMgr.ins.off("msg_chat_data_change",self,self.onChatDataChange);
	}

	/**更新好友提示 **/
	__proto.onChangeFriendsTips=function($tips){
		var self=this;
		self._view.visible=false;
		self._tipsView.visible=true;
		self._tipsView.tipsText.text=$tips;
	}

	/**
	*更新私聊对象
	*@param $data :私聊的好友对象
	*/
	__proto.onChangeChatTarget=function($data){
		var self=this;
		self._chatTargetData=$data;
		self._view.visible=true;
		self._tipsView.visible=false;
		self._phizView && (self._phizView.visible=false);
		self.changeChat();
	}

	/**选择表情 **/
	__proto.onSelectPhiz=function($content){
		var self=this;
		self._phizView.visible=false;
		self._view.chatInputText.text+=$content;
	}

	/**
	*聊天数据更新
	*@param $uid
	*/
	__proto.onChatDataChange=function($uid){
		var self=this;
		if(!self._chatTargetData)return;
		if(self._chatTargetData.playerId !=$uid)return;
		self.changeChat();
	}

	/**更新聊天内容 **/
	__proto.changeChat=function(){
		var self=this;
		var chatDataArr=FriendsMgr.ins.getChatDataByUID(self._chatTargetData.playerId);
		if(!chatDataArr || chatDataArr.length==0){
			self.clearItemAll();
			return;
		}
		self.clearItemAll();
		var data,item;
		for (var i=0,len=chatDataArr.length;i < len;i++){
			data=chatDataArr[i];
			item=this.getItemByType(data.chatType);
			item.data=data;
			item.y=i;
			self._view.itemVBox.addChild(item);
		}
		self._view.itemVBox.refresh();
		self._view.itemPanel.scrollTo(0,0);
		self._view.itemPanel.refresh();
	}

	/**清除所有聊天 **/
	__proto.clearItemAll=function(){
		var self=this;
		while(self._view.itemVBox.numChildren){
			self.recycleItemByType(self._view.itemVBox.removeChildAt(0));
		}
	}

	/**
	*从指定类型对象池中获取指定item
	*@param $chatType :聊天类型
	*@return :ChatLeftItem / ChatRightItem / AskItem / ...
	*/
	__proto.getItemByType=function($chatType){
		var type="";
		switch($chatType){
			case FriendsChatType.CHAT_TIME_LINE:
				type="TimeLineItem";
				break ;
			case 0:
				type="ChatItem";
				break ;
			case 2:
				type="AskItem";
				break ;
			default :
				debugger;
				break ;
			};
		var arr=(this._pool[type]=this._pool[type]|| []);
		var item=arr.pop();
		if(!item){
			switch(type){
				case "ChatItem":
					item=new ChatItem();
					break ;
				case "AskItem":
					item=new AskItem();
					break ;
				case "TimeLineItem":
					item=new TimeLineItem();
					break ;
				}
		}
		return item;
	}

	/**
	*回收一个item到对象池
	*@param $item
	*/
	__proto.recycleItemByType=function($item){this._pool[$item.className]=this._pool[$item.className]|| []
		this._pool[$item.className].push($item);
	}

	/**发送聊天消息 **/
	__proto.onSendMsg=function(){
		var self=this;
		var t=Browser.now();
		if(t-this._lastCreatTime < 1000){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("10001135"));
			return;
		}
		this._lastCreatTime=t;
		if(self._chatTargetData.isOffLine){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300080"));
			return;
		};
		var inputStr=self._view.chatInputText.text;
		var text=FuckUtils.filter(inputStr);
		text=text.replace(/&/g,"*");
		text=text.replace("<","");
		text=text.replace(">","");
		if(text !=""){
			FriendsMgr.ins.sendChatMsg(self._chatTargetData.playerId,text,self._chatTargetData.chatServerId,0);
			self._view.chatInputText.text="";
			self._phizView && (self._phizView.visible=false);
		}
	}

	/**显示表情界面 **/
	__proto.showPhizView=function(){
		var self=this;
		if(!self._phizView){
			self._phizView=new PhizViewUI();
			var arr=[];
			var start=9001101;
			var end=9001136
			for (var i=start;i < end;i++){
				arr.push(i);
			}
			self._phizView.list.renderHandler=Handler.create(self,this.onRenderPhizList,null,false);
			self._phizView.list.array=arr;
			self._phizView.y=46;
			self._phizView.visible=false;
		}
		self._parent.addChild(self._phizView);
		self._phizView.visible=!self._phizView.visible;
	}

	__proto.onRenderPhizList=function($item,$index){
		var self=this;
		$item.eventdispatch=self._eventdispatch;
		$item.phizId=self._phizView.list.array[$index];
	}

	__proto.initData=function(){
		var self=this;
		self._parent.addChild(self._view);
		self._parent.addChild(self._tipsView);
		self._view.visible=false;
		self._tipsView.visible=true;
		self._phizView && (self._phizView.visible=false);
	}

	__proto.show=function(){
		var self=this;
		self.initData();
		self.addEvent();
	}

	__proto.hide=function(){
		var self=this;
		self.removeEvent();
		self.clearItemAll();
		self._view.parent && self._view.parent.removeChild(self._view);
		self._tipsView.parent && self._tipsView.parent.removeChild(self._tipsView);
		self._phizView && (self._phizView.visible=false);
	}

	__proto.onClickStage=function(){
		this._phizView && (this._phizView.visible=false);
	}

	__proto.dispose=function(){
		var self=this;
		self.hide();
		FriendsMgr.ins.clearChatData();
		var item;
		var arr;
		for(var $each_arr in self._pool){
			arr=self._pool[$each_arr];
			while(arr.length){
				item=arr.pop();
				item.destroy();
				item=null;
			}
			arr=null;
		}
		self._pool=null;
		self._view.destroy();
		self._view=null;
		self._tipsView.destroy();
		self._tipsView=null;
		if(self._phizView){
			self._phizView.destroy();
		}
		self._phizView=null;
		self._parent=null;
		self._eventdispatch=null;
		self._chatTargetData=null;
	}

	return PrivateChatViewMediator;
})()


//class modules.friends.mediators.SystemInfoDisplayViewMediator
var SystemInfoDisplayViewMediator=(function(){
	function SystemInfoDisplayViewMediator($parent,$eventdispatch){
		this._systemInfoDisplayViewUI=null;
		//系统消息
		this._battleReportViewUI=null;
		//战报
		this._parent=null;
		this._eventdispatch=null;
		//{key:(String)type,value:Array<SystemTipsItem> }
		this._pool=[];
		var self=this;
		self._parent=$parent;
		self._eventdispatch=$eventdispatch;
		self.init();
	}

	__class(SystemInfoDisplayViewMediator,'modules.friends.mediators.SystemInfoDisplayViewMediator');
	var __proto=SystemInfoDisplayViewMediator.prototype;
	__proto.init=function(){
		var self=this;
		self._systemInfoDisplayViewUI=new SystemInfoDisplayViewUI();
		self._battleReportViewUI=new BattleReportViewUI();
	}

	__proto.addEvent=function(){
		var self=this;
		self._battleReportViewUI.list.renderHandler=Handler.create(self,self.onRenderBattleList,null,true);
		self._eventdispatch.on("event_change_system_info",self,self.onChangeSystemInfo);
		EventMgr.ins.on("msg_update_system_info",self,self.onUpdateSystemInfo);
		EventMgr.ins.on("msg_update_friend_battle_info",self,self.onUpdateFriendBattleInfo);
	}

	__proto.removeEvent=function(){
		var self=this;
		self._battleReportViewUI.list.renderHandler && self._battleReportViewUI.list.renderHandler.recover();
		self._battleReportViewUI.list.renderHandler=null;
		self._eventdispatch.off("event_change_system_info",self,self.onChangeSystemInfo);
		EventMgr.ins.off("msg_update_system_info",self,self.onUpdateSystemInfo);
		EventMgr.ins.off("msg_update_friend_battle_info",self,self.onUpdateFriendBattleInfo);
	}

	/**
	*战报渲染
	*@param $item
	*@param $index
	*/
	__proto.onRenderBattleList=function($item,$index){
		$item.data=this._battleReportViewUI.list.array[$index];
	}

	/**
	*切换显示信息类型
	*@param $type
	*/
	__proto.onChangeSystemInfo=function($type){
		var self=this;
		switch($type){
			case "TYPE_SYSTEM_INFO":
				self._systemInfoDisplayViewUI.visible=true;
				self._battleReportViewUI.visible=false;
				self.onUpdateSystemInfo();
				break ;
			case "TYPE_BATTLE_INFO":
				self._systemInfoDisplayViewUI.visible=false;
				self._battleReportViewUI.visible=true;
				self.onUpdateFriendBattleInfo();
				break ;
			}
	}

	/**更新系统消息 **/
	__proto.onUpdateSystemInfo=function(){
		var self=this;
		var systemInfoList=FriendsMgr.ins.systemInfoList;
		if(!systemInfoList || systemInfoList.length==0){
			self.clearItemAll();
			return;
		}
		self.clearItemAll();
		var data,item;
		for (var i=0,len=systemInfoList.length;i < len;i++){
			data=systemInfoList[i];
			item=this.getItemByType();
			item.data=data;
			item.y=i;
			self._systemInfoDisplayViewUI.itemVBox.addChild(item);
		}
		self._systemInfoDisplayViewUI.itemVBox.refresh();
		self._systemInfoDisplayViewUI.itemPanel.scrollTo(0,0);
		self._systemInfoDisplayViewUI.itemPanel.refresh();
	}

	/**更新友谊战战报 **/
	__proto.onUpdateFriendBattleInfo=function(){
		this._battleReportViewUI.list.array=FriendsMgr.ins.battleInfoList;
	}

	__proto.clearItemAll=function(){
		var self=this;
		while(self._systemInfoDisplayViewUI.itemVBox.numChildren){
			self.recycleItemByType((self._systemInfoDisplayViewUI.itemVBox.removeChildAt(0)));
		}
	}

	/**
	*从指定类型对象池中获取指定item
	*@return :SystemTipsItem
	*/
	__proto.getItemByType=function(){
		var item=this._pool.pop();
		if(!item){
			item=new SystemTipsItem();
		}
		return item;
	}

	/**
	*回收一个item到对象池
	*@param $item
	*/
	__proto.recycleItemByType=function($item){
		$item.parent && $item.parent.removeChild($item);
		this._pool.push($item);
	}

	__proto.initData=function(){
		this.onChangeSystemInfo("TYPE_SYSTEM_INFO");
	}

	__proto.show=function(){
		var self=this;
		self.addEvent();
		self._parent.addChild(self._systemInfoDisplayViewUI);
		self._parent.addChild(self._battleReportViewUI);
		self.initData();
	}

	__proto.hide=function(){
		var self=this;
		self.removeEvent();
		self.clearItemAll();
		self._systemInfoDisplayViewUI.parent && self._systemInfoDisplayViewUI.parent.removeChild(self._systemInfoDisplayViewUI);
		self._battleReportViewUI.parent && self._battleReportViewUI.parent.removeChild(self._battleReportViewUI);
	}

	__proto.dispose=function(){
		var self=this;
		self.hide();
		self._systemInfoDisplayViewUI.destroy();
		self._battleReportViewUI.destroy();
		var item;
		while(this._pool.length){
			item=this._pool.pop();
			item && item.destroy();
			item=null;
		}
		self._systemInfoDisplayViewUI=null;
		self._battleReportViewUI=null;
		self._parent=null;
		self._eventdispatch=null;
		self._pool=null;
	}

	return SystemInfoDisplayViewMediator;
})()


//class modules.friends.mediators.SystemInfoViewMediator
var SystemInfoViewMediator=(function(){
	function SystemInfoViewMediator($parent,$eventdispatch){
		this._view=null;
		this._parent=null;
		this._eventdispatch=null;
		var self=this;
		self._parent=$parent;
		self._eventdispatch=$eventdispatch;
		self.init();
	}

	__class(SystemInfoViewMediator,'modules.friends.mediators.SystemInfoViewMediator');
	var __proto=SystemInfoViewMediator.prototype;
	__proto.init=function(){
		var self=this;
		self._view=new SystemInfoViewUI();
		(self._view.systemBtn.getChildByName("btnText")).text=LanguageMgr.Ins.GetLan("14300051");
		(self._view.battleBtn.getChildByName("btnText")).text=LanguageMgr.Ins.GetLan("14300052");
		self._view.systemInfoPoint.visible=FriendsMgr.ins.newSystemFlag;
		self._view.friendsBattlePoint.visible=(FriendsMgr.ins.battleInfoList.length > 0);
	}

	__proto.addEvent=function(){
		var self=this;
		self._view.systemBtn.clickHandler=Handler.create(self,self.onShowSystemInfo,null,false);
		self._view.battleBtn.clickHandler=Handler.create(self,self.onShowBattleInfo,null,false);
	}

	__proto.removeEvent=function(){
		var self=this;
		self._view.systemBtn.clickHandler && self._view.systemBtn.clickHandler.recover();
		self._view.battleBtn.clickHandler && self._view.battleBtn.clickHandler.recover();
		self._view.systemBtn.clickHandler=null;
		self._view.battleBtn.clickHandler=null;
	}

	/**战报显示 **/
	__proto.onShowBattleInfo=function(){
		this._view.friendsBattlePoint.visible=false;
		this._eventdispatch.event("event_change_system_info","TYPE_BATTLE_INFO");
	}

	/**系统消息 **/
	__proto.onShowSystemInfo=function(){
		this._view.systemInfoPoint.visible=false;
		FriendsMgr.ins.newSystemFlag=false;
		this._eventdispatch.event("event_change_system_info","TYPE_SYSTEM_INFO");
	}

	__proto.initData=function(){
		this.changeInfoType(0);
	}

	/**
	*修改信息类型
	*@param $type
	*/
	__proto.changeInfoType=function($type){
		switch($type){
			case 0:
				this.onShowSystemInfo();
				break ;
			case 1:
				this.onShowBattleInfo();
				break ;
			}
	}

	__proto.show=function(){
		var self=this;
		self.addEvent();
		self._parent.addChild(self._view);
		self.initData();
	}

	__proto.hide=function(){
		var self=this;
		self.removeEvent();
		self._view.parent && self._view.parent.removeChild(self._view);
	}

	__proto.dispose=function(){
		var self=this;
		self.hide();
		self._view.destroy();
		self._view=null;
		self._parent=null;
		self._eventdispatch=null;
	}

	return SystemInfoViewMediator;
})()


//class modules.friends.mediators.TipsViewMediator
var TipsViewMediator=(function(){
	function TipsViewMediator($parent,$eventdispatch){
		this._view=null;
		this._parent=null;
		this._eventdispatch=null;
		var self=this;
		self._parent=$parent;
		self._eventdispatch=$eventdispatch;
		self.init();
	}

	__class(TipsViewMediator,'modules.friends.mediators.TipsViewMediator');
	var __proto=TipsViewMediator.prototype;
	__proto.init=function(){
		var self=this;
		self._view=new TipsViewUI();
	}

	__proto.addEvent=function(){
		var self=this;
		self._eventdispatch.on("event_set_right_tips",self,self.onSetRightTips);
	}

	__proto.removeEvent=function(){
		var self=this;
		self._eventdispatch.off("event_set_right_tips",self,self.onSetRightTips);
	}

	__proto.onSetRightTips=function($tips){
		var self=this;
		self._view.tipsText.text=$tips;
	}

	__proto.initData=function(){
		this._view.tipsText.text=LanguageMgr.Ins.GetLan("14300056");
	}

	//"添加为游戏好友\n满足聊天、赠送需求哦";
	__proto.show=function(){
		var self=this;
		self.addEvent();
		self._parent.addChild(self._view);
		self.initData();
	}

	__proto.hide=function(){
		var self=this;
		self.removeEvent();
		self._parent && self._parent.removeChild(self._view);
	}

	__proto.dispose=function(){
		var self=this;
		self.hide();
		self._view.destroy();
		self._view=null;
		self._parent=null;
		self._eventdispatch=null;
	}

	return TipsViewMediator;
})()


/**
*中控活动条件类型
*@author shuhao.li
*/
//class modules.gmActiveData.consts.GmActiveConditionType
var GmActiveConditionType=(function(){
	function GmActiveConditionType(){}
	__class(GmActiveConditionType,'modules.gmActiveData.consts.GmActiveConditionType');
	GmActiveConditionType.Type_1=1;
	GmActiveConditionType.Type_2=2;
	GmActiveConditionType.Type_3=3;
	GmActiveConditionType.Type_4=4;
	GmActiveConditionType.Type_5=5;
	return GmActiveConditionType;
})()


/**
*中控活动类型
*@author shuhao.li
*/
//class modules.gmActiveData.consts.GmActiveType
var GmActiveType=(function(){
	function GmActiveType(){}
	__class(GmActiveType,'modules.gmActiveData.consts.GmActiveType');
	GmActiveType.ACTIVETYPE_LUCKYTURN=1;
	GmActiveType.ACTIVETYPE_LEVELBOX=2;
	GmActiveType.ACTIVITY_RECHARGE=3;
	GmActiveType.ACTIVITY_CONSUME=4;
	return GmActiveType;
})()


/**
*活动数据
*@author shuhao.li
*/
//class modules.gmActiveData.datas.GmActiveData
var GmActiveData=(function(){
	function GmActiveData(){
		/**活动ID **/
		this.activeId=null;
		/**活动类型 **/
		this.activeType=0;
		/**开始时间 **/
		this.openTime=NaN;
		/**结束时间 **/
		this.stopTime=NaN;
		/**关闭时间 **/
		this.closeTime=null;
		/**活动名称 **/
		this.activeName=null;
		/**描述 **/
		this.desc=null;
		/**活动顺序 **/
		this.sort=0;
		/**活动状态 **/
		this.state=null;
		/**预留字段1 **/
		this.param1=0;
		/**预留字段2 **/
		this.param2=0;
		/**预留字段3 **/
		this.param3=null;
		/**预留字段4 **/
		this.param4=null;
		/**活动是否开启 **/
		this.isOpen=false;
		/**活动礼包[GmActivePackage.as,...] **/
		this.packages=null;
	}

	__class(GmActiveData,'modules.gmActiveData.datas.GmActiveData');
	return GmActiveData;
})()


//class modules.gmActiveData.datas.GmActivePackageConditionData
var GmActivePackageConditionData=(function(){
	function GmActivePackageConditionData(){
		/**礼包ID **/
		this.packageId=null;
		/**条件ID **/
		this.conditionId=0;
		/**目标1 **/
		this.target1=0;
		/**目标2 **/
		this.target2=0;
		/**目标3 **/
		this.target3=0;
		/**目标4 **/
		this.target4=null;
		/**目标5 **/
		this.target5=null;
	}

	__class(GmActivePackageConditionData,'modules.gmActiveData.datas.GmActivePackageConditionData');
	return GmActivePackageConditionData;
})()


//class modules.gmActiveData.datas.GmActivePackageData
var GmActivePackageData=(function(){
	function GmActivePackageData(){
		/**活动ID **/
		this.activeId=null;
		/**礼包ID **/
		this.packageId=null;
		/**排序字段 **/
		this.sort=0;
		/**领取类型 **/
		this.collectType=0;
		/**领取册数 **/
		this.collectCount=0;
		/**预留字段1 **/
		this.param1=0;
		/**预留字段2 **/
		this.param2=0;
		/**预留字段3 **/
		this.param3=null;
		/**预留字段4 **/
		this.param4=null;
		/**活动礼包[GmActivePackageIteminfoData.as...] **/
		this.items=null;
		/**活动礼包[GmActivePackageCondition.as...] **/
		this.conditions=null;
	}

	__class(GmActivePackageData,'modules.gmActiveData.datas.GmActivePackageData');
	return GmActivePackageData;
})()


//class modules.gmActiveData.datas.GmActivePackageIteminfoData
var GmActivePackageIteminfoData=(function(){
	function GmActivePackageIteminfoData(){
		/**礼包ID **/
		this.packageId=null;
		/**道具ID **/
		this.itemId=0;
		/**道具数量 **/
		this.itemCount=0;
		/**预留字段1 **/
		this.param1=0;
		/**预留字段2 **/
		this.param2=0;
		/**预留字段3 **/
		this.param3=0;
		/**预留字段4 **/
		this.param4=null;
		/**预留字段5 **/
		this.param5=null;
		/**预留字段6 **/
		this.param6=null;
	}

	__class(GmActivePackageIteminfoData,'modules.gmActiveData.datas.GmActivePackageIteminfoData');
	return GmActivePackageIteminfoData;
})()


//class modules.gmActiveData.datas.GmActiveUserData
var GmActiveUserData=(function(){
	function GmActiveUserData(msg){
		this.activeId=null;
		this.activeType=0;
		this.packageInfo=null;
		this.activeId=msg.activeId;
		this.activeType=msg.activeType;
		this.packageInfo={};
		var pack;
		for (var i=0;i < msg.userPackages.length;i++){
			pack=new GmActiveUserPackageData(msg.userPackages[i])
			this.packageInfo[pack.packageId]=pack;
		}
	}

	__class(GmActiveUserData,'modules.gmActiveData.datas.GmActiveUserData');
	return GmActiveUserData;
})()


//class modules.gmActiveData.datas.GmActiveUserPackageConditionData
var GmActiveUserPackageConditionData=(function(){
	function GmActiveUserPackageConditionData(msg){
		this.packageId=null;
		this.conditionId=0;
		this.value1=0;
		this.value2=0;
		this.value3=0;
		this.value4=null;
		this.value5=null;
		this.packageId=msg.packageId;
		this.conditionId=msg.conditionId;
		this.value1=msg.value1;
		this.value2=msg.value2;
		this.value3=msg.value3;
		this.value4=msg.value4;
		this.value5=msg.value5;
	}

	__class(GmActiveUserPackageConditionData,'modules.gmActiveData.datas.GmActiveUserPackageConditionData');
	return GmActiveUserPackageConditionData;
})()


//class modules.gmActiveData.datas.GmActiveUserPackageData
var GmActiveUserPackageData=(function(){
	function GmActiveUserPackageData(msg){
		this.packageId=null;
		this.collectCount=0;
		this.isFinish=false;
		this.canCollect=false;
		this.param1=0;
		this.param2=null;
		this.conditions=null;
		this.packageId=msg.packageId;
		this.collectCount=msg.collectCount;
		this.isFinish=msg.isFinish;
		this.canCollect=msg.canCollect;
		this.param1=msg.param1;
		this.param2=msg.param2;
		this.conditions=[];
		for (var i=0;i < msg.conditions.length;i++){
			this.conditions.push(new GmActiveUserPackageConditionData(msg.conditions[i]));
		}
	}

	__class(GmActiveUserPackageData,'modules.gmActiveData.datas.GmActiveUserPackageData');
	return GmActiveUserPackageData;
})()


//class modules.gmActiveData.GmActiveDataMgr
var GmActiveDataMgr=(function(){
	function GmActiveDataMgr(){
		this._activityData={};
		this._activityUserData={};
		this._activitySort=null;
	}

	__class(GmActiveDataMgr,'modules.gmActiveData.GmActiveDataMgr');
	var __proto=GmActiveDataMgr.prototype;
	__proto.setup=function(){
		var self=this;
		SocketManager.Instance.on(0x00A9,self,self.onGMActiveDataResolve);
		SocketManager.Instance.on(0x00AA,self,self.onGMActiveUserDataInfo);
		SocketManager.Instance.on(0x00AB,self,self.onGMActiveOPResult);
	}

	//中控活动操作结果
	__proto.onGMActiveDataResolve=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.gmactive.GmActiveMsg,pkg);
		this.delActivityDataByType(res.activeType);
		var gmActiveData=new GmActiveData();
		gmActiveData.activeId=res.activeId;
		gmActiveData.activeType=res.activeType;
		gmActiveData.openTime=parseInt(res.openTime);
		gmActiveData.stopTime=parseInt(res.stopTime);
		gmActiveData.closeTime=res.closeTime;
		gmActiveData.activeName=res.activeName;
		gmActiveData.desc=res.desc;
		gmActiveData.param1=res.param1;
		gmActiveData.param2=res.param2;
		gmActiveData.param3=res.param3;
		gmActiveData.param4=res.param4;
		gmActiveData.isOpen=res.isOpen;
		gmActiveData.sort=res.sort;
		gmActiveData.state=res.state;
		gmActiveData.packages=[];
		if(gmActiveData.isOpen){
			var packages=res.packages,packageMsg,gmActivePackageData;
			var items,conditions,itemMsg,conditionsMsg;
			var itemData,conditionData;
			for (var i=0,len=packages.length;i < len;i++){
				packageMsg=packages[i];
				gmActivePackageData=new GmActivePackageData();
				gmActivePackageData.activeId=packageMsg.activeId;
				gmActivePackageData.packageId=packageMsg.packageId;
				gmActivePackageData.sort=packageMsg.sort;
				gmActivePackageData.collectType=packageMsg.collectType;
				gmActivePackageData.collectCount=packageMsg.collectCount;
				gmActivePackageData.param1=packageMsg.param1;
				gmActivePackageData.param2=packageMsg.param2;
				gmActivePackageData.param3=packageMsg.param3;
				gmActivePackageData.param4=packageMsg.param4;
				gmActivePackageData.items=[];
				items=packageMsg.items;
				for (var j=0,len_1=items.length;j < len_1;j++){
					itemMsg=items[j];
					itemData=new GmActivePackageIteminfoData();
					itemData.packageId=itemMsg.packageId;
					itemData.itemId=itemMsg.itemId;
					itemData.itemCount=itemMsg.itemCount;
					itemData.param1=itemMsg.param1;
					itemData.param2=itemMsg.param2;
					itemData.param3=itemMsg.param3;
					itemData.param4=itemMsg.param4;
					itemData.param5=itemMsg.param5;
					itemData.param6=itemMsg.param6;
					gmActivePackageData.items.push(itemData);
				}
				gmActivePackageData.conditions=[];
				conditions=packageMsg.conditions,len_1=conditions.length;
				for (j=0;j < len_1;j++){
					conditionsMsg=conditions[j];
					conditionData=new GmActivePackageConditionData();
					conditionData.packageId=conditionsMsg.packageId;
					conditionData.conditionId=conditionsMsg.conditionId;
					conditionData.target1=conditionsMsg.target1;
					conditionData.target2=conditionsMsg.target2;
					conditionData.target3=conditionsMsg.target3;
					conditionData.target4=conditionsMsg.target4;
					conditionData.target5=conditionsMsg.target5;
					gmActivePackageData.conditions.push(conditionData);
				}
				gmActiveData.packages.push(gmActivePackageData);
			}
		}
		if (gmActiveData.activeType==3){
			if (Browser.onIOS){
				return;
			}
		}
		if(gmActiveData.activeId !=""){
			this._activityData[gmActiveData.activeId]=gmActiveData;
		}
		EventMgr.ins.event("gm_active_data_update");
	}

	/**
	/**
	*中控活动用户数据
	*@param pkg
	*/
	__proto.onGMActiveUserDataInfo=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.gmactive.GmActiveUserMsg,pkg);
		this._activityUserData[res.activeType]=new GmActiveUserData(res);
		switch(res.activeType){
			case 2:
				EventMgr.ins.event("gm_active_user_data_update_by_lvbox",res);
				break ;
			case 3:
				if(ActivityViewControl.ins.curView)
					EventMgr.ins.event("gm_active_user_data_update_by_commonactivity",ActivityViewControl.ins.curView);
				break ;
			case 4:
				if(ActivityViewControl.ins.curView)
					EventMgr.ins.event("gm_active_user_data_update_by_commonactivity",ActivityViewControl.ins.curView);
				break ;
			}
	}

	/**
	*中控活动操作结果
	*@param pkg
	*/
	__proto.onGMActiveOPResult=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.gmactive.GmActiveOpResultMsg,pkg);
		switch(res.activeType){
			case 2:
				EventMgr.ins.event("gm_active_op_result_by_lvbox",res);
				break ;
			case 3:
				EventMgr.ins.event("gm_active_op_result_by_commonactivity",res);
				break ;
			case 4:
				EventMgr.ins.event("gm_active_op_result_by_commonactivity",res);
				break ;
			}
	}

	/**
	*给中控活动排序
	*/
	__proto.sortActivity=function(){
		this._activityData.sort(function(a,b){
			if(a.sort > b.sort)return 1;
			if(a.sort < b.sort)return-1;
		});
		var item={};
		var i;
		for(var $each_i in this._activityData){
			i=this._activityData[$each_i];
			if(i.activeType==1){}
				}
	}

	/**
	*获得用户活动数据
	*@param $activeType
	*@return
	*/
	__proto.getActivityUserDataByType=function(activeType){
		return this._activityUserData[activeType];
	}

	/**
	*根据ID获得活动数据
	*@param $activeId
	*@return
	*/
	__proto.getActivityDataById=function($activeId){
		return this._activityData[$activeId];
	}

	/**
	*根据类型获得活动数据
	*@param $activeType
	*@return
	*/
	__proto.getActivityDataByType=function($activeType){
		var data;
		for(var $each_data in this._activityData){
			data=this._activityData[$each_data];
			if(!data)continue ;
			if(data.activeType==$activeType)return data;
		}
		return null;
	}

	/**
	*删除指定类型活动数据
	*@param $activeType
	*/
	__proto.delActivityDataByType=function($activeType){
		var self=this;
		var data;
		for(var key in self._activityData){
			data=self._activityData[key];
			if(!data)continue ;
			if(data.activeType==$activeType){
				self._activityData[key]=null;
				delete self._activityData[key];
				break ;
			}
		}
	}

	__getset(1,GmActiveDataMgr,'ins',function(){return GmActiveDataMgr._ins;});
	__static(GmActiveDataMgr,
	['_ins',function(){return this._ins=new GmActiveDataMgr();}
	]);
	return GmActiveDataMgr;
})()


//class modules.guild.datas.GuildBuffItemData
var GuildBuffItemData=(function(){
	function GuildBuffItemData(){
		/**主键id**/
		this.id=0;
		/**等级**/
		this.level=0;
		/**下一级消耗公会币**/
		this.costDonate=0;
		/**下一级消耗时间**/
		this.costTime=null;
		/**下一级Id**/
		this.nextId=0;
		/**图标**/
		this.icon=null;
		/**描述**/
		this.description=0;
		/**当前等级增益数值**/
		this.buffPower=0;
		/**下一等级增益数值**/
		this.nextBuffPower=0;
		/**升级完成时间**/
		this.completeDate=null;
		/**状态 1 升级完成， 2 升级中**/
		this.state=0;
		/**Buff类型**/
		this.sonType=0;
		/**效果描述**/
		this.effect=0;
	}

	__class(GuildBuffItemData,'modules.guild.datas.GuildBuffItemData');
	return GuildBuffItemData;
})()


//class modules.guild.datas.GuildShopItemData
var GuildShopItemData=(function(){
	function GuildShopItemData(){
		/**商品ID **/
		this.shopId=0;
		/**商品位置(0~n)**/
		this.index=0;
		/**商品名 **/
		this.itemName=null;
		/**物品资源URL **/
		this.itemIcon=null;
		/**技能ID,如果技能ID不为0,就说明是技能类型,显示属性,否则就是普通物品,显示描述 **/
		this.skillId=0;
		/**物品描述 **/
		this.desc=null;
		/**物品数量 **/
		this.count=0;
		/**价格 **/
		this.price=0;
		/**是否售罄 **/
		this.isSoldOut=false;
	}

	__class(GuildShopItemData,'modules.guild.datas.GuildShopItemData');
	return GuildShopItemData;
})()


//class modules.guild.FaceLanguage
var FaceLanguage=(function(){
	function FaceLanguage(){}
	__class(FaceLanguage,'modules.guild.FaceLanguage');
	FaceLanguage.onGetChatInfoEN=function(msg,size){
		if(!size){
			size={
				width:'40px',
				height:'40px'
			}
		};
		var chatStr=msg;
		var newChatStr="";
		newChatStr+=chatStr
		.replace(/\[Drool\]/g,"<img src='comm/9001101.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Grimace\]/g,"<img src='comm/9001102.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Slight\]/g,"<img src='comm/9001103.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Pooh-pooh\]/g,"<img src='comm/9001104.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Angry\]/g,"<img src='comm/9001105.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Awkward\]/g,"<img src='comm/9001106.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Joyful\]/g,"<img src='comm/9001107.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Shy\]/g,"<img src='comm/9001108.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Speechless\]/g,"<img src='comm/9001109.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Trick\]/g,"<img src='comm/9001110.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Panic\]/g,"<img src='comm/9001111.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Grin\]/g,"<img src='comm/9001112.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Sob\]/g,"<img src='comm/9001113.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Facepalm\]/g,"<img src='comm/9001114.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Tongue\]/g,"<img src='comm/9001115.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Kiss\]/g,"<img src='comm/9001116.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Toasted\]/g,"<img src='comm/9001117.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Chuckle\]/g,"<img src='comm/9001118.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Puke\]/g,"<img src='comm/9001119.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Hematemesis\]/g,"<img src='comm/9001120.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Shrunken\]/g,"<img src='comm/9001121.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Shocked\]/g,"<img src='comm/9001122.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Smile through tears\]/g,"<img src='comm/9001123.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Scare\]/g,"<img src='comm/9001124.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Sly\]/g,"<img src='comm/9001125.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Dizzy\]/g,"<img src='comm/9001126.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Bye\]/g,"<img src='comm/9001127.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Scold\]/g,"<img src='comm/9001128.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Scream\]/g,"<img src='comm/9001129.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[CoolGuy\]/g,"<img src='comm/9001130.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Silent\]/g,"<img src='comm/9001131.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Frown\]/g,"<img src='comm/9001132.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Surprise\]/g,"<img src='comm/9001133.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Sleep\]/g,"<img src='comm/9001134.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[Struggle\]/g,"<img src='comm/9001135.png' width='"+size.width+"' height='"+size.height+"'></img>");
		return newChatStr;
	}

	FaceLanguage.onGetChatInfoZH=function(msg,size){
		if(!size){
			size={
				width:'40px',
				height:'40px'
			}
		};
		var chatStr=msg;
		var newChatStr="";
		newChatStr+=chatStr
		.replace(/\[色\]/g,"<img src='comm/9001101.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[撇嘴\]/g,"<img src='comm/9001102.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[白眼\]/g,"<img src='comm/9001103.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[鄙视\]/g,"<img src='comm/9001104.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[发怒\]/g,"<img src='comm/9001105.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[尴尬\]/g,"<img src='comm/9001106.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[可爱\]/g,"<img src='comm/9001107.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[害羞\]/g,"<img src='comm/9001108.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[擦汗\]/g,"<img src='comm/9001109.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[坏笑\]/g,"<img src='comm/9001110.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[惊恐\]/g,"<img src='comm/9001111.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[呲牙\]/g,"<img src='comm/9001112.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[流泪\]/g,"<img src='comm/9001113.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[捂脸\]/g,"<img src='comm/9001114.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[调皮\]/g,"<img src='comm/9001115.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[亲亲\]/g,"<img src='comm/9001116.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[衰\]/g,"<img src='comm/9001117.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[偷笑\]/g,"<img src='comm/9001118.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[呕吐\]/g,"<img src='comm/9001119.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[吐血\]/g,"<img src='comm/9001120.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[委屈\]/g,"<img src='comm/9001121.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[疑问\]/g,"<img src='comm/9001122.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[破涕为笑\]/g,"<img src='comm/9001123.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[吓\]/g,"<img src='comm/9001124.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[阴险\]/g,"<img src='comm/9001125.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[晕\]/g,"<img src='comm/9001126.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[再见\]/g,"<img src='comm/9001127.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[咒骂\]/g,"<img src='comm/9001128.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[折磨\]/g,"<img src='comm/9001129.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[得意\]/g,"<img src='comm/9001130.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[闭嘴\]/g,"<img src='comm/9001131.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[难过\]/g,"<img src='comm/9001132.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[惊讶\]/g,"<img src='comm/9001133.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[困\]/g,"<img src='comm/9001134.png' width='"+size.width+"' height='"+size.height+"'></img>")
		.replace(/\[小纠结\]/g,"<img src='comm/9001135.png' width='"+size.width+"' height='"+size.height+"'></img>");
		return newChatStr;
	}

	return FaceLanguage;
})()


//class modules.guild.GuildBuffMgr
var GuildBuffMgr=(function(){
	function GuildBuffMgr(){
		this.displayGuildBuffList=null;
		this.isGettingData=false;
		this.isShowRedPoint=false;
		/**保存所有升级中buff升级时间**/
		this.buffUpdatingTimes={};
	}

	__class(GuildBuffMgr,'modules.guild.GuildBuffMgr');
	var __proto=GuildBuffMgr.prototype;
	__proto.setup=function(){
		var self=this;
		GuildBuffModel.allConfig;
		this.addEvent();
	}

	__proto.addEvent=function(){
		var self=this;
		SocketManager.Instance.on(0x00AE,self,self.updateGuildBuffData);
	}

	/**更新公会科技数据**/
	__proto.updateGuildBuffData=function(pkg){
		var self=this;
		self.isGettingData=true;
		Laya.timer.clearAll(self);
		this.displayGuildBuffList=[];
		this.buffUpdatingTimes={};
		var res=ProtoMgr.decode(com.road.ddt.proto.guild.GuildBuffInfoMsg,pkg);
		var guildBuffVO,item,guildBuffItemData;
		for(var i=0;i < res.buffList.length;i++){
			item=res.buffList[i];
			guildBuffVO=GuildBuffModel.getDataById(item.buffId);
			guildBuffItemData=new GuildBuffItemData();
			guildBuffItemData.id=guildBuffVO.Id;
			guildBuffItemData.level=guildBuffVO.Level;
			guildBuffItemData.costDonate=guildBuffVO.CostDonate;
			guildBuffItemData.costTime=guildBuffVO.CostTime;
			guildBuffItemData.nextId=guildBuffVO.NextId;
			guildBuffItemData.icon="assets/textrue/bufficon/"+guildBuffVO.Icon+".png";
			guildBuffItemData.description=guildBuffVO.Description;
			guildBuffItemData.effect=guildBuffVO.Effect;
			guildBuffItemData.buffPower=item.param1;
			guildBuffItemData.nextBuffPower=item.param2;
			guildBuffItemData.completeDate=item.completeDate;
			guildBuffItemData.state=item.state;
			if(guildBuffItemData.state==2){
				this.buffUpdatingTimes[item.buffId]=this.calculateTime(parseInt(item.completeDate));
			}
			this.displayGuildBuffList.push(guildBuffItemData);
		}
		this.displayGuildBuffList.sort(function(a,b){
			return a.id-b.id;
		});
		self.isGettingData=false;
		EventMgr.ins.event("UPDATE_GUILDBUFF_DATA");
	}

	/**发送公会科技红点事件**/
	__proto.sendRedPointEvent=function(){
		var self=this;
		self.isShowRedPoint=true;
		EventMgr.ins.event("GUILD_SHOW_RED_POINT",2);
		EventMgr.ins.event("change_guild_point",1);
	}

	/**
	*向服务器请求公会科技操作
	*1、请求科技信息，2、升级科技,index为升级科技的Id
	*/
	__proto.sendGuildBuffDataOp=function(type,index){
		(index===void 0)&& (index=-1);
		SocketManager.Instance.out.sendGuildBuffOp(type,index);
	}

	/**发起升级科技请求**/
	__proto.sendLevelUpOp=function(buffId){
		this.sendGuildBuffDataOp(2,buffId);
	}

	__proto.calculateTime=function(completeTime){
		var synTime=TimeManager.Instance.synTime;
		return (completeTime-synTime)/1000;
	}

	__proto.updatingTime=function(){
		var self=this;
		Laya.timer.loop(1000,self,self.onTimer);
	}

	__proto.onTimer=function(){
		var self=this;
		for(var index in self.buffUpdatingTimes){
			if(self.buffUpdatingTimes[index] > 0){
				self.buffUpdatingTimes[index]--;
			}
			if(self.buffUpdatingTimes[index] <=0 && !this.isGettingData){
				this.sendGuildBuffDataOp(1);
			}
		}
	}

	__getset(0,__proto,'getIsGettingDatas',function(){
		return this.isGettingData;
	});

	__getset(0,__proto,'getDisplayGuildShopList',function(){
		return this.displayGuildBuffList;
	});

	__getset(1,GuildBuffMgr,'ins',function(){return GuildBuffMgr._ins;});
	__static(GuildBuffMgr,
	['_ins',function(){return this._ins=new GuildBuffMgr();}
	]);
	return GuildBuffMgr;
})()


//class modules.guild.GuildEvent
var GuildEvent=(function(){
	function GuildEvent(){}
	__class(GuildEvent,'modules.guild.GuildEvent');
	GuildEvent.CHANGE_BOX_VIEW="change_box_view";
	return GuildEvent;
})()


/**
*公会管理器
*/
//class modules.guild.GuildMgr
var GuildMgr=(function(){
	function GuildMgr(){
		/**true:有活动 false:没活动 */
		this.hasBoxAct=false;
		/**true有奖励可领取 */
		this.hasBoxAward=false;
		/**宝箱是否已领奖 */
		this.isAwarded=false;
		this.typeArr=[];
		this.jobArr=[];
		/**表情数据 */
		this.faceData=[];
		/**我的公会信息 */
		this.myGuildInfo=null;
		/**保存捐赠消息 */
		this.donateList=[];
		/**保存聊天消息 */
		this.chatMsgArr=[];
		/**我请求的友谊战斗ID */
		this.myBattleId=null;
		this.isOneCreate=false;
		this.showGreenFirst=false;
		this.isOpenGuildInfoPage=false;
		/**宝箱最大等级 **/
		this.MAX_BOX_LEVEL=10;
		/**最大捐献次数 **/
		this.MAX_DONATE_NUM=5;
		this.isSetuped=false
		this.isShowTransferTips=false;
		this.guildFriendList=[];
	}

	__class(GuildMgr,'modules.guild.GuildMgr');
	var __proto=GuildMgr.prototype;
	__proto.setup=function(){
		if (!this.isSetuped){
			this.isSetuped=true;
			var self=this;
			var configVO=ConfigModel.getConfigData(1150);
			if(configVO){
				self.MAX_DONATE_NUM=parseInt(configVO.ConfigValue);
				!self.MAX_DONATE_NUM && (self.MAX_DONATE_NUM=5);
			}
			else {
				self.MAX_DONATE_NUM=5;
			}
			SocketManager.Instance.on(0x0042,self,this.onCrateGuild);
			SocketManager.Instance.on(0x0043,self,this.onGuildOption);
			SocketManager.Instance.on(0x003C,self,this.onRecvGuildInfo);
			SocketManager.Instance.on(0x003D,self,this.onRecvGuildList);
			SocketManager.Instance.on(0x0044,self,this.onRecvGuildMemberList);
			SocketManager.Instance.on(0x0046,self,this.onRecvSearchList);
			SocketManager.Instance.on(0x0047,self,this.onRecvPlayerInfo);
			SocketManager.Instance.on(0x0048,self,this.onRecvOptionNotice);
			SocketManager.Instance.on(0x0050,self,this.onRecvGuildBattleBreak);
			SocketManager.Instance.on(0x0053,self,this.onRecvGuildEvent);
			SocketManager.Instance.on(0x0055,self,this.onGuildUpdateGroupId);
			SocketManager.Instance.on(0x006D,self,this.onDonateGetCoin);
			SocketManager.Instance.on(0x0087,self,this.onGuildBoxAwardResult);
			SocketManager.Instance.on(0x0088,self,this.onRecvGuildBoxInfo);
			EventMgr.ins.on("changeLanguage",self,this.changeLanguage);
			this.changeLanguage();
		}
	}

	__proto.changeLanguage=function(){
		GuildMgr.SET_LAN=false;
		this.setLan();
	}

	/**公会宝箱消息 */
	__proto.onRecvGuildBoxInfo=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.GuildBoxInfoMsg,pkg);
		EventMgr.ins.event("recv_guildbox_info",[res]);
		this.checkHasBoxAward(res);
	}

	/**我自己的胜利次数 */
	__proto.getMyWeekwin=function(arr){
		var win=0;
		for (var i=0;i < arr.length;i++){
			var info=arr[i];
			if (info.playerId.toString()==PlayerInfo.instance.playerId){
				win=info.weekWin;
				this.isAwarded=info.isAward;
				break ;
			}
		}
		return win;
	}

	__proto.checkHasBoxAward=function(res){
		var awardTime=parseFloat(res.awardTime);
		var endTime=parseFloat(res.endTime);
		var time=TimeManager.Instance.checkTimeEndNum(awardTime);
		var endtime=TimeManager.Instance.checkTimeEndNum(endTime);
		var winCnt=this.getMyWeekwin(res.guildBoxInfo);
		if (time > 0 && winCnt > 0 && endTime <=0 && !this.isAwarded){
			this.hasBoxAward=true;
		}
	}

	/**玩家领取公会宝箱时返回结果 */
	__proto.onGuildBoxAwardResult=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.GuildBoxAwardResultMsg,pkg);
		EventMgr.ins.event("recv_guildbox_award",[res]);
		this.hasBoxAward=false;
	}

	/**捐赠获得金币 */
	__proto.onDonateGetCoin=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.ItemPairListMsg,pkg);
		UIMgr.ins.openView("GuildRewardWindow",Handler.create(this,function(view){
			view.setItems(res.list);
		}));
	}

	__proto.onGuildUpdateGroupId=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.StringMsg,pkg);
	}

	__proto.getGuildDonateInfoMsgByDonateId=function(donateId){
		var result;
		var arr=this.donateList;
		for (var i=0;i < arr.length;i++){
			var item=arr[i];
			if (item.donateId==donateId){
				result=item;
				break ;
			}
		}
		return result;
	}

	__proto.setLan=function(){
		if (GuildMgr.SET_LAN){
			return;
		}
		GuildMgr.SET_LAN=true;
		this.faceData.length=0;
		this.jobArr.length=0;
		this.typeArr.length=0;
		for (var j=0;j < 4;j++){
			this.jobArr.push(LanguageMgr.Ins.GetLan((9002115+j).toString()));
		}
		this.typeArr.push(LanguageMgr.Ins.GetLan("9002130"));
		this.typeArr.push(LanguageMgr.Ins.GetLan("9002131"));
		this.typeArr.push(LanguageMgr.Ins.GetLan("9002132"));
		for (var i=0;i < 35;i++){
			this.faceData.push(3001+i);
		}
	}

	/**会长转移 */
	__proto.onRecvGuildEvent=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.GuildEventMsg,pkg);
		if (res.type==3){
			ChatMgr.ins.changeGuildLeader(res);
		}
	}

	/**公会友谊战中断退出*/
	__proto.onRecvGuildBattleBreak=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.common.NoticeResMsg,pkg);
		TipsManager.Instance().showTips(res.key);
	}

	__proto.checkGuildChatMsg=function(msg){
		return msg.chatType==2 || (msg.chatType==3 && msg.chatSubtype==1);
	}

	/**返回其他玩家个人信息 */
	__proto.onRecvPlayerInfo=function(pkg){
		var msg=ProtoMgr.decode(com.road.ddt.proto.PlayerDetailMsg,pkg);
		UIMgr.ins.openView("PlayerMessageView",Handler.create(this,function(view){
			(view).setData(false,msg);
		}));
	}

	__proto.onCrateGuild=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.GuildInfoMsg,pkg);
		PlayerInfo.instance.consortiaID=res.guildIdStr;
		this.myGuildInfo=res;
		this.isShowTransferTips=(this.myGuildInfo.newChairmanId.toString()==PlayerInfo.instance.playerId);
		EventMgr.ins.event("close_GuildMainPage");
		this.isOneCreate=true;
		this.openGuildPage();
	}

	__proto.openGuildPage=function(guildId){
		(guildId===void 0)&& (guildId="");
		UIMgr.ins.openView("GuildInfoPage",Handler.create(this,function(view){
			view.init(guildId);
		}));
	}

	/**返回公会信息 */
	__proto.onRecvGuildInfo=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.GuildInfoMsg,pkg);
		if (!this.myGuildInfo){
			EventMgr.ins.event("close_GuildMainPage");
		}
		if (res.guildIdStr==PlayerInfo.instance.consortiaID){
			this.myGuildInfo=res;
			this.isShowTransferTips=(this.myGuildInfo.newChairmanId.toString()==PlayerInfo.instance.playerId);
		}
		EventMgr.ins.event("recv_guild_info",[res]);
		this.requestGuildMemberList(res.guildIdStr);
		EventMgr.ins.event("change_guild_point");
	}

	__proto.updateGuildInfoInstance=function(info){
		GuildInfo.instance.guildName=info.guildName
		GuildInfo.instance.guildIcon=info.iconID
		GuildInfo.instance.guildId=info.guildIdStr;
		GuildInfo.instance.members=info.players
		GuildInfo.instance.trophy=info.scores
		GuildInfo.instance.limit=modules.guild.GuildMgr.MAX_NUMBER
	}

	__proto.requestGuildMemberList=function(guildIdStr){
		if (guildIdStr==null){
			if (this.myGuildInfo){
				guildIdStr=this.myGuildInfo.guildIdStr;
			}
		}
		if (guildIdStr){
			SocketManager.Instance.out.requestGuildMemberList(guildIdStr);
		}
	}

	__proto.onRecvGuildMemberList=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.GuildMemberListMsg,pkg);
		this.guildFriendList=res.list;
		EventMgr.ins.event("recv_guild_member_list",[res.list]);
	}

	__proto.onRecvGuildList=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.GuildInfoListMsg,pkg);
		EventMgr.ins.event("recv_guild_list",[res.list]);
	}

	__proto.onRecvSearchList=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.GuildSearchMsg,pkg);
		EventMgr.ins.event("recv_search_list",[res]);
	}

	/**公会操作结果广播 */
	__proto.onRecvOptionNotice=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.GuildOptionResultMsg,pkg);
		var option=res.option.option;
		switch(option){
			case 5:;
				var itemMsg=this.getGuildDonateInfoMsgByDonateId(res.option.param3);
				if (itemMsg){
					var itemName=LanguageMgr.Ins.GetLan(ItemModel.getItemConfigData(itemMsg.itemId).Name.toString());
					var str=res.exNickName+LanguageMgr.Ins.GetLan("9002286")+itemName;
					EventMgr.ins.event("recv_showDoateTip",[str]);
				}
				return;
				break ;
			case 2:
				this.exitGuild();
				break ;
			case 4:
				if (res.option.param3==PlayerInfo.instance.playerId){
					this.exitGuild();
					return;
				}
				break ;
			case 7:
				EventMgr.ins.event("recv_exitGuild",res.option.param3);
				break ;
			case 12:
				if(res.result){
					TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300264"));
					this.myGuildInfo.hasTransferring=true;
					EventMgr.ins.event("recv_transfer_guild");
				}
				else
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300271"));
				break ;
			case 14:
				if(res.result)
					TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300269"));
				else
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300270"));
				break ;
			}
		if(!res.result)return;
		ChatMgr.ins.addGuildOption(res);
	}

	/**公会解散、自己被踢出时退出公会系统界面 */
	__proto.exitGuild=function(){
		ChatMgr.ins.clearChannelMsg('guild');
		this.myGuildInfo=null;
		EventMgr.ins.event("recv_exitGuild","-1");
		UIMgr.ins.closeView("GuildList",true,false);
	}

	__proto.onGuildOption=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.GuildOptionResultMsg,pkg);
		var option=res.option.option;
		switch (option){
			case 7:{
					this.exitGuild();
					break ;
				}
			case 2:{
					this.hideGuildInfoPage();
					break ;
				}
			case 5:{
					UIMgr.ins.closeView("GuildDonatePage",true);
					break ;
				}
			case 3:{
					EventMgr.ins.event("recv_GuildOption",3);
					break ;
				}
			case 4:{
					EventMgr.ins.event("recv_GuildOption",4);
					break ;
				}
			case 13:
				if(res.result){
					this.isShowTransferTips=false;
					this.myGuildInfo.hasTransferring=false;
				}
				break ;
			}
	}

	/**移除公会信息页面 */
	__proto.hideGuildInfoPage=function(){
		EventMgr.ins.event("close_GuildInfoPage");
	}

	/**
	*显示公会创建页面
	*@param pageType 0创建 1设置
	*/
	__proto.showCreatePage=function(pageType){
		UIMgr.ins.openView("GuildCreatePage",Handler.create(this,function(view){
			view.updataType(pageType);
		}));
	}

	/**请求自己的公会信息 **/
	__proto.requestGuildInfo=function(){
		SocketManager.Instance.out.requestGuildInfo(PlayerInfo.instance.consortiaID,true);
	}

	__getset(1,GuildMgr,'ins',function(){
		if (GuildMgr._ins==null){
			GuildMgr._ins=new GuildMgr();
		}
		return GuildMgr._ins;
	});

	__getset(1,GuildMgr,'MAX_NUMBER',function(){
		return int(ConfigModel.getConfigData(1066).ConfigValue);
	});

	GuildMgr.CREATE_GUILD=0;
	GuildMgr.GUILD_SETTING=1;
	GuildMgr.OPTION_DESOLVE=2;
	GuildMgr.OPTION_JOB=3;
	GuildMgr.OPTION_KICK=4;
	GuildMgr.OPTION_DONATE=5;
	GuildMgr.OPTION_APPLY=6;
	GuildMgr.OPTION_EXIT=7;
	GuildMgr.OPTION_DONATE_REQ=9;
	GuildMgr.OPTION_TRANSFER_GUILD=12;
	GuildMgr.OPTION_TRANSFER_OP=13;
	GuildMgr.DONATE_TO_GUILD=14;
	GuildMgr.GUILD_LEVEL_UP=15;
	GuildMgr.GUILD_BUFF_UPDATE=16;
	GuildMgr.GUILD_BOX_ACTIVTIY=1;
	GuildMgr.CHAT_TYPE_GUILD=2;
	GuildMgr.CHAT_TYPE_PUBLIC=1;
	GuildMgr.CHAT_TYPE_PRIVATE=0;
	GuildMgr.CHAT_TYPE_SYSTEM=-1;
	GuildMgr.COOL_TIME=2 *60 *60 *1000;
	GuildMgr.COOL_TIME_DONATE=7 *60 *60 *1000;
	GuildMgr.DONATE_COM_CARd=80;
	GuildMgr.DONATE_RARE_CARd=20;
	GuildMgr.FRIEND="friendBattle";
	GuildMgr.DONATE="donate";
	GuildMgr.CREATE="create";
	GuildMgr.SETTING="setting";
	GuildMgr.LEADER=1;
	GuildMgr.VICE_LEADER=2;
	GuildMgr.ELDER=3;
	GuildMgr.MEMBER=4;
	GuildMgr.SET_LAN=false;
	GuildMgr._ins=null;
	return GuildMgr;
})()


//class modules.guild.GuildShopMgr
var GuildShopMgr=(function(){
	function GuildShopMgr(){
		/**刷新时间**/
		this.freshTime=NaN;
		/**是否刷新**/
		this.isRefresh=true;
		/**可刷新次数**/
		this.freshCount=0;
		/**可免费刷新次数 **/
		this.freeFreshTimes=0;
		/**已免费刷新次数 **/
		this.freeFreshCount=0;
		/**是否为免费刷新 **/
		this.isFreeRefresh=false;
		/**最大可刷新次数**/
		this.maxFreshCount=0;
		this._refreshType=0;
		this.displayGuildShopList=null;
		/**刷新花费资源数量**/
		this.refreshConsumteCount=30;
		/**是否在获取数据**/
		this.isGettingData=false;
		this.isShowRedPoint=true;
	}

	__class(GuildShopMgr,'modules.guild.GuildShopMgr');
	var __proto=GuildShopMgr.prototype;
	//默认显示红点
	__proto.setup=function(){
		var self=this;
		var arr=ConfigModel.getConfigData(1162).ConfigValue.split(",");
		self._refreshType=parseInt(arr[0]);
		self.refreshConsumteCount=parseInt(arr[1]);
		self.maxFreshCount=ConfigModel.getConfigData(1161).ConfigValue;
		this.addEvent();
	}

	__proto.addEvent=function(){
		var self=this;
		SocketManager.Instance.on(0x00AD,self,self.updateGuildShopData);
	}

	/**
	*获取价格类型skin
	*@return
	*/
	__proto.getPriceTypeSkin=function($type){
		var skin="";
		switch($type){
			case-60:
				skin="common/ui_fengzhuangda.png";
				break ;
			case-10:
				skin="common/gold.png";
				break ;
			case-20:
				skin="common/gems.png";
				break ;
			}
		return skin;
	}

	/**
	*更新公会商店数据
	*/
	__proto.updateGuildShopData=function(pkg){
		var self=this;
		var res=ProtoMgr.decode(com.road.ddt.proto.guild.GuildShopMsg,pkg);
		self.freshTime=parseInt(res.freshTime);
		self.freshCount=int(self.maxFreshCount)-res.freshCount;
		self.freeFreshCount=res.freeFreshCount;
		this.displayGuildShopList=[];
		var item,specialShopVO,itemVO,guildShopItemData;
		for(var i=0;i < res.items.length;i++){
			item=res.items[i];
			specialShopVO=SpecialShopModel.getItemDataById(item.shopId);
			itemVO=ItemModel.getItemConfigData(specialShopVO.ItemId);
			guildShopItemData=new GuildShopItemData();
			guildShopItemData.shopId=item.shopId;
			guildShopItemData.index=item.index;
			guildShopItemData.itemName=LanguageMgr.Ins.GetLan(itemVO.Name);
			guildShopItemData.itemIcon="assets/textrue/itemicon/"+itemVO.Icon+".png";
			guildShopItemData.skillId=((itemVO.Type==3)? itemVO.Param1 :0);
			guildShopItemData.desc=itemVO.Desc;
			guildShopItemData.count=specialShopVO.ItemCount;
			guildShopItemData.price=specialShopVO.Price;
			guildShopItemData.isSoldOut=item.isBuy;
			this.displayGuildShopList.push(guildShopItemData);
		}
		this.displayGuildShopList.sort(function(a,b){
			return a.index-b.index;
		});
		self.isShowRedPoint=true;
		EventMgr.ins.event("GUILD_SHOW_RED_POINT",1);
		EventMgr.ins.event("change_guild_point",1);
		self.isGettingData=false;
		self.isRefresh=true;
		self.startTimer();
		EventMgr.ins.event("UPDATE_GUILDSHOP_DATA");
	}

	/**
	*向服务器请求公会商店操作
	*1、请求商店信息，2、购买物品,index为购买道具的坐标 3、刷新商店请求
	*/
	__proto.sendGuildShopDataOp=function(type,index){
		(index===void 0)&& (index=-1);
		SocketManager.Instance.out.sendGuildShopOp(type,index);
	}

	/**
	*刷新公会商店
	*/
	__proto.sendRefresh=function(){
		var self=this;
		if(self.freshCount <=0){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300139"));
			return;
		}
		this.sendGuildShopDataOp(3);
	}

	/**
	*购买商品请求
	*/
	__proto.sendBuyOp=function(index){
		this.sendGuildShopDataOp(2,index);
	}

	__proto.startTimer=function(){
		Laya.timer.clearAll(this);
		Laya.timer.loop(1000,this,this.refreshTimer);
	}

	__proto.refreshTimer=function(){
		if(!this.isGettingData && this.refreshTime <=0){
			this.isGettingData=true;
			this.sendGuildShopDataOp(1);
		}
	}

	__proto.getFreeReFreshTimes=function(){
		if(PlayerInfo.instance.vipLv>0){
			var privilegeVO=PrivilegeModel.getItemDataByVipTypes(2+"_"+PlayerInfo.instance.vipLv+"_"+12);
			return privilegeVO.Param1;
		}
		return 0;
	}

	/**刷新消耗类型**/
	__getset(0,__proto,'refreshType',function(){return this._refreshType;});
	__getset(0,__proto,'IsRefresh',function(){
		return this.isRefresh;
	});

	__getset(0,__proto,'IsFreeRefresh',function(){
		this.freeFreshTimes=this.getFreeReFreshTimes();
		this.isFreeRefresh=this.freeFreshTimes > this.freeFreshCount ? true :false;
		return this.isFreeRefresh;
	});

	__getset(0,__proto,'FreshCount',function(){
		return this.freshCount;
	});

	__getset(0,__proto,'getDisplayGuildShopList',function(){
		return this.displayGuildShopList;
	});

	__getset(0,__proto,'MaxFreshCount',function(){
		return this.maxFreshCount;
	});

	/**
	*获取公会商店刷新时间
	*@return
	*/
	__getset(0,__proto,'refreshTime',function(){
		var synTime=TimeManager.Instance.synTime;
		return (this.freshTime-synTime)/1000;
	});

	__getset(0,__proto,'getRefreshConsumteCount',function(){
		return this.refreshConsumteCount;
	});

	__getset(1,GuildShopMgr,'ins',function(){return GuildShopMgr._ins;});
	__static(GuildShopMgr,
	['_ins',function(){return this._ins=new GuildShopMgr();}
	]);
	return GuildShopMgr;
})()


//class modules.hall.consts.MainActivityType
var MainActivityType=(function(){
	function MainActivityType(){}
	__class(MainActivityType,'modules.hall.consts.MainActivityType');
	MainActivityType.ACTIVITY="btn_activity";
	MainActivityType.LOGIN_ACTIVITY="btn_login_activity";
	MainActivityType.SHARE_GTFT="btn_shareGift";
	MainActivityType.BTN_MOREGAME="btn_moreGame";
	MainActivityType.BTN_MYSTERYSHOP="btn_mysteryshop";
	MainActivityType.SHARE_INVITE="btn_shareInvite";
	MainActivityType.BTN_SEVENDAYTARGET="btn_qirimubiao";
	MainActivityType.REWAN_PLAY="btn_rewan";
	MainActivityType.FIRST_RECHARGE="btn_recharge";
	MainActivityType.LUCKY_WHEEL="btn_treasure";
	return MainActivityType;
})()


//class modules.hall.control.LevelBoxControl
var LevelBoxControl=(function(){
	function LevelBoxControl($levelBoxBtn){
		this._levelBoxBtn=null;
		// private var _timerText:Label;
		this._pointImg=null;
		var self=this;
		self._levelBoxBtn=$levelBoxBtn;
		self._pointImg=self._levelBoxBtn.getChildByName("levelBoxTipsPoint");
		self.init();
	}

	__class(LevelBoxControl,'modules.hall.control.LevelBoxControl');
	var __proto=LevelBoxControl.prototype;
	// private var _timerNum:int;
	__proto.init=function(){
		var self=this;
		self._levelBoxBtn.visible=LevelBoxMgr.ins.isOpenActivity;
		self._pointImg.visible=(LevelBoxMgr.ins.canBuyNum > 0);
		self.addEvent();
	}

	// }
	__proto.removeEvent=function(){
		var self=this;
		EventMgr.ins.off("level_box_update",self,self.onLevelBoxUpdate);
	}

	__proto.addEvent=function(){
		var self=this;
		self._levelBoxBtn.clickHandler=new Handler(self,self.onOpenLevelBox,null,false);
		EventMgr.ins.on("level_box_update",self,self.onLevelBoxUpdate);
	}

	__proto.onLevelBoxUpdate=function(){
		var self=this;
		self._pointImg.visible=(LevelBoxMgr.ins.canBuyNum > 0);
		self._levelBoxBtn.visible=LevelBoxMgr.ins.isOpenActivity;
	}

	__proto.onOpenLevelBox=function(){
		UIMgr.ins.openView("LevelBoxWindow");
	}

	__proto.dispose=function(){
		var self=this;
		self.removeEvent();
		self._levelBoxBtn=null;
	}

	return LevelBoxControl;
})()


//class modules.hall.control.MainBoxItemControl
var MainBoxItemControl=(function(){
	function MainBoxItemControl($boxIcon,$timeIcon,$boxHBg,$boxLock,$boxLBg,$moneyIcon,$noBoxIcon,$lockTimesBox,$needMoneyBox,$needTimes,$nameTxtBox2,$noBoxItem,$itemEffectBox){
		this._boxIcon=null;
		this._timeIcon=null;
		this._boxHBg=null;
		this._boxLock=null;
		this._boxLBg=null;
		this._moneyIcon=null;
		this._noBoxIcon=null;
		this._lockTimesBox=null;
		this._needMoneyBox=null;
		this._needTimes=null;
		this._nameTxtBox2=null;
		this._noBoxItem=null;
		this._vo=null;
		this._lastCreatTime=NaN;
		this._itemEffectBox=null;
		this._boxAni=null;
		this._timeAni=null;
		this._isStopTimer=false;
		var self=this;
		self._boxIcon=$boxIcon;
		self._timeIcon=$timeIcon;
		self._boxHBg=$boxHBg;
		self._boxLock=$boxLock;
		self._boxLBg=$boxLBg;
		self._moneyIcon=$moneyIcon;
		self._noBoxIcon=$noBoxIcon;
		self._lockTimesBox=$lockTimesBox;
		self._needMoneyBox=$needMoneyBox;
		self._needTimes=$needTimes;
		self._nameTxtBox2=$nameTxtBox2;
		self._noBoxItem=$noBoxItem;
		self._itemEffectBox=$itemEffectBox;
		self.addEvent();
	}

	__class(MainBoxItemControl,'modules.hall.control.MainBoxItemControl');
	var __proto=MainBoxItemControl.prototype;
	__proto.clreaView=function(){
		var self=this;
		self.clearBoxIconTween();
		self._boxIcon.visible=false;
		self._timeIcon.visible=false;
		self._boxHBg.visible=false;
		self._boxLock.visible=false;
		self._boxLBg.visible=false;
		self._moneyIcon.visible=false;
		self._noBoxIcon.visible=false;
		self._lockTimesBox.visible=false;
		self._needMoneyBox.visible=false;
		self._needTimes.visible=false;
		self._nameTxtBox2.visible=false;
		self._noBoxItem.visible=true;
		this.clearBoxAni();
	}

	__proto.setData=function(vo){
		var self=this;
		self._vo=vo;
		if(!vo){
			self._isStopTimer=true;
			this.clreaView()
			self._noBoxItem.text=LanguageMgr.Ins.GetLan("14300036");
			self._noBoxIcon.visible=true;
			return;
		}
		self._noBoxIcon.visible=false;
		self.clearBoxIconTween();
		var boxName=LanguageMgr.Ins.GetLan(vo.Name);
		self._nameTxtBox2.text=boxName;
		self._boxIcon.visible=true;
		self._noBoxItem.visible=false;
		self._boxIcon.skin="assets/textrue/itemicon/"+vo.Icon+".png";
		if(vo.isLocked){
			self._isStopTimer=true;
			self._boxHBg.visible=true;
			self._boxLock.visible=true;
			self._lockTimesBox.visible=true;
			self._nameTxtBox2.visible=true;
			var time=vo.Time;
			if(PlayerInfo.instance.isOpenMasterResourceCard){
				time=PrivilegeModel.getPrivilegePrice(time,3+"_"+5);
			}
			self._lockTimesBox.text=TimeManager.Instance.convertTimeToStr1(time);
			self.startBoxEffert();
		}
		else {
			self.clearBoxIconTween();
			var endTime=TimeManager.Instance.checkTimeEndNum(vo.EndTime);
			if(endTime > 0){
				self._isStopTimer=false;
				self._timeIcon.visible=true;
				self._boxLBg.visible=true;
				self._needTimes.visible=true;
				self._needMoneyBox.visible=true;
				self._moneyIcon.visible=true;
				self.addTimeAni();
				self.onTimeHandler();
			}
			else {
				self.timerOverShow();
			}
		}
	}

	__proto.addEvent=function(){
		var self=this;
		self._itemEffectBox.on("mouseup",self,self.openBoxClickHandler);
		self._noBoxIcon.on("mouseup",self,self.openBattleClickHandler);
		EventMgr.ins.on("UPDATE_ALL_IMAGE",this,this.onLableUpdate);
	}

	__proto.onLableUpdate=function(){
		var self=this;
		self._noBoxItem.text=LanguageMgr.Ins.GetLan("14300036");
		if(self._vo){
			var boxName=LanguageMgr.Ins.GetLan(self._vo.Name);
			self._nameTxtBox2.text=boxName;
		}
	}

	__proto.openBattleClickHandler=function(){
		RoomMgr.ins.createPVPRoom();
	}

	__proto.openBoxClickHandler=function(){
		var _$this=this;
		SocketManager.Instance.record.iconClickRecords(15);
		if(this._vo !=null){
			var index=this._vo.index;
			var view;
			view=UIMgr.ins.getView("TreasureBoxDetailWindow");
			if(view){
				UIMgr.ins.closeView("TreasureBoxDetailWindow");
				return;
			}
			HallMgr.ins.selectIndex=index;
			var endTime=TimeManager.Instance.checkTimeEndNum(this._vo.EndTime);
			if(endTime <=0 && !this._vo.isLocked){
				if(Browser.now()-this._lastCreatTime < 1000){
					TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("10001135"));
					HallMgr.ins.selectIndex=-1;
					return;
				}
				this._lastCreatTime=Browser.now();
				SocketManager.Instance.out.sendOpenBox(this._vo.Id);
				UIMgr.ins.closeView("TreasureBoxDetailWindow");
			}
			else{
				var window=UIMgr.ins.getView("TreasureBoxDetailWindow");
				if(window){
					UIMgr.ins.closeView("TreasureBoxDetailWindow");
				}
				else {
					UIMgr.ins.openView("TreasureBoxDetailWindow"
					,Handler.create(this,function(view){
						if(!view._destroyed)view.setData(_$this._vo);
					}));
				}
			}
		}
	}

	/**宝箱缓动 **/
	__proto.startBoxEffert=function(){
		var self=this;
		Tween.clearAll(self._boxIcon);
		Tween.to(self._boxIcon,{y:54,alpha:0.5},800,null,Handler.create(self,self.tweenCompHandler));
	}

	__proto.tweenCompHandler=function(){
		var self=this;
		Tween.to(self._boxIcon,{y:66,alpha:1},800,null,Handler.create(self,self.startBoxEffert));
	}

	/**清除宝箱缓动 **/
	__proto.clearBoxIconTween=function(){
		var self=this;
		Tween.clearAll(self._boxIcon);
		self._boxIcon.y=70;
		self._boxIcon.alpha=1;
	}

	__proto.onTimeHandler=function(){
		var self=this;
		if(self._isStopTimer)return;
		if(!self._vo||self._vo.isLocked)return;
		var endTime=TimeManager.Instance.checkTimeEndNum(self._vo.EndTime);
		if(endTime > 999){
			var needMoney=Math.ceil(endTime / HallMgr.ins.clearTimeNeedMoney);
			self._needMoneyBox.text=needMoney.toString();
			self._needTimes.text=TimeManager.Instance.convertTimeToStr1(endTime/1000);
			if(PlayerInfo.instance.pinkDiamond < needMoney){
				self._needMoneyBox.color="#ff0000";
				self._needMoneyBox.strokeColor="#5a2400";
			}
			else{
				self._needMoneyBox.color="#66ff00";
				self._needMoneyBox.strokeColor="#006d03";
			}
		}
		else{
			self._isStopTimer=true;
			if(PlayerInfoMgr.ins.isFirst)
				PlayerInfoMgr.ins.isFirst=false;
			self.timerOverShow();
		}
	}

	/**
	*定时器完成显示
	*/
	__proto.timerOverShow=function(){
		var self=this;
		self._timeIcon.visible=false;
		self._boxHBg.visible=false;
		self._boxLock.visible=false;
		self._boxLBg.visible=false;
		self._moneyIcon.visible=false;
		self._lockTimesBox.visible=false;
		self._needMoneyBox.visible=false;
		self._needTimes.visible=false;
		self._nameTxtBox2.visible=true;
		self._noBoxItem.visible=false;
		self.addBoxAni();
	}

	/**添加宝箱动画 **/
	__proto.addBoxAni=function(){
		var self=this;
		self._boxIcon.visible=false;
		self.clearBoxAni();
		var effectName=!self._vo ? "box1" :self._vo.OpenBoxAnim;
		self._boxAni=new AniSkeleton(effectName,"npc",0);
		self._boxAni.play("open",true);
		self._boxAni.scale(0.4,0.4);
		self._boxAni.x=36;
		self._boxAni.y=61;
		self._itemEffectBox.addChild(self._boxAni);
	}

	__proto.addTimeAni=function(){
		var self=this;
		if(!this._timeAni){
			self.clearTimeAni();
			self._timeAni=new AniSkeleton("ui3","ui");
			self._timeAni.play("idle",true);
			self._timeAni.x=8;
			self._timeAni.y=12;
			self._timeIcon.addChild(self._timeAni);
		}
	}

	__proto.removeEvent=function(){
		var self=this;
		self._itemEffectBox.off("mouseup",self,self.openBoxClickHandler);
		self._noBoxIcon.off("mouseup",self,self.openBattleClickHandler);
		EventMgr.ins.off("UPDATE_ALL_IMAGE",this,this.onLableUpdate);
		self.clearBoxIconTween();
	}

	__proto.clearBoxAni=function(){
		var self=this;
		if(self._boxAni){
			self._boxAni.parent && self._boxAni.parent.removeChild(self._boxAni);
			self._boxAni.destroy();
		}
		self._boxAni=null;
	}

	__proto.clearTimeAni=function(){
		var self=this;
		if(self._timeAni){
			self._timeAni.parent && self._timeAni.parent.removeChild(self._timeAni);
			self._timeAni.destroy();
		}
		self._timeAni=null;
	}

	__proto.destroy=function(){
		var self=this;
		self.clearBoxAni();
		self.clearTimeAni();
		self.removeEvent();
	}

	__getset(0,__proto,'vo',function(){
		return this._vo;
	});

	return MainBoxItemControl;
})()


/**
*公告控制类
*@author baohua.chen
*
*/
//class modules.hall.control.PlacardControl
var PlacardControl=(function(){
	function PlacardControl(){
		this.isSetuped=false;
		/**
		*走马灯数据缓存
		*/
		this.data={};
		this.currShowInfoId=null;
		this.waitList=[];
		PlacardControl._ins=this;}
	__class(PlacardControl,'modules.hall.control.PlacardControl');
	var __proto=PlacardControl.prototype;
	__proto.setup=function(){
		if(!this.isSetuped){
			this.isSetuped=true;
			SocketManager.Instance.out.getMarqueeConfig();
			SocketManager.Instance.on(0x00A2,this,this.placardInfoMsg);
			Laya.timer.loop(1000,this,this.checkOpenTime);
		}
		Laya.timer.clear(this,this.checkOpenTime);
		Laya.timer.loop(1000,this,this.checkOpenTime);
	}

	__proto.placardInfoMsg=function(pkg){
		var topicLampListMsg=ProtoMgr.decode(com.road.ddt.proto.TopicLampListMsg,pkg);
		var len=topicLampListMsg.topicLamps.length;
		var item;
		var info;
		var i=0;
		if(topicLampListMsg.op==0){
			modules.hall.control.PlacardControl.ins.data={};
			ActivityInfoMgr.ins.clearPlacard();
			for(i=0;i<len;i++){
				info=topicLampListMsg.topicLamps[i];
				item=new ActivityInfo;
				item.activityId=info.id;
				item.startTime=TimeManager.Instance.dateStrToServerDate(info.startDate).getTime();
				item.endTime=TimeManager.Instance.dateStrToServerDate(info.endDate).getTime();
				item.cycleCount=info.cycleIndex;
				item.placardType=info.type;
				item.titleStr=info.title;
				item.msg=info.content;
				item.sort=info.sort;
				item.playTime=info.intervalTime*1000;
				if(item.placardType==2){
					modules.hall.control.PlacardControl.ins.data[item.activityId]=item;
					}else if(item.placardType==1){
					ActivityInfoMgr.ins.updatePlacardInfo(item);
				}
			}
			}else if(topicLampListMsg.op==3){
			for(i=0;i<len;i++){
				info=topicLampListMsg.topicLamps[i];
				if(info.type==2){
					var len1=modules.hall.control.PlacardControl.ins.waitList.length;
					for(var j=0;j<len1;j+=1){
						if(modules.hall.control.PlacardControl.ins.waitList[j].activityId==info.id){
							modules.hall.control.PlacardControl.ins.waitList.splice(j,1);
							j-=1;
						}
					}
					if(info.id==modules.hall.control.PlacardControl.ins.currShowInfoId){
						modules.hall.control.PlacardControl.ins.currShowInfoId="";
						EventMgr.ins.event("DELETE_CURRENT_PLAY_MARQUEE");
					}
					delete modules.hall.control.PlacardControl.ins.data[info.id];
					}else if(info.type==1){
					ActivityInfoMgr.ins.deletePlacardInfo(info.id);
				}
			}
			}else if(topicLampListMsg.op==2){
			for(i=0;i<len;i++){
				info=topicLampListMsg.topicLamps[i];
				if(info.type==2){
					var len1=modules.hall.control.PlacardControl.ins.waitList.length;
					for(var j=0;j<len1;j+=1){
						if(modules.hall.control.PlacardControl.ins.waitList[j].activityId==info.id){
							modules.hall.control.PlacardControl.ins.waitList.splice(j,1);
							j-=1;
						}
					}
					if(info.id==modules.hall.control.PlacardControl.ins.currShowInfoId){
						modules.hall.control.PlacardControl.ins.currShowInfoId="";
						EventMgr.ins.event("DELETE_CURRENT_PLAY_MARQUEE");
					}
					delete modules.hall.control.PlacardControl.ins.data[info.id];
					}else if(info.type==1){
					ActivityInfoMgr.ins.deletePlacardInfo(info.id);
				}
			}
			for(i=0;i<len;i++){
				info=topicLampListMsg.topicLamps[i];
				item=new ActivityInfo;
				item.activityId=info.id;
				item.startTime=TimeManager.Instance.dateStrToServerDate(info.startDate).getTime();
				item.endTime=TimeManager.Instance.dateStrToServerDate(info.endDate).getTime();
				item.cycleCount=info.cycleIndex;
				item.placardType=info.type;
				item.titleStr=info.title;
				item.msg=info.content;
				item.playTime=info.intervalTime*1000;
				item.sort=info.sort;
				if(item.placardType==2){
					modules.hall.control.PlacardControl.ins.data[item.activityId]=item;
					}else if(item.placardType==1){
					ActivityInfoMgr.ins.updatePlacardInfo(item);
				}
			}
			}else{
			for(i=0;i<len;i++){
				info=topicLampListMsg.topicLamps[i];
				item=new ActivityInfo;
				item.activityId=info.id;
				item.startTime=TimeManager.Instance.dateStrToServerDate(info.startDate).getTime();
				item.endTime=TimeManager.Instance.dateStrToServerDate(info.endDate).getTime();
				item.cycleCount=info.cycleIndex;
				item.placardType=info.type;
				item.titleStr=info.title;
				item.msg=info.content;
				item.playTime=info.intervalTime*1000;
				item.sort=info.sort;
				if(item.placardType==2){
					modules.hall.control.PlacardControl.ins.data[item.activityId]=item;
					}else if(item.placardType==1){
					ActivityInfoMgr.ins.updatePlacardInfo(item);
				}
			}
		}
	}

	__proto.checkOpenTime=function(){
		var nowTimes=TimeManager.Instance.NowTime();
		var info;
		for(var $each_info in PlacardControl.ins.data){
			info=modules.hall.control.PlacardControl.ins.data[$each_info];
			if(info.activityId !=modules.hall.control.PlacardControl.ins.currShowInfoId){
				if(info.startTime<nowTimes&&info.endTime>nowTimes){
					if(info.lastPlayTime+info.playTime<=nowTimes&&!this.isHasWait(info)){
						info.lastPlayTime=nowTimes;
						modules.hall.control.PlacardControl.ins.waitList.push(info);
						EventMgr.ins.event("recv_marquee_scroll");
					}
				}
			}
		}
	}

	__proto.isHasWait=function(vo){
		var len=modules.hall.control.PlacardControl.ins.waitList.length;
		for(var i=0;i<len;i+=1){
			if(modules.hall.control.PlacardControl.ins.waitList[i].activityId==vo.activityId){
				return true;
			}
		}
		return false;
	}

	__proto.clearTimes=function(){
		Laya.timer.clear(this,this.checkOpenTime);
	}

	__getset(1,PlacardControl,'ins',function(){return PlacardControl._ins=PlacardControl._ins|| new PlacardControl();});
	PlacardControl._ins=null;
	return PlacardControl;
})()


/**
*场景控制器
*@author baohua.chen
*
*/
//class modules.hall.HallMgr
var HallMgr=(function(){
	function HallMgr(){
		/**推荐模块显示开关 */
		this._isOpenRecommender=true;
		/**当前图标图片为game.icon地址对应图片 */
		this._gameIcon="assets/textrue/language/"+LanguageMgr.Ins.country+"/hall/btn_moreGame.png";
		/**当前点击的宝箱**/
		this.selectIndex=0;
		// public var lockedCount:int;
		this._clearBoxTimeNeedMoney=0;
		HallMgr._ins=this;
	}

	__class(HallMgr,'modules.hall.HallMgr');
	var __proto=HallMgr.prototype;
	__proto.setup=function(){
		if(Browser.window.wxutil){
			this.onReady.bind(this);
			Browser.window.wxutil.createRecommender(this.onReady,this.onChange);
		}
	}

	/**
	*设置模块的onReady回调
	*@param isOpen 显示开关
	*@param game 首个显示的游戏（QQ游戏小程序） game.icon为远程url，游戏方需远程加载该url的图片，然后显示在图标上
	*/
	__proto.onReady=function(isOpen,game){
		console.log('HallMgr.onReady-----------isOpen:',isOpen,game);
		modules.hall.HallMgr.ins.isOpenRecommender=isOpen;
		if (game){
			modules.hall.HallMgr._ins.gameIcon=game.icon;
			console.log('HallMgr.onReady-----------game.icon:',game.icon);
		}
		EventMgr.ins.event("UPDATE_QUESTIONVIEW");
	}

	/**
	*设置图片切换的回调
	*参数为当前要切换显示的游戏，在这里更好图标为game.icon对应的图片
	**/
	__proto.onChange=function(game){
		console.log('game change to',game);
		if (game)
			modules.hall.HallMgr._ins.gameIcon=game.icon;
		EventMgr.ins.event("UPDATE_QUESTIONVIEW");
	}

	__proto.show=function(battleType){
		(battleType===void 0)&& (battleType=0);
		SceneMgr.ins.runWithSceneByType(SceneType.HALL_MAIN_SCENE,[battleType]);
	}

	/**
	*检测活动是否开放
	*@param btnName
	*@return
	*
	*/
	__proto.checkBtnShow=function(btnName){
		var bool=false;
		switch (btnName){
			case "btn_recharge":{
					bool=LoginControl.instance.isAndroid && PlayerInfo.instance.firstCharge !=2;
					break ;
				}
			case "btn_mysteryshop":{
					bool=true;
					break ;
				}
			case "btn_activity":{
					bool=true;
					break ;
				}
			case "btn_treasure":{
					bool=ActivityInfoMgr.ins.model.luckyWheelInfo.isOpen;
					break ;
				}
			case "btn_login_activity":{
					bool=false;
					break ;
				}
			case "btn_shareGift":{
					bool=true
					break ;
				}
			case "btn_moreGame":{
					bool=this.isOpenRecommender;
					break ;
				}
			case "btn_shareInvite":{
					bool=false;
					break ;
				}
			case "btn_qirimubiao":{
					bool=SevenDayTargetMgr.ins.checkModeOpen();
					break ;
				}
			case "btn_rewan":{
					bool=window.isCloseMoreGame && (window.isCloseMoreGame+'').toLowerCase()=='true';;
					break ;
				}
			}
		return bool;
	}

	/**
	*检测活动是否有红点
	*@param btnName
	*@return
	*
	*/
	__proto.checkBtnShowRed=function(btnName){
		switch (btnName){
			case "btn_recharge":{
					return (PlayerInfo.instance.firstCharge==1 || RedDotMgr.ins.getHallDot(btnName));
					break ;
				}
			case "btn_activity":{
					return RedDotMgr.ins.checkActivity();
					break ;
				}
			case "btn_login_activity":{
					return LoginActivityMgr.ins.loginActivityAvailableCount[LoginActivityMgr.ins.curLoginActivityId] !=0;
					break ;
				}
			case "btn_shareGift":{
					return false
					break ;
				}
			case "btn_moreGame":{
					return false;
					break ;
				}
			case "btn_mysteryshop":{
					return MysteryShopMgr.ins.isRefresh;
					break ;
				}
			case "btn_shareInvite":{
					return false;
					break ;
				}
			case "btn_qirimubiao":{
					return SevenDayTargetMgr.ins.checkIconRedPoint();
					break ;
				}
			case "btn_rewan":{
					return false;
					break ;
				}
			}
		return false;
	}

	/**
	*通过位置获取和类型数据
	*@param mainType ItemConst.MAINTYPE
	*@param subType ItemConst.SUBTYPE
	*@param index
	*@return
	*
	*/
	__proto.getBoxInfoByTypeAndIndex=function(mainType,subType,index){
		var vo;
		var arr=PlayerInfoMgr.ins.itemsDic.values;
		var len=arr.length;
		for (var i=0;i < len;i+=1){
			vo=modules.hall.HallMgr.ins.getNewItemVO(arr[i]);
			if (vo.index==index && vo.Type==mainType && vo.SubType==subType){
				return vo;
			}
		}
		return null;
	}

	__proto.getNewItemVO=function(info){
		var vo=ItemModel.getItemConfigData(info.itemID);
		var temp=new ItemVO();
		temp.Id=info.id;
		temp.Type=vo.Type;
		temp.SubType=vo.SubType;
		temp.ItemID=info.itemID;
		temp.Icon=vo.Icon;
		temp.Time=vo.Time;
		temp.Level=vo.Level;
		temp.Name=vo.Name;
		temp.EndTime=parseInt(info.expireTime);
		temp.isLocked=info.isLocked;
		temp.Param1=vo.Param1;
		temp.Param2=vo.Param2;
		temp.Desc=vo.Desc;
		temp.index=info.index;
		temp.OpenBoxAnim=vo.OpenBoxAnim;
		temp.isShared=info.isShared;
		return temp;
	}

	__proto.loadingModeChooseRes=function(cellBack){
		var res=[{url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/modechoose.atlas",type:"atlas"}];
		Laya.loader.load(res,cellBack)
	}

	__getset(0,__proto,'gameIcon',function(){return this._gameIcon},function(value){
		this._gameIcon=value;
	});

	__getset(0,__proto,'hallScene',function(){
		if ((SceneMgr.ins.curScene instanceof modules.hall.scene.HallMainScene )){
			return SceneMgr.ins.curScene;
		}
		return null;
	});

	__getset(0,__proto,'isOpenRecommender',function(){
		return this._isOpenRecommender
		},function(value){
		this._isOpenRecommender=value;
	});

	/**
	*获取宝箱当前数量
	*@return
	*
	*/
	__getset(0,__proto,'boxCount',function(){
		var count=0;
		var item;
		var vo;
		var arr=PlayerInfoMgr.ins.itemsDic.values;
		var len=arr.length;
		for (var i=0;i < len;i+=1){
			item=arr[i];
			vo=ItemModel.getItemConfigData(item.itemID);
			if (vo.Type==4 && vo.SubType==3){
				count+=1;
			}
		}
		return count;
	});

	/**
	*获得清除宝箱CD需要的钱
	*@return
	*
	*/
	__getset(0,__proto,'clearTimeNeedMoney',function(){
		if (this._clearBoxTimeNeedMoney==0){
			this._clearBoxTimeNeedMoney=parseInt(ConfigModel.getConfigData(1093).ConfigValue)*1000;
		}
		return this._clearBoxTimeNeedMoney;
	});

	__getset(1,HallMgr,'ins',function(){
		return HallMgr._ins=HallMgr._ins|| new HallMgr();
	});

	HallMgr.OPEN_FOUR_LEVEL=10;
	HallMgr.OPEN_GUILD_LEVEL=6;
	HallMgr.OPEN_TASK_LEVEL=4;
	HallMgr._ins=null;
	return HallMgr;
})()


//class modules.IDIP.IdipManager
var IdipManager=(function(){
	function IdipManager(){
		IdipManager._instance=this;
	}

	__class(IdipManager,'modules.IDIP.IdipManager');
	var __proto=IdipManager.prototype;
	__proto.setup=function(){
		SocketManager.Instance.on(0x0068,this,this.onPunishTipListener);
		SocketManager.Instance.on(0x0069,this,this.onClearSpeakListener);
		SocketManager.Instance.on(0x006F,this,this.onBackToLoginListener);
	}

	/**tip 的内容 */
	__proto.onPunishTipListener=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.StringMsg,pkg);
		TipsManager.Instance().addSilentDialog({title:LanguageMgr.Ins.GetLan("9002294"),
			content:res.value});
	}

	/**被清除发言玩家的id */
	__proto.onClearSpeakListener=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.StringMsg,pkg)
		var playId=res.value;
		EventMgr.ins.event("ClearStatementList");
	}

	// EventMgr.ins.event(MgrEvent.CLEAR_STATEMENT_LIST);
	__proto.onBackToLoginListener=function(pkg){
		LoginControl.instance.showLoginView();
		Laya.timer.once(1,this,function(){
			Laya.loader.load("assets/atlas/common.atlas",Handler.create(this,function(){
				TipsManager.Instance().addSilentDialog({title:LanguageMgr.Ins.GetLan("9002294"),
					content:LanguageMgr.Ins.GetLan("9002295")})
			}),null,"atlas");
		});
	}

	__getset(1,IdipManager,'instance',function(){
		return IdipManager._instance=IdipManager._instance|| new IdipManager();
	});

	IdipManager._instance=null;
	return IdipManager;
})()


//class modules.invitepay.consts.InvitePayConst
var InvitePayConst=(function(){
	function InvitePayConst(){}
	__class(InvitePayConst,'modules.invitepay.consts.InvitePayConst');
	InvitePayConst.EVENT_UPDATE_ALL="InvitePayConst.EVENT_UPDATE_ALL";
	return InvitePayConst;
})()


//class modules.invitepay.data.InvitePayInfo
var InvitePayInfo=(function(){
	function InvitePayInfo(msg){
		this.id=null;
		this.shopType=0;
		this.shopId=0;
		// public var vaildTime :int;
		this.playerId=null;
		this.playerUrl=null;
		this.playerName=null;
		this.id=msg.id;
		this.shopType=msg.shopType;
		this.shopId=msg.shopId;
		this.playerId=msg.playerId;
		this.playerUrl=msg.playerUrl;
		this.playerName=msg.playerName;
	}

	__class(InvitePayInfo,'modules.invitepay.data.InvitePayInfo');
	return InvitePayInfo;
})()


//class modules.item.consts.ItemConst
var ItemConst=(function(){
	function ItemConst(){}
	__class(ItemConst,'modules.item.consts.ItemConst');
	ItemConst.isMainItem=function(vo,mainType){
		return vo.Type==mainType;
	}

	ItemConst.isSubItem=function(vo,mainType,subType){
		return vo.Type==mainType && vo.SubType==subType;
	}

	ItemConst.MAINTYPE_CURRENCY=1;
	ItemConst.MAINTYPE_FASHION=2;
	ItemConst.MAINTYPE_SKILL=3;
	ItemConst.MAINTYPE_CHEST=4;
	ItemConst.MAINTYPE_ITEM=5;
	ItemConst.SUBTYPE_CURRENCY_GOLD=1;
	ItemConst.SUBTYPE_CURRENCY_GEM=2;
	ItemConst.SUBTYPE_CURRENCY_EXP=3;
	ItemConst.SUBTYPE_CURRENCY_TROPHY=4;
	ItemConst.SUBTYPE_SKILL_BOMB=1;
	ItemConst.SUBTYPE_SKILL_SPELL=2;
	ItemConst.SUBTYPE_CHEST_FREE=1;
	ItemConst.SUBTYPE_CHEST_WINNING=2;
	ItemConst.SUBTYPE_CHEST_PVP=3;
	ItemConst.SUBTYPE_CHEST_SEASON=4;
	ItemConst.SUBTYPE_CHEST_ACTIVITY=5;
	ItemConst.SUBTYPE_FASHION_SUIT=1;
	ItemConst.GOLD=-10;
	ItemConst.GEM=-20;
	ItemConst.EXP=-30;
	ItemConst.TROPHY=-40;
	ItemConst.ACTIVITY=-50;
	ItemConst.PINKGEM=-60;
	return ItemConst;
})()


/**
*等级宝箱活动操作类型
*@author shuhao.li
*/
//class modules.levelBox.consts.LevelBoxOPType
var LevelBoxOPType=(function(){
	function LevelBoxOPType(){}
	__class(LevelBoxOPType,'modules.levelBox.consts.LevelBoxOPType');
	LevelBoxOPType.TYPE_BUY_BOX=1;
	LevelBoxOPType.TYPE_GET_USER_DATA=2;
	return LevelBoxOPType;
})()


/**
*等级宝箱用户数据
*@author shuhao.li
*/
//class modules.levelBox.datas.LevelBoxConditionUserData
var LevelBoxConditionUserData=(function(){
	function LevelBoxConditionUserData(){
		/**礼包ID **/
		this.packageId=null;
		/**条件ID（参考 GmActiveConditionType 类） **/
		this.conditionId=0;
		/**当前值1 **/
		this.value1=0;
		/**当前值2 **/
		this.value2=0;
		/**当前值3 **/
		this.value3=0;
		/**当前值4 **/
		this.value4=null;
		/**当前值5 **/
		this.value5=null;
	}

	__class(LevelBoxConditionUserData,'modules.levelBox.datas.LevelBoxConditionUserData');
	return LevelBoxConditionUserData;
})()


//class modules.levelBox.datas.LevelBoxData
var LevelBoxData=(function(){
	function LevelBoxData(){
		/**礼包ID **/
		this.packageId=null;
		/**折扣优惠 **/
		this.offNum=0;
		/**结束时间倒计时 **/
		this.endTimer=0;
		/**开启等级 **/
		this.openLevel=0;
		/**最大开启等级,0表示没有最大等级限制 **/
		this.maxOpenLevel=0;
		/**奖励物品[{id:物品ID,count:物品数量}] **/
		this.rewards=null;
		/**原价 **/
		this.originalPrice=0;
		/**排序 **/
		this.sort=0;
		/**领取次数 **/
		this.collectCount=0;
		/**是否达成条件 **/
		this.isFinish=false;
		/**是否可领取 **/
		this.canCollect=false;
		/**领取条件信息数组[LevelBoxConditionUserData.as...] **/
		this.conditions=null;
	}

	__class(LevelBoxData,'modules.levelBox.datas.LevelBoxData');
	var __proto=LevelBoxData.prototype;
	/**
	*是否开启
	*@return
	*/
	__getset(0,__proto,'isOpen',function(){
		return this.openLevel <=PlayerInfo.instance.grade;
	});

	/**
	*获取倒计时CD时间
	*@return
	*/
	__getset(0,__proto,'cdTimer',function(){
		var synTime=TimeManager.Instance.synTime;
		return (this.endTimer-synTime)/1000;
	});

	return LevelBoxData;
})()


/**
*等级宝箱
*@author shuhao.li
*/
//class modules.levelBox.LevelBoxMgr
var LevelBoxMgr=(function(){
	function LevelBoxMgr(){
		this._levelBoxActivityId=null;
		this._levelBoxDataList=[];
		this._activityTimer=0;
		//this.endActivityTimer > 0;
		this._isOpenActivity=false;
	}

	__class(LevelBoxMgr,'modules.levelBox.LevelBoxMgr');
	var __proto=LevelBoxMgr.prototype;
	__proto.setup=function(){
		var self=this;
		EventMgr.ins.on("gm_active_data_update",self,self.onConvertData);
		EventMgr.ins.on("gm_active_user_data_update_by_lvbox",self,self.onUpdateLevelBoxUserData);
		EventMgr.ins.on("gm_active_op_result_by_lvbox",self,self.onUpdateLevelBoxOPResult);
	}

	/**
	*转换数据
	*/
	__proto.onConvertData=function(){
		var self=this;
		var gmActiveData=GmActiveDataMgr.ins.getActivityDataByType(2);
		if(!gmActiveData || !gmActiveData.isOpen){
			self._isOpenActivity=false;
			self._levelBoxDataList=[];
			EventMgr.ins.event("level_box_update");
			return;
		}
		self._isOpenActivity=gmActiveData.isOpen;
		self._activityTimer=gmActiveData.stopTime;
		var isGetUserData=(self._levelBoxDataList && self._levelBoxDataList.length > 0);
		self._levelBoxDataList=[];
		var packages=gmActiveData.packages,gmActivePackageData,levelBoxData;
		var items,conditions,itemData,conditionData;
		var conditionUserData;
		for (var i=0,len=packages.length;i < len;i++){
			gmActivePackageData=packages[i];
			levelBoxData=new LevelBoxData();
			levelBoxData.packageId=gmActivePackageData.packageId;
			levelBoxData.sort=gmActivePackageData.sort;
			levelBoxData.rewards=[];
			items=gmActivePackageData.items;
			for (var j=0,len_1=items.length;j < len_1;j++){
				itemData=items[j];
				levelBoxData.rewards.push({id:itemData.itemId,count:itemData.itemCount });
			}
			levelBoxData.conditions=[];
			conditions=gmActivePackageData.conditions;
			len_1=conditions.length;
			for (j=0;j < len_1;j++){
				conditionData=conditions[j];
				conditionUserData=new LevelBoxConditionUserData();
				conditionUserData.packageId=conditionData.packageId;
				conditionUserData.conditionId=conditionData.conditionId;
				switch(conditionData.conditionId){
					case 1:
						levelBoxData.openLevel=conditionData.target1;
						levelBoxData.maxOpenLevel=conditionData.target2;
						break ;
					case 2:
						break ;
					case 3:
						levelBoxData.originalPrice=conditionData.target2;
						levelBoxData.offNum=conditionData.target3;
						break ;
					}
				levelBoxData.conditions.push(conditionUserData);
			}
			levelBoxData.endTimer=0;
			self._levelBoxDataList.push(levelBoxData);
		}
		self._levelBoxDataList.sort(function(a,b){
			if(a.collectCount==b.collectCount){
				return a.sort-b.sort;
			}
			else{
				return a.collectCount-b.collectCount;
			}
		});
		if(self._levelBoxDataList.length > 0 && isGetUserData){
			UIMgr.ins.closeView("LevelBoxWindow");
			UIMgr.ins.closeView("LevelBoxRewardWindow");
			self.sendGetUserData();
		}
	}

	/**
	*等级宝箱用户数据更新
	*@param res
	*/
	__proto.onUpdateLevelBoxUserData=function(res){
		var self=this;
		self._levelBoxActivityId=res.activeId;
		if(!self._levelBoxDataList || self._levelBoxDataList.length==0){
			self.onConvertData();
		};
		var userPackages=res.userPackages,packageUserMsg,levelBoxData;
		for (var i=0,len=userPackages.length;i < len;i++){
			packageUserMsg=userPackages[i];
			levelBoxData=self.getLevelBoxDataByPackageId(packageUserMsg.packageId);
			if(!levelBoxData)continue ;
			levelBoxData.collectCount=packageUserMsg.collectCount;
			levelBoxData.isFinish=packageUserMsg.isFinish;
			levelBoxData.canCollect=packageUserMsg.canCollect;
			var conditionUserData,conditionUserMsg;
			for (var j=0,len_1=packageUserMsg.conditions.length;j < len_1;j++){
				conditionUserMsg=packageUserMsg.conditions[j];
				conditionUserData=self.geLevelBoxConditionUserDataByConditionId(levelBoxData,conditionUserMsg.conditionId);
				conditionUserData.value1=conditionUserMsg.value1;
				conditionUserData.value2=conditionUserMsg.value2;
				conditionUserData.value3=conditionUserMsg.value3;
				conditionUserData.value4=conditionUserMsg.value4;
				conditionUserData.value5=conditionUserMsg.value5;
				if(conditionUserData.conditionId==2){
					levelBoxData.endTimer=parseInt(conditionUserMsg.value5);
				}
			}
		}
		self._levelBoxDataList.sort(function(a,b){
			if(a.collectCount==b.collectCount){
				return a.sort-b.sort;
			}
			else{
				return a.collectCount-b.collectCount;
			}
		});
		EventMgr.ins.event("level_box_update");
	}

	/**
	*等级宝箱操作结果
	*@param res
	*/
	__proto.onUpdateLevelBoxOPResult=function(res){
		switch(res.opType){
			case 1:
				if(res.result){
					UIMgr.ins.openView("LevelBoxRewardWindow",Handler.create(this,function(view){
						view.setItems(res.param3);
					}));
				}
				break ;
			}
	}

	__proto.getLevelBoxDataByPackageId=function($id){
		var self=this;
		for (var i=0,len=self._levelBoxDataList.length;i < len;i++){
			if(self._levelBoxDataList[i].packageId==$id)return self._levelBoxDataList[i];
		}
		return null;
	}

	__proto.geLevelBoxConditionUserDataByConditionId=function($levelBoxData,$id){
		var self=this;
		for (var i=0,len=$levelBoxData.conditions.length;i < len;i++){
			if($levelBoxData.conditions[i].conditionId==$id)return $levelBoxData.conditions[i];
		}
		return null;
	}

	/**
	*购买等级宝箱
	*@param $packageId
	*/
	__proto.sendBuyLevelBox=function($packageId){
		SocketManager.Instance.out.sendGmActiveOpMsg(
		2
		,$packageId
		,1
		,1);
	}

	/**
	*请求用户数据
	*/
	__proto.sendGetUserData=function(){
		SocketManager.Instance.out.sendGmActiveOpMsg(
		2
		,null
		,2);
	}

	/**活动ID **/
	__getset(0,__proto,'levelBoxActivityId',function(){return this._levelBoxActivityId;});
	/**
	*等级宝箱数据列表
	*@return
	*/
	__getset(0,__proto,'levelBoxDataList',function(){return this._levelBoxDataList;});
	/**
	*获取活动结束时间
	*@return
	*/
	__getset(0,__proto,'endActivityTimer',function(){
		var synTime=TimeManager.Instance.synTime;
		return (this._activityTimer-synTime)/1000;
	});

	/**
	*是否开启了活动
	*@return
	*/
	__getset(0,__proto,'isOpenActivity',function(){
		return this._isOpenActivity;
	});

	/**
	*获取可以购买的数量
	*@return
	*/
	__getset(0,__proto,'canBuyNum',function(){
		var self=this;
		if(!self._levelBoxDataList || self._levelBoxDataList.length==0){
			return 0;
		};
		var len=self._levelBoxDataList.length;
		if(len==0)return 0;
		var num=0,levelBoxData;
		for (var i=0;i < len;i++){
			levelBoxData=self._levelBoxDataList[i];
			if(levelBoxData.isOpen && levelBoxData.collectCount==0)num++;
		}
		return num;
	});

	__getset(1,LevelBoxMgr,'ins',function(){return LevelBoxMgr._ins;});
	__static(LevelBoxMgr,
	['_ins',function(){return this._ins=new LevelBoxMgr();}
	]);
	return LevelBoxMgr;
})()


//class modules.loading.LoginControl
var LoginControl=(function(){
	function LoginControl(){
		this._httpRequest=null;
		//http连接类
		this._gameHttpRequest=null;
		//游戏公告http连接类
		this._isLogin=false;
		//是否外网登录
		this._md5=null;
		this._lang=0;
		/**
		*1：新用户 0：老用户
		*/
		this.isNewUser=-1;
		/**是否第一次进入游戏 **/
		this.isFirstEnterGame=true;
		this.nickName=null;
		LoginControl._instance=this;
	}

	__class(LoginControl,'modules.loading.LoginControl');
	var __proto=LoginControl.prototype;
	/**
	*显示登录界面
	*/
	__proto.showLoginView=function($userName){
		($userName===void 0)&& ($userName="");
		SceneMgr.ins.setup();
		JSMgr.instance.setUp();
		if(window.clearRotateImg !=null)window.clearRotateImg();
		if(UrlParam.PARAMS["PLID"]=="wx"){
			this._md5=md5;
			this._isLogin=true;
			PlayerInfo.instance.openid=Browser.window.wxutil.openId();
			PlayerInfo.instance.accesstoken=Browser.window.wxutil.accesstoken();
			PlayerInfo.instance.platid="wx";
			this.loginWxInfo();
		}
		else if(UrlParam.PARAMS["PLID"]=="fb"){
			this._isLogin=true;
			this.loginFBData();
		}
		else{
			this._isLogin=false;
			PlayerInfo.instance.platid="laya";
			SceneMgr.ins.runWithSceneByType(SceneType.LOGIN_SCENE,[$userName]);
		}
	}

	__proto.loginFBData=function(){
		var _$this=this;
		importJS("js/md5/md5.min.js",function(){
			_$this._md5=md5;
			if(Browser.window.FbResult.result==0){
				var userinfo=Browser.window.FbResult.data;
				PlayerInfo.instance.accesstoken="";
				PlayerInfo.instance.qqNickName=userinfo.getName();
				PlayerInfo.instance.openid=userinfo.getID();
				PlayerInfo.instance.platid="fb";
				PlayerInfo.instance.avatar=userinfo.getPhoto();
				modules.loading.LoginControl.instance.checkAccount();
			}
			else{
				TipsManager.Instance().showTips("loginFBData 请求报错： FbResult.result:"+Browser.window.FbResult.result);
			}
		});
	}

	__proto.loginWxInfo=function(){
		Laya.timer.clear(this,this.loginWxInfo);
		var userInfo=Browser.window.wxutil.userInfos();
		if(userInfo!=null){
			Laya.timer.clear(this,this.loginWxInfo);
			PlayerInfo.instance.qqNickName=userInfo.nickName.length > 14 ? userInfo.nickName.substring(0,14)+".." :userInfo.nickName;
			PlayerInfo.instance.sex=userInfo.gender;
			PlayerInfo.instance.avatar=userInfo.avatarUrl;
			PlayerInfo.instance.platid="wx";
			this.inviteCheck();
			modules.loading.LoginControl.instance.checkAccount();
			}else{
			Laya.timer.once(100,this,this.loginWxInfo);
		}
	}

	/**
	*显示创建角色界面
	*/
	__proto.showCreateRoleView=function(){
		SceneMgr.ins.runWithSceneByType(SceneType.CREATE_ROLE_SCENE);
	}

	/**
	*进入游戏大厅
	*/
	__proto.enterGame=function($nickName){
		PlayerInfo.instance.nickName=$nickName;
		HallMgr.ins.show();
	}

	/**
	*检查是新用户或者老用户
	*/
	__proto.checkAccount=function(){
		var url="";
		if(PlayerInfo.instance.platid=="wx"||PlayerInfo.instance.platid=="fb"){
			url=ConfigFile.WEB_HTTP+ConfigFile.HTTP_HOST
			+"/"+"checkaccount?openid="+PlayerInfo.instance.openid+"&site="+PlayerInfo.instance.platid+this.PlatId;
			}else{
			url=ConfigFile.WEB_HTTP+ConfigFile.HTTP_HOST+":"+ConfigFile.HTTP_PORT
			+"/"+"checkaccount?openid="+PlayerInfo.instance.openid+"&site="+PlayerInfo.instance.platid+this.PlatId;
		}
		this._httpRequest=new HttpRequest();
		this._httpRequest.once("complete",this,this.onCheckAccountComplete);
		this._httpRequest.once("error",this,this.onHttpRequestError);
		this._httpRequest.send(url,null,'post','text');
	}

	__proto.onCheckAccountComplete=function(e){
		var str=e;
		var obj=str ? JSON.parse(str):"";
		this.isNewUser=obj.code;
		this.isFirstEnterGame=true;
		if(this.isNewUser==0){
			PlayerInfo.instance.sex=obj.sex;
			modules.loading.LoginControl.instance.login(PlayerInfo.instance.qqNickName);
		}
		else if(this.isNewUser==1){
			if(UrlParam.PARAMS["PLID"]=="fb"){
				var t=Browser.now();
				PlayerInfo.instance.sex=(t%2);
			}
			modules.loading.LoginControl.instance.login(PlayerInfo.instance.qqNickName);
		}
		else{
			TipsManager.Instance().showTips("checkaccount请求报错：code:"+obj.code);
		}
	}

	/**
	*登录
	*/
	__proto.login=function($nickName){
		($nickName===void 0)&& ($nickName="");
		var url="";
		modules.loading.LoginControl.instance.isNewUser=0;
		if(this._isLogin){
			var timeTemp=new Date().getTime();
			var nickName=Base64Tool.encodeStr2($nickName);
			var key=this._md5(PlayerInfo.instance.openid+nickName+PlayerInfo.instance.sex+timeTemp+
			PlayerInfo.instance.accesstoken+PlayerInfo.instance.platid+this.PlatId+this.lang+"z4EAXbY3dIZ3CpmX");
			var params=PlayerInfo.instance.openid+"|"+nickName+"|"+
			PlayerInfo.instance.sex+"|"+timeTemp+"|"+PlayerInfo.instance.accesstoken+"|"+key+"|"+ShareControl.ins.shareLinkParam.shareOpenId+"|"+ShareControl.ins.shareLinkParam.shareId+"|"+ShareControl.ins.shareLinkParam.shareSite;
			params=Base64Tool.encodeStr2(params+"|=");
			params=encodeURIComponent(params);
			if(PlayerInfo.instance.platid=="wx"||PlayerInfo.instance.platid=="fb"){
				url=ConfigFile.WEB_HTTP+ConfigFile.HTTP_HOST+"/"+ConfigFile.LOGIN+"?content="+params+"&site="+PlayerInfo.instance.platid+this.PlatId+"&lang="+this.lang;
				}else{
				url=ConfigFile.WEB_HTTP+ConfigFile.HTTP_HOST+":"+ConfigFile.HTTP_PORT
				+"/"+ConfigFile.LOGIN+"?content="+params+"&site="+PlayerInfo.instance.platid+this.PlatId+"&lang="+this.lang;
			}
		}
		else{
			var nickName1=Base64Tool.encodeStr2(PlayerInfo.instance.nickName);
			if(PlayerInfo.instance.platid !="laya"){
				url=ConfigFile.WEB_HTTP+ConfigFile.HTTP_HOST+"/"+"proxy"+"/"+ConfigFile.LOGIN
				+"?content="+nickName1+"%7C"+nickName1+"%7C"+"%7C"+(new Date().getTime())
				+"%7C"+"8fc659c6-0a76-46ad-9c8f-4adbcb325ba5"+"%7Casdfasdf"+"&site="+PlayerInfo.instance.platid+this.PlatId+"&lang="+this.lang+"&shareOpenId="+ShareControl.ins.shareLinkParam.shareOpenId+"&shareId="+ShareControl.ins.shareLinkParam.shareId+"&shareSite="+ShareControl.ins.shareLinkParam.shareSite;
				}else{
				var param=nickName1+"|"+nickName1+"|"+PlayerInfo.instance.sex+"|"+(new Date().getTime())
				+"|"+"8fc659c6-0a76-46ad-9c8f-4adbcb325ba5"+"|Casdfasdf";
				param=Base64Tool.encodeStr2(param);
				url=ConfigFile.WEB_HTTP+ConfigFile.HTTP_HOST+":"+ConfigFile.HTTP_PORT
				+"/"+"proxy"+"/"+ConfigFile.LOGIN
				+"?content="+param+"&site="+PlayerInfo.instance.platid+this.PlatId+"&lang="+this.lang+"&shareOpenId="+ShareControl.ins.shareLinkParam.shareOpenId+"&shareId="+ShareControl.ins.shareLinkParam.shareId+"&shareSite="+ShareControl.ins.shareLinkParam.shareSite;
			}
		};
		var loginData_=new LoginData()
		loginData_.data.userName=$nickName;
		var parameter=''
		for (var name in loginData_.data){
			parameter+=(name+'='+loginData_.data[name]+(name==='userName' ? "" :'&'))
		}
		loginData_=null;
		this._httpRequest=new HttpRequest();
		this._httpRequest.once("complete",this,this.onLoginComplete);
		this._httpRequest.once("error",this,this.onHttpRequestError);
		this._httpRequest.send(url,parameter,'post','text');
	}

	/**登录完成 **/
	__proto.onLoginComplete=function(e){
		var str=e;
		var obj=str ? JSON.parse(str):"";
		var code=obj.code;
		var msg=obj.msg;
		if(code !=0){
			this.showTips(code,msg);
			return;
		}
		PlayerInfo.instance.result=obj.result;
		PlayerInfo.instance.userId=obj.userId==undefined ? parseInt(obj.playerId):parseInt(obj.userId);
		PlayerInfo.instance.playerId=obj.playerId;
		PlayerInfo.instance.userName=obj.userName;
		PlayerInfo.instance.address=obj.host;
		PlayerInfo.instance.gameServerId=obj.gameServerId;
		PlayerInfo.instance.port=obj.port;
		PlayerInfo.instance.key=obj.key;
		PlayerInfo.instance.nickName=obj.nickName.length > 14 ? obj.nickName.substring(0,14)+".." :obj.nickName;
		PlayerInfo.instance.isMidasTest=parseInt(obj.isMidasTest);
		var countryIndex=obj.lang;
		if(countryIndex !=-1 && countryIndex < LanguageMgr.Ins.countryAry.length)
			LanguageMgr.Ins.country=LanguageMgr.Ins.countrySet[countryIndex];
		UserCache.ins.init(PlayerInfo.instance.playerId);
		PlayerInfo.instance.serverId=UrlParam.PARAMS["serverId"]==undefined ?-1 :UrlParam.PARAMS["serverId"];
		PlayerInfo.instance.roomId=UrlParam.PARAMS["roomId"]==undefined ? "" :UrlParam.PARAMS["roomId"];
		if(UrlParam.PARAMS["PLID"]=="wx"){
			if(Browser.window.wxutil)Browser.window.wxutil.hideload();
		}
		if(PlayerInfo.instance.result==true){
			this.connectSocket();
			SocketManager.Instance.record.guideClickLoaderRecords(1);
		}
		else{
			if(this._isLogin){
				this.createName(PlayerInfo.instance.userName,PlayerInfo.instance.sex==1 ? 1 :0);
			}
			else{
				if(UrlParam.PARAMS["PLID"]=="wx"){
					this.createName(PlayerInfo.instance.nickName,PlayerInfo.instance.sex);
				}
				else{
					modules.loading.LoginControl.instance.showCreateRoleView();
				}
			}
		}
	}

	__proto.showShareBtn=function(){
		if(UrlParam.PARAMS["PLID"]=="wx"){
			wx.showShareMenu({withShareTicket:true});
			wx.onShareAppMessage(function(){
				var shareVo=ShareMgr.ins.model.getShareInfoByType(ShareConst.SHARE_BUTTON);
				return {"title":shareVo.titleStr,"imageUrl":URL.rootPath+shareVo.imageURL}
			})
		}
	}

	__proto.showTips=function(code,msg){
		(msg===void 0)&& (msg="");
		switch(code){
			case 1:
				TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("10001137"),LanguageMgr.Ins.GetLan("9002152"),"",Handler.create(this,function(){
					JSMgr.replaceGame();
				},null,false));
				break ;
			case 2:
				TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("10001140"),LanguageMgr.Ins.GetLan("9002152"),"",Handler.create(this,function(){
					JSMgr.replaceGame();
				},null,false));
				break ;
			case 3:
				TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("10001141"),LanguageMgr.Ins.GetLan("9002152"),"",Handler.create(this,function(){
					JSMgr.replaceGame();
				},null,false));
				break ;
			case 5:
				TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("10001142"),LanguageMgr.Ins.GetLan("9002152"),"",Handler.create(this,function(){
					JSMgr.replaceGame();
				},null,false));
				break ;
			case 6:
				TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("10001143"),LanguageMgr.Ins.GetLan("9002152"),"",Handler.create(this,function(){
					JSMgr.replaceGame();
				},null,false));
				break ;
			case 7:
				TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),msg,LanguageMgr.Ins.GetLan("9002152"),"",Handler.create(this,function(){
					JSMgr.replaceGame();
				},null,false));
				break ;
			case 8:
				TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("10001138"),LanguageMgr.Ins.GetLan("9002152"),"",Handler.create(this,function(){
					JSMgr.replaceGame();
				},null,false));
				break ;
			case 9:
				TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("10001136"),LanguageMgr.Ins.GetLan("9002152"),"",Handler.create(this,function(){
					JSMgr.replaceGame();
				},null,false));
				break ;
			case 10:
				TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("10001147"),LanguageMgr.Ins.GetLan("9002152"),"",Handler.create(this,function(){
					JSMgr.replaceGame();
				},null,false));
				break ;
			case 11:
				TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("10001145"),LanguageMgr.Ins.GetLan("9002152"),"",Handler.create(this,function(){
					JSMgr.replaceGame();
				},null,false));
				break ;
			case 12:
				TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("10001146"),LanguageMgr.Ins.GetLan("9002152"),"",Handler.create(this,function(){
					JSMgr.replaceGame();
				},null,false));
				break ;
			case 13:
				TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("10001148"),LanguageMgr.Ins.GetLan("9002152"),"",Handler.create(this,function(){
					JSMgr.replaceGame();
				},null,false));
				break ;
			case 14:
				TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("10001149"),LanguageMgr.Ins.GetLan("9002152"),"",Handler.create(this,function(){
					JSMgr.replaceGame();
				},null,false));
				break ;
			case 15:
				if(!UIMgr.ins.getView("QueueUpView")){
					UIMgr.ins.openView("QueueUpView",Handler.create(this,function(view){
						view.setData(parseInt(msg));
					}));
				}
				else{
					(UIMgr.ins.getView("QueueUpView")).setData(parseInt(msg));
				}
				break ;
			case 16:;
				var arr=(msg+"").split("|");
				UIMgr.ins.openView("GameNoticeTips",Handler.create(this,function(view){
					view.setData(arr[0],arr[1]);
				}));
				break ;
			case 17:
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9004115"));
				modules.loading.LoginControl.instance.showCreateRoleView();
				break ;
			default :{
					TipsManager.Instance().showTips("login请求报错：code:"+code+",msg:"+msg);
				}
			}
	}

	__proto.getUrlParams=function(){}
	// ShareControl.ins.resolveParam();
	__proto.inviteCheck=function(){
		ShareControl.ins.runShareNowHandler();
	}

	/**
	*创建角色
	*/
	__proto.createName=function($nickName,$sex){
		if($nickName=="" || !$nickName || $nickName==LanguageMgr.Ins.GetLan("9007309")){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007309"));
			return;
		}
		PlayerInfo.instance.nickName=$nickName;
		PlayerInfo.instance.sex=$sex;
		var url="";
		if(this._isLogin){
			var timeTemp=new Date().getTime();
			var nickName=Base64Tool.encodeStr2(PlayerInfo.instance.nickName);
			var key=this._md5(PlayerInfo.instance.openid+nickName+PlayerInfo.instance.sex+timeTemp+
			PlayerInfo.instance.accesstoken+PlayerInfo.instance.platid+this.PlatId+this.lang+"z4EAXbY3dIZ3CpmX");
			var params=PlayerInfo.instance.openid+"|"+nickName+"|"+
			PlayerInfo.instance.sex+"|"+timeTemp+"|"+PlayerInfo.instance.accesstoken+"|"+key;
			params=Base64Tool.encodeStr2(params);
			params=encodeURIComponent(params);
			url=ConfigFile.WEB_HTTP+ConfigFile.HTTP_HOST+":"+ConfigFile.HTTP_PORT
			+"/"+ConfigFile.LOGIN+"?content="+params+"&site="+PlayerInfo.instance.platid+this.PlatId+"&lang="+this.lang;
		}
		else{
			var nickName1=Base64Tool.encodeStr2(PlayerInfo.instance.nickName);
			url=ConfigFile.WEB_HTTP+ConfigFile.HTTP_HOST+":"+ConfigFile.HTTP_PORT
			+"/"+"proxy"+"/"+ConfigFile.LOGIN
			+"?content="+nickName1+"%7C"+nickName1+"%7C"+"%7C"+(new Date().getTime())
			+"%7C"+"8fc659c6-0a76-46ad-9c8f-4adbcb325ba5"+"%7Casdfasdf"+"&site=test&lang="+this.lang;
		}
		this._httpRequest.once("complete",this,this.onCreateNameComplete);
		this._httpRequest.once("error",this,this.onHttpRequestError);
		this._httpRequest.send(url,null,'post','text');
	}

	/**创建角色完成 **/
	__proto.onCreateNameComplete=function(e){
		var str=e;
		var obj=JSON.parse(str);
		if(obj.code==1 || obj.code==7){
			TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),obj.msg);
			return;
		}
		else if(obj.code==17){
			TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9004115"),LanguageMgr.Ins.GetLan("9004115"));
			return;
		}
		PlayerInfo.instance.result=obj.result;
		PlayerInfo.instance.userId=obj.userId==undefined ? parseInt(obj.playerId):parseInt(obj.userId);
		PlayerInfo.instance.playerId=obj.playerId;
		PlayerInfo.instance.userName=obj.userName;
		PlayerInfo.instance.address=obj.host;
		PlayerInfo.instance.gameServerId=obj.gameServerId;
		PlayerInfo.instance.port=obj.port;
		PlayerInfo.instance.key=obj.key;
		this._httpRequest.off("complete",this,this.onCreateNameComplete);
		this._httpRequest.off("error",this,this.onHttpRequestError);
		this._httpRequest=null;
		this.connectSocket();
	}

	/**连接socket **/
	__proto.connectSocket=function(){
		SocketManager.Instance.connect();
	}

	__proto.onHttpRequestError=function(evt){
		TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("9002238"));
	}

	/**
	*获取当前平台ID
	*/
	__getset(0,__proto,'PlatId',function(){
		if(Browser.onMobile){
			if(Browser.onAndriod){
				return 1;
			}
			else{
				return 2;
			}
		}
		return 1;
	});

	__getset(0,__proto,'isAndroid',function(){
		return this.PlatId==1;
	});

	/**
	*语言 0 英文 1中文
	*/
	__getset(0,__proto,'lang',function(){
		this._lang=1;
		if(UrlParam.PARAMS["PLID"]=="fb"){
			if(LanguageMgr.Ins.country=="Chinese"){
				this._lang=1;
				}else{
				this._lang=0;
			}
		}
		return this._lang;
	});

	__getset(0,__proto,'isLogin',function(){
		return this._isLogin;
		},function(value){
		this._isLogin=value;
	});

	__getset(1,LoginControl,'instance',function(){return LoginControl._instance=LoginControl._instance|| new LoginControl();});
	LoginControl._instance=null;
	return LoginControl;
})()


//class modules.loading.LoginData
var LoginData=(function(){
	function LoginData(){
		this.data={}
		this.data.clientVersion=UrlParam.maxVersion
		if(Browser.onAndriod){
			this.data.system='Android'
			}else {
			this.data.system='iPhone'
		}
		this.data.screenWidth=Browser.window.innerWidth
		this.data.screenHeight=Browser.window.innerHeight
		this.data.density=Browser.window.devicePixelRatio
	}

	__class(LoginData,'modules.loading.LoginData');
	return LoginData;
})()


//class modules.loginActivity.LoginActivityMgr
var LoginActivityMgr=(function(){
	function LoginActivityMgr(){
		this.conditionList=null;
		this.condition=null;
		this.onlineConAry=null;
		this.onlineTime=0;
		/**
		*奖励物品
		*/
		this.rewards=null;
		this.conditionListObj=null;
		this.questionActivityIsGot=false;
		this.shouchongActivityIsGot=false;
		/**新手7ri 活动id */
		this.noviceActivityIsGotCount=0;
		/**可取数量 */
		this.loginActivityAvailableCount={
			11:0,
			13:0
		};
		this.numAvailableType1=0;
	}

	__class(LoginActivityMgr,'modules.loginActivity.LoginActivityMgr');
	var __proto=LoginActivityMgr.prototype;
	__proto.setup=function(){
		SocketManager.Instance.on(0x0056,this,this.onActivityCondition);
		SocketManager.Instance.on(0x0057,this,this.onActivityConditionList);
		SocketManager.Instance.on(0x0058,this,this.onActivityReward);
		SocketManager.Instance.on(0x0079,this,this.onActivityOnlineReward);
	}

	/**
	*获取当时的在线时常
	*/
	__proto.onActivityOnlineReward=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.IntMsg,pkg);
		this.onlineTime=res.value;
	}

	__proto.onActivityReward=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.ActivityRewardMsg,pkg);
		this.rewards=res;
		var conditionId=int(res.conditionId);
		if (conditionId <=47 && conditionId >=34){
			var activityLoginView=ActivityViewControl.ins.loginView;
			var activityConditionMsg=modules.loginActivity.LoginActivityMgr.ins.conditionListObj[conditionId];
			activityConditionMsg.isGet=true;
			activityConditionMsg.value1=7;
			if (activityLoginView){
				activityLoginView.updateData(conditionId);
			}
			if (conditionId <=40){
				this.noviceActivityIsGotCount++;
				this.noviceActivityIsGotCount >=7 && EventMgr.ins.event("Activit_isDone");
			}
			this.loginActivityAvailableCount[this.curLoginActivityId]--;
			EventMgr.ins.event("ACTIVITY_SET_RED");
		}
		UIMgr.ins.openView("ShowGetGoodsView",Handler.create(this,this.onGetGoodsViewComplete,null,false));
	}

	// }
	__proto.onGetGoodsViewComplete=function(view){
		view.setData(this.rewards);
	}

	__proto.onActivityCondition=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.ActivityConditionMsg,pkg);
		this.condition=res;
		if(this.onlineConAry && this.onlineConAry.length > 0){
			for (var i=0;i < this.onlineConAry.length;i++){
				if(this.onlineConAry[i].conditionId==this.condition.conditionId){
					this.onlineConAry[i]=this.condition;
					break ;
				}
			}
		}
		if(this.conditionList){
			var item;
			for(var $each_item in this.conditionList.list){
				item=this.conditionList.list[$each_item];
				if(item.conditionId==this.condition.conditionId){
					var conditionItem=ActivityConditionModel.getActivityConditionVO(int(item.conditionId));
					var activityVo=ActivityModel.getActivityData(conditionItem.ActivityId);
					if(activityVo.Type==1 && this.condition.isGet){
						this.numAvailableType1--;
						EventMgr.ins.event("ACTIVITY_SET_RED");
					}
					if(conditionItem.ActivityId==11 || conditionItem.ActivityId==13){
						if(!this.condition.isGet){
							var mValue1=conditionItem.Value1;
							var canGet=item.value1 >=mValue1;
							if(!canGet && this.condition.value1 >=mValue1){
								this.loginActivityAvailableCount[conditionItem.ActivityId]++;
							}
						};
						var canGetCount=0;
						canGetCount=modules.loginActivity.LoginActivityMgr.ins.loginActivityAvailableCount[modules.loginActivity.LoginActivityMgr.ins.curLoginActivityId];
						if(canGetCount && (canGetCount !=-1)){
							RedDotMgr.ins.updateRedDotStatus("SEVEN_LOGIN",true);
							EventMgr.ins.event("ACTIVITY_REDDOT_UPDATE","SEVEN_LOGIN");
							}else{
							RedDotMgr.ins.updateRedDotStatus("SEVEN_LOGIN",false);
							EventMgr.ins.event("ACTIVITY_REDDOT_UPDATE","SEVEN_LOGIN");
						}
					}
					item.isGet=this.condition.isGet;
					item.value1=this.condition.value1;
					item.getType=this.condition.getType;
					item.valueStr=this.condition.valueStr;
					break ;
				}
			}
		}
		EventMgr.ins.event("UPDATE_QUESTIONVIEW");
	}

	__proto.onActivityConditionList=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.ActivityConditionListMsg,pkg);
		this.conditionList=res;
		this.numAvailableType1=0;
		this.noviceActivityIsGotCount=0;
		this.loginActivityAvailableCount={
			11:0,
			13:0
		}
		this.conditionListObj={};
		this.onlineConAry=[];
		for (var i=0;i < this.conditionList.list.length;i++){
			var item=this.conditionList.list[i];
			var conditionItem=ActivityConditionModel.getActivityConditionVO(int(item.conditionId));
			if(conditionItem){
				var activityVo=ActivityModel.getActivityData(conditionItem.ActivityId);
				if(conditionItem.ActivityId==11 || conditionItem.ActivityId==13){
					if(conditionItem.ActivityId==11){
						item.isGet && this.noviceActivityIsGotCount++;
					}
					if(!item.isGet){
						var value1=item.value1;
						var conditionId=parseInt(item.conditionId);
						var mValue1=conditionItem.Value1;
						var canGet=value1 >=mValue1;
						if(canGet){
							this.loginActivityAvailableCount[conditionItem.ActivityId]++;
						}
					}
				}
				this.conditionListObj[item.conditionId]=item
			}
		}
		this.noviceActivityIsGotCount >=7 && EventMgr.ins.event("Activit_isDone");
		EventMgr.ins.event("ACTIVITY_SET_RED");
	}

	__proto.isOpenView=function(){
		var activityId=this.curLoginActivityId;
		if(activityId==13){
			var timer=ConfigModel.getConfigData(1094).ConfigValue;
			var timerArr=timer.split(',');
			var startTimes=TimeManager.Instance.dateStrToServerDate(timerArr[0]).getTime();
			var endTimes=TimeManager.Instance.dateStrToServerDate(timerArr[1]).getTime();
			var nowDate=Browser.now();
			if(nowDate<endTimes&&nowDate>startTimes){
				return true;
			}
			return false;
			}else{
			if(modules.loginActivity.LoginActivityMgr.ins.noviceActivityIsGotCount >=7)return false;
			else return true;
		}
		return false;
	}

	__proto.getConditionInfo=function(conditionId){
		if(this.conditionList !=null){
			var item;
			for(var $each_item in this.conditionList.list){
				item=this.conditionList.list[$each_item];
				if(parseInt(item.conditionId)==conditionId){
					return item;
				}
			}
		}
		return null;
	}

	__getset(0,__proto,'curLoginActivityId',function(){
		return this.noviceActivityIsGotCount >=7 ? 13 :11;
	});

	__getset(1,LoginActivityMgr,'ins',function(){
		if(LoginActivityMgr._ins==null)
			LoginActivityMgr._ins=new LoginActivityMgr();
		return LoginActivityMgr._ins;
	});

	LoginActivityMgr._ins=null;
	return LoginActivityMgr;
})()


/**
*神秘商店物品数据
*@author shuhao.li
*/
//class modules.mysteryshop.datas.MysteryShopItemData
var MysteryShopItemData=(function(){
	function MysteryShopItemData(){
		/**商品ID **/
		this.shopId=0;
		/**商品位置(0~n)**/
		this.index=0;
		/**商品名 **/
		this.itemName=null;
		/**物品资源URL **/
		this.itemIcon=null;
		/**技能ID,如果技能ID不为0,就说明是技能类型,显示属性,否则就是普通物品,显示描述 **/
		this.skillId=0;
		/**物品描述 **/
		this.desc=null;
		/**物品数量 **/
		this.count=0;
		/**价格类型 **/
		this.priceType=0;
		/**价格 **/
		this.price=0;
		/**折扣(0~100,100=10折,无折扣 10=1折)**/
		this.offNum=0;
		/**是否热卖 **/
		this.isHot=false;
		/**是否售罄 **/
		this.isSoldOut=false;
	}

	__class(MysteryShopItemData,'modules.mysteryshop.datas.MysteryShopItemData');
	return MysteryShopItemData;
})()


//class modules.mysteryshop.MysteryShopMgr
var MysteryShopMgr=(function(){
	function MysteryShopMgr(){
		this._lastRefreshNum=0;
		this._maxRefreshNum=0;
		/**可免费刷新次数 **/
		this._freeRefreshTimes=0;
		/**已免费刷新次数 **/
		this._freeRefreshCount=0;
		this._isFreeRefresh=false;
		this._refreshType=0;
		this._refreshUseNum=0;
		this._mysteryShopItemList=[];
		this._recommendItemList=[];
		this._isRefresh=true;
		this._isGetingData=false;
		this._freshTime=0;
	}

	__class(MysteryShopMgr,'modules.mysteryshop.MysteryShopMgr');
	var __proto=MysteryShopMgr.prototype;
	__proto.setup=function(){
		var self=this;
		var configVO=ConfigModel.getConfigData(1138);
		self._maxRefreshNum=parseInt(configVO.ConfigValue);
		!self._maxRefreshNum && (self._maxRefreshNum=20);
		configVO=ConfigModel.getConfigData(1137);
		var arr=String(configVO.ConfigValue).split(",");
		self._refreshType=parseInt(arr[0]);
		self._refreshUseNum=parseInt(arr[1]);
		SocketManager.Instance.on(0x00A8,self,self.onMysteryInfo);
	}

	__proto.startTimer=function(){
		Laya.timer.clearAll(this);
		Laya.timer.loop(1000,this,this.refreshTimer);
	}

	__proto.refreshTimer=function(){
		if(!this._isGetingData && this.refreshTime <=0){
			this._isGetingData=true;
			modules.mysteryshop.MysteryShopMgr.ins.sendGetMysteryShopData();
		}
	}

	/**
	*获取价格类型skin
	*@return
	*/
	__proto.getPriceTypeSkin=function($type){
		var skin="";
		switch($type){
			case-60:
				skin="common/ui_fengzhuangda.png";
				break ;
			case-10:
				skin="common/gold.png";
				break ;
			case-20:
				skin="common/gems.png";
				break ;
			}
		return skin;
	}

	/**
	*拉取神秘商店数据
	*/
	__proto.sendGetMysteryShopData=function(){
		SocketManager.Instance.out.sendMysteryShopOp(1);
	}

	/**
	*刷新
	*/
	__proto.sendRefresh=function(){
		if(this._lastRefreshNum <=0){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300139"));
			return;
		}
		SocketManager.Instance.out.sendMysteryShopOp(3);
	}

	/**
	*购买商品
	*@param $index :商品位置
	*/
	__proto.sendBuyShopItem=function($index){
		SocketManager.Instance.out.sendMysteryShopOp(2,$index);
	}

	/**
	*神秘商店免费刷新次数
	*/
	__proto.getFreeRefreshTimes=function(){
		if(PlayerInfo.instance.vipLv>0){
			var privilegeVO=PrivilegeModel.getItemDataByVipTypes(2+"_"+PlayerInfo.instance.vipLv+"_"+11);
			return privilegeVO.Param1;
		}
		return 0;
	}

	__proto.onMysteryInfo=function(pkg){
		var self=this;
		var res=ProtoMgr.decode(com.road.ddt.proto.mystery.MysteryShopMsg,pkg);
		self._mysteryShopItemList=[];
		self._recommendItemList=[];
		self._lastRefreshNum=self._maxRefreshNum-res.freshCount;
		self._freeRefreshCount=res.freefreshCount;
		self._freshTime=parseInt(res.freshTime);
		var items=res.items;
		var msg,mysteryShopItemData,vo,item;
		var offIndexArr=[],isHasOff=false;
		for (var i=0,len=items.length;i < len;i++){
			msg=items[i];
			vo=SpecialShopModel.getItemDataById(msg.shopId);
			console.log("msg.shopId :"+msg.shopId);
			item=ItemModel.getItemConfigData(vo.ItemId);
			console.log("vo :"+vo);
			mysteryShopItemData=new MysteryShopItemData();
			mysteryShopItemData.shopId=msg.shopId;
			mysteryShopItemData.index=msg.index;
			mysteryShopItemData.offNum=msg.disCount;
			mysteryShopItemData.isSoldOut=msg.isBuy;
			mysteryShopItemData.itemName=LanguageMgr.Ins.GetLan(item.Name);
			mysteryShopItemData.itemIcon="assets/textrue/skill/"+item.Icon+".png";
			mysteryShopItemData.desc=item.Desc;
			mysteryShopItemData.skillId=((item.Type==3)? item.Param1 :0);
			mysteryShopItemData.count=vo.ItemCount;
			mysteryShopItemData.priceType=vo.CurrencyType;
			mysteryShopItemData.price=vo.Price;
			mysteryShopItemData.isHot=(vo.Type==2);
			if(mysteryShopItemData.offNum < 100){
				isHasOff=true;
			}
			offIndexArr.push({index:i,offNum:mysteryShopItemData.offNum});
			switch(msg.type){
				case 1:
					self._mysteryShopItemList.push(mysteryShopItemData);
					break ;
				}
		}
		offIndexArr.sort(function(a,b){
			var sortNum=a.offNum-b.offNum;
			return sortNum;
		});
		self._mysteryShopItemList.sort(this.sortFunc);
		if(isHasOff){
			len=offIndexArr.length;
			var obj;
			for (i=0;i < len;i++){
				obj=offIndexArr[i];
				self._recommendItemList.push(self._mysteryShopItemList[obj.index]);
			}
		}
		else{
			for (i=0;i < 3;i++){
				self._recommendItemList.push(self._mysteryShopItemList[i]);
			}
		}
		self._isGetingData && (self._isRefresh=true);
		self._isGetingData=false;
		self.startTimer();
		EventMgr.ins.event("mystery_shop_item_update");
		EventMgr.ins.event("ACTIVITY_SET_RED","btn_mysteryshop");
	}

	//下次刷新时间
	__proto.sortFunc=function(a,b){
		return a.index-b.index;
	}

	/**剩余购买次数 **/
	__getset(0,__proto,'lastRefreshNum',function(){return this._lastRefreshNum;});
	/**最大购买次数 **/
	__getset(0,__proto,'maxRefreshNum',function(){return this._maxRefreshNum;});
	/**是否为免费刷新**/
	__getset(0,__proto,'isFreeRefresh',function(){
		this._freeRefreshTimes=this.getFreeRefreshTimes();
		this._isFreeRefresh=this._freeRefreshTimes > this._freeRefreshCount ? true :false;
		return this._isFreeRefresh;
	});

	/**
	*是否刷新了神秘商店
	*@return
	*/
	__getset(0,__proto,'isRefresh',function(){return this._isRefresh;},function(value){
		this._isRefresh=value;
	});

	/**
	*刷新消耗类型
	*/
	__getset(0,__proto,'refreshType',function(){return this._refreshType;});
	/**
	*获取神秘商店刷新时间
	*@return
	*/
	__getset(0,__proto,'refreshTime',function(){
		var synTime=TimeManager.Instance.synTime;
		return (this._freshTime-synTime)/1000;
	});

	/**
	*神秘商店物品列表
	*@return Array<MysteryShopItemData.as>
	*/
	__getset(0,__proto,'mysteryShopItemList',function(){return this._mysteryShopItemList;});
	/**
	*刷新消耗数量
	*/
	__getset(0,__proto,'refreshUseNum',function(){return this._refreshUseNum;});
	/**
	*神秘商店推荐物品列表
	*@return Array<MysteryShopItemData.as>
	*/
	__getset(0,__proto,'recommendItemList',function(){return this._recommendItemList;});
	__getset(1,MysteryShopMgr,'ins',function(){return MysteryShopMgr._ins;});
	MysteryShopMgr.SHOPTYPE_SELL=1;
	MysteryShopMgr.SHOPTYPE_RECOMMEND=2;
	__static(MysteryShopMgr,
	['_ins',function(){return this._ins=new MysteryShopMgr();}
	]);
	return MysteryShopMgr;
})()


//class modules.newguide.core.BaseGuide
var BaseGuide=(function(){
	function BaseGuide(){
		this.guideState=0;
	}

	__class(BaseGuide,'modules.newguide.core.BaseGuide');
	var __proto=BaseGuide.prototype;
	__proto.initGuide=function(){
		this.guideState=1;
	}

	__proto.checkGuide=function(){
		this.guideState=2;
	}

	__proto.executeGuide=function(){
		this.guideState=3;
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		this.guideState=4;
	}

	//0.构造
	__getset(0,__proto,'isPassCondition',function(){
		return false;
	});

	BaseGuide.State_Construction=0;
	BaseGuide.State_Init=1;
	BaseGuide.State_Check=2;
	BaseGuide.State_Execute=3;
	BaseGuide.State_Finish=4;
	return BaseGuide;
})()


/**
*新手指引管理类
*@author chengwen.yi
*
*/
//class modules.newguide.core.NewGuideMgr
var NewGuideMgr=(function(){
	function NewGuideMgr(){
		this._curNodeId=-1;
		this._curGuideNode=null;
		/**
		*关闭所有强指引
		*
		*/
		this.isCloseSocket=false;
	}

	__class(NewGuideMgr,'modules.newguide.core.NewGuideMgr');
	var __proto=NewGuideMgr.prototype;
	__proto.initGuideData=function(initNode){
		if(initNode==-1){
			return;
		}
		else if(initNode==10){
		}
		else if(initNode < 100){
			SocketManager.Instance.out.updateNewGuideNodeID(-1);
			return;
		}
		this.curNodeId=initNode;
	}

	__proto.checkAllGuide=function(view,isShowView){
		Laya.timer.frameOnce(5,this,this._checkAllGuide,[view,false]);
	}

	__proto.closeAllGuide=function(){
		modules.newguide.core.NewGuideMgr.ins.closeGuide();
		LevelGuideMgr.ins.closeGuide();
		this.isCloseSocket=true;
	}

	__proto.closeGuide=function(){
		if(this._curGuideNode){
			this._curGuideNode.finishGuide(false);
		}
	}

	/**
	*检查新手
	*@param view
	*@param isShowView
	*
	*/
	__proto._checkAllGuide=function(view,isShowView){
		if(isShowView && !view.destroyed || !isShowView){
			modules.newguide.core.NewGuideMgr.ins.checkGuide();
		}
	}

	__proto.checkGuide=function(){
		if(this.isCloseSocket)return;
		if(this.curNodeId !=-1 && this._curGuideNode){
			this._curGuideNode.checkGuide();
		}
		else{
			LevelGuideMgr.ins.checkLevelGuide();
		}
	}

	__proto.createGuideNode=function(nodeId){
		var guideNode;
		if(nodeId==10){
			guideNode=new GuideNode_10(10);
		}
		else if(nodeId==110){
			guideNode=new GuideNode_110(110);
		}
		else if(nodeId==120){
			guideNode=new GuideNode_120(120);
		}
		else if(nodeId==130){
			guideNode=new GuideNode_130(130);
		}
		else if(nodeId==140){
			guideNode=new GuideNode_140(140);
		}
		else if(nodeId==150){
			guideNode=new GuideNode_150(150);
		}
		return guideNode;
	}

	__proto.nextGuideNode=function(onlySave){
		(onlySave===void 0)&& (onlySave=false);
		var nextGuideNode=0;
		if(this.curNodeId==10){
			nextGuideNode=110;
		}
		else{
			nextGuideNode=this.curNodeId+10;
		}
		if(onlySave){
			SocketManager.Instance.out.updateNewGuideNodeID(nextGuideNode);
			console.log("提前保存新手进度值，节点："+nextGuideNode);
		}
		else{
			if(this.curNodeId >=150){
				SocketManager.Instance.out.updateNewGuideNodeID(-2);
				SocketManager.Instance.record.guideClickRecords(10000);
				this.curNodeId=-1;
				UIMgr.ins.openView("SevenDayTargetView");
				console.log("新手结束");
			}
			else{
				SocketManager.Instance.out.updateNewGuideNodeID(nextGuideNode);
				this.curNodeId=nextGuideNode;
				this.checkGuide();
			}
		}
	}

	__getset(0,__proto,'isCanClickSkillUserItem',function(){
		var bool=true;
		if(this._curGuideNode && this._curGuideNode.nodeId==140 && this._curGuideNode.curStepId==5){
			bool=false;
		}
		return bool;
	});

	/**
	*@private
	*/
	/**当前所在引导节点 */
	__getset(0,__proto,'curNodeId',function(){
		return this._curNodeId;
		},function(value){
		if(this._curNodeId !=value){
			this._curNodeId=value;
			if(this._curGuideNode==null || this._curGuideNode.nodeId !=this._curNodeId){
				this._curGuideNode=this.createGuideNode(this.curNodeId);
			}
		}
	});

	__getset(0,__proto,'isFirstNewGuideBattle',function(){
		return this.curNodeId==10;
	});

	__getset(0,__proto,'isNewGuide',function(){
		return this.curNodeId !=-1;
	});

	__getset(0,__proto,'isCanShowWeakGuide',function(){
		if(this.curNodeId==-1 || (this.curNodeId==10 && this._curGuideNode.curStepId >=5)|| this.curNodeId > 10){
			return true;
		}
		return false;
	});

	__getset(1,NewGuideMgr,'ins',function(){
		if(NewGuideMgr._ins==null)NewGuideMgr._ins=new NewGuideMgr();
		return NewGuideMgr._ins;
	});

	NewGuideMgr.NODE_TRAIN1=10;
	NewGuideMgr.NODE_UNLOCK_CHEST=110;
	NewGuideMgr.NODE_TRAIN2=120;
	NewGuideMgr.NODE_OPEN_CHEST=130;
	NewGuideMgr.NODE_SKILL_UP=140;
	NewGuideMgr.NODE_MISSION=150;
	NewGuideMgr._ins=null;
	return NewGuideMgr;
})()


//class modules.newguide.core.NewGuideUIMgr
var NewGuideUIMgr=(function(){
	function NewGuideUIMgr(){}
	__class(NewGuideUIMgr,'modules.newguide.core.NewGuideUIMgr');
	var __proto=NewGuideUIMgr.prototype;
	__proto.showClick=function(target,info,isMask,maskAlpha){
		(isMask===void 0)&& (isMask=true);
		(maskAlpha===void 0)&& (maskAlpha=0.6);
		var maskView=new ClickMaskView(target,info,isMask,maskAlpha);
		LayerMgr.ins.newGuideLayer.addChild(maskView);
		return maskView;
	}

	__proto.showClick_Chick=function(target,desc,isLeft,descOffX,descOffY,info,isMask,maskAlpha){
		(isLeft===void 0)&& (isLeft=false);
		(descOffX===void 0)&& (descOffX=0);
		(descOffY===void 0)&& (descOffY=0);
		(isMask===void 0)&& (isMask=true);
		(maskAlpha===void 0)&& (maskAlpha=0.6);
		var maskView=new ChickenClickMaskView(target,info,isMask,maskAlpha);
		maskView.setDesc(desc,isLeft,descOffX,descOffY);
		LayerMgr.ins.newGuideLayer.addChild(maskView);
		return maskView;
	}

	__proto.showClick_Skill_Desc=function(target,info,isMask,maskAlpha){
		(isMask===void 0)&& (isMask=true);
		(maskAlpha===void 0)&& (maskAlpha=0.6);
		var maskView=new SkillClickMaskView(target,info,isMask,maskAlpha);
		LayerMgr.ins.newGuideLayer.addChild(maskView);
		return maskView;
	}

	__proto.Battle_LaXian=function(closeHander,target,desc,isLeft,descOffX,descOffY,info,isMask,maskAlpha){
		(isLeft===void 0)&& (isLeft=false);
		(descOffX===void 0)&& (descOffX=0);
		(descOffY===void 0)&& (descOffY=0);
		(isMask===void 0)&& (isMask=true);
		(maskAlpha===void 0)&& (maskAlpha=0.6);
		var maskView=new LaXianMaskView(target,info,isMask,maskAlpha);
		maskView.setDesc(desc,isLeft,descOffX,descOffY);
		maskView.setData(closeHander);
		LayerMgr.ins.newGuideLayer.addChild(maskView);
		return maskView;
	}

	__proto.Slide_Guide=function(closeHander,target,desc,isLeft,descOffX,descOffY,info,isMask,maskAlpha){
		(isLeft===void 0)&& (isLeft=false);
		(descOffX===void 0)&& (descOffX=0);
		(descOffY===void 0)&& (descOffY=0);
		(isMask===void 0)&& (isMask=true);
		(maskAlpha===void 0)&& (maskAlpha=0.6);
		var maskView=new SlideMaskView(target,info,isMask,maskAlpha);
		maskView.setDesc(desc,isLeft,descOffX,descOffY);
		maskView.setData(closeHander);
		LayerMgr.ins.newGuideLayer.addChild(maskView);
		return maskView;
	}

	__proto.showTalk=function(closeHander,content,npcName,onComplete){
		UIMgr.ins.openView("GuideTalkView",Handler.create(this,function(view){
			LayerMgr.ins.newGuideLayer.addChild(view);
			view.setData(closeHander,content,npcName);
			if(onComplete)onComplete.run();
		}));
		return "GuideTalkView";
	}

	__getset(1,NewGuideUIMgr,'ins',function(){
		if(NewGuideUIMgr._ins==null)NewGuideUIMgr._ins=new NewGuideUIMgr();
		return NewGuideUIMgr._ins;
	});

	NewGuideUIMgr._ins=null;
	return NewGuideUIMgr;
})()


/**
*新手触发类型
*@author chengwen.yi
*
*/
//class modules.newguide.core.NodeTriggerType
var NodeTriggerType=(function(){
	function NodeTriggerType(){}
	__class(NodeTriggerType,'modules.newguide.core.NodeTriggerType');
	NodeTriggerType.Click="CLICK";
	NodeTriggerType.Click_Chick="CLICK_HICK";
	NodeTriggerType.Click_Skill_Desc="CLICK_SKILL_DESC";
	NodeTriggerType.Battle_LaXian="Battle_LaXian";
	NodeTriggerType.Slide_Guide="Slide_Guide";
	NodeTriggerType.Talk="TALK";
	NodeTriggerType.FuncHandler="FuncHandler";
	return NodeTriggerType;
})()


//class modules.newguide.event.BuriedPoint
var BuriedPoint=(function(){
	function BuriedPoint(){}
	__class(BuriedPoint,'modules.newguide.event.BuriedPoint');
	BuriedPoint.POINT_10=10;
	BuriedPoint.POINT_22=22;
	BuriedPoint.POINT_110=110;
	BuriedPoint.POINT_120=120;
	BuriedPoint.POINT_130=130;
	BuriedPoint.POINT_140=140;
	BuriedPoint.POINT_150=150;
	BuriedPoint.POINT_10000=10000;
	return BuriedPoint;
})()


//class modules.newguide.event.GuideEvent
var GuideEvent=(function(){
	function GuideEvent(){}
	__class(GuideEvent,'modules.newguide.event.GuideEvent');
	GuideEvent.ShowBattleOverDanView="ShowBattleOverDanView";
	GuideEvent.OpenChooseView="OpenChooseView";
	GuideEvent.SlideEnd="SlideEnd";
	GuideEvent.GuideNode_10_Step_2="GuideNode_10_Step_2";
	GuideEvent.GuideNode_10_Step_3="GuideNode_10_Step_3";
	GuideEvent.GuideNode_10_Step_5="GuideNode_10_Step_5";
	GuideEvent.GuideNode_130_Step_3="GuideNode_130_Step_3";
	GuideEvent.GuideNode_140_Step_2="GuideNode_140_Step_2";
	GuideEvent.GuideNode_150_Step_2="GuideNode_150_Step_2";
	return GuideEvent;
})()


/**
*等级功能开放指引管理类
*@author chengwen.yi
*
*/
//class modules.newguide.levelguide.LevelGuideMgr
var LevelGuideMgr=(function(){
	function LevelGuideMgr(){
		this._curLevelNodeId=-1;
		this._curLevelGuideNode=null;
		this._waitCheckLevelNode=[];
	}

	__class(LevelGuideMgr,'modules.newguide.levelguide.LevelGuideMgr');
	var __proto=LevelGuideMgr.prototype;
	__proto.addWaitCheckLevelNode=function(level){
		this._waitCheckLevelNode.push(level);
	}

	__proto.closeGuide=function(){
		if(this._curLevelGuideNode){
			this._curLevelGuideNode.finishGuide(false);
		}
	}

	__proto.createLevelGuideNode=function(level){
		var guideNode;
		if(level==6){
			guideNode=new LevelGuideNode_6(level);
		}
		else if(level==8){
			guideNode=new LevelGuideNode_8(level);
		}
		else if(level==10){
			guideNode=new LevelGuideNode_10(level);
		}
		else if(level==15){
			guideNode=new LevelGuideNode_15(level);
		}
		else if(level==20){
			guideNode=new LevelGuideNode_20(level);
		}
		else if(level==25){
			guideNode=new LevelGuideNode_25(level);
		}
		return guideNode;
	}

	__proto.checkLevelGuide=function(){
		if(this._curLevelGuideNode){
			this._curLevelGuideNode.checkGuide();
		}
		else if(this._waitCheckLevelNode && this._waitCheckLevelNode.length > 0 && UIMgr.ins.getOpenViewNum()<=0){
			if((SceneMgr.ins.curScene instanceof modules.hall.scene.HallMainScene )){
				var lvl=this._waitCheckLevelNode.shift();
				this.curLevelNodeId=lvl;
				HallWeakGuide.ins.clearAllHallWeekGuide();
			}
		}
	}

	__proto.nextGuideNode=function(){
		this.curLevelNodeId=-1;
		Laya.timer.once(100,this,this.checkLevelGuide);
	}

	/**
	*是否处于等级功能开放指引中
	*@return
	*
	*/
	__getset(0,__proto,'isLevelGuide',function(){
		return this._curLevelNodeId !=-1 || this._curLevelGuideNode !=null || this._waitCheckLevelNode.length > 0;
	});

	__getset(0,__proto,'curLevelNodeId',function(){
		return this._curLevelNodeId;
		},function(value){
		if(this._curLevelNodeId !=value){
			this._curLevelNodeId=value;
			if(this._curLevelGuideNode==null || this._curLevelGuideNode.nodeId !=this._curLevelNodeId){
				this._curLevelGuideNode=this.createLevelGuideNode(this._curLevelNodeId);
				if(this._curLevelGuideNode)this._curLevelGuideNode.checkGuide();
			}
		}
	});

	__getset(0,__proto,'isCanClickSkillUserItem',function(){
		var bool=true;
		if(this._curLevelGuideNode && (this._curLevelGuideNode.nodeId==15 || this._curLevelGuideNode.nodeId==25)){
			bool=false;
		}
		return bool;
	});

	__getset(1,LevelGuideMgr,'ins',function(){
		if(LevelGuideMgr._ins==null)LevelGuideMgr._ins=new LevelGuideMgr();
		return LevelGuideMgr._ins;
	});

	LevelGuideMgr.NODE_MELEE=6;
	LevelGuideMgr.NODE_GUILD=8;
	LevelGuideMgr.NODE_PVE=10;
	LevelGuideMgr.NODE_SKILL_CARD_15=15;
	LevelGuideMgr.NODE_MULIT_PVE=20;
	LevelGuideMgr.NODE_SKILL_CARD_25=25;
	LevelGuideMgr._ins=null;
	return LevelGuideMgr;
})()


/**
*大厅相关的弱指引
*@author chengwen.yi
*
*/
//class modules.newguide.weakguide.HallWeakGuide
var HallWeakGuide=(function(){
	function HallWeakGuide(){
		/**指引点击动画 */
		this.effect_dianji=null;
		this.hallWeakGuideValue=0;
	}

	__class(HallWeakGuide,'modules.newguide.weakguide.HallWeakGuide');
	var __proto=HallWeakGuide.prototype;
	//大厅指引步骤
	__proto.hallWeakGuideStep=function(stepValue,parent,guidePos){
		this.hallWeakGuideValue=stepValue;
		if(this.effect_dianji==null){
			this.effect_dianji=new AniSkeleton("effect_dianji","guide",0,true);
			this.effect_dianji.mouseEnabled=false;
			this.effect_dianji.mouseThrough=true;
		}
		parent.addChild(this.effect_dianji);
		this.effect_dianji.x=guidePos.x;
		this.effect_dianji.y=guidePos.y;
	}

	__proto.clearHallWeakGuideStep=function(stepValue){
		Laya.timer.clear(this,this.hallWeakGuideStep);
		if(this.effect_dianji){
			this.effect_dianji.removeSelf();
			this.effect_dianji.destroy();
			this.effect_dianji=null;
		}
	}

	__proto.clearAllHallWeekGuide=function(){
		this.clearHallWeakGuideStep(3);
		this.hallWeakGuideValue=0;
	}

	/**
	*是否开启大厅弱指引
	*@return
	*
	*/
	__getset(0,__proto,'isOpenWeakGuide',function(){
		return !NewGuideMgr.ins.isNewGuide && !LevelGuideMgr.ins.isLevelGuide && PlayerInfo.instance.grade <=10;
	});

	/**
	*是否开启战斗弱指引
	*@return
	*
	*/
	__getset(0,__proto,'isOpenBattleWeakGuide',function(){
		return NewGuideMgr.ins.isCanShowWeakGuide && PlayerInfo.instance.grade <=10;
	});

	__getset(1,HallWeakGuide,'ins',function(){
		if(HallWeakGuide._ins==null){
			HallWeakGuide._ins=new HallWeakGuide();
		}
		return HallWeakGuide._ins;
	});

	HallWeakGuide._ins=null;
	return HallWeakGuide;
})()


/**
*广告收益类型
*@author shuhao.li
*/
//class modules.player.consts.AdFbType
var AdFbType=(function(){
	function AdFbType(){}
	__class(AdFbType,'modules.player.consts.AdFbType');
	AdFbType.SEVEN_DAY_LOGIN=1;
	AdFbType.BATTLE_OVER=2;
	AdFbType.TREASURE_BOX=3;
	AdFbType.APPLE_BATTLE=4;
	return AdFbType;
})()


//class modules.player.consts.CardMonthType
var CardMonthType=(function(){
	function CardMonthType(){}
	__class(CardMonthType,'modules.player.consts.CardMonthType');
	CardMonthType.MASTER=1;
	CardMonthType.VIP=2;
	CardMonthType.Master_Resource=3;
	CardMonthType.Master_Growing=4;
	CardMonthType.SonType_1=1;
	CardMonthType.SonType_2=2;
	CardMonthType.SonType_3=3;
	CardMonthType.SonType_4=4;
	CardMonthType.SonType_5=5;
	CardMonthType.SonType_6=6;
	CardMonthType.SonType_7=7;
	return CardMonthType;
})()


//class modules.player.consts.PlayerMenuConst
var PlayerMenuConst=(function(){
	function PlayerMenuConst(){}
	__class(PlayerMenuConst,'modules.player.consts.PlayerMenuConst');
	PlayerMenuConst.OP_VIEW_PROFILE="OP_VIEW_PROFILE";
	PlayerMenuConst.OP_GUILD_INVITE="OP_GUILD_INVITE";
	PlayerMenuConst.OP_BLACK_LIST="OP_BLACK_LIST";
	PlayerMenuConst.OP_ADD_FRIEND="OP_ADD_FRIEND";
	PlayerMenuConst.OP_DEL_FRIEND="OP_DEL_FRIEND";
	PlayerMenuConst.OP_CHAT_FRIEND="OP_CHAT_FRIEND";
	return PlayerMenuConst;
})()


/**
*好友信息
*/
//class modules.player.data.FriendInfo
var FriendInfo=(function(){
	function FriendInfo(){
		/**
		*qq好友 openid
		*/
		this.openId=null;
		/**
		*qq好友 openid
		*/
		this.openid=null;
		/**
		*玩家id
		*/
		this.playerId=0;
		/**
		*所在公会的公会名
		*/
		this.guildName=null;
		/**
		*所在公会的公会id
		*/
		this.guildId=0;
		/**
		*用户昵称
		*/
		this.nickName=null;
		/**
		*用户头像
		*/
		this.picture=null;
		/**
		*玩家性别
		*/
		this.gender=NaN;
		/**
		*本赛季奖杯数
		*/
		this.trophy=0;
		/**
		*上赛季奖杯数
		*/
		this.lastTrophy=0;
		/**
		*排名趋势（日）
		*/
		this.change=0;
		/**
		*是否在线
		*/
		this.isOnline=false;
		/**
		*头像数据，可能为空
		*/
		this.headImg=null;
	}

	__class(FriendInfo,'modules.player.data.FriendInfo');
	return FriendInfo;
})()


/**
*自己的公会信息
*/
//class modules.player.data.GuildInfo
var GuildInfo=(function(){
	function GuildInfo(){
		this.guildIcon=0;
		this.guildId=null;
		this.guildName=null;
		this.members=0;
		this.trophy=0
		this.limit=GuildMgr.MAX_NUMBER;
		GuildInfo._instance=this;}
	__class(GuildInfo,'modules.player.data.GuildInfo');
	__getset(1,GuildInfo,'instance',function(){return GuildInfo._instance=GuildInfo._instance|| new GuildInfo();});
	GuildInfo._instance=null;
	return GuildInfo;
})()


//class modules.player.data.PlayerInfo
var PlayerInfo=(function(){
	function PlayerInfo(){
		/**socket ip地址 **/
		this.address=null;
		/**socket 端口号 **/
		this.port=null;
		/**socket url **/
		this.socketURL=null;
		/**游戏服ID **/
		this.gameServerId=0;
		/**描述信息 **/
		this.message=null;
		/**是否有角色 **/
		this.result=null;
		this.userId=NaN;
		/**用户头像 **/
		this.headimgurl=null;
		/**玩家ID **/
		this.playerId=null;
		/**玩家名 **/
		this.userName=null;
		/**玩家呢称 **/
		this.nickName=null;
		/**QQ昵称 **/
		this.qqNickName="";
		/**苹果最高积分*/
		this.appleGameScore=0;
		/**苹果本周最高积分*/
		this.appleWeekScore=0;
		/**苹果收益金币*/
		this.appleGameGold=0;
		/**乱斗积分 */
		this.meleeScore=0;
		/**索要上限*/
		this.dayShootAskTimes=0;
		this.accesstoken=null;
		/**游戏site值 **/
		this.site=null;
		this.key=null;
		/**性别 0 女 1男**/
		this.sex=0;
		/**性别 **/
		this.inviter=NaN;
		/**openid **/
		this.openid=null;
		/**等级 **/
		this.grade=0;
		/**经验 **/
		this.exp=0;
		/**VIP等级 **/
		this.vipLv=0;
		/**VIP经验 **/
		this.vipExp=0;
		/**金币 **/
		this.gold=0;
		/**钻石 **/
		this.diamond=0;
		/**粉钻 **/
		this.pinkDiamond=0;
		/**绑钻 **/
		this.bindDiamond=0;
		/**战斗力 **/
		this.fightPower=0;
		/**历史最高战斗力 **/
		this.maxFightPower=0;
		/**工会ID **/
		this.consortiaID=null;
		/**用户捐献数量 **/
		this.donate=0;
		/**当前成就称号 **/
		this.achievement=0;
		/**速度 **/
		this.speed=0;
		/**伤害 **/
		this.damage=0;
		/**血量 **/
		this.blood=0;
		/**暴击 **/
		this.crit=0;
		/**暴击伤害 **/
		this.critDamage=0;
		/**抵挡 **/
		this.parry=0;
		/**用户头像 **/
		this.avatar=null;
		/**胜场数 **/
		this.win=0;
		/**总场数 **/
		this.total=0;
		/**逃跑数 **/
		this.escape=0;
		/**连胜(连负)场数 **/
		this.winningCount=0;
		/**排位赛积分(奖杯数量)**/
		this.rankPoint=0;
		/**上赛季排位赛积分(奖杯数量)**/
		this.rankLastPoint=0;
		/**排位赛最高积分 **/
		this.rankMaxPoint=0;
		/**排位连胜(连负)场数 **/
		this.winningRankCount=0;
		/**排位赛场次 **/
		this.rankGameTotalCount=0;
		/**排位赛胜利次数 **/
		this.rankGameWinCount=0;
		/**排位赛击杀次数 **/
		this.rankGameKillCount=0;
		/**排位赛死亡次数 **/
		this.rankGameDeathCount=0;
		/**最高奖杯 **/
		this.maxTrophy=0;
		/**上赛季奖杯 **/
		this.lastPoint=0;
		/**已收集技能数 **/
		this.collectSkill=0;
		/**最常用技能 **/
		this.commonSkill=0;
		/**需要每天执行任务的时间 **/
		this.dayTaskTime=NaN;
		/**玩家的设置开关 **/
		this.optionOnOff=0;
		/**当前游戏服ID **/
		this.gameServerID=0;
		/**当前技能ID列表 **/
		this.skills=null;
		this._trophy=0;
		// 杯数
		this.addGold=-1;
		/**判断当前登录的是qq或wx **/
		this.platid=null;
		this.serverId=0;
		this.roomId=null;
		/**今日捐献次数（对公会） **/
		this.todayDonateTimes=0;
		/**玩家可以消耗的捐献数 **/
		this.counseDonate=0;
		/**玩家是否可以免费打开竞技宝箱 **/
		this.openBoxFree=false;
		/**玩家是否领取vip特权每周福利**/
		this.isGetWeekReward=false;
		/**今日咻咻的火箭收益提升购买次数**/
		this.profitPromoteTimes=0;
		/**
		*好友状态 0:接收所有 1：验证 2：拒绝所有
		*/
		this.friendState=0;
		//乱斗收益次数
		this.meleeGoldTimes=0;
		/**
		*0:正式环境米大师 1：沙箱环境米大师
		*/
		this.isMidasTest=0;
		/**所有月卡结束时间 **/
		this.allSpecialCardEndTimes={
			1 :0,
			2 :0,
			3 :0,
			4 :0
		};
		this.isDivisonUp=false;
		this.isShowAreaChange=false;
		this.division=-1;
		// 段位
		this.currentStar=1;
		// 当前段位的星星数
		this.lastFailCount=0;
		//PVP连续失败场数;
		this.lastWin=false;
		//上场PVP赛是否胜利;
		this.goldCount=0;
		//PVP获得黄金次数;
		this.language=0;
		//语言设置
		this.free_box_count=0;
		// 免费宝箱个数
		this.guildJob=0;
		// 公会职位
		this.weekSkillDonate=0;
		// 周技能贡献
		this.free_box_updatetime=null;
		// 免费宝箱更新时间
		this.join_guild_time=null;
		// 加入公会时间
		this.guild_donate_time=null;
		// 上次捐献时间
		this.guild_donatereq_time=null;
		// 上期请求捐献的时间
		this.donate_common_count=0;
		// 今日普通卡捐赠总数
		this.donate_rare_count=0;
		// 今日稀有卡捐赠总数
		this.win_count=0;
		// 总胜利次数
		this.win_box_count=0;
		// 胜利宝箱个数
		this.win_box_updatetime=null;
		// 胜利宝箱更新次数
		this.win_box_index=0;
		// 胜利宝箱竞技场数
		this.totalDonates=0;
		//总捐献
		this.bigZp=0;
		// 大转盘可抽奖次数
		this.firstCharge=0;
		/**
		*加入的公会群
		*/
		this.joinGroup=null;
		/******************************升级相关属性 *****************************/
		this.level_up=0;
		this.add_blood=0;
		this.add_damage=0;
		this.add_speed=0;
		this.unlockID=0;
		//optionOnOff第offset位是否为true
		this.histroyAppleScore=0;
		this.histroyTrophy=0;
		this.friendValue=0;
		this.histroyFriendValue=0;
		this.histroyFriendSkillLevel=0;
		this.friendSkillLevel=0;
		this.history_win_box_index=0;
		/******************************VIP升级相关属性 *****************************/
		this.pre_viplevel=0;
		PlayerInfo._instance=this;}
	__class(PlayerInfo,'modules.player.data.PlayerInfo');
	var __proto=PlayerInfo.prototype;
	__proto.recordHistory=function(){
		this.histroyAppleScore=this.appleGameScore;
		this.histroyTrophy=this.trophy;
		this.histroyFriendValue=this.friendValue;
		this.histroyFriendSkillLevel=this.friendSkillLevel;
		this.history_win_box_index=this.win_box_index;
	}

	__proto.isOn=function(offset){
		return (this.optionOnOff & (0x01 << offset))!=0;
	}

	/**
	*1.月卡特权开启
	*@return
	*/
	__getset(0,__proto,'isOpenMasterCard',function(){
		var deviationTime=TimeManager.Instance.checkTimeEndNum(this.allSpecialCardEndTimes[1]);
		return deviationTime > 0;
	});

	/**
	*4.成长特权开启
	*@return
	*/
	__getset(0,__proto,'isOpenMasterGrowing',function(){
		var deviationTime=TimeManager.Instance.checkTimeEndNum(this.allSpecialCardEndTimes[4]);
		return deviationTime > 0;
	});

	/**
	*2.VIP特权开启
	*@return
	*/
	__getset(0,__proto,'isOpenVIP',function(){
		var deviationTime=TimeManager.Instance.checkTimeEndNum(this.allSpecialCardEndTimes[2]);
		return deviationTime > 0;
	});

	/**
	*3.卡牌特权开启
	*@return
	*/
	__getset(0,__proto,'isOpenMasterResourceCard',function(){
		var deviationTime=TimeManager.Instance.checkTimeEndNum(this.allSpecialCardEndTimes[3]);
		return deviationTime > 0;
	});

	__getset(0,__proto,'trophy',function(){
		return this._trophy;
		},function(value){
		this._trophy=value;
		var currDivision=RankModel.getDivisionByTrophy(this._trophy);
		if(this.division>0){
			if(currDivision>this.division){
				this.isDivisonUp=true;
				this.isShowAreaChange=true;
				}else if(currDivision<this.division){
				this.isDivisonUp=false;
				this.isShowAreaChange=true;
				}else{
				this.isShowAreaChange=false;
			}
		}
		this.division=currDivision;
	});

	__getset(1,PlayerInfo,'instance',function(){return PlayerInfo._instance=PlayerInfo._instance|| new PlayerInfo();});
	PlayerInfo._instance=null;
	return PlayerInfo;
})()


/**
*玩家物品信息
*@author weiqiang.huang
*
*/
//class modules.player.data.PlayerItemInfo
var PlayerItemInfo=(function(){
	function PlayerItemInfo(){
		this.id=null;
		this.itemID=0;
		this.count=0;
		/**
		*过期时间
		*/
		this.expireTime=null;
		this.isLocked=false;
		this.index=0;
		/**
		*是否已分享
		*/
		this.isShared=false;
	}

	__class(PlayerItemInfo,'modules.player.data.PlayerItemInfo');
	return PlayerItemInfo;
})()


//class modules.player.data.PlayerWidgetData
var PlayerWidgetData=(function(){
	function PlayerWidgetData(){
		this.isHanleBtnEvent=true
		PlayerWidgetData._instance=this;}
	__class(PlayerWidgetData,'modules.player.data.PlayerWidgetData');
	__getset(1,PlayerWidgetData,'instance',function(){return PlayerWidgetData._instance=PlayerWidgetData._instance|| new PlayerWidgetData();});
	PlayerWidgetData._instance=null;
	return PlayerWidgetData;
})()


//class modules.player.FBPayMgr
var FBPayMgr=(function(){
	function FBPayMgr(){
		this._payList=null;
	}

	__class(FBPayMgr,'modules.player.FBPayMgr');
	var __proto=FBPayMgr.prototype;
	__proto.setup=function(){
		if(LayaEX.isFaceBook){
			this.getPayList();
		}
		SocketManager.Instance.on(0x0A00,this,this.onVerifyPay);
	}

	/**
	*拉取一次订单列表
	*/
	__proto.getPayList=function(){
		var _$this=this;
		if(!FBInterfaceMgr.ins.getIsOpenPay())return;
		if(this._payList)return;
		FBInterfaceMgr.ins.getCatalogAsync(Handler.create(this
		,function($list){
			var purchase;
			_$this._payList={};
			for (var i=0,len=$list.length;i < len;i++){
				purchase=$list[i];
				_$this._payList[purchase.productID]=purchase;
			}
		}));
	}

	/**
	*支付第一步,弹出支付界面
	*/
	__proto.purchaseAsync=function($shopId){
		var _$this=this;
		SocketManager.Instance.sendStringMsg('准备发起订单'+$shopId);
		FBInterfaceMgr.ins.purchaseAsync($shopId
		,Handler.create(this,function(purchase){
			SocketManager.Instance.sendStringMsg('支付API成功回调游戏:'+JSON.stringify(purchase));
			var obj=_$this._payList[purchase.productID];
			var priceCurrencyCode,price,purchaseToken=purchase.purchaseToken ,signedRequest=purchase.signedRequest;
			if(!obj){
				priceCurrencyCode="";
				price="0";
			}
			else {
				priceCurrencyCode=obj.priceCurrencyCode;
				price=obj.price;
			}
			SocketManager.Instance.sendStringMsg('向服务器发起:priceCurrencyCode'+priceCurrencyCode+', priceCurrencyCode:'+price+', purchaseToken:'+purchaseToken+', signedRequest:'+signedRequest);
			_$this.sendPayFB(priceCurrencyCode,price,purchaseToken,signedRequest);
		})
		,Handler.create(this,function(err){
			SocketManager.Instance.sendStringMsg('支付API失败回调游戏:'+err.message);
			console.log("付费失败:"+err.message);
			if (err.message !='User cancelled purchase'){
				TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368")
				,LanguageMgr.Ins.GetLan("14300353"));
			}
		}));
	}

	/**
	*支付第二步,接收服务器协议结果拉去玩家购买菜单
	*/
	__proto.onVerifyPay=function(pkg){
		var self=this;
		var msg=ProtoMgr.decode(com.road.ddt.proto.PlayerPayFBResultMsg,pkg);
		console.log("支付验证结果: "+msg.result+"   tokenId:"+msg.purchaseToken);
		SocketManager.Instance.sendStringMsg('服务器认证结果:'+msg.result+", tokenId:"+msg.purchaseToken);
		if(!LayaEX.isFaceBook)return;
		FBInterfaceMgr.ins.consumePurchaseAsync(msg.purchaseToken,Handler.create(this
		,function($msg){
			SocketManager.Instance.sendStringMsg('客户端扣除商品:'+msg.purchaseToken+', result:'+$msg.result);
			if($msg.result==1)
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002213"));
		},[msg]));
		if(msg.result !=1){
			TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368")
			,LanguageMgr.Ins.GetLan("14300353"));
		}
	}

	/**
	*使用掉所有的未使用订单
	*/
	__proto.useAllPurchase=function(){
		var _$this=this;
		if(!LayaEX.isFaceBook)return;
		FBInterfaceMgr.ins.getPurchasesAsync(Handler.create(this,
		function(list){
			if(list){
				var purchase,obj;
				for (var i=0,len=list.length;i < len;i++){
					purchase=list[i];
					obj=_$this._payList[purchase.productID];
					var priceCurrencyCode,price,purchaseToken=purchase.purchaseToken ,signedRequest=purchase.signedRequest;
					if(!obj){
						priceCurrencyCode="";
						price="0";
					}
					else {
						priceCurrencyCode=obj.priceCurrencyCode;
						price=obj.price;
					}
					_$this.sendPayFB(priceCurrencyCode,price,purchaseToken,signedRequest);
				}
			}
		}));
	}

	/**
	*发送消费订单给服务器
	*@param $moneyType :货币类型
	*@param $needMoney :所需价格
	*@param $purchaseToken :订单token跟signedRequest里的一样
	*@param $signedRequest :订单签名
	*/
	__proto.sendPayFB=function($moneyType,$needMoney,$purchaseToken,$signedRequest){
		var index=this.getNumIndex($needMoney);
		$needMoney=$needMoney.substr(index);
		SocketManager.Instance.out.sendPayFB($moneyType,$needMoney,$purchaseToken,$signedRequest);
	}

	/**
	*获取数字字符索引
	*@param $numStr
	*/
	__proto.getNumIndex=function($numStr){
		var index=0,sn=NaN
		for(var i=0,len=$numStr.length;i < len;i++){
			sn=Number($numStr.charAt(i));
			if(String(sn)!="NaN"){
				index=i;
				break ;
			}
		}
		return index;
	}

	__getset(1,FBPayMgr,'ins',function(){return FBPayMgr._ins;});
	__static(FBPayMgr,
	['_ins',function(){return this._ins=new FBPayMgr();}
	]);
	return FBPayMgr;
})()


//class modules.pve.consts.PveConst
var PveConst=(function(){
	function PveConst(){}
	__class(PveConst,'modules.pve.consts.PveConst');
	PveConst.EVENT_UPDATE_STAGE='EVENT_UPDATE_STAGE';
	PveConst.MAX_STAGE=50;
	return PveConst;
})()


//class modules.pve.data.PveInfo
var PveInfo=(function(){
	function PveInfo(){
		/**历史最高关卡*/
		this.recordStage=0;
		/**通关记录*/
		this.info=null;
		/**剩余次数*/
		this.count=0;
	}

	__class(PveInfo,'modules.pve.data.PveInfo');
	return PveInfo;
})()


//class modules.pve.data.PveStageInfo
var PveStageInfo=(function(){
	function PveStageInfo(stage){
		/**关卡*/
		this.stage=0;
		/**伤害值*/
		this.damage=0;
		/**通关时间(毫秒)*/
		this.time=0;
		/**回合数*/
		this.turn=0;
		this.isWin=false;
		this.stage=stage;
	}

	__class(PveStageInfo,'modules.pve.data.PveStageInfo');
	var __proto=PveStageInfo.prototype;
	__proto.update=function(msg){
		this.isWin=msg.win;
		msg.hasDamage && (this.damage=msg.damage);
		msg.hasTime && (this.time=msg.time);
		msg.hasTurn && (this.turn=msg.turn);
	}

	return PveStageInfo;
})()


/**
*PVP管理器
**/
//class modules.pvp.PvpMgr
var PvpMgr=(function(){
	function PvpMgr(){
		/**赛季开始时间 */
		this.startTime=0;
		this.endTime=0;
		/**第几赛季 */
		this.seasonNum=1;
		/**赛季结束时星星数 */
		this.starNum=1;
		/**是否要弹赛季结算 */
		this.showSeasonResult=false;
		/**赛季的排名信息列表 */
		this._rankArr=null;
		var self=this;
		SocketManager.Instance.on(0x009C,self,this.onSeasonInfo);
		SocketManager.Instance.on(0x009E,self,this.onSeasonResult);
		SocketManager.Instance.on(0x009D,self,this.onSeasonRank);
	}

	__class(PvpMgr,'modules.pvp.PvpMgr');
	var __proto=PvpMgr.prototype;
	__proto.onSeasonRank=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.SeasonHistoryRankMsg,pkg);
		this._rankArr=res.groupInfo;
		EventMgr.ins.event("recv_season_rank",[res]);
	}

	/**返回赛季奖励 */
	__proto.onSeasonResult=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.SeasonSettleMsg,pkg);
		this.seasonNum=res.seasonNum;
		if(this.seasonNum==-1)
			this.seasonNum=1;
		this.starNum=res.starNum;
		PlayerInfo.instance.division=res.division;
		PlayerInfo.instance.currentStar=res.starNum;
		if((SceneMgr.ins.curScene instanceof modules.hall.scene.HallMainScene )){
			UIMgr.ins.openView("SeasonResult");
			}else{
			this.showSeasonResult=true;
		}
	}

	__proto.onSeasonInfo=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.SeasonMsg,pkg);
		this.startTime=parseInt(res.startTime);
		this.endTime=parseInt(res.endTime);
		this.seasonNum=res.seasonNum;
		if(this.seasonNum==-1)
			this.seasonNum=1;
		EventMgr.ins.event("recv_season_info",[res]);
	}

	// }
	__proto.getUnlockSkill=function(divison){
		var arr=[];
		var vo=PVPModel.getPvpConfigByDivison(divison);
		if(vo){
			var skillstr=vo.SkillID.toString();
			if(skillstr.indexOf("|")==-1){
				if(skillstr !="")
					arr.push(skillstr);
				}else{
				arr=skillstr.split("|");
			}
		}
		return arr;
	}

	/**获得指定段位的地图 */
	__proto.getMap=function(divison){
		var str="";
		var vo=PVPModel.getPvpConfigByDivison(divison);
		if(vo){
			str=vo.SceneID;
		}
		return str;
	}

	/**获得指定段位的杯数 */
	__proto.getCup=function(divison){
		var str="0";
		var vo=PVPModel.getPvpConfigByDivison(divison);
		if(vo){
			str=vo.MinTrophy.toString();
		}
		return str;
	}

	__getset(0,__proto,'rankArr',function(){
		return this._rankArr;
	});

	__getset(1,PvpMgr,'ins',function(){
		if(PvpMgr._ins==null)
			PvpMgr._ins=new PvpMgr();
		return PvpMgr._ins;
	});

	PvpMgr._ins=null;
	return PvpMgr;
})()


//class modules.quest.data.QuestData
var QuestData=(function(){
	function QuestData(){
		/**
		*条件id转换条件对象
		*/
		this.conditionIdToData=null;
		/**
		*成就tip的数量
		*/
		this.tipsNum=0;
		/**
		*条件列表协议数据
		*/
		this.conditionListMsg=null;
		/**
		*排序函数
		*/
		this.fir=null;
		this.sec=null;
		/**
		*可领取按钮的数量
		*/
		this.availableBtnLength=null;
		/**
		*可领取奖励数量的显示id表
		*/
		this.availableDec=null;
		/**
		*提示队列
		*/
		this.tipsQueue=null;
		/**
		*成就显示数据
		*/
		this.achievementDisplayData=null;
		/**
		*任务显示数据
		*/
		this.taskDisplayData=null;
		/**
		*每日活跃度显示数据
		*/
		this.dailyActiveDisplayData=null;
		/**
		*每周活跃度显示数据
		*/
		this.weeklyActiveDisplayData=null;
		/**
		*推广活动显示数据
		*/
		this.promotionDisplayData=null;
		/**
		*本周活跃度
		*/
		this.playerWeekActive=0;
		/**
		*TargetScene 跳转列表字典
		*跳转的页面：
		*0.无跳转 1.主界面 2.公会聊天界面（未加入公会则是公会搜索界面）3.对战模式匹配界面 4.乱斗开房间界面 5.分享游戏界面 6.技能界面 7.公会发起友谊战界面（未加入公会则跳转至公会搜索）
		*8.商店购买宝箱界面 9.聊天-公会 界面 10.好友 11.商店粉钻兑换 12.跳转到特权界面
		*/
		this.targetSceneIdToViewType={
			0:function (){},
			1:function (){
				UIMgr.ins.closeView("Quest")
			},
			2:function (){
				EventMgr.ins.event("recv_QuestData",2);
			},
			3:function (){
				EventMgr.ins.event("recv_QuestData",3);
			},
			4:function (){
				EventMgr.ins.event("recv_QuestData",4);
			},
			5:function (){
				UIMgr.ins.openView("ShareGiftView")
			},
			6:function (){
				UIMgr.ins.openView("SkillSystem")
			},
			7:function (){
				EventMgr.ins.event("recv_QuestData",9);
			},
			8:function (){
				UIMgr.ins.openView("ShopView");
			},
			9:function (){
				EventMgr.ins.event("recv_QuestData",9);
			},
			10:function (){
				UIMgr.ins.openView("FriendsWindow")
			},
			11:function (){
				ShopMgr.ins.selectedIndex=2;
				UIMgr.ins.openView("ShopView");
			},
			12:function (){
				ShopMgr.ins.selectedIndex=ShopMgr.ins.IS_OPEN_PAY ? 4 :3;
				UIMgr.ins.openView("ShopView");
			}
		};
		this.questIdToData
		this.updateCacheList
		this.thi
		this.playerTodayActive
		QuestData._ins=this;
	}

	__class(QuestData,'modules.quest.data.QuestData');
	var __proto=QuestData.prototype;
	/**
	*数据重置初始化
	*/
	__proto.dataInit=function(){
		this.tipsNum=0
		this.tipsQueue=[]
		this.achievementDisplayData=[]
		this.taskDisplayData=[]
		this.dailyActiveDisplayData=[]
		this.weeklyActiveDisplayData=[]
		this.promotionDisplayData={}
		this.conditionIdToData={}
		this.questIdToData={}
		this.availableDec={}
		this.availableBtnLength=[0,0]
		this.getDisplayListData()
		this.getConditionIdToData()
	}

	__proto.getConditionIdToData=function(){
		var _$this=this;
		var conditionListModel=QuestConditionModel.allConfig;
		conditionListModel.forEach(function(data,index){
			var conditionId=data.ConditionId;
			var questId=data.QuestId;
			_$this.conditionIdToData[conditionId]=data;
			_$this.questIdToData[questId].ConditionList.push(conditionId);
		})
	}

	/**
	*更新处理
	*/
	__proto.updateConditionList=function(conditionList){
		var _$this=this;
		var msg=conditionList;
		var conditionId=msg.conditionId;
		var questId=this.conditionIdToData[conditionId].QuestId;
		var value1=msg.value1;
		var isGet=msg.isGet;
		var mValue1=this.conditionIdToData[conditionId].Value1;
		var type=this.questIdToData[questId].Type;
		var mValue1_=0
		if(type !=5){
			if(conditionId=='9201092')modules.quest.data.QuestData.instance.playerTodayActive=value1 <=100 ? value1 :100
				if(conditionId=='9201094')modules.quest.data.QuestData.instance.playerWeekActive=value1 <=600 ? value1 :600
			this.questIdToData[questId].ConditionList.forEach(function(conditionId_,index){
				if(questId=='9101010' && conditionId_!=conditionId)return;
				if(questId=='9101003' && conditionId_!=conditionId)return;
				if(!_$this.questIdToData[questId].ReceivedList[conditionId_]){
					mValue1_=_$this.conditionIdToData[conditionId_].Value1
					if(value1 > _$this.questIdToData[questId].ValueList[conditionId_]){
						_$this.questIdToData[questId].ValueList[conditionId_]=value1 > mValue1_ ? mValue1_ :value1;
					}
					if(value1 >=mValue1_){
						if((conditionId_==conditionId)&& isGet && _$this.questIdToData[questId].AvailableList[conditionId_]){
							_$this.questIdToData[questId].AvailableList[conditionId_]=false
							_$this.questIdToData[questId].ReceivedList[conditionId_]=true
							}else {
							if(!_$this.questIdToData[questId].AvailableList[conditionId_]){
								if(!_$this.availableDec[questId]){
									if(type !=1){
										_$this.availableBtnLength[1]++;
										}else {
										_$this.availableBtnLength[0]++;
									}
								}
								_$this.availableDec[questId]++
								_$this.questIdToData[questId].AvailableList[conditionId_]=true
								modules.quest.data.QuestData.instance.tipsQueue.push(conditionId_)
								EventMgr.ins.event("U_QUEST_MSG")
								EventMgr.ins.event("recv_QuestMsgNum")
							}
						}
					}
				}
			})
			this.sorting(type);
			EventMgr.ins.event("quest_item_update",[type]);
			}else {
			var canGet=value1 >=mValue1
			this.promotionDisplayData[conditionId]={
				conditionId:conditionId,
				value1:value1,
				isGet:isGet,
				mValue1:mValue1,
				canGet:canGet
			}
			if(canGet && !this.questIdToData[questId].AvailableList[conditionId]){
				this.questIdToData[questId].AvailableList[conditionId]=true
			}
		}
	}

	__proto.sorting=function(type){
		(type===void 0)&& (type=1);
		this.fir=[]
		this.sec=[]
		this.thi=[]
		if(type===1){
			this.achievementDisplayData.sort(function(a,b){
				if (a.sort>b.sort){
					return 1;
				}
				if (a.sort<b.sort){
					return-1;
				}
				return 0;
			});
			}else {
			this.taskDisplayData.sort(function(a,b){
				if (a.sort>b.sort){
					return 1;
				}
				if (a.sort<b.sort){
					return-1;
				}
				return 0;
			});
			var data=this.taskDisplayData.slice();
			if(!Browser.window.fbConfig.isOpenAds){
				for (var i=0;i < data.length;i++){
					if(data[i].QuestId==9102013){
						data.splice(i,1);
						break ;
					}
				}
			}
			this.taskDisplayData=data;
		}
	}

	/**
	*条件列表处理
	*/
	__proto.conditionListHandler=function(){
		var list=this.conditionListMsg.list.sort(function(a,b){
			if(a.conditionId>b.conditionId){
				return 1;
				}else {
				return-1;
			}
		})
		for(var i=0;i < list.length;i++){
			var msg=list[i];
			var conditionId=msg.conditionId;
			var questId=this.conditionIdToData[conditionId].QuestId;
			var value1=msg.value1;
			var isGet=msg.isGet;
			var mValue1=this.conditionIdToData[conditionId].Value1;
			var nextConditionId=this.conditionIdToData[conditionId].NextConditionId;
			var type=this.questIdToData[questId].Type
			if(type !=5){
				this.questIdToData[questId].ValueList[conditionId]=value1 > mValue1 ? mValue1 :value1;
				if(value1 >=mValue1){
					if(!isGet){
						this.questIdToData[questId].AvailableList[conditionId]=true
						if(!this.availableDec[questId]){
							if(type !=1){
								this.availableBtnLength[1]++;
								}else {
								this.availableBtnLength[0]++;
							}
						}
						this.availableDec[questId]++
						}else {
						this.questIdToData[questId].ReceivedList[conditionId]=true
					}
				}
				if(conditionId=='9201092')modules.quest.data.QuestData.instance.playerTodayActive=value1 <=100 ? value1 :100
					if(conditionId=='9201094')modules.quest.data.QuestData.instance.playerWeekActive=value1 <=600 ? value1 :600
				}else {
				var canGet=value1 >=mValue1
				this.promotionDisplayData[conditionId]={
					conditionId:conditionId,
					value1:value1,
					isGet:isGet,
					mValue1:mValue1,
					canGet:canGet
				}
				if(canGet && !this.questIdToData[questId].AvailableList[conditionId]){
					this.questIdToData[questId].AvailableList[conditionId]=true
				}
			}
		}
		this.sorting(1)
		this.sorting(2)
		EventMgr.ins.event("quest_list_update");
	}

	/**
	*获取显示列表数据
	*/
	__proto.getDisplayListData=function(){
		var _$this=this;
		var displayListModel=QuestModel.allConfig;
		displayListModel.forEach(function(data,index){
			data.AvailableList={};
			data.ReceivedList={};
			data.ConditionList=[];
			data.ValueList={};
			_$this.questIdToData[data.QuestId]=data;
			_$this.availableDec[data.QuestId]=0;
			switch(data.Type){
				case 1:
					_$this.achievementDisplayData.push(data);
					break ;
				case 2:
					_$this.taskDisplayData.push(data);
					break ;
				case 3:
					_$this.dailyActiveDisplayData.push(data);
					break ;
				case 4:
					_$this.weeklyActiveDisplayData.push(data);
					break ;
				}
		});
	}

	__getset(1,QuestData,'instance',function(){
		return QuestData._ins=QuestData._ins|| new QuestData()
	});

	QuestData.test={};
	QuestData._ins=null;
	return QuestData;
})()


//class modules.quest.events.QuestEvent
var QuestEvent=(function(){
	function QuestEvent(){}
	__class(QuestEvent,'modules.quest.events.QuestEvent');
	QuestEvent.QUEST_LIST_UPDATE="quest_list_update";
	QuestEvent.QUEST_ITEM_UPDATE="quest_item_update";
	return QuestEvent;
})()


//class modules.quest.QuestMgr
var QuestMgr=(function(){
	function QuestMgr(){
		this.msg=null;
		QuestMgr._ins=this }
	__class(QuestMgr,'modules.quest.QuestMgr');
	var __proto=QuestMgr.prototype;
	__proto.setup=function(){
		SocketManager.Instance.on(0x0076,this,this.onQuestCondition);
		SocketManager.Instance.on(0x0072,this,this.onQuestConditionList)
		SocketManager.Instance.on(0x0073,this,this.onQuestReward)
	}

	__proto.onGetGoodsViewComplete=function(flag,view){
		view.setData(this.msg,flag);
	}

	__proto.onQuestReward=function(pkg){
		this.msg=ProtoMgr.decode(com.road.ddt.proto.ActivityRewardMsg,pkg);
		var condtionId=this.msg.conditionId;
		var questId=QuestData.instance.conditionIdToData[condtionId]['QuestId'];
		var type=QuestData.instance.questIdToData[questId]['Type'];
		var flag={
			isFb:false,
			questExtraRewardView:false
		}
		if(type!=5){
			QuestData.instance.availableDec[questId]--
			if(!QuestData.instance.availableDec[questId]){
				if(type !=1){
					QuestData.instance.availableBtnLength[1]--;
					}else {
					QuestData.instance.availableBtnLength[0]--;
				}
			}
			if(type !=1){
				if(condtionId=='9201092'){
					flag.questExtraRewardView=true
				}
				}else {
				flag.isFb=true
			}
		}
		EventMgr.ins.event("recv_QuestMsgNum")
		UIMgr.ins.openView("ShowGetGoodsView",Handler.create(this,this.onGetGoodsViewComplete,[flag],false));
	}

	__proto.onQuestConditionList=function(pkg){
		QuestData.instance.dataInit()
		QuestData.instance.conditionListMsg=ProtoMgr.decode(com.road.ddt.proto.ActivityConditionListMsg,pkg);
		QuestData.instance.conditionListHandler()
	}

	__proto.onQuestCondition=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.ActivityConditionMsg,pkg);
		if(QuestData.instance.conditionListMsg){
			QuestData.instance.updateConditionList(res)
			}else {
			QuestData.instance.updateCacheList=[]
			QuestData.instance.updateCacheList.push(res)
		}
	}

	__getset(1,QuestMgr,'ins',function(){
		return QuestMgr._ins=QuestMgr._ins|| new QuestMgr()
	});

	QuestMgr._ins=null;
	return QuestMgr;
})()


//class modules.ranking.data.RankingInfo
var RankingInfo=(function(){
	function RankingInfo(){
		this.rank=0;
		this.imageUrl=null;
		this.playerId=null;
		this.nikeName=null;
		this.openId=null;
		this.guildName=null;
		this.guildIcon=0;
		this.guildId=null;
		this.trophy=0;
		this.wxname=null;
		this.type=0;
		this.playerState=0;
		this.change=0;
		this.friendState=0;
		this.score=0;
		this.vipLevel=0;
	}

	__class(RankingInfo,'modules.ranking.data.RankingInfo');
	return RankingInfo;
})()


//class modules.ranking.model.RankingModel
var RankingModel=(function(){
	function RankingModel(){
		this.allList=[];
		this.greenAll=[];
	}

	__class(RankingModel,'modules.ranking.model.RankingModel');
	var __proto=RankingModel.prototype;
	/**
	*根据类型获取列表
	*@param type（0:排位;1:射苹果）
	*@return
	*
	*/
	__proto.getTypeList=function(type){
		switch(type){
			case 0:
				return this.allList;
				break ;
			case 1:
				return this.greenAll;
				break ;
			}
		return [];
	}

	__proto.getMyRank=function(type){
		var arr=type==0 ? this.allList:this.greenAll;
		var len=arr.length;
		for(var i=0;i<len;i+=1){
			if(arr[i].playerId==PlayerInfo.instance.playerId){
				return i;
			}
		}
		return-1;
	}

	__proto.sortFunTropHy=function(a,b){
		if (a.trophy>b.trophy){
			return-1;
		}
		if (a.trophy<b.trophy){
			return 1;
		}
		return 0;
	}

	__proto.sortFunScore=function(a,b){
		if (a.score>b.score){
			return-1;
		}
		if (a.score<b.score){
			return 1;
		}
		return 0;
	}

	__getset(0,__proto,'myInfo',function(){
		var selfData=new RankingInfo;
		selfData.openId=PlayerInfo.instance.playerId
		selfData.nikeName=PlayerInfo.instance.nickName
		selfData.guildId=GuildMgr.ins.myGuildInfo ? GuildMgr.ins.myGuildInfo.guildIdStr :null;
		selfData.friendState=PlayerInfo.instance.friendState
		selfData.trophy=PlayerInfo.instance.trophy
		selfData.guildName=GuildMgr.ins.myGuildInfo ? GuildMgr.ins.myGuildInfo.guildName :null;
		selfData.change=0
		selfData.guildIcon=GuildMgr.ins.myGuildInfo ? GuildMgr.ins.myGuildInfo.iconID :null;
		selfData.imageUrl=PlayerInfo.instance.avatar;
		selfData.score=PlayerInfo.instance.appleGameScore;
		selfData.vipLevel=PlayerInfo.instance.vipLv;
		return selfData;
	});

	return RankingModel;
})()


//class modules.ranking.RankingMgr
var RankingMgr=(function(){
	function RankingMgr(){
		this._model=null;
		this.btnTribeClicked=false;
		this.isFristSendAll=false;
		this.isFristSendFriend=false;
		RankingMgr._ins=this;}
	__class(RankingMgr,'modules.ranking.RankingMgr');
	var __proto=RankingMgr.prototype;
	__proto.setup=function(){
		this._model=new RankingModel();
		SocketManager.Instance.on(0x0061,this,this.onRankingChange);
		SocketManager.Instance.on(0x005E,this,this.onPlayerOnlineState);
		SocketManager.Instance.on(0x006C,this,this.onPlayerRankingList);
		this.onRankingChange();
	}

	__proto.onPlayerRankingList=function(pkg){
		var rankingShowMsg=ProtoMgr.decode(com.road.ddt.proto.RankingShowMsg,pkg);
		var list=rankingShowMsg.rank.infos;
		var len=list.length;
		var type=rankingShowMsg.rank.type;
		var arr=[];
		for(var i=0;i<len;i+=1){
			var info=this.initRankingInfo(list[i]);
			info.type=type;
			arr.push(info);
		}
		switch(type){
			case 1:
				arr=arr.sort(this._model.sortFunTropHy);
				this._model.allList=arr;
				EventMgr.ins.event("update_playerAll_ranking");
				break ;
			case 4:
				arr=arr.sort(this._model.sortFunScore);
				this._model.greenAll=arr;
				EventMgr.ins.event("update_greenAll_ranking");
				break ;
			}
	}

	__proto.initRankingInfo=function(msg){
		var info=new RankingInfo();
		info.nikeName=msg.nickName;
		info.imageUrl=msg.headImage;
		info.playerId=msg.playerId;
		info.openId=msg.openId;
		info.guildId=msg.guildId;
		info.guildName=msg.guildName;
		info.guildIcon=msg.guildIcon;
		info.trophy=msg.trophy;
		info.change=msg.change;
		info.score=msg.score;
		info.vipLevel=msg.vipLevel;
		return info;
	}

	/**
	*通过类型请求排行榜数据
	*@param type
	*
	*/
	__proto.sendSeverRankInfo=function(type){
		if(type=="0")SocketManager.Instance.out.sendGetFriendList();
		else SocketManager.Instance.out.sendRankListRequest(type);
	}

	__proto.onPlayerOnlineState=function(pkg){
		var playerOnlineStateListMsg=ProtoMgr.decode(com.road.ddt.proto.PlayerOnlineStateListMsg,pkg);
		var onlineStates={};
		var len=playerOnlineStateListMsg.playerList.length
		for(var i=0;i<len;i++){
			var item=playerOnlineStateListMsg.playerList[i]
			onlineStates[item.playerID]=item.state
		}
		playerOnlineStateListMsg.type===2 && EventMgr.ins.event("update_friends_online_state",[onlineStates,1]);
		playerOnlineStateListMsg.type===5 && EventMgr.ins.event("update_friends_online_state",[onlineStates,3]);
	}

	__proto.onRankingChange=function(){
		this.sendSeverRankInfo('1');
		this.sendSeverRankInfo('4');
	}

	__getset(0,__proto,'model',function(){
		return this._model;
	});

	__getset(1,RankingMgr,'ins',function(){return RankingMgr._ins=RankingMgr._ins|| new RankingMgr();});
	RankingMgr._ins=null;
	return RankingMgr;
})()


//class modules.redDot.RedDotMgr
var RedDotMgr=(function(){
	function RedDotMgr(){
		this.dotType=null;
		this.hallDotData=null;
	}

	__class(RedDotMgr,'modules.redDot.RedDotMgr');
	var __proto=RedDotMgr.prototype;
	__proto.setup=function(){
		this.dotType=new Dictionary();
		this.hallDotData=new Dictionary();
		this.dotType.set("btn_activity",true);
		this.hallDotData.set("btn_recharge",true);
	}

	//获得相应红点的状态
	__proto.getDot=function(viewType){
		return this.dotType.get(viewType);
	}

	//更新红点状态
	__proto.updateRedDotStatus=function(viewType,visible){
		this.dotType.set(viewType,visible);
	}

	//判断大厅的活动按钮红点是否显示
	__proto.checkActivity=function(){
		for(var i=0;i < this.dotType.keys.length;i++){
			if(this.dotType.values[i])return true;
		}
		return false;
	}

	//更新大厅红点状态
	__proto.updateHallDotStatus=function(viewType,visible){
		this.hallDotData.set(viewType,visible);
	}

	//获取大厅红点状态
	__proto.getHallDot=function(viewType){
		return this.hallDotData.get(viewType);
	}

	__getset(1,RedDotMgr,'ins',function(){
		return RedDotMgr._ins=RedDotMgr._ins|| new RedDotMgr();
	});

	RedDotMgr._ins=null;
	return RedDotMgr;
})()


//class modules.room.data.RoomReturnInfo
var RoomReturnInfo=(function(){
	function RoomReturnInfo(battleType,campaignId,msg){
		this.roomId=null;
		this.matchServerId=0;
		this.battleType=0;
		this.campaignId=0;
		this.isLeader=false;
		this.initPos=1;
		this.roomId=msg.roomId;
		this.matchServerId=msg.matchServerId;
		this.battleType=battleType==1 ? 10 :battleType;
		this.campaignId=campaignId;
		this.isLeader=msg.isMaster;
		switch (battleType){
			case 1:{
					this.initPos=1;
					break ;
				}
			case 10:{
					this.initPos=2;
					break ;
				}
			case 3:{
					this.initPos=4;
					break ;
				}
			}
	}

	__class(RoomReturnInfo,'modules.room.data.RoomReturnInfo');
	return RoomReturnInfo;
})()


//class modules.room.RoomMgr
var RoomMgr=(function(){
	function RoomMgr(){
		this.friendList=[];
		this.roomPlayerList=[];
		this.matchServerId=0;
		this.battleRoomMsg=null;
		this.masterId=null;
		this.roomId=null;
		this.roomData={};
		this.friendIndex=20;
		this.inviteInfos=[];
		//BattleInviteInfoMsg;
		this.isAgain=false;
		this.teamId=null;
		this.isWaitOpenRoomType=-1;
		this.campaignId=-1;
		this.battleType=-1;
		this.returnRoomInfo=null;
		RoomMgr._ins=this;}
	__class(RoomMgr,'modules.room.RoomMgr');
	var __proto=RoomMgr.prototype;
	__proto.setup=function(){
		SocketManager.Instance.on(0x005B,this,this.recvRoomPlayerUpdate);
		SocketManager.Instance.on(0x005C,this,this.recvRoomPlayerList);
		SocketManager.Instance.on(0x0063,this,this.recvBattleInvite);
		SocketManager.Instance.on(0x0064,this,this.recvFriendList);
		SocketManager.Instance.on(0x0075,this,this.recvRoomPrepare);
		SocketManager.Instance.on(0x0077,this,this.roomStateInfo);
	}

	__proto.roomStateInfo=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleRoomSatateMsg,pkg);
		switch(res.state){
			case 0:
				TipsManager.Instance().showLanTips(9007413);
				break ;
			case 1:
				TipsManager.Instance().showLanTips(9007416);
				break ;
			case 2:
				TipsManager.Instance().showLanTips(9007415);
				break ;
			}
	}

	__proto.recvRoomPrepare=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleRoomPrepareMsg,pkg);
		for(var i=0;i < this.roomPlayerList.length;i++){
			var playerMsg=this.roomPlayerList[i];
			if(playerMsg.roomIndex==res.roomIndex){
				playerMsg.siteState=res.state;
			}
		}
		EventMgr.ins.event("recv_room_prepare",[res]);
	}

	__proto.recvFriendList=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleFriendInfosMsg,pkg);
		var len=res.info.length;
		this.friendList=[];
		for (var i=0;i < len;i++){
			var item=res.info [i];
			if(i==len-1){
				this.friendList.push(item);
				}else{
				if(item.openId !=res.info[i+1].openId){
					this.friendList.push(item);
				}
			}
		}
		EventMgr.ins.event("recv_room_friendlist");
	}

	__proto.createMulitPveRoom=function(campaignId){
		var msg=new com.road.ddt.proto.battle.BattleMatchMsg();
		msg.battleType=11;
		msg.campignId=campaignId;
		SocketManager.Instance.sendSocketData(0x2715,msg);
	}

	__proto.createRoom=function(){
		var msg=new com.road.ddt.proto.battle.BattleMatchMsg();
		msg.battleType=3;
		SocketManager.Instance.sendSocketData(0x2715,msg);
	}

	__proto.createPVPRoom=function(){
		var msg=new com.road.ddt.proto.battle.BattleMatchMsg();
		msg.battleType=10;
		SocketManager.Instance.sendSocketData(0x2715,msg);
	}

	__proto.enterGuideBattle=function(){
		var msg=new com.road.ddt.proto.battle.BattleMatchMsg();
		msg.battleType=2;
		SocketManager.Instance.sendSocketData(0x2715,msg);
	}

	__proto.enterNormalBattle=function(){
		var msg=new com.road.ddt.proto.battle.BattleMatchMsg();
		msg.battleType=1;
		SocketManager.Instance.sendSocketData(0x2715,msg);
	}

	__proto.requestFriendList=function(type){
		(type===void 0)&& (type=1);
		var list=[];
		var friengAry=[];
		if(PlayerInfo.instance.platid=="qq"){
			friengAry=modules.qqsdk.H5jssdkManager.instance.friengAry;
			}else{
			friengAry=JSMgr.instance.friengAry;
		}
		for(var i=0;i < friengAry.length;i++){
			var info=friengAry[i];
			list.push(info.openId);
		};
		var msg=new com.road.ddt.proto.battle.BattleFriendReqMsg();
		msg.id=list;
		msg.type=type;
		SocketManager.Instance.sendSocketData(0x274E,msg);
	}

	__proto.recvBattleInvite=function(pkg){
		var _$this=this;
		var res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleInviteInfoMsg,pkg);
		if(UIMgr.ins.getView("PVPRoomView")|| UIMgr.ins.getView("MulitPveRoomView")){
			console.log("在正房间中,忽略邀请请求");
			var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
			msg.opType=6;
			msg.param2=res.roomId;
			msg.param3=PlayerInfo.instance.nickName;
			msg.param4=res.matchServerId;
			SocketManager.Instance.sendSocketData(0x2745,msg);
			return;
		}
		res["inviteTime"]=Browser.now();
		this.inviteInfos.push(res);
		if((SceneMgr.ins.curScene instanceof modules.hall.scene.HallMainScene )){
			if(!UIMgr.ins.getView("RoomMainView")&& !NewGuideMgr.ins.isNewGuide){
				UIMgr.ins.openView("InviteDialog",Handler.create(this,function(view){
					view.init(_$this.inviteInfos);
				}));
			}
		}
	}

	// }
	__proto.enterRoom=function(roomId,matchServerId){
		if (SceneMgr.ins.curScene && !((SceneMgr.ins.curScene instanceof modules.hall.scene.HallMainScene ))){
			return;
		};
		var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
		msg.opType=5;
		msg.param2=roomId;
		msg.param4=matchServerId;
		SocketManager.Instance.sendSocketData(0x2745,msg);
	}

	__proto.checkReturnRoom=function(){
		if (this.returnRoomInfo && this.returnRoomInfo.roomId){
			this.returnRoom(this.returnRoomInfo);
			this.returnRoomInfo=null;
			return true;
		}
		return false;
	}

	__proto.returnRoom=function(returnRoomInfo){
		var msg=new com.road.ddt.proto.battle.BattleReturnRoomMsg();
		msg.roomId=returnRoomInfo.roomId;
		msg.matchServerId=returnRoomInfo.matchServerId;
		msg.battleType=returnRoomInfo.battleType;
		msg.campaignId=returnRoomInfo.campaignId;
		msg.isLeader=returnRoomInfo.isLeader;
		msg.initPos=returnRoomInfo.initPos;
		SocketManager.Instance.sendSocketData(0x2910,msg);
	}

	__proto.openPVPRoom=function(){
		if(!UIMgr.ins.getView("PVPRoomView")){
			UIMgr.ins.openView("PVPRoomView");
		}
	}

	__proto.openMulitPVERoom=function(){
		if(!UIMgr.ins.getView("MulitPveRoomView")){
			UIMgr.ins.openView("MulitPveRoomView");
		}
	}

	/**
	*
	*@param msg
	*@param isReplace false新增 true替换更新
	*
	*/
	__proto.syncRoomMsg=function(msg,isReplace){
		this.battleRoomMsg=msg;
		this.masterId=msg.masterId;
		this.roomId=msg.roomId;
		this.campaignId=msg.campaignId;
		this.battleType=msg.battleType;
		this.roomData[this.roomId]=this.masterId;
		var isHaveGuild=false;
		var flagRefreshGuildMembeiList=false;
		if(GuildMgr.ins.myGuildInfo !=null){
			var myGuildID=GuildMgr.ins.myGuildInfo.guildIdStr;
			isHaveGuild=true;
		}
		for(var i=0;i < msg.list.length;i++){
			var playerMsg=msg.list[i];
			if(isReplace){
				for(var j=this.roomPlayerList.length-1;j >=0;j--){
					var playerMsg2=this.roomPlayerList[j];
					if(playerMsg2.roomIndex==playerMsg.roomIndex){
						if (isHaveGuild && (!this.roomPlayerList[j].hasUserId || this.roomPlayerList[j].userId==null)){
							if (playerMsg.userId!=null){
								if (playerMsg.guildId==myGuildID){
									flagRefreshGuildMembeiList=true;
								}
							}
						}
						if(playerMsg.siteState==1 && (playerMsg2.siteState==2 || playerMsg2.siteState==3)){
							if (isHaveGuild){
								if (this.roomPlayerList[j].guildId==myGuildID){
									flagRefreshGuildMembeiList=true;
								}
							}
						}
						this.roomPlayerList[j]=playerMsg;
						console.log("playerMsg2.siteState:"+playerMsg2.siteState);
						if(playerMsg.siteState==1 && (playerMsg2.siteState==2 || playerMsg2.siteState==3)&& PlayerInfo.instance.playerId==playerMsg2.userId){
							LanguageMgr.Ins.GetLan(14300097);
							EventMgr.ins.event("ROOM_KICKED_OUT",playerMsg2.userId);
						}
						break ;
					}
				}
			}
			else{
				this.roomPlayerList.push(playerMsg);
			}
		}
		flagRefreshGuildMembeiList && GuildMgr.ins.requestGuildMemberList();
	}

	__proto.getRoomMasterId=function(roomId){
		if(this.roomData[roomId]){
			return this.roomData[roomId];
			}else{
			return null;
		}
	}

	__proto.recvRoomPlayerList=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleRoomMsg,pkg);
		this.roomPlayerList.splice(0);
		this.syncRoomMsg(res,false);
		this.matchServerId=res.matchServerId;
		if(res.battleType==3){
			var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
			msg.opType=1;
			msg.battleType=3;
			SocketManager.Instance.sendSocketData(0x2745,msg);
		}
		else if (res.battleType==11){
			if(SceneMgr.ins.isInSceneAndLoadOver(SceneType.HALL_MAIN_SCENE)){
				modules.room.RoomMgr.ins.openMulitPVERoom();
			}
			else{
				this.isWaitOpenRoomType=11;
			}
		}
		else{
			if(SceneMgr.ins.isInSceneAndLoadOver(SceneType.HALL_MAIN_SCENE)){
				modules.room.RoomMgr.ins.openPVPRoom();
			}
			else{
				this.isWaitOpenRoomType=10;
			}
		}
	}

	//等待大厅加载完成才打开
	__proto.recvRoomPlayerUpdate=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleRoomMsg,pkg);
		this.syncRoomMsg(res,true);
		EventMgr.ins.event("recv_room_playerupdate",[res]);
	}

	__proto.ismyFriend=function(id){
		var result=false;
		var item;
		for(var $each_item in this.friendList){
			item=this.friendList[$each_item];
			if(item.playerId.toString()==id){
				result=true;
				break ;
			}
		}
		return result;
	}

	__getset(1,RoomMgr,'ins',function(){return RoomMgr._ins=RoomMgr._ins|| new RoomMgr();});
	RoomMgr._ins=null;
	return RoomMgr;
})()


//class modules.room.view.event.RoomEvent
var RoomEvent=(function(){
	function RoomEvent(){}
	__class(RoomEvent,'modules.room.view.event.RoomEvent');
	RoomEvent.OpenPVPRoomInviteBox="OpenPVPRoomInviteBox";
	return RoomEvent;
})()


/**
*房间操作类型 对应接口 ePackageType.G_BATTLE_MATCH_ROOM_OP 0x2745;
*@author chengwen.yi
*
*/
//class modules.room.view.type.RoomOpType
var RoomOpType=(function(){
	function RoomOpType(){}
	__class(RoomOpType,'modules.room.view.type.RoomOpType');
	RoomOpType.START_MATCH=1;
	RoomOpType.LEAVE_ROOM=2;
	RoomOpType.KICK_PLAYER=3;
	RoomOpType.QUIT_MATCH=4;
	RoomOpType.ENTER_ROOM=5;
	RoomOpType.REFUSE_ROOM=6;
	RoomOpType.MATCH_PREPARE=7;
	RoomOpType.OPEN_SITE=8;
	RoomOpType.CLOSE_SITE=9;
	return RoomOpType;
})()


/**
*玩家场景
*@author shuhao.li
*/
//class modules.scene.consts.EnterSceneType
var EnterSceneType=(function(){
	function EnterSceneType(){}
	__class(EnterSceneType,'modules.scene.consts.EnterSceneType');
	EnterSceneType.SCENE_MAIN=1;
	EnterSceneType.BATTLE_SCENE=2;
	EnterSceneType.SWITCH_SCENE="SWITCH_SCENE";
	return EnterSceneType;
})()


//class modules.scene.consts.SceneType
var SceneType=(function(){
	function SceneType(){}
	__class(SceneType,'modules.scene.consts.SceneType');
	SceneType.getClassFullName=function(Cls){
		return Cls.__className;
	}

	__static(SceneType,
	['VS_SCENE',function(){return this.VS_SCENE=SceneType.getClassFullName(VSScene);},'CREATE_ROLE_SCENE',function(){return this.CREATE_ROLE_SCENE=SceneType.getClassFullName(CreateRoleScene);},'BATTLE_SCENE',function(){return this.BATTLE_SCENE=SceneType.getClassFullName(BattleScene);},'HALL_MAIN_SCENE',function(){return this.HALL_MAIN_SCENE=SceneType.getClassFullName(HallMainScene);},'LOGIN_SCENE',function(){return this.LOGIN_SCENE=SceneType.getClassFullName(LoginScene);},'AUTHORIZATION_SCENE',function(){return this.AUTHORIZATION_SCENE=SceneType.getClassFullName(AuthorizationScene);},'BREAK_SCENE',function(){return this.BREAK_SCENE=SceneType.getClassFullName(BreakScene);},'APPLE_GAME_SCENE',function(){return this.APPLE_GAME_SCENE=SceneType.getClassFullName(LocalBattleScene);}
	]);
	return SceneType;
})()


/**
*...场景管理器
*@author huyouwei
*/
//class modules.scene.SceneMgr
var SceneMgr=(function(){
	function SceneMgr(){
		this.sceneList=[];
		this.removeList=[];
		this.enterScene=null;
		this.curScene=null;
		this.cursceneId=0;
		this.hasSyncScene=false;
		this._lastTime=NaN;
		this._sceneCls={};
		Laya.timer.frameLoop(1,this,this.update);
	}

	__class(SceneMgr,'modules.scene.SceneMgr');
	var __proto=SceneMgr.prototype;
	__proto.setup=function(){
		SocketManager.Instance.on(0x0054,this,this.syncScene);
	}

	__proto.syncScene=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.PlayerSceneMsg,pkg);
		this.cursceneId=res.scene;
		this.hasSyncScene=true;
		if(LoginControl.instance.isLogin){
			this.sendHeadImgURl();
		}
		LoginControl.instance.inviteCheck();
		if(this.curScene){
			switch(this.curScene.sceneType){
				case SceneType.BREAK_SCENE:
					HallMgr.ins.show();
					break ;
				case SceneType.APPLE_GAME_SCENE:
					return;
					break ;
				case SceneType.LOGIN_SCENE:
				case SceneType.CREATE_ROLE_SCENE:
				case SceneType.AUTHORIZATION_SCENE:{
						if(this.cursceneId==1)
							LoginControl.instance.enterGame(PlayerInfo.instance.nickName);
						break ;
					}
				case SceneType.BATTLE_SCENE:{
						if (this.cursceneId==1)
							HallMgr.ins.show();
						break ;
					}
				case SceneType.HALL_MAIN_SCENE:
					break ;
				case SceneType.VS_SCENE:
					break ;
				}
			return;
		}
		else {
			if(this.cursceneId==1){
				HallMgr.ins.show();
			}
		}
	}

	// }
	__proto.sendHeadImgURl=function(){
		var headimgurl=PlayerInfo.instance.avatar;
		if(!headimgurl || headimgurl.indexOf("data:image/png;base64")!=-1){
			return;
		}
		SocketManager.Instance.out.sendPlayerAvatar(headimgurl,PlayerInfo.instance.qqNickName);
		if(UrlParam.PARAMS["PLID"] !="wx"){
			CanvasToBase64.toBase64Url(headimgurl,Handler.create(this,function(base64Url){
				PlayerInfo.instance.avatar=base64Url;
			}));
		}
	}

	__proto.update=function(){
		if(this.enterScene){
			if(this.removeList.length > 0){
				var scene
				for(var i=0;i < this.removeList.length;i++){
					scene=this.removeList[i];
					scene.hideScene();
					scene.exit();
					scene.removeSelf();
					scene.destroy(true);
					console.log("移除场景："+scene["constructor"].name);
				}
				this.removeList.length=0;
				UIMgr.ins.clearAllOpenViewRes();
				PlayerInfoMgr.ins.clearAllBase64Head();
				SoundMgr.instance.clearLastMusicRes();
				UIFactory.ins.clearAllSkeletons();
				LoaderResMgr.clearTextureAndParticleRes();
				LoaderResMgr.clearLanguageRes();
				ParticleTemplate2D.clearVertexBuffer();
				AtlasResourceManager.instance.freeAll();
				Resource.destroyImageUnusedResources();
				DrawText.clear();
				console.log("AniSkeleton 泄漏个数:"+AniSkeleton.createNum);
				console.log("HeroSkeleton 泄漏个数:"+HeroSkeleton.createNum);
				console.log("HeroShowSkeleton 泄漏个数:"+HeroShowSkeleton.createNum);
			}
			GC.triggerGC(1);
			console.log("切换场景："+this.enterScene["constructor"].name)
			if(this.enterScene["constructor"].name=="HallMainScene"){
				this.cursceneId=1
				}else{
				this.cursceneId=0;
			}
			Laya.stage.addChild(this.enterScene);
			this.enterScene.showScene();
			this.curScene=this.enterScene;
			EventMgr.ins.event("SWITCH_SCENE",this.curScene.sceneType);
			this.enterScene=null;
		}
		if(this.curScene==null)return;
		this.curScene.update();
	}

	/**
	*通过场景类型进入场景
	*@param sceneType
	*@param sceneData
	*@param needLoading
	*@return
	*/
	__proto.runWithSceneByType=function(sceneType,sceneData,needLoading){
		(needLoading===void 0)&& (needLoading=true);
		var self=this;
		if(this.sceneList.length > 0)
			this.removeList=this.removeList.concat(this.sceneList.splice(0));
		try {
			if (self._sceneCls[sceneType]==null){
				var views=sceneType.split('.');
				var root=Browser.window;
				while (views.length){
					root=root[views.shift()];
				}
				self._sceneCls[sceneType]=root;
			};
			var scene=new self._sceneCls[sceneType](sceneType,sceneData,needLoading);
			this.addScene(scene);
			this.enterScene=scene;
			return scene;
			}catch (error){
			console.log(error);
			CLog.error("Can't find scene define: "+sceneType);
			return null;
		}
	}

	/**
	*判断是否在当前场景
	*@param {string}$sceneType
	*@returns {boolean}
	*@memberof SceneMgr
	*/
	__proto.isInScene=function($sceneType){
		if (this.enterScene){
			return (this.enterScene.sceneType==$sceneType);
		}
		if (this.curScene){
			return (this.curScene.sceneType==$sceneType);
		}
		return false;
	}

	/**
	*判断是否在当前场景,并且当前场景资源已加载完成
	*@param $sceneType
	*@return
	*
	*/
	__proto.isInSceneAndLoadOver=function($sceneType){
		if (this.enterScene && this.enterScene.isLoadOver()){
			return (this.enterScene.sceneType==$sceneType);
		}
		if (this.curScene && this.curScene.isLoadOver()){
			return (this.curScene.sceneType==$sceneType);
		}
		return false;
	}

	/**
	*是否正在进入某个场景
	*@param {string}$sceneType
	*@returns {boolean}
	*@memberof SceneMgr
	*/
	__proto.isEnteringScene=function($sceneType){
		if (this.enterScene){
			return (this.enterScene.sceneType==$sceneType);
		}
		return false;
	}

	// }
	__proto.addScene=function(scene){
		if(this.sceneList.length <=0){
			this.sceneList.push(scene);
		}
		else{
			this.sceneList.splice(0,0,scene);
		}
	}

	__getset(1,SceneMgr,'ins',function(){
		if(SceneMgr._ins==null){
			SceneMgr._ins=new SceneMgr();
		}
		return SceneMgr._ins;
	});

	SceneMgr._ins=null;
	return SceneMgr;
})()


//class modules.setting.SettingMgr
var SettingMgr=(function(){
	function SettingMgr(){}
	__class(SettingMgr,'modules.setting.SettingMgr');
	var __proto=SettingMgr.prototype;
	__proto.setup=function(){}
	/**
	*是否接受好友验证信息
	*@param $index :0:接收所有 1：需要验证 2：拒绝所有
	*/
	__proto.sendSetFriendState=function($index){
		SocketManager.Instance.out.sendSetFriendState($index);
	}

	/**
	*游戏声音关闭
	*@param $isOpen
	*/
	__proto.sendUserSettingMusic=function($isOpen){
		SocketManager.Instance.out.sendUserSettingMusic($isOpen);
	}

	/**
	*游戏音效关闭
	*@param $isOpen
	*/
	__proto.sendUserSettingSound=function($isOpen){
		SocketManager.Instance.out.sendUserSettingSound($isOpen);
	}

	/**
	*弹幕接收开关
	*@param $isOpen
	*/
	__proto.sendUserSettingRecvBarrage=function($isOpen){
		SocketManager.Instance.out.sendUserSettingRecvBarrage($isOpen);
	}

	__getset(1,SettingMgr,'ins',function(){
		!SettingMgr._ins && (SettingMgr._ins=new SettingMgr());
		return SettingMgr._ins;
	});

	SettingMgr._ins=null;
	return SettingMgr;
})()


//class modules.sevenDayTarget.datas.RewardListItemData
var RewardListItemData=(function(){
	function RewardListItemData(item){
		/**物品Icon **/
		this.itemIcon=null;
		/**物品数量 **/
		this.count=0;
		this.itemVO=null;
		this.itemIcon=PathMgr.getItemIcon(item);
		this.count=item.Number;
		this.itemVO=item;
	}

	__class(RewardListItemData,'modules.sevenDayTarget.datas.RewardListItemData');
	return RewardListItemData;
})()


/**
*七日目标 目标数据
*@author rick.li
*/
//class modules.sevenDayTarget.datas.TargetListItemData
var TargetListItemData=(function(){
	function TargetListItemData(){
		/**ID **/
		this.id=null;
		/**七日目标类型 **/
		this.targetType=0;
		/**目标值 **/
		this.goalNum=0;
		/**哪天的目标 **/
		this.coalDay=0;
		/**目标发生的事件类型 **/
		this.evenType=0;
		/**目标描述 **/
		this.desc=null;
		/**奖励物品数据 **/
		this.rewardDatas=null;
		/**目标状态 0未开启 1前往 2未领取 3已领取 **/
		this.state=0;
		/**完成值 **/
		this.currentNum=0;
		/**对应languageId **/
		this.languageId=0;
	}

	__class(TargetListItemData,'modules.sevenDayTarget.datas.TargetListItemData');
	return TargetListItemData;
})()


//class modules.sevenDayTarget.datas.TargetListItemState
var TargetListItemState=(function(){
	function TargetListItemState(){}
	__class(TargetListItemState,'modules.sevenDayTarget.datas.TargetListItemState');
	TargetListItemState.GET_REWARD=0;
	TargetListItemState.JUMP_VIEW=1;
	TargetListItemState.HAD_GET_REWARD=2;
	TargetListItemState.UN_OPEN=3;
	return TargetListItemState;
})()


/**
*七日目标数据管理类
*@author rick.li
*/
//class modules.sevenDayTarget.SevenDayTargetMgr
var SevenDayTargetMgr=(function(){
	function SevenDayTargetMgr(){
		/**玩家第几天登陆,默认为第一天(0代表第一天)**/
		this.nowDay=0;
		/**目标到期时间**/
		this.freshTime=NaN;
		/**天数字符串语言ID**/
		this.daysArray=null;
		/**对应当某天已领取数量**/
		this.dayHadRewards=null;
		/**对应当某天可领取数量**/
		this.dayGetRewards=null;
		/**对应当某天可领取最大数量**/
		this.dayAllRewards=null;
		/**对应每天出现的目标标签类型**/
		this.dayTargetTypes=null;
		/**所有目标数据**/
		this.allSevenDayTargets=null;
		/**所有目标类型数据**/
		this.allSevenDayTargetTypes=null;
		/**标记模块是否开启**/
		this.isOpen=false;
		this.displayTargetList=null;
		/**单人副本开启等级**/
		this.singlePveMinNeedLevel=0;
		/**多人副本开启等级**/
		this.multiPveMinNeedLevel=0;
	}

	__class(SevenDayTargetMgr,'modules.sevenDayTarget.SevenDayTargetMgr');
	var __proto=SevenDayTargetMgr.prototype;
	__proto.setup=function(){
		this.initData();
		SocketManager.Instance.on(0x010E,this,this.updateSevenDayTargetData);
		SocketManager.Instance.on(0x010F,this,this.updateSevenDayTargetData_List);
		SocketManager.Instance.on(0x0110,this,this.updateSevenDayTargetRewards);
	}

	/**
	*初始化数据
	*/
	__proto.initData=function(){
		var _$this=this;
		this.singlePveMinNeedLevel=ConfigModel.getConfigData(1139).ConfigValue;
		this.multiPveMinNeedLevel=ConfigModel.getConfigData(1145).ConfigValue;
		this.allSevenDayTargets=[];
		this.allSevenDayTargetTypes=[];
		this.dayTargetTypes=[];
		this.dayGetRewards=[];
		this.dayHadRewards=[];
		this.dayAllRewards=[];
		this.isOpen=true;
		this.daysArray=["9070110","9070111","9070112","9070113","9070114","9070115","9070116"];
		for(var i=0;i < 7;i++){
			this.allSevenDayTargets[i]=[];
			this.dayTargetTypes[i]=[];
			this.dayGetRewards[i]=0;
			this.dayHadRewards[i]=0;
			this.dayAllRewards[i]=0;
		};
		var sevenDayTargetList=SevenDayTargetModel.allConfig;
		sevenDayTargetList.forEach(function(data,index){
			if(data.isOpen){
				_$this.allSevenDayTargetTypes.push(data);
				var existDayNums=data.existNum.split(",");
				for(var i=0;i < existDayNums.length;i++){
					var dayIndex=int(existDayNums[i])-1;
					_$this.dayTargetTypes[dayIndex].push(data);
				}
			}
		});
		for(i=0;i < this.dayTargetTypes.length;i++){
			this.dayTargetTypes[i].sort(function(a,b){
				return a.order-b.order;
			});
		}
		this.allSevenDayTargetTypes.sort(function(a,b){
			return a.order-b.order;
		});
		SevenDayTargetConditionModel.allConfig;
		for(i=0;i < this.allSevenDayTargets.length;i++){
			for(var j=0;j < this.allSevenDayTargetTypes.length;j++){
				var data=this.allSevenDayTargetTypes[j];
				this.allSevenDayTargets[i][data.type]=SevenDayTargetConditionModel.getDataByDayAndType(data.type,(i+1));
				this.allSevenDayTargets[i][data.type].sort(function(a,b){
					return a.order-b.order;
				});
			}
		}
	}

	/**
	*设置获取展示数据
	*/
	__proto.getDisplayData=function(dayIndex,tabIndex){
		this.displayTargetList=[];
		var typeVO=this.dayTargetTypes[dayIndex][tabIndex];
		if(!typeVO)return this.displayTargetList;
		var type=typeVO.type;
		var datas=this.allSevenDayTargets[dayIndex][type];
		if(!datas)return this.displayTargetList;
		for(var i=0;i < datas.length;i++){
			var data=new TargetListItemData();
			var item=datas[i];
			data.id=item.targetConditionId;
			data.targetType=item.targetType;
			data.goalNum=item.goalNum;
			data.coalDay=item.coalDay;
			data.evenType=item.evenType;
			data.rewardDatas=this.getRewardItemData(item.rewards);
			data.desc=item.desc;
			data.languageId=item.languageId;
			data.currentNum=item.currentNum;
			if(item.coalDay <=(this.nowDay+1)){
				if(!item.isOpen){
					data.state=TargetListItemState.UN_OPEN;
				}
				else {
					if(item.currentNum < item.goalNum){
						data.state=TargetListItemState.JUMP_VIEW;
					}
					else {
						if(item.isGet){
							data.state=TargetListItemState.HAD_GET_REWARD;
						}
						else {
							data.state=TargetListItemState.GET_REWARD;
						}
					}
				}
			}
			else {
				data.state=TargetListItemState.UN_OPEN;
			}
			this.displayTargetList.push(data);
		}
		this.displayTargetList.sort(function(a,b){
			return a.state-b.state;
		});
		return this.displayTargetList;
	}

	/**
	*单个七日目标更新
	*/
	__proto.updateSevenDayTargetData=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.DaysGoalDetailMsg,pkg);
		var conditionData=SevenDayTargetConditionModel.getDataByConditionId(res.conditionId);
		conditionData.currentNum=res.completeNum;
		conditionData.isGet=res.isGet;
		this.updateEveryDayRewards();
		EventMgr.ins.event("UPDATE_SEVEN_DAY_TARGET_VIEW");
		EventMgr.ins.event("ACTIVITY_SET_RED","btn_qirimubiao");
	}

	/**
	*批量七日目标更新
	*/
	__proto.updateSevenDayTargetData_List=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.SevenDaysGoalMsgList,pkg);
		this.freshTime=parseInt(res.endTime);
		this.nowDay=res.loginDay <=0 ? 0 :res.loginDay-1;
		this.isOpen=res.isHasSevenDaysGoal;
		if(this.nowDay >=7){
			this.isOpen=false;
		}
		this.openState=this.isOpen;
		for(var i=0,len=res.list.length;i < len;i++){
			var data=res.list[i];
			var conditionData=SevenDayTargetConditionModel.getDataByConditionId(data.conditionId);
			conditionData.currentNum=data.completeNum;
			conditionData.isGet=data.isGet;
		}
		this.updateEveryDayRewards();
		EventMgr.ins.event("UPDATE_SEVEN_DAY_TARGET_VIEW");
		EventMgr.ins.event("ACTIVITY_SET_RED","btn_qirimubiao");
	}

	__proto.onGetGoodsViewComplete=function(flag,msg,view){
		view.setData(msg,flag);
	}

	/**
	*领取信息更新
	*/
	__proto.updateSevenDayTargetRewards=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.ActivityRewardMsg,pkg);
		var conditionData=SevenDayTargetConditionModel.getDataByConditionId(res.conditionId);
		conditionData.isGet=true;
		var flag={
			isFb:false,
			questExtraRewardView:false
		}
		this.updateEveryDayRewards();
		EventMgr.ins.event("UPDATE_SEVEN_DAY_TARGET_VIEW");
		EventMgr.ins.event("ACTIVITY_SET_RED","btn_qirimubiao");
		UIMgr.ins.openView("ShowGetGoodsView",Handler.create(this,this.onGetGoodsViewComplete,[flag,res],false));
	}

	/**
	*更新每天未领取次数,已领取次数和总领取次数
	*/
	__proto.updateEveryDayRewards=function(){
		for(var i=0;i < 7;i++){
			this.dayGetRewards[i]=0;
			this.dayHadRewards[i]=0;
			this.dayAllRewards[i]=0;
			if(i <=this.nowDay){
				var datas=SevenDayTargetConditionModel.getDataByDay(i);
				if(!datas)continue ;
				for(var j=0;j < datas.length;j++){
					var data=datas[j];
					if(data.isOpen){
						this.dayAllRewards[i]++;
						if(data.isGet){
							this.dayHadRewards[i]++;
						}
						else if(data.currentNum >=data.goalNum){
							this.dayGetRewards[i]++;
						}
					}
				}
			}
		}
	}

	__proto.TargetEvents=function(dayIndex){
		var str="";
		if(dayIndex >=7){
			return str;
		}
		for(var i=0,len=this.dayTargetTypes[dayIndex].length;i < len;i++){
			var item=this.dayTargetTypes[dayIndex][i];
			str=str+LanguageMgr.Ins.GetLan(item.languageId);
			if(i !=(len-1)){
				str=str+",";
			}
		}
		return str;
	}

	/**
	*检测七日目标模块是否开启
	*/
	__proto.checkModeOpen=function(){
		return this.isOpen;
	}

	/**
	*检测七日目标主界面入口是否显示红点
	*/
	__proto.checkIconRedPoint=function(){
		for(var i=0;i < 7;i++){
			if(this.dayGetRewards[i] > 0){
				return true;
			}
		}
		return false;
	}

	/**
	*检测天数红点是否显示
	*/
	__proto.checkDayRedPoint=function(dayIndex){
		if(this.dayGetRewards[dayIndex] > 0){
			return true;
		}
		return false;
	}

	/**
	*检测天数全部领取标识是否显示
	*/
	__proto.checkDayAllGetedSymbol=function(dayIndex){
		if(this.dayHadRewards[dayIndex] > 0){
			if(this.dayHadRewards[dayIndex] >=this.dayAllRewards[dayIndex]){
				return true;
			}
		}
		return false;
	}

	/**
	*解析奖励物品字符串
	*/
	__proto.getRewardItemData=function(itemsStr){
		var datas=[];
		var rewardsStr=itemsStr;
		var rewardsArr=rewardsStr.split(',');
		var rewardsCount=rewardsArr.length;
		for (var i=0;i < rewardsCount;i++){
			var rewardArr=rewardsArr[i].split('|')
			var rewardId=rewardArr[0] *1;
			var rewardNum=rewardArr[1] *1;
			var item=ItemModel.getItemConfigData(rewardId)
			item.Number=rewardNum ? rewardNum :0;
			var rewardListItemData=new RewardListItemData(item);
			datas.push(rewardListItemData);
		}
		return datas;
	}

	/**根据事件类型跳转界面**/
	__proto.jumpViewByEventType=function(type){
		switch(type){
			case 31:
			case 39:
			case 56:
			case 58:
			case 59:
			case 60:
			case 63:
				RoomMgr.ins.createPVPRoom();
				UIMgr.ins.closeView("SevenDayTargetView");
				break ;
			case 53:
				if(PlayerInfo.instance.grade >=this.singlePveMinNeedLevel){
					UIMgr.ins.openView("PveRoomView");
					UIMgr.ins.closeView("SevenDayTargetView");
				}
				else {
					TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9001202"));
				}
				break ;
			case 54:
				UIMgr.ins.openView("ShopView");
				UIMgr.ins.closeView("SevenDayTargetView");
				break ;
			case 57:
				if(PlayerInfo.instance.grade >=this.multiPveMinNeedLevel){
					UIMgr.ins.openView("MulitPveSelectView");
					UIMgr.ins.closeView("SevenDayTargetView");
				}
				else {
					TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9001202"));
				}
				break ;
			case 55:
			case 28:
				UIMgr.ins.openView("SkillSystem");
				UIMgr.ins.closeView("SevenDayTargetView");
				break ;
			}
	}

	__getset(0,__proto,'DaysArray',function(){
		return this.daysArray;
	});

	__getset(0,__proto,'NowDay',function(){
		return this.nowDay;
	});

	__getset(0,__proto,'refreshTime',function(){
		var synTime=TimeManager.Instance.synTime;
		return (this.freshTime-synTime)/1000;
	});

	__getset(0,__proto,'DisplayTargetList',function(){
		return this.displayTargetList;
	});

	__getset(0,__proto,'openState',null,function(value){
		this.isOpen=value;
		if (!value)
			EventMgr.ins.event("UPDATE_QUESTIONVIEW");
	});

	__getset(1,SevenDayTargetMgr,'ins',function(){
		return SevenDayTargetMgr._ins;
	});

	__static(SevenDayTargetMgr,
	['_ins',function(){return this._ins=new SevenDayTargetMgr();}
	]);
	return SevenDayTargetMgr;
})()


//class modules.share.data.ShareConst
var ShareConst=(function(){
	function ShareConst(){}
	__class(ShareConst,'modules.share.data.ShareConst');
	ShareConst.CARD=1;
	ShareConst.NEW_CARD=2;
	ShareConst.SKILL_LEVEL_UP=3;
	ShareConst.ONE_VS=4;
	ShareConst.ACHIEVE=5;
	ShareConst.ACTIVE_FULL=6;
	ShareConst.ONLINE=7;
	ShareConst.APPLE_GAME_SHARED=8;
	ShareConst.INVITE_FRIEND=9;
	ShareConst.APPLEGAME_INVITE=10;
	ShareConst.MELEE_INVITE=11;
	ShareConst.PVE_SETTLE=12;
	ShareConst.SKILL_GROUP=13;
	ShareConst.DIVIDE_UP=14;
	ShareConst.SEASON_SETTLE=15;
	ShareConst.SEASON_RANK_SETTLE=16;
	ShareConst.LEVEL_UP=17;
	ShareConst.OVERSTEP_FRIEND=18;
	ShareConst.CHEST=19;
	ShareConst.FRIENDSHIP_UP=20;
	ShareConst.MELEE_SETTLE=21;
	ShareConst.FRIEND_ASK_ITEM=22;
	ShareConst.SHARE_LOTTERY=23;
	ShareConst.PVP_ROOM_INVITE=24;
	ShareConst.PVE=25;
	ShareConst.SHARE_BUTTON=26;
	ShareConst.SHARE_INVITE=27;
	ShareConst.PAY_INVITE=28;
	return ShareConst;
})()


/**
*分享连接参数对象
**/
//class modules.share.data.ShareLinkParam
var ShareLinkParam=(function(){
	function ShareLinkParam(){
		/**
		*分享人的openid
		*/
		this.shareOpenId="";
		/**
		*分享人的userid
		*/
		this.shareUserId="";
		/**
		*分享id
		*/
		this.shareId=0;
		/**
		*分享site
		*/
		this.shareSite="";
		this.nowType=0;
		//最新执行的解析场景类型
		this.invitePId="";
		this.requestPId="";
		this.executePId="";
		this.shareCardId="";
		this.roomId="";
		this.matchServerId="";
		this.invitePayId="";
		this.campaignId="";
	}

	__class(ShareLinkParam,'modules.share.data.ShareLinkParam');
	return ShareLinkParam;
})()


//class modules.share.data.ShareParmaNameConst
var ShareParmaNameConst=(function(){
	function ShareParmaNameConst(){}
	__class(ShareParmaNameConst,'modules.share.data.ShareParmaNameConst');
	ShareParmaNameConst.shareOpenId="shareOpenId";
	ShareParmaNameConst.shareId="shareId";
	ShareParmaNameConst.shareUserId="shareUserId";
	return ShareParmaNameConst;
})()


//class modules.share.data.ShareUserInfoVo
var ShareUserInfoVo=(function(){
	function ShareUserInfoVo(){
		this.type=0;
		this.count=0;
		this.param=null;
	}

	__class(ShareUserInfoVo,'modules.share.data.ShareUserInfoVo');
	return ShareUserInfoVo;
})()


//class modules.share.events.ShareEvent
var ShareEvent=(function(){
	function ShareEvent(){}
	__class(ShareEvent,'modules.share.events.ShareEvent');
	ShareEvent.SHARE_BREAK_TO_VIEW="SHARE_BREAK_TO_VIEW";
	ShareEvent.SHARE="SHARE";
	return ShareEvent;
})()


/**
*分享数据层 负责数据的操作
**/
//class modules.share.model.ShareModel
var ShareModel=(function(){
	function ShareModel(){
		/**保存不同类型的分享数据{type:[ShareInfoVo,ShareInfoVo,ShareInfoVo]}*/
		this._shareInfoList={};
		/**保存用户分享记录 */
		this._shareUserInfo=[];
	}

	__class(ShareModel,'modules.share.model.ShareModel');
	var __proto=ShareModel.prototype;
	/**
	*设置 用户分享记录数据
	*@parma msg:ShareUserInfosMsg
	*/
	__proto.setShareUserInfo=function(msg){
		this._shareUserInfo=[];
		if(msg.shareUserInfo){
			var len=msg.shareUserInfo.length;
			var vo;
			for(var i=0;i<len;i+=1){
				vo=new ShareUserInfoVo;
				vo.type=msg.shareUserInfo[i].type;
				vo.count=msg.shareUserInfo[i].count;
				vo.param=msg.shareUserInfo[i].param;
				this._shareUserInfo.push(vo);
			}
		}
	}

	/**
	*更新 用户分享记录
	*@parma msg:ShareUserInfosMsg
	*/
	__proto.updateShareUserInfo=function(msg){
		if (msg.shareUserInfo){
			var len=this._shareUserInfo.length;
			for (var i=0;i < len;i++){
				if(this._shareUserInfo[i].type==msg.shareUserInfo.type){
					this._shareUserInfo[i].count=msg.shareUserInfo.count;
					this._shareUserInfo[i].param=msg.shareUserInfo.param;
					break ;
				}
			}
		}
	}

	/**
	*得到一个分享数据（列表里面有多个数据的话，并且随机一个）
	*@param type
	*@return
	*/
	__proto.getShareInfoByType=function(type){
		if(!this._shareInfoList)return null;
		var list=this._shareInfoList[type];
		if (!list){
			list=ShareModel.getConfigBySceneType(type);
		}
		if (list){
			var key=(Math.floor(Math.random()*(list.length-1-0+1))+0);
			return list [key];
		}
		return null;
	}

	/**
	*得到一个分享数据（列表里面有多个数据的话，并且随机一个）
	*@param type
	*@return
	*/
	__proto.getShareInfoByShareId=function(id){
		var list;
		var key;
		for(var $each_key in this._shareInfoList){
			key=this._shareInfoList[$each_key];
			list=this._shareInfoList[key];
			for (var i=0,len=list.length;i < len;i++){
				if(list[i].shareId==id)return list[i];
			}
		}
		return ShareModel.getConfigById(id);
	}

	__proto.getShareUserInfoByType=function(type){
		if(this._shareUserInfo !=null){
			var info;
			for(var $each_info in this._shareUserInfo){
				info=this._shareUserInfo[$each_info];
				if(info.type==type){
					return info;
				}
			}
		}
		return null;
	}

	/**
	*添加一个分享信息 添加前会判断是否已经存在
	*/
	__proto.addShareInfoItem=function(vo){
		if(!this._shareInfoList[vo.sceneType]){
			this._shareInfoList[vo.sceneType]=ShareModel.getConfigBySceneType(vo.sceneType);
		};
		var arr=this._shareInfoList[vo.sceneType];
		var isexit=false;
		var info;
		for(var $each_info in arr){
			info=arr[$each_info];
			if (info.shareId==vo.shareId){
				isexit=true;
				break ;
			}
		}
		if (!isexit){
			this._shareInfoList[vo.sceneType].push(vo);
		}
	}

	/**
	*删除一条分享数据
	*/
	__proto.deleteShareInfoItem=function(sceneType,shareId){
		var arr=this._shareInfoList[sceneType];
		for(var j=0;j<arr.length;j+=1){
			if(arr[j].shareId==shareId){
				arr.splice(j,1);
				j--;
			}
		}
	}

	__getset(0,__proto,'shareUserInfo',function(){
		return this._shareUserInfo;
	});

	/**Config配置列表的所有数据*/
	__getset(1,ShareModel,'allConfig',function(){
		if (!ShareModel._allConfig){
			ShareModel.parset_s_config();
		}
		return ShareModel._allConfig;
	});

	ShareModel.parset_s_config=function(){
		ShareModel._allConfig={};
		ShareModel._dict={};
		var arr=ConfigMgr.getJsonConfigByName("t_s_share");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItem=new ShareInfoVO();
			configItem.shareId=item.ShareId;
			configItem.sceneType=item.SceneType;
			configItem.titleStr=item.Title;
			configItem.imageURL=item.ImageUrl;ShareModel._allConfig[configItem.sceneType]=ShareModel._allConfig[configItem.sceneType]|| [];
			ShareModel._allConfig[configItem.sceneType].push(configItem);
			ShareModel._dict[configItem.shareId]=configItem;
		}
	}

	ShareModel.getConfigBySceneType=function(sceneType){
		ShareModel.allConfig;
		return ShareModel._allConfig[sceneType];
	}

	ShareModel.getConfigById=function(shareId){
		ShareModel.allConfig;
		return ShareModel._dict[shareId];
	}

	ShareModel._allConfig=null;
	ShareModel._dict=null;
	return ShareModel;
})()


//class modules.share.ShareControl
var ShareControl=(function(){
	function ShareControl(){
		this._query={};
		this._shareParam=null;
	}

	__class(ShareControl,'modules.share.ShareControl');
	var __proto=ShareControl.prototype;
	/**
	*执行最后一个解析数据的分享逻辑
	*/
	__proto.runShareNowHandler=function(){
		this.runShareHandle(this.shareLinkParam.nowType);
	}

	/**
	*执行指定类型的分享逻辑
	*@param scenesType
	*/
	__proto.runShareHandle=function($type){
		switch ($type){
			case ShareConst.INVITE_FRIEND:{
					FriendsMgr.ins.sendAddFriend(this._shareParam.invitePId);
					break ;
				}
			case ShareConst.FRIEND_ASK_ITEM:{
					var requestPId=this._shareParam.requestPId;
					var executePId=this._shareParam.executePId;
					if (executePId==PlayerInfo.instance.playerId){
						FriendsMgr.ins.sendPlayerOperate(requestPId,2);
					}
					break ;
				}
			case ShareConst.CARD:{
					var skillID=parseInt(this._shareParam.shareCardId);
					ShareGiftMgr.ins.sendGiftMsg(2,skillID,this._shareParam.shareUserId);
					break ;
				}
			case ShareConst.PVP_ROOM_INVITE:{
					var joinRoomId=this._shareParam.roomId;
					var matchServerId=parseInt(this._shareParam.matchServerId);
					var campaignId=parseInt(this._shareParam.campaignId);
					console.log("通过2V2房间邀请链接进入游戏",joinRoomId);
					if (RoomMgr.ins.isWaitOpenRoomType !=-1)return;
					if (!NewGuideMgr.ins.isNewGuide){
						if(campaignId > 0){
							if (CampaignMgr.ins.checkCampaignEnable(campaignId)){
								RoomMgr.ins.enterRoom(joinRoomId,matchServerId);
								}else {
								TipsManager.Instance().showLanTips(14300174);
							}
							}else{
							RoomMgr.ins.enterRoom(joinRoomId,matchServerId);
						}
					}
					else{
						console.log("玩家处于新手阶段，跳过好友房间邀请,房间号:"+joinRoomId);
					}
					break ;
				}
			case ShareConst.PAY_INVITE:{
					var invitePayId=this._shareParam.invitePayId;
					InvitePayMgr.ins.sendInvitePay(invitePayId);
					break ;
				}
			}
	}

	/**
	*解析参数
	*@param scenesType
	*@param paramData
	*/
	__proto.resolveParamByType=function($type,$paramData){
		if (!this._shareParam){
			this._shareParam=new ShareLinkParam();
		}
		this._shareParam.nowType=$type;
		this._shareParam.shareOpenId=$paramData["shareOpenId"];
		this._shareParam.shareUserId=$paramData["shareUserId"];
		this._shareParam.shareId=$paramData["shareId"];
		this._shareParam.shareSite=$paramData["shareSite"];
		switch ($type){
			case ShareConst.INVITE_FRIEND:{
					this._shareParam.invitePId=$paramData["invitePId"];
					break ;
				}
			case ShareConst.FRIEND_ASK_ITEM:{
					this._shareParam.requestPId=$paramData["requestPId"];
					this._shareParam.executePId=$paramData["executePId"];
					break ;
				}
			case ShareConst.CARD:{
					this._shareParam.shareCardId=$paramData["shareCardId"];
					break ;
				}
			case ShareConst.PVP_ROOM_INVITE:{
					this._shareParam.roomId=$paramData["roomId"];
					this._shareParam.matchServerId=$paramData["matchServerId"];
					this._shareParam.campaignId=$paramData["campaignId"];
					break ;
				}
			case ShareConst.PAY_INVITE:{
					this._shareParam.invitePayId=$paramData["invitePayId"];
					break ;
				}
			}
	}

	__proto.resolveParam=function(){
		var str=this._query["shareId"]==undefined ? "" :this._query["shareId"];
		if (str=="" || str==null)
			return;
		var shareId=parseInt(str);
		var shareType=parseInt(this._query["shareType"])==0 ? 0 :parseInt(this._query["shareType"]);
		this.resolveParamByType(shareType,this._query);
	}

	__proto.resolveQuery=function($query){
		this.clearShare();
		for (var str in $query){
			this._query[str]=$query[str];
		}
		this.resolveParam();
	}

	__proto.clearShare=function(){
		this._query={};
		this._shareParam=null;
	}

	__getset(0,__proto,'shareLinkParam',function(){
		if (!this._shareParam){
			this._shareParam=new ShareLinkParam();
		}
		return this._shareParam;
	});

	__getset(1,ShareControl,'ins',function(){
		return ShareControl._ins=ShareControl._ins|| new ShareControl();
	});

	ShareControl._ins=null;
	return ShareControl;
})()


/**
*分享管理类
*@author baohua.chen
*
*/
//class modules.share.ShareMgr
var ShareMgr=(function(){
	function ShareMgr(){
		this._model=null;
		this._currentPara=null;
		this._currInfo=null;
		this._model=new ShareModel();
	}

	__class(ShareMgr,'modules.share.ShareMgr');
	var __proto=ShareMgr.prototype;
	__proto.setup=function(){
		SocketManager.Instance.on(0x0080,this,this.onShareResponse);
		SocketManager.Instance.on(0x0081,this,this.onShareInfos);
		SocketManager.Instance.on(0x00A5,this,this.onShareInfoGMList);
		EventMgr.ins.on("SHARE",this,this.onShare);
	}

	__proto.onShare=function(param){
		if ((param instanceof Array)){
			var type=param[0];
			var obj=param[1];
			this.shareToMsg(type,obj);
			}else if(((typeof param=='number')&& Math.floor(param)==param)){
			this.shareToMsg(param);
		}
	}

	__proto.onShareInfoGMList=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.ShareListMsg,pkg);
		var len=res.share.length;
		var type=res.opTyep;
		var vo;
		var shareId=0;
		var sceneType=0;
		for(var i=0;i<len;i+=1){
			shareId=res.share[i].shareId;
			sceneType=res.share[i].sceneType;
			if(type==2){
				this._model.deleteShareInfoItem(sceneType,shareId);
				}else{
				vo=new ShareInfoVO;
				vo.shareId=shareId;
				vo.sceneType=sceneType;
				vo.titleStr=res.share[i].title;
				vo.imageURL=res.share[i].imageUrl;
				this._model.addShareInfoItem(vo);
			}
		}
	}

	/**
	*用户分享记录 玩家初始化时发的
	*/
	__proto.onShareInfos=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.ShareUserInfosMsg,pkg);
		this._model.setShareUserInfo(res);
		EventMgr.ins.event("UPDATE_SHARE_RESPONSE");
	}

	/**
	*分享结果
	*/
	__proto.onShareResponse=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.ShareResponseMsg,pkg);
		if(UrlParam.PARAMS["PLID"]=="fb"){
			this._model.updateShareUserInfo(res);
			EventMgr.ins.event("UPDATE_SHARE_RESPONSE",res);
		}
		if(res.result==0){
			this._model.updateShareUserInfo(res);
			EventMgr.ins.event("UPDATE_SHARE_RESPONSE",res);
		}
	}

	/**
	*查找单条分享数据
	*/
	__proto.checkShareInfo=function(type){
		return this._model.getShareUserInfoByType(type);
	}

	/**
	*调用分享(不要直接调用此方法,应该调用 ShareCallMgr.shareToMsg )
	*@param type :(类型是ShareConst里面的）
	*@param obj :（参数）
	*/
	__proto.shareToMsg=function(type,obj){
		if(!this._model)return;
		this._currentPara=obj;
		var info=this._model.getShareInfoByType(type);
		if(!info)return;
		var pathURL="shareOpenId"+"="+PlayerInfo.instance.openid+"&"+"shareId"+"="+info.shareId+"&"+"shareUserId"+"="+PlayerInfo.instance.playerId+"&shareType="+info.sceneType+"&shareSite="+PlayerInfo.instance.platid+LoginControl.instance.PlatId;
		var addPath="";
		if(this._currentPara){
			addPath=this._currentPara.addPath?this._currentPara.addPath:"";
		}
		info.pathURL=pathURL+addPath;
		this._currInfo=info;
		if(this._currentPara){
			if(this._currentPara["imgURL"] && this._currentPara.imgURL!=""){
				this._currInfo.imageURL=this._currentPara.imgURL;
			}
			if(this._currentPara["titleStr"] && this._currentPara.titleStr!=""){
				this._currInfo.titleStr=this._currentPara.titleStr;
			}
		}
		if(LayaEX.isWXAPP){
			modules.share.ShareMgr.ins.shareMsgToWX(this._currInfo);
			}else if(LayaEX.isTest){
			var host=Browser.window.location.href;
			var arr=host.split('?');
			this.shareBreak(true);
			Browser.window.prompt("Copy to clipboard: Ctrl+C, Enter",arr[0]+'?'+info.pathURL);
			}else if(LayaEX.isFaceBook){
			modules.share.ShareMgr.ins.shareMsgToFB(this._currInfo);
		}
	}

	/**
	*分享消息给微信
	*@param info
	*
	*/
	__proto.shareMsgToWX=function(info){
		if (!info)
			return;
		var imageUrl;
		if (info.shareId < 0)
			imageUrl=info.imageURL.indexOf("http")==0 ? info.imageURL :URL.rootPath+info.imageURL;
		else
		imageUrl=info.imageURL.indexOf("http")==0 ? info.imageURL :UrlParam.PARAMS["RES_HOST_URL"]+info.imageURL;
		wxutil.sendShare(LanguageMgr.Ins.GetLan(info.titleStr),info.pathURL,imageUrl,this,this.shareBreak,info.isGroup);
		console.log("ShareMgr.shareMsgToWX: -----> wxutil.sendShare",this,this.shareBreak);
	}

	__proto.shareMsgToFB=function(info){
		if (!info)
			return;
		var obj={};
		var arr=info.pathURL.split("$");
		for (var i=0;i < arr.length;i+=1){
			var brr=arr[i].split("=");
			obj[brr[0]]=brr[1];
		};
		var imageUrl;
		if (info.shareId < 0)
			imageUrl=info.imageURL.indexOf("http")==0 ? info.imageURL :URL.rootPath+info.imageURL;
		else
		imageUrl=info.imageURL.indexOf("http")==0 ? info.imageURL :UrlParam.PARAMS["RES_HOST_URL"]+info.imageURL;
		CanvasToBase64.toBase64Url(imageUrl,Handler.create(this,function(base64Url){
			var shareCfg={
				intent :'SHARE',
				image :base64Url,
				text :LanguageMgr.Ins.GetLan(info.titleStr),
				data :obj
			};
			FBInstant.shareAsync(shareCfg).then(this.shareBreak.bind(this));
		}))
	}

	//TODO
	__proto.shareBreak=function(isSucces){
		(isSucces===void 0)&& (isSucces=true);
		console.log("ShareMgr.shareBreak分享返回:",isSucces);
		EventMgr.ins.event("SHARE_BREAK_TO_VIEW",[isSucces]);
		if(isSucces){
			modules.share.ShareMgr.ins.shareSuccesBreakSendMsg();
			}else{
			console.log("分享失败!!!");
		}
	}

	__proto.shareSuccesBreakSendMsg=function(){
		console.log("ShareMgr.shareSuccesBreakSendMsg: _currInfo",this._currInfo);
		var param=0;
		if(this._currentPara){
			param=this._currentPara.param?this._currentPara.param:0;
		}
		if(!this._currInfo)return;
		var sceneType=this._currInfo.sceneType;
		if(this._currInfo.sceneType==ShareConst.CARD){
			ShareGiftMgr.ins.sendGiftMsg(2,ShareGiftMgr.ins.currentShareId,PlayerInfo.instance.userId.toString());
			sceneType=0;
		}
		SocketManager.Instance.out.sendSharedCbFn(sceneType,this._currInfo.shareId,param);
		this._currInfo=null;
		this._currentPara=null;
	}

	__getset(0,__proto,'model',function(){
		return this._model;
	});

	__getset(1,ShareMgr,'ins',function(){
		return ShareMgr._ins=ShareMgr._ins|| new ShareMgr();
	});

	ShareMgr._ins=null;
	return ShareMgr;
})()


//class modules.shareGift.events.ShareGiftEvent
var ShareGiftEvent=(function(){
	function ShareGiftEvent(){}
	__class(ShareGiftEvent,'modules.shareGift.events.ShareGiftEvent');
	ShareGiftEvent.CHAGNGE_CLICK_ITEM_UPDATE="CHAGNGE_CLICK_ITEM_UPDATE";
	return ShareGiftEvent;
})()


//class modules.shareGift.ShareGiftMgr
var ShareGiftMgr=(function(){
	function ShareGiftMgr(){
		this.currentSkillId=0;
		this.currentShareId=0;
		this.shareCardID=0;
		this.showSkillList=null;
		this.showTimes=NaN;
		ShareGiftMgr._ins=this}
	__class(ShareGiftMgr,'modules.shareGift.ShareGiftMgr');
	var __proto=ShareGiftMgr.prototype;
	__proto.setup=function(){
		SocketManager.Instance.on(0x00A7,this,this.onGetMsgInfoBrak);
	}

	__proto.onGetMsgInfoBrak=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.SimpleMsg,pkg);
		this.showSkillList=res.param4.split(",");
		this.showTimes=parseInt(res.param5);
		if(!this.showSkillList)this.showSkillList=[];
		EventMgr.ins.event("UPDATE_SHAREGIFT_INFO");
	}

	__proto.sendGiftMsg=function(type,cardId,userId){
		var msg=new com.road.ddt.proto.SimpleMsg;
		msg.param1=type;
		msg.param3=cardId;
		msg.param4=userId;
		SocketManager.Instance.sendSocketData(0x2812,msg);
	}

	__getset(1,ShareGiftMgr,'ins',function(){return ShareGiftMgr._ins=ShareGiftMgr._ins|| new ShareGiftMgr();});
	ShareGiftMgr._ins=null;
	return ShareGiftMgr;
})()


//class modules.shop.data.ShopInfo
var ShopInfo=(function(){
	function ShopInfo(){
		this.shopId=0;
		this.shopIndex=0;
		this.shopType=0;
		this.buyCount=0;
	}

	__class(ShopInfo,'modules.shop.data.ShopInfo');
	return ShopInfo;
})()


/**
*商城管理
*/
//class modules.shop.ShopMgr
var ShopMgr=(function(){
	function ShopMgr(){
		/**是否打开支付 */
		this.IS_OPEN_PAY=true;
		//是否打开问答卷
		this.IS_QUESTION=true;
		//是否打开首冲活动
		this.IS_SHOUCHONG=true;
		//是否打开广告
		this.IS_ADVERTISING=true;
		this.selectedIndex=0;
		this.allShopDic=new Dictionary;
	}

	__class(ShopMgr,'modules.shop.ShopMgr');
	var __proto=ShopMgr.prototype;
	__proto.setup=function(){
		SocketManager.Instance.on(0x0059,this,this.onRecvShopPanel);
		SocketManager.Instance.on(0x005A,this,this.onRecvBuyResult);
		SocketManager.Instance.on(0x0071,this,this.onRecvBan);
		SocketManager.Instance.out.reqShopList();
	}

	__proto.onRecvBan=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.FunctionBanMsg,pkg);
		var arr=res.funcBanList;
		for (var i=0;i < arr.length;i++){
			var item=arr[i];
			if(PlayerInfo.instance.platid==item.platform){
				if(item.type==1){
					if(item.system==LoginControl.instance.PlatId){
						this.IS_OPEN_PAY=item.value==0;
					}
				}
				else if(item.type==2){
					if(item.system==LoginControl.instance.PlatId){
						this.IS_QUESTION=item.value==0;
					}
					}else if(item.type==3){
					if(item.system==LoginControl.instance.PlatId){
						this.IS_SHOUCHONG=item.value==0;
					}
					}else if(item.type==4){
					if(item.system==LoginControl.instance.PlatId){
						this.IS_ADVERTISING=item.value==0;
					}
				}
			}
		}
		EventMgr.ins.event("UPDATE_QUESTIONVIEW");
	}

	__proto.onRecvShopPanel=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.ShopInfoListMsg,pkg);
		var len=res.list.length;
		var shopInfo;
		var msg,list;
		for(var i=0;i<len;i+=1){
			msg=res.list[i];
			list=modules.shop.ShopMgr.ins.allShopDic[msg.type];
			if(!list){
				list=[];
				modules.shop.ShopMgr.ins.allShopDic[msg.type]=list
			}
			shopInfo=this.getShopInfoById(list,msg.shopID);
			if(!shopInfo){
				shopInfo=new ShopInfo();
				list.push(shopInfo);
			}
			shopInfo.shopId=msg.shopID;
			shopInfo.shopIndex=msg.index;
			shopInfo.shopType=msg.type;
			shopInfo.buyCount=msg.buyCount;
			modules.shop.ShopMgr.ins.allShopDic[shopInfo.shopType]=list;
		}
		for(var key in modules.shop.ShopMgr.ins.allShopDic){
			if(isNaN(parseInt(key)))continue ;
			list=modules.shop.ShopMgr.ins.allShopDic[key];
			if(!list || list.length==0)continue ;
			list.sort(function(a,b){
				return a.shopIndex-b.shopIndex;
			});
		}
		EventMgr.ins.event("update_shop_list");
	}

	__proto.getShopInfoById=function($list,$id){
		var shopInfo;
		for (var i=0,len=$list.length;i < len;i++){
			shopInfo=$list[i];
			if(shopInfo.shopId==$id)return shopInfo;
		}
		return null;
	}

	__proto.onRecvBuyResult=function(pkg){
		modules.shop.ShopMgr.IS_BUYING_BOX=false;
		var res=ProtoMgr.decode(com.road.ddt.proto.ShopBuyResultMsg,pkg);
		EventMgr.ins.event("recv_buyResult",[res]);
	}

	__getset(1,ShopMgr,'ins',function(){
		return ShopMgr._ins=ShopMgr._ins|| new ShopMgr();
	});

	ShopMgr.TAB_CHEST=0;
	ShopMgr.TAB_GOLD=1;
	ShopMgr.TAB_PINK_DIAMOND=2;
	ShopMgr.TAB_DIAMOND=4;
	ShopMgr.TAB_PRIVILEGE=3;
	ShopMgr.CHEST=1;
	ShopMgr.DIAMOND=2;
	ShopMgr.PINK_DIAMOND=7;
	ShopMgr.TYPE_ROOM=8;
	ShopMgr.PRIVILEGE=12;
	ShopMgr.COIN=5;
	ShopMgr.SHOP=1;
	ShopMgr.ADVERTISING=4;
	ShopMgr.IS_BUYING_BOX=false;
	ShopMgr._ins=null;
	return ShopMgr;
})()


//class modules.skill.data.SkillInfo
var SkillInfo=(function(){
	function SkillInfo(){
		/**
		*技能ID
		*/
		this.skillID=0;
		/**
		*技能位置
		*/
		this.slot=0;
		/**
		*技能卡数量
		*/
		this.skillCard=0;
		/**
		*是否是新卡
		*/
		this.isNew=false;
	}

	__class(SkillInfo,'modules.skill.data.SkillInfo');
	return SkillInfo;
})()


/**
*
*@author baohua.chen
*
*/
//class modules.skill.data.SkillInfoModel
var SkillInfoModel=(function(){
	function SkillInfoModel(){
		this.skills=null;
		this.useSkillDic=null;
		this.currentUserNum=0;
		this.skillObj={};
		this.skillBasic=new Dictionary();
		this.skillIsHaveDic=new Dictionary();
	}

	__class(SkillInfoModel,'modules.skill.data.SkillInfoModel');
	var __proto=SkillInfoModel.prototype;
	/**
	*是否获得该类型的卡
	*@param skillId
	*@return
	*
	*/
	__proto.isHasCard=function(skillId){
		if(!this.skills)return false;
		var vo=SkillModel.getSkillConfigData(skillId);
		var currVo;
		var info;
		for(var $each_info in this.skills){
			info=this.skills[$each_info];
			currVo=SkillModel.getSkillConfigData(info.skillID);
			if(vo.BasicSkill==currVo.BasicSkill){
				return true;
			}
		}
		return false;
	}

	/**
	*是否获得该卡
	*@param skillId
	*@return
	*
	*/
	__proto.getHasCard=function(skillId){
		if(!this.skills)return null;
		var info;
		for(var $each_info in this.skills){
			info=this.skills[$each_info];
			if(skillId==info.skillID){
				return info;
			}
		}
		return null;
	}

	/**
	*是否获得该卡
	*@param skillId
	*@return
	*
	*/
	__proto.getHasCardVo=function(skillId){
		if(!this.skills)return null;
		var info;
		for(var $each_info in this.skills){
			info=this.skills[$each_info];
			if(SkillModel.getSkillConfigData(skillId).BasicSkill==SkillModel.getSkillConfigData(info.skillID).BasicSkill){
				return info;
			}
		}
		return null;
	}

	/**
	*指定卡牌是否可升级
	*@param skillId
	*@return
	*/
	__proto.getCanUpgradeBySkillId=function(skillId){
		var skillInfo=this.getHasCard(skillId);
		if(!skillInfo)return false;
		var temp=SkillModel.getSkillConfigData(skillId);
		return skillInfo.skillCard >=temp.CostSkillPoint;
	}

	__proto.changeUserSkill=function(skillId,slot){
		if(!this.skills)return;
		var info;
		for(var $each_info in this.skills){
			info=this.skills[$each_info];
			if(skillId==info.skillID){
				if(slot==-1)delete this.skillObj[info.skillID];
				else this.skillObj[info.skillID]=info.skillID;
				break ;
			}
		}
	}

	/**
	*获得组合技能列表
	*@return
	*
	*/
	__proto.getGuildSkillList=function(){
		var array=SkillModel.getSkillGroupPerformance();
		var haveAry=[];
		var noHaveAry=[];
		var have1Ary=[];
		var skillInfo;skillInfo
		var item;
		for(var $each_item in array){
			item=array[$each_item];
			var skillAry=item.SkillID.split(",");
			var len=skillAry.length;
			var isUser=true;
			var isHas=true;
			for (var i=0;i < skillAry.length;i++){
				skillInfo=SkillMgr.ins.model.getHasCardVo(skillAry[i]);
				if(!skillInfo){
					isHas=false;
					isUser=false;
				}
				else{
					if(skillInfo.slot<0)isUser=false;
				}
			}
			item.isUser=isUser;
			item.isHas=isHas;
			if(isHas){
				if(isUser){
					haveAry.push(item);
					}else{
					have1Ary.push(item);
				}
				}else{
				noHaveAry.push(item);
			}
		}
		return haveAry.concat(have1Ary).concat(noHaveAry);
	}

	/**
	*
	*@param index
	*@return 其它是对应的等级开启
	*
	*/
	__proto.getIsOpenByIndx=function(index){
		index+=1;
		var maxCount=this.getMaxUserSkillNum();
		if(index<=maxCount)return 0;
		var dataList=String(ConfigModel.getConfigData(1002).ConfigValue).split("|");
		var grade=PlayerInfo.instance.grade;
		var len=dataList.length;
		var totalNum=0;
		var needGrade=0;
		for(var i=0;i<len;i+=1){
			var list=dataList[i].split(",");
			needGrade=int(list[0]);
			totalNum=int(list[2]);
			if(totalNum>maxCount&&index<=totalNum){
				return needGrade;
			}
		}
		return 0;
	}

	/**
	*
	*@param index
	*
	*/
	__proto.getMaxUserSkillNum=function(){
		var dataList=String(ConfigModel.getConfigData(1002).ConfigValue).split("|");
		var garde=PlayerInfo.instance.grade;
		var len=dataList.length;
		for(var i=len-1;i>=0;i-=1){
			var list=dataList[i].split(",");
			if(garde>=int(list[0])){
				return int(list[2])
			}
		}
		return 6;
	}

	return SkillInfoModel;
})()


/**
*技能系统管理类
*@author baohua.chen
*
*/
//class modules.skill.SkillMgr
var SkillMgr=(function(){
	function SkillMgr(){
		this.skillInfo=null;
		this.IsSelectReplace=false;
		this.replaceID=0;
		this.currSelect=-1;
		this.skillID=0;
		this.posValue=NaN;
		this.isInSkillView=false;
		this.isOnClick=false;
		this.currentInfo=null;
		this.sortIndex=0;
		//排序索引
		this.showDown=true;
		this._model=null;
		this._allConfigSkill=null;
		this._model=new SkillInfoModel;
	}

	__class(SkillMgr,'modules.skill.SkillMgr');
	var __proto=SkillMgr.prototype;
	__proto.setup=function(){
		SocketManager.Instance.on(0x002C,this,this.onSkillPanel);
		SocketManager.Instance.on(0x002D,this,this.onSkillUpgrade);
		SocketManager.Instance.on(0x002E,this,this.onSkillUse);
		SocketManager.Instance.on(0x002F,this,this.onSkillUpdate);
	}

	/**获取普通和稀有卡 */
	__proto.getSkillDonate=function(){
		var result=[];
		var info;
		for(var $each_info in this._model.skills){
			info=this._model.skills[$each_info];
			var skillVo=SkillModel.getSkillConfigData(info.skillID);
			if(skillVo.Quality < 2 && skillVo.NextSkill > 0){
				skillVo.skillCard=info.skillCard;
				skillVo.slot=info.slot;
				skillVo.IsHave=true;
				skillVo.isNew=info.isNew;
				result.push(skillVo);
			}
		}
		return result;
	}

	/**
	*显示红点的数量 优先显示新卡牌数量
	*/
	__proto.redPortCount=function(){
		var gold=PlayerInfo.instance.gold;
		var updatedCount=0;
		if(this._model.skills && this._model.skills.length > 0){
			var info;
			for(var $each_info in this._model.skills){
				info=this._model.skills[$each_info];
				var skillInfo=SkillModel.getSkillConfigData(info.skillID);
				if(skillInfo && gold >=skillInfo.CostGold && info.skillCard >=skillInfo.CostSkillPoint && skillInfo.NextSkill !=0){
					updatedCount++;
				}
			}
		}
		return updatedCount;
	}

	/**
	*更新技能
	*/
	__proto.onSkillUpdate=function(pkg){
		var lastCount=modules.skill.SkillMgr.ins.redPortCount();
		var res=ProtoMgr.decode(com.road.ddt.proto.SkillInfoMsg,pkg);
		var skillId=res.skillID;
		var isHave=false;
		var newSkill=null;
		if(this._model.skills.length > 0){
			for (var i=0;i < this._model.skills.length;i++){
				if(this._model.skills[i].skillID==skillId){
					this._model.skills[i].slot=res.slot;
					this._model.skills[i].skillCard=res.skillCard;
					this._model.skills[i].isNew=res.isNew;
					newSkill=this._model.skills[i];
					console.log(">>>>>newSkill:"+newSkill.Name+"   isNEW:"+newSkill.isNew);
					isHave=true;
					break ;
				}
			}
			if(!isHave){
				var info=new SkillInfo();
				info.skillID=res.skillID;
				info.slot=res.slot;
				info.skillCard=res.skillCard;
				info.isNew=res.isNew;
				this._model.skills.push(info);
			}
		};
		var currentCount=modules.skill.SkillMgr.ins.redPortCount();
		if(currentCount>lastCount){
			modules.skill.SkillMgr.ins.isOnClick=false;
		}
		EventMgr.ins.event("SKILL_UPGRADE");
	}

	__proto.onSkillPanel=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.SkillListMsg,pkg);
		this._model.skills=[];
		this._model.skillObj={};
		var defaultSkillAry=res.defaultSkill.split("|");
		if(this._model.skillBasic.values.length <=0){
			for (var j=0;j < defaultSkillAry.length;j++){
				this._model.skillBasic.set(defaultSkillAry[j],defaultSkillAry[j]);
			}
		};
		var vo;
		var array=res.skills;
		if(array.length > 0){
			for (var i=0;i < array.length;i++){
				var info=new SkillInfo();
				info.skillID=array[i].skillID;
				info.slot=array[i].slot;
				info.skillCard=array[i].skillCard;
				info.isNew=array[i].isNew;
				this._model.skills.push(info);
				if(info.slot>=0)this._model.skillObj[info.skillID]=info.skillID;
				else delete this._model.skillObj[info.skillID];
			}
		}
		EventMgr.ins.event("SKILL_UPGRADE");
	}

	__proto.onSkillUpgrade=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.SkillResMsg,pkg);
		if(res.result==0){
			this.skillInfo=new SkillInfo();
			this.skillInfo.skillID=res.skillInfo.skillID;
			this.skillInfo.slot=res.skillInfo.slot;
			this.skillInfo.skillCard=res.skillInfo.skillCard;
			var nextSkillID=SkillModel.getSkillConfigData(this.skillInfo.skillID).NextSkill;
			for (var i=0;i < this._model.skills.length;i++){
				if(this._model.skills[i].skillID==this.skillInfo.skillID){
					this._model.skills[i].skillID=nextSkillID;
					this._model.skills[i].slot=this.skillInfo.slot;
					this._model.skills[i].skillCard=this.skillInfo.skillCard;
					if(this.skillInfo.slot>=0)this._model.skillObj[nextSkillID]=nextSkillID;
					else delete this._model.skillObj[nextSkillID];
					break ;
				}
			}
			modules.skill.SkillMgr.ins.skillInfo.skillID=nextSkillID;
			EventMgr.ins.event("SKILL_UPGRADE");
		}
	}

	__proto.onSkillUse=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.SkillReqMsg,pkg);
		var list=res.skillIds;
		this._model.skillObj={};
		var vo;
		var array=this._model.skills;
		var index=-1;
		if(array.length > 0){
			for (var i=0;i < array.length;i++){
				var info=array[i];
				index=list.indexOf(info.skillID)
				info.slot=index;
				if(info.slot>=0)this._model.skillObj[info.skillID]=info.skillID;
				else delete this._model.skillObj[info.skillID];
				if(this.skillInfo&&this.skillInfo.skillID==info.skillCard){
					this.skillInfo=info;
					EventMgr.ins.event("SKILL_USE_CARD");
				}
			}
		}
		EventMgr.ins.event("SKILL_UPGRADE");
	}

	/**
	*通过类型获取卡牌list
	*@param type （0:全部,1:佩戴,2:卡库里没有佩戴的卡,3:卡库里没有获得的卡）注:是玩家自己获得的所有卡牌
	*@return
	*
	*/
	__proto.getCardListByType=function(type){
		if(type==0)return this.getAllCard();
		else if(type==1)return this.getUseCardList();
		else if(type==2)return this.getNoUseCardList();
		else if(type==3)return this.getNoHasCardList();
		return [];
	}

	/**过滤掉同名的技能 */
	__proto.filterSameName=function(allSkill){
		var skillAry=[];
		var len=allSkill.length;
		for (var i=0;i < len;i++){
			var item=allSkill [i];
			if(i==len-1){
				skillAry.push(item);
				}else{
				if(item.Name !=allSkill[i+1].Name){
					if(item.Type !=0 && item.Type !=3){
						skillAry.push(item);
					}
				}
			}
		}
		return skillAry;
	}

	__proto.getAllCard=function(){
		var useCardList=this.getUseCardList();
		var noUseCardList=this.getNoUseCardList();
		var noHasCardList=this.getNoHasCardList();
		var arr=useCardList.concat(noUseCardList);
		return arr.concat(noHasCardList);
	}

	__proto.sortFun=function(a,b){
		return a.slot-b.slot;
	}

	//竞技场开启等级排序
	__proto.sortOpen=function(a,b){
		if(a.Open>b.Open)
			return 1;
		else if(a.Open<b.Open)
		return-1;
		else if(a.SkillID>b.SkillID)
		return 1;
		else if(a.SkillID<b.SkillID)
		return-1;
		return 0
	}

	//品质排序
	__proto.sortQuality=function(a,b){
		if(a.Quality>b.Quality)
			return-1;
		else if(a.Quality<b.Quality)
		return 1;
		else if(a.SkillID>b.SkillID)
		return 1;
		else if(a.SkillID<b.SkillID)
		return-1;
		return 0
	}

	//花费排序
	__proto.sortCostActPoint=function(a,b){
		if(a.CostActPoint>b.CostActPoint)
			return 1;
		else if(a.CostActPoint<b.CostActPoint)
		return-1;
		else if(a.SkillID>b.SkillID)
		return 1;
		else if(a.SkillID<b.SkillID)
		return-1;
		return 0
	}

	/**
	*获得使用的卡列表
	*@return
	*
	*/
	__proto.getUseCardList=function(){
		var useList=[];
		this._model.useSkillDic=new Dictionary();
		var skillId=0;
		var info;
		for (var i=0;i < this.allConfigSkill.length;i++){
			skillId=this.allConfigSkill[i].SkillID;
			info=this._model.getHasCard(skillId);
			if(info&&this._model.skillObj[skillId]){
				this.allConfigSkill[i].skillCard=info.skillCard;
				this.allConfigSkill[i].slot=info.slot;
				this.allConfigSkill[i].IsHave=true;
				this.allConfigSkill[i].isNew=info.isNew;
				this.allConfigSkill[i].NextSkill=this.allConfigSkill[i].SkillID==this.allConfigSkill[i].NextSkill ? 0 :this.allConfigSkill[i].NextSkill;
				useList.push(this.allConfigSkill[i]);
				this._model.useSkillDic.set(this.allConfigSkill[i].BasicSkill,this.allConfigSkill[i].BasicSkill);
			}
		}
		this._model.currentUserNum=useList.length;
		if(this.sortIndex==0){
			useList=useList.sort(this.sortOpen.bind(this));
			}else if(this.sortIndex==1){
			useList=useList.sort(this.sortQuality.bind(this));
		}
		else{
			useList=useList.sort(this.sortCostActPoint.bind(this));
		}
		return useList;
	}

	/**
	*获得未使用获得的卡列表
	*@return
	*
	*/
	__proto.getNoUseCardList=function(){
		var noUseList=[];
		var skillId=0;
		var info;
		for (var i=0;i < this.allConfigSkill.length;i++){
			skillId=this.allConfigSkill[i].SkillID;
			info=this._model.getHasCard(skillId);
			if(info&&!this._model.skillObj[skillId]){
				this.allConfigSkill[i].skillCard=info.skillCard;
				this.allConfigSkill[i].slot=info.slot;
				this.allConfigSkill[i].IsHave=true;
				this.allConfigSkill[i].isNew=info.isNew;
				this.allConfigSkill[i].NextSkill=this.allConfigSkill[i].SkillID==this.allConfigSkill[i].NextSkill ? 0 :this.allConfigSkill[i].NextSkill;
				noUseList.push(this.allConfigSkill[i]);
			}
		}
		if(this.sortIndex==0){
			noUseList=noUseList.sort(this.sortOpen.bind(this));
			}else if(this.sortIndex==1){
			noUseList=noUseList.sort(this.sortQuality.bind(this));
		}
		else{
			noUseList=noUseList.sort(this.sortCostActPoint.bind(this));
		}
		return noUseList;
	}

	/**
	*获得未获得的卡列表
	*@return
	*
	*/
	__proto.getNoHasCardList=function(){
		var noUseList=[];
		var skillId=0;
		for (var i=0;i < this.allConfigSkill.length;i++){
			skillId=this.allConfigSkill[i].SkillID;
			if(!this._model.isHasCard(skillId)&&this.allConfigSkill[i].Level==1&&this.allConfigSkill[i].Type !=0 && this.allConfigSkill[i].Type !=3 && this.allConfigSkill[i].Type !=6){
				this.allConfigSkill[i].IsHave=false;
				this.allConfigSkill[i].slot=-1;
				noUseList.push(this.allConfigSkill[i]);
			}
		}
		if(this.sortIndex==0){
			noUseList=noUseList.sort(this.sortOpen.bind(this));
			}else if(this.sortIndex==1){
			noUseList=noUseList.sort(this.sortQuality.bind(this));
		}
		else{
			noUseList=noUseList.sort(this.sortCostActPoint.bind(this));
		}
		return noUseList;
	}

	__proto.getUserCardList=function(){
		var brr=this.getUseCardList();
		var arr=brr;
		for(var i=brr.length;i<10;i+=1){
			arr.push(null);
		}
		return arr;
	}

	__proto.getCurrentCount=function(){
		var brr=this.getUseCardList();
		var len=brr.length;
		return len;
	}

	/**
	*改变卡牌使用
	*@param skillId
	*
	*/
	__proto.changeUserSkill=function(skillId,index){
		this._model.changeUserSkill(skillId,index);
		EventMgr.ins.event("SKILL_UPDATE");
	}

	__proto.changeUserSkillToServer=function(){
		var brr=this.getUseCardList();
		var arr=[];
		var len=brr.length;
		for(var i=0;i<len;i+=1){
			arr.push(brr[i].SkillID);
		}
		if(arr.length !=this._model.getMaxUserSkillNum()){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300069"));
			return;
		}
		SocketManager.Instance.out.sendSkillCardUse(0,0,arr);
	}

	// TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300068"));
	__proto.clearUseInfo=function(){
		this._model.skillObj={};
		for (var i=0;i < this._model.skills.length;i++){
			var info=this._model.skills[i];
			if(info.slot>=0)this._model.skillObj[info.skillID]=info.skillID;
			else delete this._model.skillObj[info.skillID];
		}
	}

	__proto.isUserSkill=function(skillId){
		return this._model.skillObj[skillId]?true:false;
	}

	__getset(0,__proto,'allConfigSkill',function(){
		if(!this._allConfigSkill)
			this._allConfigSkill=SkillModel.allSkillConfig;
		return this._allConfigSkill;
	});

	__getset(0,__proto,'isChangeSkill',function(){
		var brr=this.getUseCardList();
		var arr=[];
		var crr=[];
		var len=this._model.skills.length;
		for(var k=0;k<len;k+=1){
			if(this._model.skills[k].slot >=0){
				arr.push(this._model.skills[k]);
			}
		};
		var len1=arr.length;
		len=brr.length;
		for(var i=0;i<len;i+=1){
			for(var j=0;j<len1;j+=1){
				if(arr[j].skillID==brr[i].SkillID){
					crr.push(1);
					break ;
				}
			}
		}
		return !(crr.length==arr.length);
	});

	__getset(0,__proto,'model',function(){
		return this._model;
	});

	__getset(1,SkillMgr,'ins',function(){
		return SkillMgr._ins=SkillMgr._ins|| new SkillMgr();
	});

	SkillMgr._ins=null;
	return SkillMgr;
})()


//class modules.test.CheckData
var CheckData=(function(){
	function CheckData(){}
	__class(CheckData,'modules.test.CheckData');
	CheckData.checkLanguageHtmlFormat=function(){}
	return CheckData;
})()


//class modules.tips.itemTip.ItemTipView
var ItemTipView=(function(){
	function ItemTipView(item,e){
		this.view=null;
		this.isClicked=false
		EventMgr.ins.on("Close_All_Tips",this,this.onStageClick);
		switch(item.Type){
			case 5:
			case 1:
				this.view=new NormalTipsUI();
				var normalTipsView=this.view;
				normalTipsView.item_name.text=LanguageMgr.Ins.GetLan(item.Name+'');
				normalTipsView.item_desc.text=LanguageMgr.Ins.GetLan(item.Desc+'');
				normalTipsView.height=normalTipsView.bg.height=normalTipsView.item_desc.height+59;
				this.view.pivotY=normalTipsView.height *0.5;
				break ;
			case 3:
				this.view=new SkillTipsUI();
				(this.view)._head._box.width=420;
				var _textfiled=new HTMLDivElement();
				_textfiled.style.fontSize=22;
				_textfiled.style.fontFamily="Microsoft Yahei";
				_textfiled.style.color='#b4b4b4'
				_textfiled.style.align='center'
				_textfiled.width=420
				_textfiled.y=4
				_textfiled.innerHTML='<img src="common/item_tips_ui_xiezf.png"/><span>&nbsp;&nbsp;&nbsp;'+LanguageMgr.Ins.GetLan(item.Name+"")+'&nbsp;&nbsp;&nbsp;</span><img src="common/item_tips_ui_xiezf.png" />';
				(this.view)._head._box.addChild(_textfiled);
				(this.view)._card_icon.skin="assets/textrue/itemicon/"+item.Icon+".png";
				var skillId=item.Param1;
				var skillVO=SkillModel.getSkillConfigData(skillId);
				var mSkillPerData=SkillModel.getSkillPerformanceBySkillId(skillVO.Display);
				console.log(skillVO,'skillVOskillVO');
				if(skillVO.Quality >=3){
					(this.view)._card_kuang.skin="assets/textrue/common/skillFrame/ui_card_3.png";
					}else {
					(this.view)._card_kuang.skin="assets/textrue/common/skillFrame/ui_card_"+skillVO.Quality+".png";
				}
				(this.view)._cost.text=skillVO.CostActPoint;
				(this.view)._rare_txt.text=LanguageMgr.Ins.GetLan("9007312").split(",")[skillVO.Quality];
				(this.view)._rare.text=LanguageMgr.Ins.GetLan("9007323");
				(this.view)._type.text=LanguageMgr.Ins.GetLan("9007322");
				(this.view)._type_txt.text=LanguageMgr.Ins.GetLan("9007313").split(",")[skillVO.Type];
				(this.view)._rare.text=LanguageMgr.Ins.GetLan("9007323");
				(this.view)._type.text=LanguageMgr.Ins.GetLan("9007322");
				var gText=(this.view).labGroup;
				gText.text="<span style='color:#b4b4b4'>"+LanguageMgr.Ins.GetLan(mSkillPerData.Description)+"</span><br/><br/>";
				if(mSkillPerData.GroupDescription.indexOf(",")!=-1){
					var ary=mSkillPerData.GroupDescription.split(",");
					var name0="<span style='color:#ff7700'>"+LanguageMgr.Ins.GetLan(ary[0]).split("|")[0]+":"+"</span>";
					var dec0="<span style='color:#c28869'>"+LanguageMgr.Ins.GetLan(ary[0]).split("|")[1]+"</span>";
					var name1="<span style='color:#ff7700'>"+LanguageMgr.Ins.GetLan(ary[1]).split("|")[0]+":"+"</span>";
					var dec1="<span style='color:#c28869'>"+LanguageMgr.Ins.GetLan(ary[1]).split("|")[1]+"</span>";
					gText.text+=(name0+dec0+"<br/>"+name1+dec1);
					}else {
					if(parseInt(mSkillPerData.GroupDescription)!=0){
						var name="<span style='color:#ff7700'>"+LanguageMgr.Ins.GetLan(mSkillPerData.GroupDescription).split("|")[0]+":"+"</span>";
						var dec="<span style='color:#c28869'>"+LanguageMgr.Ins.GetLan(mSkillPerData.GroupDescription).split("|")[1]+"</span>";
						gText.text+=(name+dec);
					}
				}
				(this.view)._list.renderHandler=Handler.create(this,this.onRenderList,['skill'],false);
				(this.view)._list.array=mSkillPerData.AttributeDescription.split(",");
				var len=(this.view)._list.length;
				len=Math.ceil((this.view)._list.length / 2);
				var listY=gText.y+gText['measureHeight']+12;
				if(listY < this.view["_cardbox"].y+this.view["_cardbox"].height)listY=this.view["_cardbox"].y+this.view["_cardbox"].height+10;
				(this.view)._list.y=listY;
				var _=len*(28+8)-8+(this.view)._list.y+36;
				this.view.height=(this.view)._bg.height=_;
				this.view.pivotY=_*0.5;
				break ;
			case 4:
				UIMgr.ins.openView("TreasureBoxDetailTips"
				,Handler.create(this,function(view){
					view.setData(item);
				}));
				return;
				break ;
			}
		this.view.scaleX=this.view.scaleY=0;
		this.view.on("click",this,this.onClick);
		Laya.stage.on("click",this,this.onStageClick);
		this.showTip(e);
	}

	__class(ItemTipView,'modules.tips.itemTip.ItemTipView');
	var __proto=ItemTipView.prototype;
	// }
	__proto.onRenderList=function(type,item,index){
		switch(type){
			case 'skill':
				item.setData(
				(this.view)._list.array[index])
				break ;
			}
	}

	__proto.onClick=function(e){
		this.isClicked=true
	}

	__proto.onStageClick=function(){
		var _$this=this;
		if(this.isClicked){
			this.isClicked=false
			}else {
			if(this.view){
				Tween.to(this.view,{scaleX:0,scaleY:0},300,Ease.sineInOut,Handler.create(this,function(){
					_$this.view.off("click",this,_$this.onClick);
					Laya.stage.off("click",this,_$this.onStageClick);
					EventMgr.ins.off("Close_All_Tips",this,_$this.onStageClick);
					if(_$this.view.hasOwnProperty('_list')&& (_$this.view)._list.renderHandler){
						(_$this.view)._list.renderHandler.recover();
						(_$this.view)._list.renderHandler=null;
					}
					_$this.view.destroy();
				}));
			}
		}
	}

	__proto.showTip=function(e){
		if(!this.view)return;
		if(e.stageX < Laya.stage.designWidth *.5){
			this.view.x=e.stageX+this.view.width *.5
			}else {
			this.view.x=e.stageX-this.view.width *.5
		}
		if(e.stageY < Laya.stage.designHeight *.5){
			this.view.y=e.stageY+this.view.height *.5
			}else {
			this.view.y=e.stageY-this.view.height *.5
		}
		this.isClicked=true;
		LayerMgr.ins.addToLayer(this.view,3,false);
		Tween.to(this.view,{scaleX:1,scaleY:1},300,Ease.sineInOut);
	}

	__proto.setPosition=function(x,y){
		if(!this.view)return;
		this.view.x=x
		this.view.y=y
	}

	return ItemTipView;
})()


//class modules.treasureBox.TreasureBoxMgr
var TreasureBoxMgr=(function(){
	function TreasureBoxMgr(){
		/**宝箱总数 **/
		this.boxMaxNum=4;
	}

	__class(TreasureBoxMgr,'modules.treasureBox.TreasureBoxMgr');
	var __proto=TreasureBoxMgr.prototype;
	__proto.setup=function(){
		var self=this;
		SocketManager.Instance.on(0x0035,self,self.onOpenBoxResult);
	}

	/**
	*所有打开宝箱后获得数据都这这里接收
	*/
	__proto.onOpenBoxResult=function(pkg){
		var self=this;
		var res=ProtoMgr.decode(com.road.ddt.proto.ItemInfoListMsg,pkg);
		var items=res.items;
		var openBoxItemId=res.param1;
		var openBoxDataList=[],info;
		for (var i=0,len=items.length;i < len;i++){
			info=new PlayerItemInfo();
			info.id=res.items[i].id;
			info.itemID=res.items[i].itemId;
			info.count=res.items[i].count;
			info.expireTime=res.items[i].expireTime;
			info.isLocked=res.items[i].isLocked;
			info.index=res.items[i].index;
			info.isShared=res.items[i].isShared;
			openBoxDataList.push(info);
		}
		if(ShopMgr.IS_BUYING_BOX){
			Laya.stage.mouseEnabled=false;
			Laya.timer.once(2000,self,this.openChest,[openBoxItemId,openBoxDataList]);
		}
		else {
			ShopMgr.IS_BUYING_BOX=false;
			this.openChest(openBoxItemId,openBoxDataList);
		}
	}

	__proto.openChest=function($openBoxItemId,$openBoxDataList){
		Laya.stage.mouseEnabled=true;
		UIMgr.ins.closeView("ShopView",true);
		UIMgr.ins.openView("TreasureBoxOpenView"
		,Handler.create(this,function(view){
			view.init($openBoxItemId,$openBoxDataList);
		}));
	}

	/**
	*是否有正在开启中的宝箱
	*@return
	*/
	__proto.hasOpeningBox=function(){
		return (this.openingBoxNum > 0);
	}

	/**
	*是否有锁住的宝箱
	*@return
	*/
	__proto.hasLockBox=function(){
		return (this.lockBoxNum > 0);
	}

	/**
	*获得正在开启的宝箱数量
	*@return
	*/
	__getset(0,__proto,'openingBoxNum',function(){
		var num=0;
		for (var i=0;i < this.boxMaxNum;i++){
			var temp=HallMgr.ins.getBoxInfoByTypeAndIndex(4,3,i);
			if (!temp)
				continue ;
			var endTime=TimeManager.Instance.checkTimeEndNum(temp.EndTime);
			if (!temp.isLocked && endTime > 0){
				num++;
			}
		}
		return num;
	});

	/**
	*获得锁住的宝箱数量
	*@return
	*/
	__getset(0,__proto,'lockBoxNum',function(){
		var num=0;
		for (var i=0;i < this.boxMaxNum;i++){
			var temp=HallMgr.ins.getBoxInfoByTypeAndIndex(4,3,i);
			if (temp && temp.isLocked){
				num++;
			}
		}
		return num;
	});

	__getset(1,TreasureBoxMgr,'ins',function(){return TreasureBoxMgr._ins;});
	__static(TreasureBoxMgr,
	['_ins',function(){return this._ins=new TreasureBoxMgr();}
	]);
	return TreasureBoxMgr;
})()


//class modules.vip.BarrageMgr
var BarrageMgr=(function(){
	function BarrageMgr(){
		this._barrageMediator=null;
		this._model=new BarrageModel();
	}

	__class(BarrageMgr,'modules.vip.BarrageMgr');
	var __proto=BarrageMgr.prototype;
	__proto.setup=function(){
		if(!PlayerInfo.instance.isOn(13)){
			this.openBarrage();
		}
	}

	__proto.openBarrage=function(){
		if(!this._barrageMediator){
			this._barrageMediator=new BarrageMediator();
			ChatMgr.ins.on('event_channel_msg',this,this.onReviceMsg);
			console.log("开启弹幕");
		}
	}

	__proto.removeBarrage=function(){
		if(this._barrageMediator){
			this._barrageMediator.dispose();
		}
		this._barrageMediator=null;
		ChatMgr.ins.off('event_channel_msg',this,this.onReviceMsg);
		console.log("关闭弹幕");
	}

	__proto.onReviceMsg=function(chat){
		if(chat==null)return;
		if(!this._model.isShowBarrageScene)return;
		if(chat.type==1){
			if(!this.checkCondition(chat))return;
			var item=chat;
			this._model.addToList(item);
		}
	}

	__proto.checkCondition=function(chat){
		console.log("发送为弹幕："+chat.sendBarrage);
		if(chat.sendPlayer.vipLevel >=ConfigModel.getConfigData(1157).ConfigValue && chat.sendBarrage){
			return true;
		}
		return false;
	}

	__getset(0,__proto,'model',function(){
		return this._model;
	});

	__getset(1,BarrageMgr,'ins',function(){
		return BarrageMgr._ins;
	});

	__static(BarrageMgr,
	['_ins',function(){return this._ins=new BarrageMgr();}
	]);
	return BarrageMgr;
})()


//class modules.vip.consts.VipOptionType
var VipOptionType=(function(){
	function VipOptionType(){}
	__class(VipOptionType,'modules.vip.consts.VipOptionType');
	VipOptionType.BUY_VIP_GIFT_BAG=1;
	VipOptionType.RECEIVE_VIP_WEEK_WELFARE=2;
	VipOptionType.BUY_APPLE_GAME_PROFIT_TIMES=3;
	VipOptionType.BUY_PVE_PROFIT_TIMES=4;
	return VipOptionType;
})()


//class modules.vip.consts.VipPrivilegeType
var VipPrivilegeType=(function(){
	function VipPrivilegeType(){}
	__class(VipPrivilegeType,'modules.vip.consts.VipPrivilegeType');
	VipPrivilegeType.VIP=2;
	VipPrivilegeType.SonType_8=8;
	VipPrivilegeType.SonType_9=9;
	VipPrivilegeType.SonType_10=10;
	VipPrivilegeType.SonType_11=11;
	VipPrivilegeType.SonType_12=12;
	VipPrivilegeType.SonType_13=13;
	VipPrivilegeType.SonType_14=14;
	VipPrivilegeType.SonType_15=15;
	VipPrivilegeType.SonType_16=16;
	VipPrivilegeType.SonType_17=17;
	return VipPrivilegeType;
})()


//class modules.vip.event.BarrageEventType
var BarrageEventType=(function(){
	function BarrageEventType(){}
	__class(BarrageEventType,'modules.vip.event.BarrageEventType');
	BarrageEventType.ADD_CHAT_MSG="addChatMsg";
	BarrageEventType.REMOVE_CHAT_MSG="RemoveChatMsg";
	return BarrageEventType;
})()


/**
*Mediator在MVC中比较重要，除了自身的功能外，还承载了其他几个功能。
*首先Mediator中持有View对象，可以对View进行显示更新，同时也要响应View上的各种事件。
*然后Mediator可以注册和发送消息。
*同时Mediator还可以获取Model对象，进行操作。
*
*
*View与Mediator
Mediator（模式），定义了一种封装对象之间交互的中介。这种设计模式被认为是行为模式因为它可以改变模式的运行行为。
正如定义里所说，PureMVC中，View只关心UI，具体的对对象的操作由Mediator来管理，包括添加事件监听，发送或接受Notification，改变组件状态等。
*这也解决了视图与视图控制逻辑的分离。
**/
//class modules.vip.mediator.BarrageMediator
var BarrageMediator=(function(){
	function BarrageMediator(){
		/**持有View对象 */
		this._view=null;
		this.init();
	}

	__class(BarrageMediator,'modules.vip.mediator.BarrageMediator');
	var __proto=BarrageMediator.prototype;
	/**
	*初始化
	*/
	__proto.init=function(){
		this._view=new BarrageView();
		this.addEvent();
		this.show();
	}

	/**
	*响应View上的各种事件
	*/
	__proto.addEvent=function(){
		EventMgr.ins.on("addChatMsg",this,this.update);
		EventMgr.ins.on("RemoveChatMsg",this,this.update);
		EventMgr.ins.on("SWITCH_SCENE",this,this.onSwitchScene);
		Laya.stage.on("visibilitychange",this,this.clearCurrentBarrage);
	}

	__proto.run=function(){
		if(this._view)this._view.run();
	}

	__proto.show=function(){
		Laya.timer.frameLoop(1,this,this.run);
		LayerMgr.ins.addToLayer(this._view,4,false);
	}

	__proto.hide=function(){
		if(this._view){
			if(this._view.parent)this._view.parent.removeChild(this._view);
			this._view.removeChildren(0,this._view.numChildren-1);
		}
		Laya.timer.clear(this,this.run);
	}

	__proto.clearCurrentBarrage=function(){
		if(this._view && Laya.stage.isVisibility){
			this._view.removeChildren(0,this._view.numChildren-1);
			BarrageMgr.ins.model.clearAllChatInfo();
		}
	}

	__proto.onSwitchScene=function(data){
		var sceneType=data;
		if(!BarrageMgr.ins.model.isShowBarrageScene){
			BarrageMgr.ins.model.clearAllChatInfo();
			this.hide();
		}
		else{
			this.show();
		}
	}

	__proto.update=function(){
		if(this._view.numChildren < BarrageModel.MAX_ON_SCREEN && BarrageMgr.ins.model.hasBarrage()){
			this._view.createBarrage(BarrageMgr.ins.model.getFromList());
		}
	}

	/**
	*移除事件
	*/
	__proto.removeEvent=function(){
		EventMgr.ins.off("addChatMsg",this,this.update);
		EventMgr.ins.off("RemoveChatMsg",this,this.update);
		EventMgr.ins.off("SWITCH_SCENE",this,this.onSwitchScene);
		Laya.stage.off("visibilitychange",this,this.clearCurrentBarrage);
	}

	/**
	*释放
	*@memberof MediatorBase
	*/
	__proto.dispose=function(){
		this.hide();
		this.removeEvent();
		if(this._view)this._view.destroy();this._view=null;
	}

	return BarrageMediator;
})()


//class modules.vip.model.BarrageModel
var BarrageModel=(function(){
	function BarrageModel(){
		this._barrageList=[];
	}

	__class(BarrageModel,'modules.vip.model.BarrageModel');
	var __proto=BarrageModel.prototype;
	__proto.clearAllChatInfo=function(){
		if(this._barrageList)this._barrageList.length=0;
	}

	__proto.addToList=function(chat){
		this._barrageList.push(chat);
		EventMgr.ins.event("addChatMsg");
	}

	__proto.getFromList=function(){
		var chat=new ChatInfo();
		if(!this._barrageList.length)return chat;
		return this._barrageList.shift();
	}

	__proto.hasBarrage=function(){
		return this._barrageList.length > 0;
	}

	__proto.getFontSize=function(level){
		return VipMgr.ins.getBarrageFontSize(level);
	}

	__proto.getFontColor=function(level){
		return VipMgr.ins.getBarrageFontColor(level);
	}

	__getset(0,__proto,'isShowBarrageScene',function(){
		var sceneType=SceneMgr.ins.curScene.sceneType;
		if(
			sceneType==SceneType.VS_SCENE||
		sceneType==SceneType.APPLE_GAME_SCENE ||
		sceneType==SceneType.BATTLE_SCENE){
			return false;
		}
		else{
			return true;
		}
	});

	BarrageModel.SPEED=5;
	BarrageModel.MAX_ON_SCREEN=10;
	return BarrageModel;
})()


//class modules.vip.utils.BarrageUtils
var BarrageUtils=(function(){
	function BarrageUtils(){}
	__class(BarrageUtils,'modules.vip.utils.BarrageUtils');
	BarrageUtils.getHeight=function(){
		var height=150+30 *BarrageUtils.pos[BarrageUtils.index];
		BarrageUtils.index++;
		if(BarrageUtils.index==10)BarrageUtils.index=0;
		return height;
	}

	BarrageUtils.replaceWithEmoji=function(msg){
		var chatStr=msg;
		var newChatStr="";
		newChatStr+=chatStr
		.replace(/\[9001101]/g,"[Drool\]")
		.replace(/\[9001102]/g,"[Grimace\]")
		.replace(/\[9001103]/g,"[Slight\]")
		.replace(/\[9001104]/g,"[Pooh-pooh\]")
		.replace(/\[9001105]/g,"[Angry\]")
		.replace(/\[9001106]/g,"[Awkward\]")
		.replace(/\[9001107]/g,"[Joyful\]")
		.replace(/\[9001108]/g,"[Shy\]")
		.replace(/\[9001109]/g,"[Speechless\]")
		.replace(/\[9001110]/g,"[Trick\]")
		.replace(/\[9001111]/g,"[Panic\]")
		.replace(/\[9001112]/g,"[Grin\]")
		.replace(/\[9001113]/g,"[Sob\]")
		.replace(/\[9001114]/g,"[Facepalm\]")
		.replace(/\[9001115]/g,"[Tongue\]")
		.replace(/\[9001116]/g,"[Kiss\]")
		.replace(/\[9001117]/g,"[Toasted\]")
		.replace(/\[9001118]/g,"[Chuckle\]")
		.replace(/\[9001119]/g,"[Puke\]")
		.replace(/\[9001120]/g,"[Hematemesis\]")
		.replace(/\[9001121]/g,"[Shrunken\]")
		.replace(/\[9001122]/g,"[Shocked\]")
		.replace(/\[9001123]/g,"[Smile through tears\]")
		.replace(/\[9001124]/g,"[Scare\]")
		.replace(/\[9001125]/g,"[Sly\]")
		.replace(/\[9001126]/g,"[Dizzy\]")
		.replace(/\[9001127]/g,"[Bye\]")
		.replace(/\[9001128]/g,"[Scold\]")
		.replace(/\[9001129]/g,"[Scream\]")
		.replace(/\[9001130]/g,"[CoolGuy\]")
		.replace(/\[9001131]/g,"[Silent\]")
		.replace(/\[9001132]/g,"[Frown\]")
		.replace(/\[9001133]/g,"[Surprise\]")
		.replace(/\[9001134]/g,"[Sleep\]")
		.replace(/\[9001135]/g,"[Struggle\]");
		return newChatStr;
	}

	BarrageUtils.index=0;
	__static(BarrageUtils,
	['pos',function(){return this.pos=[6,2,8,5,9,1,7,3,4,0];}
	]);
	return BarrageUtils;
})()


//class modules.vip.VipMgr
var VipMgr=(function(){
	function VipMgr(){
		this.PrivilgeMsg=null;
		this.privilegeVO=null;
	}

	__class(VipMgr,'modules.vip.VipMgr');
	var __proto=VipMgr.prototype;
	__proto.setup=function(){
		SocketManager.Instance.on(0x0112,this,this.onGetVipReward);
	}

	/**
	*得到VIP等级礼包或福利
	*/
	__proto.onGetVipReward=function(pkg){
		this.PrivilgeMsg=ProtoMgr.decode(com.road.ddt.proto.VipPrivilegeRewardMsg,pkg);
		UIMgr.ins.openView("GetVipRewardView",Handler.create(this,this.onGetVipGiftViewComplete,null,false));
	}

	__proto.onGetVipGiftViewComplete=function(view){
		view.setData(this.PrivilgeMsg);
	}

	/**
	*多人副本收益次数
	*/
	__proto.getPVECount=function(){
		if(PlayerInfo.instance.vipLv>0){
			this.privilegeVO=PrivilegeModel.getItemDataByVipTypes(2+"_"+PlayerInfo.instance.vipLv+"_"+9);
			return this.privilegeVO.Param1;
		}
		return 0;
	}

	/**
	*咻咻火箭收益购买次数
	*/
	__proto.getAppleGameProfitTimes=function(){
		if(PlayerInfo.instance.vipLv>0){
			this.privilegeVO=PrivilegeModel.getItemDataByVipTypes(2+"_"+PlayerInfo.instance.vipLv+"_"+10);
			return this.privilegeVO.Param1;
		}
		return 0;
	}

	/**
	*VIP等级对应的弹幕字号
	*/
	__proto.getBarrageFontSize=function(lv){
		this.privilegeVO=PrivilegeModel.getItemDataByVipTypes(2+"_"+lv+"_"+14);
		return this.privilegeVO.Param1;
	}

	/**
	*VIP等级对应的弹幕颜色
	*/
	__proto.getBarrageFontColor=function(lv){
		this.privilegeVO=PrivilegeModel.getItemDataByVipTypes(2+"_"+lv+"_"+15);
		return this.privilegeVO.Param3;
	}

	/**
	*VIP等级礼包内容
	*/
	__proto.getVipGiftContent=function(lv){
		this.privilegeVO=PrivilegeModel.getItemDataByVipTypes(2+"_"+lv+"_"+16);
		var shopVo=ShopModel.getShopConfigByID(this.privilegeVO.Param1);
		var group,sub,i=0,n=0;
		var content=[];
		group=shopVo.ShopItem.split("|");
		for(i=0,n=group.length;i<n;i++){
			sub=group[i].split(",");
			content.push({"itemId":int(sub[0]),"count":int(sub[1])});
		}
		return content;
	}

	/**
	*VIP等级礼包价格
	*/
	__proto.getVipGiftPrice=function(lv){
		this.privilegeVO=PrivilegeModel.getItemDataByVipTypes(2+"_"+lv+"_"+16);
		var shopVo=ShopModel.getShopConfigByID(this.privilegeVO.Param1);
		return shopVo.Price;
	}

	/**
	*VIP等级礼包折扣
	*/
	__proto.getVipGiftOff=function(lv){
		return ConfigModel.getConfigData(1171).ConfigValue;
	}

	/**
	*VIP每周福利内容
	*/
	__proto.getVipWelfareContent=function(lv){
		this.privilegeVO=PrivilegeModel.getItemDataByVipTypes(2+"_"+lv+"_"+17);
		var group,sub,i=0,n=0;
		var content=[];
		group=this.privilegeVO.Param3.split(",");
		for(i=0,n=group.length;i<n;i++){
			sub=group[i].split("|");
			content.push({"itemId":int(sub[0]),"count":int(sub[1])});
		}
		return content;
	}

	/**
	*领取VIP每周福利
	*/
	__proto.sendGetWelfare=function(){
		SocketManager.Instance.out.sendVipOptionMsg(2,null);
	}

	/**
	*购买咻咻火箭收益
	*/
	__proto.sendBuyAppleGameProfit=function(){
		SocketManager.Instance.out.sendVipOptionMsg(3,null);
	}

	__proto.isSoldOut=function(selectedLevel){
		var list=ShopMgr.ins.allShopDic[13]
		return list[selectedLevel-1].buyCount > 0;
	}

	__getset(1,VipMgr,'ins',function(){
		return VipMgr._ins;
	});

	VipMgr.VIP_GIFT_SHOP_TYPE=13;
	__static(VipMgr,
	['_ins',function(){return this._ins=new VipMgr();}
	]);
	return VipMgr;
})()


//class mvc.caches.BattleCache
var BattleCache=(function(){
	function BattleCache(){
		this.battleCreateMsg=null;
		this.battlePrepareMsg=null;
		this.battleOverMsg=null;
		/**pvebuff信息 */
		this.pveBuffInfo=null;
		this.battleMapMsg=null;
		this.isLine=false;
		this.battlePlayerFireMsg=null;
		this.timeOut=15;
		this.isDelayFire=false;
		this.delayFireMsg=null;
		this.preData={};
		this.curData={};
		this.turnId=0;
	}

	__class(BattleCache,'mvc.caches.BattleCache');
	var __proto=BattleCache.prototype;
	__proto.setPreData=function(){
		this.resetPreData();
		this.preData.level=PlayerInfo.instance.grade;
		this.preData.exp=PlayerInfo.instance.exp;
		this.preData.trophy=PlayerInfo.instance.trophy;
		this.pveBuffInfo=null;
	}

	__proto.getPreData=function(){
		return this.preData;
	}

	__proto.resetPreData=function(){
		this.preData={};
	}

	__proto.setCurData=function(){
		this.resetCurData();
	}

	__proto.getCurData=function(){
		return this.curData;
	}

	__proto.resetCurData=function(){
		this.curData={};
	}

	__proto.sendRoundOver=function(){
		if (this.isDelayFire && this.delayFireMsg !=null){
			return
		};
		var msg=new com.road.ddt.proto.DefaultMsg();
		msg.isPb=true;
		SocketManager.Instance.sendSocketData(0x3AA5,msg);
	}

	//是否普通二人战
	__proto.isNormalFight=function(){
		if (this.battlePrepareMsg){
			return this.battlePrepareMsg.battleType==1 || this.battlePrepareMsg.battleType==2;
		}
		return false
	}

	//是否PVP战 2V2
	__proto.isPVPFight=function(){
		if (this.battlePrepareMsg){
			return this.battlePrepareMsg.battleType==10;
		}
		return false
	}

	//是否新手战斗
	__proto.isNewbieFight=function(){
		if (this.battlePrepareMsg){
			return this.battlePrepareMsg.battleType==2 || this.battlePrepareMsg.battleType==8
		}
		return false
	}

	__proto.isNewbieRandomFight=function(){
		if (this.battlePrepareMsg){
			return this.battlePrepareMsg.battleType==8
		}
		return false
	}

	//是否绿帽首战
	__proto.isFirstFight=function(){
		if (this.battlePrepareMsg){
			return this.battlePrepareMsg.battleType==6
		}
		return false
	}

	//是否公会战
	__proto.isGuildFight=function(){
		if (this.battlePrepareMsg){
			return this.battlePrepareMsg.battleType==5
		}
		return false
	}

	__proto.isFriendFight=function(){
		if (this.battlePrepareMsg){
			return this.battlePrepareMsg.battleType==7
		}
		return false
	}

	//是否乱斗
	__proto.isRandomFight=function(){
		if (this.battlePrepareMsg){
			return this.battlePrepareMsg.battleType==3;
		}
		return false
	}

	//是否2V2
	__proto.isPvpFight=function(){
		if (this.battlePrepareMsg){
			return this.battlePrepareMsg.battleType==10;
		}
		return false
	}

	//是否多人pve
	__proto.isMulitPveFight=function(){
		if (this.battlePrepareMsg){
			return this.battlePrepareMsg.battleType==11;
		}
		return false
	}

	__proto.getUserIds=function(){
		if (this.battlePrepareMsg){
			var ids=[];
			var player;
			for (var i=0,n=this.battlePrepareMsg.players.length;i < n;i++){
				player=this.battlePrepareMsg.players[i];
				if (player.userId.indexOf("-")==-1)
					ids.push(player.userId);
			}
			return ids;
		}
		return [];
	}

	__proto.setDelayFire=function(isDelay){
		this.isDelayFire=isDelay;
	}

	__proto.setFireMsg=function(msg){
		this.delayFireMsg=msg;
	}

	__proto.checkDelayFire=function(){
		return this.isDelayFire;
	}

	__proto.getFireMsg=function(){
		return this.delayFireMsg;
	}

	__proto.setTimeOut=function(time){
		this.timeOut=time;
	}

	__proto.getTimeOut=function(){
		return this.timeOut
	}

	__proto.getBattleOverMsg=function(){
		return this.battleOverMsg;
	}

	//获取战斗类型
	__getset(0,__proto,'battleType',function(){
		if (this.battlePrepareMsg){
			return this.battlePrepareMsg.battleType;
		}
		return-1;
	});

	//获取战斗Id
	__getset(0,__proto,'battleId',function(){
		if (this.battlePrepareMsg){
			return this.battlePrepareMsg.battleId;
		}
		return null;
	});

	return BattleCache;
})()


/**
*存放所有模块的model数据
*@author chengwen.yi
*
*/
//class mvc.caches.Cache
var Cache=(function(){
	function Cache(){
		this.battle=null;
		if(Cache._ins==null){
			this.init();
		}
		else{
			throw new Error(Cache._ins+" , this is instance");
		}
	}

	__class(Cache,'mvc.caches.Cache');
	var __proto=Cache.prototype;
	__proto.init=function(){
		this.battle=new BattleCache();
	}

	__getset(1,Cache,'ins',function(){
		return Cache._ins;
	});

	__static(Cache,
	['_ins',function(){return this._ins=new Cache();}
	]);
	return Cache;
})()


/**
*存放所有控制器
*@author chengwen.yi
*
*/
//class mvc.controllers.AllControllers
var AllControllers=(function(){
	function AllControllers(){
		this.battleController=null;
		this.battleController=new BattleController("Battle");
	}

	__class(AllControllers,'mvc.controllers.AllControllers');
	return AllControllers;
})()


/**
*控制器基类
*@author chengwen.yi
*
*/
//class mvc.core.Controller
var Controller=(function(){
	function Controller($moduleType){
		this._moduleType=null;
		this.cache=Cache.ins;
		this._moduleType=$moduleType;
		Controller._controllerDict[this._moduleType]=this;
		this.initServer();
	}

	__class(Controller,'mvc.core.Controller');
	var __proto=Controller.prototype;
	Laya.imps(__proto,{"mvc.core.IController":true})
	/**
	*监听界面派发出的事件
	*
	*/
	__proto.initEvent=function(){}
	/**
	*监听服务端事件
	*
	*/
	__proto.initServer=function(){}
	Controller.getControllerByModuleType=function($moduleType){
		return Controller._controllerDict [$moduleType];
	}

	__static(Controller,
	['_controllerDict',function(){return this._controllerDict=new Object();}
	]);
	return Controller;
})()


/**
*MVC框架单例
*@author chengwen.yi
*
*/
//class mvc.MVC
var MVC=(function(){
	function MVC(){
		this.cache=null;
		this.controller=null;
		if(MVC._ins==null){
			this.init();
		}
		else{
			throw new Error(MVC._ins+" , this is instance");
		}
	}

	__class(MVC,'mvc.MVC');
	var __proto=MVC.prototype;
	__proto.init=function(){
		this.initModels();
		this.initViews();
		this.initControllers();
	}

	__proto.initModels=function(){
		this.cache=Cache.ins;
	}

	__proto.initViews=function(){}
	__proto.initControllers=function(){
		this.controller=new AllControllers();
	}

	__getset(1,MVC,'ins',function(){
		return MVC._ins;
	});

	__static(MVC,
	['_ins',function(){return this._ins=new MVC();}
	]);
	return MVC;
})()


/**
*服务器流水表
*/
//class net.comm.GameRecords
var GameRecords=(function(){
	function GameRecords($socketManager){
		this._socketManager=null;
		/**
		*场景打点
		*/
		this.sceneTimestamps={
			1:{},
			2:{},
			3:{}
		}
		this._socketManager=$socketManager;
	}

	__class(GameRecords,'net.comm.GameRecords');
	var __proto=GameRecords.prototype;
	/**
	*广告打点
	*/
	__proto.iconClickAdvertising=function(){
		var fcMsg=new com.road.ddt.proto.FunctionClickMsg()
		this._socketManager.sendSocketData(0x280F,fcMsg);
	}

	/**
	*图标打点
	*/
	__proto.iconClickRecords=function(type){
		var fcMsg=new com.road.ddt.proto.FunctionClickMsg()
		fcMsg.type=type
		this._socketManager.sendSocketData(0x2772,fcMsg);
	}

	/**
	*新手打点
	*/
	__proto.guideClickRecords=function(type){
		var fcMsg=new com.road.ddt.proto.NewbieNodeMsg()
		fcMsg.nodeId=type;
		this._socketManager.sendSocketData(0x2779,fcMsg);
		GameRecords.guideNode+="新手埋点:"+type+"\n";
		console.log(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n埋点:"+GameRecords.guideNode+"\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<");
	}

	/**
	*资源加载打点
	*/
	__proto.guideClickLoaderRecords=function(type){
		var fcMsg=new com.road.ddt.proto.NewbieNodeMsg()
		fcMsg.nodeId=type;
		this._socketManager.sendSocketData(0x277B,fcMsg);
	}

	__proto.sceneChangeRecords=function(type,enterSecond,exitSecond){
		var timestamp=Math.floor(new Date().getTime()/1000)+'';
		var scMsg=new com.road.ddt.proto.SceneChangeMsg()
		scMsg.sceneType=type
		if(enterSecond){
			scMsg.enterSecond=this.sceneTimestamps[type]['enterSecond']=timestamp
			scMsg.exitSecond='0'
			scMsg.sceneStayTime='0'
			}else {
			scMsg.enterSecond=this.sceneTimestamps[type]['enterSecond']
			scMsg.exitSecond=this.sceneTimestamps[type]['exitSecond']=timestamp
			scMsg.sceneStayTime=this.sceneTimestamps[type]['sceneStayTime']=this.sceneTimestamps[type]['exitSecond']-this.sceneTimestamps[type]['enterSecond']+''
		}
		this._socketManager.sendSocketData(0x2773,scMsg);
	}

	/**
	*分享打点
	类型 1. 分享有礼 2. 战绩分享 3. 乱斗房间邀请
	方式 1. qq好友或者群 2. qq空间 3. 微信好友 4. 微信群
	*/
	__proto.shareRecords=function(type,method){
		var shareMsg=new com.road.ddt.proto.ShareMsg()
		shareMsg.shareType=type
		shareMsg.shareWayType=method
		this._socketManager.sendSocketData(0x2774,shareMsg);
	}

	/**
	*一键添加好友打点
	*/
	__proto.oneKeyAddFriend=function(isArrival,isAddQQSuccess){
		var oneKeyAddFriendMsg=new com.road.ddt.proto.OneKeyAddFriendMsg()
		oneKeyAddFriendMsg.isArrival=isArrival
		oneKeyAddFriendMsg.isAddQQSuccess=isAddQQSuccess
		this._socketManager.sendSocketData(0x2775,oneKeyAddFriendMsg);
	}

	/**
	*
	*@param type 1 1v1结束战斗回合数;2 一局战斗命中率
	*@param value
	*
	*/
	__proto.uploadStatistician=function(type,value){
		var simpleMsg=new com.road.ddt.proto.SimpleMsg()
		simpleMsg.param4=type+"_"+value;
		this._socketManager.sendSocketData(0x2810,simpleMsg);
	}

	__getset(0,__proto,'socketManager',function(){return this._socketManager;});
	GameRecords.guideNode="";
	return GameRecords;
})()


/**
*定义给服务器发送数据消息类
*@author weiqiang.huang
*/
//class net.comm.GameSocketOut
var GameSocketOut=(function(){
	function GameSocketOut($socketManager){
		this._socketManager=null;
		this._socketManager=$socketManager;
	}

	__class(GameSocketOut,'net.comm.GameSocketOut');
	var __proto=GameSocketOut.prototype;
	/**
	*告诉服务器客户端已经登录了
	*/
	__proto.sendClientIsLogin=function(){
		var req=new com.road.ddt.proto.LoginReqMsg();
		req.playerId=PlayerInfo.instance.playerId;
		req.key=PlayerInfo.instance.key;
		req.gameServerId=PlayerInfo.instance.gameServerId;
		this._socketManager.sendSocketData(0x1390,req);
	}

	/**
	*请求进入战斗
	*@param mapId 关卡模板ID
	*@param battleId 战斗ID
	*@param battleType 战斗类型
	*@param attack 攻击方
	*@param defense 防守方
	**/
	__proto.reqCreateBattle=function(mapId,attack,defense,battleId,battleType){
		(battleId===void 0)&& (battleId="1");
		(battleType===void 0)&& (battleType=0);
		var req=new com.road.ddt.proto.battle.BattleCreateMsg();
		req.battleId=battleId;
		req.battleType=battleType;
		req.attackList=attack;
		req.defenceList=defense;
		this._socketManager.sendSocketData(0x1396,req);
	}

	/**
	*战斗场景加载完成
	*/
	__proto.reqBattleLoadOver=function(){
		var pb=new com.road.ddt.proto.DefaultMsg()
		pb.isPb=true
		this._socketManager.sendSocketData(0x3AA6,pb);
	}

	/**
	*进入技能界面
	*/
	__proto.sendEnterSkillPanel=function(){
		var pb=new com.road.ddt.proto.DefaultMsg()
		pb.isPb=true
		this._socketManager.sendSocketData(0x271B,pb);
	}

	/**
	*卡牌升级
	*/
	__proto.sendSkillUpgrade=function(skillID){
		var req=new com.road.ddt.proto.SkillReqMsg();
		req.skillID=skillID;
		this._socketManager.sendSocketData(0x271C,req);
	}

	/**
	*更新技能状态
	*/
	__proto.sendSkillIsNew=function(skillID){
		var req=new com.road.ddt.proto.SkillReqMsg();
		req.skillID=skillID;
		this._socketManager.sendSocketData(0x2739,req);
	}

	/**
	*卡牌使用
	*/
	__proto.sendSkillCardUse=function(skillID,slot,skillList){
		var req=new com.road.ddt.proto.SkillReqMsg();
		req.skillID=skillID;
		req.toSlot=slot;
		req.skillIds=skillList;
		this._socketManager.sendSocketData(0x271D,req);
	}

	/**
	*设置语言和是否屏蔽聊天
	*/
	__proto.sendUserSetting=function(flag,value){
		var req=new com.road.ddt.proto.SettingInfoMsg();
		req.filterGuildChat=flag;
		req.language=value;
		this._socketManager.sendSocketData(0x2720,req);
	}

	/**
	*背景音乐开关
	*/
	__proto.sendUserSettingMusic=function(flag){
		var req=new com.road.ddt.proto.SettingInfoMsg();
		req.musicOn=flag;
		this._socketManager.sendSocketData(0x2720,req);
	}

	/**
	*音效开关
	*/
	__proto.sendUserSettingSound=function(flag){
		var req=new com.road.ddt.proto.SettingInfoMsg();
		req.soundOn=flag;
		this._socketManager.sendSocketData(0x2720,req);
	}

	/**
	*弹幕接收开关
	*/
	__proto.sendUserSettingRecvBarrage=function(flag){
		var req=new com.road.ddt.proto.SettingInfoMsg();
		req.barrageRecvOn=flag;
		this._socketManager.sendSocketData(0x2720,req);
	}

	/**
	*弹幕发送开关
	*/
	__proto.sendUserSettingSendBarrage=function(flag){
		var req=new com.road.ddt.proto.SettingInfoMsg();
		req.barrageSendOn=flag;
		this._socketManager.sendSocketData(0x2720,req);
	}

	/**
	*设置已经显示过首次登陆显示界面
	*/
	__proto.sendDayFirstShow=function(){
		var req=new com.road.ddt.proto.SettingInfoMsg();
		req.dayFirstShow=true;
		this._socketManager.sendSocketData(0x2720,req);
	}

	/**发送战斗聊天 */
	__proto.sendBattleChat=function(livingId,msg){
		(msg===void 0)&& (msg="");
		var req=new com.road.ddt.proto.battle.BattleChatMsg();
		req.livingId=livingId;
		req.content=msg;
		this._socketManager.sendSocketData(0x3A9D,req);
	}

	/**
	*打开宝箱
	*/
	__proto.sendOpenBox=function(id){
		var req=new com.road.ddt.proto.ItemInfoMsg();
		req.id=id;
		this._socketManager.sendSocketData(0x271E,req);
	}

	/**
	*清除宝箱冷却时间
	*/
	__proto.sendCleanBoxTime=function(id){
		var req=new com.road.ddt.proto.ItemInfoMsg();
		req.id=id;
		this._socketManager.sendSocketData(0x271f,req);
	}

	/**
	*打开免费宝箱
	*/
	__proto.sendOpenFreeBox=function(){
		var pb=new com.road.ddt.proto.DefaultMsg()
		pb.isPb=true
		this._socketManager.sendSocketData(0x2722,pb);
	}

	/**发送战斗聊天 */
	__proto.sendBattleChatExpression=function(livingId,expressionId){
		var req=new com.road.ddt.proto.battle.BattleChatMsg();
		req.livingId=livingId;
		req.expressionId=expressionId;
		this._socketManager.sendSocketData(0x3A9D,req);
	}

	/**
	*打开胜利宝箱
	*/
	__proto.sendOpenWinBox=function(){
		var pb=new com.road.ddt.proto.DefaultMsg()
		pb.isPb=true
		this._socketManager.sendSocketData(0x272E,pb);
	}

	/**
	*开锁宝箱
	*/
	__proto.sendOpenLockedBox=function(id){
		var req=new com.road.ddt.proto.ItemInfoMsg();
		req.id=id;
		this._socketManager.sendSocketData(0x2729,req);
	}

	/**
	*取消匹配
	*/
	__proto.sendQuitMatch=function(){
		var req=new com.road.ddt.proto.battle.BattleQuitMatchMsg();
		req.playerId=PlayerInfo.instance.playerId.toString();
		this._socketManager.sendSocketData(0x2756,req);
	}

	/**
	*通知Svr已查看活动
	*/
	__proto.reqActivityNotice=function(type,value){
		var req=new com.road.ddt.proto.NotifyServerMsg();
		var info=new com.road.ddt.proto.NotifyInfo();
		info.type=type;
		info.value=value;
		req.notifyInfo=info;
		this._socketManager.sendSocketData(0x279B,req);
	}

	/**
	*玩家领取公会宝箱结果
	*@param type :1 请求公会宝箱数据， 2 领取公会宝箱
	*/
	__proto.reqGuildChestInfo=function(type){
		var req=new com.road.ddt.proto.GuildBoxReqMsg();
		req.type=type;
		this._socketManager.sendSocketData(0x2790,req);
	}

	/**
	*创建公会
	*/
	__proto.sendCreateGuild=function(guildName,badgeId,type,condition,isCreate,notice){
		(isCreate===void 0)&& (isCreate=true);
		(notice===void 0)&& (notice="");
		var req=new com.road.ddt.proto.GuildInfoMsg();
		req.type=type;
		req.iconID=badgeId;
		req.limitCondition=condition;
		if(isCreate){
			req.guildName=guildName;
			this._socketManager.sendSocketData(0x2725,req);
			}else{
			req.notice=notice;
			this._socketManager.sendSocketData(0x2726,req);
		}
	}

	/**
	*解锁并分享
	*/
	__proto.sendBoxUnlockAndShare=function(id){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=id;
		this._socketManager.sendSocketData(0x277C,req);
	}

	/**
	*加入公会
	*/
	__proto.sendJoinGuild=function(guildId){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=guildId;
		this._socketManager.sendSocketData(0x2727,req);
	}

	/**
	*请求赛季信息
	*/
	__proto.reqSeasonInfo=function(){
		var req=new com.road.ddt.proto.DefaultMsg()
		req.isPb=true;
		this._socketManager.sendSocketData(0x279E,req);
	}

	/**
	*请求赛季名人堂
	*/
	__proto.reqSeasonRank=function(){
		var req=new com.road.ddt.proto.DefaultMsg()
		req.isPb=true;
		this._socketManager.sendSocketData(0x279F,req);
	}

	/**
	*公会操作命令
	*@param option 公会捐献 option=5 param1=物品ID param2=数量
	*解散公会 option=2 退出公会 option=7
	*踢出公会 option=4 param3=踢出的玩家ID
	*公会通过申请 option=6 param1=是通过还是拒绝 param3=申请的玩家ID
	*职位设置 option=3 param1=调整的职位 param3=调整的玩家ID
	*请求公会捐献option=9param1=物品ID
	*/
	__proto.sendGuildOption=function(option,guildId,param1,param2,param3){
		(guildId===void 0)&& (guildId="");
		(param1===void 0)&& (param1=0);
		(param2===void 0)&& (param2=0);
		(param3===void 0)&& (param3="");
		var req=new com.road.ddt.proto.GuildOptionMsg();
		req.option=option;
		req.param1=param1;
		req.param2=param2;
		req.param3=param3;
		this._socketManager.sendSocketData(0x2721,req);
	}

	/**
	*加入QQ群
	*/
	__proto.sendSettingJoinGroup=function(){
		var req=new com.road.ddt.proto.GuildOptionMsg();
		req.option=10;
		this._socketManager.sendSocketData(0x2721,req);
	}

	/**请求搜索公会 */
	__proto.sendSearchGuild=function(value){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=value;
		this._socketManager.sendSocketData(0x2730,req);
	}

	/**请求搜索公会 */
	__proto.sendGuildNotice=function(value){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=value;
		this._socketManager.sendSocketData(0x2732,req);
	}

	/**
	*请求公会列表
	*/
	__proto.requestGuildList=function(){
		var req=new com.road.ddt.proto.DefaultMsg();
		req.isPb=true
		this._socketManager.sendSocketData(0x272B,req);
	}

	/**
	*请求公会申请信息
	*/
	__proto.requestGuildApplyMsg=function(gid){
		var req=new com.road.ddt.proto.DefaultMsg();
		req.isPb=true
		this._socketManager.sendSocketData(0x272C,req);
	}

	/**
	*请求公会成员列表
	*/
	__proto.requestGuildMemberList=function(guildId){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=guildId;
		this._socketManager.sendSocketData(0x272F,req);
	}

	/**
	*请求查看公会成员个人信息
	*/
	__proto.requestPlayerInfo=function(playerId){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=playerId;
		this._socketManager.sendSocketData(0x2731,req);
	}

	/**
	*请求公会信息
	*/
	__proto.requestGuildInfo=function(guildId,ismyGuild){
		(ismyGuild===void 0)&& (ismyGuild=false);
		var req=new com.road.ddt.proto.StringMsg();
		req.value=guildId;
		if (ismyGuild){
			this._socketManager.sendSocketData(0x272A,req);
		}
		else{
			this._socketManager.sendSocketData(0x272B,req);
		}
	}

	/**
	*requestOneGuildData
	*/
	__proto.requestOneGuildData=function(guildId){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=guildId;
		this._socketManager.sendSocketData(0x272A,req);
	}

	/**
	*请求公会聊天
	*/
	__proto.sendGuildChat=function(playerId,content,type,name){
		var req=new com.road.ddt.proto.ChatMsg();
		req.msg=content;
		req.chatType=type;
		this._socketManager.sendSocketData(0x2736,req);
	}

	/**
	*公会友谊战请求
	*/
	__proto.sendGuildBattle=function(map,content){
		var req=new com.road.ddt.proto.GuildBattleInfoMsg();
		req.msg=content;
		req.sceneId=parseInt(map);
		this._socketManager.sendSocketData(0x2733,req);
	}

	/**
	*公会友谊战应答
	*/
	__proto.sendGuildBattleAnswer=function(battleId){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=battleId;
		this._socketManager.sendSocketData(0x2734,req);
	}

	/**
	*公会友谊战取消
	*/
	__proto.sendGuildBattleCAL=function(battleId){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=battleId;
		this._socketManager.sendSocketData(0x2738,req);
	}

	/**
	*公会友谊战邀请列表
	*/
	__proto.reqGuildBattleList=function(){
		var req=new com.road.ddt.proto.DefaultMsg();
		req.isPb=true
		this._socketManager.sendSocketData(0x273A,req);
	}

	/**
	*请求商城面板
	*/
	__proto.reqShopList=function(){
		var req=new com.road.ddt.proto.DefaultMsg();
		req.isPb=true
		this._socketManager.sendSocketData(0x2743,req);
	}

	/**
	*请求商城面板
	*/
	__proto.reqShopBuy=function(type,shopId,count){
		(count===void 0)&& (count=1);
		var req=new com.road.ddt.proto.ShopBuyMsg();
		req.type=type;
		req.shopID=shopId;
		req.buyCount=count;
		this._socketManager.sendSocketData(0x2744,req);
	}

	/**
	*新手引导节点更新
	*@param $param1 :-1:跳过新手节点 else 正常添加
	*
	*/
	__proto.updateNewGuideNodeID=function($param1){
		var req=new com.road.ddt.proto.SimpleMsg();
		req.param1=$param1;
		this._socketManager.sendSocketData(0x273E,req);
	}

	/**
	*新手训练营战斗匹配
	*/
	__proto.nebieBattleMatch=function(){
		var req=new com.road.ddt.proto.DefaultMsg();
		req.isPb=true
		this._socketManager.sendSocketData(0x273F,req);
	}

	/**
	*创建QQ群成功
	*/
	__proto.createQQGroupComplete=function(gc){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=gc;
		this._socketManager.sendSocketData(0x2740,req);
	}

	/**
	*领取活动礼包
	*/
	__proto.getActivityReward=function(conditionId){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=String(conditionId);
		this._socketManager.sendSocketData(0x2741,req);
	}

	/**
	*活动事件触发
	*/
	__proto.sendActivityClick=function(conditionId){
		var req=new com.road.ddt.proto.ActivityEventMsg();
		req.conditionId=conditionId;
		this._socketManager.sendSocketData(0x2742,req);
	}

	/**
	*领成就礼包
	*/
	__proto.getQuestReward=function(conditionId){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=String(conditionId);
		this._socketManager.sendSocketData(0x2776,req);
	}

	/**
	*领七日目标奖励
	*/
	__proto.getSevenDayTargetReward=function(conditionId){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=String(conditionId);
		this._socketManager.sendSocketData(0x2912,req);
	}

	/**
	*领取邀请礼包
	*/
	__proto.getInvitedReward=function(){
		var pb=new com.road.ddt.proto.DefaultMsg()
		pb.isPb=true
		this._socketManager.sendSocketData(0x2746,pb);
	}

	/**
	*领取首充奖励
	*/
	__proto.reqFirstRechargeReward=function(){
		var pb=new com.road.ddt.proto.DefaultMsg()
		pb.isPb=true
		this._socketManager.sendSocketData(0x281A,pb);
	}

	/**
	*充值
	*/
	__proto.sendRecharge=function(sessionId,sessionType,openid,openKey,payToken,pf,pfkey,zoneid,plateformType,platform,shopID){
		var req=new com.road.ddt.proto.RechargeInfoMsg();
		req.sessionId=sessionId;
		req.sessionType=sessionType;
		req.openid=openid;
		req.openKey=openKey;
		req.payToken=payToken;
		req.pf=pf;
		req.pfkey=pfkey;
		req.zoneid=zoneid;
		req.plateformType=plateformType;
		req.platform=platform;
		req.platform=platform;
		req.shopID=shopID;
		this._socketManager.sendSocketData(0x274C,req);
	}

	/**
	*支付参数
	*/
	__proto.sendMidasRecharge=function(sessionId,sessionType,openid,openKey,payToken,pf,pfkey,zoneid,plateformType,platform){
		var req=new com.road.ddt.proto.RechargeInfoMsg();
		req.sessionId=sessionId;
		req.sessionType=sessionType;
		req.openid=openid;
		req.openKey=openKey;
		req.payToken=payToken;
		req.pf=pf;
		req.pfkey=pfkey;
		req.zoneid=zoneid;
		req.plateformType=plateformType;
		req.platform=platform;
		this._socketManager.sendSocketData(0x274B,req);
	}

	/**
	*直购
	*/
	__proto.sendMidasBuyGoods=function(payitem,goodsmeta,goodsurl,amt,userip,format){
		var req=new com.road.ddt.proto.BuyGoodsMsg();
		req.payitem=payitem;
		req.goodsmeta=goodsmeta;
		req.goodsurl=goodsurl;
		req.amt=amt;
		req.maxNum=1;
		req.appmode=1;
		req.userip=userip;
		req.format=format;
		req.isDataMore=false;
		req.giftIndex=1;
		this._socketManager.sendSocketData(0x2750,req);
	}

	/**
	*请求好友在线数
	*/
	__proto.getFriendsRankOnlineState=function(type,playerList){
		var playerOnlineStateListMsg=new com.road.ddt.proto.PlayerOnlineStateListMsg();
		playerOnlineStateListMsg.type=type;
		playerOnlineStateListMsg.playerList=playerList;
		this._socketManager.sendSocketData(0x274A,playerOnlineStateListMsg);
	}

	/**
	*请求排行榜列表
	*/
	__proto.sendRankListRequest=function(str){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=str;
		this._socketManager.sendSocketData(0x2770,req);
	}

	/**
	*请求聊天房间列表
	*/
	__proto.getChatRoomList=function(){
		var pb=new com.road.ddt.proto.DefaultMsg()
		pb.isPb=true
		this._socketManager.sendSocketData(0x5020,pb);
	}

	/**
	*4人混战房间协议
	*/
	__proto.sendBattleMatch=function(type,serverId,roomId){
		var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
		msg.opType=type;
		msg.param1=serverId;
		msg.param2=roomId;
		this._socketManager.sendSocketData(0x2745,msg);
	}

	/**
	*宝箱分享
	*/
	__proto.sendSharedBox=function(id){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=id;
		this._socketManager.sendSocketData(0x2747,req);
	}

	/**
	*打开查看邮件
	*/
	__proto.sendCheckMail=function(mailId){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=mailId;
		this._socketManager.sendSocketData(0x2751,req);
	}

	/**
	*领取邮件物品
	*/
	__proto.sendGetMailGoods=function(mailId){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=mailId;
		this._socketManager.sendSocketData(0x2752,req);
	}

	/**
	*全部领取
	*/
	__proto.sendGetAllMail=function(){
		var pb=new com.road.ddt.proto.DefaultMsg()
		pb.isPb=true
		this._socketManager.sendSocketData(0x2753,pb);
	}

	/**
	*删除单封邮件
	*/
	__proto.sendDelMail=function(mailId){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=mailId;
		this._socketManager.sendSocketData(0x2754,req);
	}

	/**
	*发送玩家Http头像地址
	*/
	__proto.sendPlayerAvatar=function(avatar,qqName){
		var req=new com.road.ddt.proto.UpdatePlayerInfoMsg();
		req.avatar=avatar;
		req.qqName=qqName;
		this._socketManager.sendSocketData(0x2771,req);
	}

	/**
	*结束战斗
	*/
	__proto.sendBattleOver=function(){
		var pb=new com.road.ddt.proto.DefaultMsg()
		pb.isPb=true
		this._socketManager.sendSocketData(0x3AB3,pb);
	}

	/**
	*分享成功
	*/
	__proto.sendSharedCbFn=function(type,shareId,param){
		var req=new com.road.ddt.proto.ShareInfoMsg();
		req.sceneType=type;
		req.shareId=shareId;
		req.param=param;
		this._socketManager.sendSocketData(0x277D,req);
		console.log("sendSharedCbFn:请求分享成功 sceneType:",type);
	}

	/**
	*活动倒计时开关
	*0:关 1：开 2：更新 3:取消拒绝
	*/
	__proto.sendActivityCountDown=function(value,conditionId){
		(conditionId===void 0)&& (conditionId="");
		var req=new com.road.ddt.proto.ActivityCountDownMsg();
		req.state=value;
		req.conditionId=conditionId;
		this._socketManager.sendSocketData(0x277E,req);
	}

	/**
	*玩家游戏内好友列表
	*/
	__proto.sendGetFriendList=function(){
		var pb=new com.road.ddt.proto.DefaultMsg();
		pb.isPb=true
		this._socketManager.sendSocketData(0x2785,pb);
	}

	/**
	*设置好友状态信息
	*0:接收所有 0:接收所有 1：需要验证 2：拒绝所有
	*/
	__proto.sendSetFriendState=function(value){
		var req=new com.road.ddt.proto.IntMsg();
		req.value=value;
		this._socketManager.sendSocketData(0x2782,req);
	}

	/**
	*添加好友
	*/
	__proto.sendAddFriend=function($info,msg){
		(msg===void 0)&& (msg="");
		var req=new com.road.ddt.proto.FriendReqMsg();
		var info=new com.road.ddt.proto.FriendInfoMsg();
		info.openId=$info.openId;
		info.friendId=$info.friendId;
		info.nickName=$info.nickName;
		req.friendInfo=info;
		req.msg=msg;
		if(Boolean(info.friendId)|| Boolean(info.openId))
			this._socketManager.sendSocketData(0x277F,req);
		else
		console.log("好友ID为空","info.openId:"+info.openId,"info.friendId:"+info.friendId,"info.nickName:"+info.nickName);
	}

	/**
	*删除好友
	*/
	__proto.sendDelFriend=function(playerID){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=playerID;
		this._socketManager.sendSocketData(0x2781,req);
	}

	/**
	*回复好友请求
	*1:拒绝 2：同意
	*/
	__proto.sendAnsFriend=function(tarPlayerId,state,id){
		var req=new com.road.ddt.proto.FriendAnsMsg();
		req.tarPlayerId=tarPlayerId;
		req.state=state;
		req.param1=id;
		this._socketManager.sendSocketData(0x2780,req);
	}

	/**
	*发送好友聊天
	*/
	__proto.sendFriendChatMsg=function(req){
		this._socketManager.sendSocketData(0x139F,req);
	}

	/**
	*发起友谊战
	*/
	__proto.sendFriendBattle=function($info,msg,sceneId){
		var req=new com.road.ddt.proto.FriendBattleReqMsg();
		var info=new com.road.ddt.proto.FriendInfoMsg();
		info.friendId=$info.friendId;
		info.nickName=$info.nickName;
		req.friendInfo=info;
		req.msg=msg;
		req.sceneId=sceneId;
		this._socketManager.sendSocketData(0x2788,req);
	}

	/**
	*友谊战回应
	*1:拒绝 2：同意
	*/
	__proto.sendFriendBattleBack=function(friendID,state){
		var req=new com.road.ddt.proto.FriendAnsMsg();
		req.tarPlayerId=friendID;
		req.state=state;
		this._socketManager.sendSocketData(0x2789,req);
	}

	/**
	*取消好友友谊战
	*/
	__proto.sendFriendBattleCancel=function(playerId){
		var req=new com.road.ddt.proto.StringMsg();
		req.value=playerId;
		this._socketManager.sendSocketData(0x278D,req);
	}

	/**
	*邀请玩家加入公会
	*/
	__proto.sendGuildInvite=function($info){
		var req=new com.road.ddt.proto.FriendReqMsg();
		var info=new com.road.ddt.proto.FriendInfoMsg();
		info.openId=$info.openId;
		info.friendId=$info.friendId;
		info.nickName=$info.nickName;
		info.guildName=$info.guildName;
		req.friendInfo=info;
		req.msg=$info.guildName;
		this._socketManager.sendSocketData(0x2795,req);
	}

	/**
	*玩家是否加入公会回应邀请
	*1:拒绝 2：同意
	*/
	__proto.sendGuildInviteResp=function(tarPlayerId,state,id){
		var req=new com.road.ddt.proto.FriendAnsMsg();
		req.tarPlayerId=tarPlayerId;
		req.state=state;
		req.param1=id;
		this._socketManager.sendSocketData(0x2798,req);
	}

	/**
	*索要回应
	*/
	__proto.sendAskForResp=function(tarPlayerId,state,id){
		var req=new com.road.ddt.proto.FriendAnsMsg();
		req.tarPlayerId=tarPlayerId;
		req.state=state;
		req.param1=id;
		this._socketManager.sendSocketData(0x2807,req);
	}

	/**
	*消耗喇叭
	*/
	__proto.xiaohaolba=function(){}
	/**
	*发送通过好友邀请进入游戏
	*/
	__proto.sendFriendInvite=function(playerId,openId,isFriend){
		var req=new com.road.ddt.proto.EnterByLinkMsg();
		req.srcPlayerId=playerId;
		req.srcOpenId=openId;
		req.isFriend=isFriend;
		this._socketManager.sendSocketData(0x279D,req);
	}

	/**
	*同意所有点金手索要请求
	*/
	__proto.sendAllSureAsk=function(){
		var req=new com.road.ddt.proto.DefaultMsg();
		this._socketManager.sendSocketData(0x280A,req);
	}

	/**
	*请求跑马灯配置
	*/
	__proto.getMarqueeConfig=function(){
		var pb=new com.road.ddt.proto.DefaultMsg();
		pb.isPb=true;
		this._socketManager.sendSocketData(0x280B,pb);
	}

	/**
	*消息发送
	*/
	__proto.getQuestEvent=function(){
		var msg=new com.road.ddt.proto.IntMsg()
		msg.value=51;
		this._socketManager.sendSocketData(0x280C,msg);
	}

	/**
	*改名
	*/
	__proto.sendRename=function(newName){
		var pb=new com.road.ddt.proto.StringMsg();
		pb.value=newName;
		this._socketManager.sendSocketData(0x280D,pb);
	}

	/**
	*变性
	*/
	__proto.sendSexChange=function(){
		var pb=new com.road.ddt.proto.DefaultMsg();
		pb.isPb=true;
		this._socketManager.sendSocketData(0x280E,pb);
	}

	/**
	*获取好友推荐
	*/
	__proto.sendFriendRecommend=function(){
		this._socketManager.sendSocketData(0x2904,new com.road.ddt.proto.SimpleMsg());
	}

	/**
	*好友搜索
	*@param $name
	*/
	__proto.sendFriendSearchResult=function($name){
		var msg=new com.road.ddt.proto.SimpleMsg();
		msg.param4=$name;
		this._socketManager.sendSocketData(0x2903,msg);
	}

	/**
	*好友物品赠送
	*@param $list
	*/
	__proto.sendFriendGiftItem=function($list){
		var msg=new com.road.ddt.proto.FriendOpMsg();
		msg.playerId=$list;
		this._socketManager.sendSocketData(0x2900,msg);
	}

	/**
	*好友物品收取
	*@param $list
	*/
	__proto.sendFriendTakeItem=function($list){
		var msg=new com.road.ddt.proto.FriendOpMsg();
		msg.playerId=$list;
		this._socketManager.sendSocketData(0x2901,msg);
	}

	/**
	*好友物品索要
	*@param $list
	*/
	__proto.sendFriendItemAsk=function($list){
		var msg=new com.road.ddt.proto.FriendOpMsg();
		msg.playerId=$list;
		this._socketManager.sendSocketData(0x2902,msg);
	}

	/**
	*使用CD卡加速宝箱开启
	*@param $itemId
	*/
	__proto.sendUseCdCard=function($boxId){
		var msg=new com.road.ddt.proto.ItemInfoMsg();
		msg.id=$boxId;
		this._socketManager.sendSocketData(0x2906,msg);
	}

	/**
	*神秘商店操作
	*@param opType :1:拉取商店数据 2:购买物品 3:刷新神秘商店
	*@param index :购买物品索引
	*/
	__proto.sendMysteryShopOp=function(opType,index){
		(index===void 0)&& (index=-1);
		var msg=new com.road.ddt.proto.mystery.MysteryShopOpMsg();
		msg.opType=opType;
		index >-1 && (msg.index=index);
		this._socketManager.sendSocketData(0x2814,msg);
	}

	/**
	*公会商店操作
	*@param opType :1:拉取商店数据 2:购买物品 3:刷新商店
	*@param index :购买物品索引
	*/
	__proto.sendGuildShopOp=function(opType,index){
		(index===void 0)&& (index=-1);
		var msg=new com.road.ddt.proto.guild.GuildShopOpMsg();
		msg.opType=opType;
		index >-1 && (msg.index=index);
		this._socketManager.sendSocketData(0x2818,msg);
	}

	/**
	*公会科技操作
	*@param opType :1:请求科技数据 2:升级科技
	*@param index :升级科技Id
	*/
	__proto.sendGuildBuffOp=function(opType,index){
		(index===void 0)&& (index=-1);
		var msg=new com.road.ddt.proto.guild.GuildBuffReqMsg();
		msg.type=opType;
		index >-1 && (msg.buffId=index);
		this._socketManager.sendSocketData(0x2819,msg);
	}

	/**
	*中控活动操作
	*@param $activeType :活动类型(GmActiveType.as)
	*@param $packageId :礼包ID
	*@param $opType :操作类型
	*@param param :参数[int,int,int,String,String,String],int类型-1为不赋值 String类型 null为不赋值
	*/
	__proto.sendGmActiveOpMsg=function($activeType,$packageId,$opType,__param){
		var param=[];for(var i=3,sz=arguments.length;i<sz;i++)param.push(arguments[i]);
		var msg=new com.road.ddt.proto.gmactive.GmActiveOpMsg();
		msg.activeType=$activeType;
		msg.packageId=$packageId;
		msg.opType=$opType;
		var p;
		for (var i=0,len=param.length;i < len;i++){
			p=param[i];
			if(p==-1 || p==null)continue ;
			msg["param"+(i+1)]=p;
		}
		this._socketManager.sendSocketData(0x290B,msg);
	}

	/**
	*领取分享活动奖励
	*/
	__proto.sendShareRewad=function(type,index){
		var msg=new com.road.ddt.proto.SimpleMsg();
		msg.param1=type;
		msg.param2=index;
		this._socketManager.sendSocketData(0x2815,msg);
	}

	/**
	*VIP操作
	*/
	__proto.sendVipOptionMsg=function(type,param){
		var msg=new com.road.ddt.proto.VipOptionReqMsg();
		msg.optionType=type;
		msg.param1=param;
		this._socketManager.sendSocketData(0x2913,msg);
	}

	/**
	*发送消费订单给服务器
	*@param $moneyType :货币类型
	*@param $needMoney :所需价格
	*@param $purchaseToken :订单token跟signedRequest里的一样
	*@param $signedRequest :订单签名
	*/
	__proto.sendPayFB=function($moneyType,$needMoney,$purchaseToken,$signedRequest){
		var msg=new com.road.ddt.proto.PlayerPayFBMsg();
		msg.moneyType=$moneyType;
		msg.needMoney=$needMoney;
		msg.purchaseToken=$purchaseToken;
		msg.signedRequest=$signedRequest;
		console.log(" >> 发送消费订单给服务器, moneyType:"+msg.moneyType+"  needMoney:"+msg.needMoney+"  purchaseToken:"+msg.purchaseToken+"  signedRequest:"+msg.signedRequest);
		this._socketManager.sendSocketData(0x3500,msg);
	}

	return GameSocketOut;
})()


//class net.ConnectMgr
var ConnectMgr=(function(){
	function ConnectMgr(){
		this._msgList=[];
		this._retryCount=0;
		this._isServerClose=false;
		this._lastTime=0;
		this._sendTime=0;
		this.pb=new com.road.ddt.proto.DefaultMsg();
	}

	__class(ConnectMgr,'net.ConnectMgr');
	var __proto=ConnectMgr.prototype;
	__proto.init=function(){
		SocketManager.Instance.on("socket_open",this,this.onSocketOpen);
		SocketManager.Instance.on("socket_error",this,this.onSocketError);
		SocketManager.Instance.on("socket_close",this,this.onSocketClose);
		SocketManager.Instance.on("socket_disconnect_cache_msg",this,this.onDisconnectCacheMsg);
		SocketManager.Instance.on("socket_reconnect_start",this,this.opReConnect);
		SocketManager.Instance.on(0x0027,this,this.onSessionDuplicate);
		SocketManager.Instance.on(0x006E,this,this.onHeartBeat);
	}

	__proto.setServerClose=function(){
		this.clearHeartBeat();
		Laya.timer.clear(this,this.retry);
		this._isServerClose=true;
	}

	/**连接成功 **/
	__proto.onSocketOpen=function(){
		console.log("连接Socket成功...");
		PlayerInfoMgr.ins.login();
		if(LayaEX.isFaceBook){
			FBPayMgr.ins.useAllPurchase();
		}
	}

	/**连接错误 **/
	__proto.onSocketError=function(){
		this.clearHeartBeat();
	}

	/**连接关闭 **/
	__proto.onSocketClose=function(){
		this.clearHeartBeat();
	}

	__proto.onDisconnectCacheMsg=function(data){
		this._msgList.push(data);
	}

	__proto.opReConnect=function(){
		if (this._isServerClose){
			return;
		}
		SocketManager.Instance.off("socket_reconnect_success",this,this.reConnectSuccess);
		SocketManager.Instance.on("socket_reconnect_success",this,this.reConnectSuccess);
		Laya.timer.once(1000,this,this.retry);
	}

	__proto.reConnectSuccess=function(){
		this.cleanStatus();
		if(LayaEX.isFaceBook){
			FBPayMgr.ins.useAllPurchase();
		}
	}

	__proto.reSendPackage=function(){
		for (var i=0;i < this._msgList.length;i++){
			var code=this._msgList[i].code;
			var msg=this._msgList[i].msg;
			SocketManager.Instance.sendSocketData(code,msg);
		}
		this._msgList.splice(0);
	}

	__proto.addHeartBeat=function(){
		Laya.timer.loop(2000,this,this.sendHeartBeat);
	}

	__proto.clearHeartBeat=function(){
		Laya.timer.clear(this,this.sendHeartBeat);
		this._lastTime=this._sendTime=0;
	}

	__proto.sendHeartBeat=function(){
		if (this._lastTime > 0){
			var time=TimeManager.Instance.NowTime()-this._lastTime;
			if (time > 5000 && !SocketManager.Instance.isClosed){
				EventMgr.ins.event("UPDATE_WIFI_STATE",0);
				this.clearHeartBeat();
				this.createWait();
				SocketManager.Instance.closeSocket();
				return;
			}
		}
		else{
			this._lastTime=TimeManager.Instance.NowTime();
		}
		if (this._sendTime > 0 && this._lastTime < this._sendTime){
			EventMgr.ins.event("UPDATE_WIFI_STATE",0);
		}
		this._sendTime=TimeManager.Instance.NowTime();
		SocketManager.Instance.sendSocketData(0x139C,this.pb);
	}

	/**心跳包*/
	__proto.onHeartBeat=function(pkg){
		if (pkg && pkg.length > 0){
			TimeManager.Instance.syncTime(pkg);
		}
		this._lastTime=TimeManager.Instance.NowTime();
		this.updateDelay(this._lastTime-this._sendTime);
	}

	__proto.updateDelay=function(delay){
		if (delay < 70){
			EventMgr.ins.event("UPDATE_WIFI_STATE",2);
		}
		else if (delay < 200){
			EventMgr.ins.event("UPDATE_WIFI_STATE",1);
		}
		else{
			EventMgr.ins.event("UPDATE_WIFI_STATE",0);
		}
	}

	__proto.retry=function(){
		this._retryCount++;
		if (this._retryCount > 1){
			this.createWait();
		}
		if (this._retryCount > 30){
			this.cleanStatus();
			this.clearHeartBeat();
			TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("9002279"),"","",Handler.create(this,this.exitProgram));
			return;
		}
		SocketManager.Instance.connect();
	}

	__proto.cleanStatus=function(){
		this.cleanWait();
		this._retryCount=0;
		SocketManager.Instance.off("socket_reconnect_success",this,this.reConnectSuccess);
	}

	/**打开断开链接界面 */
	__proto.createWait=function(){
		UIMgr.ins.openView("LoseConnect");
	}

	/**关闭断开链接界面 */
	__proto.cleanWait=function(){
		UIMgr.ins.closeView("LoseConnect");
	}

	/**
	*多端登录
	*@param pkg
	*/
	__proto.onSessionDuplicate=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.IntMsg,pkg);
		var str="";
		if (res.value==-1){
			str=LanguageMgr.Ins.GetLan("9002176");
		}
		else{
			str=LanguageMgr.Ins.GetLan("9002177");
		}
		NewGuideMgr.ins.closeAllGuide();
		TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),str,LanguageMgr.Ins.GetLan("9002243"),"",Handler.create(this,this.exitProgram));
		this.setServerClose();
	}

	__proto.exitProgram=function(){
		JSMgr.replaceGame();
	}

	__getset(1,ConnectMgr,'ins',function(){
		return ConnectMgr._ins=ConnectMgr._ins|| new ConnectMgr();
	});

	ConnectMgr._ins=null;
	ConnectMgr.HeartBeatInterval=2000;
	return ConnectMgr;
})()


/**
*协议定义类
*@author weiqiang.huang
*/
//class net.data.ePackageType
var ePackageType=(function(){
	function ePackageType(){}
	__class(ePackageType,'net.data.ePackageType');
	ePackageType.LOGIN=0x1390;
	ePackageType.PLAYER_INFO=0x0011;
	ePackageType.SYS_MESSAGE=0x0012;
	ePackageType.PLAYER_DATA=0x0013;
	ePackageType.PLAYER_SKILLS=0x0014;
	ePackageType.HEARTBEAT=0x006E;
	ePackageType.G_HEARTBEAT=0x139C;
	ePackageType.FIGHT_DEBUG_EDITOR=0x1396;
	ePackageType.BATTLE_PREPARE=0x0015;
	ePackageType.BATTLE_MAP=0x0016;
	ePackageType.SEND_BATTLE_ROUND_OVER=0x3AA5;
	ePackageType.BATTLE_LOAD_OVER=0x3AA6;
	ePackageType.BATTLE_REPORT=0x0020;
	ePackageType.BATTLE_START=0x0018;
	ePackageType.BATTLE_ROUND_OVER=0x0019;
	ePackageType.B_FIRE=0x3AA1;
	ePackageType.B_USE_SKILL=0x3AAA;
	ePackageType.U_UPDATE_MELEE_SCORE=0x0078;
	ePackageType.U_BATTLE_FIRE=0x0022;
	ePackageType.U_USE_SKILL_RESULT=0x0021;
	ePackageType.U_BATTLE_WIND=0x0025;
	ePackageType.U_BATTLE_NEXT_TURN=0x0026;
	ePackageType.B_VSPANEL=0x0024;
	ePackageType.U_SERIES_KILL=0x009F;
	ePackageType.U_QUIT_MATCH=0x0036;
	ePackageType.M_QUIT_MATCH=0x2756;
	ePackageType.B_PLAY_END=0x3AA7;
	ePackageType.B_MOVE=0x3AA4;
	ePackageType.B_BATTLE_OVER=0x3AB3;
	ePackageType.U_BATTLE_MOVE=0x001A;
	ePackageType.B_TELEPORT=0x3AAB;
	ePackageType.U_SESSION_DUPLICATE=0x0027;
	ePackageType.U_LIVING_FALL=0x001C;
	ePackageType.U_TIME_SYNC=0x0028;
	ePackageType.U_BATTLE_PLAYER_STATE=0x002A;
	ePackageType.LEVEL_UP=0x002B;
	ePackageType.U_BATTLE_BUFFER_EFFECT=0x0023;
	ePackageType.U_BATTLE_BUFFER=0x0029;
	ePackageType.U_BATTLE_BUFFER_EXECUTE=0x0031;
	ePackageType.SEND_SKILL_PANEL=0x271B;
	ePackageType.SEND_SKILL_UPGRADE=0x271C;
	ePackageType.U_SKILL_UPDATE=0x002F;
	ePackageType.G_SKILL_UPDATE_STATE=0x2739;
	ePackageType.SEND_SKILL_USE=0x271D;
	ePackageType.SKILL_PANEL=0x002C;
	ePackageType.SKILL_UPGRADE=0x002D;
	ePackageType.SKILL_USE=0x002E;
	ePackageType.PLAYER_ITEMS=0x0030;
	ePackageType.PLAYER_CHANGEITEMS=0x0032;
	ePackageType.USER_SETTING=0x2720;
	ePackageType.BATTLE_CHAT=0x3AB0;
	ePackageType.U_BATTLE_CHAT=0x0033;
	ePackageType.CHAT=0x3A9D;
	ePackageType.U_CHAT_LIST=0x0070;
	ePackageType.U_BATTLE_SYN_LIVING=0x0038;
	ePackageType.B_PLAY_DICE=0x3AB0;
	ePackageType.U_PLAY_DICE=0x0039;
	ePackageType.OPEN_BOX=0x271E;
	ePackageType.CLEAN_BOXTIME=0x271f;
	ePackageType.OPEN_FREEBOX=0x2722;
	ePackageType.G_SEASON_INFO=0x279E;
	ePackageType.G_SEASON_HISTORY_HALL=0x279F;
	ePackageType.U_SEASON_INFO=0x009C;
	ePackageType.U_SEASON_HISTORY_HALL=0x009D;
	ePackageType.U_SEASON_SETTLE=0x009E;
	ePackageType.PLAYER_OPENBOX_RESULT=0x0035;
	ePackageType.G_GUILD_CREATE=0x2725;
	ePackageType.U_GUILD_CREATE_RESULT=0x0042;
	ePackageType.G_GUILD_BOX_REQ=0x2790;
	ePackageType.U_GUILD_BOX_AWARE_RESULT=0x0087;
	ePackageType.U_ACTIVITY_NOTICE=0x008D;
	ePackageType.G_ACTIVITY_NOTICE=0x279B;
	ePackageType.U_GUILD_BOX_INFO_RESP=0x0088;
	ePackageType.U_GUILD_OPTION_RESULT=0x0043;
	ePackageType.G_GUILD_SETTING=0x2726;
	ePackageType.G_GUILD_REQUEST=0x2727;
	ePackageType.G_GUILD_OPTION=0x2721;
	ePackageType.BOX_UNLOCK=0x2729;
	ePackageType.U_BOX_UNLOCK=0x003B;
	ePackageType.G_OPEN_WINBOX=0x272E;
	ePackageType.G_GUILD_INFO=0x272A;
	ePackageType.G_GUILD_INFO_=0x274F;
	ePackageType.G_GUILD_INFO_LIST=0x272B;
	ePackageType.G_GUILD_REQUEST_LIST=0x272C;
	ePackageType.G_GUILD_DONATE_LIST=0x272D;
	ePackageType.U_GUILD_INFO=0x003C;
	ePackageType.U_GUILD_INFO_=0x0065;
	ePackageType.U_GUILD_INFO_LIST=0x003D;
	ePackageType.U_GUILD_REQUEST_LIST=0x003E;
	ePackageType.U_GUILD_DONATE_LIST=0x003F;
	ePackageType.U_BATTLE_ADD_LIVING=0x0034;
	ePackageType.G_GUILD_MEMBER_LIST=0x272F;
	ePackageType.U_GUILD_MEMBER_LIST=0x0044;
	ePackageType.U_GUILD_PASSJOIN=0x0045;
	ePackageType.G_GUILD_SEARCH=0x2730;
	ePackageType.U_GUILD_SEARCH=0x0046;
	ePackageType.U_BATTLE_CREATE_SUPPLY=0x0037;
	ePackageType.G_PLAYER_DETAIL=0x2731;
	ePackageType.U_PLAYER_DETAIL=0x0047;
	ePackageType.U_GUILD_OPTION_SYNC=0x0048;
	ePackageType.G_GUILD_NOTICE=0x2732;
	ePackageType.C_PLAYER_CHAT=0x501A;
	ePackageType.G_GUID_CHAT=0x2736;
	ePackageType.U_CHAT=0x0051;
	ePackageType.G_GUILD_BATTLE_REQ=0x2733;
	ePackageType.U_GUILD_BATTLE_REQ=0x0049;
	ePackageType.G_GUILD_BATTLE_ANS=0x2734;
	ePackageType.U_GUILD_BATTLE_BREAK=0x0050;
	ePackageType.G_GUILD_BATTLE_CAL=0x2738;
	ePackageType.U_GUILD_BATTLE_CAL=0x004A;
	ePackageType.G_GUILD_BATTLE_REQLIST=0x273A;
	ePackageType.U_GUILD_LOGIN_LOAD=0x0052;
	ePackageType.U_DONATE_GET=0x006D;
	ePackageType.U_GUILD_EVENT=0x0053;
	ePackageType.U_PLAYER_SCENE=0x0054;
	ePackageType.G_GUILD_UPDATEGROUP=0x2740;
	ePackageType.U_GUILD_UPDATE_GROUPID=0x0055;
	ePackageType.G_BATTLE_MATCH_ROOM_OP=0x2745;
	ePackageType.U_ROOM_PLAYER_UPDATE=0x005B;
	ePackageType.U_ROOM_PLAYER_LIST=0x005C;
	ePackageType.U_BATTLE_REVIVE=0x005D;
	ePackageType.G_BATTLE_MATCH=0x2715;
	ePackageType.U_ACTIVITY_CONDITION=0x0056;
	ePackageType.U_ACTIVITY_CONDITION_LIST=0x0057;
	ePackageType.G_ACTIVITY_REWARD=0x2741;
	ePackageType.G_ACTIVITY_EVENT=0x2742;
	ePackageType.U_ACTIVITY_REWARD=0x0058;
	ePackageType.G_SHOP_PANEL=0x2743;
	ePackageType.U_SHOP_PANEL=0x0059;
	ePackageType.G_SHOP_BUY=0x2744;
	ePackageType.U_SHOP_BUY=0x005A;
	ePackageType.G_NEWBIE_NODE_UPDATE=0x273E;
	ePackageType.G_NEWBIE_BATTLE_MATCH=0x273F;
	ePackageType.G_RECHARGE_CHECK_REQ=0x274C;
	ePackageType.U_MIDAS_PARA_REQ=0x0060;
	ePackageType.G_GHARGE_PARA=0x274B;
	ePackageType.G_GET_INVITE_REWARD=0x2746;
	ePackageType.G_PLAYER_ONLINE_STATE=0x274A;
	ePackageType.U_PLAYER_ONLINE=0x005E;
	ePackageType.B_REVIVE=0x3AB2;
	ePackageType.U_BATTLE_INVITE=0x0063;
	ePackageType.G_BATTLE_INVITE=0x274D;
	ePackageType.G_BATTLE_QQ_FRIENDS=0x274E;
	ePackageType.U_BATTLE_FRIEND_INFOS=0x0064;
	ePackageType.G_BOX_SHARE=0x2747;
	ePackageType.G_BUY_GOODS=0x2750;
	ePackageType.U_MIDAS_BUY_GOODS=0x0062;
	ePackageType.G_READ_MAIL=0x2751;
	ePackageType.G_GET_MAIL_ITEM=0x2752;
	ePackageType.G_GET_ALL_MAIL_ITEM=0x2753;
	ePackageType.G_DEL_MAIL=0x2754;
	ePackageType.G_DEL_ALL_MAIL=0x2755;
	ePackageType.U_MAIL_INFO_LOAD=0x0067;
	ePackageType.U_MAIL_INFO_UPDATE=0x0066;
	ePackageType.U_OPEN_MAIL_ITEMS=0x006A;
	ePackageType.U_DAY_FIRST_LOGIN=0x006B;
	ePackageType.U_RANKING_CHANGE=0x0061;
	ePackageType.G_RANK=0x2770;
	ePackageType.U_PLAYER_RANKING_LIST=0x006C;
	ePackageType.U_APPLE_GAME_REVIVE=0x008B;
	ePackageType.G_HEADIMAGE=0x2771;
	ePackageType.U_MATCH_ROOM_PREPARE=0x0075;
	ePackageType.U_QUEST_CONDITION=0x0076;
	ePackageType.U_QUEST_CONDITION_LIST=0x0072;
	ePackageType.U_QUEST_REWARD=0x0073;
	ePackageType.G_QUEST_REWARD=0x2776;
	ePackageType.G_NEWBIE_NODE_RECORD=0x2779;
	ePackageType.G_FUNCTION_CLICK=0x2772;
	ePackageType.G_UPLOAD_CLICK=0x280F;
	ePackageType.G_SCENCE_CHANGE=0x2773;
	ePackageType.G_SHARE=0x2774;
	ePackageType.G_ONE_KEY_ADD_FRIEND=0x2775;
	ePackageType.G_LOAD_RESOURCE_RECORD=0x277B;
	ePackageType.G_UPLOAD_STATISTICINFO=0x2810;
	ePackageType.U_UPDATE_BANFUNC=0x0071;
	ePackageType.U_OFF_LINE=0x006F;
	ePackageType.U_PUNISH_TIP=0x0068;
	ePackageType.U_CLEAN_SPEAK=0x0069;
	ePackageType.U_TOPIC_MSG=0x0090;
	ePackageType.U_ROOM_STATE_INFO=0x0077;
	ePackageType.G_MATCH_ROOM_STATE=0x277A;
	ePackageType.G_BOX_UNLOCK_AND_SHARE=0x277C;
	ePackageType.G_SHARE_CALLBACK=0x277D;
	ePackageType.U_ACTIVITY_ONLINE_REWARD=0x0079;
	ePackageType.G_ACTIVITY_COUNTDOWN=0x277E;
	ePackageType.U_SHARE_RESPONSE=0x0080;
	ePackageType.U_SHARE_INFOS=0x0081;
	ePackageType.G_APPLE_WAR=0x2791;
	ePackageType.G_APPLE_GAME_REVIVE=0x2792;
	ePackageType.U_APPLE_SETTLE=0x00A1;
	ePackageType.G_ADD_FRIEND=0x277F;
	ePackageType.G_ANS_FRIEND=0x2780;
	ePackageType.G_DEL_FRIEND=0x2781;
	ePackageType.G_SET_FRIENDSTATE=0x2782;
	ePackageType.G_QQFRIEND_LIST=0x2787;
	ePackageType.G_FRIEND_LIST=0x2785;
	ePackageType.GW_FRIEND_CHAT=0x139F;
	ePackageType.U_FRIEND_RESP=0x007A;
	ePackageType.U_FRIEND_REQ=0x007B;
	ePackageType.U_FRIEND_LIST=0x007C;
	ePackageType.U_FRIEND_UPDATE=0x007D;
	ePackageType.U_FRIEND_DEL=0x007E;
	ePackageType.U_QQFRIEND_LIST=0x007F;
	ePackageType.U_FRIEND_CHAT=0x0085;
	ePackageType.G_REQ_FRIEND_BATTLE=0x2788;
	ePackageType.G_RESP_FRIEND_BATTLE=0x2789;
	ePackageType.U_FRIEND_BATTLE_REQ=0x0082;
	ePackageType.U_FRIEND_BATTLE_RESP=0x0083;
	ePackageType.U_FRIEND_BATTLE_RDY=0x0084;
	ePackageType.G_CAL_FRIEND_BATTLE=0x278D;
	ePackageType.U_SYSTEM_NOTICE=0x0086;
	ePackageType.U_SYSTEM_NOTICE_LIST=0x0089;
	ePackageType.G_GUILD_INVITE=0x2795;
	ePackageType.G_GUILD_INVITE_RESP=0x2798;
	ePackageType.U_CHAT_TOPIC=0x009A;
	ePackageType.U_CHAT_CHANNEL=0x009B;
	ePackageType.C_CHAT=0x501D;
	ePackageType.C_GET_CHANNEL_LIST=0x5020;
	ePackageType.C_CHANGE_CHANNEL=0x5021;
	ePackageType.G_REGE=0x279D;
	ePackageType.G_ROOM_FRIEND_STATE=0x2802;
	ePackageType.G_SHOOT_REQ=0x2803;
	ePackageType.G_SHOOT_RESP=0x2807;
	ePackageType.U_BATTLE_SYN_ALL_LIVING=0x0014;
	ePackageType.G_SHOOT_RESP_ALL=0x280A;
	ePackageType.G_MARQUEE_LIST=0x00A2;
	ePackageType.U_MARQUEE_LIST=0x280B;
	ePackageType.G_QUEST_EVENT=0x280C;
	ePackageType.G_CARD_RENAME=0x280D;
	ePackageType.G_CARD_SEX_CHANGE=0x280E;
	ePackageType.G_PVE_OPERATION=0x2811;
	ePackageType.U_PVE_INFO=0x00A3;
	ePackageType.U_PVE_BATTLE_RESULT=0x00A4;
	ePackageType.U_SHARE_LIST=0x00A5;
	ePackageType.U_PVE_BATTLE_BUFF_BUY_HISTORY=0x00A6;
	ePackageType.G_FRIENDRECOMMEND=0x2904;
	ePackageType.G_FRIEND_SEARCH_RESULT=0x2903;
	ePackageType.G_FRIEND_GIFT_ITEM=0x2900;
	ePackageType.G_FRIEND_TAKE_ITEM=0x2901;
	ePackageType.G_FRIEND_ITEM_ASK=0x2902;
	ePackageType.G_BOX_SPEED=0x2906;
	ePackageType.U_FRIEND_RECOMMEND_LIST=0x0100;
	ePackageType.U_FRIEND_SEARCH_RESULT=0x0101;
	ePackageType.G_SHART_CARD=0x2812;
	ePackageType.U_SHARE_VIEW_RESULT=0x00A7;
	ePackageType.G_BATTLE_CARDREWARD=0x2907;
	ePackageType.U_BATTLE_BEAT=0x0103;
	ePackageType.G_ACTIVITY_INFO=0x290B;
	ePackageType.U_ACTIVITY_LUCK_WHEEL=0x0105;
	ePackageType.U_ACTIVITY_LUCK_WHEEL_RESULT=0x0106;
	ePackageType.U_CARDS_INFO=0x0107;
	ePackageType.U_ADVERTISE_INFO=0x0108;
	ePackageType.G_ADVERTISEMENT_REWARD=0x290a;
	ePackageType.U_MYSTERY_INFO=0x00A8;
	ePackageType.G_MYSTERY_OP=0x2814;
	ePackageType.U_BATTLE_RECORD_RESULT=0x0104;
	ePackageType.G_GMACTIVE_OP=0x290B;
	ePackageType.U_GMACTIVE_INFO=0x00A9;
	ePackageType.U_GMACTIVE_USERDATA_INFO=0x00AA;
	ePackageType.U_GMACTIVE_OP_RESULT=0x00AB;
	ePackageType.G_SHART_COLLECT=0x2815;
	ePackageType.U_CAMPAIGN_LIST=0x0109;
	ePackageType.G_GETWXACODEUNLIMIT=0x290C;
	ePackageType.U_WXCODE=0x010A;
	ePackageType.G_FRIENDPAY_CREATE=0x290D;
	ePackageType.G_FRIENDPAY_INFO=0x290E;
	ePackageType.G_FRIENDPAY_REPLY=0x290F;
	ePackageType.U_FRIEND_PAY_CREATE=0x010B;
	ePackageType.U_FRIEND_PAY_INFO=0x010C;
	ePackageType.U_FRIEND_PAY_ALL_INFO=0x010D;
	ePackageType.G_BATTLE_RETURN_ROOM=0x2910;
	ePackageType.U_SEVENDAYSGOAL_CONDITION=0x010E;
	ePackageType.U_SEVENDAYSGOAL_CONDITION_LIST=0x010F;
	ePackageType.G_SEVENDAYSGOAL_REWARD=0x2912;
	ePackageType.U_SEVENDAYSGOAL_REWARD=0x0110;
	ePackageType.U_GUILD_SHOP_INFO=0x00AD;
	ePackageType.G_GUILD_SHOP=0x2818;
	ePackageType.U_GUILD_BUFF_INFO=0x00AE;
	ePackageType.G_GUILD_BUFF=0x2819;
	ePackageType.G_PAY_FB=0x3500;
	ePackageType.U_FB_PAY_RESULT=0x0A00;
	ePackageType.G_FIRST_CHARGE=0x281A;
	ePackageType.G_VIP_OPTION=0x2913;
	ePackageType.U_VIP_OPTION_RESULT=0x0111;
	ePackageType.U_VIP_WEEK_REWARD=0x0112;
	ePackageType.U_VIP_UPGRADE=0x0113;
	return ePackageType;
})()


//class laya.RegisterComponent
var RegisterComponent=(function(){
	function RegisterComponent(){}
	__class(RegisterComponent,'laya.RegisterComponent');
	var __proto=RegisterComponent.prototype;
	__proto.setup=function(){
		View.regComponent("NButton",NButton);
		View.regComponent("NImage",NImage);
		View.regComponent("ProgressBarEx",ProgressBarEx);
	}

	RegisterComponent.Instance=function(){
		if (laya.RegisterComponent._instance==null){
			RegisterComponent._instance=new RegisterComponent();
		}
		return laya.RegisterComponent._instance;
	}

	RegisterComponent._instance=null;
	return RegisterComponent;
})()


//class laya.ui.Align
var Align=(function(){
	function Align(){}
	__class(Align,'laya.ui.Align');
	Align.singleViewAlign=function(view,isEase,hAlign,vAlign,offsetX,offsetY,containerRect){
		(isEase===void 0)&& (isEase=false);
		(hAlign===void 0)&& (hAlign="center");
		(vAlign===void 0)&& (vAlign="center");
		(offsetX===void 0)&& (offsetX=0);
		(offsetY===void 0)&& (offsetY=0);
		if(containerRect==null){
			if(Align._defaultGameRect==null){
				Align._defaultGameRect=new Rectangle(0,0,ResizeMgr.bestFitWidth,ResizeMgr.bestFitHeight);
			}
			else{
				Align._defaultGameRect.width=ResizeMgr.bestFitWidth;
				Align._defaultGameRect.height=ResizeMgr.bestFitHeight;
			}
			containerRect=Align._defaultGameRect;
		};
		var newX=NaN;
		var newY=NaN;
		if(hAlign !="none"){
			if(hAlign=="left"){
				newX=Math.round(containerRect.x+0+offsetX);
			}
			else if(hAlign=="right"){
				newX=Math.round(containerRect.x+(containerRect.width-view.width*view.scaleX)+offsetX);
			}
			else{
				newX=Math.round(containerRect.x+(containerRect.width-view.width*view.scaleX)*0.5+offsetX);
			}
			view.x=newX;
		}
		if(vAlign !="none"){
			if(vAlign=="top"){
				newY=Math.round(containerRect.y+0+offsetY);
			}
			else if(vAlign=="bottom"){
				newY=Math.round(containerRect.y+(containerRect.height-view.height*view.scaleY)+offsetY);
			}
			else{
				newY=Math.round(containerRect.y+(containerRect.height-view.height*view.scaleY)*0.5+offsetY);
			}
			view.y=newY;
		}
	}

	Align._defaultGameRect=null;
	return Align;
})()


/**
*游戏层级管理
*@author chengwen.yi
*
*/
//class manager.LayerMgr
var LayerMgr=(function(){
	function LayerMgr(){
		this._sceneLayer=null;
		//场景层 （地图场景 温泉场景 战斗场景）
		this._uiLayer=null;
		//主界面UI层
		this._windowLayer=null;
		//窗口层
		this._topLayer=null;
		//popup窗口层
		this._newGuideLayer=null;
		//新手指引层
		this._newGuideTopLayer=null;
		this._flyWordLayer=null;
		this._sceneLayer=new Layer("sceneLayer");
		this._uiLayer=new Layer("uiLayer");
		this._windowLayer=new Layer("windowLayer");
		this._topLayer=new Layer("topLayer");
		this._topLayer.mouseThrough=true;
		this._newGuideLayer=new Layer("newGuideLayer");
		this._newGuideLayer.mouseEnabled=true;
		this._newGuideLayer.mouseThrough=true;
		this._newGuideTopLayer=new Layer("newGuideTopLayer");
		this._newGuideTopLayer.mouseEnabled=false;
		this._newGuideTopLayer.mouseThrough=false;
		this._flyWordLayer=new Layer("flyWordLayer");
	}

	__class(LayerMgr,'manager.LayerMgr');
	var __proto=LayerMgr.prototype;
	__proto.init=function(thisParent){
		thisParent.addChild(this._sceneLayer);
		thisParent.addChild(this._uiLayer);
		thisParent.addChild(this._windowLayer);
		thisParent.addChild(this._topLayer);
		thisParent.addChild(this._newGuideLayer);
		thisParent.addChild(this._newGuideTopLayer);
		thisParent.addChild(this._flyWordLayer);
	}

	/**
	*param source 添加目标
	*param type 层级
	*param center 是否居中
	*param blockBackgound 背景样式
	*param focusTop 焦点
	*param isAddAutoResize 是否添加自动适应位置
	*/
	__proto.addToLayer=function(source,type,isCenter){
		(isCenter===void 0)&& (isCenter=true);
		var container=this.getLayerByType(type);
		if(source && isCenter){
			source.x=int((ResizeMgr.bestFitWidth-source.width)/ 2);
			source.y=int((ResizeMgr.bestFitHeight-source.height)/ 2);
		}
		container.addChild(source);
	}

	__proto.getLayerByType=function(type){
		var layer=this._sceneLayer;
		switch(type){
			case 0:{
					layer=this._sceneLayer;
					break ;
				}
			case 1:{
					layer=this._uiLayer;
					break ;
				}
			case 2:{
					layer=this._windowLayer;
					break ;
				}
			case 3:{
					layer=this._topLayer;
					break ;
				}
			case 4:{
					layer=this._flyWordLayer;
					break ;
				}
			}
		return layer;
	}

	__getset(0,__proto,'flyWordLayer',function(){
		return this._flyWordLayer;
	});

	__getset(0,__proto,'newGuideTopLayer',function(){
		return this._newGuideTopLayer;
	});

	__getset(0,__proto,'uiLayer',function(){
		return this._uiLayer;
	});

	__getset(0,__proto,'sceneLayer',function(){
		return this._sceneLayer;
	});

	__getset(0,__proto,'windowLayer',function(){
		return this._windowLayer;
	});

	__getset(0,__proto,'topLayer',function(){
		return this._topLayer;
	});

	__getset(0,__proto,'newGuideLayer',function(){
		return this._newGuideLayer;
	});

	__getset(1,LayerMgr,'ins',function(){
		if (LayerMgr._ins==null){
			LayerMgr._ins=new LayerMgr();
		}
		return LayerMgr._ins;
	});

	LayerMgr.SCENE_LAYER=0;
	LayerMgr.UI_LAYER=1;
	LayerMgr.WINDOW_LAYER=2;
	LayerMgr.TOP_LAYER=3;
	LayerMgr.FLYWORD_LAYER=4;
	LayerMgr._ins=null;
	return LayerMgr;
})()


/**
*EventMgr 派发事件类型
*由于框架问题,用此类来统一管理所有的事件派发,避免直接用字符串写事件名引起冲突或者写错的问题
*@author shuhao.li
*/
//class manager.MgrEvent
var MgrEvent=(function(){
	function MgrEvent(){}
	__class(MgrEvent,'manager.MgrEvent');
	MgrEvent.CREATE_ROLE="createRole";
	MgrEvent.OPEN_VIEW="open_view";
	MgrEvent.CLOSE_VIEW="close_view";
	MgrEvent.UPDATE_BOX="UPDATE_BOX";
	MgrEvent.RECV_DONATE="recv_donate";
	MgrEvent.RECV_QUEST_DATA="recv_QuestData";
	MgrEvent.ENTER_MISSION="enter_Mission";
	MgrEvent.GET_KEY="get_key";
	MgrEvent.REMOVE_DESK_EFFECT="REMOVE_DESK_EFFECT";
	MgrEvent.U_QUEST_MSG="U_QUEST_MSG";
	MgrEvent.RECV_MARQUEE_SCROLL="recv_marquee_scroll";
	MgrEvent.CLOSE_ALL_TIPS="Close_All_Tips";
	MgrEvent.RECV_QQ_RELATION="recv_qq_relation";
	MgrEvent.CHANGESCALE="changescale";
	MgrEvent.CLOSE_GETGOODSVIEW="close_getGoodsView";
	MgrEvent.GUIDE_USESKILL="guide_useSkill";
	MgrEvent.CLOSE_SKILLTIPS="close_skilltips";
	MgrEvent.OPEN_SKILLTIPS="open_skilltips";
	MgrEvent.ON_CALLBACL_1="onCallBacl1";
	MgrEvent.USE_CARD="usecard";
	MgrEvent.CHANGE_CROWN="changeCrown";
	MgrEvent.SHOW_NEW_WORD="showNewWord";
	MgrEvent.SYNC_MULIT_DAMAGE="sync_mulit_damage";
	MgrEvent.SYNC_MULIT_INFO="sync_mulit_info";
	MgrEvent.CHECK_PLAYER_STATE="check_playerstate";
	MgrEvent.RECV_OVERTURN="recv_overturn";
	MgrEvent.REFRESH_DISTANCE="refreshdistance";
	MgrEvent.FIGHTER_DIE="fighter_die";
	MgrEvent.TOUCH_END="touchEnd";
	MgrEvent.CLEAN_BALLISTIC_POINTS="cleanBallisticPoints";
	MgrEvent.BATTLE_BALLISTIC_1="battle_ballistic_1";
	MgrEvent.BATTLE_BALLISTIC_CANCEL="battle_ballistic_cancel";
	MgrEvent.GUIDE_SHOW_SKILL_BOX="guide_showSkillbox";
	MgrEvent.BATTLE_BALLISTIC_GUIDE="battle_ballistic_guide";
	MgrEvent.EXIT_BATTLE_SCENE="exit_battle_scene";
	MgrEvent.ENTER_BACK_GROUND="enter_back_ground";
	MgrEvent.RESET_ZI_BAO_DAN="resetzibaodan";
	MgrEvent.ROLESKELETON_COMPLETE="roleskeleton_complete";
	MgrEvent.SYNC_MENU_HP="sync_menu_hp";
	MgrEvent.SYNC_HDHP="sync_hdhp";
	MgrEvent.DIE_REVIVE="die_revive";
	MgrEvent.BATTLE_ROOM_START="BattleRoom_start";
	MgrEvent.SYNC_MANDATE="sync_mandate";
	MgrEvent.RECV_KILL_REPORT="recv_kill_report";
	MgrEvent.RECV_MELEE_SCORE="recv_melee_score";
	MgrEvent.RECV_BATTLE_FIRE="recv_battle_fire";
	MgrEvent.BATTLE_OVER="battleOver";
	MgrEvent.ENTER_BATTLE_SCENE="enter_battle_scene";
	MgrEvent.CHATEXPRESSION_ICON_NAME="CHATEXPRESSION_ICON_NAME";
	MgrEvent.CLICK_FRIEND_BATTLE="CLICK_FRIEND_BATTLE";
	MgrEvent.UPDATE_FRIENDVIEEW_PLAYERMSG="UPDATE_FRIENDVIEEW_PLAYERMSG";
	MgrEvent.REMOVE_ROOM_CHAT_MSG="remove_room_chat_msg";
	MgrEvent.DELETE_REQUEST_ITEM="delete_request_item";
	MgrEvent.CLEAR_STATEMENT_LIST="ClearStatementList";
	MgrEvent.ENTER_GUILD="enter_guild";
	MgrEvent.CLICK_BTN_GUILD="click_btnGuild";
	MgrEvent.ADD_BRIEF_CHAT_BOX="add_brief_chat_box";
	MgrEvent.VS_ENTER_GAME="VSEnterGame";
	MgrEvent.YQ_COOL_TIME="yq_cool_time";
	MgrEvent.ACTIVE_FRIEND_SKILL="activeFriendSkill";
	MgrEvent.GUIDE_RESET_SKILL_BTN="guide_resetSkillBtn";
	MgrEvent.SHOW_SKILL_MAIN_VIEW="show_skillMainView";
	MgrEvent.CARD_STOP_SHAKE="CARD_STOP_SHAKE";
	MgrEvent.SKILL_USE="SKILL_USE";
	MgrEvent.UPDATE_CARD_COMPLETE="UPDATE_CARD_COMPLETE";
	MgrEvent.CARD_RECTANGLE_ISNO="CARD_RECTANGLE_ISNO";
	MgrEvent.GUIDE_VISIBLE="guide_visible";
	MgrEvent.ANIMATION_COMPLETE="animation_complete";
	MgrEvent.CLICK_BTN_MISSION="click_btnMission";
	MgrEvent.CLICK_GET_REWARD="click_getReward";
	MgrEvent.UNLOCK_CHEST="unlockChest";
	MgrEvent.SHOW_CHEST_PAGE="showChestPage";
	MgrEvent.OPEN_BOX="openBox";
	MgrEvent.U_ONLINE_STATES_BG="U_ONLINE_STATES_BG";
	MgrEvent.U_ONLINE_STATES="U_ONLINE_STATES";
	MgrEvent.U_FRIENDS_RANK_LIST="U_FRIENDS_RANK_LIST";
	MgrEvent.UPDATE_FRIENDS_ONLINE_STATE="update_friends_online_state";
	MgrEvent.UPDATE_PLAYERALL_RANKING="update_playerAll_ranking";
	MgrEvent.UPDATE_HALL_RANKING="update_hall_ranking";
	MgrEvent.UPDATE_GREENALL_RANKING="update_greenAll_ranking";
	MgrEvent.ENTER_APPLE_ROOM="enter_AppleRoom";
	MgrEvent.APPLE_ROOM_START="AppleRoom_start";
	MgrEvent.VS_LOAD_PK="vs_load_pk";
	MgrEvent.CLOSE_FRIEND_LIST="closeFriendList";
	MgrEvent.SHARE_COMPLETE_CLOSE_CARDEFFECT="SHARE_COMPLETE_CLOSE_CARDEFFECT";
	MgrEvent.GUIDE_CLOSE_BTN="guide_closeBtn";
	MgrEvent.UPDATE_SELECT_INDEX="UPDATE_SELECT_INDEX";
	MgrEvent.HIT_POINT="HIT_POINT";
	MgrEvent.CARD_SHAKE="CARD_SHAKE";
	MgrEvent.UPDATE_BATTLEDECKVIEW="UPDATE_BATTLEDECKVIEW";
	MgrEvent.UPDATE_ACTIVITY="Update_Activity";
	MgrEvent.REFRESH_POINT="refreshpoint";
	MgrEvent.INIT_HERO_BASEINFO="init_hero_baseinfo";
	MgrEvent.U_WORLD_RANK_LIST="U_WORLD_RANK_LIST";
	MgrEvent.IS_CLICK_CARD="IsClickCard";
	MgrEvent.GAME_ISSTICKY_CHAGNGE="GAME_ISSTICKY_CHAGNGE";
	MgrEvent.LOCAL_BATTLE_MGR_TURN_RIGHT="LOCAL_BATTLE_MGR_TURN_RIGHT";
	MgrEvent.CHANGE_LANGUAGE="changeLanguage";
	MgrEvent.UPDATE_ALL_IMAGE="UPDATE_ALL_IMAGE";
	MgrEvent.UPDATE_SHARE_RESPONSE="UPDATE_SHARE_RESPONSE";
	MgrEvent.ACTIVITY_QUESTIONACTIVITY_CLOSE="Activity-questionActivity-close";
	MgrEvent.ACTIVITY_SHOUCHONGACTIVITY_CLOSE="Activity-shouchongActivity-close";
	MgrEvent.ACTIVITY_ISDONE="Activit_isDone";
	MgrEvent.ACTIVITY_SET_RED="ACTIVITY_SET_RED";
	MgrEvent.ACTIVITY_BIGZP_OVER="activity-bigZp-over";
	MgrEvent.UPDATE_SHAREGIFT_INFO="UPDATE_SHAREGIFT_INFO";
	MgrEvent.UPDATE_DATA="update_data";
	MgrEvent.TURN_WHEEL="turn_wheel";
	MgrEvent.GET_WHEEL_AWARD="get_wheel_award";
	MgrEvent.ADD_MESSAGE="add_message";
	MgrEvent.RECV_BATTLEMAPMSG="recv_battlemapmsg";
	MgrEvent.RECV_BATTLESTART="recv_battlestart";
	MgrEvent.RECV_BATTLEQUITMATCH="recv_battleQuitMatch";
	MgrEvent.RECV_MULITBATTLE="recv_mulitbattle";
	MgrEvent.SYNC_PREPARE="sync_prepare";
	MgrEvent.ROLE_MOVE_DIR="ROLE_MOVE_DIR";
	MgrEvent.RECV_PVE_BUFF="RECV_PVE_BUFF";
	MgrEvent.BATTLE_RECORD_CHANGE="battle_record_change";
	MgrEvent.UPDATE_MAIL="UPDATE_MAIL";
	MgrEvent.SET_HALL_MAIL_RED="SET_HALL_MAIL_RED";
	MgrEvent.CHAT_SEND_UNREAD_MSG="CHAT-send_unread_msg";
	MgrEvent.INIT_ROOM_BOX="INIT_ROOM_BOX";
	MgrEvent.RECE_FRIENDLIST="rece_friendlist";
	MgrEvent.UPDATE_FRIENDVIEW_SYSTEMMSG="UPDATE_FRIENDVIEW_SYSTEMMSG";
	MgrEvent.UPDATE_FRIEND_BATTLE_STATE="UPDATE_FRIEND_BATTLE_STATE";
	MgrEvent.UPDATE_FRIEND_CHAT="UPDATE_FRIEND_CHAT";
	MgrEvent.RECV_QQFRIENDLIST="recv_QQfriendlist";
	MgrEvent.MSG_UPDATE_MY_FRIEND_LIST="msg_update_my_friend_list";
	MgrEvent.MSG_CHAT_DATA_CHANGE="msg_chat_data_change";
	MgrEvent.MSG_REFRESH_RECENT_FRIEND="msg_refresh_recent_friend";
	MgrEvent.MSG_REFRESH_FACEBOOK_FRIEND="msg_refresh_facebook_friend";
	MgrEvent.MSG_GET_INQUIRE_PLAYER="msg_get_inquire_player";
	MgrEvent.MSG_UPDATE_GUILD_FRIEND="msg_update_guild_friend";
	MgrEvent.MSG_REFUSE_FRIEND_BATTLE="msg_refuse_friend_battle";
	MgrEvent.MSG_UPDATE_SYSTEM_INFO="msg_update_system_info";
	MgrEvent.MSG_UPDATE_FRIEND_BATTLE_INFO="msg_update_friend_battle_info";
	MgrEvent.RECV_GUILDBOX_INFO="recv_guildbox_info";
	MgrEvent.RECV_GUILDBOX_AWARD="recv_guildbox_award";
	MgrEvent.REFRESH_ROOM_STATE="refresh_room_state";
	MgrEvent.RECV_GUILD_BATTLE_CAL="recv_guild_battle_cal";
	MgrEvent.RECV_GUILD_BATTLE_LIST="recv_guild_battle_list";
	MgrEvent.RECV_CHAT_MSG="recv_chat_msg";
	MgrEvent.RECV_GUILD_PASSJOIN="recv_guild_passjoin";
	MgrEvent.DONATE_GET_COIN="DonateGetCoin";
	MgrEvent.RECV_CHANGE_LEADER="recv_change_leader";
	MgrEvent.RECV_DONATE_REQUEST="recv_donate_request";
	MgrEvent.CLOSE_GUILDMAINPAGE="close_GuildMainPage";
	MgrEvent.RECV_GUILD_INFO="recv_guild_info";
	MgrEvent.RECV_GUILD_MEMBER_LIST="recv_guild_member_list";
	MgrEvent.RECV_GUILD_REQUEST_LIST="recv_guild_request_list";
	MgrEvent.RECV_GUILD_LIST="recv_guild_list";
	MgrEvent.RECV_SEARCH_LIST="recv_search_list";
	MgrEvent.RECV_SHOWDOATETIP="recv_showDoateTip";
	MgrEvent.RECV_EXITGUILD="recv_exitGuild";
	MgrEvent.RECV_GUILDOPTION="recv_GuildOption";
	MgrEvent.CLOSE_GUILDINFOPAGE="close_GuildInfoPage";
	MgrEvent.RECV_OPTIONNOTICE="recv_OptionNotice";
	MgrEvent.UPDATE_GUILDSHOP_DATA="UPDATE_GUILDSHOP_DATA";
	MgrEvent.UPDATE_GUILDBUFF_DATA="UPDATE_GUILDBUFF_DATA";
	MgrEvent.GUILD_SHOW_RED_POINT="GUILD_SHOW_RED_POINT";
	MgrEvent.RECV_TRANSFER_GUILD="recv_transfer_guild";
	MgrEvent.GUIDE_START="guide_start";
	MgrEvent.DISABLE_HALLMAINVIEW="disable_HallMainView";
	MgrEvent.BATTLE_LOSE="battle_lose";
	MgrEvent.CLOSE_SKILLMAINVIEW="close_skillMainView";
	MgrEvent.CLOSE_QUESTMAINVIEW="close_QuestMainView";
	MgrEvent.UPDATE_WIFI_STATE="UPDATE_WIFI_STATE";
	MgrEvent.ADDITEMBOX_UPDATE="ADDITEMBOX_UPDATE";
	MgrEvent.ITEM_BOX_UPDATE="item_box_update";
	MgrEvent.RECV_SPEAKER_CHANGE="recv_speaker_change";
	MgrEvent.PLAYER_LEVEL_UP="PLAYER_LEVEL_UP";
	MgrEvent.RECV_UPDATEDONATETIME="recv_updateDonateTime";
	MgrEvent.ACTIVITY_BIGZP="activity-bigZp";
	MgrEvent.RECV_SEASON_RANK="recv_season_rank";
	MgrEvent.RECV_SEASON_INFO="recv_season_info";
	MgrEvent.RECV_QUESTMSGNUM="recv_QuestMsgNum";
	MgrEvent.RECV_ROOM_PREPARE="recv_room_prepare";
	MgrEvent.RECV_ROOM_FRIENDLIST="recv_room_friendlist";
	MgrEvent.RECV_ROOM_PLAYERUPDATE="recv_room_playerupdate";
	MgrEvent.ROOM_INVITE_FRIEND="ROOM_INVITE_FRIEND";
	MgrEvent.ROOM_KICKED_OUT="ROOM_KICKED_OUT";
	MgrEvent.UPDATE_QUESTIONVIEW="UPDATE_QUESTIONVIEW";
	MgrEvent.RECV_BUYRESULT="recv_buyResult";
	MgrEvent.UPDATE_SHOP_LIST="update_shop_list";
	MgrEvent.SKILL_UPGRADE="SKILL_UPGRADE";
	MgrEvent.SKILL_USE_CARD="SKILL_USE_CARD";
	MgrEvent.SKILL_UPDATE="SKILL_UPDATE";
	MgrEvent.SYNC_BATTLE_CREATE_MSG="SYNC_BATTLE_CREATE_MSG";
	MgrEvent.SYNC_BATTLE_PREPARE="SYNC_BATTLE_PREPARE";
	MgrEvent.CLOSE_MIAN_MODE_CHOOSE_VIEW="CLOSE_MIAN_MODE_CHOOSE_VIEW";
	MgrEvent.MONSTER_PLAY_OVER="MONSTER_PLAY_OVER";
	MgrEvent.DELETE_CURRENT_PLAY_MARQUEE="DELETE_CURRENT_PLAY_MARQUEE";
	MgrEvent.MYSTERY_SHOP_ITEM_UPDATE="mystery_shop_item_update";
	MgrEvent.GM_ACTIVE_DATA_UPDATE="gm_active_data_update";
	MgrEvent.GM_ACTIVE_USER_DATA_UPDATE_BY_LVBOX="gm_active_user_data_update_by_lvbox";
	MgrEvent.GM_ACTIVE_OP_RESULT_BY_LVBOX="gm_active_op_result_by_lvbox";
	MgrEvent.LEVEL_BOX_UPDATE="level_box_update";
	MgrEvent.GM_ACTIVE_USER_DATA_UPDATE_BY_RECHARGE="gm_active_user_data_update_by_recharge";
	MgrEvent.GM_ACTIVE_OP_RESULT_BY_RECHARGE="gm_active_op_result_by_recharge";
	MgrEvent.GM_ACTIVE_USER_DATA_UPDATE_BY_COMMONACTIVITY="gm_active_user_data_update_by_commonactivity";
	MgrEvent.GM_ACTIVE_OP_RESULT_BY_COMMONACTIVITY="gm_active_op_result_by_commonactivity";
	MgrEvent.RECHARGE_UPDATE="recharge_update";
	MgrEvent.GM_ACTIVE_USER_DATA_UPDATE_BY_CONSUME="gm_active_user_data_update_by_consume";
	MgrEvent.GM_ACTIVE_OP_RESULT_BY_CONSUME="gm_active_op_result_by_consume";
	MgrEvent.RECHARGE_CONSUME="consume_update";
	MgrEvent.OPEN_BATTLE_RECORD="OPEN_BATTLE_RECORD";
	MgrEvent.CHANGE_GUILD_POINT="change_guild_point";
	MgrEvent.UPDATE_SEVEN_DAY_TARGET_VIEW="UPDATE_SEVEN_DAY_TARGET_VIEW";
	MgrEvent.PLAYER_VIP_UPGRADE="player_vip_upgrade";
	MgrEvent.VIP_EXP_UPDATE="vip_exp_update";
	MgrEvent.VIP_GITF_BUYED="vip_gift_buyed";
	MgrEvent.VIP_WEEK_REWARD_CHANGE="vip_week_reward_change";
	MgrEvent.VIP_BUY_ROCKET_PROFIT="vip_buy_rocket_profit";
	MgrEvent.UPDATE_INVIT_PAY="UPDATE_INVIT_PAY";
	return MgrEvent;
})()


/**
*屏幕适配管理
*@author chengwen.yi
*
*/
//class manager.ResizeMgr
var ResizeMgr=(function(){
	function ResizeMgr(){}
	__class(ResizeMgr,'manager.ResizeMgr');
	__getset(1,ResizeMgr,'bestFitWidth',function(){
		return ResizeMgr._bestFitWidth;
	});

	/**
	*是否显示控制台
	*@return
	*
	*/
	__getset(1,ResizeMgr,'isShowConsole',function(){
		var bool=window.outerWidth==window.innerWidth&&window.outerHeight==window.innerHeight;
		return bool;
	});

	__getset(1,ResizeMgr,'bestFitHeight',function(){
		return ResizeMgr._bestFitHeight;
	});

	__getset(1,ResizeMgr,'scaleValue',function(){
		return ResizeMgr._scaleValue;
	});

	/**
	*是否是小窗口
	*@return
	*
	*/
	__getset(1,ResizeMgr,'isSmallWindow',function(){
		var bool=UrlParam.PARAMS["PLID"]=='fb';
		return bool;
	});

	ResizeMgr.init=function(){
		Laya.stage.on("resize",ResizeMgr,ResizeMgr.onResize);
	}

	ResizeMgr.onResize=function(){
		var $browserWidth=Browser.width;
		var $browserHeight=Browser.height;
		var _browserWidth=0;
		var _browserHeight=0;
		if ($browserWidth < $browserHeight){
			_browserWidth=$browserHeight;
			_browserHeight=$browserWidth;
		}
		else{
			_browserWidth=$browserWidth;
			_browserHeight=$browserHeight;
		};
		var _fitMinWidthScaleValue=1;
		var _fitMaxWidthScaleValue=1;
		var _fitMinHeightScaleValue=1;
		var _fitMaxHeightScaleValue=1;
		_fitMinWidthScaleValue=_browserWidth / 1136;
		_fitMinHeightScaleValue=_browserHeight / 640;
		ResizeMgr._scaleValue=Math.min(_fitMinWidthScaleValue,_fitMinHeightScaleValue);
		Laya.stage.scaleX=Laya.stage.scaleY=ResizeMgr._scaleValue;
		ResizeMgr._bestFitWidth=1136;
		ResizeMgr._bestFitHeight=640;
		var halfW=(_browserWidth-ResizeMgr._scaleValue *ResizeMgr._bestFitWidth)>> 1;
		var halfH=(_browserHeight-ResizeMgr._scaleValue *ResizeMgr._bestFitHeight)>> 1;
		Laya.stage.pos(halfW,halfH);
		console.log("size:",Laya.stage.width,Laya.stage.height+" Browser.width:"+Browser.width+" , Browser.height:"+Browser.height+" scaleValue:"+ResizeMgr._scaleValue+"_bestFitWidth:"+ResizeMgr._bestFitWidth+"_bestFitHeight:"+ResizeMgr._bestFitHeight);
	}

	ResizeMgr.addListener=function(listener,isExecute){
		(isExecute===void 0)&& (isExecute=false);
		if(isExecute){
			listener.onResize(ResizeMgr._bestFitWidth,ResizeMgr._bestFitHeight);
		}
	}

	ResizeMgr.removeListener=function(listener){}
	ResizeMgr.MIN_WIDTH=1136;
	ResizeMgr.MAX_WIDTH=1360;
	ResizeMgr.MIN_HEIGHT=640;
	ResizeMgr.MAX_HEIGHT=900;
	ResizeMgr._scaleValue=1;
	ResizeMgr._bestFitWidth=NaN;
	ResizeMgr._bestFitHeight=NaN;
	ResizeMgr.RedFrame=null;
	ResizeMgr.StageFrame=null;
	return ResizeMgr;
})()


/**
*用户本地数据缓存类
*@author chengwen.yi
*
*/
//class manager.UserCache
var UserCache=(function(){
	function UserCache(){
		this.userEnKey=null;
		this.isInit=false;
		this._isFirstLogin=true;
	}

	__class(UserCache,'manager.UserCache');
	var __proto=UserCache.prototype;
	__proto.init=function(userId){
		if(LocalStorage.support){
			var value=LocalStorage.getItem("KEY"+userId);
			if(value==null){
				this.userEnKey="enKey"+new Date().getTime();
				LocalStorage.setItem("KEY"+userId,this.userEnKey);
			}
			else{
				this.userEnKey=value;
				this._isFirstLogin=false;
			}
			this.isInit=true;
		}
	}

	__proto.setJSON=function(key,value){
		if(this.isInit){
			LocalStorage.setJSON(this.userEnKey+key,value);
		}
	}

	__proto.getJSON=function(key){
		return this.isInit ? LocalStorage.getJSON(this.userEnKey+key):null;
	}

	__proto.setItem=function(key,value){
		if(this.isInit){
			LocalStorage.setItem(this.userEnKey+key,value);
		}
	}

	__proto.getItem=function(key){
		return this.isInit ? LocalStorage.getItem(this.userEnKey+key):null;
	}

	__proto.removeItem=function(key){
		if(this.isInit){
			LocalStorage.removeItem(this.userEnKey+key);
		}
	}

	__getset(0,__proto,'isFirstLogin',function(){
		return this._isFirstLogin;
	});

	__getset(1,UserCache,'ins',function(){
		if(UserCache._ins==null){
			UserCache._ins=new UserCache();
		}
		return UserCache._ins;
	});

	UserCache.KEY="UserCache";
	UserCache._ins=null;
	return UserCache;
})()


//class manager.VersionMgr
var VersionMgr=(function(){
	function VersionMgr(){}
	__class(VersionMgr,'manager.VersionMgr');
	VersionMgr.init=function(versionUrl,onInitCompleteHandler){
		if(versionUrl.indexOf(".json")!=-1){
			Laya.loader.load(versionUrl,Handler.create(VersionMgr,onComplete),null,"json",1,false);
		}
		else{
			Laya.loader.load(versionUrl,Handler.create(VersionMgr,onCompleteBuffer),null,"arraybuffer",1,false);
		}
		function onComplete (data){
			CLog.log("加载版本文件"+versionUrl+(data ? "成功" :"出错,加载资源将不使用版本控制!"));
			if(data)URL.version=data;
			if(onInitCompleteHandler !=null)onInitCompleteHandler.run();
		}
		function onCompleteBuffer (data){
			if(data){
				var byteArray=new ByteArray();
				byteArray.writeArrayBuffer(data);
				byteArray.position=0;
				byteArray.uncompress();
				var obj=byteArray.readObject();
			}
			CLog.log("加载版本文件"+versionUrl+(data ? "成功" :"出错,加载资源将不使用版本控制"));
			if(data)URL.version=obj;
			if(onInitCompleteHandler !=null)onInitCompleteHandler.run();
		}
	}

	return VersionMgr;
})()


//class com.netease.protobuf.Binary64
var Binary64=(function(){
	function Binary64(low,high){
		this.low=0;
		/**
		*@private
		*/
		this.internalHigh=0;
		(low===void 0)&& (low=0);
		(high===void 0)&& (high=0);
		this.low=low
		this.internalHigh=high
	}

	__class(Binary64,'com.netease.protobuf.Binary64');
	var __proto=Binary64.prototype;
	/**
	*Division by n.
	*@return The remainder after division.
	*/
	__proto.div=function(n){
		var modHigh=this.internalHigh % n;
		var mod=(this.low % n+modHigh *6)% n
		this.internalHigh /=n;
		var newLow=(modHigh *Number(0x100000000)+this.low)/ n
		this.internalHigh+=newLow / 0x100000000
		this.low=newLow
		return mod
	}

	__proto.mul=function(n){
		var newLow=Number(this.low)*n
		this.internalHigh=newLow / 0x100000000+Number(this.internalHigh)*n
		this.low=newLow
	}

	__proto.add=function(n){
		var newLow=Number(this.low)+n
		this.internalHigh=newLow / 0x100000000+this.internalHigh
		this.low=newLow
	}

	__proto.bitwiseNot=function(){
		this.low=~this.low
		this.internalHigh=~this.internalHigh
	}

	return Binary64;
})()


/**
*弹道轨迹演算法
*@author huyouwei
*/
//class server.basecalc.Ballistic
var Ballistic=(function(){
	function Ballistic(){}
	__class(Ballistic,'server.basecalc.Ballistic');
	Ballistic.sampling=function(g,v0,angle,x,y,height,fengli,air,m,wind,dir,sampleCount){
		var curve=new Curve(g,v0,angle,x,y,height,fengli,air,m,wind,dir,sampleCount);
		var rst=curve.sampling();
		return rst;
	}

	Ballistic.sampling2=function(a,v0,angle,x,y,height,fengli,air,m,wind,dir){
		var curve=new Curve(a,v0,angle,x,y,height,fengli,air,m,wind,dir);
		var rst=curve.sampling2();
		return rst;
	}

	return Ballistic;
})()


/**
*...huyouwei
*@author
*/
//class server.basecalc.Curve
var Curve=(function(){
	function Curve(g,v0,angle,x,y,height,fengli,air,m,battleWind,dir,sampleCount){
		this.vx=0.0;
		//x方向初速度
		this.vy=0.0;
		//y方向初速度
		this.x=0.0;
		//距离世界坐标原点y方向的值
		this.y=0.0;
		//距离世界坐标原点y方向的值
		this.battleWind=0;
		this.g=0;
		this.v0=0;
		this.fengli=0;
		this.air=0;
		this.m=0;
		this.height=0;
		this.mg=0;
		this.mair=0;
		this.dir=0;
		this.sampleCount=10;
		this._lastPoint=null;
		(sampleCount===void 0)&& (sampleCount=30);
		this.g=g;
		this.v0=v0;
		this.height=height;
		this.x=x;
		this.y=height-y;
		this.fengli=fengli;
		this.air=air;
		this.m=m;
		this.battleWind=battleWind;
		this.dir=dir;
		this.mg=10;
		this.mair=2.0;
		this.sampleCount=sampleCount
		this.vx=Math.cos(Math.PI/180 *angle)*v0;
		this.vy=Math.sin(Math.PI/180 *angle)*v0;
	}

	__class(Curve,'server.basecalc.Curve');
	var __proto=Curve.prototype;
	__proto.getAy=function(){
		return this.m==0?0:Math.floor((this.g *this.m *this.mg *(-1)-this.air *this.mair *this.vy)/this.m);
	}

	__proto.getAx=function(){
		return this.m==0?0:Math.floor((this.fengli*this.battleWind/10.0-this.air *this.mair *this.vx)/this.m);
	}

	__proto.updateVx=function(dt){
		var ax=this.getAx();
		this.vx=this.vx+ax *dt;
	}

	__proto.updateVy=function(dt){
		var ay=this.getAy();
		this.vy=this.vy+ay *dt;
	}

	__proto.canSample=function(x,y){
		if(!this._lastPoint){
			this._lastPoint=new Point(x,y);
			return false;
		};
		var len=Math.sqrt(Math.pow(this._lastPoint.x-x,2)+Math.pow(this._lastPoint.y-y,2));
		if(len >=50){
			this._lastPoint=new Point(x,y);
			return true;
		}
		return false;
	}

	__proto.sampling=function(){
		var time=0.033/2;
		var count=this.sampleCount;
		var num=0;
		var points=[];
		this._lastPoint=null;
		do{
			this.updateVx(time);
			this.x=this.x+this.vx *time;
			this.updateVy(time);
			this.y=this.y+this.vy *time;
			if(this.canSample(this.x,this.y)){
				points.push(new Point(this.x,this.height-this.y));
				--count;
			}
		}
		while(count > 0)
		return points;
	}

	__proto.sampling2=function(){
		var time=0.02;
		var count=100;
		var points=[];
		do{
			this.updateVx(time);
			this.x=this.x+this.vx *time;
			this.updateVy(time);
			this.y=this.y+this.vy *time;
			points.push(new Point(this.x,this.height-this.y));
			--count;
		}
		while(count > 0)
		return points;
	}

	__proto.trans=function(){
		var flag=-1.0;
		if(this.dir==1){
			flag=1.0;
		}
		return flag;
	}

	__proto.getFrameRate=function(frameRate){
		var rate=1.0/60.0;
		if(frameRate=="fast"){
			rate=1.0/60.0;
			}else if(frameRate=="slow"){
			rate=1.0/30.0;
		}
		return rate;
	}

	return Curve;
})()


//class server.basecalc.Tile
var Tile=(function(){
	function Tile(data,width,height,digable,tileID){
		/**
		*地块标识
		*/
		this.tileID=0;
		/**
		*像素数据
		*/
		this.data=null;
		/**
		*像素宽度
		*/
		this.width=0;
		/**
		*像素高度
		*/
		this.height=0;
		/**
		*边框
		*/
		this.rect=null;
		/**
		*存储单元的字节宽度(如果在原地图大小做缩放的时候，一定要按等比缩放，不能随便改，否则会错位例如2001,1502)
		*/
		this.bw=0;
		/**
		*存储单元的字节高度
		*/
		this.bh=0;
		/**
		*可否挖坑
		*/
		this.digable=false;
		(tileID===void 0)&& (tileID=0);
		this.data=data;
		this.width=width;
		this.height=height;
		this.digable=digable;
		this.tileID=tileID;
		this.bw=Math.ceil(width / 8.0);
		this.bh=height;
		this.rect=new Rectangle(0,0,width,height);
	}

	__class(Tile,'server.basecalc.Tile');
	var __proto=Tile.prototype;
	/**
	*挖坑
	*
	*@param cx
	*炸弹的x位置
	*@param cy
	*炸弹的y位置
	*@param surface
	*炸弹的外形
	*@param border
	*/
	__proto.dig=function(cx,cy,surface,border){
		if (this.digable && surface !=null){
			var x1=(int)(cx-surface.getWidth()/ 2);
			var y1=(int)(cy-surface.getHeight()/ 2);
			this.remove(x1,y1,surface);
			if (border !=null){
				x1=(int)(cx-border.getWidth()/ 2);
				y1=(int)(cy-border.getHeight()/ 2);
				this.add(x1,y1,surface);
			}
		}
	}

	/**
	*@param x1
	*@param y1
	*@param surface
	*/
	__proto.add=function(x1,y1,surface){}
	/**移除地图块数据 **/
	__proto.remove=function(x,y,tile){
		try{
			if (this.rect.width==0 || this.rect.height==0){
				return;
			};
			var tileRect=tile.getBound(server.basecalc.Tile.RECTANGLE);
			tileRect.x=x;
			tileRect.y=y;
			var rect=tileRect.intersection(this.rect,server.basecalc.Tile.RECTANGLE);
			var w=rect.width;
			var h=rect.height;
			var x1=rect.x;
			var y1=rect.y;
			var x2=(rect.x-x);
			var y2=(rect.y-y);
			for (var i=0;i < h;++i){
				var dstStart=x1+(i+y1)*this.bw *8;
				var srcStart=x2+(i+y2)*tile.bw *8;
				Tile.bitwiseSet(this.data,tile.getData(),dstStart,srcStart,w);
			}
		}
		catch (e){
		}
	}

	/**
	*
	*判断由(x,y)指定的点是否为空白点
	*
	*@param x
	*@param y
	*@return
	*/
	__proto.isEmpty=function(x,y){
		if (x >=0 && x < this.width && y >=0 && y < this.height){
			var flag=Tile.toByte((0x01 << (7-x % 8)));
			var value=this.data[y *this.bw+Math.floor(x / 8)];
			value=value & flag;
			return value==0;
		}
		return true;
	}

	/**
	*能否挖坑
	*
	*@return
	*/
	__proto.canDig=function(){
		return this.digable;
	}

	/**
	*判断(x,y)点沿竖直方向是否全为空白点
	*
	*@param x
	*@param y
	*@param h
	*@return
	*/
	__proto.isYLineEmtpy=function(x,y,h){
		if (x >=0 && x < this.width){
			y=y < 0 ? 0 :y;
			h=y+h > this.height ? this.height-y :h;
			for (var i=0;i < h;i++){
				if (!this.isEmpty(x,y+i)){
					return false;
				}
			}
			return true;
		}
		return true;
	}

	/**
	*@param rect
	*@return
	*/
	__proto.isRectangleEmptyQuick=function(rectPara){
		rectPara=rectPara.intersection(this.rect,server.basecalc.Tile.RECTANGLE);
		var right=rectPara.x+rectPara.width;
		var left=rectPara.x;
		var bottom=rectPara.y+rectPara.height;
		var top=rectPara.y;
		if (this.isEmpty(right,bottom)&& this.isEmpty(left,bottom)&& this.isEmpty(right,top)&& this.isEmpty(left,top)){
			return true;
		}
		return false;
	}

	/**
	*沿点(x,y)竖直方向h个像素点内寻找第一个非空点
	*
	*@param x
	*@param y
	*@param h
	*@return
	*/
	__proto.findNotEmptyPoint=function(x,y,h){
		if (x >=0 && x < this.width){
			y=y < 0 ? 0 :y;
			h=y+h > this.height ? this.height-y :h;
			for (var i=0;i < h;i++){
				if (!this.isEmpty(x,y+i)){
					return server.basecalc.Tile.POINT.setTo(x,y+i);
				}
			}
			return server.basecalc.Tile.POINT.setTo(-1,-1);
		}
		return server.basecalc.Tile.POINT.setTo(-1,-1);
	}

	//从顶上开始找
	__proto.findNotEmptyPoint2=function(x,y){
		if (x >=0 && x < this.width){
			y=y < 0 ? 0 :y;
			for (var i=y;i >=0;i--){
				if (!this.isEmpty(x,i)){
					return server.basecalc.Tile.POINT.setTo(x,i);
				}
			}
			return server.basecalc.Tile.POINT.setTo(-1,-1);
		}
		return server.basecalc.Tile.POINT.setTo(-1,-1);
	}

	//从x，y位置往上找第一个为空的像素点
	__proto.findEmptyPoint=function(x,y){
		if (x >=0 && x < this.width){
			y=y < 0 ? 0 :y;
			for (var i=y;i < this.height;i++){
				if (this.isEmpty(x,i)){
					return server.basecalc.Tile.POINT.setTo(x,i);
				}
			}
			return server.basecalc.Tile.POINT.setTo(-1,-1);
		}
		return server.basecalc.Tile.POINT.setTo(-1,-1);
	}

	//从顶上开始
	__proto.isYLineEmtpy2=function(x,y){
		if (x >=0 && x < this.width){
			y=y < 0 ? 0 :y;
			for (var i=y;i >=0;i--){
				if (!this.isEmpty(x,i)){
					return false;
				}
			}
			return true;
		}
		return true;
	}

	__proto.setData=function(data){
		this.data=data;
	}

	__proto.getData=function(){
		return this.data;
	}

	__proto.getTileID=function(){
		return this.tileID;
	}

	__proto.setTileID=function(tileID){
		this.tileID=tileID;
	}

	__proto.getWidth=function(){
		return this.width;
	}

	__proto.getHeight=function(){
		return this.height;
	}

	__proto.getBound=function(out){
		return this.rect.clone(out);
	}

	__proto.destroy=function(){
		this.data && (this.data.length=0);
		this.data=null;
		this.rect=null;
	}

	Tile.toByte=function(value){
		if (value >=128){
			return value-256;
		}
		return value;
	}

	Tile.bitwiseSet=function(dst,src,dstStart,srcStart,num){
		while (num > 0){
			var srcInt=src[Math.floor(srcStart / 8)];
			var need=8-dstStart % 8;
			need=Math.min(num,need);
			var has=8-srcStart % 8;
			srcInt <<=(srcStart % 8);
			srcInt >>=(dstStart % 8);
			if (need > has){
				var src1=src[Math.floor(srcStart / 8)+1];
				src1 >>=(8-need+has);
				srcInt |=src1;
			};
			var dstInt=dst[Math.floor(dstStart / 8)];
			dstInt &=(0xff-srcInt);
			dst[Math.floor(dstStart / 8)]=Tile.toByte(dstInt);
			srcStart+=need;
			dstStart+=need;
			num-=need;
		}
	}

	__static(Tile,
	['POINT',function(){return this.POINT=new Point(-1,-1);},'RECTANGLE',function(){return this.RECTANGLE=new Rectangle();}
	]);
	return Tile;
})()


//class server.basecalc.TileReader
var TileReader=(function(){
	function TileReader(){}
	__class(TileReader,'server.basecalc.TileReader');
	TileReader.readMap=function(buffer){
		buffer.endian="littleEndian";
		var _data;
		var width=buffer.readShort();
		var height=buffer.readShort();
		var foreLen=buffer.readInt();
		if (foreLen > 0){
			_data=new Int8Array(buffer._byteView_.buffer.slice(buffer.position,buffer.position+foreLen));
			buffer.position+=foreLen;
			TileReader.force=new Tile(_data,width,height,true);
		};
		var deadLen=buffer.readInt();
		if (deadLen > 0){
			_data=new Int8Array(buffer._byteView_.buffer.slice(buffer.position,buffer.position+deadLen));
			buffer.position+=deadLen;
			TileReader.dead=new Tile(_data,width,height,false);
		}
	}

	TileReader.findNotEmptyPoint2=function(x,y){
		var point;
		if (TileReader.force){
			point=TileReader.force.findNotEmptyPoint2(x,y);
			if (point.x !=-1 && point.y !=-1){
				return point;
			}
		}
		if (TileReader.dead){
			point=TileReader.dead.findNotEmptyPoint2(x,y);
			if (point.x !=-1 && point.y !=-1){
				return point;
			}
		}
		return Tile.POINT.setTo(-1,-1);
	}

	TileReader.isEmpty=function(x,y){
		if (TileReader.force && TileReader.dead){
			if (TileReader.force.isEmpty(x,y)&& TileReader.dead.isEmpty(x,y)){
				return true;
			}
			else{
				return false;
			}
		}
		if (TileReader.force){
			return TileReader.force.isEmpty(x,y);
		}
		if (TileReader.dead){
			return TileReader.dead.isEmpty(x,y);
		}
		return true;
	}

	TileReader.findEmptyPoint=function(x,y){
		var point;
		if (TileReader.force){
			point=TileReader.force.findEmptyPoint(x,y);
			if (point.x !=-1 && point.y !=-1){
				return point;
			}
		}
		if (TileReader.dead){
			point=TileReader.dead.findEmptyPoint(x,y);
			if (point.x !=-1 && point.y !=-1){
				return point;
			}
		}
		return Tile.POINT.setTo(-1,-1);
	}

	TileReader.canDig=function(){
		return TileReader.force==null ? false :TileReader.force.canDig();
	}

	TileReader.getCrack=function(tileID){
		var shape=null;
		for (var i=0;i < TileReader.shapeCache.length;i++){
			var obj=TileReader.shapeCache[i];
			if (obj.tileID==tileID){
				shape=obj.shape;
			}
		}
		return shape;
	}

	TileReader.readCrack=function(buffer,tileID){
		buffer.endian="littleEndian";
		var width=buffer.readShort();
		var height=buffer.readShort();
		var shapeLen=buffer.readInt();
		if (shapeLen > 0){
			var _data=new Int8Array(buffer._byteView_.buffer.slice(buffer.position,buffer.position+shapeLen));
			buffer.position+=shapeLen;
			var shape=new Tile(_data,width,height,false,tileID);
			TileReader.shapeCache.push({tileID:tileID,shape:shape});
			console.log("readCrack",tileID);
		}
	}

	TileReader.destroy=function(){
		if (TileReader.force){
			TileReader.force.destroy();
			TileReader.force=null;
		}
		if (TileReader.dead){
			TileReader.dead.destroy();
			TileReader.dead=null;
		}
		for (var i=0;i < TileReader.shapeCache.length;i++){
			var obj=TileReader.shapeCache[i];
			obj.shape.destroy();
			obj.shape=null;
		}
		TileReader.shapeCache.length=0;
	}

	TileReader.dig=function(cx,cy,surface,shape){
		TileReader.force.dig(cx,cy,surface,shape);
	}

	TileReader.force=null;
	TileReader.dead=null;
	TileReader.shapeCache=[];
	return TileReader;
})()


//class utils.ArrayUtils
var ArrayUtils=(function(){
	function ArrayUtils(){}
	__class(ArrayUtils,'utils.ArrayUtils');
	ArrayUtils.sortOn=function(array,name,options){
		(options===void 0)&& (options=0);
		if (options==16)return array.sort(function(a,b){return a[name]-b[name];});
		if (options==(16 | 2))return array.sort(function(a,b){return b[name]-a[name];});
		return array.sort(function(a,b){return a[name]-b[name] });
	}

	ArrayUtils.pickOne=function(arr){
		if (arr.length==0){
			return null;
		}
		if (arr.length==1){
			return arr[0];
		};
		var index=Math.floor(Math.random()*arr.length);
		return arr[index];
	}

	ArrayUtils.pick=function(arr,num){
		var result=arr.concat();
		if (num >=arr.length){
			return result;
		}
		ArrayUtils.shuffle(result);
		result.splice(0,arr.length-num);
		return result;
	}

	ArrayUtils.shuffle=function(arr){
		var index=0;
		var item;
		var len=arr.length;
		if (len < 2){
			return false;
		}
		while (--len){
			index=Math.floor(Math.random()*(len+1));
			item=arr[len];
			arr[len]=arr[index];
			arr[index]=item;
		}
		return true;
	}

	ArrayUtils.DESCENDING=2;
	ArrayUtils.NUMERIC=16;
	return ArrayUtils;
})()


/**
*通过Canvas解决webgl图片跨域问题
*@author chengwen.yi
*
*/
//class utils.CanvasToBase64
var CanvasToBase64=(function(){
	function CanvasToBase64(){}
	__class(CanvasToBase64,'utils.CanvasToBase64');
	CanvasToBase64.toBase64Url=function(url,callback){
		var canvas=Browser.document.createElement("canvas");
		var ctx=canvas.getContext("2d");
		var img=new window.Image();
		img.crossOrigin="Anonymous";
		img.onload=function (){
			canvas.width=img.width;
			canvas.height=img.height;
			ctx.drawImage(img,0,0);
			callback.runWith(ctx.canvas.toDataURL());
		}
		img.src=url;
	}

	return CanvasToBase64;
})()


/**
*常量类
*/
//class utils.Constant
var Constant=(function(){
	function Constant(){}
	__class(Constant,'utils.Constant');
	Constant.BAT_TYPE_DEFAULT=0;
	Constant.NORMAL_TYPE_TWO=1;
	Constant.BAT_TYPE_NEWBIE=2;
	Constant.BAT_TYPE_FOUR=3;
	Constant.BAT_TYPE_GUILD=5;
	Constant.BAT_GREEN_HAT=6;
	Constant.BAT_TYPE_FRIEND=7;
	Constant.BAT_TYPE_NEWBIE_RANDOM=8;
	Constant.BAT_TYPE_PVE=9;
	Constant.BAT_TYPE_PVP=10;
	Constant.BAT_TYPE_MULIT_PVE=11;
	Constant.BOMB_NORMAL=1;
	Constant.BOMB_TYRE=2;
	Constant.BOMB_SINGLE=3;
	Constant.SHOOT_BODY=1;
	Constant.SHOOT_APPLY=2;
	Constant.SHOOT_AIR=3;
	Constant.SHOOT_HEAD=4;
	Constant.SHOOT_TREE=5;
	Constant.ARROW_HEAD="biaoqiang";
	Constant.ARROW_BODY="biaoqiang2";
	Constant.REVIVE_GOLD=1;
	Constant.REVIVE_SHARE=2;
	Constant.RESULT_REVIVE_SUCCESS=0;
	Constant.RESULT_REVIVE_FAIL=1;
	Constant.RESULT_REVIVE_NO_NEED=2;
	Constant.TYPE_REWARD_APPLE=1;
	Constant.TYPE_REWARD_ARENA=2;
	Constant.DIVISION_PATH="assets/textrue/medal/duanwei_00{0}.png";
	Constant.BADGE_PATH="assets/textrue/badge/ui_icon_0{0}.png";
	Constant.BOX_PATH="assets/textrue/itemicon/{0}.png";
	Constant.TYPE_STAR_NORMAL=0;
	Constant.TYPE_STAR_UP=1;
	Constant.TYPE_STAR_DOWN=2;
	Constant.TYPE_LEVEL_NORMAL=0;
	Constant.TYPE_LEVEL_UP=1;
	Constant.BATTLE_WIN=1;
	Constant.BATTLE_LOSE=2;
	Constant.BATTLE_DRAW=0;
	return Constant;
})()


//class utils.DateTimeUtils
var DateTimeUtils=(function(){
	function DateTimeUtils(){}
	__class(DateTimeUtils,'utils.DateTimeUtils');
	DateTimeUtils.getDateByDateStr=function($dateStr){
		var arr=$dateStr.split(" ");
		var yArr=(""+arr[0]).split("-");
		var dArr=(""+arr[1]).split(":");
		var date=new Date();
		date.setFullYear(Number(yArr[0]));
		date.setMonth((Number(yArr[1])-1));
		date.setDate(Number(yArr[2]));
		date.setHours(Number(dArr[0]));
		date.setMinutes((Number(dArr[1])));
		if (dArr.length > 2)
			date.setSeconds((Number(dArr[2])))
		return date;
	}

	DateTimeUtils.getTwoDatenumbererval=function($date_1,$date_2){
		var time_1=$date_1.getTime();
		var time_2=$date_2.getTime();
		return (time_1-time_2);
	}

	DateTimeUtils.getDateString=function($date,$format){
		($format===void 0)&& ($format="YYYY-MM-DD H:M:S");
		return $format.replace("YYYY",String($date.getFullYear()))
		.replace("MM",String($date.getMonth()+1))
		.replace("DD",String($date.getDate()))
		.replace("H",StringUtils.getNumStr($date.getHours()))
		.replace("M",StringUtils.getNumStr($date.getMinutes()))
		.replace("S",StringUtils.getNumStr($date.getSeconds()));
	}

	DateTimeUtils.getTimeRangeDate=function($start,$end){
		var startTime=$start.getTime();
		var endTime=$end.getTime();
		if(startTime > endTime){
			alert("DateTimeUtils Error : getTimeRangeDate() $start < $end.");
			return null;
		};
		var numbererval=endTime-startTime;
		var arr=[];
		var dayTime=utils.DateTimeUtils.ONE_DAY_TIME_MILLISECOND;
		var len=Number(numbererval/dayTime)+1;
		for(var i=0;i < len;i++){
			var date=new Date();
			date.setTime(startTime+i *dayTime);
			arr.push(date);
		}
		return arr;
	}

	DateTimeUtils.getFutureTimeBeginningFromToday=function($value){
		var todayDate=new Date();
		var dateArr=[];
		for(var i=0;i < $value;i++){
			dateArr[i]=utils.DateTimeUtils.addDaysByDateTime(todayDate,i);
		}
		return dateArr;
	}

	DateTimeUtils.getBeforeTimeBeginningFromToday=function($value){
		var todayDate=new Date();
		var dateArr=[];
		while($value--){
			dateArr[$value]=utils.DateTimeUtils.addDaysByDateTime(todayDate,-$value);
		}
		return dateArr;
	}

	DateTimeUtils.addDaysByDateTime=function(date,addDay){
		return new Date(date.getTime()+addDay *utils.DateTimeUtils.DAY);
	}

	DateTimeUtils.getNextDay=function(currentDate){
		return utils.DateTimeUtils.addDaysByDateTime(currentDate,1);
	}

	DateTimeUtils.getLastDay=function(currentDate){
		return utils.DateTimeUtils.addDaysByDateTime(currentDate,-1);
	}

	DateTimeUtils.getNextYear=function(currentDate){
		var returnDate=new Date(currentDate.getTime());
		returnDate.setFullYear(returnDate.getFullYear()+1);
		return returnDate;
	}

	DateTimeUtils.getLastYear=function(currentDate){
		var returnDate=new Date(currentDate.getTime());
		returnDate.setFullYear(returnDate.getFullYear()-1);
		return returnDate;
	}

	DateTimeUtils.getChineseDay=function(currentDate){
		var index=currentDate.getDay();
		return ["星期日","星期一","星期二","星期三","星期四","星期五","星期六"][index];
	}

	DateTimeUtils.getEnglishDay=function(currentDate){
		var index=currentDate.getDay();
		return ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][index];
	}

	DateTimeUtils.MILLISECOND=1;
	DateTimeUtils.SECOND=1 *1000;
	DateTimeUtils.CHINESE_DATE_FORMAT="YYYY-MM-DD";
	DateTimeUtils.CHINESE_DATETIME_FORMAT="YYYY-MM-DD H:M:S";
	DateTimeUtils.ONE_DAY_TIME_MILLISECOND=24*60*60*1000;
	__static(DateTimeUtils,
	['MINUTE',function(){return this.MINUTE=utils.DateTimeUtils.SECOND *60;},'HOUR',function(){return this.HOUR=utils.DateTimeUtils.MINUTE *60;},'DAY',function(){return this.DAY=utils.DateTimeUtils.HOUR *24;},'WEEK',function(){return this.WEEK=utils.DateTimeUtils.DAY *7;}
	]);
	return DateTimeUtils;
})()


//class utils.DropItemUtil
var DropItemUtil=(function(){
	function DropItemUtil(){}
	__class(DropItemUtil,'utils.DropItemUtil');
	DropItemUtil.showEffect=function(path,number,pos,targetPos,count){
		(count===void 0)&& (count=20);
		if (path=="ui_gold"){
			SoundMgr.instance.playSound(4006033);
		}
		else{
			SoundMgr.instance.playSound(4006022);
		}
		for (var i=0;i < count;i++){
			var anim=new AniSkeleton(path,"ui");
			anim.x=pos.x;
			anim.y=pos.y;
			anim.alpha=0;
			if (path=="ui_gold"){
				anim.scale(0.8,0.8);
			};
			var ease=path=="ui_gold" ? Ease.backOut :Ease.backInOut;
			LayerMgr.ins.flyWordLayer.addChild(anim);
			var offectX=anim.x-(Math.random()< 0.5 ?-(Math.random()*80):Math.random()*80);
			var offectY=anim.y-Math.random()*150;
			var delay=Math.random()*500+1000;
			Tween.to(anim,{x:offectX,y:offectY,alpha:1},delay,ease,Handler.create(DropItemUtil,DropItemUtil.onGoldEffectComplete,[anim,targetPos,path]));
		}
		if (count > 1 && number > 0){
			var labGold=new Label("+"+number);
			labGold.color="#ffffff";
			labGold.strokeColor="#374f65";
			labGold.stroke=3;
			labGold.fontSize=16;
			labGold.x=targetPos.x;
			labGold.y=targetPos.y;
			labGold.alpha=0;
			LayerMgr.ins.flyWordLayer.addChild(labGold);
			PlayerInfo.instance.addGold=-1;
			Tween.to(labGold,{y:300,alpha:1},1000,Ease.backOut,Handler.create(DropItemUtil,DropItemUtil.onGoldLabelComplete,[labGold]));
		}
	}

	DropItemUtil.onGoldEffectComplete=function(anim,targetPos,path){
		Tween.to(anim,{x:targetPos.x,y:targetPos.y},500,null,Handler.create(DropItemUtil,DropItemUtil.onGoldEffectRemove,[anim,path]));
	}

	DropItemUtil.onGoldLabelComplete=function(label){
		Tween.clearAll(label);
		label.removeSelf();
		label.destroy(true);
		label=null;
	}

	DropItemUtil.onGoldEffectRemove=function(anim,path){
		if (path=="ui_yaoshi"){
			EventMgr.ins.event("get_key",1);
		}
		else{
			DropItemUtil.cnt++;
			if (DropItemUtil.cnt==5){
				EventMgr.ins.event("get_key",0);
				DropItemUtil.cnt=0;
			}
		}
		anim.stop();
		Tween.clearAll(anim);
		anim.removeSelf();
		anim.destroy(true);
		anim=null;
	}

	DropItemUtil.cnt=0;
	return DropItemUtil;
})()


//class utils.FuckUtils
var FuckUtils=(function(){
	function FuckUtils(){}
	__class(FuckUtils,'utils.FuckUtils');
	FuckUtils.init=function(){
		FuckUtils.words=FuckUtils.fucks.split("|");
	}

	FuckUtils.filter=function(text){
		if(FuckUtils.hasFuck(text)){
			return "我爱弹弹堂";
		}
		return text;
	}

	FuckUtils.hasFuck=function(text){
		for(var i=0;i < FuckUtils.words.length;i++){
			var word=FuckUtils.words[i];
			if(word){
				var pos=text.indexOf(word,0);
				if(pos !=-1){
					return true;
				}
			}
		}
		return false;
	}

	FuckUtils.fucks="毛泽东|周恩来|刘少奇|朱德|彭德怀|林彪|刘伯承|陈毅|贺龙|聂荣臻|徐向前|罗荣桓|叶剑英|李大钊|陈独秀|孙中山|孙文|孙逸仙|邓小平|陈云|江泽民|李鹏|朱镕基|李瑞环|尉健行|李岚清|胡锦涛|罗干|温家宝|吴邦国|曾庆红|贾庆林|黄菊|吴官正|李长春|吴仪|回良玉|曾培炎|曹刚川|唐家璇|华建敏|陈至立|张德江|俞正声|王乐泉|刘云山|王刚|王兆国|刘淇|贺国强|郭伯雄|胡耀邦|王乐泉|王兆国|习近平|李克强|张高丽|刘延东|彭丽媛|王岐山|华国锋|胡耀邦|习大大|吴帮国|无帮国|无邦国|无帮过|瘟家宝|假庆林|甲庆林|假青林|离长春|习远平|袭近平|李磕墙|贺过墙|和锅枪|胡主席|习主席|毛主席|布什|布莱尔|小泉|纯一郎|萨马兰奇|安南|阿拉法特|普京|默克尔|克林顿|里根|尼克松|林肯|杜鲁门|赫鲁晓夫|列宁|斯大林|马克思|恩格斯|金正日|金日成|萨达姆|胡志明|西哈努克|希拉克|撒切尔|阿罗约|曼德拉|卡斯特罗|富兰克林|华盛顿|艾森豪威尔|拿破仑|亚历山大|路易|拉姆斯菲尔德|劳拉|鲍威尔|奥巴马|梅德韦杰夫|金正恩|安倍晋三|本拉登|奥马尔|柴玲|达赖|达赖喇嘛|江青|张春桥|姚文元|王洪文|东条英机|希特勒|墨索里尼|冈村秀树|冈村宁次|高丽朴|赵紫阳|王丹|沃尔开西|李洪志|李大师|赖昌星|马加爵|班禅|额尔德尼|山本五十六|阿扁|阿扁万岁|热那亚|薄熙来|周永康|王立军|令计划|默罕默德|徐才厚|粥永康|轴永康|肘永康|周健康|粥健康|周小康|陈良宇|李登辉|连战|宋楚瑜|吕秀莲|郁慕明|蒋介石|蒋中正|蒋经国|马英九|新疆势力|六四|六四运动|东方闪电|茉莉花|美国之音|密宗|民国|民进党|民运|民主|民主潮|摩门教|纳粹|南华早报|南蛮|明慧网|起义|亲民党|瘸腿帮|人民报|法轮功|法轮大法|打倒共产党|台独万岁|圣战|示威|台独|台独分子|台联|台湾民国|台湾岛国|台湾国|台湾独立|太子党|天安门事件|屠杀|小泉|新党|新疆独立|新疆分裂|新疆国|疆独|西藏独立|西藏分裂|西藏国|藏独|藏青会|藏妇会|学潮|学运|一党专政|一中一台|两个中国|一贯道|游行|圆满|造反|真善忍|镇压|政变|政治|政治反对派|政治犯|中共|共产党|反党|反共|政府|民主党|中国之春|转法轮|自焚|共党|共匪|苏家屯|基地组织|塔利班|东亚病夫|支那|高治联|高自联|专政|专制|四人帮|新闻管制|核工业基地|核武器|铀|原子弹|氢弹|导弹|核潜艇|大参考|小参考|国内动态清样|东突|中央电视台|雪山狮子旗|占领中环|两国论|一边一国|赤匪|东伊运|ISIS|徒弟会|中港|中澳|内港|内澳|道教|多维|佛教|佛祖|释迦牟尼|如来|阿弥陀佛|观世音|普贤|文殊|地藏|河殇|回教|密宗|摩门教|穆罕默德|穆斯林|升天|圣母|圣战|耶和华|耶稣|伊斯兰|真主安拉|白莲教|天主教|基督教|东正教|大法|法轮|法轮功|瘸腿帮|真理教|真善忍|转法轮|自焚|走向圆满|黄大仙|风水|跳大神|神汉|神婆|真理教|大卫教|阎王|黑白无常|牛头马面|藏独|高丽棒子|回回|疆独|蒙古鞑子|台独|台独分子|台联|台湾民国|西藏独立|新疆独立|南蛮|老毛子|回民吃猪肉|蒙古独立|全能神|全能神教|统一教|89|蛮子|蒙族|维族|鲜族|高丽|突厥族|突厥人|回族就是伊斯兰教|伊斯兰教就是回族|谋杀|杀人|吸毒|贩毒|赌博|拐卖|走私|卖淫|造反|监狱|强奸|轮奸|抢劫|先奸后杀|枪支弹药|击杀|连斩|连杀|下注|押大|押小|抽头|坐庄|赌马|赌球|筹码|老虎机|轮盘赌|安非他命|大麻|可卡因|海洛因|冰毒|摇头丸|杜冷丁|鸦片|罂粟|迷幻药|白粉|嗑药|卖枪支弹药|K粉|k粉|冰粉|毒品|古柯碱|真主|屄|肏|屌|马的|马白勺|妈的|妈白勺|女马ㄉ|女马的|女马白勺|逼|草泥马|特么的|撕逼|玛拉戈壁|爆菊|JB|呆逼|本屌|齐B短裙|法克鱿|丢你老母|达菲鸡|装13|逼格|蛋疼|傻逼|绿茶婊|你妈的|表砸|屌爆了|买了个婊|已撸|吉跋猫|妈蛋|逗比|我靠|碧莲|碧池|然并卵|日了狗|屁民|吃翔|XX狗|淫家|你妹|浮尸国|滚粗|操你|操妳|操他|操人也|操她|操女也|干你|干妳|干他|干人也|干她|干女也|超你|超妳|超他|超人也|超她|超女也|屌你|屌我|屌妳|屌他|屌人也|屌她|屌女也|凸你|凸我|凸妳|凸他|凸人也|凸她|凸女也|插你|插他|插我|插她|插妳|臭你|臭妳|臭他|臭人也|臭她|臭女也|机八|鸡八|G八|Ｇ八|机巴|鸡巴|G巴|Ｇ巴|机叭|鸡叭|G叭|Ｇ叭|机芭|鸡芭|G芭|Ｇ芭|机掰|鸡掰|G掰|Ｇ掰|机Y|机Ｙ|鸡Y|鸡Ｙ|机8|鸡８|靠爸|靠母|哭爸|哭母|靠北|老GY|老ＧＹ|干GY|干ＧＹ|操GY|操ＧＹ|超GY|超ＧＹ|臭GY|臭ＧＹ|干七八|干78|干７８|操七八|操78|操７８|超七八|超78|超７８|臭七八|臭78|臭７８|懒叫|懒教|妈B|鸡巴|我日|婊|屌|璩美凤|操你|阴茎|妈的|日你|阴道|干你|干死|强奸|你妈|TNND|幼齿|干死你|作爱|阝月|歇逼|蛤蟆|发骚|招妓|阴唇|操你妈|精子|奸淫|菜逼|奶奶的|日死你|贱人|江八点|你娘|肛交|破鞋|贱逼|娘的|狗卵子|骚货|操蛋|大比|龟公|穷逼|欠日|狗b|牛逼|装逼|妈批|欠操|我操你|烂逼|你爸|屁眼|密穴|鸡奸|群奸|烂比|牛比|喷你|大b|小b|性欲|你大爷|淫荡|轮奸|中国猪|狂操|插你|婊子|我操|淫秽|江猪媳|狗屎|十八摸|操逼|二B|猪毛|狗操|奶子|大花逼|逼样|去你妈的|完蛋操|下贱|淫穴|猪操|妓女|阴水|操比|精液|卖比|16dy-图库|獸交|爱女人|拔出来|操b|插进|插我|插穴|吃精|抽插|大乳|调教|黄色电影|激情电影|轮暴|迷奸|乳房|色猫|色欲|性爱图库|亚情|淫亂|淫女|淫蕩|淫水|淫汁|幼圖|中文搜性网|自慰|鷄巴|學生妹|１８歲淫亂|999日本妹|幹炮|摸阴蒂|金鳞岂是池中物|掰穴皮卡丘|白虎少妇|白虎阴穴|包二奶|暴淫|逼痒|蕩妹|肥逼|粉穴|干穴|开苞|口活|狼友|春药|风艳阁|激情小说|兽欲|全裸|秘唇|蜜穴|玉穴|应召|菊花蕾|大力抽送|干的爽|肉蒲团|后庭|淫叫|男女交欢|极品波霸|兽奸|流淫|销魂洞|操烂|成人网站|淫色|一夜欢|姦淫|给你爽|偷窥图片|性奴|大奶头|奸幼|中年美妇|豪乳|喷精|逼奸|脱内裤|发浪|浪叫|肉茎|菊花洞|成人自拍|自拍美穴|抠穴|颜射|肉棍|淫水爱液|阴核|露B|母子奸情|人妻熟女|色界|丁香社区|爱图公园|色色五月天|鹿城娱乐|色色|幼香阁|隐窝窝|乱伦熟女网|插阴|露阴照|美幼|97sese|嫩鲍鱼|日本AV女优|美女走光|33bbb走光|激情贴图|成人论坛|就去诱惑|浴室自拍|BlowJobs|激情裸体|丽春苑|窝窝客|银民吧|亚洲色|碧香亭|爱色cc|妹妹骚图|宾馆女郎|美腿丝足|好色cc|无码长片|淫水涟涟|放荡少妇|成人图片|黄金圣水|脚交|勾魂少妇|女尻|我要性交|SM女王|乳此丝袜|日本灌肠|集体性爱|国产骚货|操B指南|亚洲淫娃|熟女乱伦|SM舔穴|無碼H漫|大胆少女|乳此丰满|屄屄特写|熟女颜射|要色色|耻辱轮奸|巨乳素人|妩媚挑逗|骚姨妈|裸体少妇|美少妇|射奶|杨思敏|野外性交|风骚淫荡|白虎嫩B|明星淫图|淫乱熟女|高清性愛|高潮集锦|淫兽学园|俏臀摄魄|有容奶大|无套内射|毛鲍|3P炮图|性交课|激凸走光|性感妖娆|人妻交换|监禁陵辱|生徒胸触|東洋屄|翘臀嫩穴|春光外泻|淫妇自慰|本土无码|淫妻交换|日屄|近亲相奸|艳乳|白虎小穴|肛门喷水|淫荡贵妇|鬼畜轮奸|浴室乱伦|生奸内射|国产嫖娼|白液四溅|带套肛交|大乱交|精液榨取|性感乳娘|魅惑巨乳|无码炮图|群阴会|人性本色|极品波神|淫乱工作|白浆四溅|街头扒衣|口内爆射|嫩BB|肛门拳交|灌满精液|莲花逼|自慰抠穴|人妻榨乳|拔屄自拍|洗肠射尿|人妻色诱|淫浆|狂乳激揺|騷浪|射爽|蘚鮑|制服狩|無毛穴|骚浪美女|肏屄|舌头穴|人妻做爱|插逼|爆操|插穴止痒|骚乳|食精|爆乳娘|插阴茎|黑毛屄|肉便器|肉逼|淫亂潮吹|母奸|熟妇人妻|発射|幹砲|性佣|爽穴|插比|嫩鲍|骚母|吃鸡巴|金毛穴|体奸|爆草|操妻|a4u|酥穴|屄毛|厕所盗摄|艳妇淫女|掰穴打洞|盗撮|薄码|少修正|巧淫奸戏|成人片|换妻大会|破处|穴爽|g点|欢欢娱乐时空|近親相姦|裤袜|乱伦|买春|妹妹阴毛|免费成人网站|免费偷窥网|免费A片|摩洛客|嫩b|捏弄|女优|肉棒|骚姐姐|色区|色书库|射颜|手淫|兽交|吸精少女|下流地带|性虎|性饥渴|阴部|淫妹|淫图|幼交|欲火|援交妹|嫩屄|嫩女|噴精|情色天崖|情色文学|群交亂舞|日本骚货|肉唇|肉沟|肉棍干骚妇|肉壶|肉淫器吞精|骚妹|骚女|骚水|骚穴|色狐狸网址|色狼论坛|色狼小说|湿穴|爽死我了|舔逼|舔屁眼|好嫩|大波|亂倫|做爱电影|色诱|秘裂|采花堂|含屌|亚洲性虐|夫妻自拍|熟女|操穴|裹本|淫妇|嫩逼|淫贱|欢乐性今宵|巨乳|性愛圖片|学生妹|炮友之家|花花公子|一夜情|乳沟|淫虫|叫床|porn|小姐打飞机|少女被插|Ｘ到噴屎尿|口淫|按摩棒|操我|奸情|被干|露逼|美女高潮|日逼|肉洞|阴缔|插暴|人妻|内射|肉具|欲仙欲浪|玉乳|被插|吞精|暴乳|成人午夜场|买春堂|性之站|成人社区|群交|激情聊天|三八淫|做爱自拍|淫妻|夫妻俱乐部|激情交友|诱色uu|就去色色|熟妇|mm美图|走光偷拍|77bbb|虎骑|咪咪图片|成人导航|深爱色色|厕所偷拍|成人A片|夫妻多p|我就色|释欲|你色吗|裙内偷拍|男女蒲典|色97爱|丝诱|人妻自拍|色情工厂|色色婷婷|美体艳姿|颜射自拍|熟母|肉丝裤袜|sm调教|打野炮|赤裸天使|淫欲世家|就去日|爱幼阁|巨屌|花样性交|裸陪|夫妻3p|大奶骚女|性愛插穴|日本熟母|幼逼|淫水四溅|大胆出位|旅馆自拍|无套自拍|快乐AV|国产无码|强制浣肠|援交自拍|凸肉优|撅起大白腚|骚妹妹|插穴手淫|双龙入洞|美女吞精|处女开包|调教虐待|淫肉诱惑|激情潮喷|骚穴怒放|馒头屄|无码丝袜|写真|寂寞自摸|警奴|轮操|淫店|精液浴|淫乱诊所|极品奶妹|惹火身材|暴力虐待|巨乳俏女医|扉之阴|淫の方程式|丁字裤翘臀|轮奸内射|空姐性交|美乳斗艳|舔鸡巴|骚B熟女|淫丝荡袜|奴隷调教|阴阜高耸|翘臀嫩逼|口交放尿|媚药少年|暴奸|无修正|国产AV|淫水横流|插入内射|东热空姐|大波粉B|互舔淫穴|丝袜淫妇|乳此动人|大波骚妇|无码做爱|口爆吞精|放荡熟女|巨炮兵团|叔嫂肉欲|肉感炮友|爱妻淫穴|无码精选|超毛大鲍|熟妇骚器|内射美妇|毒龙舔脚|性爱擂台|圣泉学淫|性奴会|密室淫行|亮屄|操肿|无码淫女|玩逼|淫虐|我就去色|淫痴|风骚欲女|亮穴|操穴喷水|幼男|肉箫|巨骚|骚妻|漏逼|骚屄|大奶美逼|高潮白浆|性战擂台|淫女炮图|小穴|淫水横溢|性交吞精|姦染|淫告白|乳射|操黑|朝天穴|公媳乱|女屄|慰春情|集体淫|淫B|屄屄|肛屄|小嫩鸡|舔B|嫩奶|a4y|品穴|淫水翻騰|一本道|乳尻|羞耻母|艳照|三P|露毛|紧穴|露点|18禁|g片|teen|無碼電影|爱液|插b|赤裸|荡妇|荡女|浪穴|露穴|美穴|猛插|迷药|嫩穴|肉穴|乳交|乳头|无码|吸精|现代情色小说|性交图|性息|艳情小说|阴部特写|阴道图片|淫书|幼女|玉蒲团玉女心经|援助交易|中国成人论坛|中国性爱城|自拍写真|做爱图片|掰穴|万淫堂|穴图|穴淫|艳舞淫业|咬着龟头|要射了|一夜性网|阴茎插小穴|陰穴新玩法|婬乱军团|淫逼|淫姐|淫浪|淫流|淫糜|淫蜜|淫魔|淫母|淫妞|淫奴|淫娃|淫液|钻插|H动漫|交换夫妻|美腿|舔脚|蜜洞|丝袜|淫情|亚洲情色网|强奸处女|鸡巴暴胀|美乳|大众色情成人网|火辣图片|淫声浪语|疯狂抽送|淫河|强暴|多人性愛|操屄|浪女|色情论坛|性虎色网|淫欲日本|操死|色迷城|petgirl|骚女叫春|成人百强|猖妓|天天干贴图|密穴贴图|凌辱|偷欢|小逼|酥痒|品色堂|浪妇|嫖妓指南|肉缝|色窝窝|被操|巨奶|骚洞|阴精|阴阜|阴屄|群魔色舞|扒穴|六月联盟|55sss偷拍区|张筱雨|xiao77|极品黑丝|丝袜写真|天天情色|成人小说|成人文学|情色艺术天空|222se图片|偷拍|淫色贴图|厕奴|美女成人|酥胸诱惑|五月天|人体摄影|东北xx网|玛雅网|成人bt|周六性吧|爆乳|诱惑视频|裙下风光|嘻游中国|操母狗|御の二代目|丝袜足交|肮脏美学|亚洲有码|欲仙欲死|丝袜高跟|偷拍美穴|原味丝袜|裸露自拍|针孔偷拍|放荡少妇宾馆|性感肉丝|拳交|迫奸|品香堂|北京xx网|虐奴|情色导航|欧美大乳|欧美无套|骚妇露逼|炮友|淫水丝袜|母女双飞|老少乱伦|幼妓|素人娘|前凸后翘|制服誘惑|舔屄|色色成人|迷奸系列|性交无码|惹火自拍|胯下呻吟|淫驴屯|少妇偷情|护士诱惑|群奸乱交|极品白虎|曲线消魂|淫腔|无码淫漫|假阳具插穴|蝴蝶逼|自插小穴|SM援交|西洋美女|爱液横流|无码无套|淫战群P|口爆|酒店援交|乳霸|湿身诱惑|火辣写真|动漫色图|熟女护士|粉红穴|经典炮图|童颜巨乳|性感诱惑|援交薄码|美乳美穴|奇淫宝鉴|美骚妇|跨下呻吟|无毛美少女|流蜜汁|日本素人|爆乳人妻|妖媚熟母|日本有码|激情打炮|制服美妇|无码彩图|放尿|入穴一游|丰唇艳姬|群奸轮射|高级逼|MM屄|美臀嫰穴|淫东方|国产偷拍|清晰内射|嫩穴肉缝|雪腿玉胯|骚妇掰B|白嫩骚妇|梅花屄|猛操狂射|潮喷|无码体验|吞精骚妹|紧缚凌辱|奸淫电车|堕淫|颜骑|互淫|逼毛|胸濤乳浪|夫妻乱交|黑屄|奶大屄肥|拔屄|穴海|换妻杂交|狂插|黑逼|粉屄|口射|多人轮|奶挺臀翘|扒屄|痴乳|鬼輪姦|乳爆|浴尿|淫样|発妻|姫辱|插后庭|操爽|嫩缝|操射|骚妈|激插|暴干|母子交欢|嫐屄|足脚交|露屄|柔阴术|相奸|淫师荡母|欠干|桃园蜜洞|二穴中出|奴畜抄|连続失禁|大鸡巴|玩穴|性交自拍|叫鸡|骚浪人妻|妈B|鸡巴|我日|婊|屌|璩美凤|操你|阴茎|妈的|日你|阴道|干你|干死|强奸|你妈|TNND|幼齿|干死你|作爱|阝月|歇逼|蛤蟆|发骚|招妓|阴唇|操你妈|精子|奸淫|菜逼|奶奶的|日死你|贱人|江八点|你娘|肛交|破鞋|贱逼|娘的|狗卵子|骚货|操蛋|大比|龟公|穷逼|欠日|狗b|牛逼|妈批|欠操|我操你|烂逼|你爸|屁眼|密穴|鸡奸|群奸|烂比|牛比|喷你|大b|小b|性欲|你大爷|淫荡|轮奸|中国猪|狂操|插你|婊子|我操|淫秽|江猪媳|狗屎|十八摸|操逼|二B|猪毛|狗操|奶子|大花逼|逼样|去你妈的|完蛋操|下贱|淫穴|猪操|妓女|阴水|操比|精液|卖比|16dy-图库|獸交|爱女人|拔出来|操b|插进|插我|插穴|吃精|抽插|大乳|调教|黄色电影|激情电影|轮暴|迷奸|乳房|色猫|色欲|性爱图库|亚情|淫亂|淫女|淫蕩|淫水|淫汁|幼圖|中文搜性网|自慰|鷄巴|學生妹|１８歲淫亂|999日本妹|幹炮|摸阴蒂|金鳞岂是池中物|掰穴皮卡丘|白虎少妇|白虎阴穴|包二奶|暴淫|逼痒|蕩妹|肥逼|粉穴|干穴|开苞|口活|狼友|春药|风艳阁|激情小说|兽欲|全裸|秘唇|蜜穴|玉穴|应召|菊花蕾|大力抽送|干的爽|肉蒲团|后庭|淫叫|男女交欢|极品波霸|兽奸|流淫|销魂洞|操烂|成人网站|淫色|一夜欢|姦淫|给你爽|偷窥图片|性奴|大奶头|奸幼|中年美妇|豪乳|喷精|逼奸|脱内裤|发浪|浪叫|肉茎|菊花洞|成人自拍|自拍美穴|抠穴|颜射|肉棍|淫水爱液|阴核|露B|母子奸情|人妻熟女|色界|丁香社区|爱图公园|色色五月天|鹿城娱乐|色色|幼香阁|隐窝窝|乱伦熟女网|插阴|露阴照|美幼|97sese|嫩鲍鱼|日本AV女优|美女走光|33bbb走光|激情贴图|成人论坛|就去诱惑|浴室自拍|BlowJobs|激情裸体|丽春苑|窝窝客|银民吧|亚洲色|碧香亭|爱色cc|妹妹骚图|宾馆女郎|美腿丝足|好色cc|无码长片|淫水涟涟|放荡少妇|成人图片|黄金圣水|脚交|勾魂少妇|女尻|我要性交|SM女王|乳此丝袜|日本灌肠|集体性爱|国产骚货|操B指南|亚洲淫娃|熟女乱伦|SM舔穴|無碼H漫|大胆少女|乳此丰满|屄屄特写|熟女颜射|要色色|耻辱轮奸|巨乳素人|妩媚挑逗|骚姨妈|裸体少妇|美少妇|射奶|杨思敏|野外性交|风骚淫荡|白虎嫩B|明星淫图|淫乱熟女|高清性愛|高潮集锦|淫兽学园|俏臀摄魄|有容奶大|无套内射|毛鲍|3P炮图|性交课|激凸走光|性感妖娆|人妻交换|监禁陵辱|生徒胸触|東洋屄|翘臀嫩穴|春光外泻|淫妇自慰|本土无码|淫妻交换|日屄|近亲相奸|艳乳|白虎小穴|肛门喷水|淫荡贵妇|鬼畜轮奸|浴室乱伦|生奸内射|国产嫖娼|白液四溅|带套肛交|大乱交|精液榨取|性感乳娘|魅惑巨乳|无码炮图|群阴会|人性本色|极品波神|淫乱工作|白浆四溅|街头扒衣|口内爆射|嫩BB|肛门拳交|灌满精液|莲花逼|自慰抠穴|人妻榨乳|拔屄自拍|洗肠射尿|人妻色诱|淫浆|狂乳激揺|騷浪|射爽|蘚鮑|制服狩|無毛穴|骚浪美女|肏屄|舌头穴|人妻做爱|插逼|爆操|插穴止痒|骚乳|食精|爆乳娘|插阴茎|黑毛屄|肉便器|肉逼|淫亂潮吹|母奸|熟妇人妻|発射|幹砲|性佣|爽穴|插比|嫩鲍|骚母|吃鸡巴|金毛穴|体奸|爆草|操妻|a4u|酥穴|屄毛|厕所盗摄|艳妇淫女|掰穴打洞|盗撮|薄码|少修正|巧淫奸戏|成人片|换妻大会|破处|穴爽|g点|欢欢娱乐时空|近親相姦|裤袜|乱伦|买春|妹妹阴毛|免费成人网站|免费偷窥网|免费A片|摩洛客|嫩b|捏弄|女优|肉棒|骚姐姐|色区|色书库|射颜|手淫|兽交|吸精少女|下流地带|性虎|性饥渴|阴部|淫妹|淫图|幼交|欲火|援交妹|嫩屄|嫩女|噴精|情色天崖|情色文学|群交亂舞|日本骚货|肉唇|肉沟|肉棍干骚妇|肉壶|肉淫器吞精|骚妹|骚女|骚水|骚穴|色狐狸网址|色狼论坛|色狼小说|湿穴|爽死我了|舔逼|舔屁眼|好嫩|大波|亂倫|做爱电影|色诱|秘裂|采花堂|含屌|亚洲性虐|夫妻自拍|熟女|操穴|裹本|淫妇|嫩逼|淫贱|欢乐性今宵|巨乳|性愛圖片|学生妹|炮友之家|花花公子|一夜情|乳沟|淫虫|叫床|porn|小姐打飞机|少女被插|Ｘ到噴屎尿|口淫|按摩棒|操我|奸情|被干|露逼|美女高潮|日逼|肉洞|阴缔|插暴|人妻|内射|肉具|欲仙欲浪|玉乳|被插|吞精|暴乳|成人午夜场|买春堂|性之站|成人社区|群交|激情聊天|三八淫|做爱自拍|淫妻|夫妻俱乐部|激情交友|诱色uu|就去色色|熟妇|mm美图|走光偷拍|77bbb|虎骑|咪咪图片|成人导航|深爱色色|厕所偷拍|成人A片|夫妻多p|我就色|释欲|你色吗|裙内偷拍|男女蒲典|色97爱|丝诱|人妻自拍|色情工厂|色色婷婷|美体艳姿|颜射自拍|熟母|肉丝裤袜|sm调教|打野炮|赤裸天使|淫欲世家|就去日|爱幼阁|巨屌|花样性交|裸陪|夫妻3p|大奶骚女|性愛插穴|日本熟母|幼逼|淫水四溅|大胆出位|旅馆自拍|无套自拍|快乐AV|国产无码|强制浣肠|援交自拍|凸肉优|撅起大白腚|骚妹妹|插穴手淫|双龙入洞|美女吞精|处女开包|调教虐待|淫肉诱惑|激情潮喷|骚穴怒放|馒头屄|无码丝袜|写真|寂寞自摸|警奴|轮操|淫店|精液浴|淫乱诊所|极品奶妹|惹火身材|暴力虐待|巨乳俏女医|扉之阴|淫の方程式|丁字裤翘臀|轮奸内射|空姐性交|美乳斗艳|舔鸡巴|骚B熟女|淫丝荡袜|奴隷调教|阴阜高耸|翘臀嫩逼|口交放尿|媚药少年|暴奸|无修正|国产AV|淫水横流|插入内射|东热空姐|大波粉B|互舔淫穴|丝袜淫妇|乳此动人|大波骚妇|无码做爱|口爆吞精|放荡熟女|巨炮兵团|叔嫂肉欲|肉感炮友|爱妻淫穴|无码精选|超毛大鲍|熟妇骚器|内射美妇|毒龙舔脚|性爱擂台|圣泉学淫|性奴会|密室淫行|亮屄|操肿|无码淫女|玩逼|淫虐|我就去色|淫痴|风骚欲女|亮穴|操穴喷水|幼男|肉箫|巨骚|骚妻|漏逼|骚屄|大奶美逼|高潮白浆|性战擂台|淫女炮图|小穴|淫水横溢|性交吞精|姦染|淫告白|乳射|操黑|朝天穴|公媳乱|女屄|慰春情|集体淫|淫B|屄屄|肛屄|小嫩鸡|舔B|嫩奶|a4y|品穴|淫水翻騰|一本道|乳尻|羞耻母|艳照|三P|露毛|紧穴|露点|18禁|g片|teen|無碼電影|爱液|插b|赤裸|荡妇|荡女|浪穴|露穴|美穴|猛插|迷药|嫩穴|肉穴|乳交|乳头|无码|吸精|现代情色小说|性交图|性息|艳情小说|阴部特写|阴道图片|淫书|幼女|玉蒲团玉女心经|援助交易|中国成人论坛|中国性爱城|自拍写真|做爱图片|掰穴|万淫堂|穴图|穴淫|艳舞淫业|咬着龟头|要射了|一夜性网|阴茎插小穴|陰穴新玩法|婬乱军团|淫逼|淫姐|淫浪|淫流|淫糜|淫蜜|淫魔|淫母|淫妞|淫奴|淫娃|淫液|钻插|H动漫|交换夫妻|美腿|舔脚|蜜洞|丝袜|淫情|亚洲情色网|强奸处女|鸡巴暴胀|美乳|大众色情成人网|火辣图片|淫声浪语|疯狂抽送|淫河|强暴|多人性愛|操屄|浪女|色情论坛|性虎色网|淫欲日本|操死|色迷城|petgirl|骚女叫春|成人百强|猖妓|天天干贴图|密穴贴图|凌辱|偷欢|小逼|酥痒|品色堂|浪妇|嫖妓指南|肉缝|色窝窝|被操|巨奶|骚洞|阴精|阴阜|阴屄|群魔色舞|扒穴|六月联盟|55sss偷拍区|张筱雨|xiao77|极品黑丝|丝袜写真|天天情色|成人小说|成人文学|情色艺术天空|222se图片|偷拍|淫色贴图|厕奴|美女成人|酥胸诱惑|五月天|人体摄影|东北xx网|玛雅网|成人bt|周六性吧|爆乳|诱惑视频|裙下风光|嘻游中国|操母狗|御の二代目|丝袜足交|肮脏美学|亚洲有码|欲仙欲死|丝袜高跟|偷拍美穴|原味丝袜|裸露自拍|针孔偷拍|放荡少妇宾馆|性感肉丝|拳交|迫奸|品香堂|北京xx网|虐奴|情色导航|欧美大乳|欧美无套|骚妇露逼|炮友|淫水丝袜|母女双飞|老少乱伦|幼妓|素人娘|前凸后翘|制服誘惑|舔屄|色色成人|迷奸系列|性交无码|惹火自拍|胯下呻吟|淫驴屯|少妇偷情|护士诱惑|群奸乱交|极品白虎|曲线消魂|淫腔|无码淫漫|假阳具插穴|蝴蝶逼|自插小穴|SM援交|西洋美女|爱液横流|三级片|东京热|无码无套|淫战群P|口爆|酒店援交|乳霸|湿身诱惑|火辣写真|动漫色图|熟女护士|粉红穴|经典炮图|童颜巨乳|性感诱惑|援交薄码|美乳美穴|奇淫宝鉴|美骚妇|跨下呻吟|无毛美少女|流蜜汁|日本素人|爆乳人妻|妖媚熟母|日本有码|激情打炮|制服美妇|无码彩图|放尿|入穴一游|丰唇艳姬|群奸轮射|高级逼|MM屄|美臀嫰穴|淫东方|国产偷拍|清晰内射|嫩穴肉缝|雪腿玉胯|骚妇掰B|白嫩骚妇|梅花屄|猛操狂射|潮喷|无码体验|吞精骚妹|紧缚凌辱|奸淫电车|堕淫|颜骑|互淫|逼毛|胸濤乳浪|夫妻乱交|黑屄|奶大屄肥|拔屄|穴海|换妻杂交|狂插|黑逼|粉屄|口射|多人轮|奶挺臀翘|扒屄|痴乳|鬼輪姦|乳爆|浴尿|淫样|発妻|姫辱|插后庭|操爽|嫩缝|操射|骚妈|激插|暴干|母子交欢|嫐屄|足脚交|露屄|柔阴术|相奸|淫师荡母|欠干|桃园蜜洞|二穴中出|奴畜抄|连続失禁|大鸡巴|玩穴|性交自拍|叫鸡|骚浪人妻|做爱|操|坐台|自焚|子宫|杂种|淫|阴毛|阴户|阴蒂|爷爷|摇头丸|阳具|性交|性爱|小鸡鸡|小弟弟|小便|武藤|慰安妇|猥亵|猥琐|生殖|煞笔|傻逼|傻B|色情|骚逼|三陪|肉欲|肉体|情色|排泄|女干|灭族|梅毒|卵子|淋病|口交|尻|贱|鸡吧|鸡八|胡瘟|龟头|狗日|狗娘|根正苗红|睾丸|疯狗|腚|大便|打炮|打飞机|娼|肏|瘪三|妈逼|屄|妈|爸|爹|爷|奶|儿子|sm|尼玛|装B|偷窥视频|裸聊|兽兽门|艾滋|艾滋病|二逼|阳物|找小姐|开房|援交|黄色网站|大血逼|大血比|性虐|残废人|独眼龙|瞎子|聋子|傻子|呆子|弱智|ADMIN|Admin|xtl|system|admin|Administrator|administrator|管理|管里|管理员|服务管理|服务器|活动管理员|冬季热|官方|维护|系统|系统公告|审查|巡查|监督|监管|game|master|GAMEMASTER|GameMaster|GM|Gm|gm|gm|游戏管理员|Client|Server|CS|Cs|cs|cS|KEFU|kefu|Kefu|KeFu|助理|客户服务|客服|服务天使|TEsT|tESt|test|test|TeSt|tEST|Test|测试|辅助程序|运营|运营者|运营组|运营商|运营长|运营官|运营人|蔡文胜|李兴平|汪东风|骆海坚|曹政|sf|私服|私人服务器|wg|外挂|&|ㄅ|ㄆ|ㄇ|ㄈ|ㄉ|ㄊ|ㄋ|ㄌ|ㄍ|ㄎ|ㄏ|ㄐ|ㄑ|ㄒ|ㄓ|ㄔ|ㄕ|ㄖ|ㄗ|ㄘ|ㄙ|ㄚ|ㄛ|ㄜ|ㄝ|ㄞ|ㄟ|ㄠ|ㄡ|ㄢ|ㄣ|ㄤ|ㄥ|ㄦ|ㄧ|ㄨ|ㄩ|鞴|鐾|瘭|镳|黪|瘥|觇|孱|廛|蒇|冁|羼|螭|傺|瘛|舂|艟|瘳|雠|搋|嘬|辏|殂|汆|爨|榱|毳|皴|蹉|鹾|纛|髑屙民|莪|苊|鲕|鲼|瀵|酆|幞|黻|呒|黼|阝|阝月|彀|觏|毂|汩|罟|嘏|鲴|宄|庋|刿|虢|馘|撖|夯|薅|曷|翮|曷|翮||觳|冱|怙|戽|祜|瓠|鹱|溷|耠|锪|劐||蠖|丌|乩|赍|殛|蕺|掎|彐|芰|跽|鲚|葭|恝|湔|搛|鲣|鞯|囝|趼|醮|疖|苣|屦|醵|蠲|桊|鄄|谲|爝|麇|贶|悝|喟|仂|泐|鳓|诔|酹|嫠|黧|蠡|醴|鳢|轹|詈|跞|奁|臁|蚍|埤|罴|鼙|庀|仳|圮綦|屺|綮|汔|碛|葜|佥|岍|愆|搴|钤|掮|凵|肷|椠|戕|锖|檠|苘|謦|庆红|跫|銎|邛|筇|蛩鼽|诎|麴|黢|劬|朐|璩|蘧|衢|蠼毵|糁|xijinping|likeqiang|zhangdejiang|yuzhengsheng|liuyunshan|wangqishan|zhanggaoli|dishun|Dishun|hujintao|jiangzemin|likeqiang|zhangdejiang|wangqishan|liuyunshan|zhanggaoli|pengliyuan|quannengshenjiao|liruihuan|wenjiabao|lipeng|lichangchun|wubangguo|zhurongji|zhouyongkang|maozedong|zhouenlai|lihongzhi|boxilai|liulijun|xinjiangduli|xizangduli|xinwenguanzhi|lianggezhongguo|taiwanduli|dalailama|sex|fuck|bitch|lilanqing|jiaqinglin|falungong|falundafahao|xiejiao|gongchandang|zhonghuaminguo|yidangzhuanzheng|liushaoqi|xucaihou|zhaoziyang|dengxiaoping|jiangjieshi|jiangjingguo|chenshuibian|huimin|yisilan|zhenzhu|shijiamouni|taidu|liusi|zengqinghong|tiananmen|renmindahuitang|dang|guojia|lingjihua|DISHUN|DiShun|zhude|pengdehuai|linbiao|liubocheng|chenyi|helong|nierongzhen|xuxiangqian|luoronghuan|yejianying|lidazhao|chenduxiu|sunzhongshan|sunwen|sunyixian|chenyun|liruihuan|weijianxing|lilanqing|luogan|zengqinghong|huangju|wuguanzheng|lichangchun|wuyi|huiliangyu|zengpeiyan|caogangchuan|tangjiaxuan|huajianmin|chenzhili|zhangdejiang|yuzhengsheng|wanglequan|liuyunshan|wanggang|wangzhaoguo|liuqi|heguoqiang|guobaxiong|huyaobang|wanglequan|wangzhaoguo|bushi|bulaier|xiaoquan|chunyilang|samalanqi|annan|Alafate|pujing|mokeer|kelindun|ligen|nikesong|linken|dulumen|heluxiaofu|liening|sidalin|makesi|engesi|jinzhengri|jinricheng|sadamu|huzhiming|xihanuke|xilake|saqieer|Aluoyue|mandela|kasiteluo|fulankelin|huashengdun|aisenhaoweier|napolun|yalishanda|luyi|lamusifeierde|laola|baoweier|aobama|meideweijiefu|jinzhengen|anbeijinsan|benladeng|aomaer|chailing|dalai|jiangqing|zhangchunqiao|yaowenyuan|wanghongwen|dongtiaoyingji|xitele|mosuolini|gangcunxiushu|gangcunningci|gaolipiao|zhaoziyang|wangdan|woerkaixi|lihongzhi|lidashi|laichangxing|majiajue|banchan|eerdeni|shanbenwushiliu|Abian|Abianwansui|renaya|wanglijun|lingjihua|mohanmode|xucaihou|yuyongkang|zhoujiankang|yujiankang|zhouxiaokang|chenliangyu|lidenghui|lianzhan|songchuyu|luxiulian|yumuming|jiangzhongzheng|mayingjiu|wangqishan|WANGQISHAN|16大|18摸|21世纪中国基金会|6-4tianwang|89-64cdjp|ADMIN|AIDS|Aiort墓地|ai滋|Arqus会议场|asshole|Atan的移动石|A片|Baichi|Baopi|Bao皮|bastard|Bc|biaozi|Biao子|bignews|bitch|Bi样|BLOWJOB|boxun|B样|caoB|caobi|cao你|cao你妈|cao你大爷|cha你|chinaliberal|chinamz|chinesenewsnet|Clockgemstone|cnd|creaders|Crestbone|dafa|dajiyuan|damn|dfdz|DICK|dpp|EVENT|falu|falun|falundafa|fa轮|Feelmistone|Fku|FLG|flg|freechina|freedom|freenet|Fuck|fuck|GAMEMASTER|gan你|GCD|gcd|GM|Gruepin|HACKING|hongzhi|hrichina|http|huanet|hypermart.net|incest|item|J8|JB|jiangdongriji|jian你|jiaochuang|jiaochun|jiba|jinv|Ji女|Kao|KISSMYASS|lihongzhi|Mai骚|making|minghui|minghuinews|nacb|naive|Neckromancer|nmis|paper64|peacehall|PENIS|playboy|pussy|qiangjian|Rape|renminbao|renmingbao|rfa|safeweb|saobi|sb|SEX|sex|sf|SHIT|shit|simple|SUCK|sucker|svdc|System|taip|TEST|The9|The9City|tibetalk|TMD|TNND|triangle|triangleboy|Tringel|UltraSurf|unixbox|ustibet|voa|voachinese|wangce|WEBZEN|WG|wstaiji|xinsheng|yuming|zhengjian|zhengjianwang|zhenshanren|zhuanfalunADMIN|AIDS|AIORT墓地|AI滋|ARQUS会议场|ASSHOLE|ATAN的移动石|A片|BAICHI|BAOPI|BAO皮|BASTARD|BC|BIAOZI|BIAO子|BIGNEWS|BITCH|BI样|BLOWJOB|BOXUN|B样|CAOB|CAOBI|CAO你|CC小雪|CHA你|CHINALIBERAL|CHINAMZ|CHINESENEWSNET|CLOCKGEMSTONE|CND|CREADERS|CRESTBONE|DAFA|DAJIYUAN|DAMN|DFDZ|DICK|DPP|EVENT|FALU|FALUN|FALUNDAFA|FA轮|FEELMISTONE|FKU|FLG|FREECHINA|FREEDOM|FREENET|FUCK|GAMEMASTER|GAN你|GCD|GM|GRUEPIN|HACKING|HONGZHI|HRICHINA|HTTP|HUANET|HYPERMART.NET|INCEST|ITEM|J8|JB|JIANGDONGRIJI|JIAN你|JIAOCHUANG|JIAOCHUN|JIBA|JINV|JI女|KAO|KISSMYASS|㎏|LIHONGZHI|MAI骚|MAKING|MINGHUI|MINGHUINEWS|㎎|㎜|NACB|NAIVE|NECKROMANCER|NMIS|PAPER64|PEACEHALL|PENIS|PLAYBOY|PUSSY|QIANGJIAN|RAPE|RENMINBAO|RENMINGBAO|RFA|SAFEWEB|SAOBI|SB|SEX|SF|SHIT|SIMPLE|SUCK|SUCKER|SVDC|SYSTEM|TAIP|TEST|THE9|THE9CITY|TIBETALK|TMD|TNND|TRIANGLE|TRIANGLEBOY|TRINGEL|ULTRASURF|UNIXBOX|USTIBET|VOA|VOACHINESE|WANGCE|WEBZEN|WG|WSTAIJI|WWW|WWW.|XINSHENG|YUMING|ZHENGJIAN|ZHENGJIANWANG|ZHENSHANREN|ZHUANFALUN|ice|ICE|narcotics|pk|PK|TMD|碡|籀|朱駿|朱狨基|朱容基|朱溶剂|朱熔基|朱镕基|邾|猪操|猪聋畸|猪毛|猪毛1|舳|瘃|躅|翥|專政|颛|丬|隹|窀|卓伯源|倬|斫|诼|髭|鲻|子宫|秭|訾|自焚|自民党|自慰|自已的故事|自由民主论坛|总理|偬|诹|陬|鄹|鲰|躜|缵|作爱|作秀|阼|祚|做爱|阿扁萬歲|阿萊娜|啊無卵|埃裏克蘇特勤|埃斯萬|艾麗絲|愛滋|愛滋病|垵|暗黑法師|嶴|奧克拉|奧拉德|奧利弗|奧魯奇|奧倫|奧特蘭|㈧|巴倫侍從|巴倫坦|白立樸|白夢|白皮書|班禪|寶石商人|保釣|鮑戈|鮑彤|鮑伊|暴風亡靈|暴亂|暴熱的戰士|暴躁的城塔野獸|暴躁的警衛兵靈魂|暴躁的馬杜克|北大三角地論壇|北韓|北京當局|北美自由論壇|貝尤爾|韝|逼樣|比樣|蹕|颮|鑣|婊子養的|賓周|冰後|博訊|不滅帝王||不爽不要錢|布萊爾|布雷爾|蔡崇國|蔡啓芳|黲|操鶏|操那嗎B|操那嗎逼|操那嗎比|操你媽|操你爺爺|曹長青|曹剛川|草|草你媽|草擬媽|册那娘餓比|插那嗎B|插那嗎逼|插那嗎比|插你媽|插你爺爺|覘|蕆|囅|閶|長官沙塔特|常勁|朝鮮|車侖|車侖女幹|沉睡圖騰|陳炳基|陳博志|陳定南|陳建銘|陳景俊|陳菊|陳軍|陳良宇|陳蒙|陳破空|陳水扁|陳唐山|陳希同|陳小同|陳宣良|陳學聖|陳一諮|陳總統|諶|齔|櫬|讖|程凱|程鐵軍|鴟|痴鳩|痴拈|遲鈍的圖騰|持不同政見|赤色騎士|赤色戰士|處女膜|傳染性病|吹簫|春夏自由論壇|戳那嗎B|戳那嗎逼|戳那嗎比|輳|鹺|錯B|錯逼|錯比|錯那嗎B|錯那嗎逼|錯那嗎比|達夫警衛兵|達夫侍從|達癩|打飛機|大參考|大東亞|大東亞共榮|大鶏巴|大紀元|大紀元新聞網|大紀園|大家論壇|大奶媽|大史記|大史紀|大衛教|大中國論壇|大中華論壇|大衆真人真事|紿|戴維教|戴相龍|彈劾|氹|蕩婦|導師|盜竊犯|德維爾|登輝|鄧笑貧|糴|迪裏夏提|覿|地下教會|帝國主義|電視流氓|叼你媽|釣魚島|丁關根|東北獨立|東部地下水路|東方紅時空|東方時空|東南西北論談|東社|東升|東條|東條英機|東突暴動|東突獨立|東土耳其斯坦|東西南北論壇|東亞|東院看守|動亂|鬥士哈夫拉蘇|鬥士霍克|獨裁|獨裁政治|獨夫|獨立臺灣會|俄國|鮞|㈡|發楞|發掄|發掄功|發倫|發倫功|發輪|發論|發論公|發論功|發騷|發正念|法~倫|法~淪|法~綸|法~輪|法~論|法爾卡|法掄|法掄功|法侖|法淪|法綸|法輪大法|法輪功|法十輪十功|法謫|法謫功|反封鎖|反封鎖技術|反腐敗論壇|反人類|反社會|方勵之|防衛指揮官|放蕩|飛揚論壇|廢墟守護者|費鴻泰|費良勇|分隊長施蒂文|粉飾太平|糞便|鱝|豐饒的果實|風雨神州|風雨神州論壇|封從德|封殺|封印的靈魂騎士|馮東海|馮素英|紱|襆|嘸|傅作義|幹bi|幹逼|幹比|幹的你|幹幹幹|幹她|幹你|幹你老比|幹你老母|幹你娘|幹全家|幹死|幹死你|幹他|幹一家|趕你娘|岡巒|剛比|剛比樣子|崗哨士兵|肛門|高麗棒子|高文謙|高薪養廉|高自聯|膏藥旗|戈瑞爾德|戈揚|鴿派|歌功頌德|格雷(關卡排名管理者)|格魯|格魯(城鎮移動)|鯁|工自聯|弓雖|共産|共産黨|共産主義|共黨|共軍|共榮圈|緱|狗誠|狗狼養的|狗娘養的|狗養|狗雜種|覯|轂|古龍祭壇|骨獅|鯝|鴰|詿|關卓中|貫通兩極法|廣聞|嬀|龜兒子|龜公|龜孫子|龜頭|龜投|劌|緄|滾那嗎|滾那嗎B|滾那嗎錯比|滾那嗎老比|滾那嗎瘟比|鯀|咼|郭俊銘|郭羅基|郭岩華|國家安全|國家機密|國軍|國賊|哈爾羅尼|頇|韓東方|韓聯潮|韓正|漢奸|顥|灝|河殤|賀國强|賀龍|黑社會|黑手黨|紅燈區|紅色恐怖|紅炎猛獸|洪傳|洪興|洪哲勝|黌|鱟|胡緊掏|胡錦滔|胡錦淘|胡景濤|胡喬木|胡總書記|湖岸護衛兵|湖岸警衛兵|湖岸哨兵隊長|護法|鸌|華建敏|華通時事論壇|華夏文摘|華語世界論壇|華岳時事論壇|懷特|鍰|皇軍|黃伯源|黃慈萍|黃禍|黃劍輝|黃金幼龍|黃菊|黃片|黃翔|黃義交|黃仲生|回民暴動|噦|繢|毀滅步兵|毀滅騎士|毀滅射手|昏迷圖騰|混亂的圖騰|鍃|活動|擊倒圖騰|擊傷的圖騰|鶏8|鶏八|鶏巴|鶏吧|鶏鶏|鶏奸|鶏毛信文匯|鶏女|鶏院|姬勝德|積克館|賫|鱭|賈廷安|賈育台|戔|監視塔|監視塔哨兵|監視塔哨兵隊長|鰹|韉|簡肇棟|建國黨|賤B|賤bi|賤逼|賤比|賤貨|賤人|賤種|江八點|江羅|江綿恒|江戲子|江則民|江澤慧|江賊|江賊民|薑春雲|將則民|僵賊|僵賊民|講法|蔣介石|蔣中正|降低命中的圖騰|醬猪媳|撟|狡猾的達夫|矯健的馬努爾|嶠|教養院|癤|揭批書|訐|她媽|届中央政治局委員|金槍不倒|金堯如|金澤辰|巹|錦濤|經文|經血|莖候佳陰|荊棘護衛兵|靖國神社|㈨|舊斗篷哨兵|齟|巨槌騎兵|巨鐵角哈克|鋸齒通道被遺弃的骷髏|鋸齒通道骷髏|屨|棬|絕望之地|譎|軍妓|開苞|開放雜志|凱奧勒尼什|凱爾本|凱爾雷斯|凱特切爾|砍翻一條街|看中國|闞|靠你媽|柯賜海|柯建銘|科萊爾|克萊恩|克萊特|克勞森|客戶服務|緙|空氣精靈|空虛的伊坤|空虛之地|恐怖主義|瞘|嚳|鄺錦文|貺|昆圖|拉姆斯菲爾德|拉皮條|萊特|賴士葆|蘭迪|爛B|爛逼|爛比|爛袋|爛貨|濫B|濫逼|濫比|濫貨|濫交|勞動教養所|勞改|勞教|鰳|雷尼亞|誄|李紅痔|李洪寬|李繼耐|李蘭菊|李老師|李錄|李祿|李慶安|李慶華|李淑嫻|李鐵映|李旺陽|李小鵬|李月月鳥|李志綏|李總理|李總統|裏菲斯|鱧|轢|躒|奩|連方瑀|連惠心|連勝德|連勝文|連戰|聯總|廉政大論壇|煉功|兩岸關係|兩岸三地論壇|兩個中國|兩會|兩會報道|兩會新聞|廖錫龍|林保華|林長盛|林佳龍|林信義|林正勝|林重謨|躪|淩鋒|劉賓深|劉賓雁|劉剛|劉國凱|劉華清|劉俊國|劉凱中|劉千石|劉青|劉山青|劉士賢|劉文勝|劉文雄|劉曉波|劉曉竹|劉永川|㈥|鷚|龍虎豹|龍火之心|盧卡|盧西德|陸委會|輅|呂京花|呂秀蓮|亂交|亂倫|亂輪|鋝|掄功|倫功|輪大|輪功|輪奸|論壇管理員|羅福助|羅幹|羅禮詩|羅文嘉|羅志明|腡|濼|洛克菲爾特|媽B|媽比|媽的|媽批|馬大維|馬克思|馬良駿|馬三家|馬時敏|馬特斯|馬英九|馬永成|瑪麗亞|瑪雅|嗎的|嗎啡|勱|麥克斯|賣逼|賣比|賣國|賣騷|賣淫|瞞報|毛厠洞|毛賊|毛賊東|美國|美國參考|美國佬|美國之音|蒙獨|蒙古達子|蒙古獨|蒙古獨立|禰|羋|綿恒|黽|民國|民進黨|民聯|民意論壇|民陣|民主墻|緡|湣|鰵|摸你鶏巴||莫偉强|木子論壇|內褲|內衣|那嗎B|那嗎逼|那嗎錯比|那嗎老比|那嗎瘟比|那娘錯比|納粹|奶頭|南大自由論壇|南蠻子|鬧事|能樣|尼奧夫|倪育賢|鯢|你媽|你媽逼|你媽比|你媽的|你媽了妹|你說我說論壇|你爺|娘餓比|捏你鶏巴|儂著岡巒|儂著卵拋|奴隸魔族士兵|女幹|女主人羅姬馬莉|儺|諾姆|潘國平|蹣|龐建國|泡沫經濟|轡|噴你|皮條客|羆|諞|潑婦|齊墨|齊諾|騎你|磧|僉|鈐|錢達|錢國梁|錢其琛|膁|槧|錆|繰|喬石|喬伊|橋侵襲兵|譙|鞽|篋|親美|親民黨|親日|欽本立|禽獸|唚|輕舟快訊|情婦|情獸|檾|慶紅|丘垂貞|詘|去你媽的|闃|全國兩會|全國人大|犬|綣|瘸腿幫|愨|讓你操|熱比婭|熱站政論網|人民報|人民大會堂|人民內情真相|人民真實|人民之聲論壇|人權|日本帝國|日軍|日內瓦金融|日你媽|日你爺爺|日朱駿|顬|乳頭|乳暈|瑞士金融大學|薩達姆|三K黨|三個代表|三級片|三去車侖工力|㈢|毿|糝|騷B|騷棒|騷包|騷逼|騷棍|騷貨|騷鶏|騷卵|殺你全家|殺你一家|殺人犯|傻鳥|煞筆|山口組|善惡有報|上訪|上海幫|上海孤兒院|厙|社會主義|射了還說要|灄|詵|神經病|諗|生孩子沒屁眼|生命分流的圖騰|澠|聖射手|聖戰|盛華仁|濕了還說不要|濕了還說要|釃|鯴|㈩|石化圖騰|石拳戰鬥兵|時代論壇|時事論壇|鰣|史萊姆|史萊姆王|士兵管理員瓦爾臣|世界經濟導報|事實獨立|侍從貝赫爾特|侍從倫斯韋|貰|攄|數據中國|雙十節|氵去車侖工力|氵去車侖工力?|稅力|司馬晋|司馬璐|司徒華|私?服|私處|思科羅|斯諾|斯皮爾德|四川獨|四川獨立|四人幫|㈣|宋書元|藪|蘇菲爾|蘇拉|蘇南成|蘇紹智|蘇特勒守護兵|蘇特勤|蘇特勤護衛兵|蘇特勤魔法師|蘇曉康|蘇盈貴|蘇貞昌|誶|碎片製造商人馬克|碎片製造商人蘇克|孫大千|孫中山|他媽|他媽的|他嗎的|他母親|塔內|塔烏|鰨|闥|臺盟|臺灣帝國|臺灣獨立|臺灣獨|臺灣共産黨|臺灣狗|臺灣建國運動組織|臺灣民國|臺灣青年獨立聯盟|臺灣政論區|臺灣自由聯盟|鮐|太監|泰奴橋警衛兵|泰奴橋掠奪者|湯光中|唐柏橋|鞀|謄|天安門|天安門錄影帶|天安門事件|天安門屠殺|天安門一代|天閹|田紀雲|齠|鰷|銚|庭院警衛兵|統獨|統獨論壇|統戰|頭領奧馬|頭領墳墓管理員|圖書管理員卡特|屠殺|團長戈登|團員馬爾汀|摶|鼉|籜|膃|外交論壇|外交與方略|晚年周恩來|綰|萬里|萬潤南|萬維讀者論壇|萬曉東|王寶森|王超華|王輔臣|王剛|王涵萬|王滬寧|王軍濤|王樂泉|王潤生|王世堅|王世勛|王秀麗|王兆國|網禪|網特|猥褻|鮪|溫B|溫逼|溫比|溫家寶|溫元凱|閿|無界瀏覽器|吳百益|吳敦義|吳方城|吳弘達|吳宏達|吳仁華|吳淑珍|吳學燦|吳學璨|吳育升|吳志芳|西藏獨|吸收的圖騰|吸血獸|覡|洗腦|系統|系統公告|餼|郤|下賤|下體|薟|躚|鮮族|獫|蜆|峴|現金|現金交易|獻祭的圖騰|鯗|項懷誠|項小吉|嘵|小B樣|小比樣|小參考|小鶏鶏|小靈通|小泉純一郎|謝長廷|謝深山|謝選駿|謝中之|辛灝年|新觀察論壇|新華舉報|新華內情|新華通論壇|新疆獨|新生網|新手訓練營|新聞出版總署|新聞封鎖|新義安|新語絲|信用危機|邢錚|性愛|性無能|修煉|頊|虛弱圖騰|虛無的飽食者|徐國舅|許財利|許家屯|許信良|諼|薛偉|學潮|學聯|學運|學自聯|澩|閹狗|訁|嚴家其|嚴家祺|閻明複|顔清標|顔慶章|顔射|讞|央視內部晚會|陽具|陽痿|陽物|楊懷安|楊建利|楊巍|楊月清|楊周|姚羅|姚月謙|軺|搖頭丸|藥材商人蘇耐得|藥水|耶穌|野鶏|葉菊蘭|夜話紫禁城|一陀糞|㈠|伊莎貝爾|伊斯蘭|伊斯蘭亞格林尼斯|遺精|議長阿茵斯塔|議員斯格文德|异見人士|异型叛軍|异議人士|易丹軒|意志不堅的圖騰|瘞|陰部|陰唇|陰道|陰蒂|陰戶|陰莖|陰精|陰毛|陰門|陰囊|陰水|淫蕩|淫穢|淫貨|淫賤|尹慶民|引導|隱者之路|鷹眼派氏族|硬直圖騰|憂鬱的艾拉|尤比亞|由喜貴|游蕩的僵尸|游蕩的士兵|游蕩爪牙|游錫坤|游戲管理員|友好的魯德|幼齒|幼龍|于幼軍|余英時|漁夫菲斯曼|輿論|輿論反制|傴|宇明網|齬|飫|鵒|元老蘭提(沃德）|圓滿|緣圈圈|遠志明|月經|韞|雜種|鏨|造愛|則民|擇民|澤夫|澤民|賾|賊民|譖|扎卡維是英雄|驏|張伯笠|張博雅|張鋼|張健|張林|張清芳|張偉國|張溫鷹|張昭富|張志清|章孝嚴|帳號|賬號|招鶏|趙海青|趙建銘|趙南|趙品潞|趙曉微|趙紫陽|貞操|鎮壓|爭鳴論壇|正見網|正義黨論壇|㊣|鄭寶清|鄭麗文|鄭義|鄭餘鎮|鄭源|鄭運鵬|政權|政治反對派|縶|躑|指點江山論壇|騭|觶|躓|中毒的圖騰|中毒圖騰|中俄邊界|中國復興論壇|中國共産黨|中國孤兒院|中國和平|中國論壇|中國社會進步黨|中國社會論壇|中國威脅論|中國問題論壇|中國移動通信|中國真實內容|中國之春|中國猪|中華大地|中華大衆|中華講清|中華民國|中華人民實話實說|中華人民正邪|中華時事|中華養生益智功|中華真實報道|中央電視臺|鐘山風雨論壇||周鋒鎖|周守訓|朱鳳芝|朱立倫|朱溶劑|㈱|猪聾畸|主攻指揮官|主義|助手威爾特|專制|顓|轉化|諑|資本主義|鯔|子宮|自民黨|自由民主論壇|總理|諏|鯫|躦|纘|作愛|做愛|bcd.s.59764.com|kkk.xaoh.cn|www.xaoh.cn|zzz.xaoh.cn|aa.yazhousetu.hi.9705.net.cn|eee.xaoh.cn|lll.xaoh.cn|jj.pangfangwuyuetian.hi.9705.net.cn|rrr.xaoh.cn|ooo.xaoh.cn|www.zy528.com|aaad.s.59764.com|www.dy6789.cn|aaac.s.51524.com|208.43.198.56|166578.cn|www.wang567.com|www.bin5.cn|www.sanjidianying.com.cn|www.anule.cn|www.976543.com|www.50spcombaidu1828adyou97sace.co.cc|chengrenmanhua.1242.net.cn|qingsewuyuetian.1174.net.cn|lunlidianyingxiazai.1174.net.cn|siwameitui.1274.net.cn|niuniujidi.1174.net.cn|xiao77.1243.net.cn|woyinwose.1243.net.cn|dingxiang.1249.net|cnaicheng.1174.net.cn|1234chengren.1249.net.cn|sewuyuetian.1174.net.cn|huangsexiaoshuo.1242.net.cn|lunlidianying.1274.net.cn|xingqingzhongren.1174.net.cn|chengrenwangzhi.1242.net.cn|xiao77luntan.1249.net.cn|dingxiang.1243.net.cn|11xp.1243.net.cn|baijie.1249.net.cn|sewuyuetian.1274.net.cn|meiguiqingren.1274.net.cn|tb.hi.4024.net.cn|www.91wangyou.com|www.wow366.cn|www.yxnpc.com|www.365jw.com|58.253.67.74|www.978808.com|www.sexwyt.com|7GG|www.567yx.com|131.com|bbs.7gg.cn|www.99game.net|ppt.cc|www.zsyxhd.cn|www.foyeye.com|www.23nice.com.cn|www.maituan.com|www.ylteam.cn|www.yhzt.org|vip886.com|www.neicehao.cn|bbs.butcn.com|www.gamelifeclub.cn|consignment5173|www.70yx.com|www.legu.com|ko180|bbs.pkmmo|whoyo.com|www.2q5q.com|www.zxkaku.cn|www.gw17173.cn|www.315ts.net|qgqm.org|17173dl.net|i9game.com|365gn|158le.com|1100y.com|bulaoge.com|17youle.com|reddidi.com.cn|icpcn.com|ul86.com|showka8.com|szlmgh.cn|bbs.766.com|www.766.com|91bysd.cn|jiayyou.cn|gigabyte.cn|duowan|wgxiaowu.com|youxiji888.cn|yz55.cn|Carrefour|51jiafen.cn|597ft.com|itnongzhuang.com2y7v.cnhwxvote.cn|92klgh.cn|xiaoqinzaixian.cn|661661.com|haosilu.com|dl.com|xl517.com|sjlike.com|tont.cn|xq-wl.cn|feitengdl.com|bz176.com|dadati.com|asgardcn.com|dolbbs.com|okaygood.cn|1t1t.com|jinpaopao.com|blacksee.com.cn|1qmsj.com|202333.com|luoxialu.cn|37447.cn|567567aa.cn|09city.com|71ka.com|fy371.com|365tttyx.com|host800.com|lybbs.info|ys168.com|88mysf.com|5d6d.com|id666.uqc.cn|stlmbbs.cn|pcikchina.com|lxsm888.com|wangyoudl.com|chinavfx.net|zxsj188.com|wg7766.cn|e7sw.cn|jooplay.com|gssmtt.com|likeko.com|lyx-game.cn|wy33.com|zy666.net|newsmth.net|l2jsom.cn|13888wg.com|qtoy.com|1000scarf.com|digitallongking.com|zaixu.net|ncyh.cn|888895.com|ising99.com|cikcatv.2om|parke888.com|01gh.com|gogo.net|uu1001.com|wy724.com|prettyirene.net|yaokong7.com|zzmysf.com|52sxhy.cn|92wydl.com|g365.net|pkmmo.com|52ppsa.cn|bl62.com|canyaa.com|lordren.com|xya3.cn|5m5m5m.com|www.gardcn.com|www.sf766.com.cn|ent365.com|18900.com|7mmo.com|cdream.com|wy3868.com|nbfib.cn|17173yxdl.cn|osisa.cn|haouse.cn|54hero.com|ieboy.cn|geocities.com|xiuau.cn|cvceo.com|fxjsqc.com|thec.cn|c5c8.cn|a33.com|qqsg.org|my3q.com|51juezhan.com|kartt.cn|hexun.com|15wy.com|13ml.net|homexf.cn|xyxgh.com|jdyou.com|langyou.info|duowan.com|8188mu.com|tianlong4f.cn|yeswm.com|wgbobo.cn|haog8.cn|47513.cn|92ey.com|hao1788.co|mgjzybj.com|xdns.eu|shenycs.co|mpceggs.cn|kod920.cn|njgamecollege.org|51hdw.com|025game.cn|bibidu.com|bwowd.com|3kwow.com|zx002.com|bazhuwg.cn|991game.com|zuanshi1000.cn|10mb.cn|Huihuangtx.com|chongxianmu.cn|any2000.com|99sa.com|zhidian8.com|t9wg.cn|bobaoping|qixingnet.com|88kx.com|00sm.cn|moyi520.cn|d666.com|fisonet.com|0571qq.com|173at.com|pk200.com|2feiche.cn|jjdlw.com|xyq2sf.com|69nb.com|txwsWind|jiayyou.com|胡总书记|胡景涛|大纪元|大纪元新闻网|燕玲论坛|fuck|共产党|urban|我操|cao|他妈的|TMD|鸡巴|煞笔|傻B|法轮功|江泽民|胡锦涛|温家宝|urban-rivals|rivals|我日|UR|ur|性交|口交|婊子|妓女|她妈|牛逼|牛B|牛比|煞笔|傻逼|傻B|操你妈|装逼|装B|日你妈|不玩了|删号|卖号|删 号|妈的|妈逼|草你妈|T.M.D|JB|jb||出售账号|出售此号|卖号|U/R|U-R|j8|吗的|8仙|狗日|出售神符|色情|黄色|藏独|台独|法轮大法|鸡巴|毛泽东|NPC|*法*轮*功*|*李*洪*志*阿扁|阿扁万岁|阿拉|阿拉法特|挨球|安南|安全局|澳洲光明网|八九|八九风波|办理文凭|办理证件|包皮|保钓|保监会|保密局|鸨|鲍岳桥|暴动|暴乱|暴徒|北京之春|贝肉|本?拉登|本?拉登|苯比|笨屄|笨逼|屄|屄毛|逼毛|逼你老母|逼样|比毛|婊|婊子|宾周|冰毒|波霸|博讯|薄一波|布莱尔|布雷尔|布什|布什|财政部|参事室|藏独|藏独|藏独|操|操GM|操Gm|操gM|操gm|操XX|操逼|操比|操蛋|操你|交媾|CAO|K粉|J8|小姐兼职|交媾|西藏314事件|新疆7.5事件|乱伦|毛片|黄片|交配|群交|小姐兼职|茉莉花革命|操你八辈祖宗|操你妈|操你妈屄|操他|曹刚川|草的你妈|草妈|草你妈|草拟妈|肏|测绘局|插GM|插Gm|插gM|插gm|插妳|插你|插你妈|插深些|产权局|朝鲜|车臣|车仑|陈功|陈良宇|陈水扁|陈希同|陈晓宁|陈毅|陈至立|成人电影|成人片|吃大便|吃屎|迟浩田|赤匪|抽插|抽你丫的|臭化西|出售假币|出售枪支|出售手枪|吹喇叭|吹箫|春药|蠢猪|戳你|粗制吗啡|催情药|达赖|达赖喇嘛|打炮|大B|大逼|大便|大波波|大麻|大麻树脂|大麻油|大师|戴维教|大学骚乱|大血B|大血比|呆卵|戴海静|戴红|戴晶|戴维教|党主席|荡妇|档案局|盗窃犯|盗窃犯|道教|邓小平|帝国主义|电监会|叼你|叼你妈|屌|屌7|屌鸠|屌毛|屌妳|屌七|屌西|钓鱼台|丁关根|丁子霖|东北独立|东升|东条英机|东突|东突暴动和独立|东突组织|东亚病夫|董建华|董贱华|董文华|懂文华|独立|独立台湾会|恩格斯|二B|二屄|二逼|二乙基酰胺发抡|发抡功|发伦|发伦功|发轮|发论|发论公|发论功|发骚|法(轮)功|法*轮*功|法功|法愣|法仑|法轮|法轮大法|法轮功|法西斯|法制办|反动|反革命|发票|冰粉|性奴|反共|反华|反恐委员会|反日|反政府|分裂祖国|佛教|佛展千手法|佛祖|斧头镰刀|阝月|傅鹏|傅作义|干GM|干Gm|干gM|干gm|干拎娘|干妳|干妳老母|干妳妈|干妳娘|干你|干你妈|干你妈b|干你妈逼|干你娘|干七八|干死你|肛|肛交|肛门|港澳办|高俊|高丽棒子|高校暴乱|高校群体事件|高校骚乱|睾|睾丸|膏药旗|弓虽女干|公安|公安部|公安局|共产党|共产主义|共匪|共狗|狗b|狗操|狗卵|狗娘|狗屁|狗日|狗日的|狗屎|观世音|官逼民反|官商勾结|龟儿子|龟公|龟孙子|龟头|鬼村|滚|郭伯雄|国安局|国防部|国防科工委|国管局|国际法院|国家民委|国家主席|国家主要部委|国民党|国民党万岁|海洛因|海洋局|何候华|贺国强|贺龙|黑社会|黑手党|黑手党|黑手党|红卫兵|洪兴|洪志|后庭|胡XX|胡紧涛|胡紧掏|胡紧套|胡锦涛|胡锦淘|胡乔木|胡耀邦|胡主席|花柳|华国锋|华建敏|换妻|黄　菊|黄菊|黄色电影|黄色小电影|回教|回良玉|回民暴动|回族人吃猪肉|昏药|火棒|机八|机巴|鸡八|鸡巴|鸡叭|鸡芭|鸡掰|鸡奸|基地组织|基督|基督教|激情电影|激情小电影|鸡|计牌软件|计生委|妓|妓女|妓院|贾庆林|奸|奸夫淫妇|奸你|奸淫|贱|贱逼|贱货|贱人|江Core|江八|江八点|江独裁|江核心|江青|江戏子|江择民|江泽民|江贼民|江折民|江猪|江猪媳|江主席|僵贼民|疆独|蒋介石|蒋经国|蒋中正|酱猪媳|交通部|姣西|叫床|叫鸡|叫小姐|教育部|她妈的金日成|金正日|禁书|经济社会理事会|经社理事会|精液|精子|警匪一家|敬国神社|靖国神社|静坐|纠察员|鸠|鸠屎|军长发威|军国主义|军妓|尻|靠|靠你妈|靠腰|可待因|可卡叶|可卡因|克林顿|恐怖份子|恐怖主义|口交|寇晓伟|狂操|狂操你全家|拉登|拉姆斯菲尔德|懒教|烂B|烂屄|烂逼|烂比|烂屌|烂货|劳+教+所|劳动保障部|老逼|老毛子|老母|黎阳评|李长春|李登辉|李弘旨|李红志|李宏旨|李宏志|李洪志|李岚清|李鹏|李鹏*|李瑞环|李山|李铁映|李先念|连战|联大|联合国|联合国大会|联易|联易互动|粮食局|两腿之间|列宁|林彪|林业局|刘　淇|刘军|刘淇|刘少奇|刘云山|流氓|六.四|六。四|六?四|六合彩|六四|六-四|六四事件|六四真相|龙新民|吕秀莲|旅游局|卵|轮功|轮奸|罗　干|罗干|骡干|妈逼|妈比|妈卖妈屁|妈批|妈祖|妈B|妈的|麻醉钢枪|麻醉枪|麻醉药|麻醉乙醚|马克思|马卖马屁|马英九|吗啡|吗啡碱|吗啡片|买财富|买卖枪支|麦角酸|卖.国|卖B|卖ID|卖QQ|卖逼|卖比|卖财富|卖党求荣|卖国|卖国求荣|卖号|卖卡|卖软件|卖淫|毛XX|毛厕洞|毛一鲜|毛泽东|毛贼东|毛主席|梅花网|美国|美国佬|美国之音|美利坚|蒙尘药|蒙独|蒙古达子|蒙古独立|迷魂药|迷奸药|迷歼药|迷药|密洞|密宗|民航局|民进党|民运|民政部|明慧网|摩门教|莫索里尼|穆罕默德|穆斯林|乳头|奶子|妳老母的|妳妈的|妳马的|妳娘的|南联盟|南蛮子|南蛮子|嫩B|嫩b|伱妈|你爸|你大爷|你二大爷|你老母|你老味|你姥|你姥姥的|你妈|你妈逼|你妈的|你娘|你爷爷的|鸟GM|鸟Gm|鸟gM|鸟gm|鸟你|牛逼|牛比|农业部|虐待|拍肩神药|喷你|彭真|皮条|屁眼|嫖客|苹果日报|破坏|破鞋|仆街|普京|气象局|钱其琛|枪决女犯|枪决现场|枪支弹药|强奸|强奸犯|强卫|强效失意药|强硬发言|抢劫|乔石|侨办|切七|窃听器|窃听器材|亲民党|青天白日|情色|去你妈的|去死|全国人大|瘸腿帮|人大|人大代表|人代会|人弹|人民|人民大会堂|人民广场|人民日报|人民银行|人体炸弹|日GM|日Gm|日gM|日gm|日X妈|日本RING|日本鬼子|日你|日你妈|日你娘|日他娘|肉棒|肉壁|肉洞|肉缝|肉棍|肉棍子|肉穴|乳|乳波臀浪|乳房|乳交|乳头|撒尿|萨达姆|塞白|塞你爸|塞你公|塞你老母|塞你老师|塞你母|塞你娘|三个呆婊|三个代婊|三级片|三民主义|三陪|三陪女|三去车仑|三唑仑|骚|骚B|骚逼|骚货|骚|色情|色情电影|色情服务|色情小电影|杀人犯|傻B|傻屄|傻逼|傻比|傻吊|傻卵|傻子|煞逼|商务部|上妳|上你|社科院|射精|身份生成器|神经病|神通加持法|生鸦片|圣女峰|十八摸|十年动乱石进|食捻屎|食屎|驶你爸|驶你公|驶你老母|驶你老师|驶你母|驶你娘|是鸡|手淫|受虐狂|售ID|售号|售软件|双峰微颤|氵去|水利部|水去车仑|税务总局|司法部|私服|私/服|私\\服|私服|私-服|私—服|斯大林|死gd|死GD|死gm|死GM|死全家|四川独立|四人帮|宋楚瑜|宋祖英|孙文|孙逸仙|孙中山|他爹|他妈|他妈的|他马的|他母亲|他祖宗|台办|台独|台联|台湾党|台湾帝国|台湾独立|台湾共产党|台湾共和国|台湾狗|台湾国|台湾民国|太监|太子党|唐家璇|天皇陛下|田纪云|舔西|投毒杀人|透视软件|推油|外　挂|外挂|外/挂|外\\挂|外_挂|外挂|外-挂|外—挂|外汇局|外交部|外专局|晚年周恩来|万税|王八蛋|王宝森|王刚|王昊|王乐泉|王岐山|王太华|王兆国|王震|网管|威而钢|威而柔|卫生部|尉健行|温加宝|温家宝|温家保|温馨|温总理|文化部|文物局|倭国|倭寇|我操|我操你|我干|我妳老爸|我日|我日你|无界浏览器|吴　仪|吴邦国|吴官正|吴仪|五星红旗|西藏独立|西藏天葬|希拉克|希特勒|希望之声|洗脑班|系统|系统公告|系统讯息|鲜族|乡巴佬|想上你|小鸡鸡|小泉|小泉纯一郎|小日本|小肉粒|小乳头|小穴|邪教|新疆独立|兴奋剂|性爱|性交|性虐待|性无能|性欲|徐光春|学潮|血逼|血腥图片|鸦片|鸦片液|鸦片渣|烟草局|严方军|阳精|阳具|摇头丸|摇头玩|耶和华|耶苏|耶稣|叶剑英|夜情|一党专制|一贯道|一国两制|一夜情|一中一台|伊拉克|伊朗|伊斯兰|以茎至洞|抑制剂|阴部|阴唇|阴道|阴蒂|阴核|阴户|阴茎|阴毛|阴水|阴小撕大|淫|淫荡|淫秽|淫货|淫贱|淫叫|淫毛|淫靡|淫水|淫娃|淫语连连|淫欲|英雄纪念碑|硬挺|邮政局|游戏发奖员|游戏宫理员|游戏管理员|游行|俞正声|舆论钳制|玉杵|欲火焚身|原子能机构|援交|远程偷拍|曰GM|曰Gm|曰gM|曰gm|曰你|月经|月经不调|月经|扎卡维是英雄|杂种|造反|曾培炎|曾庆红|扎卡维|张朝阳|张潮阳|张德江|张磊|张立昌|张小平|赵紫阳|侦探设备|真理教|中国恐怖组织|中华民国|中南海|中宣部|周恩来|周永康|周总理|朱德|朱容鸡|朱容基|朱熔基|朱镕基|朱总理|猪操|猪容基|主席|转法轮|转法轮|装屄|装逼|追查国际|子女任职名单|自焚|自杀手册|自杀指南|自制手枪|自治机关|宗教|总局|总理|作爱|坐台的|做爱|共产党|江泽民|胡锦涛|温家宝|严方军|屄毛|操逼毛|东突|骚货|法轮功|江泽民|胡锦涛|温家宝|urban-rivals|rivals|u r|ur|我日|UR|ur|性交|口交|U R|taobao|webgame.com.cn|婊子|妓女|他妈|她妈|牛逼|牛比|牛B|煞笔|傻逼|傻B|你妈|操你妈|装逼|装B|日你妈|不玩了|删号|卖号|垃圾游戏|烂游戏|删 号|妈的|妈逼|草你妈|T.M.D|JB|jb|淘宝|出售账号|出售此号|卖号|U/R|U-R|c a o|j8|吗的|8仙|狗日|出售神符|色情|黄色|h站|龙虎|虎门|龙 虎 门|WEB牌戰|WEB战牌|战牌|8 仙|ＵＲ|ur|UR|街头对抗|藏独|台独|法轮大法|混 沌决|ur|UR|urban|鸡巴|坐台的|作爱|总理|宗教|自治机关|自制手枪|东伊运|ISIS|砍人|砍死|连杀|小泽玛利亚|89|徒弟会|统一教|解放组织|呼喊派|全范围教会|全范围议会|灵灵教|新约教会|观音法门|主神教|被立王|同一教|三班仆人派|灵山真佛宗|天父的儿女|爱的家庭|家庭国际|达米宣教会|世界以利亚福音宣教会|共青团|回民是猪|女仆|SB123|两会|买卖毒品|狗男女|真主|天安门|仆从|屠戮大师|抢夺|全能教|共青团|主神教|港独|蔡英文|回民都是猪|穆罕默德|全能神|你奶奶|asshole|伊斯兰国|特朗普|屌丝屌炸天|金三胖|占中|共青团中央|臭尼姑|一中一台|一台一中|奴隶";
	FuckUtils.words=null;
	return FuckUtils;
})()


/**
*线性函数计算
*@author huyouwei
*/
//class utils.MathTools
var MathTools$1=(function(){
	//代表无穷大
	function MathTools(){}
	__class(MathTools,'utils.MathTools',null,'MathTools$1');
	MathTools.calcK=function(x1,y1,x2,y2){
		var dx=x1-x2;
		var dy=y1-y2;
		if(Math.abs(dx)<=MathTools.EPS){
			return MathTools.MAX_INT;
		}
		return dy/dx;
	}

	MathTools.calcB=function(x1,y1,x2,y2){
		var k=MathTools.calcK(x1,y1,x2,y2);
		if(k==MathTools.MAX_INT){
			return MathTools.EPS;
		}
		return y1-k *x1;
	}

	MathTools.calcB2=function(x1,y1,k){
		if(k==MathTools.MAX_INT){
			return MathTools.EPS;
		}
		return y1-k *x1;
	}

	MathTools.calcPoint=function(p1,p2,p3,p4){
		var k1=MathTools.calcK(p1.x,p1.y,p2.x,p2.y);
		var k2=MathTools.calcK(p3.x,p3.y,p4.x,p4.y);
		if(Math.abs(k1-k2)<=MathTools.EPS){
			return Point.EMPTY;
		};
		var b1=MathTools.calcB(p1.x,p1.y,p2.x,p2.y);
		var b2=MathTools.calcB(p3.x,p3.y,p4.x,p4.y);
		var x=0;
		var y=0;
		if(k1==MathTools.MAX_INT){
			x=p1.x;
			y=k2 *x+b2;
			}else if(k2==MathTools.MAX_INT){
			x=p3.x;
			y=k1 *x+b1;
			}else{
			x=(b2-b1)/(k1-k2);
			y=k1 *x+b1;
		}
		return new Point(x,y);
	}

	MathTools.calcPoint2=function(k1,k2,b1,b2,p1,p3){
		if(Math.abs(k1-k2)<=MathTools.EPS){
			return Point.EMPTY;
		};
		var x=0;
		var y=0;
		if(k1==MathTools.MAX_INT){
			x=p1.x;
			y=k2 *x+b2;
			}else if(k2==MathTools.MAX_INT){
			x=p3.x;
			y=k1 *x+b1;
			}else{
			x=(b2-b1)/(k1-k2);
			y=k1 *x+b1;
		}
		return new Point(x,y);
	}

	MathTools.equal=function(value1,value2){
		if(Math.abs(value1-value2)<=MathTools.EPS){
			return true;
		}
		return false;
	}

	MathTools.lineIntersect=function(point,p1,p2,p3,p4){
		if(point==Point.EMPTY){
			return false;
		};
		var x=point.x;
		var y=point.y;
		var x1=p1.x;
		var y1=p1.y;
		var x2=p2.x;
		var y2=p2.y;
		var isInX=((x > x1 || MathTools.equal(x,x1))&& (x < x2 || MathTools.equal(x,x2)));
		isInX=isInX || ((x < x1 || MathTools.equal(x,x1))&& (x > x2 || MathTools.equal(x,x2)));
		var isInY=((y > y1 || MathTools.equal(y,y1))&& (y < y2 || MathTools.equal(y,y2)));
		isInY=isInY || ((y < y1 || MathTools.equal(y,y1))&& (y > y2 || MathTools.equal(y,y2)));
		var isIn=isInX && isInY;
		if (!isIn){
			return false;
		}
		x1=p3.x;
		y1=p3.y;
		x2=p4.x;
		y2=p4.y;
		var isInX2=((x > x1 || MathTools.equal(x,x1))&& (x < x2 || MathTools.equal(x,x2)));
		isInX2=isInX2 || ((x < x1 || MathTools.equal(x,x1))&& (x > x2 || MathTools.equal(x,x2)));
		isInX=isInX && isInX2;
		var isInY2=((y > y1 || MathTools.equal(y,y1))&& (y < y2 || MathTools.equal(y,y2)));
		isInY2=isInY2 || ((y < y1 || MathTools.equal(y,y1))&& (y > y2 || MathTools.equal(y,y2)));
		isInY=isInY && isInY2;
		return isInX && isInY;
	}

	MathTools.MAX_INT=2147483647;
	__static(MathTools,
	['EPS',function(){return this.EPS=1.0 *Math.pow(10,-3);}
	]);
	return MathTools;
})()


/**
*游戏截图辅助类
*@author chengwen.yi
*
*/
//class utils.ScreenshotUtil
var ScreenshotUtil=(function(){
	function ScreenshotUtil(){}
	__class(ScreenshotUtil,'utils.ScreenshotUtil');
	ScreenshotUtil.blurCaptureTest=function(sp,$cutW,$cutH,$offX,$offY){
		($cutW===void 0)&& ($cutW=0);
		($cutH===void 0)&& ($cutH=0);
		($offX===void 0)&& ($offX=0);
		($offY===void 0)&& ($offY=0);
		sp.filters=[new BlurFilter(8)];
		Laya.timer.frameOnce(1,ScreenshotUtil,function(){
			var _w=Math.floor($cutW||sp.width);
			var _h=Math.floor($cutH||sp.height);
			var htmlC=sp.drawToCanvas(_w,_h,$offX,$offY);
			sp.filters=null;
			sp.visible=false;
			var texture=new Texture(htmlC);
			var sprite2=new Image("assets/textrue/common/blank.png");
			sprite2.sizeGrid="2,2,2,2,1";
			sprite2.width=_w+100;
			sprite2.width=_h+100;
			var sprite=new Sprite();
			sprite.graphics.drawTexture(texture,0,0,_w,_h);
			Laya.stage.addChild(sprite);
		});
	}

	ScreenshotUtil.captureTest=function(sp,$cutW,$cutH,$offX,$offY){
		($cutW===void 0)&& ($cutW=0);
		($cutH===void 0)&& ($cutH=0);
		($offX===void 0)&& ($offX=0);
		($offY===void 0)&& ($offY=0);
		Laya.timer.frameOnce(1,ScreenshotUtil,function(){
			var _w=Math.floor($cutW||sp.width);
			var _h=Math.floor($cutH||sp.height);
			var htmlC=sp.drawToCanvas(_w,_h,$offX,$offY);
			var texture=new Texture(htmlC);
			var sprite=new Sprite();
			sprite.graphics.drawTexture(texture,0,0,_w,_h);
			Laya.stage.addChild(sprite);
		});
	}

	ScreenshotUtil.captureToTexture=function(sp,complete,$cutW,$cutH,$offX,$offY){
		($cutW===void 0)&& ($cutW=0);
		($cutH===void 0)&& ($cutH=0);
		($offX===void 0)&& ($offX=0);
		($offY===void 0)&& ($offY=0);
		Laya.timer.frameOnce(1,ScreenshotUtil,function(){
			var _w=Math.floor($cutW||sp.width);
			var _h=Math.floor($cutH||sp.height);
			var htmlC=sp.drawToCanvas(_w,_h,$offX,$offY);
			var texture=new Texture(htmlC);
			complete.runWith(texture);
		});
	}

	ScreenshotUtil.captureToSprite=function(sp,complete,$cutW,$cutH,$offX,$offY){
		($cutW===void 0)&& ($cutW=0);
		($cutH===void 0)&& ($cutH=0);
		($offX===void 0)&& ($offX=0);
		($offY===void 0)&& ($offY=0);
		Laya.timer.frameOnce(1,ScreenshotUtil,function(){
			var _w=Math.floor($cutW||sp.width);
			var _h=Math.floor($cutH||sp.height);
			var htmlC=sp.drawToCanvas(_w,_h,$offX,$offY);
			var texture=new Texture(htmlC);
			var sprite=new Sprite();
			sprite.graphics.drawTexture(texture,0,0,_w,_h);
			complete.runWith(sprite);
		});
	}

	ScreenshotUtil.blurCaptureToTexture=function(sp,complete,$cutW,$cutH,$offX,$offY){
		($cutW===void 0)&& ($cutW=0);
		($cutH===void 0)&& ($cutH=0);
		($offX===void 0)&& ($offX=0);
		($offY===void 0)&& ($offY=0);
		sp.filters=[new BlurFilter(8)];
		Laya.timer.frameOnce(1,ScreenshotUtil,function(){
			var _w=Math.floor($cutW||sp.width);
			var _h=Math.floor($cutH||sp.height);
			var htmlC=sp.drawToCanvas(_w,_h,$offX,$offY);
			sp.filters=null;
			var texture=new Texture(htmlC);
			complete.runWith(texture);
		});
	}

	ScreenshotUtil.blurCaptureToSprite=function(sp,complete,$cutW,$cutH,$offX,$offY){
		($cutW===void 0)&& ($cutW=0);
		($cutH===void 0)&& ($cutH=0);
		($offX===void 0)&& ($offX=0);
		($offY===void 0)&& ($offY=0);
		sp.filters=[new BlurFilter(8)];
		Laya.timer.frameOnce(2,ScreenshotUtil,function(){
			var _w=Math.floor($cutW||sp.width);
			var _h=Math.floor($cutH||sp.height);
			var htmlC=sp.drawToCanvas(_w,_h,$offX,$offY);
			sp.filters=null;
			var texture=new Texture(htmlC);
			var sprite=new Sprite();
			sprite.graphics.drawTexture(texture,0,0,_w,_h);
			complete.runWith([sprite,texture,htmlC]);
		});
	}

	ScreenshotUtil.captureToDataURL=function(sp,complete,$cutW,$cutH,$offX,$offY){
		($cutW===void 0)&& ($cutW=0);
		($cutH===void 0)&& ($cutH=0);
		($offX===void 0)&& ($offX=0);
		($offY===void 0)&& ($offY=0);
		Laya.timer.frameOnce(2,ScreenshotUtil,function(){
			var _w=Math.floor($cutW||sp.width);
			var _h=Math.floor($cutH||sp.height);
			var htmlC=sp.drawToCanvas(_w,_h,$offX,$offY);
			complete.runWith(htmlC.getCanvas().toDataURL());
		});
	}

	ScreenshotUtil.captureToDataURL2=function(sp,complete,$cutW,$cutH,$offX,$offY){
		($cutW===void 0)&& ($cutW=0);
		($cutH===void 0)&& ($cutH=0);
		($offX===void 0)&& ($offX=0);
		($offY===void 0)&& ($offY=0);
		Laya.timer.frameOnce(2,ScreenshotUtil,function(){
			var _w=Math.floor($cutW||sp.width);
			var _h=Math.floor($cutH||sp.height);
			var htmlC=sp.drawToCanvas(_w,_h,$offX,$offY);
			complete.runWith(htmlC.getCanvas().toDataURL("image/jpeg",0.7));
		});
	}

	ScreenshotUtil.captureToCanvasFile=function(sp,complete,$cutW,$cutH,$offX,$offY){
		($cutW===void 0)&& ($cutW=0);
		($cutH===void 0)&& ($cutH=0);
		($offX===void 0)&& ($offX=0);
		($offY===void 0)&& ($offY=0);
		Laya.timer.frameOnce(2,ScreenshotUtil,function(){
			var _w=1000;
			var _h=800;
			var htmlC=sp.drawToCanvas(_w,_h,$offX,$offY);
			complete.runWith(htmlC.getCanvas().toTempFilePathSync());
		});
	}

	return ScreenshotUtil;
})()


/**
*字符串工具
*@author huyouwei
*/
//class utils.StringUtils
var StringUtils=(function(){
	function StringUtils(){}
	__class(StringUtils,'utils.StringUtils');
	StringUtils.formate=function(str,__args){
		var args=[];for(var i=1,sz=arguments.length;i<sz;i++)args.push(arguments[i]);
		if(!str)return str;
		for(var i=0;i<args.length;i++){
			str=str.replace(new RegExp("\\{"+i+"\\}","gm"),args[i]);
		}
		return str;
	}

	StringUtils.formateEmail=function(str,ary){
		var paramStr,paramArr,pArr;
		for(var i=0,iLen=ary.length;i < iLen;i++){
			paramStr=ary[i];
			if(paramStr.indexOf("|")>-1){
				paramArr=paramStr.split("|");
				var s=LanguageMgr.Ins.GetLan(paramArr[0])
				pArr=paramArr[1].split("_");
				for (var j=0,jLen=pArr.length;j < jLen;j++){
					s=s.replace(new RegExp("\\{"+j+"\\}","gm"),LanguageMgr.Ins.GetLan(pArr[j]));
				}
				str=str.replace(new RegExp("\\{"+i+"\\}","gm"),s);
			}
			else {
				str=str.replace(new RegExp("\\{"+i+"\\}","gm"),LanguageMgr.Ins.GetLan(ary[i]));
			}
		}
		if (str.indexOf("<font")==-1){
			str=str.replace(/</gi,'&lt;');
			str=str.replace(/>/gi,'&gt;');
		}
		return str;
	}

	StringUtils.fillArray=function(arr,str,type){
		var temp=StringUtils.clone(arr);
		if (Boolean(str)){
			var a=str.split(",");
			for (var i=0,n=Math.min(temp.length,a.length);i < n;i++){
				var value=a[i];
				temp[i]=(value=="true" ? true :(value=="false" ? false :value));
				if (type !=null){
					temp[i]=type(value);
				}
			}
		}
		return temp;
	}

	StringUtils.clone=function(source){
		var bytes=new ByteArray();
		bytes.writeObject(source);
		bytes.position=0;
		return bytes.readObject();
	}

	StringUtils.parseInt64=function(value){
		var high=0;
		var low=0;
		if(value.high < 0){
			high=value.high+4294967296;
			}else{
			high=value.high;
		}
		if(value.low < 0){
			low=value.low+4294967296;
			}else{
			low=value.low;
		};
		var lowStr=low.toString(16);
		var len=lowStr.length;
		if(len < 8){
			for (var i=0;i < 8-len;i++){
				lowStr="0"+lowStr;
			}
		};
		var str=high.toString(16)+lowStr;
		return str;
	}

	StringUtils.subName=function(nickName,showWidth,fontSize){
		var endIndex=nickName.length;
		var numWidth=0;
		for(var i=0;i < nickName.length;i++){
			var char=nickName.substring(i,i+1);
			if((char >="a" && char <="z")
				||(char >="A" && char <="Z")
			||(char >="0" && char <="9")){
				numWidth=numWidth+fontSize/2;
				}else{
				numWidth=numWidth+fontSize;
			}
			if(numWidth >=showWidth){
				endIndex=i;
				break ;
			}
		}
		endIndex=endIndex >=nickName.length?nickName.length:endIndex;
		var newName=nickName.substring(0,endIndex);
		newName=endIndex < nickName.length?newName+".." :newName;
		return newName;
	}

	StringUtils.getNumStr=function($value){
		return $value < 10 ? "0"+$value :""+$value;
	}

	return StringUtils;
})()


/**
*游戏url挂参
*@author chengwen.yi
*
*/
//class utils.UrlParam
var UrlParam=(function(){
	function UrlParam(){}
	__class(UrlParam,'utils.UrlParam');
	__getset(1,UrlParam,'maxVersion',function(){
		if(UrlParam._PARAMS){
			return UrlParam._PARAMS["maxVer"]
		}
		return "";
	});

	__getset(1,UrlParam,'PARAMS',function(){
		return UrlParam._PARAMS;
		},function(value){
		UrlParam._PARAMS=value;
	});

	// }
	__getset(1,UrlParam,'ROOTURL',function(){
		var href=Browser.window.location.href.split("?")[0];
		return href.substring(0,href.lastIndexOf("/")+1);
	});

	__getset(1,UrlParam,'version',function(){
		if(UrlParam._PARAMS){
			return UrlParam._PARAMS["maxVer"]+"."+UrlParam._PARAMS["minVer"];
		}
		return "";
	});

	UrlParam._PARAMS=null;
	UrlParam.maxVer="maxVer";
	UrlParam.minVer="minVer";
	UrlParam.isShowState="isShowState";
	UrlParam.isDebug="isDebug";
	UrlParam.isTest="isTest";
	UrlParam.WEB_HTTP="WEB_HTTP";
	UrlParam.HTTP_HOST="HTTP_HOST";
	UrlParam.HTTP_PORT="HTTP_PORT";
	UrlParam.PLID="PLID";
	UrlParam.QQPATH="QQPATH";
	UrlParam.RES_HOST_URL="RES_HOST_URL";
	return UrlParam;
})()


//class dao.ActivityConditionModel
var ActivityConditionModel=(function(){
	function ActivityConditionModel(){}
	__class(ActivityConditionModel,'dao.ActivityConditionModel');
	ActivityConditionModel.parset_s_activitycondition=function(){
		var arr=ConfigMgr.getJsonConfigByName("t_s_activitycondition");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var vo=new ActivityConditionVO();
			vo.ConditionId=item.ConditionId;
			vo.ActivityId=item.ActivityId;
			vo.Rewards=item.Rewards;
			vo.Type=item.Type;
			vo.GetType=item.GetType;
			vo.Order=item.Order;
			vo.Value1=item.Value1;
			vo.Value2=item.Value2;
			vo.Value3=item.Value3;
			vo.IsExist=item.IsExist;
			ActivityConditionModel._allActivityCondition.push(vo);
			ActivityConditionModel._allDic.set(vo.ConditionId,vo);
		}
	}

	ActivityConditionModel.allActivityConditionConfig=function(){
		if (!ActivityConditionModel._allActivityCondition){
			ActivityConditionModel._allActivityCondition=[];
			ActivityConditionModel._allDic=new Dictionary();
			ActivityConditionModel.parset_s_activitycondition();
		}
		return ActivityConditionModel._allActivityCondition;
	}

	ActivityConditionModel.getActivityConditionVO=function(conditionId){
		ActivityConditionModel.allActivityConditionConfig();
		if (ActivityConditionModel._allDic==null){
			console.log("_allDic == null");
			debugger;
		}
		var item;
		for(var $each_item in ActivityConditionModel._allActivityCondition){
			item=ActivityConditionModel._allActivityCondition[$each_item];
			if (item.ConditionId==conditionId){
				return item;
			}
		}
		return null;
	}

	ActivityConditionModel.getActivityConditionData=function(activityId){
		var result=[];
		ActivityConditionModel.allActivityConditionConfig();
		var i;
		for(var $each_i in ActivityConditionModel._allActivityCondition){
			i=ActivityConditionModel._allActivityCondition[$each_i];
			if (i.ActivityId==activityId){
				result.push(i);
			}
		}
		return result;
	}

	ActivityConditionModel._allActivityCondition=null;
	ActivityConditionModel._allDic=null;
	return ActivityConditionModel;
})()


//class dao.ActivityModel
var ActivityModel=(function(){
	function ActivityModel(){}
	__class(ActivityModel,'dao.ActivityModel');
	/**活动配置列表的所有数据*/
	__getset(1,ActivityModel,'allActivityConfig',function(){
		if (!ActivityModel._allActivity){
			ActivityModel._allActivity=[];
			ActivityModel.parset_s_activity();
		}
		return ActivityModel._allActivity;
	});

	ActivityModel.parset_s_activity=function(){
		var arr=ConfigMgr.getJsonConfigByName("t_s_activity");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var vo=new ActivityVO();
			vo.ActivityId=item.ActivityId;
			vo.ActivityName=item.ActivityName;
			vo.Type=item.Type;
			vo.Order=item.Order;
			vo.IsExist=item.IsExist;
			vo.Desc=item.Desc;
			vo.Param1=item.Param1;
			vo.Param2=item.Param2;
			vo.Param3=item.Param3;
			vo.Param4=item.Param4;
			vo.Param5=item.Param5;
			ActivityModel._allActivity.push(vo);
		}
	}

	ActivityModel.getActivityData=function(activityId){
		var result;
		var i;
		for(var $each_i in ActivityModel.allActivityConfig){
			i=ActivityModel.allActivityConfig[$each_i];
			if (i.ActivityId==activityId){
				result=i;
				break ;
			}
		}
		return result;
	}

	ActivityModel.getActivityAllVO=function(){
		var result=[];
		var i;
		for(var $each_i in ActivityModel.allActivityConfig){
			i=ActivityModel.allActivityConfig[$each_i];
			if (i.Type==1){
				result.push(i);
			}
		}
		return result;
	}

	ActivityModel._allActivity=null;
	return ActivityModel;
})()


/**
*AppleGame数据模型
*/
//class dao.AppleGameModel
var AppleGameModel=(function(){
	function AppleGameModel(){}
	__class(AppleGameModel,'dao.AppleGameModel');
	__getset(1,AppleGameModel,'allConfig',function(){
		if(!AppleGameModel._allConfig){
			AppleGameModel._allConfig=[];
			AppleGameModel.parset_s_config();
		}
		return AppleGameModel._allConfig;
	});

	AppleGameModel.parset_s_config=function(){
		var arr=ConfigMgr.getJsonConfigByName("t_s_applegame");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItem=new AppleGameVO();
			configItem.ID=item.ID;
			configItem.Round=item.Round;
			configItem.TimeOut=item.TimeOut;
			configItem.WindMin=item.WindMin;
			configItem.WindMax=item.WindMax;
			configItem.LineLength=item.AuxiliaryLineLength;
			configItem.Fruit=item.Fruit;
			configItem.ChildPosition=item.ChildPosition;
			configItem.Wood=item.Wood;
			configItem.WoodHigh=item.WoodHigh;
			configItem.Woodspeed=item.Woodspeed;
			AppleGameModel._allConfig.push(configItem);
		}
	}

	AppleGameModel.getConfigData=function(configId){
		var result;
		var i;
		for(var $each_i in AppleGameModel.allConfig){
			i=AppleGameModel.allConfig[$each_i];
			if(i.ID==configId){
				result=i;
				break ;
			}
		}
		return result;
	}

	AppleGameModel._allConfig=null;
	return AppleGameModel;
})()


/**
*炮弹配置表
*/
//class dao.BombModel
var BombModel=(function(){
	function BombModel(){}
	__class(BombModel,'dao.BombModel');
	BombModel.parsets_bomb=function(){
		BombModel._bombArr=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_bomb");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItemData=new BombVO();
			configItemData.AddOrSubtract=item.AddOrSubtract;
			configItemData.AirResistance=item.AirResistance;
			configItemData.Effect=item.Effect;
			configItemData.EffectDecay=item.EffectDecay;
			configItemData.Effective=item.Effective;
			configItemData.ID=item.ID;
			configItemData.EffectiveMode=item.EffectiveMode;
			configItemData.Name=item.Name;
			configItemData.ExplodeTime1=item.ExplodeTime1;
			configItemData.ExplodeTime2=item.ExplodeTime2;
			configItemData.ExplodeTime3=item.ExplodeTime3;
			configItemData.ExplodeTime4=item.ExplodeTime4;
			configItemData.FlySpeed=item.FlySpeed;
			configItemData.FriendEffect=item.FriendEffect;
			configItemData.Gravity=item.Gravity;
			configItemData.HitAnger=item.HitAnger;
			configItemData.HitEdge=item.HitEdge;
			configItemData.HitHole=item.HitHole;
			configItemData.Mass=item.Mass;
			configItemData.MissAnger=item.MissAnger;
			configItemData.MissEdge=item.MissEdge;
			configItemData.MissHole=item.MissHole;
			configItemData.PerformanceID=item.PerformanceID;
			configItemData.Radius=item.Radius;
			configItemData.TriggerType=item.TriggerType;
			configItemData.WindForce=item.WindForce;
			BombModel._bombArr.push(configItemData);
		}
	}

	BombModel.parsets_bombPerformance=function(){
		var arr=ConfigMgr.getJsonConfigByName("t_s_bomb_performance");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItemData=new BombPerformanceVO();
			configItemData.BlastSoundID=item.BlastSoundID;
			configItemData.FireSoundID=item.FireSoundID;
			configItemData.FlyArgument=item.FlyArgument;
			configItemData.FlySoundID=item.FlySoundID;
			configItemData.FlyType=item.FlyType;
			configItemData.ID=item.ID;
			configItemData.LineType=item.LineType;
			configItemData.Name=item.Name;
			configItemData.RotateDamping=item.RotateDamping;
			configItemData.RotateSpeed=item.RotateSpeed;
			configItemData.MissilePath1=item.MissilePath1;
			configItemData.ExplodePath1=item.ExplodePath1;
			configItemData.HitShake=item.HitShake;
			configItemData.MissShake=item.MissShake;
			BombModel._bombPerformanceArr.push(configItemData);
		}
	}

	BombModel.getBombConfigByBombId=function(bombId){
		if (!BombModel._bombArr){
			BombModel.parsets_bomb();
		};
		var result;
		var i;
		for(var $each_i in BombModel._bombArr){
			i=BombModel._bombArr[$each_i];
			if (i.ID==bombId){
				result=i;
				break ;
			}
		}
		return result;
	}

	BombModel.getBombPerformanceConfig=function(displayId){
		if (!BombModel._bombPerformanceArr){
			BombModel._bombPerformanceArr=[];
			BombModel.parsets_bombPerformance();
		};
		var result;
		var i;
		for(var $each_i in BombModel._bombPerformanceArr){
			i=BombModel._bombPerformanceArr[$each_i];
			if (i.ID==displayId){
				result=i;
				break ;
			}
		}
		return result;
	}

	BombModel.getBombPerformanceConfigByBombId=function(bombId){
		var bomb=BombModel.getBombConfigByBombId(bombId);
		var result=BombModel.getBombPerformanceConfig(bomb.PerformanceID);
		return result;
	}

	BombModel._bombArr=null;
	BombModel._bombPerformanceArr=null;
	return BombModel;
})()


//class dao.BufferModel
var BufferModel=(function(){
	function BufferModel(){}
	__class(BufferModel,'dao.BufferModel');
	BufferModel.parset_s_bufferPerformance=function(){
		BufferModel._bufferPerformanceArr={};
		var arr=ConfigMgr.getJsonConfigByName("t_s_buffer_performance");
		var vo;
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			vo=new BufferPerformanceVO();
			vo.BuffEffectID=item.BuffEffectID;
			vo.EffectEnableShowID=item.EffectEnableShowID;
			vo.Icon=item.Icon;
			vo.ID=item.ID;
			vo.Name=item.Name;
			BufferModel._bufferPerformanceArr[vo.ID]=vo;
		}
	}

	BufferModel.parset_s_buffer=function(){
		BufferModel._bufferArr={};
		var arr=ConfigMgr.getJsonConfigByName("t_s_buffer");
		var vo;
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			vo=new BufferVO();
			vo.Display=item.Display;
			vo.Effect=item.Effect;
			vo.EffectCondition=item.EffectCondition;
			vo.EffectiveEvent=item.EffectiveEvent;
			vo.EffectProbability=item.EffectProbability;
			vo.Harm=item.Harm;
			vo.ID=item.ID;
			vo.Immidiate=item.Immidiate;
			vo.Length=item.Length;
			vo.LengthType=item.LengthType;
			vo.Name=item.Name;
			vo.Remove=item.Remove;
			vo.Superposition=item.Superposition;
			vo.Tag=item.Tag;
			vo.Target=item.Target;
			BufferModel._bufferArr[vo.ID]=vo;
		}
	}

	BufferModel.getBufferPerformanceByBufferId=function(bufferId){
		var buffer=BufferModel.getBufferConfig(bufferId);
		var bufferPerfor=BufferModel.getBufferPerformanceConfig(buffer.Display);
		return bufferPerfor;
	}

	BufferModel.getBufferConfig=function(bufferId){
		if (!BufferModel._bufferArr){
			BufferModel.parset_s_buffer();
		}
		return BufferModel._bufferArr[bufferId];
	}

	BufferModel.getBufferPerformanceConfig=function(displayId){
		if (!BufferModel._bufferPerformanceArr){
			BufferModel.parset_s_bufferPerformance();
		}
		return BufferModel._bufferPerformanceArr[displayId];
	}

	BufferModel._bufferArr=null;
	BufferModel._bufferPerformanceArr=null;
	return BufferModel;
})()


/**
*Campaign数据模型
*@author dt.huang
*
*/
//class dao.CampaignModel
var CampaignModel=(function(){
	function CampaignModel(){}
	__class(CampaignModel,'dao.CampaignModel');
	/**配置列表的所有数据*/
	__getset(1,CampaignModel,'allConfig',function(){
		if (!CampaignModel._allConfig){
			CampaignModel.parset_s_config();
		}
		return CampaignModel._allConfig;
	});

	CampaignModel.parset_s_config=function(){
		CampaignModel._allConfig={};
		CampaignModel._allConfigTypeDict={};
		CampaignModel._allConfigTypeGroupDict={};
		var arr=ConfigMgr.getJsonConfigByName("t_s_campaign");
		var group,sub,i=0,n=0;
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItem=new CampaignVO();
			configItem.ID=item.ID;
			configItem.GroupID=item.GroupID;
			configItem.Type=item.Type;
			configItem._Name=item.Name;
			configItem._Desc=item.Desc;
			configItem.Difficult=item.Difficult;
			configItem.NeedLevel=item.NeedLevel;
			configItem.PerCampaignId=item.PerCampaignId;
			group=item.Reward.split("|");
			configItem.Reward=[];
			for (i=0,n=group.length;i < n;i++){
				sub=group[i].split(",");
				configItem.Reward.push({"id":int(sub[0]),"count":int(sub[1])});
			}
			CampaignModel._allConfig[configItem.ID]=configItem;CampaignModel._allConfigTypeDict[configItem.Type]=CampaignModel._allConfigTypeDict[configItem.Type]|| [];
			CampaignModel._allConfigTypeDict[configItem.Type].push(configItem);CampaignModel._allConfigTypeGroupDict[configItem.Type]=CampaignModel._allConfigTypeGroupDict[configItem.Type]|| {};CampaignModel._allConfigTypeGroupDict[configItem.Type][configItem.GroupID]=CampaignModel._allConfigTypeGroupDict[configItem.Type][configItem.GroupID]|| [];
			CampaignModel._allConfigTypeGroupDict[configItem.Type][configItem.GroupID].push(configItem);
		}
	}

	CampaignModel.getConfigData=function(configId){
		dao.CampaignModel.allConfig;
		return CampaignModel._allConfig[configId];
	}

	CampaignModel.getConfigDataByType=function(type){
		dao.CampaignModel.allConfig;
		return CampaignModel._allConfigTypeDict[type];
	}

	CampaignModel.getConfigDataByTypeGroup=function(type,groupId){
		dao.CampaignModel.allConfig;
		if (CampaignModel._allConfigTypeGroupDict[type]){
			return CampaignModel._allConfigTypeGroupDict[type][groupId];
		}
		return null;
	}

	CampaignModel._allConfig=null;
	CampaignModel._allConfigTypeDict=null;
	CampaignModel._allConfigTypeGroupDict=null;
	return CampaignModel;
})()


/**
*Config数据模型
*@author weiqiang.huang
*
*/
//class dao.ConfigModel
var ConfigModel=(function(){
	function ConfigModel(){}
	__class(ConfigModel,'dao.ConfigModel');
	/**Config配置列表的所有数据*/
	__getset(1,ConfigModel,'allConfig',function(){
		if (!ConfigModel._allConfig){
			ConfigModel._allConfig={};
			ConfigModel.parset_s_config();
		}
		return ConfigModel._allConfig;
	});

	ConfigModel.parset_s_config=function(){
		var arr=ConfigMgr.getJsonConfigByName("t_s_config");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItem=new ConfigVO();
			configItem.Id=item.Id;
			configItem.ConfigValue=item.ConfigValue;
			configItem.Description=item.Description;
			configItem.IsClient=item.IsClient;
			ConfigModel._allConfig[configItem.Id]=configItem;
		};
		var group,sub,i=0,j=0,n=0;
		group=ConfigModel._allConfig[1118].ConfigValue.split("|");
		ConfigModel._allConfig[1118].ConfigValue={"id":int(group[0]),"count":int(group[1])};
		ConfigModel._allConfig[1120].ConfigValue=int(ConfigModel._allConfig[1120].ConfigValue);
		group=ConfigModel._allConfig[1119].ConfigValue.split(",");
		for (i=0,n=group.length;i < n;i++){
			group[i]=int(group[i]);
		}
		ConfigModel._allConfig[1119].ConfigValue=group;
		group=ConfigModel._allConfig[1123].ConfigValue.split("|");
		ConfigModel._allConfig[1123].ConfigValue=[];
		for (i=0,n=group.length;i < n;i++){
			sub=group[i].split(",")
			ConfigModel._allConfig[1123].ConfigValue.push({"id":int(sub[0]),"count":int(sub[1])});
		}
		group=ConfigModel._allConfig[1124].ConfigValue.split("|");
		ConfigModel._allConfig[1124].ConfigValue=[];
		for (i=0,n=group.length;i < n;i++){
			sub=group[i].split(",")
			ConfigModel._allConfig[1124].ConfigValue.push({"id":int(sub[0]),"count":int(sub[1])});
		}
	}

	ConfigModel.getConfigData=function(configId){
		return ConfigModel.allConfig[configId];
	}

	ConfigModel.getFirstRechargeReward=function(){
		if (ConfigModel._rechargeArr){
			return ConfigModel._rechargeArr;
		}
		ConfigModel._rechargeArr=[];
		var reward=ConfigModel.getConfigData(1159).ConfigValue;
		var temp=reward.split(',');
		for (var i=0;i < temp.length;i++){
			var str=temp[i];
			var arr1=str.split("|");
			var item=ItemModel.getItemConfigData(arr1[0]);
			item.Number=arr1[1];
			ConfigModel._rechargeArr.push(item);
		}
		return ConfigModel._rechargeArr;
	}

	ConfigModel._allConfig=null;
	ConfigModel._rechargeArr=null;
	return ConfigModel;
})()


//class dao.EffectModel
var EffectModel=(function(){
	function EffectModel(){}
	__class(EffectModel,'dao.EffectModel');
	EffectModel.parset_s_effectPerformance=function(){
		EffectModel._effectConfig=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_effect_performance");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItemData=new EffectPerformanceVO();
			configItemData.BornLabel=item.BornLabel;
			configItemData.Des=item.Des;
			configItemData.DieLabel=item.DieLabel;
			configItemData.EffectAngle=item.EffectAngle;
			configItemData.EffectLayer=item.EffectLayer;
			configItemData.EffectPath=item.EffectPath;
			configItemData.EffectPoint=item.EffectPoint;
			configItemData.FollowType=item.FollowType;
			configItemData.ID=item.ID;
			configItemData.IdleLabel=item.IdleLabel;
			configItemData.IsRotate=item.IsRotate;
			configItemData.IsTurn=item.IsTurn;
			configItemData.Name=item.Name;
			configItemData.OriginalAngle=item.OriginalAngle;
			configItemData.SmoothMode=item.SmoothMode;
			configItemData.SoundID=item.SoundID;
			configItemData.Type=item.Type;
			configItemData.Zoom=item.Zoom;
			EffectModel._effectConfig.push(configItemData);
		}
	}

	EffectModel.getEffectPerformanceById=function(effectId){
		if (!EffectModel._effectConfig){
			EffectModel.parset_s_effectPerformance();
		};
		var result;
		var item;
		for(var $each_item in EffectModel._effectConfig){
			item=EffectModel._effectConfig[$each_item];
			if (item.ID==effectId){
				result=item;
				break ;
			}
		}
		return result;
	}

	EffectModel._effectConfig=null;
	return EffectModel;
})()


/**公会科技**/
//class dao.GuildBuffModel
var GuildBuffModel=(function(){
	function GuildBuffModel(){}
	__class(GuildBuffModel,'dao.GuildBuffModel');
	/**配置列表的所有数据*/
	__getset(1,GuildBuffModel,'allConfig',function(){
		if (!GuildBuffModel._allConfig){
			GuildBuffModel.parset_s_config();
		}
		return GuildBuffModel._allConfig;
	});

	GuildBuffModel.parset_s_config=function(){
		GuildBuffModel._allConfig=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_guildbuff");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItem=new GuildBuffVO();
			configItem.Id=item.Id;
			configItem.GroupId=item.GroupId;
			configItem.PrivilegeId=item.PrivilegeId;
			configItem.Level=item.Level;
			configItem.CostDonate=item.CostDonate;
			configItem.CostTime=item.CostTime;
			configItem.NextId=item.NextId;
			configItem.Icon=item.Icon;
			configItem.Description=item.Description;
			configItem.Effect=item.Effect;
			GuildBuffModel._dataById[configItem.Id]=configItem;
			GuildBuffModel._allConfig.push(configItem);
		}
	}

	GuildBuffModel.getDataById=function(id){
		return GuildBuffModel._dataById[id];
	}

	GuildBuffModel._allConfig=null;
	GuildBuffModel._dataById={};
	return GuildBuffModel;
})()


//class dao.GuildLevelModel
var GuildLevelModel=(function(){
	function GuildLevelModel(){}
	__class(GuildLevelModel,'dao.GuildLevelModel');
	GuildLevelModel.parset_s_item=function(){
		GuildLevelModel._allItemData={};
		GuildLevelModel._levelKeyData={};
		var arr=ConfigMgr.getJsonConfigByName("t_s_guild_level");
		var vo;
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			vo=new GuildLevelVO();
			vo.ID=item.ID;
			vo.Level=item.Level;
			vo.EXP=item.EXP;
			vo.MaxMembers=item.MaxMembers;
			vo.DonationPoints=GuildLevelModel.formatString(item.DonationPoints);
			vo.DonateRewards=GuildLevelModel.formatString(item.DonateRewards);
			GuildLevelModel._allItemData[vo.ID]=vo;
			GuildLevelModel._levelKeyData[vo.Level]=vo;
		}
	}

	GuildLevelModel.getItemDataById=function(id){
		if(!GuildLevelModel._allItemData){
			GuildLevelModel.parset_s_item();
		}
		return GuildLevelModel._allItemData[id];
	}

	GuildLevelModel.getItemDataByLv=function(id){
		if(!GuildLevelModel._levelKeyData){
			GuildLevelModel.parset_s_item();
		}
		return GuildLevelModel._levelKeyData[id];
	}

	GuildLevelModel.formatString=function(data){
		var array=[];
		var pers=data.split('|');
		for(var i=0;i<pers.length;i++){
			var per=pers[i].split(',');
			array[i]=per[1];
		}
		return array;
	}

	GuildLevelModel._allItemData=null;
	GuildLevelModel._levelKeyData=null;
	return GuildLevelModel;
})()


//class dao.GuildModel
var GuildModel=(function(){
	function GuildModel(){}
	__class(GuildModel,'dao.GuildModel');
	GuildModel.parsets_guild_boxaward=function(){
		GuildModel._boxAwardArr=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_guildboxaward");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var vo=new GuildBoxAwardVO();
			vo.Division=item.Division;
			vo.ItemID=item.ItemID;
			vo.MailID=item.MailID;
			vo.VictoryCount=item.VictoryCount;
			GuildModel._boxAwardArr.push(vo);
		}
	}

	GuildModel.parsets_guild_donate=function(){
		GuildModel._donateArr=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_guild_donate");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var vo=new GuildDonateVO();
			vo.Division=item.Division;
			vo.DonateCommonMax=item.DonateCommonMax;
			vo.DonateCommons=item.DonateCommons;
			vo.DonateRareMax=item.DonateRareMax;
			vo.DonateRares=item.DonateRares;
			vo.ID=item.ID;
			vo.RequireCommons=item.RequireCommons;
			vo.RequireRares=item.RequireRares;
			GuildModel._donateArr.push(vo);
		}
	}

	GuildModel.getGuildDonateCfgByDivison=function(divId){
		if (!GuildModel._donateArr){
			GuildModel.parsets_guild_donate();
		};
		var result;
		var i;
		for(var $each_i in GuildModel._donateArr){
			i=GuildModel._donateArr[$each_i];
			if (i.Division==divId){
				result=i;
				break ;
			}
		}
		return result;
	}

	GuildModel.getGuildAwardCfgByDivison=function(divId){
		if (!GuildModel._boxAwardArr){
			GuildModel.parsets_guild_boxaward();
		};
		var arr=[];
		var i;
		for(var $each_i in GuildModel._boxAwardArr){
			i=GuildModel._boxAwardArr[$each_i];
			if (i.Division==divId){
				arr.push(i);
			}
		}
		return arr;
	}

	GuildModel.getGuildAwardVO=function(divId,cnt){
		var result;
		var arr=GuildModel.getGuildAwardCfgByDivison(divId);
		for (var i=0;i < arr.length;i++){
			var item=arr [i];
			if (cnt <=item.VictoryCount){
				result=item;
				break ;
			}
			else{
				if (i==9){
					result=item;
					break ;
				}
			}
		}
		return result;
	}

	GuildModel.getBoxLevel=function(winNum){
		if (!GuildModel._boxAwardArr){
			GuildModel.parsets_guild_boxaward();
		};
		var boxLevel=0;
		for (var i=0;i < 10;i++){
			var item=GuildModel._boxAwardArr [i];
			var item1=GuildModel._boxAwardArr [i+1];
			if (i < 9){
				if (winNum >=item.VictoryCount && winNum < item1.VictoryCount){
					boxLevel=i+1;
					break ;
				}
			}
			else{
				if (winNum >=item.VictoryCount){
					boxLevel=i+1;
					break ;
				}
			}
		}
		return boxLevel;
	}

	GuildModel.getNeedVictoryCnt=function(winNum){
		if (!GuildModel._boxAwardArr){
			GuildModel.parsets_guild_boxaward();
		};
		var cnt=0;
		for (var i=0;i < 10;i++){
			var item=GuildModel._boxAwardArr [i];
			if (winNum < item.VictoryCount){
				cnt=item.VictoryCount;
				break ;
			}
			else{
				if (i==9){
					cnt=item.VictoryCount;
				}
			}
		}
		return cnt;
	}

	GuildModel._donateArr=null;
	GuildModel._boxAwardArr=null;
	return GuildModel;
})()


/**
*物品数据模型
*@author weiqiang.huang
*
*/
//class dao.ItemModel
var ItemModel=(function(){
	function ItemModel(){}
	__class(ItemModel,'dao.ItemModel');
	/**物品配置列表的所有数据*/
	__getset(1,ItemModel,'allItemConfig',function(){
		if (!ItemModel._allConfigObj){
			ItemModel.parset_s_item();
		}
		return ItemModel._allConfigObj;
	});

	__getset(1,ItemModel,'skillItems',function(){
		if (!ItemModel._skillItems){
			ItemModel._skillItems=ItemModel.getItemByType(3);
		}
		return ItemModel._skillItems;
	});

	ItemModel.parset_s_item=function(){
		ItemModel._allConfigObj={};
		ItemModel._allConfigObjByType={};
		var arr=ConfigMgr.getJsonConfigByName("t_s_item");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItem=new ItemVO();
			configItem.ItemID=item.ItemID;
			configItem.Name=item.Name;
			configItem.Type=item.Type;
			configItem.SubType=item.SubType;
			configItem.SexLimit=item.SexLimit;
			configItem.Rarity=item.Rarity;
			configItem.Level=item.Level;
			configItem.Time=item.Time;
			configItem.Icon=item.Icon;
			configItem.Avatar=item.Avatar;
			configItem.OpenBoxAnim=item.OpenBoxAnim;
			configItem.Desc=item.Desc;
			configItem.Param1=item.Param1;
			configItem.Param2=item.Param2;
			ItemModel._allConfigObj[configItem.ItemID]=configItem;ItemModel._allConfigObjByType[configItem.Type]=ItemModel._allConfigObjByType[configItem.Type]|| [];
			ItemModel._allConfigObjByType[configItem.Type].push(configItem);
		}
	}

	ItemModel.getItemConfigData=function(itemId){
		ItemModel.allItemConfig;
		return ItemModel._allConfigObj[itemId];
	}

	ItemModel.getItemByType=function(type){
		ItemModel.allItemConfig;
		return ItemModel._allConfigObjByType[type] || [];
	}

	ItemModel.getItemBySkillId=function(skillId){
		var arr=ItemModel.skillItems;
		var result;
		var i;
		for(var $each_i in arr){
			i=arr[$each_i];
			if (i.Param1==skillId){
				result=i;
				break ;
			}
		}
		return result;
	}

	ItemModel.getItemByArena=function(arena){
		var items=ItemModel.getItemByType(4);
		var result=[];
		for (var i=0,n=items.length,item;i < n;i++){
			item=items[i];
			if (item.Level==arena && item.Type==4 && (item.SubType==3 || item.SubType==2 || item.SubType==1)){
				result.push(item);
			}
		}
		return result;
	}

	ItemModel.getItemName=function(itemId){
		var item=ItemModel.getItemConfigData(itemId);
		return item !=null ? LanguageMgr.Ins.GetLan(item.Name):"";
	}

	ItemModel._allConfigObj=null;
	ItemModel._allConfigObjByType=null;
	ItemModel._skillItems=null;
	return ItemModel;
})()


/**
*语言包管理器
*@author weiqiang.huang
*/
//class dao.LanguageMgr
var LanguageMgr=(function(){
	function LanguageMgr(){
		this._objData=null;
		this._country="Chinese";
		this._dicCountry=null;
		this._countryLast="Chinese";
		this.countryAry=["English","简体中文"];
		this.countrySet=["English","Chinese"];
		this._reg=new RegExp("\\{(\\d+)\\}");
	}

	__class(LanguageMgr,'dao.LanguageMgr');
	var __proto=LanguageMgr.prototype;
	__proto.setup=function(){
		var data=ConfigMgr.getJsonConfigByName("t_s_language");
		this._objData={};
		var entity;
		for (var i=0;i < data.length;i++){
			entity=data[i];
			this._objData[entity.ID]=entity;
		}
	}

	/**
	*获取对应的语言
	*@param translationId Id
	*@param key 那个国家
	*@param args 参数
	*/
	__proto.GetLan=function(translationId,__args){
		var args=[];for(var i=1,sz=arguments.length;i<sz;i++)args.push(arguments[i]);
		return this.GetTranslationWithArray(translationId,this.country,args);
	}

	__proto.GetAssignLan=function(country,translationId,__args){
		var args=[];for(var i=2,sz=arguments.length;i<sz;i++)args.push(arguments[i]);
		return this.GetTranslationWithArray(translationId,country,args);
	}

	__proto.GetTranslationWithArray=function(translationId,country,argsArr){
		if(!this._objData)return"";
		var data=this._objData[translationId] ? this._objData[translationId] :translationId;
		var input=data ? data[country] :translationId;
		if(input==undefined){
			input=translationId;
		}
		return this.replaceStr(input,argsArr);
	}

	__proto.replaceStr=function(input,argsArr){
		if(argsArr && argsArr.length>0){
			var obj=this._reg.exec(input);
			while(obj && argsArr.length > 0){
				var id=int(obj[1]);
				var str=String(argsArr[id]);
				if(id >=0 && id < argsArr.length){
					var idx=str.indexOf("$")
					if(idx>-1){
						str=str.slice(0,idx)+"$"+str.slice(idx);
					}
					input=input.replace(this._reg,str);
				}
				else{
					input=input.replace(this._reg,"{}");
				}
				obj=this._reg.exec(input);
			}
		}
		return input;
	}

	__proto.getBattleLanguagePath=function(fileName){
		var path="";
		if(this._country=="English"){
			return "language/English/battle/menu/"+fileName;
			}else if(this._country=="Chinese"){
			return "language/Chinese/battle/menu/"+fileName;
		}
		return path;
	}

	__proto.getLanguagePath=function(fileName){
		return StringUtils.formate("language/{0}/{1}",this.country,fileName);
	}

	__proto.getUIAnimationLanguagePath=function(aniName){
		var path="";
		if(this._country=="English"){
			return "assets/uianimation/"+aniName+"_en.ani";
			}else if(this._country=="Chinese"){
			return "assets/uianimation/"+aniName+"_zh.ani";
		}
		return path;
	}

	__getset(0,__proto,'countryIndex',function(){
		var idx=this.countryAry.indexOf(this._country);
		if(idx==-1){
			idx=this.countrySet.indexOf(this._country);
		}
		return idx;
	});

	/**
	*当前版本是那个国家
	*@return
	*
	*/
	__getset(0,__proto,'country',function(){
		return this._country;
		},function(value){
		this._country=value;
	});

	__getset(0,__proto,'isChinese',function(){
		return this._country=="Chinese";
	});

	__getset(0,__proto,'countryLast',function(){
		return this._countryLast;
		},function(value){
		this._countryLast=value;
	});

	__getset(1,LanguageMgr,'Ins',function(){
		if(dao.LanguageMgr._instance==null){
			LanguageMgr._instance=new LanguageMgr();
		}
		return dao.LanguageMgr._instance;
	});

	LanguageMgr._instance=null;
	return LanguageMgr;
})()


/**
*角色等级数据模型
*/
//class dao.LevelModel
var LevelModel=(function(){
	function LevelModel(){}
	__class(LevelModel,'dao.LevelModel');
	__getset(1,LevelModel,'levelConfig',function(){
		if (!LevelModel._levelConfig){
			LevelModel._levelConfig=[];
			LevelModel.parset_s_living();
		}
		return LevelModel._levelConfig;
	});

	__getset(1,LevelModel,'maxLevel',function(){
		LevelModel._maxLevel=LevelModel.levelConfig.length;
		return LevelModel._maxLevel;
	});

	LevelModel.parset_s_living=function(){
		var arr=ConfigMgr.getJsonConfigByName("t_s_living");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItemData=new LevelVO();
			configItemData.Block=item.Block;
			configItemData.Crit=item.Crit;
			configItemData.Damage=item.Damage;
			configItemData.Hp=item.Hp;
			configItemData.Id=item.Id;
			configItemData.Level=item.Level;
			configItemData.Name=item.Name;
			configItemData.Skill=item.Skill;
			configItemData.Speed=item.Speed;
			configItemData.Talentskill=item.Talentskill;
			configItemData.Type=item.Type;
			LevelModel._levelConfig.push(configItemData);
		}
	}

	LevelModel.getPropsByLevel=function(lvl){
		LevelModel.levelConfig;
		var result;
		var item;
		for(var $each_item in LevelModel._levelConfig){
			item=LevelModel._levelConfig[$each_item];
			if (item.Level==lvl){
				result=item;
				break ;
			}
		}
		return result;
	}

	LevelModel._levelConfig=null;
	LevelModel._maxLevel=0;
	return LevelModel;
})()


//class dao.NPCModel
var NPCModel=(function(){
	function NPCModel(){}
	__class(NPCModel,'dao.NPCModel');
	NPCModel.getNpcPerformanceByNpcId=function(npcId){
		var npcConfig=NPCModel.getNPCConfigData(npcId);
		var npcPerformance=NPCModel.getNpcPerformanceConfigData(npcConfig.DisplayID);
		return npcPerformance;
	}

	NPCModel.getNpcPerformanceConfigData=function(displayId){
		if (!NPCModel._npcPerformanceConfig){
			NPCModel.parset_s_npcPerformance();
		};
		var result;
		var item;
		for(var $each_item in NPCModel._npcPerformanceConfig){
			item=NPCModel._npcPerformanceConfig[$each_item];
			if (item.ID==displayId){
				result=item;
				break ;
			}
		}
		return result;
	}

	NPCModel.getNPCConfigData=function(npcID){
		if (!NPCModel._npcConfig){
			NPCModel.parset_s_npc();
		};
		var result;
		var item;
		for(var $each_item in NPCModel._npcConfig){
			item=NPCModel._npcConfig[$each_item];
			if (item.ID==npcID){
				result=item;
				break ;
			}
		}
		return result;
	}

	NPCModel.parset_s_npcPerformance=function(){
		NPCModel._npcPerformanceConfig=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_npc_performance");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItemData=new NpcPerformanceVO();
			configItemData.Icon=item.Icon;
			configItemData.ActConfig=item.ActConfig;
			configItemData.ActEffect=item.ActEffect;
			configItemData.AnimationName=item.AnimationName;
			configItemData.AttackEffect=item.AttackEffect;
			configItemData.AttackSound=item.AttackSound;
			configItemData.AttackDelay=item.AttackDelay;
			configItemData.BombDelay=item.BombDelay;
			configItemData.BornDubbing=item.BornDubbing;
			configItemData.BornEffect=item.BornEffect;
			configItemData.DeadMove=item.DeadMove;
			configItemData.DeadTime=item.DeadTime;
			configItemData.DefaultBornAnimation=item.DefaultBornAnimation;
			configItemData.DieDubbing=item.DieDubbing;
			configItemData.DieGrey=item.DieGrey;
			configItemData.EnterEffect=item.EnterEffect;
			configItemData.ID=item.ID;
			configItemData.IdleDubbing=item.IdleDubbing;
			configItemData.Name=item.Name;
			configItemData.Offsets=item.Offsets;
			configItemData.ParticlePosition=item.ParticlePosition;
			configItemData.SummonDelay=item.SummonDelay;
			configItemData.SummonEffect=item.SummonEffect;
			configItemData.SummonMode=item.SummonMode;
			configItemData.SummonTime=item.SummonTime;
			configItemData.SummonZoom=item.SummonZoom;
			configItemData.Tombstone=item.Tombstone;
			configItemData.TriggerID=item.TriggerID;
			configItemData.ViewActionBar=item.ViewActionBar;
			configItemData.WalkDubbingOver=item.WalkDubbingOver;
			configItemData.WalkDubbingStand=item.WalkDubbingStand;
			configItemData.WalkDubbingStart=item.WalkDubbingStart;
			configItemData.Zoom=item.Zoom;
			NPCModel._npcPerformanceConfig.push(configItemData);
		}
	}

	NPCModel.parset_s_npc=function(){
		NPCModel._npcConfig=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_npc");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItemData=new NpcVO();
			configItemData.ID=item.ID;
			configItemData.AABB=item.AABB;
			configItemData.ActionPoint=item.ActionPoint;
			configItemData.ActionPointRestore=item.ActionPointRestore;
			configItemData.Agility=item.Agility;
			configItemData.AIScirpt=item.AIScirpt;
			configItemData.Attack=item.Attack;
			configItemData.BombID=item.BombID;
			configItemData.CanKnock=item.CanKnock;
			configItemData.Critical=item.Critical;
			configItemData.DeadEffect=item.DeadEffect;
			configItemData.DefaultAttack=item.DefaultAttack;
			configItemData.DefaultDelay=item.DefaultDelay;
			configItemData.Defence=item.Defence;
			configItemData.DialogPosition=item.DialogPosition;
			configItemData.Diamond=item.Diamond;
			configItemData.DisplayID=item.DisplayID;
			configItemData.DisplayPriority=item.DisplayPriority;
			configItemData.DropID=item.DropID;
			configItemData.Ethnicity=item.Ethnicity;
			configItemData.Exp=item.Exp;
			configItemData.FirePoint=item.FirePoint;
			configItemData.FocusOffset=item.FocusOffset;
			configItemData.FocusViewScale=item.FocusViewScale;
			configItemData.Gold=item.Gold;
			configItemData.HitRate=item.HitRate;
			configItemData.HP=item.HP;
			configItemData.HPPosition=item.HPPosition;
			configItemData.JoinFight=item.JoinFight;
			configItemData.Level=item.Level;
			configItemData.LivingTurns=item.LivingTurns;
			configItemData.MeleeRange=item.MeleeRange;
			configItemData.MovingAABB=item.MovingAABB;
			configItemData.MovingRange=item.MovingRange;
			configItemData.MovingSpeed=item.MovingSpeed;
			configItemData.MovingType=item.MovingType;
			configItemData.OwnerType=item.OwnerType;
			configItemData.PassiveKillID=item.PassiveKillID;
			configItemData.Penetration=item.Penetration;
			configItemData.Sex=item.Sex;
			configItemData.Silver=item.Silver;
			configItemData.SkillID=item.SkillID;
			configItemData.Tag=item.Tag;
			configItemData.TalkID=item.TalkID;
			configItemData.TeamFlag=item.TeamFlag;
			configItemData.Type=item.Type;
			NPCModel._npcConfig.push(configItemData);
		}
	}

	NPCModel._npcConfig=null;
	NPCModel._npcPerformanceConfig=null;
	return NPCModel;
})()


//class dao.PrivilegeModel
var PrivilegeModel=(function(){
	function PrivilegeModel(){}
	__class(PrivilegeModel,'dao.PrivilegeModel');
	/**神秘商店配置列表的所有数据*/
	__getset(1,PrivilegeModel,'allItemList',function(){
		if (!PrivilegeModel._allItemList)PrivilegeModel.parset_s_temp();
		return PrivilegeModel._allItemList;
	});

	PrivilegeModel.parset_s_temp=function(){
		PrivilegeModel._allItemList={};
		PrivilegeModel._typesItemList={};
		PrivilegeModel._vipItemList={};
		var arr=ConfigMgr.getJsonConfigByName("t_s_privilege");
		var vo;
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			vo=new PrivilegeVO();
			vo.Id=item.Id;
			vo.MasterType=item.MasterType;
			vo.SonType=item.SonType;
			vo.Level=item.Level;
			vo.Param1=item.Param1;
			vo.Param2=item.Param2;
			vo.Param3=item.Param3;
			PrivilegeModel._allItemList[vo.Id]=vo;
			PrivilegeModel._typesItemList[ vo.MasterType+"_"+vo.SonType]=vo;
			PrivilegeModel._vipItemList[ vo.MasterType+"_"+vo.Level+"_"+vo.SonType]=vo;
		}
	}

	PrivilegeModel.getItemDataById=function(id){
		if (!PrivilegeModel._allItemList)PrivilegeModel.parset_s_temp();
		return PrivilegeModel._allItemList[id];
	}

	PrivilegeModel.getItemDataByTypes=function(types){
		if(!PrivilegeModel._typesItemList)PrivilegeModel.parset_s_temp();
		return PrivilegeModel._typesItemList[types];
	}

	PrivilegeModel.getItemDataByVipTypes=function(types){
		if(!PrivilegeModel._vipItemList)PrivilegeModel.parset_s_temp();
		return PrivilegeModel._vipItemList[types];
	}

	PrivilegeModel.getPrivilegePrice=function(price,types){
		var privilegeVO=dao.PrivilegeModel.getItemDataByTypes(types);
		price=Math.floor(price *(1+(privilegeVO.Param1/100)));
		return price;
	}

	PrivilegeModel._allItemList=null;
	PrivilegeModel._typesItemList=null;
	PrivilegeModel._vipItemList=null;
	return PrivilegeModel;
})()


//class dao.PveModel
var PveModel=(function(){
	function PveModel(){}
	__class(PveModel,'dao.PveModel');
	__getset(1,PveModel,'allConfig',function(){
		if (PveModel._allConfig==null){
			PveModel.parse_s_config();
		}
		return PveModel._allConfig;
	});

	PveModel.parse_s_config=function(){
		PveModel._allConfig={};
		var arr=ConfigMgr.getJsonConfigByName("t_s_pve");
		var configItem;
		var group,sub;
		var i=0,j=0,m=0,n=0;
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			configItem=new PveVO();
			configItem.ID=item.ID;
			configItem.RewardTurn=[];
			if (Boolean(item.RewardTurn)){
				group=item.RewardTurn.split("|");
				for (i=0,n=group.length;i < n;i++){
					sub=group[i].split(",");
					configItem.RewardTurn.push({"id":int(sub[0]),"count":int(sub[1])});
				}
			}
			configItem.Reward=[];
			if (Boolean(item.Reward)){
				group=item.Reward.split("|");
				for (i=0,n=group.length;i < n;i++){
					sub=group[i].split(",");
					configItem.Reward.push({"id":int(sub[0]),"count":int(sub[1])});
				}
			}
			configItem.MonsterDesc=item.MonsterDesc;
			configItem.CardDesc=item.CardDesc;
			PveModel._allConfig[configItem.ID]=configItem;
		}
		PveConst.MAX_STAGE=arr.length;
	}

	PveModel.getConfigById=function(id){
		PveModel.allConfig;
		return PveModel._allConfig[id];
	}

	PveModel._allConfig=null;
	return PveModel;
})()


//class dao.PVPModel
var PVPModel=(function(){
	function PVPModel(){}
	__class(PVPModel,'dao.PVPModel');
	__getset(1,PVPModel,'seasonTime',function(){
		if (!PVPModel._seasonTimeArr){
			PVPModel.parsets_seasonTime();
		}
		return PVPModel._seasonTimeArr;
	});

	PVPModel.getSeasonList=function(season){
		if (!PVPModel._seasonArr){
			PVPModel.parsets_season();
		};
		var arr=[];
		var i;
		for(var $each_i in PVPModel._seasonArr){
			i=PVPModel._seasonArr[$each_i];
			if (i.SeasonTimes==season){
				arr.push(i);
			}
		}
		return arr;
	}

	PVPModel.getMaxStar=function(div,season){
		var star=0;
		if (!PVPModel._seasonArr){
			PVPModel.parsets_season();
		};
		var result;
		var i;
		for(var $each_i in PVPModel._seasonArr){
			i=PVPModel._seasonArr[$each_i];
			if (season==i.SeasonTimes && i.Division==div){
				star++;
			}
		}
		return star;
	}

	PVPModel.getSeasonReward=function(div,star,season){
		if (!PVPModel._seasonArr){
			PVPModel.parsets_season();
		};
		var result;
		var i;
		for(var $each_i in PVPModel._seasonArr){
			i=PVPModel._seasonArr[$each_i];
			if (i.SeasonTimes==season && i.Division==div && i.StarNum==star){
				result=i;
				break ;
			}
		}
		return result;
	}

	PVPModel.getPvpConfigByID=function(pvpId){
		if (!PVPModel._pvpArr){
			PVPModel.parsets_pvp();
		};
		var result;
		var i;
		for(var $each_i in PVPModel._pvpArr){
			i=PVPModel._pvpArr[$each_i];
			if (i.ID==pvpId){
				result=i;
				break ;
			}
		}
		return result;
	}

	PVPModel.getPvpConfigByTypeAndDivison=function(type,divison){
		if (!PVPModel._pvpArr){
			PVPModel.parsets_pvp();
		};
		var result;
		var i;
		for(var $each_i in PVPModel._pvpArr){
			i=PVPModel._pvpArr[$each_i];
			if (i.Type==type && i.Division==divison){
				result=i;
				break ;
			}
		}
		return result;
	}

	PVPModel.getDivison=function(type,trophy){
		if (!PVPModel._pvpArr){
			PVPModel.parsets_pvp();
		};
		var result;
		var i;
		for(var $each_i in PVPModel._pvpArr){
			i=PVPModel._pvpArr[$each_i];
			if (i.Type==type){
				if (trophy >=i.MinTrophy && trophy <=i.MaxTrophy){
					result=i;
					break ;
				}
			}
		}
		return result;
	}

	PVPModel.getPvpConfigByDivison=function(divId){
		if (!PVPModel._pvpArr){
			PVPModel.parsets_pvp();
		};
		var result;
		var i;
		for(var $each_i in PVPModel._pvpArr){
			i=PVPModel._pvpArr[$each_i];
			if (i.Division==divId && i.Type==2){
				result=i;
				break ;
			}
		}
		return result;
	}

	PVPModel.parsets_season=function(){
		PVPModel._seasonArr=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_seasonreward");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var vo=new SeasonRewardVO();
			vo.ID=item.ID;
			vo.Division=item.Division;
			vo.SeasonTimes=item.SeasonTimes;
			vo.Remark=item.Remark;
			vo.SeasonChange=item.SeasonChange;
			vo.SeasonStarNum=item.SeasonStarNum;
			vo.SeasonReward=item.SeasonReward;
			vo.StarNum=item.StarNum;
			PVPModel._seasonArr.push(vo);
		}
	}

	PVPModel.parsets_seasonTime=function(){
		PVPModel._seasonTimeArr=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_seasontime");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var vo=new SeasonTimeVO();
			vo.ID=item.ID;
			vo.SeasonTime=item.SeasonTime;
			vo.SeasonStar=item.SeasonStar;
			vo.SeansonEnd=item.SeansonEnd;
			PVPModel._seasonTimeArr.push(vo);
		}
	}

	PVPModel.parsets_pvp=function(){
		PVPModel._pvpArr=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_pvp");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var vo=new PvpVO();
			vo.AuxiliaryLineLength=item.AuxiliaryLineLength;
			vo.Division=item.Division;
			vo.Type=item.Type;
			vo.Gold=item.Gold;
			vo.Icon=item.Icon;
			vo.ID=item.ID;
			vo.LoseK=item.LoseK;
			vo.MaxTrophy=item.MaxTrophy;
			vo.MinTrophy=item.MinTrophy;
			vo.RobotTimeout=item.RobotTimeout;
			vo.RobotTimeoutID=item.RobotTimeoutID;
			vo.RobotWarm=item.RobotWarm;
			vo.RobotWarmID=item.RobotWarmID;
			vo.SceneArticleID=item.RobotWarmID;
			vo.SceneID=item.SceneID;
			vo.SkillID=item.SkillID;
			vo.WinK=item.WinK;
			vo.SoonWinScore=item.SoonWinScore;
			vo.WinScore=item.WinScore;
			PVPModel._pvpArr.push(vo);
		}
	}

	PVPModel._pvpArr=null;
	PVPModel._seasonArr=null;
	PVPModel._seasonTimeArr=null;
	return PVPModel;
})()


//class dao.QuestConditionModel
var QuestConditionModel=(function(){
	function QuestConditionModel(){}
	__class(QuestConditionModel,'dao.QuestConditionModel');
	/**配置列表的所有数据*/
	__getset(1,QuestConditionModel,'allConfig',function(){
		if (!QuestConditionModel._allConfig){
			QuestConditionModel.parset_s_config();
		}
		return QuestConditionModel._allConfig;
	});

	QuestConditionModel.parset_s_config=function(){
		QuestConditionModel._allConfig=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_questcondition");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItem=new QuestConditionVO();
			configItem.ConditionId=item.ConditionId;
			configItem.QuestId=item.QuestId;
			configItem.NextConditionId=item.NextConditionId;
			configItem.GetType=item.GetType;
			configItem.Rewards=item.Rewards;
			configItem.Value1=item.Value1;
			configItem.Value2=item.Value2;
			configItem.Value3=item.Value3;
			configItem.ParamStr=item.ParamStr;
			QuestConditionModel._allConfig.push(configItem);
		}
	}

	QuestConditionModel.getInfoById=function(id){
		var arr=QuestConditionModel.allConfig;
		var len=arr.length;
		for(var i=0;i<len;i+=1){
			if(arr[i].ConditionId==id)return arr[i];
		}
		return null;
	}

	QuestConditionModel._allConfig=null;
	return QuestConditionModel;
})()


//class dao.QuestModel
var QuestModel=(function(){
	function QuestModel(){}
	__class(QuestModel,'dao.QuestModel');
	/**配置列表的所有数据*/
	__getset(1,QuestModel,'allConfig',function(){
		if (!QuestModel._allConfig){
			QuestModel.parset_s_config();
		}
		return QuestModel._allConfig;
	});

	QuestModel.parset_s_config=function(){
		QuestModel._allConfig=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_quest");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItem=new QuestVO();
			configItem.QuestId=item.QuestId;
			configItem.Type=item.Type;
			configItem.QuestName=item.QuestName;
			configItem.QuestDescribe=item.QuestDescribe;
			configItem.Order=item.Order;
			configItem.Icon=item.Icon;
			configItem.TargetScene=item.TargetScene;
			QuestModel._allConfig.push(configItem);
		}
	}

	QuestModel._allConfig=null;
	return QuestModel;
})()


//class dao.RankModel
var RankModel=(function(){
	function RankModel(){}
	__class(RankModel,'dao.RankModel');
	__getset(1,RankModel,'allConfig',function(){
		if (!RankModel._allConfig){
			RankModel.parset_s_config();
		}
		return RankModel._allConfig;
	});

	RankModel.parset_s_config=function(){
		RankModel._allConfig=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_rank");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItem=new RankVO();
			configItem.ID=item.ID;
			configItem.Remark=item.Remark;
			configItem.Division=item.Division;
			configItem.StarNum=item.StarNum;
			configItem.Star=item.Star;
			configItem.Score=item.Score;
			configItem.MinScore=item.MinScore;
			configItem.TotalScore=item.TotalScore;
			configItem.Name=item.Name;
			RankModel._allConfig.push(configItem);
		}
		RankModel._allConfig.sort(function(a,b){
			if (a.MinScore < b.MinScore)
				return-1;
			if (a.MinScore > b.MinScore)
				return 1;
			return 0;
		});
		for (var i=0,n=RankModel._allConfig.length;i < n;i++){
			RankModel._allConfig[i].Index=i;
		}
	}

	RankModel.getDivison=function(score){
		RankModel.allConfig;
		var result;
		var i;
		for(var $each_i in RankModel._allConfig){
			i=RankModel._allConfig[$each_i];
			if (score >=i.MinScore && score <=i.TotalScore){
				result=i;
				break ;
			}
		}
		return result || RankModel._allConfig[RankModel._allConfig.length-1];
	}

	RankModel.getRankVO=function(div){
		RankModel.allConfig;
		var result;
		var i;
		for(var $each_i in RankModel._allConfig){
			i=RankModel._allConfig[$each_i];
			if (i.Division==div){
				result=i;
				break ;
			}
		}
		return result;
	}

	RankModel.getRankVOByIndex=function(index){
		RankModel.allConfig;
		var result;
		var i;
		for(var $each_i in RankModel._allConfig){
			i=RankModel._allConfig[$each_i];
			if (i.Index==index){
				result=i;
				break ;
			}
		}
		return result;
	}

	RankModel.getDivisionByTrophy=function(tophy){
		RankModel.allConfig;
		var result=0;
		var len=RankModel._allConfig.length;
		for (var i=0;i < len;i++){
			var item=RankModel._allConfig[i];
			var item1=RankModel._allConfig[i+1];
			if (!item1){
				result=item.Division;
				break ;
			}
			if (tophy >=item.MinScore && tophy <=item1.MinScore){
				result=item.Division;
				break ;
			}
		}
		return result;
	}

	RankModel.getTrophyByDivision=function(div,battleType){
		(battleType===void 0)&& (battleType=1);
		RankModel.allConfig;
		var result=0;
		var item;
		for(var $each_item in RankModel._allConfig){
			item=RankModel._allConfig[$each_item];
			if (div==item.Division){
				result=item.MinScore;
				break ;
			}
		}
		return result;
	}

	RankModel._allConfig=null;
	return RankModel;
})()


//class dao.RewardModel
var RewardModel=(function(){
	function RewardModel(){}
	__class(RewardModel,'dao.RewardModel');
	__getset(1,RewardModel,'allConfig',function(){
		if(!RewardModel._allConfig){
			RewardModel._allConfig=[];
			RewardModel.parset_s_config();
		}
		return RewardModel._allConfig;
	});

	RewardModel.parset_s_config=function(){
		var arr=ConfigMgr.getJsonConfigByName("t_s_rewards");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItem=new RewardVO();
			configItem.ID=item.ID;
			configItem.Type=item.Type;
			configItem.Ranking=item.Ranking;
			configItem.Rewards=item.Rewards;
			RewardModel._allConfig.push(configItem);
		}
	}

	RewardModel.getDataByRank=function(rankNum,type){
		var data=RewardModel.getDataByType(type)
		var index=0;
		for(var i=0;i < data.length;i++){
			var vo=data[i];
			if(rankNum > vo.Ranking){
				index++;
			}
		}
		return RewardModel.allConfig[index];
	}

	RewardModel.getDataByType=function(type){
		var typeStr=type+"";
		if(RewardModel._typeDatas.typeStr){
			return RewardModel._typeDatas.typeStr;
		};
		var arr=[];
		for(var i=0;i < RewardModel.allConfig.length;i++){
			var vo=RewardModel.allConfig[i];
			if(type==vo.Type){
				arr.push(vo);
			}
		}
		RewardModel._typeDatas.typeStr=arr;
		return arr;
	}

	RewardModel._allConfig=null;
	RewardModel._typeDatas={};
	return RewardModel;
})()


//class dao.SceneModel
var SceneModel=(function(){
	function SceneModel(){}
	__class(SceneModel,'dao.SceneModel');
	__getset(1,SceneModel,'sceneArr',function(){
		if(!SceneModel._sceneArr){
			SceneModel.parset_s_scene();
		}
		return SceneModel._sceneArr;
	});

	SceneModel.parset_s_scene=function(){
		SceneModel._sceneArr=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_scene");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var itemData=new SceneVO();
			itemData.ID=item.ID;
			itemData.Name=item.Name;
			itemData.SceneResource=item.SceneResource;
			itemData.Timeout=item.Timeout;
			itemData.WindMin=item.WindMin;
			itemData.WindMax=item.WindMax;
			itemData.SceneArticleID=item.SceneArticleID;
			itemData.SoundID=item.SoundID;
			SceneModel._sceneArr.push(itemData);
		}
	}

	SceneModel.getSceneConfig=function(sceneId){
		dao.SceneModel.sceneArr;
		var result;
		var item;
		for(var $each_item in SceneModel._sceneArr){
			item=SceneModel._sceneArr[$each_item];
			if (sceneId==item.ID){
				result=item;
				break ;
			}
		}
		return result;
	}

	SceneModel._sceneArr=null;
	return SceneModel;
})()


//class dao.SceneSupplyModel
var SceneSupplyModel=(function(){
	function SceneSupplyModel(){}
	__class(SceneSupplyModel,'dao.SceneSupplyModel');
	SceneSupplyModel.getSceneSupplyUpdateConfig=function(supplyId){
		if (!SceneSupplyModel._supplyUpdateArr){
			SceneSupplyModel.parset_s_sceneSupplyUpdate();
		};
		var result;
		var item;
		for(var $each_item in SceneSupplyModel._supplyUpdateArr){
			item=SceneSupplyModel._supplyUpdateArr[$each_item];
			if (supplyId==item.ID){
				result=item;
				break ;
			}
		}
		return result;
	}

	SceneSupplyModel.getSceneSupplyConfig=function(supplyId){
		if (!SceneSupplyModel._supplyArr){
			SceneSupplyModel.parset_s_sceneSupply();
		};
		var result;
		var item;
		for(var $each_item in SceneSupplyModel._supplyArr){
			item=SceneSupplyModel._supplyArr[$each_item];
			if (supplyId==item.ID){
				result=item;
				break ;
			}
		}
		return result;
	}

	SceneSupplyModel.parset_s_sceneSupply=function(){
		SceneSupplyModel._supplyArr=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_scene_supply");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var vo=new SceneSupplyVO();
			vo.Duration=item.Duration;
			vo.ID=item.ID;
			vo.SupplyAddBuff=item.SupplyAddBuff;
			vo.SupplyDieEffect=item.SupplyDieEffect;
			vo.SupplyHitArea=item.SupplyHitArea;
			vo.SupplyReceiveEvent=item.SupplyReceiveEvent;
			vo.SupplyResource=item.SupplyResource;
			vo.SupplyEffect=item.SupplyEffect;
			vo.SupplyHit=item.SupplyHit;
			vo.SupplyIdle=item.SupplyIdle;
			SceneSupplyModel._supplyArr.push(vo);
		}
	}

	SceneSupplyModel.parset_s_sceneSupplyUpdate=function(){
		SceneSupplyModel._supplyUpdateArr=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_scene_supply_update");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var vo=new SceneSupplyUpdateVO();
			vo.ID=item.ID;
			vo.SceneSupplyID=item.SceneSupplyID;
			vo.SupplyAmount=item.SupplyAmount;
			vo.SupplyCountLimit=item.SupplyCountLimit;
			vo.SupplyEvent=item.SupplyEvent;
			vo.SupplyRadius=item.SupplyRadius;
			vo.SupplyRadiusDistance=item.SupplyRadiusDistance;
			vo.SupplyUpdateType=item.SupplyUpdateType;
			vo.SupplyRadiusLimit=item.SupplyRadiusLimit;
			SceneSupplyModel._supplyUpdateArr.push(vo);
		}
	}

	SceneSupplyModel._supplyArr=null;
	SceneSupplyModel._supplyUpdateArr=null;
	return SceneSupplyModel;
})()


//class dao.SevenDayTargetConditionModel
var SevenDayTargetConditionModel=(function(){
	function SevenDayTargetConditionModel(){}
	__class(SevenDayTargetConditionModel,'dao.SevenDayTargetConditionModel');
	/**配置列表的所有数据*/
	__getset(1,SevenDayTargetConditionModel,'allConfig',function(){
		if (!SevenDayTargetConditionModel._allConfig){
			SevenDayTargetConditionModel.parset_s_config();
		}
		return SevenDayTargetConditionModel._allConfig;
	});

	SevenDayTargetConditionModel.parset_s_config=function(){
		SevenDayTargetConditionModel._allConfig=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_seven_day_goal_condition");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItem=new SevenDayTargetConditionVO();
			configItem.targetConditionId=item.ID;
			configItem.targetType=item.GoalType;
			configItem.goalNum=item.GoalNum;
			configItem.coalDay=item.GoalDay;
			configItem.evenType=item.EvenType;
			configItem.rewards=item.Rewards;
			configItem.desc=item.Desc;
			configItem.order=item.Order;
			configItem.isOpen=item.IsOpen;
			configItem.languageId=item.LanguageId;
			SevenDayTargetConditionModel._allConfig.push(configItem);
			SevenDayTargetConditionModel._dataByConditionId[configItem.targetConditionId]=configItem;SevenDayTargetConditionModel._dataByType[configItem.targetType]=SevenDayTargetConditionModel._dataByType[configItem.targetType]|| [];
			SevenDayTargetConditionModel._dataByType[configItem.targetType].push(configItem);SevenDayTargetConditionModel._dataByDay[configItem.coalDay-1]=SevenDayTargetConditionModel._dataByDay[configItem.coalDay-1]|| [];
			SevenDayTargetConditionModel._dataByDay[configItem.coalDay-1].push(configItem);
		}
	}

	SevenDayTargetConditionModel.getDataByType=function($type){
		return SevenDayTargetConditionModel._dataByType[$type];
	}

	SevenDayTargetConditionModel.getDataByConditionId=function($id){
		return SevenDayTargetConditionModel._dataByConditionId[$id];
	}

	SevenDayTargetConditionModel.getDataByDay=function($day){
		return SevenDayTargetConditionModel._dataByDay[$day];
	}

	SevenDayTargetConditionModel.getDataByDayAndType=function($type,$day){
		var datas=SevenDayTargetConditionModel._dataByType[$type];
		if(!datas)return [];
		var aimDatas=[];
		for(var i=0,len=datas.length;i < len;i++){
			if(!datas[i])continue ;
			if(datas[i].coalDay==$day){
				aimDatas.push(datas[i]);
			}
		}
		return aimDatas;
	}

	SevenDayTargetConditionModel._allConfig=null;
	SevenDayTargetConditionModel._dataByConditionId={};
	SevenDayTargetConditionModel._dataByType={};
	SevenDayTargetConditionModel._dataByDay={};
	return SevenDayTargetConditionModel;
})()


//class dao.SevenDayTargetModel
var SevenDayTargetModel=(function(){
	function SevenDayTargetModel(){}
	__class(SevenDayTargetModel,'dao.SevenDayTargetModel');
	/**配置列表的所有数据*/
	__getset(1,SevenDayTargetModel,'allConfig',function(){
		if (!SevenDayTargetModel._allConfig){
			SevenDayTargetModel.parset_s_config();
		}
		return SevenDayTargetModel._allConfig;
	});

	SevenDayTargetModel.parset_s_config=function(){
		SevenDayTargetModel._allConfig=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_seven_day_goal");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItem=new SevenDayTargetVO();
			configItem.targetId=item.ID;
			configItem.type=item.Type;
			configItem.desc=item.Desc;
			configItem.order=item.Order;
			configItem.isOpen=item.IsOpen;
			configItem.existNum=item.ExistNum;
			configItem.languageId=item.LanguageId;
			SevenDayTargetModel._allConfig.push(configItem);
		}
	}

	SevenDayTargetModel._allConfig=null;
	return SevenDayTargetModel;
})()


//class dao.ShareGiftModel
var ShareGiftModel=(function(){
	function ShareGiftModel(){}
	__class(ShareGiftModel,'dao.ShareGiftModel');
	__getset(1,ShareGiftModel,'sharegiftArr',function(){
		if(!ShareGiftModel._sceneArr){
			ShareGiftModel.parset_s_sharegift();
		}
		return ShareGiftModel._sceneArr;
	});

	ShareGiftModel.parset_s_sharegift=function(){
		ShareGiftModel._sceneArr=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_sharegift");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var itemData=new ShareGiftVO();
			itemData.ID=item.ID;
			itemData.ItemId=item.ItemId;
			itemData.ItemNum=item.ItemNum;
			ShareGiftModel._sceneArr.push(itemData);
		}
	}

	ShareGiftModel.getShareGiftConfig=function(sceneId){
		dao.ShareGiftModel.sharegiftArr;
		var result;
		var item;
		for(var $each_item in ShareGiftModel._sceneArr){
			item=ShareGiftModel._sceneArr[$each_item];
			if (sceneId==item.ID){
				result=item;
				break ;
			}
		}
		return result;
	}

	ShareGiftModel._sceneArr=null;
	return ShareGiftModel;
})()


/**
*商城数据模型
*/
//class dao.ShopModel
var ShopModel=(function(){
	function ShopModel(){}
	__class(ShopModel,'dao.ShopModel');
	ShopModel.parsets_shop=function(){
		ShopModel._shopArr=[];
		var arr=ConfigMgr.getJsonConfigByName("t_s_shop");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var vo=new ShopVO();
			vo.AddPrice=item.AddPrice;
			vo.CurrencyType=item.CurrencyType;
			vo.Degree=item.Degree;
			vo.ID=item.ID;
			vo.IsDouble=item.IsDouble;
			vo.Name=item.Name;
			vo.LimitValue=item.LimitValue;
			vo.Price=item.Price;
			vo.SexLimit=item.SexLimit;
			vo.ShopItem=item.ShopItem;
			vo.PresentItem=item.PresentItem;
			vo.Type=item.Type;
			vo.itemSkin=item.ItemIcon;
			ShopModel._shopArr.push(vo);
		}
	}

	ShopModel.getShopConfigByID=function(shopId){
		if (!ShopModel._shopArr){
			ShopModel.parsets_shop();
		};
		var result;
		var i;
		for(var $each_i in ShopModel._shopArr){
			i=ShopModel._shopArr[$each_i];
			if (i.ID==shopId){
				result=i;
				break ;
			}
		}
		return result;
	}

	ShopModel._shopArr=null;
	return ShopModel;
})()


/**
*技能数据模型
*/
//class dao.SkillModel
var SkillModel=(function(){
	function SkillModel(){}
	__class(SkillModel,'dao.SkillModel');
	/**技能配置列表的所有数据*/
	__getset(1,SkillModel,'allSkillConfig',function(){
		if (!SkillModel._allConfig){
			SkillModel._allConfig=[];
			SkillModel._skillConfig=[];
			SkillModel.parset_s_skill();
			SkillModel.filterSameName();
		}
		return SkillModel._allConfig;
	});

	/**
	*技能配置列表的所有数据(过滤掉名称一样的)用于战斗编辑器
	*/
	__getset(1,SkillModel,'skillConfig',function(){
		if (!SkillModel._skillConfig){
			SkillModel._allConfig=[];
			SkillModel._skillConfig=[];
			SkillModel.parset_s_skill();
			SkillModel.filterSameName();
		}
		return SkillModel._skillConfig;
	});

	SkillModel.parset_s_skillGroupPerformance=function(){
		var arr=ConfigMgr.getJsonConfigByName("t_s_skill_group_performance");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItem=new SkillGroupPerformanceVO();
			configItem.ID=item.ID;
			configItem.Name=item.Name;
			configItem.EffectDescription=item.EffectDescription;
			configItem.SkillID=item.SkillID;
			configItem.GroupDescription=item.GroupDescription;
			configItem.Type=item.Type;
			SkillModel._skillGroupPerformanceConfig.push(configItem);
			if (configItem.Type !=0){
				SkillModel._skillGroupPerformance.push(configItem);
			}
		}
	}

	SkillModel.parset_s_skillPerformance=function(){
		var arr=ConfigMgr.getJsonConfigByName("t_s_skill_performance");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItem=new SkillPerformanceVO();
			configItem.ActName=item.ActName;
			configItem.Avatar=item.Avatar;
			configItem.Description=item.Description;
			configItem.Mission=item.Mission;
			configItem.Name=item.Name;
			configItem.NameDisplay=item.NameDisplay;
			configItem.Icon=item.Icon;
			configItem.ObtainedID=item.ObtainedID;
			configItem.OrgrinType=item.OrgrinType;
			configItem.SkillID=item.SkillID;
			configItem.SoundID=item.SoundID;
			configItem.WeaponType=item.WeaponType;
			configItem.AttributeDescription=item.AttributeDescription;
			configItem.GroupDescription=item.GroupDescription;
			SkillModel._skillPerformanceConfig.push(configItem);
		}
	}

	SkillModel.parset_s_skill=function(){
		var arr=ConfigMgr.getJsonConfigByName("t_s_skill");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItem=new SkillVO();
			configItem.BasicSkill=item.BasicSkill;
			configItem.ButtonOrder=item.ButtonOrder;
			configItem.Bomb=item.Bomb;
			configItem.Buff=item.Buff;
			configItem.CanHold=item.CanHold;
			configItem.Compatible=item.Compatible;
			configItem.Cooldown=item.Cooldown;
			configItem.CostActPoint=item.CostActPoint;
			configItem.CostGold=item.CostGold;
			configItem.CostAnger=item.CostAnger;
			configItem.CostDonate=item.CostDonate;
			configItem.CostSkillPoint=item.CostSkillPoint;
			configItem.Display=item.Display;
			configItem.Damage=item.Damage;
			configItem.Delay=item.Delay;
			configItem.Dig=item.Delay;
			configItem.Exp=item.Exp;
			configItem.FightingForce=item.FightingForce;
			configItem.FightUseCount=item.FightUseCount;
			configItem.MutualExclusion=item.MutualExclusion;
			configItem.IsEndTurn=item.IsEndTurn;
			configItem.IsAttackSkill=item.IsAttackSkill;
			configItem.Level=item.Level;
			configItem.Name=item.Name;
			configItem.NextSkill=item.NextSkill;
			configItem.Open=item.Open;
			configItem.Quality=item.Quality;
			configItem.SkillID=item.SkillID;
			configItem.Sort=item.Sort;
			configItem.SubType=item.SubType;
			configItem.Type=item.Type;
			configItem.TimesPerTurn=item.TimesPerTurn;
			configItem.User=item.User;
			configItem.UseType=item.UseType;
			configItem.cardBtnInfo=item.BottomInformation;
			SkillModel._allConfig.push(configItem);
		}
	}

	SkillModel.getInitSkills=function(lvl){
		var result=[];
		var levelConfig=LevelModel.getPropsByLevel(lvl);
		var skills=levelConfig.Skill;
		var arr=skills.split("|");
		for (var i=0;i < SkillModel.MAX_SKILL_NUM;i++){
			var skillId=arr[i];
			var skillItem=SkillModel.getSkillConfigData(skillId);
			result.push(skillItem);
		}
		return result;
	}

	SkillModel.getSkillConfigData=function(skillId){
		SkillModel.allSkillConfig;
		var result=null;
		var i;
		for(var $each_i in SkillModel._allConfig){
			i=SkillModel._allConfig[$each_i];
			if (i.SkillID==skillId){
				result=i;
				break ;
			}
		}
		return result;
	}

	SkillModel.getSkillConfigByPre=function(skillId){
		SkillModel.allSkillConfig;
		var result=null;
		var i;
		for(var $each_i in SkillModel._allConfig){
			i=SkillModel._allConfig[$each_i];
			if (i.NextSkill==skillId){
				result=i;
				break ;
			}
		}
		return result;
	}

	SkillModel.filterSameName=function(){
		var len=SkillModel._allConfig.length;
		for (var i=0;i < len;i++){
			var item=SkillModel._allConfig [i];
			if (i==len-1){
				SkillModel._skillConfig.push(item);
			}
			else{
				if (item.Name !=SkillModel._allConfig[i+1].Name){
					if (item.Type !=0 && item.Type !=3){
						SkillModel._skillConfig.push(item);
					}
				}
			}
		}
	}

	SkillModel.getSkillGroupPerformanceByGroupId=function(skillId){
		if (!SkillModel._skillGroupPerformanceConfig){
			SkillModel._skillGroupPerformanceConfig=[];
			SkillModel._skillGroupPerformance=[];
			SkillModel.parset_s_skillGroupPerformance();
		};
		var result;
		var i;
		for(var $each_i in SkillModel._skillGroupPerformanceConfig){
			i=SkillModel._skillGroupPerformanceConfig[$each_i];
			if (i.ID==skillId){
				result=i;
				break ;
			}
		}
		return result;
	}

	SkillModel.getSkillGroupPerformance=function(){
		if (!SkillModel._skillGroupPerformanceConfig){
			SkillModel._skillGroupPerformanceConfig=[];
			SkillModel._skillGroupPerformance=[];
			SkillModel.parset_s_skillGroupPerformance();
		}
		return SkillModel._skillGroupPerformance;
	}

	SkillModel.getSkillPerformanceBySkillId=function(skillId){
		if (!SkillModel._skillPerformanceConfig){
			SkillModel._skillPerformanceConfig=[];
			SkillModel.parset_s_skillPerformance();
		};
		var result;
		var i;
		for(var $each_i in SkillModel._skillPerformanceConfig){
			i=SkillModel._skillPerformanceConfig[$each_i];
			if (i.SkillID==skillId){
				result=i;
				break ;
			}
		}
		return result;
	}

	SkillModel.getFriendSkillByLevel=function(friendSkillLevel){
		SkillModel.allSkillConfig;
		var skill;
		var i;
		for(var $each_i in SkillModel._allConfig){
			i=SkillModel._allConfig[$each_i];
			if (i.Type==3 && i.Level==friendSkillLevel){
				skill=i;
				break ;
			}
		}
		return skill;
	}

	SkillModel.MAX_SKILL_NUM=5;
	SkillModel._allConfig=null;
	SkillModel._skillConfig=null;
	SkillModel._skillPerformanceConfig=null;
	SkillModel._skillGroupPerformanceConfig=null;
	SkillModel._skillGroupPerformance=null;
	return SkillModel;
})()


/**
*声音播放管理
**/
//class dao.SoundMgr
var SoundMgr=(function(){
	function SoundMgr(){
		this._soundModel=null;
		this._lastMusic=null;
		this.loadSoundDict={};
		this._soundModel=new SoundModel();
	}

	__class(SoundMgr,'dao.SoundMgr');
	var __proto=SoundMgr.prototype;
	/**设置静音 */
	__proto.isMuted=function(value){
		SoundManager.muted=value;
	}

	/**设置背景音乐静音 */
	__proto.musicMuted=function(value){
		SoundManager.musicMuted=value;
	}

	/**设置背景音乐静音 */
	__proto.soundMuted=function(value){
		SoundManager.soundMuted=value;
	}

	/**设置背景音乐音量 */
	__proto.setMusicVolume=function(value){
		SoundManager.setMusicVolume(value);
	}

	/**设置音效音量 */
	__proto.setSoundVolume=function(value){
		SoundManager.setSoundVolume(value);
	}

	/**普通按钮点击音效 */
	__proto.playBtttonSound=function(){
		this.playSound(4004002);
	}

	/**
	*播放音效
	*@prame soundId 声音ID
	**/
	__proto.playSound=function(soundId,complete){
		var _$this=this;
		var config=this.soundModel.getSoundData(soundId);
		if(config){
			var url=config.Resource+".mp3";
			this.loadSound(url,Handler.create(this,function(){
				console.log("声音资源ID:"+soundId);
				if(config.SoundType==1){
					if(_$this._lastMusic){
						SoundManager.stopMusic();
						_$this._lastMusic.stop();
						Laya.loader.clearRes(_$this._lastMusic.url);
					}
					SoundManager.setMusicVolume(config.Volume/100);
					_$this._lastMusic=SoundManager.playMusic(url);
				}
				else{
					SoundManager.setSoundVolume(config.Volume/100);
					SoundManager.playSound(url,1,complete || Handler.create(this,_$this.playSoundComplete,[url]));
				}
			}));
		}
		else{
			console.log("找不到声音"+soundId);
		}
	}

	__proto.loadSound=function(url,complete){
		var _$this=this;
		var arr;
		if(this.loadSoundDict[url]==null){
			this.loadSoundDict[url]=[];
		}
		arr=this.loadSoundDict[url];
		arr.push(complete);
		if(arr.length==1){
			Laya.loader.load(url,Handler.create(this,function(){
				var array=_$this.loadSoundDict[url];
				while(array.length > 0){
					var h=array.shift();
					h.run();
				}
			}));
		}
	}

	__proto.playSoundComplete=function(url){
		Laya.loader.clearRes(url);
	}

	__proto.clearLastMusicRes=function(){
		if(this._lastMusic){
			SoundManager.stopMusic();
			this._lastMusic.stop();
			Laya.loader.clearRes(this._lastMusic.url);
		}
	}

	__getset(0,__proto,'soundModel',function(){
		return this._soundModel;
	});

	__getset(1,SoundMgr,'instance',function(){
		if(SoundMgr._instance==null){
			SoundMgr._instance=new SoundMgr();
		}
		return SoundMgr._instance;
	});

	SoundMgr.LOGIN_SCENE_BGM=4002004;
	SoundMgr.HALL_SCENE_BGM=4002005;
	SoundMgr.SHOP_BGM=4002006;
	SoundMgr.FIGHT_BGM=4001002;
	SoundMgr.MATCHING_BGM=4002007;
	SoundMgr.DEAD_FIGHT_MODE=4002001;
	SoundMgr.GAME_WIN=4002003;
	SoundMgr.GAME_FAIL=4002002;
	SoundMgr.GAME_OVER=4003005;
	SoundMgr.LEVEL_UP=4004001;
	SoundMgr.NORMAL_CLICK=4004002;
	SoundMgr.WALK=4003012;
	SoundMgr.GET_PROP=4003006;
	SoundMgr.USE_PROP=4003007;
	SoundMgr.DIE=4003004;
	SoundMgr.Accumulate=4003001;
	SoundMgr.CHANGE_ANGLE=4003011;
	SoundMgr.MY_TURN=4003009;
	SoundMgr.OTHER_TURN=4003010;
	SoundMgr.ALARM=4003002;
	SoundMgr.ROUND_TIME=4003003;
	SoundMgr.INTO_SCENE=4003008;
	SoundMgr.FIRE_tongYong=4006001;
	SoundMgr.MAIL_DEL=4006016;
	SoundMgr.GET_REWARD=4006017;
	SoundMgr.PLAYER_LEVEL_UP=4006018;
	SoundMgr.BOX_TIME_OVER=4006019;
	SoundMgr.BOX_UNLOCK=4006021;
	SoundMgr.BOX_GET_DIAMONDS=4006022;
	SoundMgr.BOX_GET_LEGEND_CARD=4006023;
	SoundMgr.BOX_GET_GOLD=4006024;
	SoundMgr.BOX_GET_ORDINARY_CARD=4006025;
	SoundMgr.BOX_GET_EPIC_CARD=4006026;
	SoundMgr.BOX_GET_RARE_CARD=4006027;
	SoundMgr.SKILL_GET_EXP=4006028;
	SoundMgr.SKILL_LEVEL_UP=4006029;
	SoundMgr.SKILL_REPLACE=4006030;
	SoundMgr.LICENSING=4006031;
	SoundMgr.BOX_FLY=4006032;
	SoundMgr.GOLD_GET=4006033;
	SoundMgr.GOODS_SHOW=4006034;
	SoundMgr.BOX_CLICK=4006035;
	SoundMgr.DICE=4003013;
	SoundMgr.CLICK_SKILL_CARD=4006038;
	SoundMgr.START_BATTLE=4006039;
	SoundMgr.BOX_TIME_REDUCE=4006040;
	SoundMgr.TYRE_SLIDING=4006045;
	SoundMgr.SOUND_MEDAL_UP=4006052;
	SoundMgr.SOUND_MEDAL_DOWN=4006053;
	SoundMgr.SOUND_MELEE_ACCOUNT=4006054;
	SoundMgr.SOUND_KILL=4006022;
	SoundMgr.SOUND_WIN_SCORE=4006055;
	SoundMgr.SOUND_MOWANG=4006056;
	SoundMgr.SOUND_APPLE_ROOM=4006057;
	SoundMgr.SOUND_SHOOT_FRUIT=4006058;
	SoundMgr.SOUND_SHOOT_NPC=4006059;
	SoundMgr.SOUND_LAST_CHANGE=4006060;
	SoundMgr.SOUND_GET_FRAGMENT=4006061;
	SoundMgr.SOUND_APPLE_ACCOUNT=4006062;
	SoundMgr._instance=null;
	return SoundMgr;
})()


/**
*声音数据模型
*/
//class dao.SoundModel
var SoundModel=(function(){
	function SoundModel(){
		/**声音数据配置 */
		this._soundConfig=null;
	}

	__class(SoundModel,'dao.SoundModel');
	var __proto=SoundModel.prototype;
	/**解析声音配置表 */
	__proto.parsets_sound=function(){
		this._soundConfig={};
		var arr=ConfigMgr.getJsonConfigByName("t_s_sound");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItemData=new SoundVO();
			configItemData.ID=item.ID;
			configItemData.Circulate=item.Circulate;
			configItemData.CirculateTime=item.CirculateTime;
			configItemData.Name=item.Name;
			configItemData.Resource=item.Resource;
			configItemData.SoundType=item.SoundType;
			configItemData.Time=item.Time;
			configItemData.Volume=item.Volume;
			this._soundConfig[configItemData.ID]=configItemData;
		}
	}

	/**获得声音地址 */
	__proto.getSoundData=function(id){
		if (!this._soundConfig){
			this.parsets_sound();
		}
		return this._soundConfig[id];
	}

	return SoundModel;
})()


//class dao.SpecialShopModel
var SpecialShopModel=(function(){
	function SpecialShopModel(){}
	__class(SpecialShopModel,'dao.SpecialShopModel');
	/**商店配置列表的所有数据*/
	__getset(1,SpecialShopModel,'allSpecilShopItem',function(){
		if (!SpecialShopModel._allSpecilShopItem){
			SpecialShopModel._allSpecilShopItem={};
			SpecialShopModel.parset_s_mysteryshop();
		}
		return SpecialShopModel._allSpecilShopItem;
	});

	SpecialShopModel.parset_s_mysteryshop=function(){
		var arr=ConfigMgr.getJsonConfigByName("t_s_specialshop");
		var vo;
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			vo=new SpecialShopVO();
			vo.Id=item.Id;
			vo.Type=item.Type;
			vo.ItemId=item.ItemId;
			vo.ItemName=item.ItemName;
			vo.ItemCount=item.ItemCount;
			vo.CurrencyType=item.CurrencyType;
			vo.Price=item.Price;
			vo.Random=item.Random;
			vo.Degree=item.Degree;
			SpecialShopModel._allSpecilShopItem[vo.Id]=vo;
		}
	}

	SpecialShopModel.getItemDataById=function(id){
		return SpecialShopModel.allSpecilShopItem[id];
	}

	SpecialShopModel._allSpecilShopItem=null;
	return SpecialShopModel;
})()


//class dao.UpgradeModel
var UpgradeModel=(function(){
	function UpgradeModel(){}
	__class(UpgradeModel,'dao.UpgradeModel');
	/**Config配置列表的所有数据*/
	__getset(1,UpgradeModel,'allConfig',function(){
		if (!UpgradeModel._allConfigDict){
			UpgradeModel.parset_s_config();
		}
		return UpgradeModel._allConfigDict;
	});

	UpgradeModel.parset_s_config=function(){
		UpgradeModel._allConfigDict={};
		UpgradeModel._allConfigList={};
		var arr=ConfigMgr.getJsonConfigByName("t_s_upgrade");
		var item;
		for(var $each_item in arr){
			item=arr[$each_item];
			var configItem=new UpgradeVO();
			configItem.Id=item.Id;
			configItem.Type=item.Type;
			configItem.Level=item.Level;
			configItem.Exp=item.Exp;UpgradeModel._allConfigDict[configItem.Type]=UpgradeModel._allConfigDict[configItem.Type]|| {};
			UpgradeModel._allConfigDict[configItem.Type][configItem.Level]=configItem;UpgradeModel._allConfigList[configItem.Type]=UpgradeModel._allConfigList[configItem.Type]|| [];
			UpgradeModel._allConfigList[configItem.Type].push(configItem);
		}
	}

	UpgradeModel.getConfigByLevel=function(level,type){
		UpgradeModel.allConfig;
		if (UpgradeModel._allConfigDict[type]){
			return UpgradeModel._allConfigDict[type][level];
		}
		return null;
	}

	UpgradeModel.getConfigByExp=function(exp,type){
		UpgradeModel.allConfig;
		if (UpgradeModel._allConfigList[type]){
			var list=UpgradeModel._allConfigList[type];
			for (var i=0;i < list.length;i++){
				if (exp < list[i].Exp){
					return list[i];
				}
			}
			return list[list.length-1];
		}
		return null;
	}

	UpgradeModel._allConfigDict=null;
	UpgradeModel._allConfigList=null;
	return UpgradeModel;
})()


//class entity.ActivityConditionVO
var ActivityConditionVO=(function(){
	function ActivityConditionVO(){
		this.ConditionId=0;
		this.ActivityId=0;
		/**
		*物品ID|数量
		*/
		this.Rewards=null;
		this.Order=0;
		this.Type=0;
		this.Value1=0;
		this.Value2=0;
		this.Value3=0;
		this.IsExist=0;
		this.GetType=0;
		this.IsGet=false;
	}

	__class(ActivityConditionVO,'entity.ActivityConditionVO');
	return ActivityConditionVO;
})()


//class entity.ActivityVO
var ActivityVO=(function(){
	function ActivityVO(){
		this.ActivityId=0;
		this.ActivityName=null;
		this.Type=0;
		this.Order=0;
		this.IsExist=0;
		this.Desc=null;
		this.Param1=0;
		this.Param2=0;
		this.Param3=null;
		this.Param4=null;
		this.Param5=null;
		this.IsGet=false;
		this.conditionId=0;
	}

	__class(ActivityVO,'entity.ActivityVO');
	return ActivityVO;
})()


//class entity.AppleGameVO
var AppleGameVO=(function(){
	function AppleGameVO(){
		this.ID=0;
		this.Round=0;
		this.TimeOut=0;
		this.WindMin=0;
		this.WindMax=0;
		this.LineLength=0;
		this.Fruit=0;
		this.ChildPosition=null;
		this.Wood=0;
		this.WoodHigh=null;
		this.Woodspeed=null;
	}

	__class(AppleGameVO,'entity.AppleGameVO');
	return AppleGameVO;
})()


/**
*炮弹配置数据
**/
//class entity.BombPerformanceVO
var BombPerformanceVO=(function(){
	function BombPerformanceVO(){
		/**武器ID*/
		this.ID=0;
		/**炮弹名称*/
		this.Name=null;
		/**炮弹资源1 路径：\Client\Develop\Resource\res\weapon\bomb
		*(100000以前的是历史问题）从100000之后，万位数和千位数表示武器，
		*百位数表示武器等级（0为通用，1普，2真，3极，4狂，5神）
		*十位数表示爆炸或弹头（0为弹头，1为爆炸），
		*各位数表示编号（通常1为普通，2为必杀）*/
		this.MissilePath1=null;
		/**
		*爆炸资源 路径：\Client\Develop\Resource\res\weapon\blast
		(100000以前的是历史问题）
		从100000之后，万位数和千位数表示武器，百位数表示武器等级（0为通用，1普，2真，3极，4狂，5神）
		*十位数表示爆炸或弹头（0为弹头，1为爆炸），各位数表示编号（通常1为普通，2为必杀）
		**/
		this.ExplodePath1=null;
		/**命中角色震屏x振幅，y振幅，频率，时间 */
		this.HitShake=null;
		/**命中地面震屏x振幅，y振幅，频率，时间 */
		this.MissShake=null;
		/**飞行方式
		1.前端指向飞行方向
		2.有残影，旋转
		3.粒子
		4.有残影，前端指向飞行方向
		5.指向，拖尾
		6.旋转，拖尾*/
		this.FlyType=0;
		/**
		*飞行参数
		视不同飞行方式而定
		粒子：资源名1|x,y;资源名2|x,y
		拖尾：资源名|宽度|时间|颜色
		10000|50|1000|255,255,255
		资源路径：Develop\Resource\res\weapon\particle*/
		this.FlyArgument=null;
		/**0，标准；1，飞机 */
		this.LineType=0;
		/**旋转衰减*/
		this.RotateDamping=NaN;
		/**旋转速度*/
		this.RotateSpeed=NaN;
		/**飞行音效 读取sound表*/
		this.FlySoundID=0;
		/**开炮音效 读取sound表*/
		this.FireSoundID=0;
		/**爆炸音效 读取sound表*/
		this.BlastSoundID=0;
	}

	__class(BombPerformanceVO,'entity.BombPerformanceVO');
	return BombPerformanceVO;
})()


/**
*炮弹配置数据
**/
//class entity.BombVO
var BombVO=(function(){
	function BombVO(){
		/**bombID*/
		this.ID=0;
		/**炮弹名称*/
		this.Name=null;
		/**炮弹表现表ID t_s_bomb_performance表 */
		this.PerformanceID=0;
		/**爆炸范围 */
		this.Radius=null;
		/**区域效果衰减\n内层百分比半径_内层百分比效果/外层百分比半径_外层百分比效果 */
		this.EffectDecay=null;
		/**增强/减弱 */
		this.AddOrSubtract=null;
		/**生效方式 1，普通 2，炮弹不会爆炸，效果影响炮弹穿过的角色*/
		this.EffectiveMode=0;
		/**触发爆炸0，无1|4，地表2，友方角色3，敌方角色4,不可炸的地表*/
		this.TriggerType=0;
		/**可生效 1，地表2，友方角色3，敌方角色4，不可破坏地形5，物件6，队友 */
		this.Effective=0;
		/**炮弹效果*/
		this.Effect=null;
		/**只对敌的炮弹效果*/
		this.EnemyEffect=null;
		/**只对已方的炮弹效果*/
		this.FriendEffect=null;
		/**命中增加怒气*/
		this.HitAnger=0;
		/**未命中增加怒气*/
		this.MissAnger=0;
		/**击中角色弹坑\res\\weapon\\crack弹坑大小同资源大小*/
		this.HitHole=0;
		/**击中角色弹坑边缘\\res\\weapon\\crack*/
		this.HitEdge=null;
		/**击中地面弹坑\n\\res\\weapon\\crack*/
		this.MissHole=null;
		/**击中地面弹坑边缘\n\\res\\weapon\\crack*/
		this.MissEdge=null;
		/**飞行播放速度*/
		this.FlySpeed=0;
		/**风力因素*/
		this.WindForce=0;
		/**空气因素*/
		this.AirResistance=0;
		/**重力因素*/
		this.Gravity=0;
		/**质量*/
		this.Mass=0;
		/**爆炸1表现时间（ms*/
		this.ExplodeTime1=0;
		/**爆炸2表现时间（ms*/
		this.ExplodeTime2=0;
		/**爆炸3表现时间（ms*/
		this.ExplodeTime3=0;
		/**爆炸4表现时间（ms*/
		this.ExplodeTime4=0;
	}

	__class(BombVO,'entity.BombVO');
	return BombVO;
})()


//class entity.BufferPerformanceVO
var BufferPerformanceVO=(function(){
	function BufferPerformanceVO(){
		this.ID=0;
		this.Name=null;
		this.Icon=0;
		this.BuffEffectID=null;
		this.EffectEnableShowID=null;
	}

	__class(BufferPerformanceVO,'entity.BufferPerformanceVO');
	return BufferPerformanceVO;
})()


//class entity.BufferVO
var BufferVO=(function(){
	function BufferVO(){
		/**bombID*/
		this.ID=0;
		/**炮弹名称*/
		this.Name=null;
		/**t_s_bufferPerformance */
		this.Display=0;
		this.Target=null;
		this.Effect=null;
		this.Superposition=0;
		this.Immidiate=0;
		this.EffectiveEvent=0;
		this.LengthType=0;
		this.Length=0;
		this.Harm=0;
		this.Remove=0;
		this.EffectProbability=0;
		this.EffectCondition=0;
		this.Tag=null;
	}

	__class(BufferVO,'entity.BufferVO');
	return BufferVO;
})()


//class entity.CampaignVO
var CampaignVO=(function(){
	function CampaignVO(){
		/**副本唯一ID*/
		this.ID=0;
		/**组ID,相同名字不同难度的副本组ID相同*/
		this.GroupID=0;
		/**副本类型*/
		this.Type=0;
		/**副本名字，读取language表*/
		this._Name=0;
		/**副本描述，读取language表*/
		this._Desc=0;
		/**难度,0:普通 1:噩梦*/
		this.Difficult=0;
		/**开放等级*/
		this.NeedLevel=0;
		/**前置副本*/
		this.PerCampaignId=0;
		/**奖励展示，itemid,count|...*/
		this.Reward=null;
	}

	__class(CampaignVO,'entity.CampaignVO');
	var __proto=CampaignVO.prototype;
	__getset(0,__proto,'Name',function(){
		return LanguageMgr.Ins.GetLan(this._Name);
	});

	__getset(0,__proto,'Desc',function(){
		return LanguageMgr.Ins.GetLan(this._Desc);
	});

	return CampaignVO;
})()


//class entity.ConfigVO
var ConfigVO=(function(){
	function ConfigVO(){
		this.Id=0;
		this.ConfigValue=null;
		this.Description=null;
		this.IsClient=0;
	}

	__class(ConfigVO,'entity.ConfigVO');
	return ConfigVO;
})()


/**
*特效表现配置项
**/
//class entity.EffectPerformanceVO
var EffectPerformanceVO=(function(){
	function EffectPerformanceVO(){
		/**ID 19开头 */
		this.ID=0;
		/**名称 */
		this.Name=null;
		/**描述 */
		this.Des=null;
		/**类型 */
		this.Type=0;
		/**特效路径 */
		this.EffectPath=null;
		/**特效所在图层 */
		this.EffectLayer=0;
		/**出现特效标签 */
		this.BornLabel=null;
		/**维持特效标签 */
		this.IdleLabel=null;
		/**结束特效标签 */
		this.DieLabel=null;
		/**位置跟随 */
		this.FollowType=0;
		/**初始角度 */
		this.OriginalAngle=0;
		/**特效角度 */
		this.EffectAngle=0;
		/**是否跟随转动 */
		this.IsRotate=0;
		/**是否转向 */
		this.IsTurn=0;
		/**附着坐标 */
		this.EffectPoint=null;
		/**特效声音ID */
		this.SoundID=0;
		/**在低特效模式中是否关闭，1为关闭，0不受影响 */
		this.SmoothMode=0;
		/**缩放倍率，通常配置为10000。 */
		this.Zoom=0;
	}

	__class(EffectPerformanceVO,'entity.EffectPerformanceVO');
	return EffectPerformanceVO;
})()


//class entity.GuildBoxAwardVO
var GuildBoxAwardVO=(function(){
	function GuildBoxAwardVO(){
		/**
		*物品唯一ID 物品ID|数量
		*/
		this.ItemID=null;
		/**
		*对应邮件ID
		*/
		this.MailID=null;
		/**
		*段位
		*/
		this.Division=0;
		/**
		*所需胜利总场次
		*/
		this.VictoryCount=0;
	}

	__class(GuildBoxAwardVO,'entity.GuildBoxAwardVO');
	return GuildBoxAwardVO;
})()


//class entity.GuildBuffVO
var GuildBuffVO=(function(){
	function GuildBuffVO(){
		/**主键**/
		this.Id=0;
		/**组Id**/
		this.GroupId=0;
		/**增益Id**/
		this.PrivilegeId=0;
		/**等级**/
		this.Level=0;
		/**下一级消耗公会币**/
		this.CostDonate=0;
		/**下一级消耗时间**/
		this.CostTime=null;
		/**下一级Id**/
		this.NextId=0;
		/**图标**/
		this.Icon=null;
		/**描述**/
		this.Description=0;
		/**效果描述**/
		this.Effect=0;
	}

	__class(GuildBuffVO,'entity.GuildBuffVO');
	return GuildBuffVO;
})()


/**
*公会捐赠数据项
*/
//class entity.GuildDonateVO
var GuildDonateVO=(function(){
	function GuildDonateVO(){
		/**
		*物品唯一ID
		*/
		this.ID=null;
		/**
		*段位
		*/
		this.Division=0;
		/**
		*捐赠普通卡牌数量
		*/
		this.DonateCommons=null;
		this.DonateRares=null;
		this.RequireCommons=null;
		this.RequireRares=null;
		this.DonateCommonMax=null;
		this.DonateRareMax=null;
	}

	__class(GuildDonateVO,'entity.GuildDonateVO');
	return GuildDonateVO;
})()


//class entity.GuildLevelVO
var GuildLevelVO=(function(){
	function GuildLevelVO(){
		/**id **/
		this.ID=0;
		/**公会等级 **/
		this.Level=0;
		/**升级需要的经验 **/
		this.EXP=0;
		/**该等级最大会员数 **/
		this.MaxMembers=0;
		/**捐献卡牌的星级|对应获得的捐献点 **/
		this.DonationPoints=null;
		/**不同星级获得的随机奖励物品ID，数量和权重，用|分隔不同星级，星级1，物品1，物品1数量，物品1权重，物品2，物品2数量，物品2权重 **/
		this.DonateRewards=null;
	}

	__class(GuildLevelVO,'entity.GuildLevelVO');
	return GuildLevelVO;
})()


/**
*物品信息配置表
*@author weiqiang.huang
*
*/
//class entity.ItemVO
var ItemVO=(function(){
	function ItemVO(){
		/**
		*物品唯一ID
		*/
		this.Id=null;
		/**
		*物品ID
		*/
		this.ItemID=0;
		/**
		*名称ID
		*/
		this.Name=0;
		/**
		*类型
		*/
		this.Type=0;
		/**
		*子类型
		*/
		this.SubType=0;
		/**
		*性别限制
		*/
		this.SexLimit=0;
		/**
		*稀有度
		*/
		this.Rarity=0;
		/**
		*物品等级
		*/
		this.Level=0;
		/**
		*时效(秒)
		*/
		this.Time=0;
		/**
		*图标
		*/
		this.Icon=null;
		/**
		*Avator资源
		*/
		this.Avatar=null;
		/**
		*宝箱开启动画
		*/
		this.OpenBoxAnim=null;
		/**
		*描述
		*/
		this.Desc=null;
		/**
		*额外参数
		*/
		this.Param1=0;
		/**
		*额外参数
		*/
		this.Param2=null;
		this.EndTime=0;
		this.isLocked=false;
		this.index=0;
		//位置
		this.count=0;
		/**
		*物品数量
		*/
		this.Number=0;
		/**
		*该宝箱是否已分享
		*/
		this.isShared=false;
		this.isNewCard=false;
	}

	__class(ItemVO,'entity.ItemVO');
	return ItemVO;
})()


/**
*角色等级配置表数据项
**/
//class entity.LevelVO
var LevelVO=(function(){
	function LevelVO(){
		/**ID*/
		this.Id=0;
		/**类型*/
		this.Type=0;
		/**名称*/
		this.Name=null;
		/**等级*/
		this.Level=0;
		/**血量*/
		this.Hp=0;
		/**伤害*/
		this.Damage=0;
		/**速度*/
		this.Speed=0;
		/**暴击*/
		this.Crit=0;
		/**抵挡 */
		this.Block=0;
		/**天赋技能 */
		this.Talentskill=null;
		/**初始随机技能组 */
		this.Skill=null;
	}

	__class(LevelVO,'entity.LevelVO');
	return LevelVO;
})()


//class entity.NpcPerformanceVO
var NpcPerformanceVO=(function(){
	function NpcPerformanceVO(){
		/**ID 13+类型+3位编号*/
		this.ID=0;
		/**图标 */
		this.Icon=null;
		/**名称 */
		this.Name=null;
		/**动画配置的xml文件名*/
		this.ActConfig=null;
		/**配置在xml内可能包含多个角色，此处配置的是编号顺序*/
		this.AnimationName=null;
		/**创建时开始播放的特效 t_s_playing_effect_performace表*/
		this.SummonEffect=0;
		/**NPC出现延迟的时间的时间，单位为毫秒*/
		this.SummonDelay=0;
		/**NPC出现的方式*/
		this.SummonMode=0;
		/**NPC出现时放大的初始值和最终值*/
		this.SummonZoom=null;
		/**NPC出现效果持续的时间*/
		this.SummonTime=0;
		/**攻击特效，ID和炮弹的爆炸特效ID一致 t_s_playing_effect_performace表*/
		this.AttackEffect=0;
		/**攻击音效，对应sound表表头*/
		this.AttackSound=0;
		/**攻击延迟*/
		this.AttackDelay=0;
		/**NPC死亡动画播放至最后一帧后，开始逐渐淡出消失，此处配置淡出至消失的时间（毫秒），配置为0则不消失*/
		this.DeadTime=0;
		/**缩放倍率，通常配置为10000。*/
		this.Zoom=0;
		/**是否显示行动条。0*/
		this.ViewActionBar=0;
		/**客户端AI脚本ID*/
		this.TriggerID=null;
		/**入场特效ID 0=无 t_s_playing_effect_performace表*/
		this.EnterEffect=0;
		/**轮到该单位行动时，镜头是否指向该单位*/
		this.Offsets=0;
		/**死亡时该单位相对屏幕位移方向*/
		this.DeadMove=0;
		/**墓碑资源，*/
		this.Tombstone=null;
		/**npc死亡动画是否会变为灰色1会，0不会*/
		this.DieGrey=0;
		/**出生时播放的SoundID*/
		this.BornDubbing=0;
		/**死亡时播放的SoundID*/
		this.DieDubbing=0;
		/**移动开始时播放的SoundID*/
		this.WalkDubbingStart=0;
		/**移动进行时播放的SoundID（循环）*/
		this.WalkDubbingStand=0;
		/**移动结束时播放的SoundID*/
		this.WalkDubbingOver=0;
		/**待机时播放的SoundID（循环）*/
		this.IdleDubbing=0;
		/**指定动作延迟多少毫秒后播放指定特效*/
		this.ActEffect=null;
		/**在动画中的挂点播放指定的特效*/
		this.ParticlePosition=null;
		/**播放攻击动作后，炮弹出现的延迟时间*/
		this.BombDelay=0;
		/**默认出生动画，一般为born，无出生动画直接进入idle。*/
		this.DefaultBornAnimation=0;
		/**出生特效，填写t_s_playing_effect_performace表中的ID，没有特效填写0*/
		this.BornEffect=0;
	}

	__class(NpcPerformanceVO,'entity.NpcPerformanceVO');
	return NpcPerformanceVO;
})()


//class entity.NpcVO
var NpcVO=(function(){
	function NpcVO(){
		/**NPCID*/
		this.ID=0;
		/**表现ID 对应npc_performamce表头*/
		this.DisplayID=0;
		/**说话ID 对应npc_talk表头*/
		this.TalkID=0;
		/**技能ID*/
		this.SkillID=0;
		/**被动技能ID*/
		this.PassiveKillID=0;
		/**阵营 */
		this.TeamFlag=0;
		/**性别0=无性别 1=男 2=女" */
		this.Sex=0;
		/**等级 */
		this.Level=0;
		/**种族 */
		this.Ethnicity=0;
		/**阶次 */
		this.Type=0;
		/***/
		this.LivingTurns=0;
		/**NPC标志 */
		this.Tag=0;
		/**攻击 */
		this.Attack=0;
		/**防御 */
		this.Defence=0;
		/**穿透 */
		this.Penetration=0;
		/**速度 */
		this.Agility=0;
		/**爆击 */
		this.Critical=0;
		/**行动力，用于控制出手速度 */
		this.ActionPoint=0;
		/**每轮开始时，行动力恢复点数 */
		this.ActionPointRestore=0;
		/**炮弹准确率 */
		this.HitRate=0;
		/**AI脚本ID */
		this.AIScirpt=null;
		/**NPC的逻辑框体大小 */
		this.AABB=null;
		/**NPC移动时的框体大小。 */
		this.MovingAABB=null;
		/**开炮点所在的位置。 */
		this.FirePoint=0;
		/**X,Y,W,H：矩形范围。 */
		this.MeleeRange=null;
		/**移动方式。 */
		this.MovingType=0;
		/**移动速度。 */
		this.MovingSpeed=0;
		/**移动范围。 */
		this.MovingRange=0;
		/**死亡时掉落。 */
		this.DropID=0;
		/**亡时掉落的经验数量。 */
		this.Exp=0;
		/**死亡时掉落的银币数量。 */
		this.Silver=0;
		/**死亡时掉落的金币数量。 */
		this.Gold=0;
		/**死亡时掉落的钻石数量。 */
		this.Diamond=0;
		/**获得掉落的对象。 */
		this.OwnerType=0;
		/**是否加入战斗。1。 */
		this.JoinFight=0;
		/**死亡时召唤炮弹并立即爆炸 */
		this.DeadEffect=null;
		/**NPC默认攻击动作 */
		this.DefaultAttack=null;
		/**默认延迟。 */
		this.DefaultDelay=0;
		/**用于固定角色层级，最底层为1，高层级覆盖低层级。 */
		this.DisplayPriority=0;
		/**血量 */
		this.HP=0;
		/**怪物血条相对怪物注册点偏位置。 */
		this.HPPosition=0;
		/**怪物冒泡对话相对注册点偏移位置。 */
		this.DialogPosition=0;
		/**对焦镜头缩放，该NPC回合开始时，对焦该npc的镜头缩放大小，（对焦和缩放是同时进行的），填0为默认100。 */
		this.FocusViewScale=0;
		/**对焦偏移，该NPC回合开始时，焦点相对于原焦点的偏移。 */
		this.FocusOffset=0;
		/**是否能被击飞 */
		this.CanKnock=0;
		/**免疫buffTag\n多个用|分隔\n表：t_s_buffer里面的tag */
		this.ImmuneBuff=null;
		/**炮弹ID\nNPC调用的炮弹类型\n102500018=核弹自爆兵专用\nt_s_bomb表 */
		this.BombID=0;
	}

	__class(NpcVO,'entity.NpcVO');
	return NpcVO;
})()


/**
*特权
*@author shuhao.li
*/
//class entity.PrivilegeVO
var PrivilegeVO=(function(){
	function PrivilegeVO(){
		/**自定义ID **/
		this.Id=0;
		/**主类型（1、月卡，2、vip） **/
		this.MasterType=0;
		/**特权类型 **/
		this.SonType=0;
		/**等级 **/
		this.Level=0;
		/**参数1 **/
		this.Param1=0;
		/**参数2 **/
		this.Param2=0;
		/**参数3 **/
		this.Param3=null;
	}

	__class(PrivilegeVO,'entity.PrivilegeVO');
	return PrivilegeVO;
})()


//class entity.PveVO
var PveVO=(function(){
	function PveVO(){
		/**关卡Id*/
		this.ID=0;
		/**回合奖励[{id,count}]*/
		this.RewardTurn=null;
		/**普通奖励[{id,count}]*/
		this.Reward=null;
		/**怪物介绍*/
		this.MonsterDesc=null;
		/**推荐卡牌*/
		this.CardDesc=null;
	}

	__class(PveVO,'entity.PveVO');
	return PveVO;
})()


//class entity.PvpVO
var PvpVO=(function(){
	function PvpVO(){
		/**唯一ID 7开头为PVP，第4位为段位*/
		this.ID=0;
		/**PVP段位类型0天梯1乱斗 */
		this.Type=0;
		/**段位，例如：1阶，填写1*/
		this.Division=0;
		/**段位对应最小杯数*/
		this.MinTrophy=0;
		/**段位对应最大杯数*/
		this.MaxTrophy=0;
		/**胜利获得的金币*/
		this.Gold=0;
		/**计算玩家胜利获得的杯数的值*/
		this.WinK=0;
		/**计算玩家失败减少的杯数的值*/
		this.LoseK=0;
		/**段位解锁技能，多个技能用|分开*/
		this.SkillID=null;
		/**地图，填写scene表ID；\r\n多张地图则填写ID，权重|ID，权重*/
		this.SceneID=null;
		/**段位对应的Icon*/
		this.Icon=null;
		/**匹配机器人超时时间*/
		this.RobotTimeout=0;
		/**匹配超时时，敌方机器人ID*/
		this.RobotTimeoutID=0;
		/**当玩家连负时，一定匹配机器人*/
		this.RobotWarm=0;
		/**温暖局时，敌方机器人ID*/
		this.RobotWarmID=0;
		/**场景物件ID，填写ID|ID*/
		this.SceneArticleID=null;
		/**瞄准线长度，此处为瞄准线上点的个数，填写个数人*/
		this.AuxiliaryLineLength=0;
		/**即将获胜的积分*/
		this.SoonWinScore=0;
		/**获胜积分*/
		this.WinScore=0;
	}

	__class(PvpVO,'entity.PvpVO');
	return PvpVO;
})()


//class entity.QuestConditionVO
var QuestConditionVO=(function(){
	function QuestConditionVO(){
		// 任务条件ID
		this.ConditionId=null;
		// 任务ID
		this.QuestId=null;
		// 条件类型
		this.Type=0;
		// 奖励领取方式(0-单次，1-每日重置，2-每周重置)
		this.GetType=0;
		// ??
		this.Rewards=null;
		// 条件值1
		this.Value1=0;
		// 条件值2
		this.Value2=0;
		// 条件值3
		this.Value3=0;
		// 额外参数字符串
		this.ParamStr=null;
		// 是否领取过奖励
		this.IsGet=false;
		this.NextConditionId
	}

	__class(QuestConditionVO,'entity.QuestConditionVO');
	return QuestConditionVO;
})()


//class entity.QuestVO
var QuestVO=(function(){
	function QuestVO(){
		// 任务ID
		this.QuestId=null;
		// 任务类型(1-成就,2-任务,3-每日活跃,4-周活跃)
		this.Type=0;
		// 任务名称
		this.QuestName=null;
		// 任务描述
		this.QuestDescribe=null;
		// 排序值
		this.Order=0;
		// 图标资源ID
		this.Icon=null;
		// 跳转的界面
		this.TargetScene=0;
		// ***
		this.AvailableList={};
		// ***
		this.ReceivedList={};
		// ***
		this.ConditionList=[];
		// ***
		this.ValueList={};
	}

	__class(QuestVO,'entity.QuestVO');
	var __proto=QuestVO.prototype;
	__getset(0,__proto,'AvailableListLength',function(){
		var length=0;
		var value;
		for(var $each_value in this.AvailableList){
			value=this.AvailableList[$each_value];
			if (value===true){
				length++;
			}
		}
		return length;
	});

	__getset(0,__proto,'ReceivedListLength',function(){
		var length=0;
		var value;
		for(var $each_value in this.ReceivedList){
			value=this.ReceivedList[$each_value];
			if (value===true){
				length++;
			}
		}
		return length;
	});

	__getset(0,__proto,'sort',function(){
		if (this.ReceivedListLength===this.ConditionList.length){
			return this.Order+2000;
		}
		if (this.AvailableListLength==0){
			return this.Order+1000;
		}
		if (this.AvailableListLength > 0){
			return this.Order;
		}
		return this.Order;
	});

	return QuestVO;
})()


//class entity.RankVO
var RankVO=(function(){
	function RankVO(){
		this.ID=0;
		this.Remark=null;
		this.Division=0;
		this.StarNum=0;
		this.Star=0;
		this.Score=0;
		this.MinScore=0;
		this.TotalScore=0;
		this.Name=null;
		this.Index=0;
	}

	__class(RankVO,'entity.RankVO');
	return RankVO;
})()


//class entity.RewardVO
var RewardVO=(function(){
	function RewardVO(){
		this.ID=0;
		this.Type=0;
		this.Ranking=0;
		this.Rewards=null;
	}

	__class(RewardVO,'entity.RewardVO');
	return RewardVO;
})()


//class entity.SceneSupplyUpdateVO
var SceneSupplyUpdateVO=(function(){
	function SceneSupplyUpdateVO(){
		/**补给方案的ID； */
		this.ID=0;
		/**补给ID */
		this.SceneSupplyID=null;
		/**该类补给最大数目 */
		this.SupplyCountLimit=0;
		/**补给生成模式 */
		this.SupplyUpdateType=0;
		/**补给生成事件 */
		this.SupplyEvent=0;
		/**补给数量： */
		this.SupplyAmount=0;
		/**补给点生成范围： */
		this.SupplyRadius=null;
		/**边界最小距离 */
		this.SupplyRadiusLimit=null;
		/**最小间隔 */
		this.SupplyRadiusDistance=0;
	}

	__class(SceneSupplyUpdateVO,'entity.SceneSupplyUpdateVO');
	return SceneSupplyUpdateVO;
})()


//class entity.SceneSupplyVO
var SceneSupplyVO=(function(){
	function SceneSupplyVO(){
		/**补给ID */
		this.ID=0;
		/**补给资源文件 */
		this.SupplyResource=null;
		/**补给道具出生特效 */
		this.SupplyEffect=null;
		/**补给道具的死亡特效，读取playing_effect_performance */
		this.SupplyDieEffect=null;
		/**补给道具存在回合数 */
		this.Duration=0;
		/**补给获取类型： */
		this.SupplyReceiveEvent=null;
		/**补给碰撞矩形： */
		this.SupplyHitArea=null;
		/**获取补给时给获取者添加的buffID： */
		this.SupplyAddBuff=null;
		/**补给道具被击中特效*/
		this.SupplyHit=null;
		/**补给道具持续状态*/
		this.SupplyIdle=null;
	}

	__class(SceneSupplyVO,'entity.SceneSupplyVO');
	return SceneSupplyVO;
})()


//class entity.SceneVO
var SceneVO=(function(){
	function SceneVO(){
		/**地图ID*/
		this.ID=0;
		/**场景名字*/
		this.Name=null;
		/**场景地图资源，*/
		this.SceneResource=null;
		/**每回合时长*/
		this.Timeout=0;
		/**最小风力*/
		this.WindMin=0;
		/**最大风力*/
		this.WindMax=null;
		/**取Scenearticle 固定陷阱、补给ID */
		this.SceneArticleID=0;
		/**"背景音乐 取sound表"*/
		this.SoundID=0;
	}

	__class(SceneVO,'entity.SceneVO');
	return SceneVO;
})()


/**
*赛季奖励数据
*/
//class entity.SeasonRewardVO
var SeasonRewardVO=(function(){
	function SeasonRewardVO(){
		/**唯一ID*/
		this.ID=0;
		this.Remark=null;
		this.Division=0;
		this.SeasonTimes=0;
		/**升段需要星级总数 */
		this.StarNum=0;
		/**赛季结算宝箱和钻石，填ItemID|数量，ItemID|数量 */
		this.SeasonReward=null;
		this.SeasonChange=0;
		this.SeasonStarNum=0;
	}

	__class(SeasonRewardVO,'entity.SeasonRewardVO');
	return SeasonRewardVO;
})()


//class entity.SeasonTimeVO
var SeasonTimeVO=(function(){
	function SeasonTimeVO(){
		this.ID=0;
		this.SeasonTime=0;
		this.SeasonStar=null;
		this.SeansonEnd=null;
	}

	__class(SeasonTimeVO,'entity.SeasonTimeVO');
	return SeasonTimeVO;
})()


//class entity.SevenDayTargetConditionVO
var SevenDayTargetConditionVO=(function(){
	function SevenDayTargetConditionVO(){
		/**ID **/
		this.targetConditionId=null;
		/**七日目标类型 **/
		this.targetType=0;
		/**目标值 **/
		this.goalNum=0;
		/**哪天的目标 **/
		this.coalDay=0;
		/**目标发生的事件类型 **/
		this.evenType=0;
		/**奖励 **/
		this.rewards=null;
		/**目标描述 **/
		this.desc=null;
		/**排序值 **/
		this.order=0;
		/**是否开启 **/
		this.isOpen=false;
		/**对应的languageId **/
		this.languageId=0;
		/**完成值 **/
		this.currentNum=0;
		/**是否领取**/
		this.isGet=false;
	}

	__class(SevenDayTargetConditionVO,'entity.SevenDayTargetConditionVO');
	return SevenDayTargetConditionVO;
})()


//class entity.SevenDayTargetVO
var SevenDayTargetVO=(function(){
	function SevenDayTargetVO(){
		/**ID **/
		this.targetId=null;
		/**类型 **/
		this.type=0;
		/**目标描述 **/
		this.desc=null;
		/**排序值 **/
		this.order=0;
		/**是否开启 **/
		this.isOpen=0;
		/**标记哪些天会出现**/
		this.existNum=null;
		/**对应的languageId **/
		this.languageId=0;
	}

	__class(SevenDayTargetVO,'entity.SevenDayTargetVO');
	return SevenDayTargetVO;
})()


//class entity.ShareGiftVO
var ShareGiftVO=(function(){
	function ShareGiftVO(){
		/**ID*/
		this.ID=0;
		this.ItemId=0;
		this.ItemNum=0;
	}

	__class(ShareGiftVO,'entity.ShareGiftVO');
	return ShareGiftVO;
})()


/**
*分享数据
*@author baohua.chen
*
*/
//class entity.ShareInfoVO
var ShareInfoVO=(function(){
	function ShareInfoVO(){
		/**分享ID**/
		this.shareId=0;
		/**分享场景类型**/
		this.sceneType=0;
		/**分享标题**/
		this.titleStr=null;
		/**分享图片地址**/
		this.imageURL=null;
		/**分享出去所带得参数；格式key=value&key1=value1...**/
		this.pathURL=null;
		/**是否指定分享到群**/
		this.isGroup=false;
	}

	__class(ShareInfoVO,'entity.ShareInfoVO');
	return ShareInfoVO;
})()


/**
*商城数据值对象
*/
//class entity.ShopVO
var ShopVO=(function(){
	function ShopVO(){
		/**id，第三位代表类型*/
		this.ID=0;
		/**Name*/
		this.Name=null;
		/**商品类型，1.宝箱 2钻石 3卡牌 4时装 5金币 6特惠活动*/
		this.Type=0;
		/**性别限制，0.女 1男-1无限制*/
		this.SexLimit=0;
		/**阶数，-1与阶数无关*/
		this.Degree=0;
		/**道具ID,数量|道具ID,数量*/
		this.ShopItem=null;
		this.PresentItem=null;
		/**货币类型，1金币 2宝石 3人民币 */
		this.CurrencyType=0;
		/**首次购买价格*/
		this.Price=0;
		/**"首次购买是否双倍0不是，1是"*/
		this.IsDouble=0;
		/**价格增量*/
		this.AddPrice=0;
		/**限购数量*/
		this.LimitValue=0;
		this.itemSkin=null;
	}

	__class(ShopVO,'entity.ShopVO');
	return ShopVO;
})()


//class entity.SkillGroupPerformanceVO
var SkillGroupPerformanceVO=(function(){
	function SkillGroupPerformanceVO(){
		/**技能ID*/
		this.ID=0;
		/**显示名称\n描述表ID */
		this.Name=0;
		/**特效描述ID*/
		this.EffectDescription=0;
		/**技能ID，多个*/
		this.SkillID=null;
		this.GroupDescription=null;
		this.Type=0;
		/**是否显示推荐 **/
		this.ShowIcon=false;
		this.isUser=false;
		this.isHas=false;
	}

	__class(SkillGroupPerformanceVO,'entity.SkillGroupPerformanceVO');
	return SkillGroupPerformanceVO;
})()


/**
*技能表现配置表数据项
**/
//class entity.SkillPerformanceVO
var SkillPerformanceVO=(function(){
	function SkillPerformanceVO(){
		/**技能ID*/
		this.SkillID=0;
		/**技能名称*/
		this.Name=null;
		/**显示名称\n描述表ID */
		this.NameDisplay=0;
		/**图标*/
		this.Icon=null;
		/**描述 */
		this.Description=null;
		/**产出类型：1，则以ObtainedID生效2，则以Mission生效。"*/
		this.OrgrinType=0;
		/**获取条件的描述*/
		this.ObtainedID=0;
		/**来源的关卡,，调用Mission*/
		this.Mission=0;
		/**技能动作名字*/
		this.ActName=null;
		/**技能音效sound表ID*/
		this.SoundID=0;
		/**武器Avatar资源名 (只有普攻需要填)*/
		this.Avatar=0;
		/**动作类型编号（1为投掷，3为发射）\n（只有普攻需要填）*/
		this.WeaponType=0;
		this.AttributeDescription=null;
		this.GroupDescription=null;
	}

	__class(SkillPerformanceVO,'entity.SkillPerformanceVO');
	return SkillPerformanceVO;
})()


/**
*技能配置表数据项
**/
//class entity.SkillVO
var SkillVO=(function(){
	function SkillVO(){
		/**技能ID*/
		this.SkillID=0;
		/**技能类型*/
		this.Type=0;
		/**技能子类型*/
		this.SubType=0;
		/**"是否是攻击技能0，非攻击技能1，攻击技能"*/
		this.IsAttackSkill=0;
		/**技能名称*/
		this.Name=null;
		/**技能表现表IDt_s_skill_performance */
		this.Display=0;
		/**"下一等级ID填0表示已达最大等级" */
		this.NextSkill=0;
		/**"使用者0，玩家；1，NPC。"*/
		this.User=0;
		/**技能等级*/
		this.Level=0;
		/**技能等级为1时的ID*/
		this.BasicSkill=0;
		/**升级下一级技能所需消耗技能卡*/
		this.CostSkillPoint=0;
		/**战斗力*/
		this.FightingForce=0;
		/**升级下一级技能所需消耗金币*/
		this.CostGold=0;
		/**升级获得经验*/
		this.Exp=0;
		/**品质\n0普通、1稀有、2史诗、3传说*/
		this.Quality=0;
		/**兼容\n本技能兼容的分类\n使用了该技能以后，还能使用的技能类型，用|分隔\n都不兼容则填-1\n */
		this.Compatible=0;
		/**冷却时间\n施放技能间隔，施放技能的回合后开始每到自身回合结束-1 */
		this.Cooldown=0;
		/**使用技能需要消耗消耗行动力数量 */
		this.CostActPoint=0;
		/**消耗怒气 */
		this.CostAnger=0;
		/**每回合使用次数限定 */
		this.TimesPerTurn=0;
		/**状态 可能填写多个|分隔buffer表 无则填0*/
		this.Buff=0;
		/**对应炮弹ID"*/
		this.Bomb=0;
		/**是否结束回合\n使用技能是否立即结束回合，如充能*/
		this.IsEndTurn=0;
		/**开启竞技场 默认开启填-1 训练营填 0竞技场填具体阶数*/
		this.Open=0;
		/**延迟值 */
		this.Delay=0;
		/**"技能自身所属的分类
		1,替换武器
		2,跳过回合
		3,必杀技
		4,旧
		5,特殊
		0,常规"
		*/
		this.MutualExclusion=0;
		/**"技能Tag分类用于AI调用
		可配置多项，竖线分割
		（主动技能
		0，永久被动技能：常驻生效，属性值直接添加在角色面板或进入战斗场景后自动施加buff--目前无效
		1，被动技能：选定后，进入战斗场景后自动施加buff
		2，主动技能：选定后，需使用才可生效
		3，必杀技：始终与武器捆绑
		4，公共技能
		5，道具技能
		6，宠物技能-非治疗
		7，未知
		8，未知
		9：宠物技能-治疗类"
		*/
		this.UseType=0;
		/**杀伤权重 */
		this.Damage=0;
		/**挖坑权重 */
		this.Dig=0;
		/**技能在按钮上的次序 */
		this.ButtonOrder=0;
		/**学习此技能消耗的贡献 */
		this.CostDonate=0;
		/**战斗中可使用次数 填-1为无限次使用" */
		this.FightUseCount=0;
		/**角色技能专用，是否允许战前携带 */
		this.CanHold=0;
		/**道具技能专用。在客户端选择技能时的排序。 */
		this.Sort=0;
		this.slot=0;
		this.IsHave=false;
		this.skillCard=0;
		this.isNew=false;
		/**卡牌显示得数量{key|value}**/
		this.cardBtnInfo=null;
	}

	__class(SkillVO,'entity.SkillVO');
	var __proto=SkillVO.prototype;
	/**技能图标\n填写图标文件名*/
	__getset(0,__proto,'Icon',function(){
		var skillPer=SkillModel.getSkillPerformanceBySkillId(this.Display);
		if (skillPer){
			return skillPer.Icon=="0" ? null :skillPer.Icon;
		}
		return null;
	});

	return SkillVO;
})()


/**
*声音配置数据
*/
//class entity.SoundVO
var SoundVO=(function(){
	function SoundVO(){
		/**唯一ID 4开头为音效，第4为表示是否循环 */
		this.ID=0;
		/**音效名称 */
		this.Name="";
		/**音效资源 */
		this.Resource="";
		/**是否循环
		*1：循环
		*2：不循环 */
		this.Circulate=1;
		/**循环时间
		1：永久
		2：次数循环
		不循环不填 */
		this.CirculateTime=1;
		/**循环次数 */
		this.Time=1;
		/**声音类型：
		1.背景音乐
		2.音效
		3.人声
		4.可以同时播放的音效*/
		this.SoundType=1;
		/**音量 */
		this.Volume=1;
	}

	__class(SoundVO,'entity.SoundVO');
	return SoundVO;
})()


/**
*商店物品类型
*@author rick.li
*/
//class entity.SpecialShopVO
var SpecialShopVO=(function(){
	function SpecialShopVO(){
		/**ID **/
		this.Id=0;
		/**物品类型（1：出售列表，2：每日推荐） **/
		this.Type=0;
		/**道具ID **/
		this.ItemId=0;
		/**道具名称 **/
		this.ItemName=null;
		/**道具数量 **/
		this.ItemCount=0;
		/**货币类型 **/
		this.CurrencyType=0;
		/**价格 **/
		this.Price=0;
		/**概率 **/
		this.Random=0;
		/**所需段位 **/
		this.Degree=0;
	}

	__class(SpecialShopVO,'entity.SpecialShopVO');
	return SpecialShopVO;
})()


//class entity.UpgradeVO
var UpgradeVO=(function(){
	function UpgradeVO(){
		this.Id=0;
		this.Type=0;
		this.Level=0;
		this.Exp=0;
	}

	__class(UpgradeVO,'entity.UpgradeVO');
	return UpgradeVO;
})()


//class manager.ConfigMgr
var ConfigMgr=(function(){
	function ConfigMgr(){}
	__class(ConfigMgr,'manager.ConfigMgr');
	ConfigMgr.init=function(configUrl,onInitCompleteHandler){
		console.time("配置加载及解析时间");
		Laya.loader.load(configUrl,Handler.create(ConfigMgr,onComplete),null,"arraybuffer",1,false);
		function onComplete (data){
			CLog.log("加载"+configUrl+"成功");
			var compress=new Uint8Array(data);
			var uncompress=new Zlib.Inflate(compress).decompress();
			var msg=com.road.ddt.proto.TableTemplateListMsg;
			var tables=msg.decode(uncompress);
			var table;
			ConfigMgr._configDict={};
			for (var i=0,n=tables.tableTemplate.length;i < n;i++){
				table=tables.tableTemplate[i];
				ConfigMgr._configDict[table.tableName]=table;
			}
			if(onInitCompleteHandler !=null)onInitCompleteHandler.run();
		}
	}

	ConfigMgr.getJsonConfigByName=function(configName,isClear){
		(isClear===void 0)&& (isClear=true);
		var objs=[];
		var table=ConfigMgr._configDict[configName];
		if (isClear){
			var isDeleteSuc=delete ConfigMgr._configDict[configName];
		}
		if (table){
			var row;
			var obj;
			for (var i=0,n=table.rowData.length;i < n;i++){
				row=table.rowData[i];
				obj={};
				for (var j=0,m=table.columnName.length;j < m;j++){
					obj[table.columnName[j]]=ConfigMgr.convertValue(row.columnVal[j],table.columnType[j]);
				}
				objs.push(obj);
			}
		}
		return objs;
	}

	ConfigMgr.convertValue=function(value,columnType){
		switch(columnType){
			case "TINYINT":{
					return value=="1";
				}
			case "SMALLINT UNSIGNED":
			case "SMALLINT":
			case "INTEGER UNSIGNED":
			case "INTEGER":
			case "INT UNSIGNED":
			case "INT":{
					return int(value);
				}
			case "FLOAT":
			case "BIGINT":{
					return Number(value);
				}
			case "DATETIME":
			case "VARCHAR":
			default :{
					return value;
				}
			}
	}

	ConfigMgr._configDict=null;
	ConfigMgr._parseDict={};
	return ConfigMgr;
})()


//class manager.DataMgr
var DataMgr=(function(){
	function DataMgr(){
		this.LoginOver=false;
	}

	__class(DataMgr,'manager.DataMgr');
	var __proto=DataMgr.prototype;
	__proto.init=function(){
		ChatMgr.ins.init();
		PveMgr.ins.init();
		CampaignMgr.ins.init();
		InvitePayMgr.ins.init();
	}

	__proto.initOver=function(){
		if (this.LoginOver){
			return;
		}
		this.LoginOver=true;
		ChatMgr.ins.initOver();
		PveMgr.ins.initOver();
		CampaignMgr.ins.initOver();
		InvitePayMgr.ins.initOver();
		LoginControl.instance.showShareBtn();
	}

	__getset(1,DataMgr,'ins',function(){
		if (DataMgr._ins==null){
			DataMgr._ins=new DataMgr();
		}
		return DataMgr._ins;
	});

	DataMgr._ins=null;
	return DataMgr;
})()


/**
*游戏滤镜大全
*@author chengwen.yi
*
*/
//class laya.filters.FilterUtils
var FilterUtils=(function(){
	function FilterUtils(){}
	__class(FilterUtils,'laya.filters.FilterUtils');
	FilterUtils.newRGBAFilter=function(red,green,blue,alpha){
		(red===void 0)&& (red=255);
		(green===void 0)&& (green=0);
		(blue===void 0)&& (blue=0);
		(alpha===void 0)&& (alpha=1);
		return new ColorFilter([
		red/255,0,0,0,0,
		0,green/255,0,0,0,
		0,0,blue/255,0,0,
		0,0,0,alpha,0]);
	}

	FilterUtils.newColorFilter=function(color,alpha){
		(alpha===void 0)&& (alpha=1);
		var red=(color&0xFF0000)>>16;
		var green=(color&0x00FF00)>>8;
		var blue=(color&0x0000FF);
		return FilterUtils.newRGBAFilter(red,green,blue,alpha);
	}

	FilterUtils.newColorFilter_Alpha=function(alphaColor){
		var alpha=(alphaColor&0xFF000000)>>32;
		var red=(alphaColor&0xFF0000)>>16;
		var green=(alphaColor&0x00FF00)>>8;
		var blue=(alphaColor&0x0000FF);
		return FilterUtils.newRGBAFilter(red,green,blue,alpha);
	}

	FilterUtils.rotateToGBR=function(){
		return new ColorFilter([
		0,1,0,0,0,
		0,0,1,0,0,
		1,0,0,0,0,
		0,0,0,1,0]);
	}

	FilterUtils.rotateToBRG=function(){
		return new ColorFilter([
		0,0,1,0,0,
		1,0,0,0,0,
		0,1,0,0,0,
		0,0,0,1,0]);
	}

	FilterUtils.invertRG=function(){
		return new ColorFilter([
		0,1,0,0,0,
		1,0,0,0,0,
		0,0,1,0,0,
		0,0,0,1,0]);
	}

	FilterUtils.invertRB=function(){
		return new ColorFilter([
		0,0,1,0,0,
		0,1,0,0,0,
		1,0,0,0,0,
		0,0,0,1,0]);
	}

	FilterUtils.invertGB=function(){
		return new ColorFilter([
		1,0,0,0,0,
		0,0,1,0,0,
		0,1,0,0,0,
		0,0,0,1,0]);
	}

	FilterUtils.redFilter=function(){
		return new ColorFilter([
		1,0,0,0,0,
		0,0,0,0,0,
		0,0,0,0,0,
		0,0,0,1,0]);
	}

	FilterUtils.greenFilter=function(){
		return new ColorFilter([
		0,0,0,0,0,
		0,1,0,0,0,
		0,0,0,0,0,
		0,0,0,1,0]);
	}

	FilterUtils.blueFilter=function(){
		return new ColorFilter([
		0,0,0,0,0,
		0,0,0,0,0,
		0,0,1,0,0,
		0,0,0,1,0]);
	}

	FilterUtils.darkFilter=function(value){
		(value===void 0)&& (value=0.5);
		return new ColorFilter(
		[ value,0,0,0,0,
		0,value,0,0,0,
		0,0,value,0,0,
		0,0,0,1,0]);
	}

	return FilterUtils;
})()


//class laya.RegComponents
var RegComponents=(function(){
	function RegComponents(){}
	__class(RegComponents,'laya.RegComponents');
	RegComponents.init=function(){
		View.regComponent("GText",GText);
		View.regComponent("GButton",GButton);
		View.regComponent("GImage",GImage);
		View.regComponent("GImageRGBA",GImageRGBA);
		View.regComponent("GAnimation",GAnimation);
		GAnimationPlayer
		laya.RegComponents.changeViewStack();
		laya.RegComponents.changeList();
	}

	RegComponents.changeImage=function(){}
	RegComponents.changeViewStack=function(){
		var proto=ViewStack.prototype;
		Object.defineProperty(proto,"index",{
			get:function (){
				return this.selectedIndex;
			},
			set:function (value){
				this.selectedIndex=value;
			},
			enumerable:false
		});
	}

	RegComponents.changeList=function(){
		var proto=List.prototype;
		proto.changeCellState=function (cell,visable,index){
			var selectBox=cell.getChildByName("selectBox");
			if (selectBox){
				if (!this.hasOwnProperty("autoSelectEnable")|| this.autoSelectEnable)this.selectEnable=true;
				selectBox.visible=visable;
				selectBox.index=index;
			}
		}
	}

	return RegComponents;
})()


//class laya.test.UIAdjust
var UIAdjust=(function(){
	function UIAdjust(){
		this.stage=null;
		this.uiAdjustSpi=null;
		this.RedFrame=null;
		this.BlueFrame=null;
		this.TextBg=null;
		this.ContentText=null;
		this.curTouchTarget=null;
		this._isOpen=false;
		this._upDownTargetList=[];
		this.viewArr=[];
		this.isInitUI=false;
		this.isOpenAniView=false;
		this.hasInitTestView=false;
		this.ZeroPoint=new Point();
		this.tempRect=new Rectangle();
	}

	__class(UIAdjust,'laya.test.UIAdjust');
	var __proto=UIAdjust.prototype;
	__proto.initUI=function(){
		if(!this.isInitUI){
			this.uiAdjustSpi=new Sprite();
			this.RedFrame=new Image("assets/textrue/test/FrameRed.png");
			this.RedFrame.sizeGrid="2,2,2,2";
			this.BlueFrame=new Image("assets/textrue/test/FrameBlue.png");
			this.BlueFrame.sizeGrid="2,2,2,2";
			this.TextBg=new Image("assets/textrue/test/TextBg.png");
			this.ContentText=new Text();
			var fullWidth=0;
			fullWidth=Browser.width;;
			if(fullWidth > 0){}
				else{
				fullWidth=Laya.stage.desginWidth;
			}
			fullWidth=1136;
			this.TextBg.width=fullWidth;
			this.TextBg.height=150;
			this.ContentText.width=fullWidth;
			this.ContentText.height=150;
			this.ContentText.align="center";
			this.ContentText.fontSize=26;
			this.ContentText.strokeColor="#FFFC00";
			this.ContentText.color="#FF0000";
			this.uiAdjustSpi.addChild(this.RedFrame);
			this.uiAdjustSpi.addChild(this.TextBg);
			this.uiAdjustSpi.addChild(this.ContentText);
			this.isInitUI=true;
		}
	}

	//ResizeMgr.scaleValue;
	__proto.init=function($stage,$isOpen){
		this.stage=$stage;
		this.isOpen=$isOpen;
		this.stage.on("keyup",this,this.keyUpHandler);
	}

	__proto.mouseMoveHandler=function(e){
		if(e.ctrlKey){
			var target=e.target;
			this.curTouchTarget=target;
			this.stage.addChild(this.uiAdjustSpi);
			this._upDownTargetList.length=0;
			this.updateView(this.curTouchTarget);
			e.stopPropagation();
		}
	}

	__proto.keyUpHandler=function(e){
		if(this.isOpen){
			if(e.keyCode==33){
				if(this._upDownTargetList.length > 0){
					var lastTarget=this._upDownTargetList.pop();
					this.updateView(lastTarget);
					this.curTouchTarget=lastTarget;
				}
			}
			else if(e.keyCode==34){
				var thisParent=(this.curTouchTarget).parent;
				if(thisParent){
					this.updateView(thisParent);
					this._upDownTargetList.push(this.curTouchTarget);
					this.curTouchTarget=thisParent;
				}
			}
			else if(e.keyCode==38){
				this.curTouchTarget.y-=(e.shiftKey ? 10 :1);
				this.updateView(this.curTouchTarget);
			}
			else if(e.keyCode==40){
				this.curTouchTarget.y+=(e.shiftKey ? 10 :1);
				this.updateView(this.curTouchTarget);
			}
			else if(e.keyCode==37){
				this.curTouchTarget.x-=(e.shiftKey ? 10 :1);
				this.updateView(this.curTouchTarget);
			}
			else if(e.keyCode==39){
				this.curTouchTarget.x+=(e.shiftKey ? 10 :1);
				this.updateView(this.curTouchTarget);
			}
		}
		if(e.keyCode==113){
			this.isOpen=!this.isOpen;
		}
		else if(e.keyCode==115){
			if(!this.isOpenAniView){
				UIMgr.ins.openView("AnimationTest");
				console.log("打开动作测试界面");
			}
			else{
				UIMgr.ins.closeView("AnimationTest");
				console.log("关闭动作测试界面");
			}
			this.isOpenAniView=!this.isOpenAniView;
		}
		else if(e.keyCode==118){
			if(DebugPanel.I==null){
				DebugPanel.init(false,"#eeeeee");
			}
			else{
				if(DebugPanel.I.div.style.visibility=="visible"){
					DebugPanel.I.div.style.visibility="hidden";
				}
				else{
					DebugPanel.I.div.style.visibility="visible";
				}
			}
			CheckData.checkLanguageHtmlFormat();
		}
		else if(e.keyCode==120){}
	}

	// }
	__proto.updateView=function(target){
		this.ZeroPoint.x=0;
		this.ZeroPoint.y=0;
		this.ZeroPoint=target.localToGlobal(this.ZeroPoint,false);
		var globalX=this.ZeroPoint.x / this.curSalceValue;
		var globalY=this.ZeroPoint.y / this.curSalceValue;
		var noScaleW=target.width *this.curSalceValue;
		var noScaleH=target.height *this.curSalceValue;
		this.RedFrame.x=this.ZeroPoint.x;
		this.RedFrame.y=this.ZeroPoint.y;
		this.RedFrame.width=noScaleW;
		this.RedFrame.height=noScaleH;
		if(noScaleW==0 && noScaleH==0){
			this.BlueFrame.x=this.ZeroPoint.x;
			this.BlueFrame.y=this.ZeroPoint.y;
			this.tempRect.x=0;
			this.tempRect.y=0;
			this.tempRect.width=0;
			this.tempRect.height=0;
			this.tempRect=this.getMeasureRect(target,this.tempRect);
			var noScaleW2=this.tempRect.width *this.curSalceValue;
			var noScaleH2=this.tempRect.height *this.curSalceValue;
			this.BlueFrame.width=noScaleW2;
			this.BlueFrame.height=noScaleH2;
			if(!this.uiAdjustSpi.contains(this.BlueFrame))this.uiAdjustSpi.addChild(this.BlueFrame);
		}
		else{
			if(this.uiAdjustSpi.contains(this.BlueFrame))this.uiAdjustSpi.removeChild(this.BlueFrame);
		}
		this.viewArr.length=0;
		var varName="";
		var thisParent=target.parent;
		var tempObj;
		var key;
		var viewParent;
		if(thisParent && !(((thisParent instanceof laya.ui.View )))){
			for(key in thisParent){
				tempObj=thisParent[key];
				if(tempObj==target){
					varName=key;
					break ;
				}
			}
			while(thisParent.parent){
				if(((thisParent.parent instanceof laya.ui.View ))){
					viewParent=thisParent.parent;
					break ;
				}
				else{
					thisParent=thisParent.parent;
				}
			}
		}
		else{
			viewParent=thisParent;
		}
		for(key in viewParent){
			tempObj=viewParent[key];
			if(tempObj==target){
				varName=key;
				break ;
			}
			else if(((tempObj instanceof laya.display.Node ))){
				this.viewArr.push(tempObj);
			}
		}
		if(!varName){
			var isBreak=false;
			var view;
			for(var $each_view in this.viewArr){
				view=this.viewArr[$each_view];
				for(var key2 in view){
					tempObj=thisParent[key];
					if(tempObj==target){
						varName=key;
						isBreak=true;
						break ;
					}
				}
				if(isBreak)break ;
			}
		};
		var rect=target.getBounds();
		console.log(target,rect);
		var targetWidth=rect.width;
		var targetHeight=rect.height;
		this.ContentText.text="stageW:"+Laya.stage.width+",stageH:"+Laya.stage.height+",stageS:"+Laya.stage.scaleX+",bestFitW:"+ResizeMgr.bestFitWidth.toFixed(3)+",bestFitH:"+ResizeMgr.bestFitHeight.toFixed(3)+",scale:"+ResizeMgr.scaleValue+"\n"
		+"["+target.constructor.name+"]"+(varName ? varName :"")+"\n"
		+(target.name ? " name:"+target.name+"\n" :"")
		+" x:"+target.x.toFixed(1)+" y:"+target.y.toFixed(1)+"\n"
		+" width:"+targetWidth+" height:"+targetHeight+" scale:"+target.scaleX+"\n"
		+" globalX:"+globalX.toFixed(1)+" globalY:"+globalY.toFixed(1)+"\n"
		+" noScaleGlobalX:"+this.ZeroPoint.x.toFixed(1)+" noScaleGlobalY:"+this.ZeroPoint.y.toFixed(1)+"\n"
		+" noScaleW:"+noScaleW.toFixed(1)+" noScaleH:"+noScaleH.toFixed(1);
	}

	__proto.getMeasureRect=function(target,rect){
		if(!rect){
			rect=new Rectangle();
		}
		if(target.numChildren > 0){
			for (var i=target.numChildren-1;i >-1;i--){
				var comp=target.getChildAt(i);
				if (comp.visible){
					rect.x=Math.min(comp.x,rect.x);
					rect.y=Math.min(comp.y,rect.y);
					var compRect=comp.getBounds();
					rect.width=Math.max(comp.x+compRect.width *comp.scaleX,rect.width);
					rect.height=Math.max(comp.y+compRect.height *comp.scaleY,rect.height);
				}
			}
		}
		else{
			var targetRect=target.getBounds();
			rect.x=targetRect.x;
			rect.y=targetRect.y;
			rect.width=targetRect.width;
			rect.height=targetRect.height;
		}
		return rect;
	}

	__getset(0,__proto,'isOpen',function(){
		return this._isOpen;
		},function(value){
		if(this.stage){
			if(this._isOpen !=value){
				this._isOpen=value;
				if(this._isOpen){
					this.initUI();
					console.log("开启UI调节器");
					this.stage.addChild(this.uiAdjustSpi);
					this.uiAdjustSpi.zOrder=10000;
					this.stage.on("mousemove",this,this.mouseMoveHandler);
					Stat.hide();
				}
				else{
					console.log("关闭UI调节器");
					this.stage.removeChild(this.uiAdjustSpi);
					this.stage.off("mousemove",this,this.mouseMoveHandler);
					Stat.show();
				}
			}
		}
	});

	__getset(0,__proto,'curSalceValue',function(){
		return 1;
	});

	__getset(1,UIAdjust,'ins',function(){
		if (UIAdjust._ins==null){
			UIAdjust._ins=new UIAdjust();
		}
		return UIAdjust._ins;
	});

	UIAdjust._ins=null;
	return UIAdjust;
})()


/**
*配置文件
*@author weiqiang.huang
*
*/
//class net.data.ConfigFile
var ConfigFile=(function(){
	function ConfigFile(){}
	__class(ConfigFile,'net.data.ConfigFile');
	ConfigFile.WEB_HTTP="";
	ConfigFile.WEBSOCKET_HTTP="";
	ConfigFile.HTTP_HOST="";
	ConfigFile.HTTP_PORT="";
	ConfigFile.SOCKET_NAME="";
	ConfigFile.FONT="黑体";
	ConfigFile.SITE="";
	ConfigFile.LOGINSELECT="";
	ConfigFile.LOGIN="";
	ConfigFile.RES_HOST_URL="";
	ConfigFile.HTTP_ROOT_URL="";
	ConfigFile.SOCKET_HEND=0x71ab;
	ConfigFile.SOCKET_RESERVED_LEN=14;
	ConfigFile.ISREADCOOKIE=false;
	return ConfigFile;
})()


//class net.event.ResourcesEvent
var ResourcesEvent=(function(){
	function ResourcesEvent(){}
	__class(ResourcesEvent,'net.event.ResourcesEvent');
	ResourcesEvent.CONFIG_COMPLETE="config_complete";
	ResourcesEvent.MD5_COMPLETE="md5_complete";
	ResourcesEvent.GAMERES_COMPLETE="gameres_complete";
	ResourcesEvent.TEMPLATE_COMPLETE="template_complete";
	ResourcesEvent.NAMESLIB_COMPLETE="nameslib_complete";
	ResourcesEvent.GAME_COMPLETE="game_complete";
	return ResourcesEvent;
})()


//class net.proto.ProtoMgr
var ProtoMgr=(function(){
	function ProtoMgr(){}
	__class(ProtoMgr,'net.proto.ProtoMgr');
	ProtoMgr.init=function(){
		net.proto.ProtoMgr._writer=Laya.Browser.window.protobuf.Writer.create();
	}

	ProtoMgr.encode=function(msg){
		var buffer=msg.constructor.encode(msg,net.proto.ProtoMgr._writer).finish();
		net.proto.ProtoMgr._writer.reset();
		return buffer;
	}

	ProtoMgr.decode=function(msgCls,buffer){
		try{
			var msg=msgCls.decode(buffer);
			net.proto.ProtoMgr.setHasProperty(msg);
		}
		catch (error){
			console.error('proto decode error: '+error);
			return null;
		}
		return msg;
	}

	ProtoMgr.setHasProperty=function(msg){
		if (typeof (msg)=="object"){
			if (msg instanceof Array){
				for (var i_2=0,len=msg.length;i_2 < len;i_2++){
					net.proto.ProtoMgr.setHasProperty(msg[i_2]);
				}
			}
			else {
				var keys=Object.keys(msg);
				for (var i=0,key=null;i < keys.length;i++){
					key=keys[i];
					if (typeof (msg[key])=="object"){
						net.proto.ProtoMgr.setHasProperty(msg[key]);
						if (msg[key] instanceof Array){
							msg['has'+key.substring(0,1).toUpperCase()+key.substring(1)]=msg[key] && msg[key].length > 0;
						}
						else {
							msg['has'+key.substring(0,1).toUpperCase()+key.substring(1)]=msg[key] !=null;
						}
					}
					else {
						msg['has'+key.substring(0,1).toUpperCase()+key.substring(1)]=msg[key] !=null;
					}
				}
			}
		}
	}

	ProtoMgr.protoToByteArray=function(value){
		var strArr=new ByteArray();
		var arrayBuffer=Base64Tool.decode(value);
		strArr.writeArrayBuffer(arrayBuffer,0,arrayBuffer.length);
		strArr.position=0;
		return strArr;
	}

	ProtoMgr._writer=null;
	return ProtoMgr;
})()


/**
*颜色矩阵
*可以叠加具体的颜色 也可以设置亮度、对比、饱和、色相 滤镜，反相 已经对应的PS值
*@author chengwen.yi
*
*/
//class laya.filters.ColorMatrix extends Array
var ColorMatrix=(function(_super){
	function ColorMatrix(){
		ColorMatrix.__super.call(this);
		this.reset();
	}

	__class(ColorMatrix,'laya.filters.ColorMatrix',Array);
	var __proto=ColorMatrix.prototype;
	__proto.setRGBAMatrix=function(red,green,blue,alpha){
		(red===void 0)&& (red=255);
		(green===void 0)&& (green=0);
		(blue===void 0)&& (blue=0);
		(alpha===void 0)&& (alpha=1);
		this.copyMatrix([
		red/255,0,0,0,0,
		0,green/255,0,0,0,
		0,0,blue/255,0,0,
		0,0,0,alpha,0]);
	}

	__proto.setColorMatrix=function(color,alpha){
		(alpha===void 0)&& (alpha=1);
		var red=(color&0xFF0000)>>16;
		var green=(color&0x00FF00)>>8;
		var blue=(color&0x0000FF);
		this.copyMatrix([
		red/255,0,0,0,0,
		0,green/255,0,0,0,
		0,0,blue/255,0,0,
		0,0,0,alpha,0]);
	}

	__proto.updateValue=function(color,alpha,p_brightness,p_contrast,p_saturation,p_hue){
		(alpha===void 0)&& (alpha=1);
		(p_brightness===void 0)&& (p_brightness=0);
		(p_contrast===void 0)&& (p_contrast=0);
		(p_saturation===void 0)&& (p_saturation=0);
		(p_hue===void 0)&& (p_hue=0);
		var red=(color&0xFF0000)>>16;
		var green=(color&0x00FF00)>>8;
		var blue=(color&0x0000FF);
		this.setRGBAMatrix(red,green,blue,alpha);
		this.adjustBCSH_PS(p_brightness,p_contrast,p_saturation,p_hue);
	}

	/**
	*重置默认颜色
	*
	*/
	__proto.reset=function(){
		for (var i=0;i<ColorMatrix.LENGTH;i++){
			this[i]=ColorMatrix.IDENTITY_MATRIX[i];
		}
	}

	/**
	*反相
	*
	*/
	__proto.invert=function(){
		this.multiplyMatrix([-1,0,0,0,255,
		0,-1,0,0,255,
		0,0,-1,0,255,
		0,0,0,1,0]);
	}

	/**
	*设置 亮度、对比、饱和、色相
	*@param p_brightness 亮度 默认值0 取值范围[-1,1]
	*@param p_contrast 对比 默认值0 取值范围[-1,1]
	*@param p_saturation 饱和 默认值0 取值范围[-1,1]
	*@param p_hue 色相 默认值0 取值范围[-1,1]
	*
	*/
	__proto.adjustBCSH=function(p_brightness,p_contrast,p_saturation,p_hue){
		this.adjustHue(p_hue);
		this.adjustContrast(p_contrast);
		this.adjustBrightness(p_brightness);
		this.adjustSaturation(p_saturation);
	}

	/**
	*设置 亮度、对比、饱和、色相
	*@param p_brightness 亮度 默认值0 取值范围[-100,100]
	*@param p_contrast 对比 默认值0 取值范围[-100,100]
	*@param p_saturation 饱和 默认值0 取值范围[-100,100]
	*@param p_hue 色相 默认值0 取值范围[-180,180]
	*
	*/
	__proto.adjustBCSH_PS=function(p_brightness,p_contrast,p_saturation,p_hue){
		this.adjustHue_PS(p_hue);
		this.adjustContrast_PS(p_contrast);
		this.adjustBrightness_PS(p_brightness);
		this.adjustSaturation_PS(p_saturation);
	}

	/**
	*设置亮度 默认值0 取值范围[-1,1]
	*@param p_val
	*
	*/
	__proto.adjustBrightness=function(p_val){
		p_val=this.cleanValue(p_val,1)*255;
		this.multiplyMatrix([
		1,0,0,0,p_val,
		0,1,0,0,p_val,
		0,0,1,0,p_val,
		0,0,0,1,0]);
	}

	/**
	*设置亮度 默认值0 取值范围[-100,100]
	*@param p_val
	*
	*/
	__proto.adjustBrightness_PS=function(p_val){
		this.adjustBrightness(p_val/100);
	}

	/**
	*设置对比度 默认值0 取值范围[-1,1]
	*@param p_val
	*
	*/
	__proto.adjustContrast=function(p_val){
		p_val=this.cleanValue(p_val,1);
		var s=p_val+1;
		var o=128 *(1-s);
		this.multiplyMatrix([
		s,0,0,0,o,
		0,s,0,0,o,
		0,0,s,0,o,
		0,0,0,1,0]);
	}

	/**
	*设置对比度 默认值0 取值范围[-100,100]
	*@param p_val
	*
	*/
	__proto.adjustContrast_PS=function(p_val){
		this.adjustContrast(p_val/100);
	}

	/**
	*设置 饱和度 默认值0 取值范围[-1,1]
	*@param p_val
	*
	*/
	__proto.adjustSaturation=function(p_val){
		p_val=this.cleanValue(p_val,1);
		p_val+=1;
		var invSat=1-p_val;
		var invLumR=invSat *0.299;
		var invLumG=invSat *0.587;
		var invLumB=invSat *0.114;
		this.multiplyMatrix([
		(invLumR+p_val),invLumG,invLumB,0,0,
		invLumR,(invLumG+p_val),invLumB,0,0,
		invLumR,invLumG,(invLumB+p_val),0,0,
		0,0,0,1,0]);
	}

	/**
	*设置 饱和度 默认值0 取值范围[-100,100]
	*@param p_val
	*
	*/
	__proto.adjustSaturation_PS=function(p_val){
		this.adjustSaturation(p_val/100);
	}

	/**
	*设置色相 默认值0 取值范围[-1,1]
	*@param p_val
	*
	*/
	__proto.adjustHue=function(p_val){
		p_val=this.cleanValue(p_val,1);
		p_val *=Math.PI;
		var cos=Math.cos(p_val);
		var sin=Math.sin(p_val);
		this.multiplyMatrix([
		((0.299+(cos *(1-0.299)))+(sin *-(0.299))),((0.587+(cos *-(0.587)))+(sin *-(0.587))),((0.114+(cos *-(0.114)))+(sin *(1-0.114))),0,0,
		((0.299+(cos *-(0.299)))+(sin *0.143)),((0.587+(cos *(1-0.587)))+(sin *0.14)),((0.114+(cos *-(0.114)))+(sin *-0.283)),0,0,
		((0.299+(cos *-(0.299)))+(sin *-((1-0.299)))),((0.587+(cos *-(0.587)))+(sin *0.587)),((0.114+(cos *(1-0.114)))+(sin *0.114)),0,0,
		0,0,0,1,0]);
	}

	/**
	*设置色相 默认值0 取值范围[-180,180]
	*@param p_val
	*
	*/
	__proto.adjustHue_PS=function(p_val){
		this.adjustHue(p_val/180);
	}

	__proto.concat=function(p_matrix){
		if (p_matrix.length !=ColorMatrix.LENGTH){return;}
			this.multiplyMatrix(p_matrix);
	}

	__proto.clone=function(){
		var result=new ColorMatrix();
		result.copyMatrix(this);
		return result;
	}

	__proto.copyMatrix=function(p_matrix){
		var l=ColorMatrix.LENGTH;
		for (var i=0;i<l;i++){
			this[i]=p_matrix[i];
		}
	}

	__proto.multiplyMatrix=function(p_matrix){
		var col=[];
		var i=0;
		for (var y=0;y<4;++y){
			for (var x=0;x<5;++x){
				col[i+x]=p_matrix[i] *this[x]+
				p_matrix[i+1] *this[x+5]+
				p_matrix[i+2] *this[x+10]+
				p_matrix[i+3] *this[x+15]+
				(x==4 ? p_matrix[i+4] :0);
			}
			i+=5;
		}
		this.copyMatrix(col);
	}

	__proto.cleanValue=function(p_val,p_limit){
		return Math.min(p_limit,Math.max(-p_limit,p_val));
	}

	ColorMatrix.createBCSH=function(p_brightness,p_contrast,p_saturation,p_hue){
		var ret=new ColorMatrix();
		ret.adjustBCSH(p_brightness,p_contrast,p_saturation,p_hue);
		return ret;
	}

	ColorMatrix.createBCSH_PS=function(p_brightness,p_contrast,p_saturation,p_hue){
		var ret=new ColorMatrix();
		ret.adjustBCSH_PS(p_brightness,p_contrast,p_saturation,p_hue);
		return ret;
	}

	ColorMatrix.createRGBAMatrix=function(red,green,blue,alpha){
		(red===void 0)&& (red=255);
		(green===void 0)&& (green=0);
		(blue===void 0)&& (blue=0);
		(alpha===void 0)&& (alpha=1);
		var ret=new ColorMatrix();
		ret.setRGBAMatrix(red,green,blue,alpha);
		return ret;
	}

	ColorMatrix.createColorMatrix=function(color,alpha){
		(alpha===void 0)&& (alpha=1);
		var red=(color&0xFF0000)>>16;
		var green=(color&0x00FF00)>>8;
		var blue=(color&0x0000FF);
		return ColorMatrix.createRGBAMatrix(red,green,blue,alpha);
	}

	ColorMatrix.createColorMatrix_Alpha=function(alphaColor){
		var alpha=(alphaColor&0xFF000000)>>32;
		var red=(alphaColor&0xFF0000)>>16;
		var green=(alphaColor&0x00FF00)>>8;
		var blue=(alphaColor&0x0000FF);
		return ColorMatrix.createRGBAMatrix(red,green,blue,alpha);
	}

	ColorMatrix.LUMA_R=0.299;
	ColorMatrix.LUMA_G=0.587;
	ColorMatrix.LUMA_B=0.114;
	__static(ColorMatrix,
	['IDENTITY_MATRIX',function(){return this.IDENTITY_MATRIX=[
		1,0,0,0,0,
		0,1,0,0,0,
		0,0,1,0,0,
		0,0,0,1,0];},'LENGTH',function(){return this.LENGTH=ColorMatrix.IDENTITY_MATRIX.length;}
	]);
	return ColorMatrix;
})(Array)


/**
*序列帧动画模板管理类
*@author chengwen.yi
*
*/
//class manager.AnimationTempletMgr extends manager.UrlReference
var AnimationTempletMgr=(function(_super){
	function AnimationTempletMgr(){
		this._aniTempletDict={};
		this._filerUrls=["assets/animation/frames/bombframe/bomb2.json","assets/animation/frames/bombframe/bomb25.json","assets/animation/frames/bombframe/bomb25_1.json","assets/animation/frames/blastframe/blast31.json"];
		AnimationTempletMgr.__super.call(this);
	}

	__class(AnimationTempletMgr,'manager.AnimationTempletMgr',_super);
	var __proto=AnimationTempletMgr.prototype;
	__proto.getAniTemplet=function(url){
		var _aniTemplet=this._aniTempletDict[url];
		if(!_aniTemplet){
			_aniTemplet=new AnimationTemplet(url);
			this._aniTempletDict[url]=_aniTemplet;
		}
		return _aniTemplet;
	}

	__proto.clearReferenceRes=function(url){
		if(this._filerUrls.indexOf(url)!=-1){
			return;
		}
		Laya.timer.once(1000,this,this.lazyCheckClear,[url],false);
	}

	//lazyCheckClear(url);
	__proto.lazyCheckClear=function(url){
		if(!this.getReference(url)){
			var _aniTemplet=this._aniTempletDict[url];
			if(_aniTemplet){
				if(_aniTemplet.isComplete){
					_aniTemplet.destroy();
					delete this._aniTempletDict[url];
					this.wxAutoGC();
				}
				else{
					this.checkRefClearByUrl(url);
				}
			}
		}
	}

	__proto.checkRefClearByUrl=function(url){
		Laya.timer.once(1000,this,this.lazyCheckClear,[url],false);
	}

	__getset(1,AnimationTempletMgr,'ins',function(){
		if(AnimationTempletMgr._ins==null){
			AnimationTempletMgr._ins=new AnimationTempletMgr();
		}
		return AnimationTempletMgr._ins;
	},manager.UrlReference._$SET_ins);

	AnimationTempletMgr._ins=null;
	return AnimationTempletMgr;
})(UrlReference)


//class manager.ResourcesLoaderControls extends laya.events.EventDispatcher
var ResourcesLoaderControls=(function(_super){
	function ResourcesLoaderControls(){
		ResourcesLoaderControls.__super.call(this);
		ResourcesLoaderControls._instance=this;}
	__class(ResourcesLoaderControls,'manager.ResourcesLoaderControls',_super);
	var __proto=ResourcesLoaderControls.prototype;
	/**加载config配置文件 **/
	__proto.loaderConfig=function(){
		ConfigFile.WEB_HTTP=UrlParam.PARAMS["WEB_HTTP"];
		ConfigFile.WEBSOCKET_HTTP=UrlParam.PARAMS["WEBSOCKET_HTTP"];
		ConfigFile.HTTP_HOST=UrlParam.PARAMS["HTTP_HOST"];
		ConfigFile.HTTP_PORT=UrlParam.PARAMS["HTTP_PORT"];
		ConfigFile.SOCKET_NAME=UrlParam.PARAMS["SOCKET_NAME"];
		ConfigFile.SITE=UrlParam.PARAMS["SITE"];
		ConfigFile.LOGINSELECT=UrlParam.PARAMS["LOGINSELECT"];
		ConfigFile.LOGIN=UrlParam.PARAMS["LOGIN"];
		ConfigFile.RES_HOST_URL=UrlParam.PARAMS["RES_HOST_URL"];
		if(UrlParam.PARAMS["PLID"]=="wx" || UrlParam.PARAMS["PLID"]=="fb"){
			ConfigFile.HTTP_ROOT_URL=UrlParam.PARAMS["WEB_HTTP"]+UrlParam.PARAMS["HTTP_HOST"];
			}else{
			ConfigFile.HTTP_ROOT_URL=UrlParam.PARAMS["WEB_HTTP"]+UrlParam.PARAMS["HTTP_HOST"]+(UrlParam.PARAMS["HTTP_PORT"] ? ":"+UrlParam.PARAMS["HTTP_PORT"] :"");
		}
		this.event("config_complete");
	}

	__getset(1,ResourcesLoaderControls,'instance',function(){return ResourcesLoaderControls._instance=ResourcesLoaderControls._instance|| new ResourcesLoaderControls();},laya.events.EventDispatcher._$SET_instance);
	ResourcesLoaderControls._instance=null;
	return ResourcesLoaderControls;
})(EventDispatcher)


/**
*获取时间管理类
*@author weiqiang.huang
*
*/
//class manager.TimeManager extends laya.events.EventDispatcher
var TimeManager=(function(_super){
	function TimeManager(){
		this._synTime=0;
		this._synTimeDayBegin=0;
		/**时间同步接收时间 */
		this._synReceiveTime=0;
		/**服务器时区 (秒)*/
		this._timeZone=0;
		/**设置过时区*/
		this._isSetTimeZone=false;
		TimeManager.__super.call(this);
		this._synDate=new Date();
		this._synDateBegin=new Date();
	}

	__class(TimeManager,'manager.TimeManager',_super);
	var __proto=TimeManager.prototype;
	__proto.setup=function(){
		SocketManager.Instance.on(0x0028,this,this.onTimezone);
	}

	__proto.onTimezone=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.SimpleMsg,pkg);
		this.timeZone=res.param1;
		this.updateTime(parseFloat(res.param4));
	}

	__proto.syncTime=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.StringMsg,pkg);
		this.updateTime(parseFloat(res.value));
	}

	// }
	__proto.updateTime=function(time){
		var sysCurtime=time;
		var delayTime=0;
		this._synReceiveTime=Browser.now();
		this._synTime=sysCurtime+delayTime;
		this._synDate=this.getServerDate(this.synTime);
		this.setDayBegin();
	}

	__proto.setDayBegin=function(){
		if (this._synTime-this._synTimeDayBegin >=86400000 && this._isSetTimeZone){
			if (this._synTimeDayBegin !=0){
				this.event("strideDay");
			}
			this._synDateBegin=this.getServerDate(this._synTime);
			this._synTimeDayBegin=this._synTime-this._synDateBegin.getHours()*3600 *1000-this._synDateBegin.getMinutes()*60 *1000-this._synDateBegin.getSeconds()*1000-this._synDateBegin.getMilliseconds();
			this._synDateBegin.setTime(this._synTimeDayBegin);
		}
	}

	/**
	*根据服务器时间戳、服务器时区获取Date,时间戳错误,年月日是正确的.
	*@param synTime 服务器时间戳
	*/
	__proto.getServerDate=function(synTime){
		if (!this._isSetTimeZone){
			CLog.log("not set timezone yet");
			return null;
		};
		var serverTimezoneOffset=this._timeZone *1000;
		if (synTime==0)
			synTime=this.synTime;
		var date=new Date();
		date.setTime(synTime);
		date.setUTCHours(date.getUTCHours()+this._timeZone / 3600);
		date.setFullYear(date.getUTCFullYear());
		date.setMonth(date.getUTCMonth());
		date.setDate(date.getUTCDate());
		date.setHours(date.getUTCHours());
		date.setMinutes(date.getUTCMinutes());
		date.setSeconds(date.getUTCSeconds());
		date.setMilliseconds(date.getUTCMilliseconds());
		return date;
	}

	/**
	*2017-7-27 10:00:00 根据服务器时区,转换成Date,只有时间戳是正确,年月日是错误的
	*@param dateStr 2017-7-27 10:00:00字符串
	*/
	__proto.dateStrToServerDate=function(dateStr){
		if (!this._isSetTimeZone){
			CLog.log("not set timezone yet");
			return null;
		};
		var serverTimezoneOffset=this._timeZone *1000;
		var date=DateTimeUtils.getDateByDateStr(dateStr);
		var timezoneOffset=date.getTimezoneOffset();
		var clientTimezoneOffset=-timezoneOffset *60 *1000;
		var time=NaN;
		if (clientTimezoneOffset *serverTimezoneOffset > 0){
			time=date.getTime()-serverTimezoneOffset+clientTimezoneOffset;
		}
		else if (clientTimezoneOffset > 0){
			time=date.getTime()+Math.abs(serverTimezoneOffset)+Math.abs(clientTimezoneOffset);
		}
		else {
			time=date.getTime()-Math.abs(serverTimezoneOffset)-Math.abs(clientTimezoneOffset);
		}
		date.setTime(time);
		return date;
	}

	__proto.getTimeByData=function(data){
		var date=new Date(data.year,data.month,data.date,data.hours,data.minutes,data.seconds,data.ms)
		return date.getTime();
	}

	/**
	*获取服务器时间--Date
	*/
	__proto.Now=function(){
		return this.getServerDate(this.synTime);
	}

	/**
	*服务器时间戳
	*/
	__proto.NowTime=function(){
		return this.synTime;
	}

	/**
	*跟什么
	*/
	__proto.getCurDay=function(){
		var day=this.Now().getDay();
		if(day==0){
			return 7;
		}
		return day;
	}

	__proto.isToday=function(time){
		var date=this.getServerDate(time);
		var now=this.Now();
		return now.getFullYear()==date.getFullYear()&& now.getMonth()==date.getMonth()&& now.getDate()==date.getDate();
	}

	/**
	*检查时间是否结束
	*@param $endTime 结束的时间
	*/
	__proto.checkTimeEndNum=function($endTime){
		var nowTime=manager.TimeManager.Instance.NowTime();
		return $endTime-nowTime;
	}

	/**
	*获取小时
	*/
	__proto.getTimeHour=function(milSec){
		var oneDay=60*60*1000*24;
		var oneHour=60*60*1000;
		var day=0;
		var hour=0;
		if(milSec>=oneDay){
			day=Math.round(milSec/oneDay);
			milSec=milSec%oneDay;
		}
		if(milSec>=oneHour){
			hour=Math.round(milSec/oneHour);
			milSec=milSec%oneHour;
		};
		var result=hour+"H";
		return result;
	}

	__proto.getSecondStr=function(time){
		var result;
		var oneHour=60*60;
		var oneMin=60;
		var oneSec=1000;
		var hour=0;
		var min=0;
		var sec=0;
		if(time >=oneHour){
			hour=Math.floor(time/oneHour);
			min=time % oneHour;
			}else{
			min=time;
		}
		if(time >=oneMin){
			min=Math.floor(min/oneMin);
			}else{
		}
		if(hour==0 && min==0){
			min=1;
		}
		result=LanguageMgr.Ins.GetLan("14300106",hour,min);
		return result;
	}

	/**
	*毫秒转成时间字符串
	*@param milSec
	*@param type 0 格式：xxM xxS ,1 格式 xx:xx
	*/
	__proto.getTimemilSecTxt=function(milSec,type,isHour){
		(type===void 0)&& (type=0);
		(isHour===void 0)&& (isHour=false);
		var oneDay=60*60*1000*24;
		var oneHour=60*60*1000;
		var oneMin=60*1000;
		var oneSec=1000;
		var day=0;
		var hour=0;
		var min=0;
		var sec=0;
		var dec=LanguageMgr.Ins.GetLan("9007388").split(",");
		if(milSec>=oneDay){
			day=Math.floor(milSec/oneDay);
			milSec=milSec%oneDay;
		}
		if(milSec>=oneHour){
			hour=Math.floor(milSec/oneHour);
			milSec=milSec%oneHour;
		}
		if(milSec>=oneMin){
			min=Math.floor(milSec/oneMin);
			milSec=milSec%oneMin;
		}
		if(milSec>=oneSec){
			sec=Math.floor(milSec/oneSec);
		};
		var result="";
		if(!isHour){
			if(day > 0){
				if(type==0){
					result=result+day+dec[0]+" ";
					result=result+hour+dec[1]+" ";
				}
				else if(type==1){
					result=result+day+":";
					result=result+hour;
				}
			}
			else if(hour > 0){
				if(type==0){
					result=result+hour+dec[1]+" ";
					result=result+min+dec[2]+" ";
				}
				else if(type==1){
					result=result+hour+":";
					result=result+min;
				}
			}
			else if(min > 0 || sec > 0){
				if(type==0){
					result=result+min+dec[2]+" ";
					result=result+sec+dec[3]+" ";
				}
				else if(type==1){
					result=result+min+":";
					result=result+sec;
				}
			}
		}
		else{
			if(hour==0){
				result=result+sec+dec[3]+" ";
			}
			else{
				result=result+hour+dec[1]+" ";
			}
		}
		return result;
	}

	/**
	*把秒数转为相关时间字符输出
	*@param num :秒数
	*@param type :类型(h小时m分s秒,需要显示多少小时子母用对应的子母,后面跟的中文需要什么样的自己添加,
	*字符固定为 h:小时,m:分钟,s:秒 )
	*@param isShowDay :是否显示天数,如果为true,那在hour >=24 小时时会自动计算个天出来
	*/
	__proto.convertTimeToStr=function(num,type,isShowDay){
		(type===void 0)&& (type="h:m:s");
		(isShowDay===void 0)&& (isShowDay=false);
		if(num <=0)return '00:00:00';
		var hour=(num/3600)>>0;
		var minute=(num%3600/60)>>0;
		var second=(num%3600%60)>>0;
		if(isShowDay && hour >=24){
			var day=Math.ceil(hour/24)+LanguageMgr.Ins.GetLan("9002274");
			hour %=24;
			type=day+" "+type;
		}
		return type.replace('h',StringUtils.getNumStr(hour)).replace('m',StringUtils.getNumStr(minute)).replace('s',StringUtils.getNumStr(second));
	}

	/**
	*（策划专门提的扯淡的需求）把秒数转为相关时间字符输出
	*@param num :秒数
	*@param type :类型(h小时m分s秒,需要显示多少小时子母用对应的子母,后面跟的中文需要什么样的自己添加,
	*字符固定为 h:小时,m:分钟,s:秒 )
	*/
	__proto.convertTimeToStr1=function(num,type){
		(type===void 0)&& (type="h:m");
		if(num <=0)return '00:00';
		var hour=(num/3600)>>0;
		var minute=(num%3600/60)>>0;
		var second=(num%3600%60)>>0;
		if(second>0)minute+=1;
		if(minute>=60){
			hour+=1;
			minute-=60;
		};
		var str=hour < 10 ? hour+"h" :""+hour
		return type.replace('h',str).replace('m',StringUtils.getNumStr(minute));
	}

	/**
	*把秒数转换成时间格式
	*@param num :需要转换的数字
	*@param timerType :需要转换的时间格式
	*默认(yy:mm:dd h:m:s=> 年:月:日 时:分:秒,日期与时间需要用空格隔开,格式可自行组合,可用中文替代-,但对应的字母不能改)
	*@return :转换后返回的时间字符串
	*/
	__proto.conversionTime=function(num,timerType){
		(timerType===void 0)&& (timerType="yy-mm-dd h:m:s");
		if(num <=0)return timerType.replace("yy","00").replace("mm","00").replace("dd","00")
		.replace("h","00").replace("m","00").replace("s","00");
		var date=this.getServerDate();
		var year=date.getFullYear();
		var month=date.getMonth()+1;
		var day=date.getDate();
		var hour=(num/3600)>>0;
		var minute=(num%3600/60)>>0;
		var second=(num%3600%60)>>0;
		timerType=timerType.replace("yy",year)
		.replace("mm",StringUtils.getNumStr(month))
		.replace("dd",StringUtils.getNumStr(day))
		.replace('h',StringUtils.getNumStr(hour))
		.replace('m',StringUtils.getNumStr(minute))
		.replace('s',StringUtils.getNumStr(second));
		date=null;
		return timerType;
	}

	/**服务器时间时间戳(毫秒)**/
	__getset(0,__proto,'synTime',function(){
		return this._synTime+(Browser.now()-this._synReceiveTime);
	});

	__getset(0,__proto,'currentDay',function(){
		var day=this.Now().getDay();
		return day
	});

	/**服务器时间时间戳(秒)**/
	__getset(0,__proto,'synTimeSecond',function(){
		return ((this.synTime / 1000)>> 0);
	});

	/**服务器当天开始时间时间戳(秒)**/
	__getset(0,__proto,'synTimeDayBeginSecond',function(){
		return ((this._synTimeDayBegin / 1000)>> 0);
	});

	/**服务器当天开始时间时间戳(毫秒)**/
	__getset(0,__proto,'synTimeDayBegin',function(){
		return this._synTimeDayBegin;
	});

	/**服务器时区 (秒)*/
	__getset(0,__proto,'timeZone',null,function(value){
		this._isSetTimeZone=true;
		this._timeZone=value;
		this._synTimeDayBegin=0;
		this.setDayBegin();
	});

	/**服务器时间(hh:mm:ss)*/
	__getset(0,__proto,'serverTimeString',function(){
		var date=this.getServerDate();
		if (date==null)
			return "";
		return DateTimeUtils.getDateString(date,"H:M:S");
	});

	/**服务器时间(带日期)*/
	__getset(0,__proto,'serverTimeFullString',function(){
		var date=this.getServerDate();
		if (date==null)
			return "";
		return DateTimeUtils.getDateString(date,"YYYY-MM-DD H:M:S");
	});

	__getset(1,TimeManager,'Instance',function(){
		if(TimeManager._instance==null){
			TimeManager._instance=new TimeManager();
		}
		return TimeManager._instance;
	},laya.events.EventDispatcher._$SET_Instance);

	TimeManager.STRIDE_DAY="strideDay";
	TimeManager.DAY_TICKS=1000 *24 *60 *60;
	TimeManager.HOUR_TICKS=1000 *60 *60;
	TimeManager.Minute_TICKS=1000 *60;
	TimeManager.Second_TICKS=1000;
	TimeManager._instance=null;
	return TimeManager;
})(EventDispatcher)


//class manager.SkeletonTempletMgr extends manager.UrlReference
var SkeletonTempletMgr=(function(_super){
	function SkeletonTempletMgr(){
		this._aniTempletDict={};
		this._filerUrls=["assets/animation/weapon/weapon25.sk","assets/animation/weapon/weapon26.sk"];
		SkeletonTempletMgr.__super.call(this);
	}

	__class(SkeletonTempletMgr,'manager.SkeletonTempletMgr',_super);
	var __proto=SkeletonTempletMgr.prototype;
	__proto.getAniTemplet=function(url,isErrorReload){
		(isErrorReload===void 0)&& (isErrorReload=true);
		var _aniTemplet=this._aniTempletDict[url];
		if(!_aniTemplet){
			_aniTemplet=new SkeletonTemplet(url,isErrorReload);
			this._aniTempletDict[url]=_aniTemplet;
		}
		return _aniTemplet;
	}

	// }
	__proto.clearReferenceRes=function(url){
		if(this._filerUrls.indexOf(url)!=-1){
			return;
		}
		Laya.timer.once(1000,this,this.lazyCheckClear,[url],false);
	}

	//lazyCheckClear(url);
	__proto.lazyCheckClear=function(url){
		if(!this.getReference(url)){
			var _aniTemplet=this._aniTempletDict[url];
			if(_aniTemplet){
				if(_aniTemplet.isComplete){
					_aniTemplet.destroy();
					delete this._aniTempletDict[url];
					this.wxAutoGC();
				}
				else{
					Laya.timer.once(1000,this,this.lazyCheckClear,[url],false);
				}
			}
		}
	}

	__proto.clearAllSkeletons=function(){
		var templet;
		var skUrl;
		for (var key in this._aniTempletDict){
			templet=this._aniTempletDict[key];
			if(!templet.isNew){
				templet.destroy();
				delete this._aniTempletDict[key];
			}
		}
	}

	__proto.clearAllGuideSkeletons=function(){
		var templet;
		for (var key in this._aniTempletDict){
			templet=this._aniTempletDict[key];
			if(templet.isNew){
				console.log("清理:"+templet.skUrl);
				templet.destroy();
				delete this._aniTempletDict[key];
			}
		}
	}

	/**清理指定url资源 */
	__proto.clearSkeletonByUrl=function(url){
		var templet;
		for (var key in this._aniTempletDict){
			templet=this._aniTempletDict[key];
			if(templet){
				if(templet.skUrl==url){
					templet.destroy();
					delete this._aniTempletDict[key];
					break ;
				}
			}
		}
	}

	__proto.clearAllRoleSkeleton=function(){}
	__getset(1,SkeletonTempletMgr,'ins',function(){
		if(SkeletonTempletMgr._ins==null){
			SkeletonTempletMgr._ins=new SkeletonTempletMgr();
		}
		return SkeletonTempletMgr._ins;
	},manager.UrlReference._$SET_ins);

	SkeletonTempletMgr._ins=null;
	return SkeletonTempletMgr;
})(UrlReference)


//class manager.VisibilityMgr extends laya.events.EventDispatcher
var VisibilityMgr=(function(_super){
	function VisibilityMgr(){
		this.CLOSE_SOCKET_TIME=30 *1000;
		VisibilityMgr.__super.call(this);
	}

	__class(VisibilityMgr,'manager.VisibilityMgr',_super);
	var __proto=VisibilityMgr.prototype;
	__proto.init=function(){
		Laya.stage.on("visibilitychange",this,this.onScreenHideOrShow);
	}

	__proto.onScreenHideOrShow=function(){
		if (Laya.stage.isVisibility){
			Laya.timer.clear(this,this.onCloseSocket);
		}
		else{
			if (!SocketManager.Instance.isClosed)
				Laya.timer.once(this.CLOSE_SOCKET_TIME,this,this.onCloseSocket);
		}
	}

	__proto.onCloseSocket=function(){
		SocketManager.Instance.closeSocketForceConfirmToConnect();
	}

	__getset(1,VisibilityMgr,'ins',function(){
		return VisibilityMgr._ins=VisibilityMgr._ins|| new VisibilityMgr();
	},laya.events.EventDispatcher._$SET_ins);

	VisibilityMgr._ins=null;
	return VisibilityMgr;
})(EventDispatcher)


//class modules.AD.ADMgr extends laya.events.EventDispatcher
var ADMgr=(function(_super){
	function ADMgr(){
		this._rewardNum=0;
		this._rewardCount=[];
		//各广告入口奖励领取次数
		this._rewardTime=NaN;
		ADMgr.__super.call(this);
	}

	__class(ADMgr,'modules.AD.ADMgr',_super);
	var __proto=ADMgr.prototype;
	__proto.setup=function(){
		var self=this;
		SocketManager.Instance.on(0x0108,self,self.onAdvertiseInfo)
	}

	__proto.onAdvertiseInfo=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.AdvertiseListMsg,pkg);
		this._rewardNum=0;
		for(var i=0;i < res.infos.length;i++){
			var info=res.infos[i];
			this._rewardCount[info.type]=info.rewardNum;
			this._rewardNum+=info.rewardNum;
			if(info.type==5){
				this._rewardTime=Number(info.rewardTime)+int(ConfigModel.getConfigData(1170).ConfigValue)*1000;
			}
		}
	}

	/**
	*获取广告奖励
	*@param type 1。翻牌界面 2。PVE失败界面 3。商城界面
	*@param status
	*/
	__proto.sendGetADReward=function(type,isEnded){
		var msg=new com.road.ddt.proto.AdvertiseRewardMsg();
		msg.type=type;
		msg.state=isEnded ? 1 :0;
		if (!isEnded){
			TipsManager.Instance().showLanTips(14300228);
		}
		else{
			var rewardInfo=ConfigModel.getConfigData(1135).ConfigValue.split("|");
			var vo=ItemModel.getItemConfigData(rewardInfo[0]);
			var maxRewardNum=ConfigModel.getConfigData(1143).ConfigValue;
			var count=modules.AD.ADMgr.ins.rewardNum >=maxRewardNum ? 0 :int(rewardInfo[1]);
			if (count > 0){
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan(14300230)+LanguageMgr.Ins.GetLan(vo.Name)+"x"+count);
			}
		}
		SocketManager.Instance.sendSocketData(0x290a,msg);
	}

	//当天已获取奖励次数
	__getset(0,__proto,'rewardNum',function(){
		return this._rewardNum;
	});

	//上次广告奖励领取时间（商城入口）
	__getset(0,__proto,'rewardTime',function(){
		return this._rewardTime;
	});

	__getset(1,ADMgr,'ins',function(){
		if (ADMgr._ins==null){
			ADMgr._ins=new ADMgr();
		}
		return ADMgr._ins;
	},laya.events.EventDispatcher._$SET_ins);

	ADMgr._ins=null;
	return ADMgr;
})(EventDispatcher)


//class modules.battle.core.action.AimAction extends modules.battle.core.action.BaseAction
var AimAction=(function(_super){
	function AimAction(begin,end,battleScene,battlePlayerFireMsg,sourceId){
		this.sourceId=0;
		this.battlePlayerFireMsg=null;
		AimAction.__super.call(this,begin,end,battleScene);
		this.sourceId=sourceId;
		this.battlePlayerFireMsg=battlePlayerFireMsg;
	}

	__class(AimAction,'modules.battle.core.action.AimAction',_super);
	var __proto=AimAction.prototype;
	__proto.over=function(){
		_super.prototype.over.call(this);
	}

	__proto.start=function(){
		var role=this.battleScene.getRole(this.sourceId);
		if (role){
			var dir=this.getLaunchDir(role);
			var angle=this.getAngle();
			role.miaozhun(dir,angle);
		}
	}

	__proto.getAngle=function(){
		var msg=this.battlePlayerFireMsg.bombDetail[0];
		return Math.ceil(msg.angle/100);
	}

	__proto.getLaunchDir=function(fighter){
		var msg=this.battlePlayerFireMsg.bombDetail[0];
		if(msg){
			return msg.dir;
		}
		return fighter.moveDir;
	}

	__proto.updateAction=function(frame){}
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.battlePlayerFireMsg=null;
		_super.prototype.destroy.call(this,destroyChild);
	}

	return AimAction;
})(BaseAction)


//class modules.battle.core.action.DamageAction extends modules.battle.core.action.BaseAction
var DamageAction=(function(_super){
	function DamageAction(msg,begin,battleScene){
		this._fighter=null;
		this._msg=null;
		this._msg=msg;
		this._fighter=battleScene.getFighter(msg.livingID);
		DamageAction.__super.call(this,begin,begin+2,battleScene);
	}

	__class(DamageAction,'modules.battle.core.action.DamageAction',_super);
	var __proto=DamageAction.prototype;
	__proto.start=function(){}
	__proto.updateAction=function(frame){
		if (this._fighter.isDestroy){
			this.over();
			return
		};
		var damage=this.battleScene.getFighter(this._msg.livingID);
		damage && damage.cutHp(this._msg.hp,this._msg.totalDemageAmount,this._msg.isCritical ? 1 :0,0,0);
		this.over();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this._msg=null;
		this._fighter=null;
		_super.prototype.destroy.call(this,destroyChild);
	}

	return DamageAction;
})(BaseAction)


//class modules.battle.core.action.FireAction extends modules.battle.core.action.BaseAction
var FireAction=(function(_super){
	function FireAction(begin,end,battleScene,battlePlayerFireMsg,sourceId,delayTime){
		this.battlePlayerFireMsg=null;
		this.mainBombDetail=null;
		this.derivationBombDetails=[];
		this.sourceId=0;
		this.delayTime=0;
		FireAction.__super.call(this,begin,end,battleScene);
		this.battlePlayerFireMsg=battlePlayerFireMsg;
		this.sourceId=sourceId;
		this.delayTime=delayTime;
	}

	__class(FireAction,'modules.battle.core.action.FireAction',_super);
	var __proto=FireAction.prototype;
	__proto.over=function(){
		_super.prototype.over.call(this);
	}

	__proto.start=function(){
		var delay=this.frame;
		var fighter=this.battleScene.getFighter(this.sourceId);
		var dir=this.getLaunchDir(fighter);
		if(fighter){
			delay=fighter.launchDelayFrame;
			fighter.launch(dir);
		}
		this.mainBombDetail=new BombDetail(delay,this.battlePlayerFireMsg.bombDetail,this.battleScene,this);
	}

	__proto.createDerivationBombDetail=function(bombLivingid){
		var bombDetails=[];
		for(var i=0;i < this.battlePlayerFireMsg.derivationBombDetail.length;i++){
			var msg=this.battlePlayerFireMsg.derivationBombDetail[i];
			if(msg.bombLivingID==bombLivingid){
				bombDetails.push(msg);
				break ;
			}
		}
		if(bombDetails.length > 0){
			var derivationBombDetail=new BombDetail(0,bombDetails,this.battleScene,this);
			this.derivationBombDetails.push(derivationBombDetail);
		}
	}

	__proto.getLaunchDir=function(fighter){
		var msg=this.battlePlayerFireMsg.bombDetail[0];
		if(msg){
			return msg.dir;
		}
		return fighter.moveDir;
	}

	__proto.updateAction=function(frame){
		var time=(frame-this.begin)*this.frameRate *1000;
		if(this.mainBombDetail){
			this.mainBombDetail.updateAction(time);
		}
		for(var i=0;i < this.derivationBombDetails.length;i++){
			var derivationBombDetail=this.derivationBombDetails[i];
			derivationBombDetail.updateAction(time);
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.battlePlayerFireMsg=null;
		if(this.mainBombDetail){
			this.mainBombDetail.destroy();
			this.mainBombDetail=null;
		}
		for(var i=0;i < this.derivationBombDetails.length;i++){
			this.derivationBombDetails[i].destroy();
		}
		this.derivationBombDetails.splice(0);
		_super.prototype.destroy.call(this,destroyChild);
	}

	return FireAction;
})(BaseAction)


//class modules.battle.core.action.MoveAction extends modules.battle.core.action.BaseAction
var MoveAction=(function(_super){
	function MoveAction(msg,begin,battleScene){
		this._fighter=null;
		this._msg=null;
		this._target=null;
		this._dir=0;
		this._msg=msg;
		this._fighter=battleScene.getFighter(msg.livingID);
		MoveAction.__super.call(this,begin,2147483647,battleScene);
	}

	__class(MoveAction,'modules.battle.core.action.MoveAction',_super);
	var __proto=MoveAction.prototype;
	__proto.start=function(){
		if (this._msg.posX==this._fighter.x && this.battleScene.height-this._msg.posY==this._fighter.y){
			this._target=new Point(this._msg.posX,this.battleScene.height-this._msg.posY);
			this._dir=this._msg.direction;
		}
		else{
			var dir=this._fighter.x-this._msg.posX > 0 ? Fighter.DIR_LEFT :Fighter.DIR_RIGHT;
			if (this._fighter.x==this._msg.posX){
				dir=this._msg.direction;
			}
			this._target=new Point(this._msg.posX,this.battleScene.height-this._msg.posY);
			this._dir=dir;
		}
		this._fighter.turnRight(this._dir==Fighter.DIR_RIGHT);
	}

	__proto.updateAction=function(frame){
		if (this._fighter.isDrop){
			this.over();
			return
		};
		var _dx=this._fighter.x-this._target.x;
		var _dy=this._fighter.y-this._target.y;
		this._fighter.checkAngle();
		this._fighter.walk();
		if (Math.abs(_dx)<=3){
			this._fighter.x=this._target.x;
			this._fighter.y=this._target.y;
			EventMgr.ins.event("ROLE_MOVE_OVER");
			this.over();
			return;
		};
		var _dir=this._fighter.x-this._target.x > 0 ? Fighter.DIR_LEFT :Fighter.DIR_RIGHT;
		var dx=this.frameRate *60 *_dir;
		this._fighter.x=this._fighter.x+dx;
		var point=TileReader.findNotEmptyPoint2(Math.floor(this._fighter.x),Math.floor(this._fighter.screenheight-(this._fighter.y-10)));
		this._fighter.y=this._fighter.screenheight-point.y;
		EventMgr.ins.event("refreshdistance");
	}

	__proto.over=function(){
		this._fighter.stop();
		_super.prototype.over.call(this);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this._msg=null;
		this._fighter=null;
		_super.prototype.destroy.call(this,destroyChild);
	}

	return MoveAction;
})(BaseAction)


//class modules.battle.core.action.NormalAttackAction extends modules.battle.core.action.BaseAction
var NormalAttackAction=(function(_super){
	function NormalAttackAction(msg,begin,battleScene){
		this._fighter=null;
		this._msg=null;
		this._msg=msg;
		this._fighter=battleScene.getFighter(msg.livingID);
		NormalAttackAction.__super.call(this,begin,begin+200,battleScene);
	}

	__class(NormalAttackAction,'modules.battle.core.action.NormalAttackAction',_super);
	var __proto=NormalAttackAction.prototype;
	__proto.start=function(){
		var fighter=this.battleScene.getFighter(this._msg.livingID);
		fighter.launch(fighter.moveDir);
		EventMgr.ins.on("MONSTER_PLAY_OVER",this,this.playerOver);
		SoundMgr.instance.playSound(this._msg.soundID);
		var beat;
		var target;
		var damageAction;
		for (var i=0,n=this._msg.beatDetail.length;i < n;i++){
			beat=this._msg.beatDetail[i];
			target=this.battleScene.getFighter(beat.livingID);
			target && target.addSingleAction(new DamageAction(beat,15,this.battleScene));
		}
	}

	__proto.updateAction=function(frame){
		if (this._fighter.isDestroy){
			this.over();
			return
		}
	}

	__proto.playerOver=function(nameOrIndex,id){
		if(this._msg && this._msg.livingID && this._msg.livingID==id){
			if(nameOrIndex=="attack"){
				this.over();
			}
		}
	}

	__proto.over=function(){
		EventMgr.ins.off("MONSTER_PLAY_OVER",this,this.playerOver);
		_super.prototype.over.call(this);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		EventMgr.ins.off("MONSTER_PLAY_OVER",this,this.playerOver);
		this._msg=null;
		this._fighter=null;
		_super.prototype.destroy.call(this,destroyChild);
	}

	return NormalAttackAction;
})(BaseAction)


//class modules.battle.core.action.SkillGroupAction extends modules.battle.core.action.BaseAction
var SkillGroupAction=(function(_super){
	function SkillGroupAction(begin,end,_sourceId,battleScene){
		this.sourceId=0;
		SkillGroupAction.__super.call(this,begin,end,battleScene);
		this.sourceId=_sourceId;
	}

	__class(SkillGroupAction,'modules.battle.core.action.SkillGroupAction',_super);
	var __proto=SkillGroupAction.prototype;
	__proto.over=function(){
		_super.prototype.over.call(this);
	}

	__proto.start=function(){
		EventMgr.ins.event(String(0x3AA1),this.sourceId);
	}

	return SkillGroupAction;
})(BaseAction)


//class modules.battle.core.action.SkillOverAction extends modules.battle.core.action.BaseAction
var SkillOverAction=(function(_super){
	function SkillOverAction(begin,end,battleScene,sourceId){
		this.sourceId=0;
		SkillOverAction.__super.call(this,begin,end,battleScene);
		this.sourceId=sourceId;
	}

	__class(SkillOverAction,'modules.battle.core.action.SkillOverAction',_super);
	var __proto=SkillOverAction.prototype;
	__proto.over=function(){
		_super.prototype.over.call(this);
		var msg=new com.road.ddt.proto.battle.BattlePlayEndMsg();
		msg.turnId=this.battleScene.curTurnId;
		SocketManager.Instance.sendSocketData(0x3AA7,msg);
		EventMgr.ins.event("check_playerstate");
	}

	__proto.start=function(){}
	__proto.updateAction=function(frame){}
	return SkillOverAction;
})(BaseAction)


//class modules.battle.core.action.SkillStartAction extends modules.battle.core.action.BaseAction
var SkillStartAction=(function(_super){
	function SkillStartAction(begin,end,battleScene,sourceId,battlePlayerFireMsg){
		this.sourceId=0;
		this.battlePlayerFireMsg=null;
		SkillStartAction.__super.call(this,begin,end,battleScene);
		this.battlePlayerFireMsg=battlePlayerFireMsg;
		this.sourceId=sourceId;
	}

	__class(SkillStartAction,'modules.battle.core.action.SkillStartAction',_super);
	var __proto=SkillStartAction.prototype;
	__proto.over=function(){
		_super.prototype.over.call(this);
	}

	__proto.start=function(){
		if(!this.battlePlayerFireMsg.isSuicide){
			EventMgr.ins.event("recv_overturn",this.sourceId);
		}
	}

	__proto.updateAction=function(frame){}
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.battlePlayerFireMsg=null;
		_super.prototype.destroy.call(this,destroyChild);
	}

	return SkillStartAction;
})(BaseAction)


//class modules.battle.core.action.type.BattleJudgeTrigger extends modules.battle.core.action.type.BaseTrigger
var BattleJudgeTrigger=(function(_super){
	function BattleJudgeTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		BattleJudgeTrigger.__super.call(this,actionMsg,detailmsg,ball,battlescene,fire,executor);
	}

	__class(BattleJudgeTrigger,'modules.battle.core.action.type.BattleJudgeTrigger',_super);
	var __proto=BattleJudgeTrigger.prototype;
	// public static final int REVERSED_CAST=4;// 反抛帝
	__proto.execute=function(){
		_super.prototype.execute.call(this);
		var livingId=this.param1;
		var juageType=this.param2;
		var fighter=this.battlescene.getRole(livingId);
		if(fighter){
			fighter.showBattleJudge(juageType);
		}
	}

	return BattleJudgeTrigger;
})(BaseTrigger)


//class modules.battle.core.action.type.BombDisappearTrigger extends modules.battle.core.action.type.BaseTrigger
var BombDisappearTrigger=(function(_super){
	function BombDisappearTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		BombDisappearTrigger.__super.call(this,actionMsg,detailmsg,ball,battlescene,fire,executor);
	}

	__class(BombDisappearTrigger,'modules.battle.core.action.type.BombDisappearTrigger',_super);
	var __proto=BombDisappearTrigger.prototype;
	__proto.execute=function(){
		_super.prototype.execute.call(this);
		this.ball.complete();
	}

	return BombDisappearTrigger;
})(BaseTrigger)


//class modules.battle.core.action.type.BombTrigger extends modules.battle.core.action.type.BaseTrigger
var BombTrigger=(function(_super){
	function BombTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		BombTrigger.__super.call(this,actionMsg,detailmsg,ball,battlescene,fire,executor);
	}

	__class(BombTrigger,'modules.battle.core.action.type.BombTrigger',_super);
	var __proto=BombTrigger.prototype;
	__proto.execute=function(){
		_super.prototype.execute.call(this);
		var x=this.param1;
		var y=this.param2;
		var type=this.param3;
		var crackId=this.param4;
		this.ball.complete();
		var blastName=this.getBlastName(this.ball.blastName);
		this.battlescene.executeSceneObject(this.detailmsg.bombLivingID);
		var source=this.battlescene.getFighter(this.getSourceId());
		if(!(source && (source.type==Fighter.ROLE || source.type==Fighter.HERO || source.type==Fighter.MONSTER)&& source.isHide && this.detailmsg.bombID==3000001)){
			this.battlescene.blast(blastName,x,this.battlescene.height-y,this.detailmsg);
		}
		if(type !=0){
			this.battlescene.crater(0,crackId,x,this.battlescene.height-y,this.detailmsg.bombLivingID);
		}
		this.battlescene.showSceneShake(this.ball);
	}

	__proto.getBlastName=function(name){
		var names=name.split("|");
		if(names.length==1){
			return names[0];
		}
		if(names.length==2){
			if(this.detailmsg.isEnd){
				return names[1];
			}
		}
		return names[0];
	}

	return BombTrigger;
})(BaseTrigger)


//class modules.battle.core.action.type.ChangeSpeedTrigger extends modules.battle.core.action.type.BaseTrigger
var ChangeSpeedTrigger=(function(_super){
	function ChangeSpeedTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		ChangeSpeedTrigger.__super.call(this,actionMsg,detailmsg,ball,battlescene,fire,executor);
	}

	__class(ChangeSpeedTrigger,'modules.battle.core.action.type.ChangeSpeedTrigger',_super);
	var __proto=ChangeSpeedTrigger.prototype;
	__proto.execute=function(){
		_super.prototype.execute.call(this);
		this.ball.changeSpeed(this.param1,this.param2);
	}

	return ChangeSpeedTrigger;
})(BaseTrigger)


//class modules.battle.core.action.type.DamagePlayerTrigger extends modules.battle.core.action.type.BaseTrigger
var DamagePlayerTrigger=(function(_super){
	function DamagePlayerTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		DamagePlayerTrigger.__super.call(this,actionMsg,detailmsg,ball,battlescene,fire,executor);
	}

	__class(DamagePlayerTrigger,'modules.battle.core.action.type.DamagePlayerTrigger',_super);
	var __proto=DamagePlayerTrigger.prototype;
	__proto.execute=function(){
		_super.prototype.execute.call(this);
		var livingId=this.param1;
		var damage=this.param2;
		var isCrital=this.param3;
		var curHp=this.param4;
		var isPerfectHit=this.param6;
		var damageType=this.param7;
		var fighter=this.battlescene.getFighter(livingId);
		if(fighter){
			if(this.ball.performance.ID==3100021){
				fighter.cutHp2(curHp,damage,isCrital,isPerfectHit,damageType);
				}else{
				fighter.cutHp(curHp,damage,isCrital,isPerfectHit,damageType);
			}
		}
		EventMgr.ins.event("sync_mulit_damage",[this.getSourceId(),damage]);
	}

	return DamagePlayerTrigger;
})(BaseTrigger)


//class modules.battle.core.action.type.DieTrigger extends modules.battle.core.action.type.BaseTrigger
var DieTrigger=(function(_super){
	function DieTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		DieTrigger.__super.call(this,actionMsg,detailmsg,ball,battlescene,fire,executor);
	}

	__class(DieTrigger,'modules.battle.core.action.type.DieTrigger',_super);
	var __proto=DieTrigger.prototype;
	__proto.execute=function(){
		_super.prototype.execute.call(this);
		var fighter=this.battlescene.getFighter(this.param1);
		if(fighter){
			fighter.die();
		}
	}

	return DieTrigger;
})(BaseTrigger)


//class modules.battle.core.action.type.DropPlayerTrigger extends modules.battle.core.action.type.BaseTrigger
var DropPlayerTrigger=(function(_super){
	function DropPlayerTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		DropPlayerTrigger.__super.call(this,actionMsg,detailmsg,ball,battlescene,fire,executor);
	}

	__class(DropPlayerTrigger,'modules.battle.core.action.type.DropPlayerTrigger',_super);
	var __proto=DropPlayerTrigger.prototype;
	__proto.execute=function(){
		var livingId=this.param1;
		var x=this.param2;
		var y=this.battlescene.height-this.param3;
		var isAlive=this.param4;
		var fighter=this.battlescene.getFighter(livingId);
		if(fighter){
			fighter.resetPath(new Point(x,y),true,Handler.create(this,this.executeOver));
		}
		else{
			this.executeOver();
		}
	}

	return DropPlayerTrigger;
})(BaseTrigger)


//class modules.battle.core.action.type.ExpressionTrigger extends modules.battle.core.action.type.BaseTrigger
var ExpressionTrigger=(function(_super){
	function ExpressionTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		ExpressionTrigger.__super.call(this,actionMsg,detailmsg,ball,battlescene,fire,executor);
	}

	__class(ExpressionTrigger,'modules.battle.core.action.type.ExpressionTrigger',_super);
	var __proto=ExpressionTrigger.prototype;
	__proto.execute=function(){
		_super.prototype.execute.call(this);
		var livingId=this.param1;
		var type=this.param2;
		var expressId=this.param3;
		var role=this.battlescene.getRole(livingId);
		if(role){
			role.playExpression(expressId);
		}
	}

	ExpressionTrigger.EXPRESSION_HIT=1;
	ExpressionTrigger.EXPRESSION_BEHIT=2;
	ExpressionTrigger.EXPRESSION_NOTHIT=3;
	ExpressionTrigger.EXPRESSION_BENOTHIT=4;
	return ExpressionTrigger;
})(BaseTrigger)


//class modules.battle.core.action.type.FlyOutTrigger extends modules.battle.core.action.type.BaseTrigger
var FlyOutTrigger=(function(_super){
	function FlyOutTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		FlyOutTrigger.__super.call(this,actionMsg,detailmsg,ball,battlescene,fire,executor);
	}

	__class(FlyOutTrigger,'modules.battle.core.action.type.FlyOutTrigger',_super);
	var __proto=FlyOutTrigger.prototype;
	__proto.execute=function(){
		_super.prototype.execute.call(this);
		this.ball.complete();
	}

	return FlyOutTrigger;
})(BaseTrigger)


//class modules.battle.core.action.type.FlyTrigger extends modules.battle.core.action.type.BaseTrigger
var FlyTrigger=(function(_super){
	function FlyTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		FlyTrigger.__super.call(this,actionMsg,detailmsg,ball,battlescene,fire,executor);
	}

	__class(FlyTrigger,'modules.battle.core.action.type.FlyTrigger',_super);
	var __proto=FlyTrigger.prototype;
	__proto.execute=function(){
		_super.prototype.execute.call(this);
		var livingId=this.param1;
		var x=this.param2;
		var y=this.battlescene.height-this.param3;
		var fighter=this.battlescene.getFighter(livingId);
		if(fighter){
			fighter.x=x;
			fighter.y=y;
		}
	}

	return FlyTrigger;
})(BaseTrigger)


//class modules.battle.core.action.type.GuideBombTrigger extends modules.battle.core.action.type.BaseTrigger
var GuideBombTrigger=(function(_super){
	function GuideBombTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		GuideBombTrigger.__super.call(this,actionMsg,detailmsg,ball,battlescene,fire,executor);
	}

	__class(GuideBombTrigger,'modules.battle.core.action.type.GuideBombTrigger',_super);
	var __proto=GuideBombTrigger.prototype;
	__proto.execute=function(){
		_super.prototype.execute.call(this);
		this.ball.guildBomb();
	}

	return GuideBombTrigger;
})(BaseTrigger)


//class modules.battle.core.action.type.JiFeiTrigger extends modules.battle.core.action.type.BaseTrigger
var JiFeiTrigger=(function(_super){
	function JiFeiTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		JiFeiTrigger.__super.call(this,actionMsg,detailmsg,ball,battlescene,fire,executor);
	}

	__class(JiFeiTrigger,'modules.battle.core.action.type.JiFeiTrigger',_super);
	var __proto=JiFeiTrigger.prototype;
	__proto.execute=function(){
		var livingId=this.param1;
		var dir=this.param2;
		var ox=this.param3;
		var oy=this.param4;
		var speed=this.param5;
		var ex=this.param6;
		var ey=this.param7;
		var _speed=speed.split(",");
		var fighter=this.battlescene.getFighter(livingId);
		if(fighter){
			fighter.jifei(dir,ox,oy,int(_speed[0])/10,int(_speed[1])/10,ex,ey,Handler.create(this,this.executeOver));
		}
		else{
			this.executeOver();
		}
	}

	return JiFeiTrigger;
})(BaseTrigger)


//class modules.battle.core.action.type.MapSupplyTrigger extends modules.battle.core.action.type.BaseTrigger
var MapSupplyTrigger=(function(_super){
	function MapSupplyTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		MapSupplyTrigger.__super.call(this,actionMsg,detailmsg,ball,battlescene,fire,executor);
	}

	__class(MapSupplyTrigger,'modules.battle.core.action.type.MapSupplyTrigger',_super);
	var __proto=MapSupplyTrigger.prototype;
	__proto.execute=function(){
		_super.prototype.execute.call(this);
		var supplyLivingId=this.param1;
		this.battlescene.hitSceneObject(supplyLivingId);
	}

	return MapSupplyTrigger;
})(BaseTrigger)


//class modules.battle.core.action.type.MeleeDamageTrigger extends modules.battle.core.action.type.BaseTrigger
var MeleeDamageTrigger=(function(_super){
	function MeleeDamageTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		MeleeDamageTrigger.__super.call(this,actionMsg,detailmsg,ball,battlescene,fire,executor);
	}

	__class(MeleeDamageTrigger,'modules.battle.core.action.type.MeleeDamageTrigger',_super);
	var __proto=MeleeDamageTrigger.prototype;
	__proto.execute=function(){
		_super.prototype.execute.call(this);
		var sourceLivingId=this.param1;
		var sourceKillNum=this.param2;
		var sourceScore=this.param3;
		var targetLivingId=this.param4;
		var targetScore=this.param6;
		var targetDeath=this.param7;
		EventMgr.ins.event("sync_mulit_info",[sourceLivingId,sourceKillNum,sourceScore,targetLivingId,targetScore,targetDeath]);
	}

	return MeleeDamageTrigger;
})(BaseTrigger)


//class modules.battle.core.action.type.PerfectHitTrigger extends modules.battle.core.action.type.BaseTrigger
var PerfectHitTrigger=(function(_super){
	function PerfectHitTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		PerfectHitTrigger.__super.call(this,actionMsg,detailmsg,ball,battlescene,fire,executor);
	}

	__class(PerfectHitTrigger,'modules.battle.core.action.type.PerfectHitTrigger',_super);
	var __proto=PerfectHitTrigger.prototype;
	__proto.execute=function(){
		_super.prototype.execute.call(this);
		var ani=new Animation();
		ani.source=LanguageMgr.Ins.getUIAnimationLanguagePath("PerfectHitTrigger");
		ani.play(0,false);
		ani.once("complete",this,this.onCallBack,[ani]);
		var source=this.battlescene.getFighter(this.getSourceId());
		var fighter=this.battlescene.getOther(source);
		if(fighter){
			ani.x=0;
			ani.y=-190;
			fighter.addChild(ani);
		}
	}

	__proto.onCallBack=function(ani){
		ani.destroy(true);
	}

	return PerfectHitTrigger;
})(BaseTrigger)


//class modules.battle.core.action.type.SplitTrigger extends modules.battle.core.action.type.BaseTrigger
var SplitTrigger=(function(_super){
	function SplitTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		SplitTrigger.__super.call(this,actionMsg,detailmsg,ball,battlescene,fire,executor);
	}

	__class(SplitTrigger,'modules.battle.core.action.type.SplitTrigger',_super);
	var __proto=SplitTrigger.prototype;
	__proto.execute=function(){
		_super.prototype.execute.call(this);
		var bombLivingId=this.param1;
		console.log("Split bombLivingId",bombLivingId);
		this.fire.createDerivationBombDetail(bombLivingId);
	}

	return SplitTrigger;
})(BaseTrigger)


//class modules.battle.core.action.type.SummonNpcTrigger extends modules.battle.core.action.type.BaseTrigger
var SummonNpcTrigger=(function(_super){
	function SummonNpcTrigger(actionMsg,detailmsg,ball,battlescene,fire,executor){
		SummonNpcTrigger.__super.call(this,actionMsg,detailmsg,ball,battlescene,fire,executor);
	}

	__class(SummonNpcTrigger,'modules.battle.core.action.type.SummonNpcTrigger',_super);
	var __proto=SummonNpcTrigger.prototype;
	__proto.execute=function(){
		var livingId=this.param1;
		var x=this.param2;
		var y=this.param3;
		var isAlive=this.param4;
		var npc=this.battlescene.getNpc(livingId);
		if(npc){
			npc.show(x,this.battlescene.height-y,Handler.create(this,this.executeOver));
		}
		else{
			this.executeOver();
		}
	}

	return SummonNpcTrigger;
})(BaseTrigger)


//class modules.battle.core.buff.BufferAddExecutor extends modules.battle.core.executor.Executor
var BufferAddExecutor=(function(_super){
	function BufferAddExecutor(buffer,fighter,battleScene){
		this.buffer=null;
		this.fighter=null;
		BufferAddExecutor.__super.call(this,battleScene);
		this.buffer=buffer;
		this.fighter=fighter;
	}

	__class(BufferAddExecutor,'modules.battle.core.buff.BufferAddExecutor',_super);
	var __proto=BufferAddExecutor.prototype;
	__proto.update=function(time){
		if(time >=0){
			this.fighter.showBuff(this.buffer,Buffer.SHOW_ATONCE);
			this.destroy();
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.buffer=null;
		this.fighter=null;
		_super.prototype.destroy.call(this,destroyChild);
	}

	return BufferAddExecutor;
})(Executor)


//class modules.battle.core.buff.BufferEffectExecutor extends modules.battle.core.executor.Executor
var BufferEffectExecutor=(function(_super){
	function BufferEffectExecutor(battleBufferEffectListMsg,battleScene){
		this.battleBufferEffectListMsg=null;
		BufferEffectExecutor.__super.call(this,battleScene);
		this.battleBufferEffectListMsg=battleBufferEffectListMsg;
	}

	__class(BufferEffectExecutor,'modules.battle.core.buff.BufferEffectExecutor',_super);
	var __proto=BufferEffectExecutor.prototype;
	__proto.update=function(time){
		if(time >=this.battleBufferEffectListMsg.time){
			for(var i=0;i < this.battleBufferEffectListMsg.list.length;i++){
				var battleBufferEffectMsg=this.battleBufferEffectListMsg.list[i];
				this.executeEffect(battleBufferEffectMsg);
			}
			this.destroy();
		}
	}

	__proto.executeEffect=function(battleBufferEffectMsg){
		var livingId=battleBufferEffectMsg.livingID;
		var value=battleBufferEffectMsg.value;
		var value1=battleBufferEffectMsg.value1;
		var value2=battleBufferEffectMsg.value2;
		var effectType=battleBufferEffectMsg.effectType;
		var isCritcal=battleBufferEffectMsg.isCritcal;
		var fighter=this.battleScene.getFighter(livingId);
		if(fighter){
			switch(effectType){
				case BufferEffectExecutor.BUFFER_EFFECT_TYPE_HP:
					fighter.addHp(value,isCritcal);
					if (battleBufferEffectMsg.hasSourceID && value < 0){
						EventMgr.ins.event("sync_mulit_damage",[battleBufferEffectMsg.sourceID,-value]);
					}
					break ;
				case BufferEffectExecutor.BUFFER_EFFECT_TYPE_MAXHP:break ;
				case BufferEffectExecutor.BUFFER_EFFECT_TYPE_POINT:break ;
				case BufferEffectExecutor.BUFFER_EFFECT_TYPE_ATTACK:break ;
				case BufferEffectExecutor.BUFFER_EFFECT_TYPE_DEF:break ;
				case BufferEffectExecutor.BUFFER_EFFECT_TYPE_WEAPON:break ;
				case BufferEffectExecutor.BUFFER_EFFECT_TYPE_ANGLE:
					if(fighter==this.battleScene.hero){
						this.battleScene.hero.changeAngleMax(value,value1);
					}
					break ;
				case BufferEffectExecutor.BUFFER_EFFECT_TYPE_FACE:break ;
				case BufferEffectExecutor.EFFECT_SHIELD_HP:
					fighter.addHDHp(value);
					break ;
				case BufferEffectExecutor.EFFECT_SKILL_GROUP:
					if(value1==1){
						Cache.ins.battle.setDelayFire(true);
						EventMgr.ins.event("SHOW_SKILL_GROUP_AFTER_FIRE",battleBufferEffectMsg);
						var isDelay=Cache.ins.battle.checkDelayFire();
						if(isDelay){
							var count=this.battleScene.getSkillGroupCount();
							var end=count *8;
							var skillGroup=new SkillGroupAction(1,end,battleBufferEffectMsg.sourceID,this.battleScene);
							this.battleScene.addAction(skillGroup);
						}
						}else{
						if(Cache.ins.battle.checkDelayFire()){
							EventMgr.ins.event("SHOW_SKILL_GROUP_AFTER_FIRE",battleBufferEffectMsg)
							}else{
							EventMgr.ins.event("SHOW_SKILL_GROUP",[battleBufferEffectMsg.sourceID,value]);
						}
					}
					break ;
				}
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.battleBufferEffectListMsg=null;
		_super.prototype.destroy.call(this,destroyChild);
	}

	BufferEffectExecutor.BUFFER_EFFECT_TYPE_HP=1;
	BufferEffectExecutor.BUFFER_EFFECT_TYPE_MAXHP=2;
	BufferEffectExecutor.BUFFER_EFFECT_TYPE_POINT=3;
	BufferEffectExecutor.BUFFER_EFFECT_TYPE_ATTACK=4;
	BufferEffectExecutor.BUFFER_EFFECT_TYPE_DEF=5;
	BufferEffectExecutor.BUFFER_EFFECT_TYPE_WEAPON=6;
	BufferEffectExecutor.BUFFER_EFFECT_TYPE_ANGLE=7;
	BufferEffectExecutor.BUFFER_EFFECT_TYPE_FACE=8;
	BufferEffectExecutor.EFFECT_SHIELD_HP=9;
	BufferEffectExecutor.EFFECT_SKILL_GROUP=10;
	return BufferEffectExecutor;
})(Executor)


//class modules.battle.core.buff.BufferExecutor extends modules.battle.core.executor.Executor
var BufferExecutor=(function(_super){
	function BufferExecutor(msg,battleScene,executeType){
		this.battleBuffExecuteMsg=null;
		this.executeType=0;
		BufferExecutor.__super.call(this,battleScene);
		this.battleBuffExecuteMsg=msg;
		this.executeType=executeType;
	}

	__class(BufferExecutor,'modules.battle.core.buff.BufferExecutor',_super);
	var __proto=BufferExecutor.prototype;
	__proto.update=function(time){
		if(time >=this.battleBuffExecuteMsg.time){
			var livingId=this.battleBuffExecuteMsg.srcLivingId;
			var fighter=this.battleScene.getFighter(livingId);
			if(fighter){
				fighter.executeBuffer(this.battleBuffExecuteMsg,this.executeType);
			}
			this.destroy();
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.battleBuffExecuteMsg=null;
		_super.prototype.destroy.call(this,destroyChild);
	}

	return BufferExecutor;
})(Executor)


//class modules.battle.core.buff.DelayExecutor extends modules.battle.core.executor.Executor
var DelayExecutor=(function(_super){
	function DelayExecutor(battleScene,msg){
		this.msg=null;
		DelayExecutor._executorList.push(this);
		DelayExecutor.__super.call(this,battleScene);
		this.msg=msg;
	}

	__class(DelayExecutor,'modules.battle.core.buff.DelayExecutor',_super);
	var __proto=DelayExecutor.prototype;
	__proto.update=function(time){
		if(time >=this.msg.time){
			if(this.battleScene){
				this.battleScene.realSyncBuffer(this.msg);
				this.battleScene.exeAddBuff(this.msg.bombLivingId);
			}
			this.destroy();
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var idx=DelayExecutor._executorList.indexOf(this);
		if(idx !=-1)DelayExecutor._executorList.splice(idx,1);
		this.msg=null;
		_super.prototype.destroy.call(this,destroyChild);
	}

	DelayExecutor.clearAll=function(){
		var executor=DelayExecutor._executorList.shift();
		while(executor){
			executor.destroy();
			executor=DelayExecutor._executorList.shift();
		}
	}

	DelayExecutor._executorList=[];
	return DelayExecutor;
})(Executor)


//class modules.battle.core.ExecutorFactory extends modules.battle.core.executor.Executor
var ExecutorFactory=(function(_super){
	function ExecutorFactory(battleScene){
		this.battleSyncPlayerStateMsg=[];
		this.battleBuffExecuteMsg=[];
		this.battleLivingSyncTransformMsg=[];
		this.executors=[];
		ExecutorFactory.__super.call(this,battleScene);
	}

	__class(ExecutorFactory,'modules.battle.core.ExecutorFactory',_super);
	var __proto=ExecutorFactory.prototype;
	__proto.recvBattlePlayerState=function(msg){
		if (msg.time <=0){
			this.executors.push(new PlayerStateExecutor(msg,this.battleScene));
		}
		else{
			this.battleSyncPlayerStateMsg.push(msg);
		}
	}

	__proto.executeSyncPlayerState=function(){
		for (var i=0;i < this.battleSyncPlayerStateMsg.length;i++){
			var msg=this.battleSyncPlayerStateMsg[i];
			this.executors.push(new PlayerStateExecutor(msg,this.battleScene));
		}
		this.battleSyncPlayerStateMsg.splice(0);
	}

	__proto.recvbufferExecute=function(msg){
		this.battleBuffExecuteMsg.push(msg);
	}

	__proto.executeBuff=function(bombLivingId){
		var done=[];
		for (var i=0;i < this.battleBuffExecuteMsg.length;i++){
			var msg=this.battleBuffExecuteMsg[i];
			if (msg.bombId==bombLivingId){
				this.executors.push(new BufferExecutor(msg,this.battleScene,Buffer.SHOW_DELAY));
				done.push(msg);
			}
		}
		for (var i=0;i < done.length;i++){
			var msg=done[i];
			for (var j=0;j < this.battleBuffExecuteMsg.length;j++){
				if (this.battleBuffExecuteMsg[j]==msg){
					this.battleBuffExecuteMsg.splice(j,1);
					break ;
				}
			}
		}
	}

	__proto.recvbufferEffect=function(msg){
		this.executors.push(new BufferEffectExecutor(msg,this.battleScene));
	}

	__proto.recvBattleSyncLiving=function(msg){
		if (msg.time <=0){
			this.executors.push(new TransformExecutor(msg,this.battleScene));
		}
		else{
			this.battleLivingSyncTransformMsg.push(msg);
		}
	}

	__proto.executeSyncLiving=function(){
		for (var i=0;i < this.battleLivingSyncTransformMsg.length;i++){
			var msg=this.battleLivingSyncTransformMsg[i];
			this.executors.push(new TransformExecutor(msg,this.battleScene));
		}
		this.battleLivingSyncTransformMsg.splice(0);
	}

	__proto.update=function(time){
		this.executeBuff(0);
	}

	__proto.recvNormalAttack=function(msg){
		var fighter=this.battleScene.getFighter(msg.livingID);
		fighter && fighter.cancelSingleAction(SkillOverAction);
		fighter && fighter.addSingleAction(new NormalAttackAction(msg,Math.max(msg.fireTime,1),this.battleScene));
		fighter && fighter.addSingleAction(new SkillOverAction(1,3,this.battleScene,fighter.livingId));
	}

	// executors.push(new NormalAttackExecutor(msg,battleScene));
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		for (var i=0;i < this.executors.length;i++){
			this.executors[i].destroy();
		}
		this.executors.splice(0);
		this.executors=null;
		this.battleSyncPlayerStateMsg.splice(0);
		this.battleSyncPlayerStateMsg=null;
		this.battleBuffExecuteMsg.splice(0);
		this.battleBuffExecuteMsg=null;
		this.battleLivingSyncTransformMsg.splice(0);
		this.battleLivingSyncTransformMsg=null;
		_super.prototype.destroy.call(this,destroyChild);
	}

	return ExecutorFactory;
})(Executor)


//class modules.battle.core.living.PlayerStateExecutor extends modules.battle.core.executor.Executor
var PlayerStateExecutor=(function(_super){
	function PlayerStateExecutor(battleSyncPlayerStateMsg,battleScene){
		this.battleSyncPlayerStateMsg=null;
		PlayerStateExecutor.__super.call(this,battleScene);
		this.battleSyncPlayerStateMsg=battleSyncPlayerStateMsg;
	}

	__class(PlayerStateExecutor,'modules.battle.core.living.PlayerStateExecutor',_super);
	var __proto=PlayerStateExecutor.prototype;
	__proto.update=function(time){
		if(time >=this.battleSyncPlayerStateMsg.time){
			var fighter=this.battleScene.getFighter(this.battleSyncPlayerStateMsg.livingID);
			if(fighter){
				fighter.syncState(this.battleSyncPlayerStateMsg);
			}
			this.destroy();
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.battleSyncPlayerStateMsg=null;
		_super.prototype.destroy.call(this,destroyChild);
	}

	return PlayerStateExecutor;
})(Executor)


//class modules.battle.core.living.TransformExecutor extends modules.battle.core.executor.Executor
var TransformExecutor=(function(_super){
	function TransformExecutor(battleLivingSyncTransformMsg,battleScene){
		this.battleLivingSyncTransformMsg=null;
		TransformExecutor.__super.call(this,battleScene);
		this.battleLivingSyncTransformMsg=battleLivingSyncTransformMsg;
	}

	__class(TransformExecutor,'modules.battle.core.living.TransformExecutor',_super);
	var __proto=TransformExecutor.prototype;
	__proto.update=function(time){
		if(time >=this.battleLivingSyncTransformMsg.time){
			var fighter=this.battleScene.getFighter(this.battleLivingSyncTransformMsg.livingID);
			if(fighter){
				fighter.syncLiving(this.battleLivingSyncTransformMsg);
			}
			this.destroy();
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.battleLivingSyncTransformMsg=null;
		_super.prototype.destroy.call(this,destroyChild);
	}

	return TransformExecutor;
})(Executor)


//class modules.battle.core.SkillAnimationExecutor extends modules.battle.core.executor.Executor
var SkillAnimationExecutor=(function(_super){
	function SkillAnimationExecutor(battlePlayerFireMsg,battleScene){
		this.skillAnimations=[];
		this.battlePlayerFireMsg=null;
		SkillAnimationExecutor._executorList.push(this);
		SkillAnimationExecutor.__super.call(this,battleScene);
		this.battlePlayerFireMsg=battlePlayerFireMsg;
		this.createSkillAnimations();
	}

	__class(SkillAnimationExecutor,'modules.battle.core.SkillAnimationExecutor',_super);
	var __proto=SkillAnimationExecutor.prototype;
	__proto.createSkillAnimations=function(){
		var frameLen=this.getTotalFrameLen()+15;
		var sourceId=this.getSourceId();
		this.addNpc();
		this.battleScene.addSceneObjectList(this.battlePlayerFireMsg.supplyList);
		var len=1;
		var start=new SkillStartAction(len,len,this.battleScene,sourceId,this.battlePlayerFireMsg);
		this.skillAnimations.push(start);
		len=len+1;
		var fighter=this.battleScene.getFighter(sourceId);
		if(fighter==null){
			console.log("no fighter",sourceId);
		}
		if(fighter.type==Fighter.ROLE && !this.battlePlayerFireMsg.isSuicide){
			var aim=new AimAction(len,len+1,this.battleScene,this.battlePlayerFireMsg,sourceId);
			this.skillAnimations.push(aim);
			len=len+3
		};
		var delayTime=fighter.calcDelayTime();
		len=len+1;
		var endFrame=len+frameLen+delayTime/1000 *30+fighter.launchDelayFrame / 1000 *30;
		var fire=new FireAction(len,endFrame,this.battleScene,this.battlePlayerFireMsg,sourceId,delayTime);
		this.skillAnimations.push(fire);
		if(this.battlePlayerFireMsg.isFireOver){
			var begin=endFrame+1;
			var end=endFrame+11;
			var over=new SkillOverAction(begin,end,this.battleScene,sourceId);
			this.skillAnimations.push(over);
		}
	}

	__proto.getSkilllGroupFrame=function(){
		var isDelay=Cache.ins.battle.checkDelayFire();
		if(isDelay){
			var battleScene=SceneMgr.ins.curScene;
			var count=battleScene.getSkillGroupCount();
			return count *80;
		}
		return 0;
	}

	__proto.addNpc=function(){
		for(var i=0;i < this.battlePlayerFireMsg.livingDetail.length;i++){
			var npcMsg=this.battlePlayerFireMsg.livingDetail[i];
			this.battleScene.createNpc(npcMsg);
		}
	}

	__proto.getSourceId=function(){
		var msg=this.battlePlayerFireMsg.bombDetail[0];
		return msg.livingID;
	}

	__proto.getTotalFrameLen=function(){
		var time=0;
		for(var i=0;i < this.battlePlayerFireMsg.bombDetail.length;i++){
			var msg=this.battlePlayerFireMsg.bombDetail[i];
			for(var j=0;j < msg.actions.length;j++){
				var actionMsg=msg.actions[j];
				if(actionMsg.time > time){
					time=actionMsg.time;
				}
			}
		}
		for(var i=0;i < this.battlePlayerFireMsg.derivationBombDetail.length;i++){
			var msg=this.battlePlayerFireMsg.derivationBombDetail[i];
			for(var j=0;j < msg.actions.length;j++){
				var actionMsg=msg.actions[j];
				if(actionMsg.time > time){
					time=actionMsg.time;
				}
			}
		}
		return Math.ceil(time/1000 *30);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var idx=SkillAnimationExecutor._executorList.indexOf(this);
		if(idx !=-1)SkillAnimationExecutor._executorList.splice(idx,1);
		for(var i=0;i < this.skillAnimations.length;i++){
			this.skillAnimations[i].destroy();
		}
		this.skillAnimations.splice(0);
		this.skillAnimations=null;
		this.battlePlayerFireMsg=null;
		_super.prototype.destroy.call(this,destroyChild);
	}

	__proto.update=function(time){
		var isOver=true;
		for(var i=0;i < this.skillAnimations.length;i++){
			var action=this.skillAnimations[i];
			if(!action.isOver){
				action.update();
				isOver=false;
			}
		}
		if(isOver){
			this.destroy();
		}
	}

	SkillAnimationExecutor.clearAll=function(){
		var executor=SkillAnimationExecutor._executorList.shift();
		while(executor){
			executor.destroy();
			executor=SkillAnimationExecutor._executorList.shift();
		}
	}

	SkillAnimationExecutor._executorList=[];
	return SkillAnimationExecutor;
})(Executor)


//class modules.campaign.CampaignMgr extends laya.events.EventDispatcher
var CampaignMgr=(function(_super){
	function CampaignMgr(){
		this._campaignDict=null;
		CampaignMgr.__super.call(this);
		this._campaignDict={};
	}

	__class(CampaignMgr,'modules.campaign.CampaignMgr',_super);
	var __proto=CampaignMgr.prototype;
	__proto.init=function(){
		SocketManager.Instance.on(0x0109,this,this.onRecvCampaignListMsg);
	}

	__proto.initOver=function(){
		var mulitPveList=CampaignModel.getConfigDataByType(0);
		for (var i=0,n=mulitPveList.length;i < n;i++){
			this.getCampaignInfo(mulitPveList[i].ID);
		}
	}

	__proto.getCampaignInfo=function(campaignId){
		return this._campaignDict[campaignId]=this._campaignDict[campaignId]|| new CampaignInfo(campaignId);
	}

	/**
	*检查副本是否可打,等级限制,前置副本
	*@param campaignId
	*@return
	*/
	__proto.checkCampaignEnable=function(campaignId){
		var campaignVO=CampaignModel.getConfigData(campaignId);
		if (PlayerInfo.instance.grade < campaignVO.NeedLevel){
			return false;
		}
		if (campaignVO.PerCampaignId==0){
			return true;
		}
		return this.checkCampaignIsPass(campaignVO.PerCampaignId);
	}

	__proto.checkCampaignIsPass=function(campaignId){
		return this.getCampaignInfo(campaignId).isPass
	}

	__proto.getCampaignCount=function(campaignId){
		return this.getCampaignInfo(campaignId).yieldCount;
	}

	__proto.getCampaignBuyCount=function(campaignId){
		return this.getCampaignInfo(campaignId).buyCount;
	}

	__proto.getCampaignCountByGroupId=function(groudId){
		var count=0;
		var campaign;
		for(var $each_campaign in this._campaignDict){
			campaign=this._campaignDict[$each_campaign];
			if (CampaignModel.getConfigData(campaign.campaignId).GroupID==groudId){
				count+=campaign.yieldCount;
			}
		}
		return count;
	}

	__proto.onRecvCampaignListMsg=function(pkg){
		var msg=ProtoMgr.decode(com.road.ddt.proto.CampaignListMsg,pkg);
		var campaignMsg;
		var campaign;
		for (var i=0,n=msg.campaign.length;i < n;i++){
			campaignMsg=msg.campaign[i];
			campaign=this.getCampaignInfo(campaignMsg.campaignId);
			campaign.update(campaignMsg);
			this.event('EVENT_UPDATE_CAMPAINGN_INFO',[campaign]);
		}
		this.event('EVENT_UPDATE_CAMPAINGN');
	}

	__getset(1,CampaignMgr,'ins',function(){
		return CampaignMgr._ins=CampaignMgr._ins|| new CampaignMgr;
	},laya.events.EventDispatcher._$SET_ins);

	CampaignMgr._ins=null;
	return CampaignMgr;
})(EventDispatcher)


//class modules.chat.ChatMgr extends laya.events.EventDispatcher
var ChatMgr=(function(_super){
	function ChatMgr(){
		this._channelSetting={};
		this._blackList={};
		this._channelMsg={};
		this._newMsgNum={};
		this.channelInfoList=[];
		this.curChannelLine=0;
		this.NextInviteTime=0;
		ChatMgr.__super.call(this);
		this.curChannel='world';
	}

	__class(ChatMgr,'modules.chat.ChatMgr',_super);
	var __proto=ChatMgr.prototype;
	__proto.init=function(){
		this._channelMsg['world']=[];
		this._channelMsg['system']=[];
		this._channelMsg['room']=[];
		this._channelMsg['battle']=[];
		this._channelMsg['guild']=[];
		this._newMsgNum['world']=0;
		this._newMsgNum['system']=0;
		this._newMsgNum['room']=0;
		this._newMsgNum['battle']=0;
		this._newMsgNum['guild']=0;
		this._channelSetting['world']=true;
		this._channelSetting['system']=true;
		this._channelSetting['room']=true;
		this._channelSetting['battle']=true;
		this._channelSetting['guild']=true;
		SocketManager.Instance.on(0x009A,this,this.onRecvChatMsg);
		SocketManager.Instance.on(0x009B,this,this.onRecvChatRoomList);
		SocketManager.Instance.on(0x0051,this,this.onRecvGuildChat);
		SocketManager.Instance.on(0x0070,this,this.onRecvGuildChatList);
		SocketManager.Instance.on(0x0052,this,this.onRecvGuildHitory);
		SocketManager.Instance.on(0x003F,this,this.onRecvGuildDonateList);
		SocketManager.Instance.on(0x0049,this,this.onRecvGuildBattle);
		SocketManager.Instance.on(0x004A,this,this.onRecvBattleCancel);
		SocketManager.Instance.on(0x003E,this,this.onRecvRequestList);
		SocketManager.Instance.on(0x0045,this,this.onRecvGuildPassjoin);
	}

	__proto.initOver=function(){
		UserCache.ins.init(PlayerInfo.instance.playerId+'');
		var channelSetting=UserCache.ins.getJSON('CHAT_SETTING');
		if (channelSetting){
			for (var key in channelSetting){
				this._channelSetting[key]=channelSetting[key];
			}
		}
		else{
			UserCache.ins.setJSON('CHAT_SETTING',this._channelSetting);
		};
		var blackList=UserCache.ins.getJSON('CHAT_SHIELD');
		if (blackList){
			this._blackList=blackList;
		}
		else{
			UserCache.ins.setJSON('CHAT_SHIELD',this._blackList);
		}
		this.sendGetChatRoomList();
		this.sendSysMsg(14300115+"",'system',"");
	}

	__proto.getAllMsg=function(){
		var result=new Array;
		var msgs;
		for(var $each_msgs in this._channelMsg){
			msgs=this._channelMsg[$each_msgs];
			result=result.concat(msgs);
		}
		result.sort(function(a,b){
			if (a.createTime > b.createTime){
				return-1;
			}
			else if (a.createTime > b.createTime){
				return 1;
			}
			else{
				return 0;
			}
		});
		return result;
	}

	/**
	*获取频道消息
	*@param channel ChatConst.WORLD_CHANNEL ...
	*/
	__proto.getChannelMsg=function(channel){
		return this._channelMsg[channel];
	}

	/**
	*清空频道消息
	*@param channel ChatConst.WORLD_CHANNEL ...
	*/
	__proto.clearChannelMsg=function(channel){
		var removed=this._channelMsg[channel].length;
		this._channelMsg[channel].length=0;
		this.event('event_channel_msg',[null,channel,removed]);
	}

	/**
	*是否在屏蔽列表
	*@param playerId 玩家ID
	*/
	__proto.checkIsInBlackList=function(playerId){
		return this._blackList.hasOwnProperty(playerId);
	}

	__proto.addBlackList=function(playerId){
		this._blackList[playerId]=true;
		UserCache.ins.setJSON('CHAT_SHIELD',this._blackList);
	}

	__proto.delBlackList=function(playerId){
		delete this._blackList[playerId];
		UserCache.ins.setJSON('CHAT_SHIELD',this._blackList);
	}

	__proto.setChannelFilter=function(channel,isFilter){
		this._channelSetting[channel]=isFilter;
		UserCache.ins.setJSON('CHAT_SETTING',this._channelSetting);
	}

	__proto.getChannelFilter=function(channel){
		return this._channelSetting[channel] || false;
	}

	__proto.getNewMsgNum=function(channel){
		return this._newMsgNum[channel] || 0;
	}

	__proto.clearNewMsgNum=function(channel){
		this._newMsgNum[channel]=0;
	}

	/**房间邀请 */
	__proto.sendInviteMsg=function(roomId,battleType,campaignId){
		if (PlayerInfoMgr.ins.getItemCount(6006001)<=0){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002191"));
			return;
		};
		var speakGap=int(ConfigModel.getConfigData(1087).ConfigValue);
		if (TimeManager.Instance.NowTime()-this.NextInviteTime > speakGap *1000){
			this.NextInviteTime=TimeManager.Instance.NowTime();
			var req=new com.road.ddt.proto.chat.ChatMessageMsg();
			req.type=1;
			req.content=10000+"";
			req.param=[10000,PlayerInfo.instance.nickName,roomId,battleType,campaignId,RoomMgr.ins.matchServerId].join(",");
			SocketManager.Instance.sendSocketData(0x501D,req);
			TipsManager.Instance().showLanTips(14300225);
		}
		else{
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan(14300177,speakGap));
		}
	}

	/**
	*发送本地系统消息
	*@param content
	*/
	__proto.sendSysMsg=function(content,channelStr,param){
		(param===void 0)&& (param="");
		var removed=0;
		var chat=new ChatInfo;
		chat.createTime=TimeManager.Instance.NowTime();
		chat.type=ChatConst.SYSTEM_TYPE;
		chat.sendPlayer=new ChatPlayerInfo;
		chat.content=content;
		chat.channelId=ChatConst.SYSTEM_TYPE;
		chat.param=param;{
			removed=this.addMsg(this._channelMsg[channelStr],chat);
			this.event('event_channel_msg',[chat,channelStr,removed]);
		}
	}

	/**
	*发送聊天
	*@param channelType ChatConst.WORLD_TYPE ...
	*@param message
	*
	*/
	__proto.sendMsg=function(channelType,message){
		var req=new com.road.ddt.proto.chat.ChatMessageMsg();
		req.type=channelType;
		req.content=ChatUtils.replaceExpression(message);
		var list,i=0,n=0;
		switch (channelType){
			case 3:{
					req.sendTo=[];
					list=RoomMgr.ins.roomPlayerList;
					for (i=0,n=list.length;i < n;i++){
						req.sendTo.push(list[i].userId);
					}
					break ;
				}
			case 4:{
					req.sendTo=Cache.ins.battle.getUserIds();
					break ;
				}
			}
		SocketManager.Instance.sendSocketData(0x501D,req);
	}

	/**
	*公会聊天
	*@param message
	*/
	__proto.sendGuildMsg=function(message){
		var req=new com.road.ddt.proto.ChatMsg();
		req.msg=ChatUtils.replaceExpression(message);
		req.chatType=2;
		SocketManager.Instance.sendSocketData(0x2736,req);
	}

	/**请求聊天房间列表 */
	__proto.sendGetChatRoomList=function(){
		var req=new com.road.ddt.proto.DefaultMsg();
		req.isPb=true;
		SocketManager.Instance.sendSocketData(0x5020,req);
	}

	/**切换聊天房间频道 */
	__proto.sendChangeChatLine=function(id){
		var intMsg=new com.road.ddt.proto.IntMsg();
		intMsg.value=id;
		SocketManager.Instance.sendSocketData(0x5021,intMsg);
	}

	/**
	*发送弹幕开关
	**/
	__proto.sendBarrageSetting=function(isClose){
		SocketManager.Instance.out.sendUserSettingSendBarrage(isClose);
	}

	__proto.onRecvChatMsg=function(pkg){
		var msg=ProtoMgr.decode(com.road.ddt.proto.chat.ChatMessageMsg,pkg)
		var channel=msg.type;
		var channelStr;
		if (ChatConst.TYPE_CHANNEL_MAP.hasOwnProperty(channel)){
			channelStr=ChatConst.TYPE_CHANNEL_MAP[channel];
		}
		else{
			channelStr='system';
		}
		console.log("channel : "+channelStr);
		if (!this._channelSetting[channelStr]){
			return;
		};
		var playerId=msg.sendPlayer.playerId+"";
		if (this.checkIsInBlackList(playerId)){
			return;
		};
		var removed=0;
		var chat=this.genInfoByChatMessageMsg(msg);{
			removed=this.addMsg(this._channelMsg[channelStr],chat);
			this.event('event_channel_msg',[chat,channelStr,removed]);
		}
	}

	__proto.onRecvChatRoomList=function(pkg){
		var chatChannelMsg=ProtoMgr.decode(com.road.ddt.proto.chat.ChatChannelMsg,pkg);
		this.channelInfoList.length=0;
		for (var i=0,n=chatChannelMsg.info.length;i < n;i++){
			this.channelInfoList.push(new ChatChannelInfo(chatChannelMsg.info[i].id,chatChannelMsg.info[i].num));
		}
		this.curChannelLine=chatChannelMsg.currChannel;
		this.event('event_channel_info_msg');
	}

	__proto.addGuildOption=function(msg){
		var chat=new ChatInfo();
		chat.createTime=TimeManager.Instance.NowTime();
		chat.type=5;
		chat.subType=10001;
		chat.sendPlayer=null;
		switch (msg.option.option){
			case 6:{
					chat.param="#00c1ff";
					chat.content=LanguageMgr.Ins.GetLan("9010001",msg.opNickName,msg.exNickName);
					break ;
				}
			case 3:{
					if (msg.option.param2==1){
						chat.param="#ff0000";
						chat.content=LanguageMgr.Ins.GetLan("9010003",msg.opNickName,msg.exNickName,GuildMgr.ins.jobArr[msg.option.param1-1]);
					}
					else{
						chat.param="#8b5019";
						chat.content=LanguageMgr.Ins.GetLan("9010004",msg.opNickName,msg.exNickName,GuildMgr.ins.jobArr[msg.option.param1-1]);
					}
					break ;
				}
			case 4:{
					chat.param="#8b5019";
					chat.content=LanguageMgr.Ins.GetLan("9010005",msg.opNickName,msg.exNickName);
					break ;
				}
			case 7:{
					chat.param="#ff0000";
					chat.content=LanguageMgr.Ins.GetLan("9010002",msg.exNickName);
					break ;
				}
			case 15:{
					chat.param="#00c1ff";
					chat.content=LanguageMgr.Ins.GetLan("14300266",msg.option.param1);
					break ;
				}
			case 16:{
					chat.param="#00c1ff";
					var buffDes=LanguageMgr.Ins.GetLan(msg.option.param1);
					var strArr=buffDes.split(',');
					chat.content=LanguageMgr.Ins.GetLan("14300386",strArr[0],msg.option.param2.toString());
					break ;
				}
			}
		chat.channelId=5;
		this._channelMsg['guild'].push(chat);
		this.event('event_channel_msg',[chat,'guild',0]);
	}

	__proto.changeGuildLeader=function(msg){
		var chat=new ChatInfo();
		chat.createTime=TimeManager.Instance.NowTime();
		chat.type=5;
		chat.subType=10001;
		chat.sendPlayer=null;
		chat.param="#ff0000";
		chat.content=LanguageMgr.Ins.GetLan("9010003",msg.nickName,"",GuildMgr.ins.jobArr[msg.param1-1]);
		chat.channelId=5;
		this._channelMsg['guild'].push(chat);
		this.event('event_channel_msg',[chat,'guild',0]);
	}

	/**服务器主动推送批量聊天信息 */
	__proto.onRecvGuildChat=function(pkg){
		var msg=ProtoMgr.decode(com.road.ddt.proto.ChatMsg,pkg);
		var chat,removed=0;
		if (msg.chatType==2){
			if (!this._channelSetting['guild']){
				return;
			}
			chat=this.genInfoByChatMsg(msg);
			removed=this.addMsg(this._channelMsg['guild'],chat);
			this._newMsgNum['guild']=int(this._newMsgNum['guild'])+1;
			this.event('event_channel_msg',[chat,'guild',removed]);
		}
	}

	/**服务器主动推送批量聊天信息 */
	__proto.onRecvGuildChatList=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.ChatListMsg,pkg);
		var chat,removed=0;
		var msg;
		for(var $each_msg in res.chatMsg){
			msg=res.chatMsg[$each_msg];
			if (msg.chatType==2){
				if (!this._channelSetting['guild']){
					return;
				}
				chat=this.genInfoByChatMsg(msg);
				removed=this.addMsg(this._channelMsg['guild'],chat);
				this._newMsgNum['guild']=int(this._newMsgNum['guild'])+1;
				this.event('event_channel_msg',[chat,'guild',removed]);
			}
		}
	}

	__proto.onRecvGuildDonateList=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.GuildDonateInfoListMsg,pkg);
		var msg=res.list[0];
		var chat;
		for (var i=0,n=this._channelMsg['guild'].length;i < n;i++){
			chat=this._channelMsg['guild'][i];
			if (chat.subType==10000){
				if ((chat.msg).donateId==msg.donateId){
					if (msg.isExist){
						chat.msg=msg;
						EventMgr.ins.event('event_update_guild_item',["donate"+msg.donateId,chat]);
					}
					else{
						this._channelMsg['guild'].splice(i,1);
						EventMgr.ins.event('event_remove_guild_item',["donate"+msg.donateId]);
					}
					return;
				}
			}
		}
		chat=this.genInfoByChatDonateMsg(msg);
		this._channelMsg['guild'].push(chat);
		this.event('event_channel_msg',[chat,'guild',0]);
		UIMgr.ins.closeView("GuildDonatePage",true);
	}

	/**全体收到邀请协议 */
	__proto.onRecvGuildBattle=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.GuildBattleInfoListMsg,pkg);
		var msg=res.list[0];
		var chat;
		var battleId=msg.id+"";
		var player1=msg.playerId1+"";
		for (var i=0,n=this._channelMsg['guild'].length;i < n;i++){
			chat=this._channelMsg['guild'][i];
			if (chat.subType==10002){
				if (((chat.msg).id+"")==battleId){
					var endTime=TimeManager.Instance.checkTimeEndNum(parseFloat(msg.expireTime));
					if (endTime <=0){
						if (player1==PlayerInfo.instance.playerId){
							GuildMgr.ins.myBattleId=null;
						}
						this._channelMsg['guild'].splice(i,1);
						EventMgr.ins.event('event_remove_guild_item',["battle"+battleId]);
						return;
					}
					if (player1==PlayerInfo.instance.playerId){
						if (msg.winnerId+""=="-1"){
							GuildMgr.ins.myBattleId=battleId;
						}
						else{
							GuildMgr.ins.myBattleId=null;
						}
					}
					chat.msg=msg;
					EventMgr.ins.event('event_update_guild_item',["battle"+battleId,chat]);
					return;
				}
			}
		}
		if (player1==PlayerInfo.instance.playerId){
			GuildMgr.ins.myBattleId=battleId;
		}
		chat=this.genInfoByChatBattleMsg(msg);
		this._channelMsg['guild'].push(chat);
		this.event('event_channel_msg',[chat,'guild',0]);
	}

	__proto.onRecvBattleCancel=function(pkg){
		var msg=ProtoMgr.decode(com.road.ddt.proto.LongMsg,pkg);
		var battleMsg;
		var battleId=msg.value+"";
		var chat;
		for (var i=0,n=this._channelMsg['guild'].length;i < n;i++){
			chat=this._channelMsg['guild'][i];
			if (chat.subType==10002){
				battleMsg=chat.msg;
				if ((battleMsg.id+"")==battleId){
					var player1=battleMsg.playerId1+"";
					if (player1==PlayerInfo.instance.playerId){
						GuildMgr.ins.myBattleId=null;
					}
					this._channelMsg['guild'].splice(i,1);
					EventMgr.ins.event('event_remove_guild_item',["battle"+battleId]);
					return;
				}
			}
		}
	}

	__proto.onRecvRequestList=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.GuildRequestListMsg,pkg);
		var msg=res.list[0];
		this.updateGuildResMsg(msg);
	}

	__proto.onRecvGuildPassjoin=function(pkg){
		var msg=ProtoMgr.decode(com.road.ddt.proto.GuildRequestMsg,pkg);
		this.updateGuildResMsg(msg);
		if (msg.playerId.toString()==PlayerInfo.instance.playerId){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002212"));
			SocketManager.Instance.out.requestOneGuildData(msg.requestGuildId.toString());
			return;
		}
		if(msg.opPlayerId.toString()=="-1")return;
		var chat=new ChatInfo();
		chat.createTime=TimeManager.Instance.NowTime();
		chat.channelId=5;
		chat.type=5;
		chat.subType=10001;
		chat.sendPlayer=null;
		if (msg.opPlayerId.toString()=="-1"){
			chat.param="#ff0000";
			chat.content=msg.nickName+" "+LanguageMgr.Ins.GetLan("9002113");
		}
		else{
			if (msg.isPassed){
				chat.param="#00c1ff";
				chat.content=LanguageMgr.Ins.GetLan("9010001",msg.opNickName,msg.nickName);
			}
			else{
				chat.param="#8b5019";
				chat.content=LanguageMgr.Ins.GetLan("9002172",msg.opNickName,msg.nickName);
			}
		}
		this._channelMsg['guild'].push(chat);
		this.event('event_channel_msg',[chat,'guild',0]);
	}

	__proto.updateGuildResMsg=function(msg){
		var chat;
		for (var i=0,n=this._channelMsg['guild'].length;i < n;i++){
			chat=this._channelMsg['guild'][i];
			if (chat.subType==10003){
				if ((chat.msg).playerId==msg.playerId){
					if (msg.isExist){
						chat.msg=msg;
						chat.createTime=TimeManager.Instance.NowTime();
						EventMgr.ins.event('event_update_guild_item',["chatReq"+msg.playerId,chat]);
					}
					else{
						this._channelMsg['guild'].splice(i,1);
						EventMgr.ins.event('event_remove_guild_item',["chatReq"+msg.playerId]);
					}
					return;
				}
			}
		}
		chat=this.genInfoByChatReqMsg(msg);
		this._channelMsg['guild'].push(chat);
		EventMgr.ins.event("recv_guild_passjoin");
		this.event('event_channel_msg',[chat,'guild',0]);
	}

	__proto.onRecvGuildHitory=function(pkg){
		this.clearChannelMsg('guild');
		GuildMgr.ins.myBattleId=null;
		var result=[];
		var res=ProtoMgr.decode(com.road.ddt.proto.GuildLoginLoadMsg,pkg);
		var i=0,n=0,chat;
		if (res.battleList && res.battleList.list.length > 0){
			var battleMsg;
			for (i=0,n=res.battleList.list.length;i < n;i++){
				battleMsg=res.battleList.list [i];
				if (TimeManager.Instance.checkTimeEndNum(parseFloat(battleMsg.expireTime))> 0){
					chat=this.genInfoByChatBattleMsg(res.battleList.list[i]);
					result.push(chat);
					if (battleMsg.playerId1+""==PlayerInfo.instance.playerId){
						if (battleMsg.winnerId+""=="-1"){
							GuildMgr.ins.myBattleId=battleMsg.id+"";
						}
						else{
							GuildMgr.ins.myBattleId=null;
						}
					}
				}
			}
		}
		if (res.chatMsgs.length > 0 && this._channelSetting['guild']){
			for (i=0,n=res.chatMsgs.length;i < n;i++){
				chat=this.genInfoByChatMsg(res.chatMsgs[i]);
				result.push(chat);
			}
		}
		if (res.requestList && res.requestList.list.length > 0){
			for (i=0,n=res.requestList.list.length;i < n;i++){
				if ((res.requestList.list [i]).isExist){
					chat=this.genInfoByChatReqMsg(res.requestList.list[i]);
					result.push(chat);
				}
			}
		}
		if (res.donateList && res.donateList.list.length > 0){
			for (i=0,n=res.donateList.list.length;i < n;i++){
				if ((res.donateList.list [i]).isExist){
					chat=this.genInfoByChatDonateMsg(res.donateList.list[i]);
					result.push(chat);
				}
			}
		}
		result.sort(function(a,b){
			if (a.createTime > b.createTime){
				return-1;
			}
			else if (a.createTime > b.createTime){
				return 1;
			}
			else{
				return 0;
			}
		});
		this._channelMsg['guild']=result;
		this.event('event_channel_msg',[chat,'guild',0]);
	}

	__proto.genInfoByChatMessageMsg=function(msg){
		var chat=new ChatInfo;
		chat.createTime=TimeManager.Instance.NowTime();
		var chatPlayer=new ChatPlayerInfo;
		chatPlayer.playerId=msg.sendPlayer.playerId+"";
		chatPlayer.nickName=msg.sendPlayer.nickName;
		chatPlayer.avatar=msg.sendPlayer.avatar;
		chatPlayer.sex=msg.sendPlayer.sex;
		chatPlayer.trophy=msg.sendPlayer.trophy;
		chatPlayer.guildName=msg.sendPlayer.guildName;
		chatPlayer.openId=msg.sendPlayer.openId;
		chatPlayer.punishEnd=msg.sendPlayer.punishEnd;
		chatPlayer.punishTip=msg.sendPlayer.punishTip;
		chatPlayer.vipLevel=msg.sendPlayer.vipLevel;
		chat.sendTo=msg.sendTo;
		chat.type=msg.type;
		chat.sendPlayer=chatPlayer;
		chat.content=msg.content;
		chat.channelId=msg.channelId;
		chat.param=msg.param;
		chat.sendBarrage=msg.sendBarrage;
		return chat;
	}

	__proto.genInfoByChatMsg=function(msg){
		var chat=new ChatInfo;
		chat.createTime=parseInt(msg.createTime);
		var chatPlayer=new ChatPlayerInfo;
		chatPlayer.playerId=msg.playerId+"";
		chatPlayer.nickName=msg.nickName;
		chatPlayer.avatar=msg.avatar;
		chatPlayer.sex=msg.sex;
		chatPlayer.trophy=msg.trophy;
		chatPlayer.guildName=GuildInfo.instance.guildName;
		chat.sendTo=[];
		chat.type=5;
		chat.subType=msg.chatType;
		chat.sendPlayer=chatPlayer;
		chat.content=msg.msg;
		chat.channelId=5;
		return chat;
	}

	__proto.genInfoByChatDonateMsg=function(msg){
		var chat=new ChatInfo;
		chat.createTime=parseInt(msg.createTime);
		var chatPlayer=new ChatPlayerInfo;
		chatPlayer.playerId=msg.playerId+"";
		chatPlayer.nickName=msg.nickName;
		chatPlayer.guildName=GuildInfo.instance.guildName;
		chat.sendTo=[];
		chat.type=5;
		chat.subType=10000;
		chat.sendPlayer=chatPlayer;
		chat.content="";
		chat.msg=msg;
		chat.channelId=5;
		return chat;
	}

	__proto.genInfoByChatBattleMsg=function(msg){
		var chat=new ChatInfo;
		chat.createTime=parseInt(msg.createTime);
		var chatPlayer=new ChatPlayerInfo;
		chatPlayer.guildName=GuildInfo.instance.guildName;
		chat.sendTo=[];
		chat.type=5;
		chat.subType=10002;
		chat.sendPlayer=chatPlayer;
		chat.content="";
		chat.msg=msg;
		chat.channelId=5;
		return chat;
	}

	__proto.genInfoByChatReqMsg=function(msg){
		var chat=new ChatInfo;
		chat.createTime=parseInt(msg.createTime);
		var chatPlayer=new ChatPlayerInfo;
		chatPlayer.playerId=msg.playerId+"";
		chatPlayer.nickName=msg.nickName;
		chatPlayer.guildName=GuildInfo.instance.guildName;
		chat.sendTo=[];
		chat.type=5;
		chat.subType=10003;
		chat.sendPlayer=chatPlayer;
		chat.content="";
		chat.msg=msg;
		chat.channelId=5;
		return chat;
	}

	__proto.addMsg=function(arr,msg,max){
		(max===void 0)&& (max=200);
		var len=arr.length+1-max;
		var isRemoved=len > 0;
		isRemoved && arr.splice(0,len);
		arr.push(msg);
		return len;
	}

	__getset(1,ChatMgr,'ins',function(){
		return ChatMgr._ins=ChatMgr._ins|| new ChatMgr;
	},laya.events.EventDispatcher._$SET_ins);

	ChatMgr._ins=null;
	return ChatMgr;
})(EventDispatcher)


//class modules.invitepay.InvitePayMgr extends laya.events.EventDispatcher
var InvitePayMgr=(function(_super){
	function InvitePayMgr(){
		this.payList=null;
		this._removeDict=null;
		InvitePayMgr.__super.call(this);
		this.payList=[];
		this._removeDict={};
	}

	__class(InvitePayMgr,'modules.invitepay.InvitePayMgr',_super);
	var __proto=InvitePayMgr.prototype;
	__proto.init=function(){
		SocketManager.Instance.on(0x010B,this,this.onRecvPayCreateMsg);
		SocketManager.Instance.on(0x010C,this,this.onRecvPayMsg);
		SocketManager.Instance.on(0x010D,this,this.onRecvPayAllMsg);
	}

	__proto.initOver=function(){}
	__proto.onRecvPayCreateMsg=function(pkg){
		var msg=ProtoMgr.decode(com.road.ddt.proto.FriendPayCreateRsp,pkg);
		console.log(">>>>>>>>>>>>>订单号:"+msg.info.id);
		var parma={"addPath":"&invitePayId="+msg.info.id};
		var arr=[];
		arr[0]=ShareConst.PAY_INVITE;
		arr[1]=parma;
		EventMgr.ins.event("SHARE",[arr]);
	}

	__proto.onRecvPayMsg=function(pkg){
		var msg=ProtoMgr.decode(com.road.ddt.proto.FriendPayInfoRsp,pkg);
		this.addPayInfo(msg.info)&& this.event("InvitePayConst.EVENT_UPDATE_ALL");
	}

	__proto.onRecvPayAllMsg=function(pkg){
		this.payList.length=0;
		var msg=ProtoMgr.decode(com.road.ddt.proto.FriendPayAllInfoRsp,pkg);
		for (var i=0,n=msg.info.length;i < n;i++){
			this.addPayInfo(msg.info[i]);
		}
		this.event("InvitePayConst.EVENT_UPDATE_ALL");
	}

	__proto.sendCreateInvitePay=function(shopId,shopType){
		var msg=new com.road.ddt.proto.FriendPayCreateReq;
		msg.shopId=shopId;
		msg.shopType=shopType;
		SocketManager.Instance.sendSocketData(0x290D,msg);
	}

	__proto.sendInvitePay=function(payId){
		for (var i=0,n=this.payList.length;i < n;i++){
			if (payId==this.payList[i].id){
				return;
			}
		};
		var msg=new com.road.ddt.proto.FriendPayInfoReq;
		msg.id=payId;
		SocketManager.Instance.sendSocketData(0x290E,msg);
	}

	__proto.sendInvitePayConfirm=function(payId){
		this.removePayInfo(payId)&& this.event("InvitePayConst.EVENT_UPDATE_ALL");
		var msg=new com.road.ddt.proto.FriendPayReplyReq;
		msg.id=payId;
		msg.type=1;
		SocketManager.Instance.sendSocketData(0x290F,msg);
	}

	__proto.sendInvitePayReject=function(payId){
		this.removePayInfo(payId)&& this.event("InvitePayConst.EVENT_UPDATE_ALL");
		var msg=new com.road.ddt.proto.FriendPayReplyReq;
		msg.id=payId;
		msg.type=0;
		SocketManager.Instance.sendSocketData(0x290F,msg);
	}

	__proto.removePayInfo=function(payId){
		this._removeDict[payId]=true;
		for (var i=0,n=this.payList.length;i < n;i++){
			if (this.payList[i].id==payId){
				this.payList.splice(i,1);
				return true;
			}
		}
		return false;
	}

	__proto.addPayInfo=function(msg){
		if (this._removeDict[msg.id]){
			return false;
		}
		this.payList.push(new InvitePayInfo(msg));
		return true;
	}

	__getset(1,InvitePayMgr,'ins',function(){
		return InvitePayMgr._ins=InvitePayMgr._ins|| new InvitePayMgr;
	},laya.events.EventDispatcher._$SET_ins);

	InvitePayMgr._ins=null;
	return InvitePayMgr;
})(EventDispatcher)


/**
*玩家数据管理类
*@author weiqiang.huang
*
*/
//class modules.player.PlayerInfoMgr extends laya.events.EventDispatcher
var PlayerInfoMgr=(function(_super){
	function PlayerInfoMgr(){
		this.IsLevelUp=false;
		this.IsVipUpgrade=false;
		/**
		*玩家物品信息
		*/
		this.itemsDic=null;
		this.itemIdDic={};
		this.isFirstLogin=false;
		this.isFirst=false;
		this.lastTime=0;
		// socket是否断了
		this.isClose=false;
		this.recordIsFirst=true;
		this.IsPlayerShare=false;
		this.isOpenAdvertising=false;
		this.hasGuild=false;
		/**
		*调用服务器接口获取玩家头像图片数据
		*/
		this._httpRequest=null;
		this.base64HeadDict={};
		PlayerInfoMgr.__super.call(this);
		PlayerInfoMgr._ins=this;}
	__class(PlayerInfoMgr,'modules.player.PlayerInfoMgr',_super);
	var __proto=PlayerInfoMgr.prototype;
	__proto.setup=function(){
		var self=this;
		this.itemsDic=new Dictionary();
		SocketManager.Instance.on(0x0011,self,self.onUpdatePlayerInfo);
		SocketManager.Instance.on(0x0012,self,self.onSYSMessage);
		SocketManager.Instance.on(0x0014,self,self.onPlayerSkills);
		SocketManager.Instance.on(0x002B,self,self.onLevelUp);
		SocketManager.Instance.on(0x0030,self,self.onPlayerItems);
		SocketManager.Instance.on(0x0032,self,self.onPlayerChangeItems);
		SocketManager.Instance.on(0x003B,self,self.onOpenLocked);
		SocketManager.Instance.on(0x006B,self,self.onFirstLogin);
		SocketManager.Instance.once(0x008D,self,self.onActivityNotice);
		SocketManager.Instance.on(0x0107,self,self.onCardsInfo)
		SocketManager.Instance.on(0x0113,self,self.onVipUpgrade);
		SocketManager.Instance.on(0x0107,self,self.onCardsInfo);
	}

	__proto.onCardsInfo=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.PlayerCardsMsg,pkg);
		var arr=res.cards;
		if(!arr){
			return;
		};
		var allSpecialCardEndTimes=PlayerInfo.instance.allSpecialCardEndTimes;
		for (var i=0;i < arr.length;i++){
			var item=arr [i];
			allSpecialCardEndTimes[item.type]=parseFloat(item.endTime);
		}
		this.event("player_info_change");
	}

	__proto.onActivityNotice=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.NotifyClientMsg,pkg);
		var arr=res.notifyInfo;
		for (var i=0;i < arr.length;i++){
			var item=arr [i];
			if(item.type==1){
				GuildMgr.ins.hasBoxAct=item.value;
			}
		}
	}

	/**
	*首次登陆
	*/
	__proto.onFirstLogin=function(pkg){
		this.isFirstLogin=true;
		this.isFirst=true;
	}

	/**
	*解锁宝箱
	*/
	__proto.onOpenLocked=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.ItemInfoMsg,pkg);
		var info=new PlayerItemInfo();
		info.id=res.id;
		info.itemID=res.itemId;
		info.count=res.count;
		info.expireTime=res.expireTime;
		info.isLocked=res.isLocked;
		info.index=res.index;
		info.isShared=res.isShared;
		this.itemsDic.set(info.id,info);
		var vo=ItemModel.getItemConfigData(info.itemID);
		var temp=new ItemVO();
		for(var key in vo){
			temp[key]=vo[key];
		}
		temp.Id=info.id;
		temp.EndTime=parseInt(info.expireTime);
		temp.isLocked=info.isLocked;
		temp.index=info.index;
		this.event("box_opernlocked_update",temp);
	}

	/**
	*增量或移除物品信息
	*/
	__proto.onPlayerChangeItems=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.ItemInfoListMsg,pkg);
		var len=res.items.length;
		if (len > 0){
			for (var i=0;i < res.items.length;i++){
				if (res.items[i].count <=0){
					this.itemsDic.remove(res.items[i].id);
					this.itemIdDic[res.items[i].itemId]=null;
					this.event("item_change_remove",[res.items[i].id,res.items[i].itemId]);
				}
				else{
					var info=new PlayerItemInfo();
					info.id=res.items[i].id;
					info.itemID=res.items[i].itemId;
					info.count=res.items[i].count;
					info.expireTime=res.items[i].expireTime;
					info.isLocked=res.items[i].isLocked;
					info.index=res.items[i].index;
					info.isShared=res.items[i].isShared;
					var isNew=this.itemsDic.indexOf(info.id)==-1;
					this.itemsDic.set(info.id,info);
					this.itemIdDic[info.itemID]=info;
					var vo=ItemModel.getItemConfigData(info.itemID);
					if(vo && vo.Type==4){
						if(isNew && vo.SubType==3 && info.isLocked==true){
							EventMgr.ins.event("ADDITEMBOX_UPDATE",info);
						}
						else if(!info.isLocked){
							EventMgr.ins.event("item_box_update",vo);
						}
					}
				}
				if (res.items[i].itemId==6006001){
					EventMgr.ins.event("recv_speaker_change")
				}
				if (res.items[i].itemId==6007001 || res.items[i].itemId==6007002 || res.items[i].itemId==6007003){
					EventMgr.ins.event("REFRESH_ROOM_ITEM",res.items[i].itemId);
				}
			}
		}
		this.event("item_change_update");
	}

	/**
	*玩家物品信息
	*/
	__proto.onPlayerItems=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.ItemInfoListMsg,pkg);
		var len=res.items.length;
		this.itemsDic.clear();
		if(len > 0){
			for (var i=0;i < res.items.length;i++){
				var info=new PlayerItemInfo();
				info.id=res.items[i].id;
				info.itemID=res.items[i].itemId;
				info.count=res.items[i].count;
				info.expireTime=res.items[i].expireTime;
				info.isLocked=res.items[i].isLocked;
				info.index=res.items[i].index;
				info.isShared=res.items[i].isShared;
				this.itemsDic.set(info.id,info);
				this.itemIdDic[info.itemID]=info;
				if(info.itemID==6006001){
					EventMgr.ins.event("recv_speaker_change")
				}
			}
		}
	}

	/**
	*玩家等级提升
	*/
	__proto.onLevelUp=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.PlayerUpgradeMsg,pkg);
		PlayerInfo.instance.grade=res.level;
		PlayerInfo.instance.level_up=res.oldLevel;
		PlayerInfo.instance.add_blood=res.blood;
		PlayerInfo.instance.add_damage=res.damage;
		PlayerInfo.instance.add_speed=res.speed;
		PlayerInfo.instance.unlockID=res.__function;
		this.IsLevelUp=true;
		if(res.level>10&&res.level%10==0){
			modules.player.PlayerInfoMgr.ins.isOpenAdvertising=false;
		}
		EventMgr.ins.event("PLAYER_LEVEL_UP");
	}

	/**
	*玩家VIP等级提升
	*/
	__proto.onVipUpgrade=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.PlayerUpgradeMsg,pkg);
		PlayerInfo.instance.vipLv=res.level;
		PlayerInfo.instance.pre_viplevel=res.oldLevel;
		this.IsVipUpgrade=true;
		EventMgr.ins.event("player_vip_upgrade");
	}

	/**
	*获取玩家基本信息
	*/
	__proto.onUpdatePlayerInfo=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.PlayerInfoMsg,pkg);
		if(res.hasPlayerId)PlayerInfo.instance.playerId=res.playerId;
		if(res.hasNickName)PlayerInfo.instance.nickName=StringUtils.subName(res.nickName,200,20);
		if(res.hasSex)PlayerInfo.instance.sex=res.sex;
		if(res.hasLevel)PlayerInfo.instance.grade=res.level;
		if(res.hasExp){
			SoundMgr.instance.playSound(4006028);
			PlayerInfo.instance.exp=res.exp;
		}
		if(res.hasGold)PlayerInfo.instance.gold=res.gold;
		if(res.hasDiamond)PlayerInfo.instance.diamond=res.diamond;
		if(res.hasPinkDiamond)PlayerInfo.instance.pinkDiamond=res.pinkDiamond;
		if(res.hasConsortiaID){
			PlayerInfo.instance.consortiaID=res.consortiaID;
			if(res.consortiaID=="-1"){
				this.hasGuild=false;
			}else this.hasGuild=true;
		};
		if(res.hasSpeed)PlayerInfo.instance.speed=res.speed;
		if(res.hasDamage)PlayerInfo.instance.damage=res.damage;
		if(res.hasBlood)PlayerInfo.instance.blood=res.blood;
		if(res.hasCrit)PlayerInfo.instance.crit=res.crit;
		if(res.hasCritDamage)PlayerInfo.instance.critDamage=res.critDamage;
		if(res.hasParry)PlayerInfo.instance.parry=res.parry;
		if(res.hasAvatar && !PlayerInfo.instance.avatar)PlayerInfo.instance.avatar=res.avatar;
		if(res.hasOptionOnOff)PlayerInfo.instance.optionOnOff=res.optionOnOff;
		if(res.hasTrophy)PlayerInfo.instance.trophy=res.trophy;
		if(res.hasAppleGameScore)PlayerInfo.instance.appleGameScore=res.appleGameScore;
		if(res.hasAppleGameGold)PlayerInfo.instance.appleGameGold=res.appleGameGold;
		if(res.hasDayShootAskTimes)PlayerInfo.instance.dayShootAskTimes=res.dayShootAskTimes;
		if(res.hasDivision)PlayerInfo.instance.division=res.division;
		if(res.hasCurrentStar)PlayerInfo.instance.currentStar=res.currentStar;
		if(res.hasLastFailCount)PlayerInfo.instance.lastFailCount=res.lastFailCount;
		if(res.hasLastWin)PlayerInfo.instance.lastWin=res.lastWin;
		if(res.hasGoldCount)PlayerInfo.instance.goldCount=res.goldCount;
		if(res.hasLanguage)var indexLan=res.language;
		if(indexLan !=-1 && indexLan < LanguageMgr.Ins.countryAry.length)
			LanguageMgr.Ins.country=LanguageMgr.Ins.countrySet[indexLan];
		if(res.hasFreeBoxCount)PlayerInfo.instance.free_box_count=res.freeBoxCount;
		if(res.hasGuildJob)PlayerInfo.instance.guildJob=res.guildJob;
		if(res.hasWeekSkillDonate)PlayerInfo.instance.weekSkillDonate=res.weekSkillDonate;
		if(res.hasFreeBoxUpdatetime)PlayerInfo.instance.free_box_updatetime=res.freeBoxUpdatetime;
		if(res.hasWinCount)PlayerInfo.instance.win_count=res.winCount;
		if(res.hasWinBoxCount)PlayerInfo.instance.win_box_count=res.winBoxCount;
		if(res.hasWinBoxUpdatetime)PlayerInfo.instance.win_box_updatetime=res.winBoxUpdatetime;
		if(res.hasWinBoxIndex)PlayerInfo.instance.win_box_index=res.winBoxIndex;
		if(res.hasCollectSkill)PlayerInfo.instance.collectSkill=res.collectSkill;
		if(res.hasCommonSkill)PlayerInfo.instance.commonSkill=res.commonSkill;
		if(res.hasMaxTrophy)PlayerInfo.instance.maxTrophy=res.maxTrophy;
		if(res.hasLastTrophy)PlayerInfo.instance.lastPoint=res.lastTrophy;
		if(res.hasJoinGuildTime)PlayerInfo.instance.join_guild_time=res.joinGuildTime;
		if(res.hasGuildDonateTime)PlayerInfo.instance.guild_donate_time=res.guildDonateTime;
		if(res.hasTotalDonates)PlayerInfo.instance.totalDonates=res.totalDonates;
		if(res.hasGuildDonatereqTime){
			PlayerInfo.instance.guild_donatereq_time=res.guildDonatereqTime;
			EventMgr.ins.event("recv_updateDonateTime");
			EventMgr.ins.event("UPDATE_GUILDSHOP_DATA");
		}
		if(res.hasDonateCommonCount)PlayerInfo.instance.donate_common_count=res.donateCommonCount;
		if(res.hasDonateRareCount)PlayerInfo.instance.donate_rare_count=res.donateRareCount;
		if(res.hasOpenBoxFree)PlayerInfo.instance.openBoxFree=res.openBoxFree;
		NewGuideMgr.ins.initGuideData(res.hasGuideNode ? res.guideNode :-1);
		if(res.hasJoinGroup)PlayerInfo.instance.joinGroup=res.joinGroup;
		if(res.hasFriendState)PlayerInfo.instance.friendState=res.friendState;
		if(res.hasFriendValue)PlayerInfo.instance.friendValue=res.friendValue;
		if(res.hasFriendSkillLevel)PlayerInfo.instance.friendSkillLevel=res.friendSkillLevel;
		if(res.hasTodayDonateTimes){
			PlayerInfo.instance.todayDonateTimes=res.todayDonateTimes;
		}
		if(res.hasCounseDonate)PlayerInfo.instance.counseDonate=res.counseDonate;
		if(res.hasVipLevel)PlayerInfo.instance.vipLv=res.vipLevel;
		if(res.hasVipExp){
			PlayerInfo.instance.vipExp=res.vipExp;
			EventMgr.ins.event("vip_exp_update");
		}
		if(res.hasIsGetWeekReward){
			PlayerInfo.instance.isGetWeekReward=res.isGetWeekReward;
			EventMgr.ins.event("vip_week_reward_change");
		}
		if(res.hasProfitPromoteTimes){
			PlayerInfo.instance.profitPromoteTimes=res.profitPromoteTimes;
			EventMgr.ins.event("vip_buy_rocket_profit");
		}
		this.event("player_info_change");
		ConnectMgr.ins.reSendPackage();
		if(res.bigZp > 0){
			PlayerInfo.instance.bigZp=res.bigZp;
			EventMgr.ins.event("activity-bigZp")
		}
		if(res.hasFirstCharge){
			PlayerInfo.instance.firstCharge=res.firstCharge;
			if (res.firstCharge==1){
				EventMgr.ins.event("ACTIVITY_SET_RED");
				}else if (res.firstCharge==2){
				EventMgr.ins.event("UPDATE_QUESTIONVIEW");
			}
		}
		DataMgr.ins.initOver();
	}

	/**
	*玩家当前选择的技能
	*/
	__proto.onPlayerSkills=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.PlayerSkillsMsg,pkg);
		var skills=res.skills;
		PlayerInfo.instance.skills=[];
		if(skills.length > 0){
			var skillID;
			for(var $each_skillID in skills){
				skillID=skills[$each_skillID];
				if(skillID !=0){
					PlayerInfo.instance.skills.push(SkillModel.getSkillConfigData(skillID));
				}
			}
			this.event("player_skills_change");
		}
	}

	/**
	*系统消息提示
	*/
	__proto.onSYSMessage=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.common.NoticeResMsg,pkg);
		var type=res.type;
		var key=res.key;
		var param=res.param;
		if(!LanguageMgr.Ins.GetLan(key)){
			TipsManager.Instance().showTips(key);
			}else{
			TipsManager.Instance().showTips(StringUtils.formate(LanguageMgr.Ins.GetLan(key),param));
		}
	}

	/**
	*告诉服务器登录成功，然后服务器返回用户信息
	*/
	__proto.login=function(){
		ConnectMgr.ins.addHeartBeat();
		SocketManager.Instance.out.sendClientIsLogin();
	}

	/**
	*获取人物对应等级的经验
	*@param grade 等级
	*@return
	*/
	__proto.getPlayerExp=function(grade){
		var upgrade=UpgradeModel.getConfigByLevel(grade,1);
		if (!upgrade)
			return 0;
		return upgrade.Exp;
	}

	/**
	*是否为http链接
	*/
	__proto.isHttpUrl=function(url){
		var ret=false;
		var index=url.indexOf('http')
		index===0 && (ret=true);
		return ret;
	}

	//http连接类
	__proto.getHeadImgUrl=function(headimgurl,callback,headUI){
		if(UrlParam.PARAMS["PLID"]=="wx"||UrlParam.PARAMS["PLID"]=="fb"){
			if(headUI){
				callback.runWith([headimgurl,headUI]);
				}else{
				callback.runWith([headimgurl]);
			}
			return;
		}
		if(this.isHttpUrl(headimgurl)){
			CanvasToBase64.toBase64Url(headimgurl,Handler.create(this,function(base64Url){
				callback.runWith([base64Url]);
			}));
			}else {
			callback.runWith([headimgurl]);
		}
	}

	__proto.onRequestComplete=function(callback,_httpRequest,headUI,headimgurl){
		var url=_httpRequest.data ? "data:image/jpeg;base64,"+JSON.parse(_httpRequest.data):"";
		this.base64HeadDict[headimgurl]=url;
		callback.runWith([url,headUI]);
	}

	__proto.onHttpRequestError=function(callback,headUI){
		callback.runWith(['ranking/ui_mr.png',headUI]);
	}

	/**
	*清除base64图片，可以在切换场景，或者关闭排行榜时调用
	*
	*/
	__proto.clearAllBase64Head=function(){
		var base64Url;
		for(var key in this.base64HeadDict){
			base64Url=this.base64HeadDict[key];
			Laya.loader.clearRes(base64Url);
		}
	}

	/**
	*判断最大字符
	*@param msg
	*@param size
	*@return
	*/
	__proto.stringCut=function(msg,size){
		if (size < 2 && msg.charCodeAt(i)> 255)return "";
		var reStr="";
		var addLength=0;
		for (var i=0;i < size;i++){
			msg.charCodeAt(i)> 255 ? addLength+=2:addLength+=1;
			if (addLength <=size)reStr+=msg.charAt(i);
			else return reStr;
		}
		return reStr;
	}

	/**
	*设置添加昵称~
	*/
	__proto.setNickName=function(nickName,qqNickName){
		if(nickName==qqNickName || qqNickName==""){
			return this.stringCut(nickName,20);
		}
		else{
			var name=nickName+"("+qqNickName+")";
			name=this.stringCut(name,20);
			return name;
		}
	}

	/**
	*查询是否我的QQ好友
	*/
	__proto.checkIsMyFriend=function(openId){
		var friengAry=modules.qqsdk.H5jssdkManager.instance.friengAry;
		for (var i=0;i < friengAry.length;i++){
			var info=friengAry[i];
			if(info.openId==openId){
				return true;
			}
		}
		return false;
	}

	__proto.getItemCount=function(id){
		switch(id){
			case ItemConst.GOLD:{
					return PlayerInfo.instance.gold;
				}
			case ItemConst.GEM:{
					return PlayerInfo.instance.diamond;
				}
			case ItemConst.PINKGEM:{
					return PlayerInfo.instance.pinkDiamond;
				}
			}
		if (this.itemIdDic[id]){
			return this.itemIdDic[id]['count'];
		}
		return 0;
	}

	__getset(1,PlayerInfoMgr,'ins',function(){
		if(!PlayerInfoMgr._ins)
			PlayerInfoMgr._ins=new PlayerInfoMgr();
		return PlayerInfoMgr._ins
	},laya.events.EventDispatcher._$SET_ins);

	PlayerInfoMgr._ins=null;
	return PlayerInfoMgr;
})(EventDispatcher)


//class modules.pve.PveMgr extends laya.events.EventDispatcher
var PveMgr=(function(_super){
	function PveMgr(){
		this.userInfo=null;
		PveMgr.__super.call(this);
	}

	__class(PveMgr,'modules.pve.PveMgr',_super);
	var __proto=PveMgr.prototype;
	__proto.init=function(){
		this.userInfo=new PveInfo;
		this.userInfo.info=[];
		PveModel.allConfig;
		for (var i=0;i < PveConst.MAX_STAGE;i++){
			this.userInfo.info.push(new PveStageInfo(i+1));
		}
		SocketManager.Instance.on(0x00A3,this,this.onRecvInfoMsg);
		SocketManager.Instance.on(0x00A4,this,this.onRecvResultMsg);
	}

	__proto.initOver=function(){}
	__proto.sendEnter=function(stage){
		var msg=new com.road.ddt.proto.battle.BattleMatchMsg;
		msg.battleType=9;
		msg.param2=stage;
		SocketManager.Instance.sendSocketData(0x2715,msg);
	}

	__proto.sendSweep=function(stage){
		var msg=new com.road.ddt.proto.SimpleMsg;
		msg.param1=2;
		msg.param2=stage;
		SocketManager.Instance.sendSocketData(0x2811,msg);
	}

	__proto.sendBuyBattleBuff=function(buffId){
		var msg=new com.road.ddt.proto.SimpleMsg;
		msg.param1=1;
		msg.param2=buffId;
		SocketManager.Instance.sendSocketData(0x2811,msg);
	}

	__proto.onRecvInfoMsg=function(pkg){
		var msg=ProtoMgr.decode(com.road.ddt.proto.PVEPlayerInfoMsg,pkg);
		msg.hasRecordStage && (this.userInfo.recordStage=msg.recordStage);
		msg.hasCount && (this.userInfo.count=msg.count);
		var info;
		for (var i=0,n=msg.info.length,stage;i < n;i++){
			stage=msg.info[i];{
				info=this.userInfo.info[stage.stage-1];
			}
			info && info.update(stage);
		}
		this.event('EVENT_UPDATE_STAGE');
	}

	__proto.onRecvResultMsg=function(pkg){
		var msg=ProtoMgr.decode(com.road.ddt.proto.PVEResultMsg,pkg);
		var data={reward:[],stage:msg.stage};
		if (Boolean(msg.gift)){
			var group=msg.gift.split("|");
			var sub;
			for (var i=0,n=group.length;i < n;i++){
				if (!Boolean(group[i])){
					continue ;
				}
				sub=group[i].split(",");
				data.reward.push({"id":int(sub[0]),"count":int(sub[1])});
			}
		}
		if (msg.hasIsWin){
			if (msg.isWin){
				data["time"]=msg.time;
				data["damage"]=msg.damage;
				Laya.timer.once(2000,this,function(){
					UIMgr.ins.openView("PveResultWinView",Handler.create(this,function(view){
						view.dataSource=data;
					}));
				});
			}
			else{
				Laya.timer.once(2000,this,function(){
					UIMgr.ins.openView("PveResultLoseView",Handler.create(this,function(view){
						view.dataSource=data;
					}));
				});
			}
		}
		else{
			UIMgr.ins.openView("PveResultSweepView",Handler.create(this,function(view){
				view.dataSource=data;
			}));
		}
	}

	__getset(1,PveMgr,'ins',function(){
		return PveMgr._ins=PveMgr._ins|| new PveMgr;
	},laya.events.EventDispatcher._$SET_ins);

	PveMgr._ins=null;
	return PveMgr;
})(EventDispatcher)


/**
*网络通讯层管理器 用于管理包的接收和发送
*@author zhihua.zhou
*@date 2017-6-22
*/
//class net.SocketManager extends laya.events.EventDispatcher
var SocketManager=(function(_super){
	function SocketManager(){
		this._socket=null;
		this._out=null;
		this._record=null;
		SocketManager.__super.call(this);
		this._socket=new ByteSocket();
		this._socket._event=this;
		this._socket.on("close",this,this.closeHandler);
		this._socket.on("error",this,this.errorHandler);
		this._socket.on("open",this,this.openHandler);
		this._out=new GameSocketOut(this);
		this._record=new GameRecords(this);
	}

	__class(SocketManager,'net.SocketManager',_super);
	var __proto=SocketManager.prototype;
	__proto.on=function(type,caller,listener,args){
		return _super.prototype.on.call(this,String(type),caller,listener,args);
	}

	/**开始连接 */
	__proto.connect=function(){
		var self=this;
		self._socket.connect(PlayerInfo.instance.address,PlayerInfo.instance.port);
		Laya.timer.once(10000,this,this.outTime);
	}

	__proto.outTime=function(){
		if (Browser.window.wxutil)
			Browser.window.wxutil.hideload();
		this.closeSocketForce();
	}

	__proto.exitProgram=function(){
		JSMgr.replaceGame();
	}

	/**正确建立连接 */
	__proto.openHandler=function(e){
		Laya.timer.clear(this,this.outTime);
		this.event("socket_reconnect_success");
		this.event("socket_open","Socket连接成功...");
	}

	/**
	*发送数据到服务器
	*/
	__proto.sendSocketData=function(code,msg){
		if (this.isClosed)
			this.event("socket_disconnect_cache_msg",{"code":code,"msg":msg});
		else
		this._socket.sendPackage(code,msg);
	}

	/**
	*发送字符串给服务器
	*@param codeStr :要发送的字符串
	*/
	__proto.sendStringMsg=function(codeStr){
		var msg=new com.road.ddt.proto.SimpleMsg;
		msg.param4=codeStr;
		this.sendSocketData(0x3501,msg);
	}

	/**关闭链接发起重连 */
	__proto.closeSocket=function(){
		this._socket.closeSocket();
		this.event("socket_reconnect_start");
	}

	/**强制关闭链接,不会发起重连,确认后重连 */
	__proto.closeSocketForceConfirmToConnect=function(){
		var _$this=this;
		this._socket.closeSocket();
		console.log("closeSocketForceConfirmToConnect");
		NewGuideMgr.ins.closeAllGuide();
		TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("9002177"),"","",Handler.create(this,function(){
			_$this.event("socket_reconnect_start");
		}));
	}

	/**强制关闭链接,不会发起重连 */
	__proto.closeSocketForce=function(){
		ConnectMgr.ins.setServerClose();
		this._socket.closeSocket();
		NewGuideMgr.ins.closeAllGuide();
		TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("9002177"),"","",Handler.create(this,this.exitProgram));
	}

	/**关闭事件 */
	__proto.closeHandler=function(e){
		this.event("socket_close","Socket连接中断...");
		this.closeSocket();
	}

	/**连接出错 */
	__proto.errorHandler=function(e){
		this.event("socket_error","Socket连接异常...");
		this.closeSocket();
	}

	__getset(0,__proto,'record',function(){
		return this._record;
	});

	__getset(0,__proto,'socket',function(){
		return this._socket;
	});

	/**
	*获取给服务器发送数据的类
	*/
	__getset(0,__proto,'out',function(){
		return this._out;
	});

	/**socket是否断连*/
	__getset(0,__proto,'isClosed',function(){
		return !this._socket.connected;
	});

	__getset(1,SocketManager,'Instance',function(){
		return SocketManager._ins=SocketManager._ins|| new SocketManager();
	},laya.events.EventDispatcher._$SET_Instance);

	SocketManager._ins=null;
	return SocketManager;
})(EventDispatcher)


//class modules.newguide.core.BaseGuideNode extends modules.newguide.core.BaseGuide
var BaseGuideNode=(function(_super){
	function BaseGuideNode(nodeId){
		//节点数据
		this.nodeId=0;
		this.openLevel=0;
		this.steps=[];
		this.curStepId=0;
		//从1开始计数
		this.curStepNode=null;
		BaseGuideNode.__super.call(this);
		this.nodeId=nodeId;
		this.initGuide();
	}

	__class(BaseGuideNode,'modules.newguide.core.BaseGuideNode',_super);
	var __proto=BaseGuideNode.prototype;
	__proto.checkGuide=function(){
		if(this.isPassCondition){
			this.executeGuide();
		}
	}

	__proto.gotoNext=function(gotoValue){
		(gotoValue===void 0)&& (gotoValue=1);
		this.curStepId+=gotoValue;
		if(this.curStepId > this.steps.length){
			this.finishGuide();
		}
		else{
			this.executeGuide();
		}
	}

	//checkGuide();
	__proto.executeGuide=function(){
		if(this.curStepNode==null || this.curStepNode.guideState==4){
			var idx=this.curStepId-1;
			var stepClass=this.steps[idx];
			this.curStepNode=stepClass ? new stepClass(this,this.curStepId):null;
		}
		if(this.curStepNode){
			if(this.curStepNode.guideState==0){
				this.curStepNode.initGuide();
			}
			this.curStepNode.checkGuide();
		}
		else{
			this.finishGuide();
		}
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		_super.prototype.finishGuide.call(this,isNext);
		if(this.steps)this.steps.length=0;
		if(isNext){
			this.nextGuideNode();
		}
		if(this.curStepNode){
			this.curStepNode.finishGuide(false);
		}
		this.curStepNode=null;
	}

	__proto.nextGuideNode=function(){
		NewGuideMgr.ins.nextGuideNode();
	}

	__getset(0,__proto,'isPassCondition',function(){
		return PlayerInfo.instance.grade >=this.openLevel;
	});

	return BaseGuideNode;
})(BaseGuide)


//class modules.newguide.core.BaseGuideNodeStep extends modules.newguide.core.BaseGuide
var BaseGuideNodeStep=(function(_super){
	function BaseGuideNodeStep(guideNode,stepId){
		this.guideNode=null;
		this.stepId=0;
		this.level=0;
		this._add_Condition=true;
		this.isExecuteGuided=false;
		this.type=null;
		//触发类型
		this._target=null;
		//触发目标 具体内容和触发类型相关
		this.triggerHandler=null;
		//手指指引信息设置
		this.info=null;
		this.isMask=true;
		this.maskAlpha=0.6;
		//指引描述框
		this.desc=null;
		this.isLeft=false;
		this.descOffX=0;
		this.descOffY=0;
		//对话框
		this.content=null;
		this.npcName=null;
		this.guideView=null;
		BaseGuideNodeStep.__super.call(this);
		this.guideNode=guideNode;
		this.stepId=stepId;
		LayerMgr.ins.newGuideTopLayer.mouseEnabled=true;
	}

	__class(BaseGuideNodeStep,'modules.newguide.core.BaseGuideNodeStep',_super);
	var __proto=BaseGuideNodeStep.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
	}

	__proto.checkGuide=function(){
		_super.prototype.checkGuide.call(this);
		if(this.isPassCondition){
			this.executeGuide();
		}
	}

	__proto.executeGuide=function(){
		if(this.isExecuteGuided){
			return;
		}
		_super.prototype.executeGuide.call(this);
		if(this.triggerHandler && !this.triggerHandler.once){
			new Error("triggerHandler设置不对，仅支持once=true");
		};
		var _triggerTarget=this.target;
		if(_triggerTarget){
			if(this.type=="CLICK"){
				this.guideView=NewGuideUIMgr.ins.showClick(_triggerTarget,this.info,this.isMask,this.maskAlpha);
				this.addListenTargetClick(_triggerTarget);
				this.isExecuteGuided=true;
			}
			else if(this.type=="CLICK_HICK"){
				this.guideView=NewGuideUIMgr.ins.showClick_Chick(_triggerTarget,this.desc,this.isLeft,this.descOffX,this.descOffY,this.info,this.isMask,this.maskAlpha);
				this.addListenTargetClick(_triggerTarget);
				this.isExecuteGuided=true;
			}
			else if(this.type=="CLICK_SKILL_DESC"){
				this.guideView=NewGuideUIMgr.ins.showClick_Skill_Desc(_triggerTarget,this.info,this.isMask,this.maskAlpha);
				this.addListenTargetClick(_triggerTarget);
				this.isExecuteGuided=true;
			}
			else if(this.type=="Battle_LaXian"){
				this.guideView=NewGuideUIMgr.ins.Battle_LaXian(this.triggerHandler,_triggerTarget,this.desc,this.isLeft,this.descOffX,this.descOffY,this.info,this.isMask,this.maskAlpha);
				this.isExecuteGuided=true;
			}
			else if(this.type=="Slide_Guide"){
				this.guideView=NewGuideUIMgr.ins.Slide_Guide(this.triggerHandler,_triggerTarget,this.desc,this.isLeft,this.descOffX,this.descOffY,this.info,this.isMask,this.maskAlpha);
				this.isExecuteGuided=true;
			}
		}
		if(this.type=="TALK"){
			this.guideView=NewGuideUIMgr.ins.showTalk(this.triggerHandler,this.content,this.npcName,
			Handler.create(this,function(){
				LayerMgr.ins.newGuideTopLayer.mouseEnabled=false;
			}));
			this.isExecuteGuided=true;
		}
		else if(this.type=="FuncHandler"){
			if(this.triggerHandler){
				this.triggerHandler.run();
				this.triggerHandler=null;
			}
			this.isExecuteGuided=true;
		}
		if(this.isExecuteGuided && this.type !="TALK"){
			LayerMgr.ins.newGuideTopLayer.mouseEnabled=false;
		}
	}

	__proto.addListenTargetClick=function(target){
		target.on("click",this,this.targetClick,[target]);
	}

	__proto.targetClick=function(target){
		target.off("click",this,this.targetClick);
		this.finishGuide();
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		_super.prototype.finishGuide.call(this,isNext);
		if(this.guideView){
			if((typeof this.guideView=='string')){
				UIMgr.ins.closeView(this.guideView);
			}
			else{
				this.guideView.removeSelf();
				this.guideView.destroy();
				this.guideView=null;
			}
		}
		if(this.triggerHandler && this.triggerHandler["_id"] > 0){
			this.triggerHandler.recover();
			this.triggerHandler=null;
		}
		if(isNext){
			this.guideNode.gotoNext();
		}
		this.guideNode=null;
	}

	__getset(0,__proto,'add_Condition',function(){
		return this._add_Condition;
		},function(value){
		this._add_Condition=value;
	});

	__getset(0,__proto,'target',function(){
		return this._target;
		},function(value){
		this._target=value;
	});

	__getset(0,__proto,'isPassCondition',function(){
		return PlayerInfo.instance.grade >=this.level && this.add_Condition;
	});

	return BaseGuideNodeStep;
})(BaseGuide)


//class modules.player.events.PlayerInfoEvent extends laya.events.Event
var PlayerInfoEvent=(function(_super){
	function PlayerInfoEvent(){
		PlayerInfoEvent.__super.call(this);
	}

	__class(PlayerInfoEvent,'modules.player.events.PlayerInfoEvent',_super);
	PlayerInfoEvent.PLAYER_INFO_CHANGE="player_info_change";
	PlayerInfoEvent.PLAYER_DATA_CHANGE="player_data_change";
	PlayerInfoEvent.PLAYER_SKILLS_CHANGE="player_skills_change";
	PlayerInfoEvent.ITEM_CHANGE_UPDATE="item_change_update";
	PlayerInfoEvent.ITEM_CHANGE_REMOVE="item_change_remove";
	PlayerInfoEvent.BOX_OPENLOCKED_UPDATE="box_opernlocked_update";
	PlayerInfoEvent.GET_BOX_UPDATE="get_box_update";
	return PlayerInfoEvent;
})(Event)


/**
*事件管理器
*@author huyouwei
*/
//class manager.EventMgr extends laya.events.EventDispatcher
var EventMgr=(function(_super){
	function EventMgr(){
		EventMgr.__super.call(this);
	}

	__class(EventMgr,'manager.EventMgr',_super);
	__getset(1,EventMgr,'ins',function(){
		if(EventMgr._ins==null){
			EventMgr._ins=new EventMgr();
		}
		return EventMgr._ins;
	},laya.events.EventDispatcher._$SET_ins);

	EventMgr._ins=null;
	return EventMgr;
})(EventDispatcher)


//class mvc.controllers.BattleController extends mvc.core.Controller
var BattleController=(function(_super){
	function BattleController($moduleType){
		BattleController.__super.call(this,$moduleType);
	}

	__class(BattleController,'mvc.controllers.BattleController',_super);
	var __proto=BattleController.prototype;
	__proto.initServer=function(){
		_super.prototype.initServer.call(this);
		SocketManager.Instance.on(0x0015,this,this.recvBattlePrepare);
		SocketManager.Instance.on(0x0024,this,this.onVSSpanel);
		SocketManager.Instance.on(0x0016,this,this.recvBattleMap);
		SocketManager.Instance.on(0x0018,this,this.recvBattleStart);
		SocketManager.Instance.on(0x0036,this,this.recvQuitMatch);
		SocketManager.Instance.on(0x00A6,this,this.recvPveBuff);
		var events=[
		0x0026
		,0x0020
		,0x0022
		,0x0021
		,0x0025
		,0x001A
		,0x001C
		,0x002A
		,0x0023
		,0x0029
		,0x0031
		,0x0033
		,0x0038
		,0x0039
		,0x0034
		,0x0037
		,0x0019
		,0x0078
		,0x009F
		,0x005D
		,0x0014
		,0x0103];
		var element;
		for (var index=0;index < events.length;index++){
			element=events[index];
			SocketManager.Instance.on(element,this,this.recvBattleMsgs,[element]);
		}
	}

	__proto.initEvent=function(){
		_super.prototype.initEvent.call(this);
	}

	__proto.recvBattlePrepare=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.battle.BattlePrepareMsg,pkg);
		this.cache.battle.battlePrepareMsg=res;
		this.cache.battle.turnId=res.curTurn;
		FriendsMgr.ins.pushRecentBattle(res.players);
		if(!SceneMgr.ins.isInScene(SceneType.BATTLE_SCENE)){
			if(SceneMgr.ins.isInScene(SceneType.VS_SCENE)){
				EventMgr.ins.event("SYNC_BATTLE_PREPARE",res);
				}else{
				this.enterBattle(res,null,true);
			}
		}
		else{
			EventMgr.ins.event("sync_prepare",res);
		}
		EventMgr.ins.event("recv_mulitbattle");
	}

	__proto.onVSSpanel=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleCreateMsg,pkg);
		this.cache.battle.battleCreateMsg=res;
		if(!SceneMgr.ins.isInScene(SceneType.VS_SCENE)){
			SceneMgr.ins.runWithSceneByType(SceneType.VS_SCENE,[res]);
		}
		else{
			EventMgr.ins.event("SYNC_BATTLE_CREATE_MSG",res);
		}
	}

	__proto.recvBattleMap=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleMapMsg,pkg);
		EventMgr.ins.event("recv_battlemapmsg",[res]);
	}

	__proto.recvBattleStart=function(pkg){
		this.cache.battle.setPreData();
		var res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleStartMsg,pkg);
		EventMgr.ins.event("recv_battlestart",[res]);
	}

	__proto.recvQuitMatch=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleQuitMatchMsg,pkg);
		if(res.result==1){
			if(RoomMgr.ins.battleRoomMsg.battleType !=res.battleType){
				res.battleType=RoomMgr.ins.battleRoomMsg.battleType;
			}
			EventMgr.ins.event("recv_battleQuitMatch",[res]);
		}
	}

	__proto.recvPveBuff=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.SimpleMsg,pkg);
		var group=res.param4.split("|"),sub;
		var buffInfo={};
		for (var i=0,n=group.length;i < n;i++){
			sub=group[i].split(",");
			buffInfo[sub[0]]={"id":int(sub[0]),"num":int(sub[1])};
		}
		this.cache.battle.pveBuffInfo=buffInfo;
		EventMgr.ins.event("RECV_PVE_BUFF");
	}

	__proto.recvBattleMsgs=function(type,pkg){
		var res;
		switch (type){
			case 0x0026:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleNextTurnMsg,pkg);
					this.cache.battle.turnId=res.turnID;
					break ;
				}
			case 0x0020:{
					this.cache.battle.setCurData();
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleOverMsg,pkg);
					this.cache.battle.battleOverMsg=res;
					if(res.battleType==7){
						FriendsMgr.ins.onFriendBattleNotice(res);
						FriendsMgr.ins.isAutoOpenFriendsWindow=true;
					}
					else if(res.battleType==1 && PlayerInfo.instance.grade <=20){
						SocketManager.Instance.record.uploadStatistician(1,this.cache.battle.turnId);
						console.log("20以前1v1结束战斗回合数："+this.cache.battle.turnId);
					}
					break ;
				}
			case 0x0022:{
					this.cache.battle.isLine=false;
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattlePlayerFireMsg,pkg);
					this.cache.battle.isLine=res.isLine;
					this.cache.battle.battlePlayerFireMsg=res;
					break ;
				}
			case 0x0021:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleSkillResultMsg,pkg);
					break ;
				}
			case 0x0025:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleWindMsg,pkg);
					break ;
				}
			case 0x001A:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleMoveResultMsg,pkg);
					break ;
				}
			case 0x001C:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleFallMsg,pkg);
					break ;
				}
			case 0x002A:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleSyncPlayerStateMsg,pkg);
					break ;
				}
			case 0x0023:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleBufferEffectListMsg,pkg);
					break ;
				}
			case 0x0029:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleBufferListMsg,pkg);
					break ;
				}
			case 0x0031:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleBuffExecuteMsg,pkg);
					break ;
				}
			case 0x0033:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleChatMsg,pkg);
					break ;
				}
			case 0x0038:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleLivingSyncTransformMsg,pkg);
					break ;
				}
			case 0x0039:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattlePlayDiceMsg,pkg);
					break ;
				}
			case 0x0034:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleAddLivingMsg,pkg);
					break ;
				}
			case 0x0037:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleSceneObjectListMsg,pkg);
					break ;
				}
			case 0x0019:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleFireOverMsg,pkg);
					break ;
				}
			case 0x0078:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleUpdateMeleeScoreMsg,pkg);
					break ;
				}
			case 0x009F:{
					res=ProtoMgr.decode(com.road.ddt.proto.SimpleMsg,pkg);
					break ;
				}
			case 0x005D:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleReviveMsg,pkg);
					break ;
				}
			case 0x0014:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BattleSyncAllPlayerMsg,pkg);
					break ;
				}
			case 0x0103:{
					res=ProtoMgr.decode(com.road.ddt.proto.battle.BeatProto,pkg);
					break ;
				}
			}
		EventMgr.ins.event("add_message",[res,type]);
	}

	__proto.enterBattle=function(res,battleMapMsg,needLoading){
		SceneMgr.ins.runWithSceneByType(SceneType.BATTLE_SCENE,[res,battleMapMsg],needLoading);
	}

	return BattleController;
})(Controller)


/**
*@author zhihua.zhou
*封装了Socket 专门用于抛出收发包事件，在管理器里进行包数据的解析，避免此类过于复杂
*/
//class net.comm.ByteSocket extends laya.events.EventDispatcher
var ByteSocket=(function(_super){
	function ByteSocket(){
		this._socket=null;
		this._output=null;
		this._ip=null;
		this._port=null;
		/**用于读取二进制数据 */
		this._readBuffer=null;
		this._event=null;
		this._isShowLog=false;
		ByteSocket.__super.call(this);
		this._isShowLog=Browser.onPC;
		this._readBuffer=new Byte();
		ProtoMgr.init();
	}

	__class(ByteSocket,'net.comm.ByteSocket',_super);
	var __proto=ByteSocket.prototype;
	/**
	*开始连接
	*@param ip 要连接的ip地址
	*@param port 要连接的端口
	*/
	__proto.connect=function(address,port){
		this._ip=address;
		this._port=port;
		if (this._socket){
			this.close();
		}
		this._socket=new Socket(null,0,Byte);
		this._socket.on("open",this,this.openHandler);
		this._socket.on("message",this,this.receiveHandler);
		this._socket.on("close",this,this.closeHandler);
		this._socket.on("error",this,this.errorHandler);
		this._readBuffer.pos=0;
		var socketURL;
		if (LayaEX.isWXAPP||LayaEX.isFaceBook){
			socketURL=ConfigFile.WEBSOCKET_HTTP+this._ip+"/wss";
		}
		else{
			socketURL=ConfigFile.WEBSOCKET_HTTP+this._ip+":"+this._port+"/wss";
		}
		this._socket.connectByUrl(socketURL);
		this._output=this._socket.output;
	}

	/**发送数据 */
	__proto.sendPackage=function(code,msg){
		if (this._socket && this._socket.connected){
			var self=this;
			if (this._isShowLog && net.comm.ByteSocket.CodeFilters.indexOf(code)==-1){
				CLog.log("WS:-----C2S-----:"+self.intToNetType(code));
			}
			self._output.writeInt16(0x71ab);
			if (msg){
				var body=ProtoMgr.encode(msg);
				var len=body.length+14;
				self._output.writeInt16(len);
				self._output.writeInt16(code);
				self._output.writeArrayBuffer(body.subarray());
			}
			else{
				self._output.writeInt16(14);
				self._output.writeInt16(code);
			}
			self._output.endian="littleEndian";
			self._socket.flush();
		}
	}

	/**
	*发送字符串给服务器
	*@param codeStr :要发送的字符串
	*/
	__proto.sendStringMsg=function(codeStr){
		this._socket.send(codeStr);
	}

	/**关闭连接 */
	__proto.close=function(){
		if (this._socket){
			this._socket.off("open",this,this.openHandler);
			this._socket.off("message",this,this.receiveHandler);
			this._socket.off("close",this,this.closeHandler);
			this._socket.off("error",this,this.errorHandler);
			if (this._socket.connected){
				this._socket.close();
			}
		}
	}

	__proto.closeSocket=function(){
		console.log("ByteSocket.closeSocke.........");
		if (this._socket && this._socket.connected){
			console.log("ByteSocket.closeSocke......... close");
			this._socket.close();
		}
	}

	/**正确建立连接 */
	__proto.openHandler=function(event){
		console.log("正确建立连接...");
		this.event("open");
	}

	/**接收到数据触发函数 */
	__proto.receiveHandler=function(msg){
		var self=this;
		if ((typeof msg=='string')){
			console.log(msg);
		}
		else{
			var byte=self._socket.input;
			byte.endian="bigEndian";
			var head=byte.getInt16();
			var len=byte.getInt16();
			var code=byte.getInt16();
			var playerId=byte.getFloat64();
			var buffer=byte.getUint8Array(byte.pos,byte.bytesAvailable);
			if (this._isShowLog && net.comm.ByteSocket.CodeFilters.indexOf(code)==-1){
				CLog.log("WS:=====S2C=====:"+this.intToNetType(code));
			}
			this._event.event(String(code),buffer);
		}
		self._socket.input.position=self._socket.input.length;
	}

	__proto.intToNetType=function(num){
		return "0x"+this.foo(num.toString(16).toUpperCase());
	}

	__proto.foo=function(str){
		str='0000'+str;
		return str.substring(str.length-4,str.length);
	}

	/**关闭事件 */
	__proto.closeHandler=function(e){
		console.log("Socket closed");
		this.event("close");
	}

	/**连接出错 */
	__proto.errorHandler=function(e){
		console.log("error");
		this.event("error",e);
	}

	__getset(0,__proto,'connected',function(){
		return this._socket && this._socket.connected;
	});

	__static(ByteSocket,
	['CodeFilters',function(){return this.CodeFilters=[0x139C,
		0x006E];}
	]);
	return ByteSocket;
})(EventDispatcher)


//class net.event.SocketEvent extends laya.events.Event
var SocketEvent=(function(_super){
	function SocketEvent(type,data){
		this._pkg=null;
		SocketEvent.__super.call(this);
		this._pkg=data;
	}

	__class(SocketEvent,'net.event.SocketEvent',_super);
	var __proto=SocketEvent.prototype;
	__getset(0,__proto,'pkg',function(){
		return this._pkg;
	});

	SocketEvent.format=function(__args){
		var args=arguments;
		var strArr=[];
		for(var i=0;i<args.length;i++){
			strArr.push(args[i].toString(16));
		}
		return strArr.join("+");
	}

	SocketEvent.DATA="data";
	SocketEvent.SOCKET_OPEN="socket_open";
	SocketEvent.SOCKET_ERROR="socket_error";
	SocketEvent.SOCKET_CLOSE="socket_close";
	SocketEvent.SOCKET_DATA="socket_data";
	SocketEvent.SOCKET_CONNECT_STOP="socket_connect_stop";
	SocketEvent.SOCKET_RECONNECT_START="socket_reconnect_start";
	SocketEvent.SOCKET_RECONNECT_SUCCESS="socket_reconnect_success";
	SocketEvent.SOCKET_DISCONNECT_CACHE_MSG="socket_disconnect_cache_msg";
	return SocketEvent;
})(Event)


//class com.tengxun.utils.ByteArray extends laya.utils.Byte
var ByteArray=(function(_super){
	function ByteArray(){
		this._$1__length=0;
		this._objectEncoding_=0;
		this._position_=0;
		this._$1__allocated_=8 *1024;
		this._data_=null;
		//arrayBuffer
		this._littleEndian_=false;
		this._byteView_=null;
		this._strTable=null;
		//=[];
		this._objTable=null;
		//=[];
		this._traitsTable=null;
		ByteArray.__super.call(this);
		this.___resizeBuffers(this._allocated_);
	}

	__class(ByteArray,'com.tengxun.utils.ByteArray',_super);
	var __proto=ByteArray.prototype;
	__proto.clear=function(){
		this._strTable=[];
		this._objTable=[];
		this._traitsTable=[];
		this._position_=0;
		this.length=0;
	}

	__proto.ensureWrite=function(lengthToEnsure){
		if (this._$1__length < lengthToEnsure)this.length=lengthToEnsure;
	}

	__proto.readBoolean=function(){
		return (this.readByte ()!=0);
	}

	__proto.readByte=function(){
		return this._data_.getInt8 (this._position_++);
	}

	__proto.readBytes=function(bytes,offset,length){
		(offset===void 0)&& (offset=0);
		(length===void 0)&& (length=0);
		if (offset < 0 || length < 0){
			throw "Read error - Out of bounds";
		}
		if (length==0)length=this._$1__length-this._position_;
		bytes.ensureWrite (offset+length);
		bytes._byteView_.set (this._byteView_.subarray(this._position_,this._position_+length),offset);
		bytes.position=offset;
		this._position_+=length;
		if (bytes.position+length > bytes.length)bytes.length=bytes.position+length;
	}

	__proto.readDouble=function(){
		var double=this._data_.getFloat64 (this._position_,this._littleEndian_);
		this._position_+=8;
		return double;
	}

	__proto.readFloat=function(){
		var float=this._data_.getFloat32 (this._position_,this._littleEndian_);
		this._position_+=4;
		return float;
	}

	__proto.readFullBytes=function(bytes,pos,len){
		this.ensureWrite (len);
		for(var i=pos;i < pos+len;i++){
			this._data_.setInt8 (this._position_++,bytes.get(i));
		}
	}

	__proto.readInt=function(){
		var tInt=this._data_.getInt32 (this._position_,this._littleEndian_);
		this._position_+=4;
		return tInt;
	}

	__proto.readShort=function(){
		var short=this._data_.getInt16 (this._position_,this._littleEndian_);
		this._position_+=2;
		return short;
	}

	__proto.readUnsignedByte=function(){
		return this._data_.getUint8 (this._position_++);
	}

	__proto.readUnsignedInt=function(){
		var uInt=this._data_.getUint32 (this._position_,this._littleEndian_);
		this._position_+=4;
		return int(uInt);
	}

	//add by ch.ji 解决读取整数时读到负整数的问题
	__proto.readUnsignedShort=function(){
		var uShort=this._data_.getUint16 (this._position_,this._littleEndian_);
		this._position_+=2;
		return uShort;
	}

	__proto.readUTF=function(){
		return this.readUTFBytes (this.readUnsignedShort ());
	}

	__proto.readUnicode=function(length){
		var value="";
		var max=this._position_+length;
		var c1=0,c2=0;
		while (this._position_ < max){
			c2=this._byteView_[this._position_++];
			c1=this._byteView_[this._position_++];
			value+=String.fromCharCode(c1<<8 | c2);
		}
		return value;
	}

	__proto.readMultiByte=function(length,charSet){
		if(charSet=="UNICODE" || charSet=="unicode"){
			return this.readUnicode(length);
		}
		return this.readUTFBytes (length);
	}

	__proto.readUTFBytes=function(len){
		(len===void 0)&& (len=-1);
		var value="";
		var max=this._position_+len;
		var c=0,c2=0,c3=0;
		while (this._position_ < max){
			c=this._data_.getUint8 (this._position_++);
			if (c < 0x80){
				if (c !=0){
					value+=String.fromCharCode (c);
				}
				}else if (c < 0xE0){
				value+=String.fromCharCode (((c & 0x3F)<< 6)| (this._data_.getUint8 (this._position_++)& 0x7F));
				}else if (c < 0xF0){
				c2=this._data_.getUint8 (this._position_++);
				value+=String.fromCharCode (((c & 0x1F)<< 12)| ((c2 & 0x7F)<< 6)| (this._data_.getUint8 (this._position_++)& 0x7F));
				}else {
				c2=this._data_.getUint8 (this._position_++);
				c3=this._data_.getUint8 (this._position_++);
				value+=String.fromCharCode (((c & 0x0F)<< 18)| ((c2 & 0x7F)<< 12)| ((c3 << 6)& 0x7F)| (this._data_.getUint8 (this._position_++)& 0x7F));
			}
		}
		return value;
	}

	__proto.toString=function(){
		var cachePosition=this._position_;
		this._position_=0;
		var value=this.readUTFBytes (this.length);
		this._position_=cachePosition;
		return value;
	}

	__proto.writeBoolean=function(value){
		this.writeByte (value ? 1 :0);
	}

	__proto.writeByte=function(value){
		this.ensureWrite (this._position_+1);
		this._data_.setInt8 (this._position_,value);
		this._position_+=1;
	}

	__proto.writeBytes=function(bytes,offset,length){
		(offset===void 0)&& (offset=0);
		(length===void 0)&& (length=0);
		if (offset < 0 || length < 0)throw "writeBytes error - Out of bounds";
		if(length==0)length=bytes.length-offset;
		this.ensureWrite (this._position_+length);
		this._byteView_.set(bytes._byteView_.subarray (offset,offset+length),this._position_);
		this._position_+=length;
	}

	__proto.writeArrayBuffer=function(arraybuffer,offset,length){
		(offset===void 0)&& (offset=0);
		(length===void 0)&& (length=0);
		if (offset < 0 || length < 0)throw "writeArrayBuffer error - Out of bounds";
		if(length==0)length=arraybuffer.byteLength-offset;
		this.ensureWrite (this._position_+length);
		var uint8array=new Uint8Array(arraybuffer);
		this._byteView_.set(uint8array.subarray (offset,offset+length),this._position_);
		this._position_+=length;
	}

	__proto.writeDouble=function(x){
		this.ensureWrite (this._position_+8);
		this._data_.setFloat64 (this._position_,x,this._littleEndian_);
		this._position_+=8;
	}

	__proto.writeFloat=function(x){
		this.ensureWrite (this._position_+4);
		this._data_.setFloat32 (this._position_,x,this._littleEndian_);
		this._position_+=4;
	}

	__proto.writeInt=function(value){
		this.ensureWrite (this._position_+4);
		this._data_.setInt32 (this._position_,value,this._littleEndian_);
		this._position_+=4;
	}

	__proto.writeShort=function(value){
		this.ensureWrite (this._position_+2);
		this._data_.setInt16 (this._position_,value,this._littleEndian_);
		this._position_+=2;
	}

	__proto.writeUnsignedInt=function(value){
		this.ensureWrite (this._position_+4);
		this._data_.setUint32 (this._position_,value,this._littleEndian_);
		this._position_+=4;
	}

	__proto.writeUnsignedShort=function(value){
		this.ensureWrite (this._position_+2);
		this._data_.setUint16 (this._position_,value,this._littleEndian_);
		this._position_+=2;
	}

	__proto.writeUTF=function(value){
		value=value+"";
		this.writeUnsignedShort (this._getUTFBytesCount(value));this.writeUTFBytes (value);
	}

	__proto.writeUnicode=function(value){
		value=value+"";
		this.ensureWrite (this._position_+value.length*2);
		var c=0;
		for(var i=0,sz=value.length;i<sz;i++){
			c=value.charCodeAt(i);
			this._byteView_[this._position_++]=c&0xff;
			this._byteView_[this._position_++]=c>>8;
		}
	}

	__proto.writeMultiByte=function(value,charSet){
		value=value+"";
		if(charSet=="UNICODE" || charSet=="unicode"){
			return this.writeUnicode(value);
		}
		this.writeUTFBytes(value);
	}

	__proto.writeUTFBytes=function(value){
		value=value+"";
		this.ensureWrite(this._position_+value.length*4);
		for (var i=0,sz=value.length;i < sz;i++){
			var c=value.charCodeAt(i);
			if (c <=0x7F){
				this.writeByte (c);
				}else if (c <=0x7FF){
				this.writeByte (0xC0 | (c >> 6));
				this.writeByte (0x80 | (c & 63));
				}else if (c <=0xFFFF){
				this.writeByte(0xE0 | (c >> 12));
				this.writeByte(0x80 | ((c >> 6)& 63));
				this.writeByte(0x80 | (c & 63));
				}else {
				this.writeByte(0xF0 | (c >> 18));
				this.writeByte(0x80 | ((c >> 12)& 63));
				this.writeByte(0x80 | ((c >> 6)& 63));
				this.writeByte(0x80 | (c & 63));
			}
		}
		this.length=this._position_;
	}

	__proto.__fromBytes=function(inBytes){
		this._byteView_=new Uint8Array(inBytes.getData ());
		this.length=this._byteView_.length;
		this._$1__allocated_=this.length;
	}

	__proto.__get=function(pos){
		return this._data_.getUint8(pos);
	}

	__proto._getUTFBytesCount=function(value){
		var count=0;
		value=value+"";
		for (var i=0,sz=value.length;i < sz;i++){
			var c=value.charCodeAt(i);
			if (c <=0x7F){
				count+=1;
				}else if (c <=0x7FF){
				count+=2;
				}else if (c <=0xFFFF){
				count+=3;
				}else {
				count+=4;
			}
		}
		return count;
	}

	__proto._byteAt_=function(index){
		return this._byteView_[index];
	}

	__proto._byteSet_=function(index,value){
		this.ensureWrite (index+1);
		this._byteView_[index]=value;
	}

	//this._position_+=1;
	__proto.uncompress=function(algorithm){
		(algorithm===void 0)&& (algorithm="zlib");
		var inflate=new Zlib.Inflate(this._byteView_);
		this._byteView_=inflate.decompress();
		this._data_=new DataView(this._byteView_ .buffer);;
		this._$1__allocated_=this._$1__length=this._byteView_.byteLength;
		this._position_=0;
	}

	__proto.compress=function(algorithm){
		(algorithm===void 0)&& (algorithm="zlib");
		var deflate=new Zlib.Deflate(this._byteView_);
		this._byteView_=deflate.compress();
		this._data_=new DataView(this._byteView_.buffer);;
		this._position_=this._$1__allocated_=this._$1__length=this._byteView_.byteLength;
	}

	__proto.___resizeBuffers=function(len){
		try{
			var newByteView=new Uint8Array(len);
			if (this._byteView_!=null){
				if (this._byteView_.length <=len)newByteView.set (this._byteView_);
				else newByteView.set (this._byteView_.subarray (0,len));
			}
			this._byteView_=newByteView;
			this._data_=new DataView(newByteView.buffer);
		}
		catch (err){
			throw "___resizeBuffer err:"+len;
		}
	}

	__proto.__getBuffer=function(){
		this._data_.buffer.byteLength=this.length;
		return this._data_.buffer;
	}

	__proto.__set=function(pos,v){
		this._data_.setUint8 (pos,v);
	}

	__proto.setUint8Array=function(data){
		this._byteView_=data;
		this._data_=new DataView(data.buffer);
		this._$1__length=data.byteLength;
		this._position_=0;
	}

	/**从字节数组中读取一个以 AMF 序列化格式进行编码的对象 **/
	__proto.readObject=function(){
		this._strTable=[];
		this._objTable=[];
		this._traitsTable=[];
		return this.readObject2();
	}

	__proto.readObject2=function(){
		var type=this.readByte();
		return this.readObjectValue(type);
	}

	__proto.readObjectValue=function(type){
		var value;
		switch (type){
			case 1:
				break ;
			case 6:
				value=this.__readString();
				break ;
			case 4:
				value=this.readInterger();
				break ;
			case 2:
				value=false;
				break ;
			case 3:
				value=true;
				break ;
			case 10:
				value=this.readScriptObject();
				break ;
			case 9:
				value=this.readArray();
				break ;
			case 5:
				value=this.readDouble();
				break ;
			case 12:
				value=this.readByteArray();
				break ;
			default :
				console.log("Unknown object type tag!!!"+type);
			}
		return value;
	}

	__proto.readByteArray=function(){
		var ref=this.readUInt29();
		if ((ref & 1)==0){
			return this.getObjRef(ref >> 1);
		}
		else{
			var len=(ref >> 1);
			var ba=new ByteArray();
			this._objTable.push(ba);
			this.readBytes(ba,0,len);
			return ba;
		}
	}

	__proto.readInterger=function(){
		var i=this.readUInt29();
		i=(i << 3)>> 3;
		return parseInt(i+"");
	}

	__proto.getStrRef=function(ref){
		return this._strTable[ref];
	}

	__proto.getObjRef=function(ref){
		return this._objTable[ref];
	}

	__proto.__readString=function(){
		var ref=this.readUInt29();
		if ((ref & 1)==0){
			return this.getStrRef(ref >> 1);
		};
		var len=(ref >> 1);
		if (0==len){
			return "";
		};
		var str=this.readUTFBytes(len);
		this._strTable.push(str);
		return str;
	}

	__proto.readTraits=function(ref){
		var ti;
		if ((ref & 3)==1){
			ti=this.getTraitReference(ref >> 2);
			return ti.propoties?ti:{obj:{}};
		}
		else{
			var externalizable=((ref & 4)==4);
			var isDynamic=((ref & 8)==8);
			var count=(ref >> 4);
			var className=this.__readString();
			ti={};
			ti.className=className;
			ti.propoties=[];
			ti.dynamic=isDynamic;
			ti.externalizable=externalizable;
			if(count>0){
				for(var i=0;i<count;i++){
					var propName=this.__readString();
					ti.propoties.push(propName);
				}
			}
			this._traitsTable.push(ti);
			return ti;
		}
	}

	__proto.readScriptObject=function(){
		var ref=this.readUInt29();
		if ((ref & 1)==0){
			return this.getObjRef(ref >> 1);
		}
		else{
			var objref=this.readTraits(ref);
			var className=objref.className;
			var externalizable=objref.externalizable;
			var obj;
			var propName;
			var pros=objref.propoties;
			if(className&&className!=""){
				var rst=ClassUtils.getRegClass(className);
				if(rst){
					obj=new rst();
					}else{
					obj={};
				}
				}else{
				obj={};
			}
			this._objTable.push(obj);
			if(pros){
				for(var d=0;d<pros.length;d++){
					obj[pros[d]]=this.readObject2();
				}
			}
			if(objref.dynamic){
				for (;;){
					propName=this.__readString();
					if (propName==null || propName.length==0)break ;
					obj[propName]=this.readObject2();
				}
			}
			return obj;
		}
	}

	__proto.readArray=function(){
		var ref=this.readUInt29();
		if ((ref & 1)==0){
			return this.getObjRef(ref >> 1);
		};
		var obj=null;
		var count=(ref >> 1);
		var propName;
		for (;;){
			propName=this.__readString();
			if (propName==null || propName.length==0)break ;
			if (obj==null){
				obj={};
				this._objTable.push(obj);
			}
			obj[propName]=this.readObject2();
		}
		if (obj==null){
			obj=[];
			this._objTable.push(obj);
			var i=0;
			for (i=0;i < count;i++){
				obj.push(this.readObject2());
			}
			}else {
			for (i=0;i < count;i++){
				obj[i.toString()]=this.readObject2();
			}
		}
		return obj;
	}

	/**
	*AMF 3 represents smaller integers with fewer bytes using the most
	*significant bit of each byte. The worst case uses 32-bits
	*to represent a 29-bit number,which is what we would have
	*done with no compression.
	*<pre>
	*0x00000000-0x0000007F :0xxxxxxx
	*0x00000080-0x00003FFF :1xxxxxxx 0xxxxxxx
	*0x00004000-0x001FFFFF :1xxxxxxx 1xxxxxxx 0xxxxxxx
	*0x00200000-0x3FFFFFFF :1xxxxxxx 1xxxxxxx 1xxxxxxx xxxxxxxx
	*0x40000000-0xFFFFFFFF :throw range exception
	*</pre>
	*
	*@return A int capable of holding an unsigned 29 bit integer.
	*@throws IOException
	*@exclude
	*/
	__proto.readUInt29=function(){
		var value=0;
		var b=this.readByte()& 0xFF;
		if (b < 128){
			return b;
		}
		value=(b & 0x7F)<< 7;
		b=this.readByte()& 0xFF;
		if (b < 128){
			return (value | b);
		}
		value=(value | (b & 0x7F))<< 7;
		b=this.readByte()& 0xFF;
		if (b < 128){
			return (value | b);
		}
		value=(value | (b & 0x7F))<< 8;
		b=this.readByte()& 0xFF;
		return (value | b);
	}

	//============================================================================================
	__proto.writeObject=function(o){
		this._strTable=[];
		this._objTable=[];
		this._traitsTable=[];
		this.writeObject2(o);
	}

	__proto.writeObject2=function(o){
		if(o==null){
			this.writeAMFNull();
			return;
		};
		var type=typeof(o);
		if("string"===type){
			this.writeAMFString(o);
		}
		else if("boolean"===type){
			this.writeAMFBoolean(o);
		}
		else if("number"===type){
			if(String(o).indexOf(".")!=-1){
				this.writeAMFDouble(o);
			}
			else{
				this.writeAMFInt(o);
			}
		}
		else if("object"===type){
			if((o instanceof Array)){
				this.writeArray(o);
			}
			else if((o instanceof com.tengxun.utils.ByteArray )){
				this.writeAMFByteArray(o);
			}
			else{
				this.writeCustomObject(o);
			}
		}
	}

	__proto.writeAMFNull=function(){
		this.writeByte(1);
	}

	__proto.writeAMFString=function(s){
		this.writeByte(6);
		this.writeStringWithoutType(s);
	}

	__proto.writeStringWithoutType=function(s){
		if (s.length==0){
			this.writeUInt29(1);
			return;
		};
		var ref=this._strTable.indexOf(s);
		if(ref>=0){
			this.writeUInt29(ref << 1);
			}else{
			var utflen=this._getUTFBytesCount(s);
			this.writeUInt29((utflen << 1)| 1);
			this.writeUTFBytes(s);
			this._strTable.push(s);
		}
	}

	__proto.writeAMFInt=function(i){
		if (i >=ByteArray.INT28_MIN_VALUE && i <=0x0FFFFFFF){
			i=i & 0x1FFFFFFF;
			this.writeByte(4);
			this.writeUInt29(i);
			}else {
			this.writeAMFDouble(i);
		}
	}

	__proto.writeAMFDouble=function(d){
		this.writeByte(5);
		this.writeDouble(d);
	}

	__proto.writeAMFBoolean=function(b){
		if (b)
			this.writeByte(3);
		else
		this.writeByte(2);
	}

	__proto.writeCustomObject=function(o){
		this.writeByte(10);
		var refNum=this._objTable.indexOf(o);
		if(refNum!=-1){
			this.writeUInt29(refNum << 1);
		}
		else{
			this._objTable.push(o);
			var traitsInfo=new Object();
			traitsInfo.className=this.getAliasByObj(o);
			traitsInfo.dynamic=false;
			traitsInfo.externalizable=false;
			traitsInfo.properties=[];
			for(var prop in o){
				if((typeof (o[prop])=='function'))continue ;
				traitsInfo.properties.push(prop);
				traitsInfo.properties.sort();
			};
			var tRef=ByteArray.getTraitsInfoRef(this._traitsTable,traitsInfo);
			var count=traitsInfo.properties.length;
			var i=0;
			if(tRef>=0){
				this.writeUInt29((tRef << 2)| 1);
				}else{
				this._traitsTable.push(traitsInfo);
				this.writeUInt29(3 | (traitsInfo.externalizable ? 4 :0)| (traitsInfo.dynamic ? 8 :0)| (count << 4));
				this.writeStringWithoutType(traitsInfo.className);
				for(i=0;i<count;i++){
					this.writeStringWithoutType(traitsInfo.properties[i]);
				}
			}
			for(i=0;i<count;i++){
				this.writeObject2(o[traitsInfo.properties[i]]);
			}
		}
	}

	/**
	*获取实例的注册别名
	*@param obj
	*@return
	*/
	__proto.getAliasByObj=function(obj){
		var tClassName=ClassUtils.getRegClass(obj);
		if(tClassName==null || tClassName=="")return "";
		var tClass=ClassUtils.getClass(tClassName);
		if(tClass==null)return "";
		var tkey;
		for(tkey in ByteArray.classDic){
			if(ByteArray.classDic[tkey]==tClass){
				return tkey;
			}
		}
		return "";
	}

	__proto.writeArray=function(value){
		this.writeByte(9);
		var len=value.length;
		var ref=this._objTable.indexOf(value);
		if(ref>-1){
			this.writeUInt29(len<<1);
		}
		else{
			this.writeUInt29((len << 1)| 1);
			this.writeStringWithoutType("");
			for (var i=0;i < len;i++){
				this.writeObject2(value[i]);
			}
			this._objTable.push(value);
		}
	}

	__proto.writeAMFByteArray=function(ba){
		this.writeByte(12);
		var ref=this._objTable.indexOf(ba);
		if(ref>=0){
			this.writeUInt29(ref << 1);
			}else{
			var len=ba.length;
			this.writeUInt29((len << 1)| 1);
			this.writeBytes(ba,0,len);
		}
	}

	__proto.writeMapAsECMAArray=function(o){
		this.writeByte(9);
		this.writeUInt29((0 << 1)| 1);
		var count=0,key;
		for (key in o){
			count++;
			this.writeStringWithoutType(key);
			this.writeObject2(o[key]);
		}
		this.writeStringWithoutType("");
	}

	__proto.writeUInt29=function(ref){
		if (ref < 0x80){
			this.writeByte(ref);
			}else if (ref < 0x4000){
			this.writeByte(((ref >> 7)& 0x7F)| 0x80);
			this.writeByte(ref & 0x7F);
			}else if (ref < 0x200000){
			this.writeByte(((ref >> 14)& 0x7F)| 0x80);
			this.writeByte(((ref >> 7)& 0x7F)| 0x80);
			this.writeByte(ref & 0x7F);
			}else if (ref < 0x40000000){
			this.writeByte(((ref >> 22)& 0x7F)| 0x80);
			this.writeByte(((ref >> 15)& 0x7F)| 0x80);
			this.writeByte(((ref >> 8)& 0x7F)| 0x80);
			this.writeByte(ref & 0xFF);
			}else {
			console.log("Integer out of range: "+ref);
		}
	}

	/**
	*@exclude
	*/
	__proto.getTraitReference=function(ref){
		return this._traitsTable[ref];
	}

	// Getters & Setters
	__getset(0,__proto,'bytesAvailable',function(){
		return this.length-this._position_;
	});

	__getset(0,__proto,'position',function(){
		return this._position_;
		},function(pos){
		if (pos < this._$1__length)
			this._position_=pos < 0?0:pos;
		else{
			this._position_=pos;
			this.length=pos;
		}
	});

	__getset(0,__proto,'endian',function(){
		return this._littleEndian_ ? "littleEndian" :"bigEndian";
		},function(endianStr){
		this._littleEndian_=(endianStr=="littleEndian");
	});

	__getset(0,__proto,'length',function(){
		return this._$1__length;
		},function(value){
		if (this._$1__allocated_ !=value)
			this.___resizeBuffers (this._$1__allocated_=value);
		this._$1__length=value;
	});

	__getset(0,__proto,'pos',_super.prototype._$get_pos,function(value){
		this.position=value;
		Laya.superSet(Byte,this,'pos',value);
	});

	ByteArray.__ofBuffer=function(buffer){
		var bytes=new ByteArray ();
		bytes.length=bytes.allocated=buffer.byteLength;
		bytes.data=new DataView(buffer);
		bytes.byteView=new Uint8Array(buffer);
		return bytes;
	}

	ByteArray.getTraitsInfoRef=function(arr,ti){
		var i=0,len=arr.length;
		for(i=0;i<len;i++){
			if (ByteArray.equalsTraitsInfo(ti,arr[i]))return i;
		}
		return-1;
	}

	ByteArray.equalsTraitsInfo=function(ti1,ti2){
		if (ti1==ti2){
			return true;
		}
		if (!ti1.className===ti2.className){
			return false;
		}
		if(ti1.properties.length !=ti2.properties.length){
			return false;
		};
		var len=ti1.properties.length;
		var prop;
		ti1.properties.sort();ti2.properties.sort();
		for(var i=0;i<len;i++){
			if(ti1.properties[i] !=ti2.properties[i]){
				return false;
			}
		}
		return true;
	}

	ByteArray.classDic={};
	ByteArray.BIG_ENDIAN="bigEndian";
	ByteArray.LITTLE_ENDIAN="littleEndian";
	ByteArray.UNDEFINED_TYPE=0;
	ByteArray.NULL_TYPE=1;
	ByteArray.FALSE_TYPE=2;
	ByteArray.TRUE_TYPE=3;
	ByteArray.INTEGER_TYPE=4;
	ByteArray.DOUBLE_TYPE=5;
	ByteArray.STRING_TYPE=6;
	ByteArray.XML_TYPE=7;
	ByteArray.DATE_TYPE=8;
	ByteArray.ARRAY_TYPE=9;
	ByteArray.OBJECT_TYPE=10;
	ByteArray.AVMPLUSXML_TYPE=11;
	ByteArray.BYTEARRAY_TYPE=12;
	ByteArray.EMPTY_STRING="";
	ByteArray.UINT29_MASK=0x1FFFFFFF;
	ByteArray.INT28_MAX_VALUE=0x0FFFFFFF;
	ByteArray.INT28_MIN_VALUE=-268435456;
	return ByteArray;
})(Byte)


//class com.netease.protobuf.Int64 extends com.netease.protobuf.Binary64
var Int64=(function(_super){
	function Int64(low,high){
		(low===void 0)&& (low=0);
		(high===void 0)&& (high=0);
		Int64.__super.call(this,low,high)
	}

	__class(Int64,'com.netease.protobuf.Int64',_super);
	var __proto=Int64.prototype;
	__proto.toString=function(radix){
		(radix===void 0)&& (radix=10);
		if (radix < 2 || radix > 36){
			console.log("ArgumentError");
		}
		switch (this.high){
			case 0:{
					return this.low.toString(radix)
				}
			case-1:{
					return int(this.low).toString(radix)
				}
			default :{
					break ;
				}
			}
		if (this.low==0 && this.high==0){
			return "0"
		};
		var digitChars=[];
		var copyOfThis=new UInt64(this.low,this.high);
		if (this.high < 0){
			copyOfThis.bitwiseNot()
			copyOfThis.add(1)
		}
		do {
			var digit=copyOfThis.div(radix);
			digitChars.push((digit < 10 ? '0' :'a').charCodeAt()+digit)
		}while (copyOfThis.high !=0)
		if (this.high < 0){
			return '-'+copyOfThis.low.toString(radix)+
			String.fromCharCode.apply(
			String,digitChars.reverse())
			}else {
			return copyOfThis.low.toString(radix)+
			String.fromCharCode.apply(
			String,digitChars.reverse())
		}
	}

	__getset(0,__proto,'high',function(){
		return this.internalHigh
		},function(value){
		this.internalHigh=value
	});

	Int64.parseInt64=function(str,radix){
		(radix===void 0)&& (radix=0);
		var negative=str.search(/^\-/)==0;
		var i=negative ? 1 :0
		if (radix==0){
			if (str.search(/^\-?0x/)==0){
				radix=16
				i+=2
				}else {
				radix=10
			}
		}
		if (radix < 2 || radix > 36){
			console.log("ArgumentError");
		}
		str=str.toLowerCase()
		var result=new Int64
		for (;i < str.length;i++){
			var digit=str.charCodeAt(i)
			if (digit >='0'.charCodeAt()&& digit <='9'.charCodeAt()){
				digit-='0'.charCodeAt()
				}else if (digit >='a'.charCodeAt()&& digit <='z'.charCodeAt()){
				digit-='a'.charCodeAt()
				}else {
				console.log("ArgumentError");
			}
			if (digit >=radix){
				console.log("ArgumentError");
			}
			result.mul(radix)
			result.add(digit)
		}
		if (negative){
			result.bitwiseNot()
			result.add(1)
		}
		return result
	}

	return Int64;
})(Binary64)


//class com.netease.protobuf.UInt64 extends com.netease.protobuf.Binary64
var UInt64=(function(_super){
	function UInt64(low,high){
		(low===void 0)&& (low=0);
		(high===void 0)&& (high=0);
		UInt64.__super.call(this,low,high)
	}

	__class(UInt64,'com.netease.protobuf.UInt64',_super);
	var __proto=UInt64.prototype;
	__proto.toString=function(radix){
		(radix===void 0)&& (radix=10);
		if (radix < 2 || radix > 36)console.log("ArgumentError");
		if (this.high==0)return this.low.toString(radix)
		var digitChars=[];
		var copyOfThis=new UInt64(this.low,this.high);
		do {
			var digit=copyOfThis.div(radix);
			digitChars.push((digit < 10 ? '0' :'a').charCodeAt()+digit)
		}while (copyOfThis.high !=0)
		return copyOfThis.low.toString(radix)+
		String.fromCharCode.apply(
		String,digitChars.reverse())
	}

	__getset(0,__proto,'high',function(){
		return this.internalHigh
		},function(value){
		this.internalHigh=value
	});

	UInt64.parseUInt64=function(str,radix){
		(radix===void 0)&& (radix=0);
		var i=0
		if (radix==0){
			if (str.search(/^0x/)==0){
				radix=16
				i=2
				}else {
				radix=10
			}
		}
		if (radix < 2 || radix > 36)console.log("ArgumentError");
		str=str.toLowerCase()
		var result=new UInt64
		for (;i < str.length;i++){
			var digit=str.charCodeAt(i)
			if (digit >='0'.charCodeAt()&& digit <='9'.charCodeAt()){
				digit-='0'.charCodeAt()
				}else if (digit >='a'.charCodeAt()&& digit <='z'.charCodeAt()){
				digit-='a'.charCodeAt()
				}else {
				console.log("ArgumentError");
			}
			if (digit >=radix)console.log("ArgumentError");
			result.mul(radix)
			result.add(digit)
		}
		return result
	}

	return UInt64;
})(Binary64)


//class modules.newguide.levelguide.BaseLevelGuideNode extends modules.newguide.core.BaseGuideNode
var BaseLevelGuideNode=(function(_super){
	function BaseLevelGuideNode(nodeId){
		BaseLevelGuideNode.__super.call(this,nodeId);
	}

	__class(BaseLevelGuideNode,'modules.newguide.levelguide.BaseLevelGuideNode',_super);
	var __proto=BaseLevelGuideNode.prototype;
	__proto.initGuide=function(){
		modules.newguide.core.BaseGuide.prototype.initGuide.call(this);
		console.log("BaseLevelGuideNode",this.nodeId,this);
	}

	__proto.nextGuideNode=function(){
		LevelGuideMgr.ins.nextGuideNode();
	}

	return BaseLevelGuideNode;
})(BaseGuideNode)


//class modules.newguide.levelguide.step.LevelGuideNode_10_Step_1 extends modules.newguide.core.BaseGuideNodeStep
var LevelGuideNode_10_Step_1=(function(_super){
	function LevelGuideNode_10_Step_1(guideNode,stepId){
		LevelGuideNode_10_Step_1.__super.call(this,guideNode,stepId);
	}

	__class(LevelGuideNode_10_Step_1,'modules.newguide.levelguide.step.LevelGuideNode_10_Step_1',_super);
	var __proto=LevelGuideNode_10_Step_1.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK_HICK";
		this.desc=LanguageMgr.Ins.GetLan("14300205");
		this.isLeft=true;
	}

	__getset(0,__proto,'add_Condition',function(){
		var hallMainScene=SceneMgr.ins.curScene;
		return hallMainScene && hallMainScene.mainView;
	},_super.prototype._$set_add_Condition);

	__getset(0,__proto,'target',function(){
		var scene=SceneMgr.ins.curScene;
		return (scene && scene.mainView)? scene.mainView.btnPve :null;
	},_super.prototype._$set_target);

	return LevelGuideNode_10_Step_1;
})(BaseGuideNodeStep)


//class modules.newguide.levelguide.step.LevelGuideNode_10_Step_2 extends modules.newguide.core.BaseGuideNodeStep
var LevelGuideNode_10_Step_2=(function(_super){
	function LevelGuideNode_10_Step_2(guideNode,stepId){
		this.isShowModeChooseView=false;
		LevelGuideNode_10_Step_2.__super.call(this,guideNode,stepId);
	}

	__class(LevelGuideNode_10_Step_2,'modules.newguide.levelguide.step.LevelGuideNode_10_Step_2',_super);
	var __proto=LevelGuideNode_10_Step_2.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK_HICK";
		this.desc=LanguageMgr.Ins.GetLan("14300205");
		EventMgr.ins.on("OpenChooseView",this,this.event1);
	}

	__proto.event1=function(){
		EventMgr.ins.off("OpenChooseView",this,this.event1);
		this.isShowModeChooseView=true;
		Laya.timer.frameOnce(1,this,this.checkGuide);
	}

	__proto.executeGuide=function(){
		if(this.isShowModeChooseView){
			_super.prototype.executeGuide.call(this);
		}
	}

	__getset(0,__proto,'add_Condition',function(){
		var hallMainScene=SceneMgr.ins.curScene;
		return hallMainScene && hallMainScene.mainView && UIMgr.ins.getOpenViewNum()<=0;
	},_super.prototype._$set_add_Condition);

	__getset(0,__proto,'target',function(){
		var scene=SceneMgr.ins.curScene;
		if(scene && scene.mainView && scene.mainView.modeChooseView){
			return scene.mainView.modeChooseView.modelList.getCell(0);
		}
		return null;
	},_super.prototype._$set_target);

	return LevelGuideNode_10_Step_2;
})(BaseGuideNodeStep)


//class modules.newguide.levelguide.step.LevelGuideNode_15_Step_1 extends modules.newguide.core.BaseGuideNodeStep
var LevelGuideNode_15_Step_1=(function(_super){
	function LevelGuideNode_15_Step_1(guideNode,stepId){
		LevelGuideNode_15_Step_1.__super.call(this,guideNode,stepId);
	}

	__class(LevelGuideNode_15_Step_1,'modules.newguide.levelguide.step.LevelGuideNode_15_Step_1',_super);
	var __proto=LevelGuideNode_15_Step_1.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK_HICK";
		this.desc=LanguageMgr.Ins.GetLan("9004116");
	}

	//""卡组上限增加";
	__getset(0,__proto,'add_Condition',function(){
		var hallMainScene=SceneMgr.ins.curScene;
		return hallMainScene && hallMainScene.mainView;
	},_super.prototype._$set_add_Condition);

	__getset(0,__proto,'target',function(){
		var scene=SceneMgr.ins.curScene;
		return (scene && scene.mainView)? scene.mainView.btn_skill :null;
	},_super.prototype._$set_target);

	return LevelGuideNode_15_Step_1;
})(BaseGuideNodeStep)


/**
*卡组上限增加
*@author chengwen.yi
*
*/
//class modules.newguide.levelguide.step.LevelGuideNode_15_Step_2 extends modules.newguide.core.BaseGuideNodeStep
var LevelGuideNode_15_Step_2=(function(_super){
	function LevelGuideNode_15_Step_2(guideNode,stepId){
		LevelGuideNode_15_Step_2.__super.call(this,guideNode,stepId);
	}

	__class(LevelGuideNode_15_Step_2,'modules.newguide.levelguide.step.LevelGuideNode_15_Step_2',_super);
	var __proto=LevelGuideNode_15_Step_2.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="Slide_Guide";
		this.desc=LanguageMgr.Ins.GetLan("9004116");
		this.isLeft=true;
		this.descOffX=-180;
		this.descOffY=180;
		this.info={offX:0,offY:180};
		this.triggerHandler=Handler.create(this,this.closeNodeHandler);
		Laya.timer.frameOnce(1,this,this.checkGuide);
	}

	__proto.closeNodeHandler=function(){
		this.finishGuide();
	}

	__getset(0,__proto,'target',function(){
		var view=UIMgr.ins.getView("SkillSystem");
		return view ? view.userList :null;
	},_super.prototype._$set_target);

	return LevelGuideNode_15_Step_2;
})(BaseGuideNodeStep)


//class modules.newguide.levelguide.step.LevelGuideNode_20_Step_1 extends modules.newguide.core.BaseGuideNodeStep
var LevelGuideNode_20_Step_1=(function(_super){
	function LevelGuideNode_20_Step_1(guideNode,stepId){
		LevelGuideNode_20_Step_1.__super.call(this,guideNode,stepId);
	}

	__class(LevelGuideNode_20_Step_1,'modules.newguide.levelguide.step.LevelGuideNode_20_Step_1',_super);
	var __proto=LevelGuideNode_20_Step_1.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK_HICK";
		this.desc=LanguageMgr.Ins.GetLan("14300205");
		this.isLeft=true;
	}

	__getset(0,__proto,'add_Condition',function(){
		var hallMainScene=SceneMgr.ins.curScene;
		return hallMainScene && hallMainScene.mainView;
	},_super.prototype._$set_add_Condition);

	__getset(0,__proto,'target',function(){
		var scene=SceneMgr.ins.curScene;
		return (scene && scene.mainView)? scene.mainView.btnPve :null;
	},_super.prototype._$set_target);

	return LevelGuideNode_20_Step_1;
})(BaseGuideNodeStep)


//class modules.newguide.levelguide.step.LevelGuideNode_20_Step_2 extends modules.newguide.core.BaseGuideNodeStep
var LevelGuideNode_20_Step_2=(function(_super){
	function LevelGuideNode_20_Step_2(guideNode,stepId){
		this.isShowModeChooseView=false;
		LevelGuideNode_20_Step_2.__super.call(this,guideNode,stepId);
	}

	__class(LevelGuideNode_20_Step_2,'modules.newguide.levelguide.step.LevelGuideNode_20_Step_2',_super);
	var __proto=LevelGuideNode_20_Step_2.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK_HICK";
		this.desc=LanguageMgr.Ins.GetLan("14300205");
		EventMgr.ins.on("OpenChooseView",this,this.event1);
	}

	__proto.event1=function(){
		EventMgr.ins.off("OpenChooseView",this,this.event1);
		this.isShowModeChooseView=true;
		Laya.timer.frameOnce(1,this,this.checkGuide);
	}

	__proto.executeGuide=function(){
		if(this.isShowModeChooseView){
			_super.prototype.executeGuide.call(this);
		}
	}

	__getset(0,__proto,'add_Condition',function(){
		var hallMainScene=SceneMgr.ins.curScene;
		return hallMainScene && hallMainScene.mainView && UIMgr.ins.getOpenViewNum()<=0;
	},_super.prototype._$set_add_Condition);

	__getset(0,__proto,'target',function(){
		var scene=SceneMgr.ins.curScene;
		if(scene && scene.mainView && scene.mainView.modeChooseView){
			return scene.mainView.modeChooseView.modelList.getCell(1);
		}
		return null;
	},_super.prototype._$set_target);

	return LevelGuideNode_20_Step_2;
})(BaseGuideNodeStep)


//class modules.newguide.levelguide.step.LevelGuideNode_25_Step_1 extends modules.newguide.core.BaseGuideNodeStep
var LevelGuideNode_25_Step_1=(function(_super){
	function LevelGuideNode_25_Step_1(guideNode,stepId){
		LevelGuideNode_25_Step_1.__super.call(this,guideNode,stepId);
	}

	__class(LevelGuideNode_25_Step_1,'modules.newguide.levelguide.step.LevelGuideNode_25_Step_1',_super);
	var __proto=LevelGuideNode_25_Step_1.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK_HICK";
		this.desc=LanguageMgr.Ins.GetLan("9004116");
	}

	//"卡组上限增加";
	__getset(0,__proto,'add_Condition',function(){
		var hallMainScene=SceneMgr.ins.curScene;
		return hallMainScene && hallMainScene.mainView;
	},_super.prototype._$set_add_Condition);

	__getset(0,__proto,'target',function(){
		var scene=SceneMgr.ins.curScene;
		return (scene && scene.mainView)? scene.mainView.btn_skill :null;
	},_super.prototype._$set_target);

	return LevelGuideNode_25_Step_1;
})(BaseGuideNodeStep)


/**
*卡组上限增加
*@author chengwen.yi
*
*/
//class modules.newguide.levelguide.step.LevelGuideNode_25_Step_2 extends modules.newguide.core.BaseGuideNodeStep
var LevelGuideNode_25_Step_2=(function(_super){
	function LevelGuideNode_25_Step_2(guideNode,stepId){
		LevelGuideNode_25_Step_2.__super.call(this,guideNode,stepId);
	}

	__class(LevelGuideNode_25_Step_2,'modules.newguide.levelguide.step.LevelGuideNode_25_Step_2',_super);
	var __proto=LevelGuideNode_25_Step_2.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="Slide_Guide";
		this.desc=LanguageMgr.Ins.GetLan("9004116");
		this.isLeft=true;
		this.descOffX=-180;
		this.descOffY=180;
		this.info={offX:0,offY:180};
		this.triggerHandler=Handler.create(this,this.closeNodeHandler);
		Laya.timer.once(100,this,this.checkGuide);
	}

	__proto.closeNodeHandler=function(){
		this.finishGuide();
	}

	__getset(0,__proto,'target',function(){
		var view=UIMgr.ins.getView("SkillSystem");
		return view ? view.userList :null;
	},_super.prototype._$set_target);

	return LevelGuideNode_25_Step_2;
})(BaseGuideNodeStep)


//class modules.newguide.levelguide.step.LevelGuideNode_6_Step_1 extends modules.newguide.core.BaseGuideNodeStep
var LevelGuideNode_6_Step_1=(function(_super){
	function LevelGuideNode_6_Step_1(guideNode,stepId){
		LevelGuideNode_6_Step_1.__super.call(this,guideNode,stepId);
	}

	__class(LevelGuideNode_6_Step_1,'modules.newguide.levelguide.step.LevelGuideNode_6_Step_1',_super);
	var __proto=LevelGuideNode_6_Step_1.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK_HICK";
		this.desc=LanguageMgr.Ins.GetLan("14300205");
	}

	//"有新功能开启";
	__getset(0,__proto,'add_Condition',function(){
		var hallMainScene=SceneMgr.ins.curScene;
		return hallMainScene && hallMainScene.mainView;
	},_super.prototype._$set_add_Condition);

	__getset(0,__proto,'target',function(){
		var scene=SceneMgr.ins.curScene;
		return (scene && scene.mainView)? scene.mainView.btnPvp :null;
	},_super.prototype._$set_target);

	return LevelGuideNode_6_Step_1;
})(BaseGuideNodeStep)


//class modules.newguide.levelguide.step.LevelGuideNode_6_Step_2 extends modules.newguide.core.BaseGuideNodeStep
var LevelGuideNode_6_Step_2=(function(_super){
	function LevelGuideNode_6_Step_2(guideNode,stepId){
		this.isShowModeChooseView=false;
		LevelGuideNode_6_Step_2.__super.call(this,guideNode,stepId);
	}

	__class(LevelGuideNode_6_Step_2,'modules.newguide.levelguide.step.LevelGuideNode_6_Step_2',_super);
	var __proto=LevelGuideNode_6_Step_2.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK_HICK";
		this.desc=LanguageMgr.Ins.GetLan("14300205");
		EventMgr.ins.on("OpenChooseView",this,this.event1);
	}

	__proto.event1=function(){
		EventMgr.ins.off("OpenChooseView",this,this.event1);
		this.isShowModeChooseView=true;
		Laya.timer.frameOnce(1,this,this.checkGuide);
	}

	__proto.executeGuide=function(){
		if(this.isShowModeChooseView){
			_super.prototype.executeGuide.call(this);
		}
	}

	__getset(0,__proto,'add_Condition',function(){
		var hallMainScene=SceneMgr.ins.curScene;
		return hallMainScene && hallMainScene.mainView && UIMgr.ins.getOpenViewNum()<=0;
	},_super.prototype._$set_add_Condition);

	__getset(0,__proto,'target',function(){
		var scene=SceneMgr.ins.curScene;
		if(scene && scene.mainView && scene.mainView.modeChooseView){
			return scene.mainView.modeChooseView.modelList.getCell(1);
		}
		return null;
	},_super.prototype._$set_target);

	return LevelGuideNode_6_Step_2;
})(BaseGuideNodeStep)


/**
*训练营1
*@author chengwen.yi
*
*/
//class modules.newguide.node.GuideNode_10 extends modules.newguide.core.BaseGuideNode
var GuideNode_10=(function(_super){
	function GuideNode_10(nodeId){
		GuideNode_10.__super.call(this,nodeId);
		this.steps.push(GuideNode_10_Step_1);
		this.steps.push(GuideNode_10_Step_2);
		this.steps.push(GuideNode_10_Step_3);
		this.steps.push(GuideNode_10_Step_4);
		this.steps.push(GuideNode_10_Step_5);
		this.curStepId=1;
	}

	__class(GuideNode_10,'modules.newguide.node.GuideNode_10',_super);
	return GuideNode_10;
})(BaseGuideNode)


//class modules.newguide.levelguide.step.LevelGuideNode_8_Step_1 extends modules.newguide.core.BaseGuideNodeStep
var LevelGuideNode_8_Step_1=(function(_super){
	function LevelGuideNode_8_Step_1(guideNode,stepId){
		LevelGuideNode_8_Step_1.__super.call(this,guideNode,stepId);
	}

	__class(LevelGuideNode_8_Step_1,'modules.newguide.levelguide.step.LevelGuideNode_8_Step_1',_super);
	var __proto=LevelGuideNode_8_Step_1.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK_HICK";
		this.desc=LanguageMgr.Ins.GetLan("14300205");
	}

	//"有新功能开启";
	__getset(0,__proto,'add_Condition',function(){
		var hallMainScene=SceneMgr.ins.curScene;
		return hallMainScene && hallMainScene.mainView;
	},_super.prototype._$set_add_Condition);

	__getset(0,__proto,'target',function(){
		var scene=SceneMgr.ins.curScene;
		return (scene && scene.mainView)? scene.mainView.btn_badge :null;
	},_super.prototype._$set_target);

	return LevelGuideNode_8_Step_1;
})(BaseGuideNodeStep)


/**
*解锁宝箱
*@author chengwen.yi
*
*/
//class modules.newguide.node.GuideNode_110 extends modules.newguide.core.BaseGuideNode
var GuideNode_110=(function(_super){
	function GuideNode_110(nodeId){
		GuideNode_110.__super.call(this,nodeId);
		this.steps.push(GuideNode_110_Step_1);
		this.steps.push(GuideNode_110_Step_2);
		this.steps.push(GuideNode_110_Step_3);
		this.steps.push(GuideNode_110_Step_4);
		this.curStepId=1;
	}

	__class(GuideNode_110,'modules.newguide.node.GuideNode_110',_super);
	return GuideNode_110;
})(BaseGuideNode)


/**
*训练营2
*@author chengwen.yi
*
*/
//class modules.newguide.node.GuideNode_120 extends modules.newguide.core.BaseGuideNode
var GuideNode_120=(function(_super){
	function GuideNode_120(nodeId){
		GuideNode_120.__super.call(this,nodeId);
		this.steps.push(GuideNode_120_Step_1);
		this.steps.push(GuideNode_120_Step_2);
		this.steps.push(GuideNode_120_Step_3);
		this.steps.push(GuideNode_120_Step_4);
		this.curStepId=1;
	}

	__class(GuideNode_120,'modules.newguide.node.GuideNode_120',_super);
	return GuideNode_120;
})(BaseGuideNode)


/**
*打开宝箱
*@author chengwen.yi
*
*/
//class modules.newguide.node.GuideNode_130 extends modules.newguide.core.BaseGuideNode
var GuideNode_130=(function(_super){
	function GuideNode_130(nodeId){
		GuideNode_130.__super.call(this,nodeId);
		this.steps.push(GuideNode_130_Step_1);
		this.steps.push(GuideNode_130_Step_2);
		this.steps.push(GuideNode_130_Step_3);
		this.curStepId=1;
	}

	__class(GuideNode_130,'modules.newguide.node.GuideNode_130',_super);
	return GuideNode_130;
})(BaseGuideNode)


/**
*卡牌升级
*@author chengwen.yi
*
*/
//class modules.newguide.node.GuideNode_140 extends modules.newguide.core.BaseGuideNode
var GuideNode_140=(function(_super){
	function GuideNode_140(nodeId){
		GuideNode_140.__super.call(this,nodeId);
		this.steps.push(GuideNode_140_Step_1);
		this.steps.push(GuideNode_140_Step_2);
		this.steps.push(GuideNode_140_Step_3);
		this.steps.push(GuideNode_140_Step_4);
		this.steps.push(GuideNode_140_Step_5);
		this.steps.push(GuideNode_140_Step_6);
		this.curStepId=1;
	}

	__class(GuideNode_140,'modules.newguide.node.GuideNode_140',_super);
	return GuideNode_140;
})(BaseGuideNode)


/**
*任务系统指引
*@author chengwen.yi
*
*/
//class modules.newguide.node.GuideNode_150 extends modules.newguide.core.BaseGuideNode
var GuideNode_150=(function(_super){
	function GuideNode_150(nodeId){
		GuideNode_150.__super.call(this,nodeId);
		this.steps.push(GuideNode_150_Step_1);
		this.steps.push(GuideNode_150_Step_2);
		this.curStepId=1;
	}

	__class(GuideNode_150,'modules.newguide.node.GuideNode_150',_super);
	return GuideNode_150;
})(BaseGuideNode)


/**
*发送匹配战斗请求
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_10_Step_1 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_10_Step_1=(function(_super){
	function GuideNode_10_Step_1(guideNode,stepId){
		GuideNode_10_Step_1.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_10_Step_1,'modules.newguide.step.GuideNode_10_Step_1',_super);
	var __proto=GuideNode_10_Step_1.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="FuncHandler";
		this.triggerHandler=Handler.create(this,this.target1);
	}

	__proto.target1=function(){
		if(PlayerInfo.instance.grade >=2){
			this.guideNode.finishGuide();
		}
		else{
			RoomMgr.ins.enterGuideBattle();
			this.finishGuide();
		}
	}

	return GuideNode_10_Step_1;
})(BaseGuideNodeStep)


/**
*训练营1 对白1
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_10_Step_2 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_10_Step_2=(function(_super){
	function GuideNode_10_Step_2(guideNode,stepId){
		GuideNode_10_Step_2.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_10_Step_2,'modules.newguide.step.GuideNode_10_Step_2',_super);
	var __proto=GuideNode_10_Step_2.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="TALK";
		this.npcName=LanguageMgr.Ins.GetLan("9004001");
		this.content=LanguageMgr.Ins.GetLan("9004005");
		this.triggerHandler=Handler.create(this,this.closeTalkHandler);
		this.add_Condition=false;
		EventMgr.ins.on("GuideNode_10_Step_2",this,this.event1);
	}

	__proto.event1=function(){
		EventMgr.ins.off("GuideNode_10_Step_2",this,this.event1);
		this.add_Condition=true;
		this.checkGuide();
	}

	__proto.closeTalkHandler=function(){
		SocketManager.Instance.record.guideClickRecords(22);
		EventMgr.ins.event("guide_showSkillbox");
		this.finishGuide();
	}

	return GuideNode_10_Step_2;
})(BaseGuideNodeStep)


/**
*卡牌详细信息+使用指引
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_10_Step_3 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_10_Step_3=(function(_super){
	function GuideNode_10_Step_3(guideNode,stepId){
		GuideNode_10_Step_3.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_10_Step_3,'modules.newguide.step.GuideNode_10_Step_3',_super);
	var __proto=GuideNode_10_Step_3.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK_SKILL_DESC";
		this.info={offX:0,offY:15};
		this.add_Condition=false;
		EventMgr.ins.on("GuideNode_10_Step_3",this,this.event1);
	}

	__proto.event1=function(){
		EventMgr.ins.off("GuideNode_10_Step_3",this,this.event1);
		this.add_Condition=true;
		Laya.timer.once(200,this,this.checkGuide);
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		_super.prototype.finishGuide.call(this,isNext);
	}

	//this.checkGuide();
	__getset(0,__proto,'target',function(){
		var scene=SceneMgr.ins.curScene;
		var battleMenu=scene ? scene.menuView :null;
		return battleMenu ? battleMenu.cards[0] :null;
	},_super.prototype._$set_target);

	return GuideNode_10_Step_3;
})(BaseGuideNodeStep)


/**
*战斗拉线指引
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_10_Step_4 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_10_Step_4=(function(_super){
	function GuideNode_10_Step_4(guideNode,stepId){
		GuideNode_10_Step_4.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_10_Step_4,'modules.newguide.step.GuideNode_10_Step_4',_super);
	var __proto=GuideNode_10_Step_4.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="Battle_LaXian";
		this.info={offX:245,offY:40};
		this.triggerHandler=Handler.create(this,this.closeNodeHandler);
		this.isMask=false;
		this.desc=LanguageMgr.Ins.GetLan("9004102");
	}

	__proto.executeGuide=function(){
		_super.prototype.executeGuide.call(this);
		var scene=SceneMgr.ins.curScene;
		scene.hero.mouseEnabled=true;
		scene.menuView.mouseEnabled=false;
	}

	__proto.closeNodeHandler=function(){
		this.finishGuide();
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		_super.prototype.finishGuide.call(this,isNext);
		var scene=SceneMgr.ins.curScene;
		scene.menuView.mouseEnabled=true;
	}

	//"滑动拉线瞄准";
	__getset(0,__proto,'target',function(){
		var scene=SceneMgr.ins.curScene;
		return scene.hero.touchBg;
	},_super.prototype._$set_target);

	return GuideNode_10_Step_4;
})(BaseGuideNodeStep)


/**
*强制退出翻牌界面 防止点击开宝箱
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_10_Step_5 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_10_Step_5=(function(_super){
	function GuideNode_10_Step_5(guideNode,stepId){
		GuideNode_10_Step_5.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_10_Step_5,'modules.newguide.step.GuideNode_10_Step_5',_super);
	var __proto=GuideNode_10_Step_5.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK";
		this.info={offX:0,offY:-40};
		EventMgr.ins.on("ShowBattleOverDanView",this,this.showBattleOverDanView);
		LayerMgr.ins.newGuideTopLayer.mouseEnabled=false;
	}

	__proto.showBattleOverDanView=function(isOpenCardView){
		NewGuideMgr.ins.nextGuideNode(true);
		if(!isOpenCardView){
			this.finishGuide();
		}
		else{
			this.add_Condition=false;
			EventMgr.ins.on("GuideNode_10_Step_5",this,this.event1);
			EventMgr.ins.on("close_view",this,this.close_View);
		}
	}

	__proto.event1=function(){
		EventMgr.ins.off("GuideNode_10_Step_5",this,this.event1);
		this.add_Condition=true;
		Laya.timer.frameOnce(1,this,this.checkGuide);
	}

	//this.checkGuide();
	__proto.close_View=function(viewType){
		if(viewType=="MulitBattleOpenCard"){
			this.finishGuide();
		}
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		EventMgr.ins.off("ShowBattleOverDanView",this,this.showBattleOverDanView);
		EventMgr.ins.off("GuideNode_10_Step_5",this,this.event1);
		EventMgr.ins.off("close_view",this,this.close_View);
		_super.prototype.finishGuide.call(this,isNext);
	}

	__getset(0,__proto,'target',function(){
		var view=UIMgr.ins.getView("MulitBattleOpenCard");
		return view ? view.btnBack :null;
	},_super.prototype._$set_target);

	return GuideNode_10_Step_5;
})(BaseGuideNodeStep)


/**
*解锁宝箱 对白1
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_110_Step_1 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_110_Step_1=(function(_super){
	function GuideNode_110_Step_1(guideNode,stepId){
		GuideNode_110_Step_1.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_110_Step_1,'modules.newguide.step.GuideNode_110_Step_1',_super);
	var __proto=GuideNode_110_Step_1.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="TALK";
		this.npcName=LanguageMgr.Ins.GetLan("9004001");
		this.content=LanguageMgr.Ins.GetLan("9004003");
		this.triggerHandler=Handler.create(this,this.closeTalkHandler);
	}

	__proto.closeTalkHandler=function(){
		this.finishGuide();
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		SocketManager.Instance.record.guideClickRecords(110);
		_super.prototype.finishGuide.call(this,isNext);
	}

	__getset(0,__proto,'add_Condition',function(){
		var hallMainScene=SceneMgr.ins.curScene;
		return hallMainScene && hallMainScene.mainView;
	},_super.prototype._$set_add_Condition);

	return GuideNode_110_Step_1;
})(BaseGuideNodeStep)


/**
*指引点击新手宝箱
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_110_Step_2 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_110_Step_2=(function(_super){
	function GuideNode_110_Step_2(guideNode,stepId){
		GuideNode_110_Step_2.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_110_Step_2,'modules.newguide.step.GuideNode_110_Step_2',_super);
	var __proto=GuideNode_110_Step_2.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK_HICK";
		this.desc=LanguageMgr.Ins.GetLan("9004105");
		this.descOffX=50;
		this.maskAlpha=0;
	}

	__proto.executeGuide=function(){
		var temp=HallMgr.ins.getBoxInfoByTypeAndIndex(4,3,0);
		if(temp && temp.Desc=="新手宝箱" && temp.isLocked){
			_super.prototype.executeGuide.call(this);
		}
		else{
			console.log("条件不满足后续指引,提前结束该跟节点:"+this.guideNode.nodeId);
			this.guideNode.finishGuide();
		}
	}

	__getset(0,__proto,'target',function(){
		var scene=SceneMgr.ins.curScene;
		return scene && scene.mainView ? scene.mainView.bottomCenterBox.itemEffect1 :null;
	},_super.prototype._$set_target);

	return GuideNode_110_Step_2;
})(BaseGuideNodeStep)


/**
*指引点击TreasureBoxDetailWindow解锁按钮
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_110_Step_3 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_110_Step_3=(function(_super){
	function GuideNode_110_Step_3(guideNode,stepId){
		GuideNode_110_Step_3.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_110_Step_3,'modules.newguide.step.GuideNode_110_Step_3',_super);
	var __proto=GuideNode_110_Step_3.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK";
		this.info={offX:0,offY:-65};
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		NewGuideMgr.ins.nextGuideNode(true);
		_super.prototype.finishGuide.call(this,isNext);
	}

	__getset(0,__proto,'target',function(){
		var view=UIMgr.ins.getView("TreasureBoxDetailWindow");
		return view ? view.unlockBtn :null;
	},_super.prototype._$set_target);

	return GuideNode_110_Step_3;
})(BaseGuideNodeStep)


/**
*指引点击TreasureBoxDetailWindow关闭按钮
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_110_Step_4 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_110_Step_4=(function(_super){
	function GuideNode_110_Step_4(guideNode,stepId){
		GuideNode_110_Step_4.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_110_Step_4,'modules.newguide.step.GuideNode_110_Step_4',_super);
	var __proto=GuideNode_110_Step_4.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK";
	}

	__proto.executeGuide=function(){
		_super.prototype.executeGuide.call(this);
		EventMgr.ins.on("close_view",this,this.close_view);
	}

	__proto.close_view=function(viewType){
		if(viewType=="TreasureBoxDetailWindow"){
			this.finishGuide();
		}
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		EventMgr.ins.off("close_view",this,this.close_view);
		_super.prototype.finishGuide.call(this,isNext);
	}

	__getset(0,__proto,'target',function(){
		var view=UIMgr.ins.getView("TreasureBoxDetailWindow");
		return view ? view.closeBtn :null;
	},_super.prototype._$set_target);

	return GuideNode_110_Step_4;
})(BaseGuideNodeStep)


/**
*训练营2 点击竞技模式按钮
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_120_Step_1 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_120_Step_1=(function(_super){
	function GuideNode_120_Step_1(guideNode,stepId){
		GuideNode_120_Step_1.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_120_Step_1,'modules.newguide.step.GuideNode_120_Step_1',_super);
	var __proto=GuideNode_120_Step_1.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK_HICK";
		this.desc=LanguageMgr.Ins.GetLan("9004103");
	}

	__proto.executeGuide=function(){
		var view=UIMgr.ins.getView("PVPRoomView");
		if(view){
			this.finishGuide();
		}
		else{
			_super.prototype.executeGuide.call(this);
		}
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		SocketManager.Instance.record.guideClickRecords(120);
		_super.prototype.finishGuide.call(this,isNext);
	}

	//"点击开始匹配";
	__getset(0,__proto,'add_Condition',function(){
		var hallMainScene=SceneMgr.ins.curScene;
		return hallMainScene && hallMainScene.mainView;
	},_super.prototype._$set_add_Condition);

	__getset(0,__proto,'target',function(){
		var scene=SceneMgr.ins.curScene;
		return scene && scene.mainView ? scene.mainView.btnPvp :null;
	},_super.prototype._$set_target);

	return GuideNode_120_Step_1;
})(BaseGuideNodeStep)


/**
*训练营2_选择竞技
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_120_Step_2 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_120_Step_2=(function(_super){
	function GuideNode_120_Step_2(guideNode,stepId){
		this.isShowModeChooseView=false;
		GuideNode_120_Step_2.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_120_Step_2,'modules.newguide.step.GuideNode_120_Step_2',_super);
	var __proto=GuideNode_120_Step_2.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK";
		EventMgr.ins.on("OpenChooseView",this,this.event1);
	}

	__proto.event1=function(){
		EventMgr.ins.off("OpenChooseView",this,this.event1);
		this.isShowModeChooseView=true;
		Laya.timer.frameOnce(1,this,this.checkGuide);
	}

	__proto.executeGuide=function(){
		var view=UIMgr.ins.getView("PVPRoomView");
		if(view){
			this.finishGuide();
		}
		else{
			if(this.isShowModeChooseView){
				_super.prototype.executeGuide.call(this);
			}
		}
	}

	__getset(0,__proto,'add_Condition',function(){
		var hallMainScene=SceneMgr.ins.curScene;
		return hallMainScene && hallMainScene.mainView;
	},_super.prototype._$set_add_Condition);

	__getset(0,__proto,'target',function(){
		var scene=SceneMgr.ins.curScene;
		if(scene && scene.mainView && scene.mainView.modeChooseView){
			return scene.mainView.modeChooseView.modelList.getCell(0);
		}
		return null;
	},_super.prototype._$set_target);

	return GuideNode_120_Step_2;
})(BaseGuideNodeStep)


/**
*训练营2_点击开始
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_120_Step_3 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_120_Step_3=(function(_super){
	function GuideNode_120_Step_3(guideNode,stepId){
		GuideNode_120_Step_3.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_120_Step_3,'modules.newguide.step.GuideNode_120_Step_3',_super);
	var __proto=GuideNode_120_Step_3.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK";
	}

	//this.maskAlpha=0;
	__getset(0,__proto,'add_Condition',function(){
		var hallMainScene=SceneMgr.ins.curScene;
		return hallMainScene && hallMainScene.mainView;
	},_super.prototype._$set_add_Condition);

	__getset(0,__proto,'target',function(){
		var view=UIMgr.ins.getView("PVPRoomView");
		return view ? view.startGameBtn :null;
	},_super.prototype._$set_target);

	return GuideNode_120_Step_3;
})(BaseGuideNodeStep)


/**
*强制退出翻牌界面 防止点击开宝箱
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_120_Step_4 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_120_Step_4=(function(_super){
	function GuideNode_120_Step_4(guideNode,stepId){
		GuideNode_120_Step_4.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_120_Step_4,'modules.newguide.step.GuideNode_120_Step_4',_super);
	var __proto=GuideNode_120_Step_4.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK";
		this.info={offX:0,offY:-40};
		EventMgr.ins.on("ShowBattleOverDanView",this,this.showBattleOverDanView);
		LayerMgr.ins.newGuideTopLayer.mouseEnabled=false;
	}

	__proto.showBattleOverDanView=function(isOpenCardView){
		NewGuideMgr.ins.nextGuideNode(true);
		if(!isOpenCardView){
			this.finishGuide();
		}
		else{
			this.add_Condition=false;
			EventMgr.ins.on("GuideNode_10_Step_5",this,this.event1);
			EventMgr.ins.on("close_view",this,this.close_View);
		}
	}

	__proto.event1=function(){
		EventMgr.ins.off("GuideNode_10_Step_5",this,this.event1);
		this.add_Condition=true;
		Laya.timer.frameOnce(1,this,this.checkGuide);
	}

	//this.checkGuide();
	__proto.close_View=function(viewType){
		if(viewType=="MulitBattleOpenCard"){
			this.finishGuide();
		}
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		EventMgr.ins.off("ShowBattleOverDanView",this,this.showBattleOverDanView);
		EventMgr.ins.off("GuideNode_10_Step_5",this,this.event1);
		EventMgr.ins.off("close_view",this,this.close_View);
		_super.prototype.finishGuide.call(this,isNext);
	}

	__getset(0,__proto,'target',function(){
		var view=UIMgr.ins.getView("MulitBattleOpenCard");
		return view ? view.btnBack :null;
	},_super.prototype._$set_target);

	return GuideNode_120_Step_4;
})(BaseGuideNodeStep)


/**
*打开宝箱 对白1
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_130_Step_1 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_130_Step_1=(function(_super){
	function GuideNode_130_Step_1(guideNode,stepId){
		GuideNode_130_Step_1.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_130_Step_1,'modules.newguide.step.GuideNode_130_Step_1',_super);
	var __proto=GuideNode_130_Step_1.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="TALK";
		this.npcName=LanguageMgr.Ins.GetLan("9004001");
		this.content=LanguageMgr.Ins.GetLan("9004007");
		this.triggerHandler=Handler.create(this,this.closeTalkHandler);
	}

	__proto.closeTalkHandler=function(){
		this.finishGuide();
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		SocketManager.Instance.record.guideClickRecords(130);
		_super.prototype.finishGuide.call(this,isNext);
	}

	__getset(0,__proto,'add_Condition',function(){
		var view=UIMgr.ins.getView("PVPRoomView");
		return ((SceneMgr.ins.curScene instanceof modules.hall.scene.HallMainScene ))&& (SceneMgr.ins.curScene).mainView && view==null;
	},_super.prototype._$set_add_Condition);

	return GuideNode_130_Step_1;
})(BaseGuideNodeStep)


/**
*指引点击开启新手宝箱
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_130_Step_2 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_130_Step_2=(function(_super){
	function GuideNode_130_Step_2(guideNode,stepId){
		GuideNode_130_Step_2.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_130_Step_2,'modules.newguide.step.GuideNode_130_Step_2',_super);
	var __proto=GuideNode_130_Step_2.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK_HICK";
		this.desc=LanguageMgr.Ins.GetLan("9004106");
		this.descOffX=50;
		this.maskAlpha=0;
	}

	__proto.executeGuide=function(){
		var temp=HallMgr.ins.getBoxInfoByTypeAndIndex(4,3,0);
		if(temp && temp.Desc=="新手宝箱" && !temp.isLocked){
			_super.prototype.executeGuide.call(this);
		}
		else{
			console.log("条件不满足后续指引,提前结束该跟节点:"+this.guideNode.nodeId);
			this.guideNode.finishGuide();
		}
	}

	__getset(0,__proto,'add_Condition',function(){
		var hallMainScene=SceneMgr.ins.curScene;
		return hallMainScene && hallMainScene.mainView;
	},_super.prototype._$set_add_Condition);

	__getset(0,__proto,'target',function(){
		var scene=SceneMgr.ins.curScene;
		return (scene && scene.mainView)? scene.mainView.bottomCenterBox.itemEffect1 :null;
	},_super.prototype._$set_target);

	return GuideNode_130_Step_2;
})(BaseGuideNodeStep)


/**
*退出开宝箱界面
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_130_Step_3 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_130_Step_3=(function(_super){
	function GuideNode_130_Step_3(guideNode,stepId){
		GuideNode_130_Step_3.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_130_Step_3,'modules.newguide.step.GuideNode_130_Step_3',_super);
	var __proto=GuideNode_130_Step_3.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK";
		this.info={offX:0,offY:-65};
		this.add_Condition=false;
		EventMgr.ins.on("GuideNode_130_Step_3",this,this.event1);
	}

	__proto.event1=function(){
		EventMgr.ins.off("GuideNode_130_Step_3",this,this.event1);
		this.add_Condition=true;
		Laya.timer.frameOnce(1,this,this.checkGuide);
	}

	//this.checkGuide();
	__proto.executeGuide=function(){
		_super.prototype.executeGuide.call(this);
		EventMgr.ins.on("close_view",this,this.close_View);
	}

	__proto.close_View=function(viewType){
		if(viewType=="TreasureBoxOpenView"){
			this.finishGuide();
		}
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		EventMgr.ins.off("close_view",this,this.close_View);
		_super.prototype.finishGuide.call(this,isNext);
	}

	__getset(0,__proto,'target',function(){
		var view=UIMgr.ins.getView("TreasureBoxOpenView");
		return view ? view.returnBtn :null;
	},_super.prototype._$set_target);

	return GuideNode_130_Step_3;
})(BaseGuideNodeStep)


/**
*卡牌升级 点击卡牌按钮进入卡库界面
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_140_Step_1 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_140_Step_1=(function(_super){
	function GuideNode_140_Step_1(guideNode,stepId){
		GuideNode_140_Step_1.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_140_Step_1,'modules.newguide.step.GuideNode_140_Step_1',_super);
	var __proto=GuideNode_140_Step_1.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK_HICK";
		this.desc=LanguageMgr.Ins.GetLan("9004108");
	}

	__proto.executeGuide=function(){
		var isCanUpgrad=false;
		var arr=SkillMgr.ins.getCardListByType(0);
		if(arr){
			var skillVO=arr [5];
			if(skillVO.skillCard >=skillVO.CostSkillPoint && skillVO.CostSkillPoint !=0){
				isCanUpgrad=true;
			}
		}
		if(!isCanUpgrad){
			console.log("条件不满足后续指引,提前结束该跟节点:"+this.guideNode.nodeId);
			this.guideNode.finishGuide();
		}
		else{
			_super.prototype.executeGuide.call(this);
		}
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		SocketManager.Instance.record.guideClickRecords(140);
		_super.prototype.finishGuide.call(this,isNext);
	}

	//"点击进入卡库";
	__getset(0,__proto,'add_Condition',function(){
		var hallMainScene=SceneMgr.ins.curScene;
		return hallMainScene && hallMainScene.mainView;
	},_super.prototype._$set_add_Condition);

	__getset(0,__proto,'target',function(){
		var scene=SceneMgr.ins.curScene;
		return (scene && scene.mainView)? scene.mainView.btn_skill :null;
	},_super.prototype._$set_target);

	return GuideNode_140_Step_1;
})(BaseGuideNodeStep)


/**
*卡牌升级 点击回旋镖
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_140_Step_2 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_140_Step_2=(function(_super){
	function GuideNode_140_Step_2(guideNode,stepId){
		GuideNode_140_Step_2.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_140_Step_2,'modules.newguide.step.GuideNode_140_Step_2',_super);
	var __proto=GuideNode_140_Step_2.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK";
		this.add_Condition=false;
		EventMgr.ins.on("GuideNode_140_Step_2",this,this.event1);
	}

	__proto.event1=function(){
		EventMgr.ins.off("GuideNode_140_Step_2",this,this.event1);
		this.add_Condition=true;
		Laya.timer.frameOnce(1,this,this.checkGuide);
	}

	__proto.executeGuide=function(){
		var view=UIMgr.ins.getView("SkillSystem");
		_super.prototype.executeGuide.call(this);
		if(view)view.allList.scrollBar.touchScrollEnable=false;
	}

	//
	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		var view=UIMgr.ins.getView("SkillSystem");
		if(view){
			view.allList.scrollBar.touchScrollEnable=true;
		}
		_super.prototype.finishGuide.call(this,isNext);
	}

	//this.checkGuide();
	__getset(0,__proto,'target',function(){
		var view=UIMgr.ins.getView("SkillSystem");
		return view ? view.allList.getCell(5):null;
	},_super.prototype._$set_target);

	return GuideNode_140_Step_2;
})(BaseGuideNodeStep)


/**
*卡牌升级 点击回旋镖升级按钮
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_140_Step_3 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_140_Step_3=(function(_super){
	function GuideNode_140_Step_3(guideNode,stepId){
		GuideNode_140_Step_3.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_140_Step_3,'modules.newguide.step.GuideNode_140_Step_3',_super);
	var __proto=GuideNode_140_Step_3.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK";
		this.info={offX:0,offY:-50};
	}

	__getset(0,__proto,'target',function(){
		var view=UIMgr.ins.getView("CardMessageView");
		return view ? view.btn_upgrade :null;
	},_super.prototype._$set_target);

	return GuideNode_140_Step_3;
})(BaseGuideNodeStep)


/**
*卡牌升级 退出升级界面
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_140_Step_4 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_140_Step_4=(function(_super){
	function GuideNode_140_Step_4(guideNode,stepId){
		GuideNode_140_Step_4.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_140_Step_4,'modules.newguide.step.GuideNode_140_Step_4',_super);
	var __proto=GuideNode_140_Step_4.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK";
		this.maskAlpha=0;
		this.info={offX:0,offY:-50};
	}

	__proto.executeGuide=function(){
		_super.prototype.executeGuide.call(this);
		EventMgr.ins.on("close_view",this,this.close_View);
	}

	__proto.close_View=function(viewType){
		if(viewType=="CardUpdateEffectView"){
			this.finishGuide();
		}
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		EventMgr.ins.off("close_view",this,this.close_View);
		_super.prototype.finishGuide.call(this,isNext);
	}

	__getset(0,__proto,'target',function(){
		var view=UIMgr.ins.getView("CardUpdateEffectView");
		return view ? view.btn_back :null;
	},_super.prototype._$set_target);

	return GuideNode_140_Step_4;
})(BaseGuideNodeStep)


/**
*卡牌升级 升级解锁卡位提示
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_140_Step_5 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_140_Step_5=(function(_super){
	function GuideNode_140_Step_5(guideNode,stepId){
		GuideNode_140_Step_5.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_140_Step_5,'modules.newguide.step.GuideNode_140_Step_5',_super);
	var __proto=GuideNode_140_Step_5.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="Slide_Guide";
		this.desc=LanguageMgr.Ins.GetLan("9004118");
		this.isLeft=true;
		this.descOffX=-180;
		this.descOffY=180;
		this.info={offX:0,offY:180};
		this.triggerHandler=Handler.create(this,this.closeNodeHandler);
		Laya.timer.once(100,this,this.checkGuide);
		LayerMgr.ins.newGuideTopLayer.mouseEnabled=false;
	}

	__proto.closeNodeHandler=function(){
		this.finishGuide();
	}

	__getset(0,__proto,'target',function(){
		var view=UIMgr.ins.getView("SkillSystem");
		return view ? view.userList :null;
	},_super.prototype._$set_target);

	return GuideNode_140_Step_5;
})(BaseGuideNodeStep)


/**
*卡牌升级 关闭技能界面
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_140_Step_6 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_140_Step_6=(function(_super){
	function GuideNode_140_Step_6(guideNode,stepId){
		GuideNode_140_Step_6.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_140_Step_6,'modules.newguide.step.GuideNode_140_Step_6',_super);
	var __proto=GuideNode_140_Step_6.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK";
	}

	__proto.executeGuide=function(){
		_super.prototype.executeGuide.call(this);
		EventMgr.ins.on("close_view",this,this.close_View);
	}

	__proto.close_View=function(viewType){
		if(viewType=="SkillSystem"){
			this.finishGuide();
		}
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		EventMgr.ins.off("close_view",this,this.close_View);
		_super.prototype.finishGuide.call(this,isNext);
	}

	__getset(0,__proto,'target',function(){
		var view=UIMgr.ins.getView("SkillSystem");
		return view ? view.btnBreak :null;
	},_super.prototype._$set_target);

	return GuideNode_140_Step_6;
})(BaseGuideNodeStep)


/**
*任务系统
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_150_Step_1 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_150_Step_1=(function(_super){
	function GuideNode_150_Step_1(guideNode,stepId){
		GuideNode_150_Step_1.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_150_Step_1,'modules.newguide.step.GuideNode_150_Step_1',_super);
	var __proto=GuideNode_150_Step_1.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK_HICK";
		this.desc=LanguageMgr.Ins.GetLan("9004107");
		this.isLeft=true;
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		SocketManager.Instance.record.guideClickRecords(150);
		_super.prototype.finishGuide.call(this,isNext);
	}

	__getset(0,__proto,'add_Condition',function(){
		var view=UIMgr.ins.getView("SkillSystem");
		return ((SceneMgr.ins.curScene instanceof modules.hall.scene.HallMainScene ))&& (SceneMgr.ins.curScene).mainView && view==null;
	},_super.prototype._$set_add_Condition);

	__getset(0,__proto,'target',function(){
		var scene=SceneMgr.ins.curScene;
		return (scene && scene.mainView)? scene.mainView.btn_medal :null;
	},_super.prototype._$set_target);

	return GuideNode_150_Step_1;
})(BaseGuideNodeStep)


/**
*任务系统 指引点击领取按钮
*@author chengwen.yi
*
*/
//class modules.newguide.step.GuideNode_150_Step_2 extends modules.newguide.core.BaseGuideNodeStep
var GuideNode_150_Step_2=(function(_super){
	function GuideNode_150_Step_2(guideNode,stepId){
		//this.checkGuide();
		this.guideListIndex=0;
		GuideNode_150_Step_2.__super.call(this,guideNode,stepId);
	}

	__class(GuideNode_150_Step_2,'modules.newguide.step.GuideNode_150_Step_2',_super);
	var __proto=GuideNode_150_Step_2.prototype;
	__proto.initGuide=function(){
		_super.prototype.initGuide.call(this);
		this.type="CLICK";
		this.info={offX:0,offY:-45};
		this.add_Condition=false;
		EventMgr.ins.on("GuideNode_150_Step_2",this,this.event1);
	}

	__proto.event1=function(){
		EventMgr.ins.off("GuideNode_150_Step_2",this,this.event1);
		this.add_Condition=true;
		Laya.timer.frameOnce(1,this,this.checkGuide);
	}

	__proto.executeGuide=function(){
		var isCanGetReward=false;
		var view=UIMgr.ins.getView("Quest");
		if(view && view.view_rw){
			var taskView=view.view_rw;
			var questVO=taskView._list.getItem(this.guideListIndex);
			if(questVO && questVO.ReceivedListLength !=questVO.ConditionList.length && questVO.AvailableListLength > 0){
				isCanGetReward=true;
			}
		}
		if(isCanGetReward){
			_super.prototype.executeGuide.call(this);
		}
		else{
			console.log("条件不满足后续指引,提前结束该跟节点:"+this.guideNode.nodeId);
			this.guideNode.finishGuide();
		}
	}

	__proto.finishGuide=function(isNext){
		(isNext===void 0)&& (isNext=true);
		EventMgr.ins.off("GuideNode_150_Step_2",this,this.event1);
		_super.prototype.finishGuide.call(this,isNext);
	}

	__getset(0,__proto,'target',function(){
		var view=UIMgr.ins.getView("Quest");
		if(view && view.view_rw){
			var taskView=view.view_rw;
			var questItem=taskView._list.getCell(this.guideListIndex);
			return questItem ? questItem.lq_btn :null;
		}
		return null;
	},_super.prototype._$set_target);

	return GuideNode_150_Step_2;
})(BaseGuideNodeStep)


//class laya.filters.GColorFilter extends laya.filters.ColorFilter
var GColorFilter=(function(_super){
	function GColorFilter(mat){
		GColorFilter.__super.call(this,mat);
	}

	__class(GColorFilter,'laya.filters.GColorFilter',_super);
	return GColorFilter;
})(ColorFilter)


//class laya.filters.GRGBAFilter extends laya.filters.ColorFilter
var GRGBAFilter=(function(_super){
	function GRGBAFilter(mat){
		GRGBAFilter.__super.call(this,mat);
	}

	__class(GRGBAFilter,'laya.filters.GRGBAFilter',_super);
	return GRGBAFilter;
})(ColorFilter)


/**
*地图拖动和缩放管理器
*@author weiqiang.huang
*
*/
//class manager.MapDragTouchManager extends laya.display.Sprite
var MapDragTouchManager=(function(_super){
	function MapDragTouchManager(){
		this._map=null;
		this._dragMouseDownX=NaN;
		this._dragMouseDownY=NaN;
		//判断是否拖拽地图
		this._isDragMouse=false;
		//判断是否缩放地图
		this._isMapZoom=false;
		/**上次记录的两点触摸点之间距离 **/
		this.lastDistance=0;
		this._scaleTween=null;
		this.MinScale=0.1;
		this.MaxScale=1;
		this.scaleValue=0.5;
		MapDragTouchManager.__super.call(this);
	}

	__class(MapDragTouchManager,'manager.MapDragTouchManager',_super);
	var __proto=MapDragTouchManager.prototype;
	Laya.imps(__proto,{"laya.ui.IResize":true})
	__proto.setup=function($map){
		this._map=$map;
		this.initDragEvent();
		this.checkMapMinScale();
		this.scaleValue=this.MinScale;
		this.checkEdgePos();
	}

	__proto.initDragEvent=function(){
		if(this._map){
			this._map.on("mousedown",this,this.onDragMouseDown);
			Laya.stage.on("mousewheel",this,this.onWheelHandler);
		}
	}

	__proto.stopDragMouse=function(){
		if(this._map){
			this._isDragMouse=false;
			Laya.stage.off("mousemove",this,this.onDragMouseMove);
			Laya.stage.off("mouseup",this,this.onDragMouseUp);
		}
	}

	__proto.clearDragEvent=function(){
		if(this._map){
			this._map.off("mousedown",this,this.onDragMouseDown);
			Laya.stage.off("mousewheel",this,this.onWheelHandler);
		}
	}

	__proto.onDragMouseDown=function(evt){
		if(NewGuideMgr.ins.isFirstNewGuideBattle){
			return;
		}
		if((evt.target instanceof modules.battle.view.BattleScene )&& (evt.currentTarget instanceof modules.battle.view.BattleScene )){
			var touches=evt.touches;
			if(touches && touches.length==2){
				this.lastDistance=this.getDistance(touches);
				this._isMapZoom=true;
				this._isDragMouse=false;
			}
			else{
				CameraManager.instance.removeTween();
				this._isMapZoom=false;
				this._isDragMouse=true;
			}
			this._dragMouseDownX=evt.stageX;
			this._dragMouseDownY=evt.stageY;
			Laya.stage.on("mousemove",this,this.onDragMouseMove);
			Laya.stage.on("mouseup",this,this.onDragMouseUp);
		}
	}

	__proto.onDragMouseMove=function(evt){
		if(!CameraManager.instance.isMoving){
			if(this._isDragMouse){
				var px=evt.stageX-this._dragMouseDownX;
				var py=evt.stageY-this._dragMouseDownY;
				var tx=this._map.x+px;
				var ty=this._map.y+py;
				var halfW=(this._map.adaptEdgeWidth*this.scaleValue)>>1;
				var halfH=(this._map.adaptEdgeHeight*this.scaleValue)>>1;
				var _x=tx > halfW ? halfW :tx;
				var _y=ty > halfH ? halfH :ty;
				var rx=ResizeMgr.bestFitWidth-halfW;
				var ry=ResizeMgr.bestFitHeight-halfH;
				if(_x < rx)_x=rx;
				if(_y < ry)_y=ry;
				this._map.x=_x;
				this._map.y=_y;
				this._dragMouseDownX=evt.stageX;
				this._dragMouseDownY=evt.stageY;
			}
			if(this._isMapZoom){
				var distance=this.getDistance(evt.touches);
				var value=(distance-this.lastDistance)/ 1000;
				this.lastDistance=distance;
				if((this.scaleValue >=this.MaxScale && value > 0)|| (this.scaleValue <=this.MinScale && value < 0)){
					console.log("已达到缩放边界值");
				}
				else{
					this.scaleValue+=value;
					this.updateScale();
				}
				this.checkEdgePos();
			}
		}
	}

	__proto.onDragMouseUp=function(evt){
		Laya.stage.off("mousemove",this,this.onDragMouseMove);
		Laya.stage.off("mouseup",this,this.onDragMouseUp);
		if(this._isDragMouse){
			this._isDragMouse=false;
		}
		if(this._isMapZoom){
			this._isMapZoom=false;
		}
	}

	__proto.onWheelHandler=function(evt){
		if(NewGuideMgr.ins.isFirstNewGuideBattle){
			return;
		}
		if(!CameraManager.instance.isMoving){
			var value=evt.delta > 0 ? 0.05 :-0.05;
			if((this.scaleValue >=this.MaxScale && value > 0)|| (this.scaleValue <=this.MinScale && value < 0)){
				console.log("已达到缩放边界值");
			}
			else{
				this.scaleValue+=value;
				this.updateScale();
			}
			this.checkEdgePos();
		}
	}

	__proto.checkMapMinScale=function(){
		if(this._map){
			var ws=ResizeMgr.bestFitWidth/this._map.adaptScaleWidth;
			var hs=ResizeMgr.bestFitHeight/this._map.adaptScaleHeight;
			this.MinScale=Math.max(ws,hs);
			this.updateScale();
		}
	}

	__proto.updateScale=function(){
		if(this.scaleValue >=0){
			if(this.scaleValue < this.MinScale){
				this.scaleValue=this.MinScale;
			}
			else if(this.scaleValue > this.MaxScale){
				this.scaleValue=this.MaxScale;
			}
		}
		else{
			if(this.scaleValue >-this.MinScale){
				this.scaleValue=-this.MinScale;
			}
			else if(this.scaleValue <-this.MaxScale){
				this.scaleValue=-this.MaxScale;
			}
		}
		if(this.scaleValue >=this.MaxScale)return;
		this._map.scale(this.scaleValue,this.scaleValue);
		EventMgr.ins.event("changescale",this.scaleValue);
	}

	__proto.checkEdgePos=function(){
		if(this._map){
			var halfW=Math.round((this._map.adaptEdgeWidth*this.scaleValue)>>1);
			var halfH=Math.round((this._map.adaptEdgeHeight*this.scaleValue)>>1);
			var rx=Math.round(ResizeMgr.bestFitWidth-halfW);
			var ry=Math.round(ResizeMgr.bestFitHeight-halfH);
			if(this._map.x > halfW){
				this._map.x=halfW;
			}
			else if(this._map.x < rx){
				this._map.x=rx;
			}
			if(this._map.y > halfH){
				this._map.y=halfH;
			}
			else if(this._map.y < ry){
				this._map.y=ry;
			}
			console.log("checkEdgePos:",halfW,halfH,rx,ry);
		}
	}

	/**
	*计算两个触摸点之间的距离
	*/
	__proto.getDistance=function(points){
		var distance=0;
		if(points && points.length==2){
			var localPoint1=this.globalToLocal(new Point(points[0].stageX,points[0].stageY));
			var localPoint2=this.globalToLocal(new Point(points[1].stageX,points[1].stageY));
			var dx=localPoint1.x-localPoint2.x;
			var dy=localPoint1.y-localPoint2.y;
			distance=Math.sqrt(dx *dx+dy *dy);
		}
		return distance;
	}

	/**
	*设置地图的缩放值
	*/
	__proto.setMapScale=function($scaleX,$scaleY,$duration,$easeName,complete){
		var _$this=this;
		($duration===void 0)&& ($duration=500);
		($easeName===void 0)&& ($easeName="");
		if(this._map){
			var ease=Ease[$easeName];
			this._scaleTween=Tween.to(this._map,{scaleX:$scaleX,scaleY:$scaleY},$duration,ease,Handler.create(this,function(){
				_$this._scaleTween=null;
				if(complete)complete.run();
			}));
			EventMgr.ins.event("changescale",$scaleX);
		}
	}

	__proto.removeDragEvent=function(){
		if(this._map){
			Laya.timer.clear(this._map,this.updateScale);
			this._map.off("mousedown",this,this.onDragMouseDown);
			Laya.stage.off("mousemove",this,this.onDragMouseMove);
			Laya.stage.off("mouseup",this,this.onDragMouseUp);
			Laya.stage.off("mouseout",this,this.onDragMouseUp);
			Laya.stage.off("mousewheel",this,this.onWheelHandler);
			this._map=null;
		}
		if(this._scaleTween){
			Tween.clear(this._scaleTween);
			this._scaleTween=null;
		}
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.checkMapMinScale();
		this.checkEdgePos();
	}

	__getset(1,MapDragTouchManager,'instance',function(){
		if(MapDragTouchManager._instance==null){
			MapDragTouchManager._instance=new MapDragTouchManager();
			ResizeMgr.addListener(MapDragTouchManager._instance,true);
		}
		return MapDragTouchManager._instance;
	},laya.display.Sprite._$SET_instance);

	MapDragTouchManager._instance=null;
	return MapDragTouchManager;
})(Sprite)


/**
*小loading管理器
*@author weiqiang.huang
*
*/
//class manager.SmallLoadingManager extends laya.display.Sprite
var SmallLoadingManager=(function(_super){
	function SmallLoadingManager(){
		this._smallLoading=null;
		this.count=0;
		this.isLoop=false;
		SmallLoadingManager.__super.call(this);
	}

	__class(SmallLoadingManager,'manager.SmallLoadingManager',_super);
	var __proto=SmallLoadingManager.prototype;
	__proto.showSmallLoading=function(viewType){
		if(this._smallLoading){
			this.removeSmallLoading();
		}
		this._smallLoading=new SmallLoading(viewType);
	}

	__proto.removeSmallLoading=function(){
		Laya.timer.clear(this,this.onWebNetwork);
		ConnectMgr.ins.cleanWait();
		this.count=0;
		this.isLoop=false;
		if(this._smallLoading){
			this._smallLoading.destroy(true);
			this._smallLoading=null;
		}
	}

	__proto.setProgress=function(value){
		if(this._smallLoading){
			this._smallLoading.setProgress(value);
		}
		if(!this.isLoop){
			this.isLoop=true;
			Laya.timer.loop(1000,this,this.onWebNetwork);
		}
	}

	__proto.onWebNetwork=function(){
		this.count++;
		if(this.count >=15){
			this.count=0;
			Laya.timer.clear(this,this.onWebNetwork);
			ConnectMgr.ins.createWait();
		}
	}

	__getset(1,SmallLoadingManager,'instance',function(){
		if(SmallLoadingManager._instance==null)
			SmallLoadingManager._instance=new SmallLoadingManager();
		return SmallLoadingManager._instance;
	},laya.display.Sprite._$SET_instance);

	SmallLoadingManager._instance=null;
	return SmallLoadingManager;
})(Sprite)


//class modules.battle.effect.AddHpEffect extends laya.display.Sprite
var AddHpEffect=(function(_super){
	function AddHpEffect(addHp){
		this.damageui=null;
		this.isDestroy=false;
		AddHpEffect.__super.call(this);
		var fontClip=new FontClip("battle/shuzi/ui_jinengxsz.png","0123456789");
		fontClip.value=addHp+"";
		this.addChild(fontClip);
		this.damageui=new DamageUI();
		this.damageui.target=fontClip;
		this.damageui.play(0,false);
		this.damageui.once("complete",this,this.onCallBack);
	}

	__class(AddHpEffect,'modules.battle.effect.AddHpEffect',_super);
	var __proto=AddHpEffect.prototype;
	__proto.onCallBack=function(){
		this.destroyAddHP();
	}

	__proto.destroyAddHP=function(){
		if(!this.isDestroy){
			this.isDestroy=true;
			if(this.damageui){
				this.damageui.destroy(true);
			}
			Tween.clearAll(this);
			this.removeSelf();
			this.destroy(true);
		}
	}

	return AddHpEffect;
})(Sprite)


//class modules.battle.effect.AutoBomb extends laya.display.Sprite
var AutoBomb=(function(_super){
	function AutoBomb(){
		this.bomb=null;
		AutoBomb.__super.call(this);
		this.bomb=new AniSkeleton("assets/animation/npc/npc2.sk",null,"idle",true,Handler.create(this,this.playEnd,null,false));
		this.addChild(this.bomb);
	}

	__class(AutoBomb,'modules.battle.effect.AutoBomb',_super);
	var __proto=AutoBomb.prototype;
	__proto.playNpcAni=function(aniName,loop){
		this.bomb.play(aniName,loop);
	}

	__proto.showBirth=function(){
		this.playNpcAni("born",false);
	}

	__proto.showChange=function(){
		this.playNpcAni("change",false);
	}

	__proto.showChangeBorn=function(){
		this.playNpcAni("changeborn",false);
	}

	__proto.showDie=function(){
		this.playNpcAni("die",false);
	}

	__proto.showNormal=function(){
		this.playNpcAni("idle",true);
	}

	__proto.playEnd=function(){
		if(this.bomb.nameOrIndex=="die" || this.bomb.nameOrIndex=="change"){
			this.destroyAutoBomb();
			}else if(this.bomb.nameOrIndex=="born" || this.bomb.nameOrIndex=="changeborn"){
			this.playNpcAni("idle",true);
		}
	}

	__proto.destroyAutoBomb=function(){
		if(this.bomb){
			this.bomb.removeSelf();
			this.bomb.destroy(true);
			this.bomb=null;
		}
		this.removeSelf();
		this.destroy(true);
	}

	return AutoBomb;
})(Sprite)


//class modules.battle.effect.BattleEndEffect extends laya.display.Sprite
var BattleEndEffect=(function(_super){
	function BattleEndEffect(posx,posy,callback){
		this.image=null;
		this.callback=null;
		this.isDestroy=false;
		BattleEndEffect.__super.call(this);
		this.image=new Image(LanguageMgr.Ins.getBattleLanguagePath("ui_zhandoujieshu.png"));
		this.image.anchorX=0.5;
		this.image.anchorY=0.5;
		this.addChild(this.image);
		this.callback=callback
		this.isDestroy=false;
		this.x=posx;
		this.y=posy;
		this.alpha=1;
		this.scale(1.5,1.5,true);
		Tween.to(this,{},2000,null,Handler.create(this,this.step));
	}

	__class(BattleEndEffect,'modules.battle.effect.BattleEndEffect',_super);
	var __proto=BattleEndEffect.prototype;
	__proto.step=function(){
		Tween.clearAll(this);
		if(this.callback)
			this.callback.run();
		if(!this.isDestroy){
			this.scale(1,1,true);
			this.removeSelf();
			this.destroy(true);
			this.isDestroy=true;
		}
	}

	return BattleEndEffect;
})(Sprite)


//class modules.battle.effect.Boomerang extends laya.display.Sprite
var Boomerang=(function(_super){
	function Boomerang(parent,wx,wy){
		this.animation=null;
		Boomerang.__super.call(this);
		this.animation=UIFactory.ins.createGAnimation("blast30","blastframe",this,true);
		this.x=wx;
		this.y=wy;
		this.zOrder=99999999999;
		parent.addChild(this);
		Laya.timer.once(3000,this,this.over);
	}

	__class(Boomerang,'modules.battle.effect.Boomerang',_super);
	var __proto=Boomerang.prototype;
	__proto.over=function(){
		Laya.timer.clear(this,this.over);
		this.removeSelf();
		this.destroy(true);
	}

	return Boomerang;
})(Sprite)


//class modules.battle.effect.BoomerangHp extends laya.display.Sprite
var BoomerangHp=(function(_super){
	function BoomerangHp(damage,count,fighter,isCrital,isGray){
		this.cutHpindex=0;
		this.fighter=null;
		BoomerangHp.__super.call(this);
		this.fighter=fighter;
		fighter.addChild(this);
		this.cutHpindex=0;
		var perHp=Math.floor(damage/count);
		Laya.timer.once(0,this,this.costHp,[perHp,isCrital,isGray]);
	}

	__class(BoomerangHp,'modules.battle.effect.BoomerangHp',_super);
	var __proto=BoomerangHp.prototype;
	__proto.costHp=function(damage,isCrital,isGray){
		++this.cutHpindex;
		this.fighter.costHp(damage,isCrital,isGray);
		if(this.cutHpindex >=3){
			this.removeSelf();
			this.destroy(true);
			}else{
			Laya.timer.once(1000,this,this.costHp,[damage,isCrital,isGray]);
		}
	}

	__proto.destroy=function(isDestroy){
		(isDestroy===void 0)&& (isDestroy=true);
		Laya.timer.clear(this,this.costHp);
		_super.prototype.destroy.call(this,true);
	}

	return BoomerangHp;
})(Sprite)


//class modules.battle.effect.CountDownEffect extends laya.display.Sprite
var CountDownEffect=(function(_super){
	function CountDownEffect(posx,posy,turnId,handler){
		this.image=null;
		this.label=null;
		this.handler=null;
		this.posy=null;
		this.posx=null;
		this.isDestroy=false;
		CountDownEffect.__super.call(this);
		this.handler=handler;
		this.image=new Image(LanguageMgr.Ins.getBattleLanguagePath("ui_1huhejieshu.png"));
		this.image.anchorX=0.5;
		this.image.anchorY=0.5;
		this.image.x=posx+600;
		this.image.y=posy/4;
		this.image.alpha=0;
		this.addChild(this.image);
		var text=String(turnId);
		this.label=new Label(text);
		this.label.fontSize=55;
		this.label.color="#fffebe";
		this.label.stroke=2;
		this.label.strokeColor="#d24a00";
		this.label.x=140;
		this.label.y=0;
		this.image.addChild(this.label);
		Tween.to(this.image,{x:posx/2,y:posy/4,alpha:1},300,null,Handler.create(this,this.step1));
	}

	__class(CountDownEffect,'modules.battle.effect.CountDownEffect',_super);
	var __proto=CountDownEffect.prototype;
	__proto.step1=function(){
		Tween.to(this.image,{},2000,null,Handler.create(this,this.step2));
	}

	__proto.step2=function(){
		Tween.to(this.image,{x:-600,alpha:0},300,null,Handler.create(this,this.showComplete));
	}

	__proto.showComplete=function(){
		if (!this.isDestroy){
			Tween.clearAll(this);
			if (this.handler){
				this.handler.run();
			}
			this.handler=null;
			this.removeSelf();
			this.destroy(true);
			this.isDestroy=true;
		}
	}

	return CountDownEffect;
})(Sprite)


//class modules.battle.effect.CrownAni extends laya.display.Sprite
var CrownAni=(function(_super){
	function CrownAni(){
		this.image=null;
		this.aniSk=null;
		CrownAni.__super.call(this);
		this.aniSk=new AniSkeleton('FightLight',"ui");
		this.aniSk.play(0,true);
		this.aniSk.blendMode="add";
		this.addChild(this.aniSk);
	}

	__class(CrownAni,'modules.battle.effect.CrownAni',_super);
	var __proto=CrownAni.prototype;
	__proto.playAni=function(){
		Tween.from(this.image,{y:-20},30/30*1000,null,Handler.create(this,this.playEnd));
	}

	__proto.playEnd=function(){
		Tween.from(this.image,{y:20},30/30*1000,null,Handler.create(this,this.playAni));
	}

	return CrownAni;
})(Sprite)


//class modules.battle.effect.DicEffect extends laya.display.Sprite
var DicEffect=(function(_super){
	function DicEffect(){
		this.dic=null;
		DicEffect.__super.call(this);
		this.dic=new AniSkeleton("assets/animation/npc/npc3.sk",null,"born",false,Handler.create(this,this.playEnd,null,false));
		this.addChild(this.dic);
	}

	__class(DicEffect,'modules.battle.effect.DicEffect',_super);
	var __proto=DicEffect.prototype;
	__proto.playEnd=function(){
		if(this.dic.nameOrIndex=="born"){
			SoundMgr.instance.playSound(4003013);
			this.dic.play("walk",true);
		}
	}

	__proto.showBomb=function(){
		this.dic.play("idle4",false);
	}

	__proto.stop=function(){
		var num=Math.floor(Math.random()*10)%6;
		if(num <=0 || num==4){
			num=6;
		}
		this.dic.play("idle"+num,false);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.dic.removeSelf();
		this.dic.destroy(true);
		_super.prototype.destroy.call(this,destroyChild);
	}

	return DicEffect;
})(Sprite)


//class modules.battle.effect.FrameEffect extends laya.display.Sprite
var FrameEffect=(function(_super){
	function FrameEffect(_handler){
		this.handler=null;
		this.frameNum=0;
		this.frameEnd=99;
		FrameEffect.__super.call(this);
		this.handler=_handler;
		Laya.timer.frameLoop(1,this,this.onUpdate);
	}

	__class(FrameEffect,'modules.battle.effect.FrameEffect',_super);
	var __proto=FrameEffect.prototype;
	__proto.onUpdate=function(){
		if(this.frameNum==1){
			this.initView();
		}
		if(this.frameNum==this.frameEnd){
			this.destroy(true);
		}
		this.frameNum++;
	}

	__proto.setFrameEnd=function(num){
		this.frameEnd=num;
	}

	__proto.initView=function(){}
	__proto.getLabel=function(data){
		var label=new Label(data.str);
		label.fontSize=data.fontSize;
		label.bold=data.isBlod;
		label.color=data.color;
		label.stroke=data.stroke;
		label.strokeColor=data.strokeColor;
		return label;
	}

	__proto.getImage=function(data){
		var img=new Image();
		img.skin=data.resPath;
		img.anchorX=data.anchorX;
		img.anchorY=data.anchorY;
		img.x=data.x;
		img.y=data.y;
		return img;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.handler){
			this.handler.run();
			this.handler=null;
		}
		Laya.timer.clear(this,this.onUpdate);
		this.removeSelf();
		_super.prototype.destroy.call(this,destroyChild);
	}

	return FrameEffect;
})(Sprite)


//class modules.battle.effect.HPDamage extends laya.display.Sprite
var HPDamage=(function(_super){
	function HPDamage(damage,isCrital,isGray){
		this.isDestroy=false;
		this.isCrital=0;
		this.damage=0;
		this.damageui=null;
		HPDamage.__super.call(this);
		this.damage=damage;
		this.isCrital=isCrital;
		if(isCrital==1){
			this.showCrital(damage,isGray);
			}else{
			this.showDamage(damage,isGray);
		}
	}

	__class(HPDamage,'modules.battle.effect.HPDamage',_super);
	var __proto=HPDamage.prototype;
	__proto.showCrital=function(damage,isGray){
		var len=(""+damage).length;
		if(len < 2)len=2;
		var bg=new Image("battle/menu/"+"ui_critical_strike_bg"+len+".png");
		bg.anchorX=0.5;
		bg.anchorY=0.5;
		this.addChild(bg);
		if(isGray==1){
			var fontClip=new FontClip("battle/shuzi/ui_huiseshuzi.png","0123456789");
			fontClip.value=damage+"";
			fontClip.anchorX=0.5;
			fontClip.anchorY=0.5;
			this.addChild(fontClip);
			}else{
			var fontClip=new FontClip("battle/shuzi/ui_zd_num.png","0123456789");
			fontClip.value=damage+"";
			fontClip.anchorX=0.5;
			fontClip.anchorY=0.5;
			this.addChild(fontClip);
		}
		this.scale(0.1,0.1);
		this.alpha=0;
		Tween.to(this,{alpha:1,scaleX:1.0,scaleY:1.0,y:-220},3/30 *1000,null,Handler.create(this,this.step1));
	}

	__proto.step1=function(){
		Tween.to(this,{},30/30 *1000,null,Handler.create(this,this.step2));
	}

	__proto.step2=function(){
		Tween.to(this,{y:-200,alpha:0},3/30 *1000,null,Handler.create(this,this.destroyHPDamage));
	}

	__proto.showDamage=function(damage,isGray){
		var fontClip=null;
		if(isGray==1){
			fontClip=new FontClip("battle/shuzi/ui_huiseshuzi.png","0123456789");
			fontClip.value=damage+"";
			this.addChild(fontClip);
			}else{
			fontClip=new FontClip("battle/shuzi/ui_zd_num.png","0123456789");
			fontClip.value=damage+"";
			this.addChild(fontClip);
		}
		this.damageui=new DamageUI();
		this.damageui.target=fontClip;
		this.damageui.play(0,false);
		this.damageui.once("complete",this,this.destroyHPDamage);
	}

	__proto.destroyHPDamage=function(){
		Tween.clearAll(this);
		if(!this.isDestroy){
			this.isDestroy=true;
			if(this.damageui){
				this.damageui.removeSelf();
				this.damageui.destroy(true);
			}
			this.removeSelf();
			this.destroy(true);
		}
	}

	return HPDamage;
})(Sprite)


//class modules.battle.effect.OrderShowEffect extends laya.display.Sprite
var OrderShowEffect=(function(_super){
	function OrderShowEffect(posX,posY,turnMsg){
		this.datas={};
		this.heads={};
		this.turnMsg=null;
		this.aniArr=[];
		OrderShowEffect.__super.call(this);
		this.turnMsg=turnMsg
		this.initConfigData(posX,posY);
	}

	__class(OrderShowEffect,'modules.battle.effect.OrderShowEffect',_super);
	var __proto=OrderShowEffect.prototype;
	__proto.initConfigData=function(posX,posY){
		for(var i=1;i<=6;i++){
			var head=new CommonHeadUI();
			this.addChild(head);
			var data={};
			data.scale=0.7;
			data.zOrder=i;
			data.anchor=0.5;
			data.posX=posX+50 *(i-1)+head.width/2;
			data.lastPosX=posX;
			data.visible=true;
			data.posY=posY;
			if(i > 2 && i <=4){
				head.mpTextFight.text=LanguageMgr.Ins.GetLan("9070103");
				data.scale=0.8;
				data.posX=posX+55 *(i-1)+head.width/2;
			}
			else if (i > 4){
				head.mpTextFight.text=LanguageMgr.Ins.GetLan("9070104");
				data.scale=0.95;
				data.posX=posX+58 *(i-1)+head.width/2;
				}else{
				head.mpTextFight.text="";
				data.visible=false;
			}
			this.datas[i]=data;
			this.heads[i]={index:i,head:head};
		}
		for(var i=1;i<=6;i++){
			var data=this.datas[i];
			var tempIndex=i+4;
			if (tempIndex > 6){
				tempIndex=tempIndex-6;
			}
			data.lastPosX=this.datas[tempIndex].posX;
		}
	}

	__proto.initData=function(){
		for(var j=0;j < this.aniArr.length;j++){
			var tmep=this.aniArr[j];
			tmep.removeSelf();
			tmep.destroy(true);
		}
		this.aniArr.length=0;
		for(var i=1;i<=6;i++){
			var objData=this.heads[i];
			var data=this.datas[i];
			var role;
			var livingMsg;
			if (i>=5){
				if(this.turnMsg.livingList.length > 0){
					livingMsg=this.turnMsg.livingList[i-5];
					var ani=new AniSkeleton("ui_touxiangfaguang","ui",0,true)
					ani.x=objData.head.width / 2;
					ani.y=objData.head.height / 2;
					this.aniArr.push(ani);
					objData.head.addChild(ani)
				}
				}else{
				if(this.turnMsg.nextLivings){
					livingMsg=this.turnMsg.nextLivings[4-i];
				}
			}
			objData.head.visible=data.visible;
			objData.head.headIcon.skin="";
			if (livingMsg){
				var battleScene=SceneMgr.ins.curScene;
				role=battleScene.getRole(livingMsg.livingID);
				objData.head.mpTextName.text=StringUtils.subName(role.nickName,60,18);
				if(role.type==Fighter.HERO){
					objData.head.mpTextName.color="#45b0ec";
					}else{
					objData.head.mpTextName.color="#f15855";
				}
				this.setHeadUrl(role,objData);
				}else{
				objData.head.visible=false;
			}
			objData.head.anchorX=data.anchor;
			objData.head.anchorY=data.anchor;
			objData.head.zOrder=data.zOrder;
			(objData.head).headBg.scale(data.scale,data.scale)
			objData.head.x=data.lastPosX;
			objData.head.y=data.posY;
			Tween.to(objData.head,{x:data.posX},500);
		}
	}

	__proto.setHeadUrl=function(role,objData){
		if (!role){
			return
		}
		if(!role.headurl){
			role.headurl="3";
		}
		if(role.headurl.indexOf("http")==-1 && role.headurl !=""){
			var avatar="assets/textrue/aihead/"+role.headurl+".png";
			objData.head.headIcon.skin=avatar;
			return;
		}
		if(role.headurl.length > 0){
			PlayerInfoMgr.ins.getHeadImgUrl(role.headurl,Handler.create(this,function(url){
				objData.head.headIcon.skin=url;
			}));
		}
	}

	__proto.swapData=function(){
		for(var i=1;i<=6;i++){
			var objData=this.heads[i];
			var data=this.datas[i];
			var temp={};
			if (objData){
				objData.index=objData.index+4;
				if (objData.index > 6){
					objData.index=objData.index-6;
				}
			}
		};
		var livingMsg1=this.turnMsg.livingList[0];
		var livingMsg2=this.turnMsg.livingList[1];
		if (livingMsg1 && livingMsg2){
			var battleScene=SceneMgr.ins.curScene;
			if (int(livingMsg1.livingID)==int(battleScene.hero.livingId)){
				this.turnMsg.livingList=[];
				this.turnMsg.livingList.push(livingMsg2);
				this.turnMsg.livingList.push(livingMsg1);
			}
		}
	}

	__proto.updateData=function(turnMsg){
		this.turnMsg=turnMsg;
		this.swapData();
		this.initData();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.aniArr.length=0;
		var objData;
		for(var $each_objData in this.heads){
			objData=this.heads[$each_objData];
			objData.head.removeSelf();
			objData.head.destroy(true);
		}
		this.heads=null;
		_super.prototype.destroy.call(this,true);
	}

	__proto.destroyAll=function(){
		if(!this.destroyed){
			this.removeSelf();
			this.destroy(true);
		}
	}

	return OrderShowEffect;
})(Sprite)


//class modules.battle.effect.PerfectHitEffect extends laya.display.Sprite
var PerfectHitEffect=(function(_super){
	function PerfectHitEffect(){
		this.ani=null;
		this.img=null;
		PerfectHitEffect.__super.call(this);
		this.img=new Image(LanguageMgr.Ins.getBattleLanguagePath("ui_jingzhun02.png"));
		this.img.x=-50;
		this.img.y=-300;
		this.addChild(this.img);
		Tween.to(this.img,{alpha:1},500,null,Handler.create(this,this.playEnd));
	}

	__class(PerfectHitEffect,'modules.battle.effect.PerfectHitEffect',_super);
	var __proto=PerfectHitEffect.prototype;
	__proto.playEnd=function(){
		Tween.clearAll(this);
		this.removeSelf();
		this.destroy(true);
	}

	return PerfectHitEffect;
})(Sprite)


//class modules.battle.effect.RedBoxEffect extends laya.display.Sprite
var RedBoxEffect=(function(_super){
	function RedBoxEffect(){
		this.redBg=null;
		this.isShow=false;
		RedBoxEffect.__super.call(this);
		this.redBg=new Image("assets/textrue/common/ui_zdn_sidouhong.png")
		this.redBg.width=ResizeMgr.bestFitWidth;
		this.redBg.height=ResizeMgr.bestFitHeight;
		this.addChild(this.redBg);
		Laya.timer.frameLoop(15,this,this.changeAlpha);
		ResizeMgr.addListener(this);
	}

	__class(RedBoxEffect,'modules.battle.effect.RedBoxEffect',_super);
	var __proto=RedBoxEffect.prototype;
	Laya.imps(__proto,{"laya.ui.IResize":true})
	__proto.changeAlpha=function(){
		this.isShow=!this.isShow;
		if (this.isShow){
			Tween.to(this,{alpha:0},500);
		}
		else{
			Tween.to(this,{alpha:1},500);
		}
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		if(this.redBg){
			this.redBg.width=ResizeMgr.bestFitWidth;
			this.redBg.height=ResizeMgr.bestFitHeight;
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		Laya.timer.clear(this,this.changeAlpha);
		Tween.clearAll(this);
		ResizeMgr.removeListener(this);
		_super.prototype.destroy.call(this,destroyChild);
	}

	return RedBoxEffect;
})(Sprite)


//class modules.battle.effect.ShowBBEffect extends laya.display.Sprite
var ShowBBEffect=(function(_super){
	function ShowBBEffect(posX,posY,nickName,descStr,isHero){
		this.image=null;
		ShowBBEffect.__super.call(this);
		this.image=new Image("battle/menu/ui_tishidi.png");
		this.image.anchorX=0.5;
		this.image.anchorY=0.5;
		this.image.x=posX;
		this.image.y=posY;
		this.addChild(this.image);
		var nameLabel=new Label(nickName);
		nameLabel.fontSize=25;
		if (isHero){
			nameLabel.color="#45b0ec";
			}else{
			nameLabel.color="#f15855";
		}
		nameLabel.stroke=2;
		nameLabel.strokeColor="#000000";
		this.image.addChild(nameLabel);
		descStr=StringUtils.formate(descStr,"");
		var descLabel=new Label(descStr);
		descLabel.fontSize=22;
		descLabel.color="#ffde00";
		descLabel.stroke=2;
		descLabel.strokeColor="#723c02";
		descLabel.x=nameLabel.width;
		nameLabel.addChild(descLabel);
		var offsetX=(this.image.width-nameLabel.width-descLabel.width)
		nameLabel.x=offsetX / 2;
		nameLabel.y=this.image.height / 2;
		Laya.timer.once(3000,this,this.destroy,[true])
	}

	__class(ShowBBEffect,'modules.battle.effect.ShowBBEffect',_super);
	var __proto=ShowBBEffect.prototype;
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeSelf();
		_super.prototype.destroy.call(this,destroyChild);
	}

	return ShowBBEffect;
})(Sprite)


//class modules.battle.effect.SiDouEffect extends laya.display.Sprite
var SiDouEffect=(function(_super){
	function SiDouEffect(posx,posy,handler,imagePath){
		this.image=null;
		this.handler=null;
		this.isDestroy=false;
		this.posy=null;
		this.posx=null;
		SiDouEffect.__super.call(this);
		this.handler=handler;
		this.image=new Image(imagePath);
		this.image.anchorX=0.5;
		this.image.anchorY=0.5;
		this.addChild(this.image);
		this.x=posx;
		this.y=posy;
		this.posx=posx;
		this.posy=posy;
		this.alpha=0;
		this.isDestroy=false;
		this.scale(1.5,1.5,true);
		Tween.to(this,{x:posx,y:posy,alpha:1},100,null,Handler.create(this,this.step1));
	}

	__class(SiDouEffect,'modules.battle.effect.SiDouEffect',_super);
	var __proto=SiDouEffect.prototype;
	__proto.step1=function(){
		Tween.to(this,{},5*30/1000,null,Handler.create(this,this.step2));
	}

	__proto.step2=function(){
		this.scale(1,1,true);
		Tween.to(this,{x:this.posx,y:this.posy,alpha:1},2000,null,Handler.create(this,this.step3));
	}

	__proto.step3=function(){
		if(this.handler){
			this.handler.run();
			this.handler=null;
		}
		this.destroy(this);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		Tween.clearAll(this);
		this.removeSelf();
		_super.prototype.destroy.call(this,destroyChild);
		this.handler=null;
		this.isDestroy=true;
	}

	return SiDouEffect;
})(Sprite)


//class modules.battle.effect.SkillGroupEffect extends laya.display.Sprite
var SkillGroupEffect=(function(_super){
	function SkillGroupEffect(sourceId,performId,handler){
		this.mpArrIcon=[];
		this.mpArrSkill=[];
		this.mpImgDesc=null;
		this.mpEffect=null;
		this.isDestroy=false;
		this.hasInit=false;
		this.mpIntHeight=0;
		this.mpIntWidth=0;
		this.callback=null;
		this.curData=null;
		this.sourceId=0;
		SkillGroupEffect.__super.call(this);
		this.sourceId=sourceId;
		this.mpIntWidth=ResizeMgr.bestFitWidth;
		this.mpIntHeight=ResizeMgr.bestFitHeight;
		this.callback=handler;
		this.initConfigData(performId);
		this.initIcon();
	}

	__class(SkillGroupEffect,'modules.battle.effect.SkillGroupEffect',_super);
	var __proto=SkillGroupEffect.prototype;
	__proto.initConfigData=function(performId){
		this.curData=SkillModel.getSkillGroupPerformanceByGroupId(performId);
		if (this.curData){
			this.mpArrSkill=String(this.curData.SkillID).split(",");
			}else{
			console.error("can not find performId...",performId);
		}
	}

	__proto.initIcon=function(){
		var iconNum=this.mpArrSkill.length;
		var isEven=iconNum % 2==1?0:1
		for(var i=0;i < iconNum;i++){
			var skillId=int(this.mpArrSkill[i]);
			var mpImgCard=this.getCardView(skillId,i,iconNum,isEven)
			this.mpArrIcon.push(mpImgCard)
		}
		for (var i=0;i < this.mpArrIcon.length;i++){
			var icon=this.mpArrIcon[i];
			var tempPosX=icon.x;
			var tempPosY=icon.y;
			icon.x=this.mpIntWidth/2;
			icon.y=7*this.mpIntHeight/8;
			Tween.to(icon,{x:tempPosX,y:tempPosY,alpha:1},200,null,Handler.create(this,this.initView));
		}
	}

	__proto.getCardView=function(skillId,index,iconNum,isEven){
		var skillData=SkillModel.getSkillConfigData(skillId);
		var performData=SkillModel.getSkillPerformanceBySkillId(skillData.Display);
		var icon=new Image(StringUtils.formate("assets/textrue/itemicon/{0}",performData.Icon));
		icon.width=108
		icon.height=131
		icon.anchorX=0.5
		icon.anchorY=0.5
		icon.alpha=0;
		icon.x=this.mpIntWidth/2+(index-Math.floor(iconNum / 2))*(icon.width+20)+isEven *icon.width/2;
		icon.y=this.mpIntHeight/2+icon.height/2+20;
		this.addChild(icon)
		var bg=new Image("assets/textrue/common/skillFrame/ui_card_"+skillData.Quality+".png");
		bg.sizeGrid="19,17,23,21";
		bg.width=icon.width+6;
		bg.height=icon.height+4;
		bg.anchorX=0.5
		bg.anchorY=1
		bg.zOrder=-1;
		bg.x=icon.width/2;
		bg.y=icon.height;
		icon.addChild(bg)
		var mpBgName=new Image("assets/textrue/common/skillFrame/ui_bg_"+skillData.Quality+".png");
		mpBgName.anchorX=0.5;
		mpBgName.anchorY=1;
		mpBgName.sizeGrid="7,11,11,12";
		mpBgName.x=icon.width/2;
		mpBgName.y=icon.height;
		mpBgName.width=icon.width;
		if(skillData.Quality >=3){
			mpBgName.height=34;
			}else{
			mpBgName.height=25;
		}
		icon.addChild(mpBgName);
		var mpTextName=new Label(LanguageMgr.Ins.GetLan(performData.NameDisplay+""));
		mpTextName.anchorX=0.5;
		mpTextName.anchorY=0.5;
		mpTextName.y=mpBgName.height / 2;
		mpTextName.x=mpBgName.width / 2;
		mpTextName.fontSize=16;
		mpTextName.stroke=2;
		switch(skillData.Quality){
			case 0:
				mpTextName.color="#ffffff";
				mpTextName.strokeColor="#494848";
				break ;
			case 1:
				mpTextName.color="#fffc58";
				mpTextName.strokeColor="#954d00";
				break ;
			case 2:
				mpTextName.color="#feb5ff";
				mpTextName.strokeColor="#760070";
				break ;
			case 3:
				mpTextName.color="#ffbbbb";
				mpTextName.strokeColor="#9a0000";
				break ;
			}
		mpBgName.addChild(mpTextName);
		return icon;
	}

	__proto.initView=function(){
		if(this.hasInit){
			return
		}
		this.hasInit=true;
		this.mpEffect=new AniSkeleton("skill_group","ui",0,false,Handler.create(this,this.playEnd),null,true);
		this.mpEffect.x=this.mpIntWidth/2;
		this.mpEffect.y=this.mpIntHeight/2-90;
		this.addChild(this.mpEffect);
		this.mpImgDesc=new Image("battle/menu/ui_texiaodi.png");
		this.mpImgDesc.sizeGrid="19,92,14,104";
		this.mpImgDesc.anchorX=0.5;
		this.mpImgDesc.anchorY=0.5;
		this.mpImgDesc.y=this.mpIntHeight/2-10;
		this.mpImgDesc.width=514;
		this.mpImgDesc.height=50;
		this.addChild(this.mpImgDesc);
		this.mpImgDesc.x=this.mpIntWidth;
		Tween.to(this.mpImgDesc,{x:this.mpIntWidth/2},167,null,Handler.create(this,this.goToMid));
		var nameLabel=this.getLabel({str:LanguageMgr.Ins.GetLan(this.curData.Name+""),fontSize:30,isBlod:true,color:"#feffc3",stroke:2,strokeColor:"#d24a00"});
		this.mpImgDesc.addChild(nameLabel);
		var descLabel=this.getLabel({str:LanguageMgr.Ins.GetLan(this.curData.EffectDescription+""),fontSize:26,isBlod:true,color:"#04ff06",stroke:2,strokeColor:"#126422"});
		descLabel.x=nameLabel.width+10;
		nameLabel.addChild(descLabel);
		var offsetX=(this.mpImgDesc.width-nameLabel.width-descLabel.width)
		nameLabel.x=offsetX / 2;
		nameLabel.y=(this.mpImgDesc.height-nameLabel.height)/ 2;
	}

	__proto.goToMid=function(){
		Tween.to(this.mpImgDesc,{x:this.mpIntWidth/2-100},2300,null,Handler.create(this,this.goToRight));
	}

	__proto.goToRight=function(){
		Tween.to(this.mpImgDesc,{x:0},173,null,Handler.create(this,this.playEnd));
	}

	__proto.getLabel=function(data){
		var label=new Label(data.str);
		label.fontSize=data.fontSize;
		label.bold=data.isBlod;
		label.color=data.color;
		label.stroke=data.stroke;
		label.strokeColor=data.strokeColor;
		return label;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		EventMgr.ins.event(String(0x3AA1),this.sourceId);
		this.removeSelf();
		Tween.clearAll(this);
		if(this.callback){
			this.callback.run();
			this.callback=null;
		}
		_super.prototype.destroy.call(this,destroyChild);
	}

	__proto.playEnd=function(){
		this.destroy(true);
	}

	return SkillGroupEffect;
})(Sprite)


//class modules.battle.effect.TweenEffect extends laya.display.Sprite
var TweenEffect=(function(_super){
	function TweenEffect(posX,posY,imagePath,handler){
		this.image=null;
		this.handler=null;
		this.isDestroy=false;
		TweenEffect.__super.call(this);
		this.handler=handler;
		this.init(posX,posY,imagePath);
	}

	__class(TweenEffect,'modules.battle.effect.TweenEffect',_super);
	var __proto=TweenEffect.prototype;
	__proto.init=function(posX,posY,imagePath){
		this.image=new Image(imagePath);
		this.image.anchorX=0.5;
		this.image.anchorY=0.5;
		this.image.x=posX+600;
		this.image.y=posY;
		this.image.alpha=0;
		this.image.mouseEnabled=false;
		this.addChild(this.image);
		Tween.to(this.image,{x:posX,y:posY,alpha:1},300,null,Handler.create(this,this.step1,[this.image]));
	}

	__proto.step1=function(image){
		Tween.to(image,{},2000,null,Handler.create(this,this.step2,[image]));
	}

	__proto.step2=function(image){
		Tween.to(image,{x:-600,alpha:0},300,null,Handler.create(this,this.showComplete));
	}

	__proto.showComplete=function(){
		Tween.clearAll(this);
		if (this.handler){
			this.handler.run();
			this.handler=null;
		}
		if (!this.isDestroy){
			this.removeSelf();
			this.destroy(true);
			this.isDestroy=true;
		}
	}

	return TweenEffect;
})(Sprite)


//class modules.vip.view.BarrageView extends laya.display.Sprite
var BarrageView=(function(_super){
	function BarrageView(){
		BarrageView.__super.call(this);
	}

	__class(BarrageView,'modules.vip.view.BarrageView',_super);
	var __proto=BarrageView.prototype;
	__proto.run=function(){
		for(var i=0;i < this.numChildren;i++){
			var barrage=this.getChildAt(i);
			if(barrage){
				barrage.update();
			}
		}
	}

	__proto.createBarrage=function(data){
		var itemView=new BarrageItemView();
		itemView.data=data;
		this.addChild(itemView);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		_super.prototype.destroy.call(this,destroyChild);
	}

	return BarrageView;
})(Sprite)


/**
*物品掉落动画
*@author weiqiang.huang
*
*/
//class utils.DropItem extends laya.display.Sprite
var DropItem=(function(_super){
	function DropItem(callback){
		this.effect=null;
		this.container=null;
		this.url=null;
		this.item=null;
		this.targetPos=null;
		this._callBack=null;
		DropItem.__super.call(this);
		this._callBack=callback;
	}

	__class(DropItem,'utils.DropItem',_super);
	var __proto=DropItem.prototype;
	__proto.setData=function($url,$targetPos){
		Tween.clearAll(this);
		this.url=$url;
		this.targetPos=$targetPos;
		this.container=new Sprite();
		Laya.loader.load(this.url,Handler.create(this,this.onLoaded));
	}

	__proto.onLoaded=function(){
		SoundMgr.instance.playSound(4006032);
		this.item=new Image(this.url);
		this.item.scaleX=this.item.scaleY=0;
		this.item.anchorX=this.item.anchorY=0.5;
		this.item.x=1136 >> 1;
		this.item.y=-266;
		Tween.to(this.item,{scaleX:1,scaleY:1},700,Ease.linearIn,Handler.create(this,this.onTweenComplete));
		this.container.addChild(this.effect);
		this.container.addChild(this.item);
		this.addChild(this.container);
	}

	__proto.onTweenComplete=function(){
		this.container.removeChild(this.effect);
		Tween.to(this.item,{x:this.targetPos.x,y:this.targetPos.y},700,Ease.linearIn,Handler.create(this,this.onRemove));
	}

	__proto.onRemove=function(){
		this.container.removeChild(this.item);
		this.container.removeSelf();
		this.container.destroy(true);
		this.container=null;
		this._callBack && this._callBack.run();
		this._callBack=null;
	}

	/**
	*爆炸效果
	*/
	__proto.explosionEffect=function(){
		this.effect=new MovieClip();
		this.effect.load("assets/animation/swf/output/ItemDrop.swf");
		this.effect.play(0,false);
	}

	return DropItem;
})(Sprite)


//class modules.newguide.levelguide.LevelGuideNode_10 extends modules.newguide.levelguide.BaseLevelGuideNode
var LevelGuideNode_10=(function(_super){
	function LevelGuideNode_10(nodeId){
		LevelGuideNode_10.__super.call(this,nodeId);
		this.steps.push(LevelGuideNode_10_Step_1);
		this.steps.push(LevelGuideNode_10_Step_2);
		this.curStepId=1;
	}

	__class(LevelGuideNode_10,'modules.newguide.levelguide.LevelGuideNode_10',_super);
	return LevelGuideNode_10;
})(BaseLevelGuideNode)


//class modules.newguide.levelguide.LevelGuideNode_15 extends modules.newguide.levelguide.BaseLevelGuideNode
var LevelGuideNode_15=(function(_super){
	function LevelGuideNode_15(nodeId){
		LevelGuideNode_15.__super.call(this,nodeId);
		this.steps.push(LevelGuideNode_15_Step_1);
		this.steps.push(LevelGuideNode_15_Step_2);
		this.curStepId=1;
	}

	__class(LevelGuideNode_15,'modules.newguide.levelguide.LevelGuideNode_15',_super);
	return LevelGuideNode_15;
})(BaseLevelGuideNode)


//class modules.newguide.levelguide.LevelGuideNode_20 extends modules.newguide.levelguide.BaseLevelGuideNode
var LevelGuideNode_20=(function(_super){
	function LevelGuideNode_20(nodeId){
		LevelGuideNode_20.__super.call(this,nodeId);
		this.steps.push(LevelGuideNode_20_Step_1);
		this.steps.push(LevelGuideNode_20_Step_2);
		this.curStepId=1;
	}

	__class(LevelGuideNode_20,'modules.newguide.levelguide.LevelGuideNode_20',_super);
	return LevelGuideNode_20;
})(BaseLevelGuideNode)


//class modules.newguide.levelguide.LevelGuideNode_25 extends modules.newguide.levelguide.BaseLevelGuideNode
var LevelGuideNode_25=(function(_super){
	function LevelGuideNode_25(nodeId){
		LevelGuideNode_25.__super.call(this,nodeId);
		this.steps.push(LevelGuideNode_25_Step_1);
		this.steps.push(LevelGuideNode_25_Step_2);
		this.curStepId=1;
	}

	__class(LevelGuideNode_25,'modules.newguide.levelguide.LevelGuideNode_25',_super);
	return LevelGuideNode_25;
})(BaseLevelGuideNode)


//class modules.newguide.levelguide.LevelGuideNode_6 extends modules.newguide.levelguide.BaseLevelGuideNode
var LevelGuideNode_6=(function(_super){
	function LevelGuideNode_6(nodeId){
		LevelGuideNode_6.__super.call(this,nodeId);
		this.steps.push(LevelGuideNode_6_Step_1);
		this.steps.push(LevelGuideNode_6_Step_2);
		this.curStepId=1;
	}

	__class(LevelGuideNode_6,'modules.newguide.levelguide.LevelGuideNode_6',_super);
	return LevelGuideNode_6;
})(BaseLevelGuideNode)


//class modules.newguide.levelguide.LevelGuideNode_8 extends modules.newguide.levelguide.BaseLevelGuideNode
var LevelGuideNode_8=(function(_super){
	function LevelGuideNode_8(nodeId){
		LevelGuideNode_8.__super.call(this,nodeId);
		this.steps.push(LevelGuideNode_8_Step_1);
		this.curStepId=1;
	}

	__class(LevelGuideNode_8,'modules.newguide.levelguide.LevelGuideNode_8',_super);
	return LevelGuideNode_8;
})(BaseLevelGuideNode)


/**
*游戏业务相关的初始化管理类
*@author chengwen.yi
*
*/
//class MainGame extends laya.ui.Component
var MainGame=(function(_super){
	function MainGame(){
		this.isInitConfig=false;
		this.isResLoaded=false;
		MainGame.__super.call(this);
		if(this.stage){
			this.init();
		}
		else {
			this.on("display",this,this.init);
		}
	}

	__class(MainGame,'MainGame',_super);
	var __proto=MainGame.prototype;
	__proto.init=function(e){
		this.mouseEnabled=true;
		this.mouseThrough=true;
		TipsManager.Instance().init();
		TimeManager.Instance.setup();
		RedDotMgr.ins.setup();
		ResourcesLoaderControls.instance.on("config_complete",this,this.onConfigLoaderComplete);
		ResourcesLoaderControls.instance.loaderConfig();
		ResizeMgr.init();
		RegisterComponent.Instance().setup();
		RegComponents.init();
		var verUrl=URL.formatURL("manifest.data");
		verUrl=verUrl+"?v="+new Date().getTime();
		VersionMgr.init(verUrl,Handler.create(this,this.initVersionComplete));
	}

	__proto.onConfigLoaderComplete=function(e){
		ResourcesLoaderControls.instance.off("config_complete",this,this.onConfigLoaderComplete);
	}

	__proto.initVersionComplete=function(){
		var dataUrl=ConfigFile.HTTP_ROOT_URL+"/template/temp.data";
		dataUrl+=(dataUrl.indexOf("?")==-1 ? "?v=" :"_")+new Date().getTime();
		ConfigMgr.init(dataUrl,Handler.create(this,this.initConfigComplete));
		var res=[
		{url:"assets/atlas/login.atlas",type:"atlas"}];
		Laya.loader.load(res,Handler.create(this,this.onResLoaded));
	}

	__proto.initConfigComplete=function(){
		this.isInitConfig=true;
		if(this.isInitConfig && this.isResLoaded){
			this.showScene();
		}
	}

	__proto.onResLoaded=function(){
		this.isResLoaded=true;
		if(this.isInitConfig && this.isResLoaded){
			this.showScene();
		}
	}

	__proto.showScene=function(){
		MVC.ins;
		VisibilityMgr.ins.init();
		ConnectMgr.ins.init();
		PlayerInfoMgr.ins.setup();
		GmActiveDataMgr.ins.setup();
		RoomMgr.ins.setup();
		SkillMgr.ins.setup();
		ShopMgr.ins.setup();
		ActivityInfoMgr.ins.setup();
		BattleRecordMgr.Ins.setup();
		GuildShopMgr.ins.setup();
		GuildBuffMgr.ins.setup();
		ShareMgr.ins.setup();
		EmailMgr.ins.setup();
		LoginActivityMgr.ins.setup();
		RankingMgr.ins.setup();
		IdipManager.instance.setup();
		QuestMgr.ins.setup();
		FuckUtils.init();
		FriendsMgr.ins.setup();
		LevelBoxMgr.ins.setup();
		TreasureBoxMgr.ins.setup();
		SettingMgr.ins.setup();
		PvpMgr.ins;
		DataMgr.ins.init();
		ShareGiftMgr.ins.setup();
		MysteryShopMgr.ins.setup();
		ADMgr.ins.setup();
		SevenDayTargetMgr.ins.setup();
		HallMgr.ins.setup();
		FBPayMgr.ins.setup();
		LayerMgr.ins.init(this);
		this.setLanguage();
		GuildMgr.ins.setup();
		this.loadWindowRes();
		this.loadWindowRes();
	}

	/**
	*解析通过分享进入所带得参数
	*@param options
	*
	*/
	__proto.initOptionsSync=function(options){
		ShareControl.ins.clearShare();
		if (options&&options.query){
			ShareControl.ins.resolveQuery(options.query);
			if (SceneMgr.ins.hasSyncScene){
				LoginControl.instance.inviteCheck();
			}
		}
	}

	__proto.loadWindowRes=function(){
		Laya.timer.clear(this,this.loadWindowRes);
		var res=[
		{url:"assets/atlas/comm.atlas",type:"atlas"},
		{url:"assets/atlas/common.atlas",type:"atlas"},
		{url:"assets/atlas/viewload.atlas",type:"atlas"},
		{url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/common.atlas",type:"atlas"},
		{url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/comm.atlas",type:"atlas"}];
		MiniAdpter.nativefiles=[
		"assets/atlas/comm.atlas",
		"assets/atlas/common.atlas",
		"assets/atlas/viewload.atlas",
		"assets/atlas/language/"+LanguageMgr.Ins.country+"/common.atlas",
		"assets/atlas/language/"+LanguageMgr.Ins.country+"/comm.atlas"];
		Laya.loader.load(res,Handler.create(this,this.loadWindowResOver));
	}

	__proto.loadWindowResOver=function(){
		var _$this=this;
		if(window.clearRotateImg !=null)window.clearRotateImg();
		if(LayaEX.isWXAPP){
			wx.onShow(function(res){
				_$this.initOptionsSync(res);
			});
			var launchOptions={};
			try {
				launchOptions=wx.getLaunchOptionsSync()["query"] || {};
				}catch(e){
				launchOptions={};
			}
			ShareControl.ins.resolveQuery(launchOptions);
		}
		else if (LayaEX.isFaceBook){}
		else {
			ShareControl.ins.resolveQuery(UrlParam.PARAMS);
			if (SceneMgr.ins.hasSyncScene){
				LoginControl.instance.inviteCheck();
			}
		}
		LoginControl.instance.showLoginView();
	}

	/**
	*设置语言包
	*/
	__proto.setLanguage=function(){
		if(UrlParam.PARAMS["PLID"]=="fb"){
			var locale=FBInstant.getLocale();
			if(locale=="zh_CN"){
				LanguageMgr.Ins.country="Chinese";
				}else{
				LanguageMgr.Ins.country="English";
			}
		}
		LanguageMgr.Ins.setup();
	}

	return MainGame;
})(Component)


/**
*导弹基类
*@author huyouwei
*/
//class modules.battle.bomb.BaseBomb extends laya.ui.Component
var BaseBomb=(function(_super){
	function BaseBomb(bombId){
		this.layerIndex=0;
		this.dir=0;
		//发射方向朝左
		this.v0=0;
		this.angle=0;
		this.g=0;
		this.screenheight=0;
		this.firex=0;
		this.firey=0;
		this.fengli=0;
		this.air=0;
		this.m=0;
		this.battleWind=0;
		this.mg=0;
		this.mair=0;
		this.vx=0;
		this.vy=0;
		this.timea=0;
		this.ds=0;
		this.time=0;
		this.timeNum=0;
		this.bombNode=null;
		this.changex=0;
		this.changey=0;
		this.bombId=0;
		this.detailMsg=null;
		this.hasDig=false;
		this.hasShoot=false;
		this.hasHitBody=false;
		this.speed=30;
		this._blastName=null;
		this.performance=null;
		BaseBomb.__super.call(this);
		this.curPos=new Point(-1,-1);
		this.lastPos=new Point(-1,-1);
		this.shootPoint=new Point(0,0);
		this.anis=new Array;
		this.bombNode=new Sprite();
		this.addChild(this.bombNode);
		this.bombId=bombId;
		this.performance=BombModel.getBombPerformanceConfigByBombId(bombId);
	}

	__class(BaseBomb,'modules.battle.bomb.BaseBomb',_super);
	var __proto=BaseBomb.prototype;
	__proto.init=function(data){
		this.g=data[0];
		this.v0=data[1];
		this.angle=data[2];
		this.screenheight=data[3];
		this.firex=data[4];
		this.firey=data[5];
		this.fengli=data[6];
		this.air=data[7];
		this.m=data[8];
		this.battleWind=data[9];
		this.dir=data[10];
		this.time=data[11];
		this.layerIndex=data[12];
		this.detailMsg=data[13];
		this.mg=10;
		this.mair=2.0;
		this.x=this.firex;
		this.y=this.firey;
		this.firey=this.screenheight-this.firey;
		this.vx=Math.cos(Math.PI/180 *this.angle)*this.v0;
		this.vy=Math.sin(Math.PI/180 *this.angle)*this.v0;
	}

	__proto.preloadEffect=function(actions){
		var blastNameReal=this.getBlastName(this.blastName);
		if (blastNameReal && blastNameReal !="0"){
			var actionMsg;
			var animation;
			for (var j=0,m=actions.length;j < m;j++){
				actionMsg=actions[j];
				if (actionMsg.type==TriggerType.BOMB){
					animation=UIFactory.ins.createGAnimation(blastNameReal,"blastframe",null,false,null,Handler.create(this,function(animation){
						animation.stop();
					}));
					this.anis.push(animation);
				}
			}
		}
	}

	__proto.getBlastName=function(name){
		var names=name.split("|");
		if(names.length==1){
			return names[0];
		}
		if(names.length==2){
			if(this.detailMsg.isEnd){
				return names[1];
			}
		}
		return names[0];
	}

	__proto.move=function(){
		this.preloadEffect(this.detailMsg.actions);
		Laya.timer.frameLoop(1,this,this._move);
	}

	__proto._camera=function(){
		CameraManager.instance.setMapPos(this.x,this.y,ResizeMgr.bestFitWidth/2,ResizeMgr.bestFitHeight/2,300);
	}

	__proto.getAy=function(){
		return this.m==0 ? 0 :Math.floor((this.g *this.m *this.mg *(-1)-this.air *this.mair *this.vy)/this.m);
	}

	__proto.getAx=function(){
		return this.m==0 ? 0 :Math.floor((this.fengli*this.battleWind/10.0-this.air *this.mair *this.vx)/this.m);
	}

	__proto.guildBomb=function(){
		this.vx=this.changex;
		this.vy=this.changey;
		this.setbattleWind(0);
		this.setmair(0);
		this.setg(0);
	}

	__proto.changeSpeed=function(vx,vy){
		this.changex=vx;
		this.changey=vy;
	}

	__proto.setg=function(g){
		this.g=g;
	}

	__proto.setmair=function(mair){
		this.mair=mair;
	}

	__proto.setbattleWind=function(battleWind){
		this.battleWind=battleWind;
	}

	__proto.updateVx=function(dt){
		var ax=this.getAx();
		this.vx=this.vx+ax *dt;
	}

	__proto.updateVy=function(dt){
		var ay=this.getAy();
		this.vy=this.vy+ay *dt;
	}

	__proto._rotation=function(){
		var len=Math.sqrt(Math.pow(this.vx,2)+Math.pow(this.vy,2));
		var cos=this.vx/len;
		var deg=Math.acos(cos);
		var rotation=deg *180/Math.PI;
		if(this.trans()==-1.0){
			rotation=rotation-180;
		}
		rotation=rotation *this.fall();
		this.bombNode.rotation=rotation;
	}

	__proto.fall=function(){
		if(this.ds >=0){
			return-1;
		}
		return 1;
	}

	__proto._move=function(){
		this.lastPos.x=this.curPos.x;
		this.lastPos.y=this.curPos.y;
		var t=1/this.speed;
		this.updateVx(t);
		this.firex=this.firex+this.vx *t;
		this.updateVy(t);
		this.firey=this.firey+this.vy *t;
		this.ds=this.vy *t;
		this.timeNum=this.timeNum+t;
		this.x=this.firex;
		this.y=this.screenheight-this.firey;
		this.curPos.x=this.x;
		this.curPos.y=this.y;
		this._camera();
		this._rotation();
		this.moveUpdate();
	}

	__proto.moveUpdate=function(){}
	__proto.newCheckCollide=function(){
		return 3;
	}

	//废弃
	__proto.pointToLine=function(curPos,lastPos,oriPos,r){
		var data={};
		data.result=false;
		if(curPos.x==lastPos.x && curPos.y==lastPos.y){
			data.result=false;
			return data
		};
		var k=NaN;
		if(curPos.y==lastPos.y){
			k=0;
			}else{
			k=(curPos.y-lastPos.y)/ (curPos.x-lastPos.x);
		};
		var c=curPos.y-k*curPos.x;
		var ab=this.twoPosDistance(lastPos,curPos);
		var bc=this.twoPosDistance(curPos,oriPos);
		var ac=this.twoPosDistance(lastPos,oriPos);
		var p=(ab+bc+ac)/ 2;
		if(ab !=0){
			var h=2 *Math.sqrt(p*(p-ab)*(p-bc)*(p-ac))/ ab;
			if(h <=r){
				data.result=true;
				data.point=new Point(oriPos.x,k*oriPos.x+c);
			}
		}
		return data;
	}

	__proto.checkCollide=function(x,y){
		var pos=new Point(x,y);
		return 3;
	}

	__proto.isEmpty=function(x,y){
		return TileReader.isEmpty(x,y);
	}

	__proto.twoPosDistance=function(pos1,pos2){
		var dx=Math.abs(pos1.x-pos2.x);
		var dy=Math.abs(pos1.y-pos2.y);
		return Math.sqrt(Math.pow(dx,2)+Math.pow(dy,2));
	}

	__proto.complete=function(){
		this.moveOver();
		this.destroy(true);
		if (this.anis){
			for (var i=0,n=this.anis.length;i < n;i++){
				this.anis[i].destroy();
			}
			this.anis.length=0;
		}
		this.anis=null;
	}

	__proto.moveOver=function(){}
	__proto.trans=function(){
		var flag=-1.0;
		if(this.dir==1){
			flag=1.0;
		}
		return flag;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		Laya.timer.clear(this,this._move);
		_super.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'blastName',function(){
		return this._blastName;
	});

	return BaseBomb;
})(Component)


//class modules.battle.part.BasePart extends laya.ui.Component
var BasePart=(function(_super){
	function BasePart(){
		this._curAction=null;
		this._singleActions=[];
		BasePart.__super.call(this);
	}

	__class(BasePart,'modules.battle.part.BasePart',_super);
	var __proto=BasePart.prototype;
	__proto.addSingleAction=function(act){
		this._singleActions.push(act);
	}

	__proto.cancelSingleAction=function(actType){
		var act;
		for (var i=this._singleActions.length-1;i >=0;i--){
			if (Laya.__typeof((this._singleActions[i]),actType)){
				act=this._singleActions.splice(i,1);
				act && act[0] && act[0].cancel();
			}
		}
		if (Laya.__typeof(this._curAction,actType)){
			this._curAction.cancel();
			this._curAction=null;
		}
	}

	__proto.update=function(){
		if (this._curAction){
			if (!this._curAction.isOver){
				this._curAction.update();
				return;
			}
			this._curAction.destroy();
			this._curAction=null;
		}
		if (this._singleActions.length > 0){
			this._curAction=this._singleActions.shift();
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		for (var i=0,n=this._singleActions.length;i < n;i++){
			this._singleActions[i].destroy();
		}
		this._singleActions.length=0;
		this._curAction && this._curAction.destroy();
		this._curAction=null;
		_super.prototype.destroy.call(this,destroyChild);
	}

	return BasePart;
})(Component)


//class modules.battle.part.obj.BaseObject extends laya.ui.Component
var BaseObject=(function(_super){
	function BaseObject(msg){
		this.livingId=0;
		this.templateId=0;
		this.srcLivingId=0;
		this.screenWidth=0;
		this.screenHeight=0;
		this.objNode=null;
		this.objSkeleton=null;
		BaseObject.__super.call(this);
		this.livingId=msg.livingId;
		this.x=msg.x;
		this.y=msg.y;
		this.templateId=msg.templateId;
		this.srcLivingId=msg.srcLivingId;
	}

	__class(BaseObject,'modules.battle.part.obj.BaseObject',_super);
	var __proto=BaseObject.prototype;
	// 所属LivingId
	__proto.initObject=function(screenWidth,screenHeight){
		this.screenWidth=screenWidth;
		this.screenHeight=screenHeight;
		this.y=screenHeight-this.y;
		this.objNode=new Sprite();
		this.objNode.mouseEnabled=true;
		this.objNode.mouseThrough=true;
		this.addChild(this.objNode);
	}

	__proto.showBirth=function(){}
	__proto.showDie=function(){}
	__proto.showHit=function(){}
	__proto.destroyObject=function(){}
	return BaseObject;
})(Component)


//class modules.battle.part.role.HeroSkeleton extends laya.ui.Component
var HeroSkeleton=(function(_super){
	function HeroSkeleton(roleId,weaponId,isTouzhi,onComplete){
		//public static const AttackOverTouzhi:String="attack-over-touzhi";//投掷动作结束
		this.bodySkeleton=null;
		this.weaponSkeleton=null;
		this.planeSkeleton=null;
		this.handSkeleton=null;
		this._isTurnRight=false;
		//默认面向左边
		this.bodyTemplet=null;
		this.weaponTemplet=null;
		this.planeTemplet=null;
		this.handTemplet=null;
		this.scalex=1.0;
		this.scaley=1.0;
		this.curNameOrIndex=null;
		this._roleId=null;
		this._weaponId=null;
		this._isTouzhi=false;
		this._actionNames=null;
		HeroSkeleton.__super.call(this);
		this._roleId=roleId;
		this._weaponId=weaponId;
		if(isTouzhi==null){
			if(this._weaponId==1 || this._weaponId==4){
				this._isTouzhi=true;
			}
			else{
				this._isTouzhi=false;
			}
		}
		else{
			this._isTouzhi=isTouzhi;
		};
		var texture=Laya.loader.getRes("comm/roleLoadWait2.png");
		if(texture){
			texture.offsetX=-texture.width*0.5;
			texture.offsetY=-texture.height;
			this.texture=texture;
		}
		if(roleId !=null)this.updateRoleId(roleId,onComplete);
		if(weaponId !=null)this.updateWeaponId(weaponId);
		if(roleId !=null)this.updateHandId(roleId);
		this.mouseEnabled=true;
		this.mouseThrough=true;
		HeroSkeleton.createNum++;
	}

	__class(HeroSkeleton,'modules.battle.part.role.HeroSkeleton',_super);
	var __proto=HeroSkeleton.prototype;
	__proto.setScale=function(scalex,scaley){
		this.scalex=scalex;
		this.scaley=scaley;
		this.scaleX=scalex;
		this.scaleY=scaley;
	}

	__proto.play=function(nameOrIndex,loop,force,start,end,freshSkin){
		(force===void 0)&& (force=true);
		(start===void 0)&& (start=0);
		(end===void 0)&& (end=0);
		(freshSkin===void 0)&& (freshSkin=true);
		if(this.curNameOrIndex !=nameOrIndex){
			var isAttackType=false;
			if(nameOrIndex=="attack-start" || nameOrIndex=="attack-aim" || nameOrIndex=="attack-shoot1" || nameOrIndex=="attack-shoot4" || nameOrIndex=="attack-over"){
				isAttackType=true;
				nameOrIndex=nameOrIndex+(this._isTouzhi ? "-touzhi" :"-pao");
			}
			if(this.bodySkeleton)this.bodySkeleton.play(nameOrIndex,loop,force,start,end,freshSkin);
			if(this.weaponSkeleton)this.weaponSkeleton.play(nameOrIndex,loop,force,start,end,freshSkin);
			if(this.planeSkeleton)this.planeSkeleton.play(nameOrIndex,loop,force,start,end,freshSkin);
			if(this.handSkeleton)this.handSkeleton.play(nameOrIndex,loop,force,start,end,freshSkin);
			var actName=nameOrIndex;
			if(actName=="idle" || actName=="moe" || actName=="myturn" || actName=="walk" || actName=="useitem" || actName=="hit"){
				if(this.weaponSkeleton)this.weaponSkeleton.zOrder=0;
			}
			else{
				if(this.weaponSkeleton)this.weaponSkeleton.zOrder=2;
			};
			var isPlane=this._weaponId==1 ? true :false;
			if(isPlane && isAttackType){
				if(this.planeSkeleton)this.planeSkeleton.visible=true;
				if(this.weaponSkeleton)this.weaponSkeleton.visible=false;
			}
			else{
				if(this.planeSkeleton)this.planeSkeleton.visible=false;
				if(this.weaponSkeleton)this.weaponSkeleton.visible=true;
			}
			this.curNameOrIndex=nameOrIndex;
		}
	}

	__proto.stop=function(){
		if(this.bodySkeleton)this.bodySkeleton.stop();
		if(this.weaponSkeleton)this.weaponSkeleton.stop();
		if(this.planeSkeleton)this.weaponSkeleton.stop();
		if(this.handSkeleton)this.handSkeleton.stop();
	}

	__proto.playbackRate=function(value){
		if(this.bodySkeleton)this.bodySkeleton.playbackRate(value);
		if(this.weaponSkeleton)this.weaponSkeleton.playbackRate(value);
		if(this.planeSkeleton)this.planeSkeleton.playbackRate(value);
		if(this.handSkeleton)this.handSkeleton.playbackRate(value);
	}

	__proto.updateRoleId=function(roleId,onComplete){
		var _$this=this;
		UIFactory.ins.createSkeleton(roleId,"role",Handler.create(this,function(templet,skeleton){
			if(skeleton){
				skeleton.mouseEnabled=true;
				skeleton.mouseThrough=true;
				_$this.bodyTemplet=templet;
				_$this.bodySkeleton=skeleton;
				SkeletonTempletMgr.ins.addReference(_$this.bodyTemplet["_skBufferUrl"]);
				_$this.bodySkeleton.play("idle",true);
				_$this.bodySkeleton.zOrder=1;
				_$this.addChild(_$this.bodySkeleton);
				this.texture=null;
				if(onComplete){
					onComplete.runWith(this);
				}
			}
		}));
	}

	__proto.updateWeaponId=function(weaponId){
		var _$this=this;
		UIFactory.ins.createSkeleton(weaponId,"weapon",Handler.create(this,function(templet,skeleton){
			if(skeleton){
				skeleton.mouseEnabled=true;
				skeleton.mouseThrough=true;
				_$this.weaponTemplet=templet;
				_$this.weaponSkeleton=skeleton;
				SkeletonTempletMgr.ins.addReference(_$this.weaponTemplet["_skBufferUrl"]);
				_$this.weaponSkeleton.play("idle",true);
				_$this.weaponSkeleton.zOrder=0;
				_$this.addChild(_$this.weaponSkeleton);
			}
		}));
	}

	//skeleton.on(Event.CLICK,this,clickWeapon);
	__proto.updateHandId=function(roleId){
		var _$this=this;
		UIFactory.ins.createSkeleton(roleId,"hand",Handler.create(this,function(templet,skeleton){
			if(skeleton){
				skeleton.mouseEnabled=true;
				skeleton.mouseThrough=true;
				_$this.handTemplet=templet;
				_$this.handSkeleton=skeleton;
				SkeletonTempletMgr.ins.addReference(_$this.handTemplet["_skBufferUrl"]);
				_$this.handSkeleton.play("idle",true);
				_$this.handSkeleton.zOrder=4;
				_$this.addChild(_$this.handSkeleton);
			}
		}));
	}

	/**
	*使用武器
	*@param newWeaponId
	*
	*/
	__proto.updateWeapon=function(newWeaponId,isTouzhi){
		var _$this=this;
		this._weaponId=newWeaponId;
		if(isTouzhi !=null){
			this._isTouzhi=isTouzhi;
		}
		else{
			if(this._weaponId==1 || this._weaponId==4){
				this._isTouzhi=true;
			}
			else{
				this._isTouzhi=false;
			}
		};
		var isPlane=this._weaponId==1 ? true :false;
		UIFactory.ins.createSkeleton(newWeaponId,"weapon",Handler.create(this,function(templet,skeleton){
			if(skeleton){
				if(isPlane){
					SkeletonTempletMgr.ins.addReference(templet["_skBufferUrl"]);
					if(_$this.planeSkeleton){
						_$this.planeSkeleton.removeSelf();
						_$this.planeSkeleton.destroy(true);
						_$this.planeSkeleton=null;
						SkeletonTempletMgr.ins.removeReference(_$this.planeTemplet["_skBufferUrl"]);
					}
					_$this.planeTemplet=templet;
					_$this.planeSkeleton=skeleton;
					_$this.planeSkeleton.zOrder=3;
					_$this.addChild(_$this.planeSkeleton);
					_$this.planeSkeleton.visible=false;
				}
				else{
					if(_$this.planeSkeleton)_$this.planeSkeleton.visible=false;
					SkeletonTempletMgr.ins.addReference(templet["_skBufferUrl"]);
					if(_$this.weaponSkeleton){
						_$this.weaponSkeleton.removeSelf();
						_$this.weaponSkeleton.destroy(true);
						_$this.weaponSkeleton=null;
						SkeletonTempletMgr.ins.removeReference(_$this.weaponTemplet["_skBufferUrl"]);
					}
					if(_$this.weaponTemplet){
						_$this.weaponTemplet=null;
					}
					_$this.weaponTemplet=templet;
					_$this.weaponSkeleton=skeleton;
					_$this.weaponSkeleton.zOrder=0;
					_$this.addChild(_$this.weaponSkeleton);
					var tempNameOrIndex;
					if(_$this.curNameOrIndex=="attack-start" || _$this.curNameOrIndex=="attack-aim" || _$this.curNameOrIndex=="attack-shoot1" || _$this.curNameOrIndex=="attack-shoot4" || _$this.curNameOrIndex=="attack-over"){
						tempNameOrIndex=_$this.curNameOrIndex+(_$this._isTouzhi ? "-touzhi" :"-pao");
					}
					else{
						tempNameOrIndex=_$this.curNameOrIndex !=null ? _$this.curNameOrIndex :"idle";
					}
					_$this.weaponSkeleton.play(tempNameOrIndex,true);
				}
			}
		}));
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		_super.prototype.destroy.call(this,destroyChild);
		this.bodySkeleton=null;
		this.weaponSkeleton=null;
		this.planeSkeleton=null;
		this.handSkeleton=null;
		if(this.bodyTemplet){
			SkeletonTempletMgr.ins.removeReference(this.bodyTemplet["_skBufferUrl"]);
			this.bodyTemplet=null;
		}
		if(this.weaponTemplet){
			SkeletonTempletMgr.ins.removeReference(this.weaponTemplet["_skBufferUrl"]);
			this.weaponTemplet=null;
		}
		if(this.planeTemplet){
			SkeletonTempletMgr.ins.removeReference(this.planeTemplet["_skBufferUrl"]);
			this.planeTemplet=null;
		}
		if(this.handTemplet){
			SkeletonTempletMgr.ins.removeReference(this.handTemplet["_skBufferUrl"]);
			this.handTemplet=null;
		}
		this.curNameOrIndex=null;
		this._roleId=null;
		this._weaponId=null;
		HeroSkeleton.createNum--;
	}

	__getset(0,__proto,'weaponId',function(){
		return this._weaponId;
	});

	__getset(0,__proto,'isTouzhi',function(){
		return this._isTouzhi;
	});

	__getset(0,__proto,'isTurnRight',function(){
		return this._isTurnRight;
		},function(value){
		if(this._isTurnRight !=value){
			this._isTurnRight=value;
			if(this._isTurnRight){
				this.scaleX=-1 *this.scalex;
			}
			else{
				this.scaleX=1 *this.scalex;
			}
		}
	});

	__getset(0,__proto,'index',null,function(value){
		if(this.bodySkeleton)this.bodySkeleton.index=value;
		if(this.weaponSkeleton)this.weaponSkeleton.index=value;
		if(this.planeSkeleton)this.planeSkeleton.index=value;
		if(this.handSkeleton)this.handSkeleton.index=value;
	});

	__getset(0,__proto,'actionNames',function(){
		if(this.bodyTemplet){
			if(this._actionNames==null){
				this._actionNames=[];
				for (var i=0,len=this.bodyTemplet.getAnimationCount();i < len;i++){
					this._actionNames.push(this.bodyTemplet.getAniNameByIndex(i));
				}
			}
			return this._actionNames;
		}
		return null;
	});

	HeroSkeleton.createNum=0;
	HeroSkeleton.IDLE="idle";
	HeroSkeleton.WALK="walk";
	HeroSkeleton.HIT="hit";
	HeroSkeleton.Moe="moe";
	HeroSkeleton.Myturn="myturn";
	HeroSkeleton.UseItem="useitem";
	HeroSkeleton.Die="die";
	HeroSkeleton.AttackStartType="attack-start";
	HeroSkeleton.AttackAimType="attack-aim";
	HeroSkeleton.AttackShoot1Type="attack-shoot1";
	HeroSkeleton.AttackShoot4Type="attack-shoot4";
	HeroSkeleton.AttackOverType="attack-over";
	return HeroSkeleton;
})(Component)


/**
*战斗主界面
*@author huyouwei
*/
//class modules.battle.view.menu.Card extends laya.ui.Component
var Card=(function(_super){
	function Card(){
		this.card=null;
		//技能卡牌
		this.index=0;
		this.skillId=0;
		this.costActPoint=0;
		this.isLongClick=false;
		this.longTime=0;
		this.quality=0;
		Card.__super.call(this);
		this.card=new SkillCard();
		var cardScale=0.7;
		this.card.scaleX=this.card.scaleY=cardScale;
		this.addChild(this.card);
		this.registerHandler();
	}

	__class(Card,'modules.battle.view.menu.Card',_super);
	var __proto=Card.prototype;
	__proto.registerHandler=function(){
		this.card.on("click",this,this.useSkill);
		this.card.on("mousedown",this,this.longClickBegin);
		this.card.on("mouseup",this,this.longClickEnd);
	}

	__proto.longClickEnd=function(e){
		EventMgr.ins.event("close_skilltips");
		Laya.timer.clear(this,this.calcLongClick);
		e.stopPropagation();
	}

	__proto.longClickBegin=function(){
		this.longTime=0;
		Laya.timer.frameLoop(1,this,this.calcLongClick);
		this.stage.on("mouseup",this,this.longClickEnd);
	}

	__proto.calcLongClick=function(){
		this.longTime=this.longTime+1;
		if(this.longTime >=15){
			Laya.timer.clear(this,this.calcLongClick);
			this.onHandleLongClick();
		}
	}

	__proto.onHandleLongClick=function(){
		this.isLongClick=true;
		EventMgr.ins.event("open_skilltips",[this.skillId,this]);
	}

	__proto.init=function(skillId,index){
		this.skillId=skillId;
		var skillData=SkillModel.getSkillConfigData(skillId);
		this.card.skillVo=skillData;
		this.index=index;
		this.costActPoint=skillData.CostActPoint;
		this.quality=skillData.Quality;
	}

	// }
	__proto.useSkill=function(){
		if(this.isLongClick){
			this.isLongClick=false;
			return;
		}
		SoundMgr.instance.playSound(4006038);
		EventMgr.ins.event("usecard",[this.index,this.skillId,this.gray]);
	}

	__proto.move=function(cardx,cardy,delay){
		SoundMgr.instance.playSound(4006031);
		var ease=Ease["backOut"];
		Tween.to(this,{x:cardx,y:cardy},5/30 *1000,ease,null,delay*1000);
	}

	__proto.fadeOut=function(caller,method){
		var handler=Handler.create(caller,method,[this]);
		Tween.to(this,{x:this.x,y:this.y-this.height,alpha:0},5/30 *1000,null,handler,0);
	}

	__proto.fadeIn=function(x,y,delay,handler){
		Tween.to(this,{x:x,y:y,alpha:1},5/30 *1000,null,handler,delay*1000);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.getChildByName("cardAni")){
			(this.getChildByName("cardAni")).destroy(true);
		}
		Laya.timer.clear(this,this.calcLongClick);
		this.stage.off("mouseup",this,this.longClickEnd);
		this.card.off("mousedown",this,this.longClickBegin);
		this.card.off("mouseup",this,this.longClickEnd);
		_super.prototype.destroy.call(this,destroyChild);
	}

	return Card;
})(Component)


//class modules.battle.view.menu.UnuseCard extends laya.ui.Component
var UnuseCard=(function(_super){
	function UnuseCard(){
		//extends UnuseCardUI
		this.card=null;
		UnuseCard.__super.call(this);
		this.card=new SkillCard();
		var cardScale=73/147;
		this.card.scaleX=this.card.scaleY=cardScale;
		this.addChild(this.card);
	}

	__class(UnuseCard,'modules.battle.view.menu.UnuseCard',_super);
	var __proto=UnuseCard.prototype;
	__proto.init=function(skillId){
		var skillData=SkillModel.getSkillConfigData(skillId);
		var skillPerData=SkillModel.getSkillPerformanceBySkillId(skillData.Display);
		this.card.skillVo=skillData;
	}

	// }
	__proto.fadeOut=function(delay){
		this.alpha=1;
		this.x=0;
		this.y=0;
		Tween.to(this,{x:this.x-this.width,y:this.y,alpha:0},10/30 *1000,null,null,delay*1000);
	}

	__proto.fadeIn=function(delay){
		this.alpha=0;
		this.x=0;
		this.y=0;
		Tween.to(this,{alpha:1},10/30 *1000,null,null,delay*1000);
	}

	return UnuseCard;
})(Component)


//class modules.battle.effect.KillReportEffect extends modules.battle.effect.FrameEffect
var KillReportEffect=(function(_super){
	function KillReportEffect(_leftUrl,_rightUrl,_killType,handler){
		this.FRAME_BORN=8;
		this.FRAME_DISAPPEAR=50;
		this.mpImgBg=null;
		this.headLeft=null;
		this.headRight=null;
		this.mpImgDesc=null;
		this.hasInit=false;
		this.leftUrl=null;
		this.rightRrl=null;
		this.killType=0;
		KillReportEffect.__super.call(this,handler);
		this.rightRrl=_rightUrl;
		this.leftUrl=_leftUrl;
		this.killType=_killType;
	}

	__class(KillReportEffect,'modules.battle.effect.KillReportEffect',_super);
	var __proto=KillReportEffect.prototype;
	__proto.onUpdate=function(){
		_super.prototype.onUpdate.call(this);
		if(this.hasInit && this.frameNum < this.FRAME_BORN){
			this.headLeft.x=this.headLeft.x+50 / this.FRAME_BORN;
			this.headRight.x=this.headRight.x-50 / this.FRAME_BORN;
			}else if(this.frameNum==this.FRAME_BORN){
			this.headLeft.x=this.mpImgBg.x-180;
			this.headRight.x=this.mpImgBg.x+180;
			}else if(this.frameNum==this.FRAME_BORN+5){
			var mpIconX=this.getImage({resPath:"battle/menu/ld/ui_sha.png",anchorX:0.5,anchorY :0.5,x:this.headRight.width / 2,y:this.headRight.height/ 2});
			mpIconX.width=this.headRight.width;
			mpIconX.height=this.headRight.height;
			this.headRight.addChild(mpIconX);
			}else if(this.frameNum==this.FRAME_DISAPPEAR){
			this.headLeft.visible=false;
			this.headRight.visible=false;
			this.mpImgDesc.visible=false;
		}
	}

	__proto.initView=function(){
		this.hasInit=true;
		this.mpImgBg=new AniSkeleton("ui_luandoushengli","ui",0,false,Handler.create(this,this.onPlayEnd));
		this.mpImgBg.x=ResizeMgr.bestFitWidth / 2;
		this.mpImgBg.y=ResizeMgr.bestFitHeight/ 4;
		this.addChild(this.mpImgBg);
		this.mpImgDesc=this.getImage({resPath:PathMgr.getKillDesc(this.killType),anchorX:0.5,anchorY :0.5,x:this.mpImgBg.x,y:this.mpImgBg.y});
		this.mpImgDesc.zOrder=999999;
		this.addChild(this.mpImgDesc);
		this.headLeft=new CommonHeadUI();
		this.headLeft.mpTextName.visible=false;
		this.headLeft.mpTextFight.visible=false;
		this.headLeft.name="left";
		this.setHeadUrl(this.leftUrl,this.headLeft.headIcon);
		this.headLeft.scale(1.2,1.2);
		this.headLeft.anchorX=0.5;
		this.headLeft.anchorY=0.5;
		this.headLeft.x=this.mpImgBg.x-180-50;
		this.headLeft.y=this.mpImgBg.y-10;
		this.addChild(this.headLeft);
		this.headRight=new CommonHeadUI();
		this.headRight.mpTextName.visible=false;
		this.headRight.mpTextFight.visible=false;
		this.headRight.name="right";
		this.setHeadUrl(this.rightRrl,this.headRight.headIcon)
		this.headRight.scale(1.2,1.2);
		this.headRight.anchorX=0.5;
		this.headRight.anchorY=0.5
		this.headRight.x=this.mpImgBg.x+180+50;
		this.headRight.y=this.mpImgBg.y-10;
		this.addChild(this.headRight);
	}

	__proto.setHeadUrl=function(headUrl,image){
		if(headUrl.indexOf("http")==-1 && headUrl !=""){
			var avatar="assets/textrue/aihead/"+headUrl+".png";
			image.skin=avatar;
			return;
		}
		if(headUrl.length > 0){
			PlayerInfoMgr.ins.getHeadImgUrl(headUrl,Handler.create(this,function(url){
				image.skin=url;
			}));
		}
	}

	__proto.onPlayEnd=function(){
		this.destroy(true);
	}

	return KillReportEffect;
})(FrameEffect)


//class modules.battle.effect.LeftToRightTween extends modules.battle.effect.FrameEffect
var LeftToRightTween=(function(_super){
	function LeftToRightTween(descStr,handler){
		this.LEFT_TO_MID=5;
		this.MID_TO_RIGHT=55;
		this.mpImgBg=null;
		LeftToRightTween.__super.call(this,handler);
		this._$4_initView(descStr);
		this.setFrameEnd(this.LEFT_TO_MID+this.MID_TO_RIGHT);
	}

	__class(LeftToRightTween,'modules.battle.effect.LeftToRightTween',_super);
	var __proto=LeftToRightTween.prototype;
	__proto.onUpdate=function(){
		_super.prototype.onUpdate.call(this);
		if(this.frameNum > this.LEFT_TO_MID && this.frameNum < this.MID_TO_RIGHT){
			this.mpImgBg.x=ResizeMgr.bestFitWidth / 2;
			}else if(this.frameNum >=this.MID_TO_RIGHT){
			this.mpImgBg.x=ResizeMgr.bestFitWidth *0.5 / this.LEFT_TO_MID *(this.frameNum-this.MID_TO_RIGHT+this.LEFT_TO_MID);
		}
		else{
			if(this.mpImgBg){
				this.mpImgBg.x=ResizeMgr.bestFitWidth *0.5 / this.LEFT_TO_MID *this.frameNum;
			}
		}
	}

	__proto._$4_initView=function(descStr){
		this.mpImgBg=new Image("battle/menu/ld/ui_di.png");
		this.mpImgBg.anchorX=0.5;
		this.mpImgBg.anchorY=0.5;
		this.mpImgBg.x=-this.mpImgBg.width / 2;
		this.mpImgBg.y=ResizeMgr.bestFitHeight/2;
		this.mpImgBg.mouseEnabled=false;
		this.addChild(this.mpImgBg);
		var mpImgTitle=new Image(LanguageMgr.Ins.getBattleLanguagePath("ld/ui_mubiao.png"));
		mpImgTitle.anchorY=0.5;
		this.mpImgBg.addChild(mpImgTitle);
		var scoreLabel=this.getLabel({str:descStr,fontSize:38,isBlod:true,color:"#ffffff",stroke:2,strokeColor:"#d24a00"});
		scoreLabel.x=mpImgTitle.width+10;
		scoreLabel.y=2;
		mpImgTitle.addChild(scoreLabel);
		var offsetX=(this.mpImgBg.width-mpImgTitle.width-scoreLabel.width);
		mpImgTitle.x=offsetX / 2;
		mpImgTitle.y=this.mpImgBg.height *2/3;
	}

	return LeftToRightTween;
})(FrameEffect)


//class modules.battle.effect.RightToLeftEffect extends modules.battle.effect.FrameEffect
var RightToLeftEffect=(function(_super){
	function RightToLeftEffect(_imgPath,_handler){
		this.RIGHT_TO_MID=5;
		this.MID_TO_LEFT=55;
		this.mpImgBg=null;
		this.imgPath=null;
		RightToLeftEffect.__super.call(this,_handler);
		this.imgPath=_imgPath;
	}

	__class(RightToLeftEffect,'modules.battle.effect.RightToLeftEffect',_super);
	var __proto=RightToLeftEffect.prototype;
	__proto.onUpdate=function(){
		_super.prototype.onUpdate.call(this);
		if(this.frameNum > this.RIGHT_TO_MID && this.frameNum < this.MID_TO_LEFT){
			this.mpImgBg.x=ResizeMgr.bestFitWidth / 2;
			}else if(this.frameNum >=this.MID_TO_LEFT){
			this.mpImgBg.x=ResizeMgr.bestFitWidth *0.5-ResizeMgr.bestFitWidth *0.5 / this.RIGHT_TO_MID *(this.frameNum-this.MID_TO_LEFT+this.RIGHT_TO_MID);
		}
		else{
			if(this.mpImgBg){
				this.mpImgBg.x=ResizeMgr.bestFitWidth-ResizeMgr.bestFitWidth *0.5 / this.RIGHT_TO_MID *this.frameNum;
			}
		}
	}

	__proto.initView=function(){
		this.mpImgBg=this.getImage({resPath:this.imgPath,anchorX:0.5,anchorY :0.5,x:ResizeMgr.bestFitWidth,y:ResizeMgr.bestFitHeight *0.5});
		this.mpImgBg.zOrder=999999;
		this.addChild(this.mpImgBg);
	}

	return RightToLeftEffect;
})(FrameEffect)


//class modules.battle.effect.WinEffect extends modules.battle.effect.FrameEffect
var WinEffect=(function(_super){
	function WinEffect(name,handler){
		this.effectNameWidth=158;
		this.frameShow=33;
		this.effectLight=null;
		this.effectBg=null;
		this.effectName=null;
		this.nameStr=null;
		WinEffect.__super.call(this,handler);
		this.nameStr=name;
		SoundMgr.instance.playSound(4006055);
	}

	__class(WinEffect,'modules.battle.effect.WinEffect',_super);
	var __proto=WinEffect.prototype;
	__proto.onUpdate=function(){
		_super.prototype.onUpdate.call(this);
		if(this.frameNum==this.frameShow){
			var label=this.getLabel({str:this.nameStr,fontSize:30,isBlod:false,color:"#ffffff",stroke:2,strokeColor:"#b20209"});
			label.anchorX=0.5;
			label.anchorY=0.5;
			this.effectBg.addChild(label);
			this.effectName=new AniSkeleton("ReachScore3","ui",0,false,null,null,true);
			this.effectName.x=label.width;
			this.effectName.y=17;
			label.addChild(this.effectName);
			var offsetX=(this.effectBg.width-this.effectNameWidth-label.width)
			label.x=offsetX / 2;
			label.y=(this.effectBg.height-label.height)/ 2;
		}
	}

	__proto.initView=function(){
		this.width=ResizeMgr.bestFitWidth;
		this.height=ResizeMgr.bestFitHeight;
		this.x=ResizeMgr.bestFitWidth/2;
		this.y=ResizeMgr.bestFitHeight/2;
		this.effectLight=new AniSkeleton("ReachScore1","ui",0,false);
		this.effectLight.blendMode="add";
		this.effectLight.zOrder=-999;
		this.addChild(this.effectLight);
		this.effectBg=new AniSkeleton("ReachScore2","ui",0,false,Handler.create(this,this.onPlayEnd));
		this.effectBg.zOrder=-998;
		this.addChild(this.effectBg);
	}

	__proto.onPlayEnd=function(){
		this.destroy(true);
	}

	return WinEffect;
})(FrameEffect)


//class modules.hall.view.HeroShowSkeleton extends laya.ui.Component
var HeroShowSkeleton=(function(_super){
	function HeroShowSkeleton(roleId){
		this.bodySkeleton=null;
		this.weaponSkeleton=null;
		this.bodyTemplet=null;
		this.weaponTemplet=null;
		//移除剪影
		this.actArr=["idle","walk","prepare","atk1","hit"];
		this.idx=0;
		HeroShowSkeleton.__super.call(this);
		var texture=Laya.loader.getRes("comm/roleLoadWait.png");
		if(texture){
			texture.offsetX=-texture.width*0.5;
			texture.offsetY=-texture.height;
			this.texture=texture;
		}
		if(roleId !=null)this.updateRoleId(roleId);
		this.mouseEnabled=true;
		this.mouseThrough=true;
		this.on("click",this,this.clickHandler);
		HeroShowSkeleton.createNum++;
	}

	__class(HeroShowSkeleton,'modules.hall.view.HeroShowSkeleton',_super);
	var __proto=HeroShowSkeleton.prototype;
	__proto.updateRoleId=function(roleId){
		var _$this=this;
		UIFactory.ins.createSkeleton(roleId,"roleshow",Handler.create(this,function(templet,skeleton){
			if(skeleton){
				skeleton.mouseEnabled=true;
				skeleton.mouseThrough=true;
				if(_$this.bodySkeleton){
					SkeletonTempletMgr.ins.removeReference(_$this.bodyTemplet["_skBufferUrl"]);
					_$this.bodySkeleton.removeSelf();
					_$this.bodySkeleton.destroy();
					_$this.bodySkeleton=null;
				}
				_$this.bodyTemplet=templet;
				_$this.bodySkeleton=skeleton;
				SkeletonTempletMgr.ins.addReference(templet["_skBufferUrl"]);
				skeleton.play("idle",true);
				_$this.bodySkeleton.zOrder=1;
				_$this.addChild(_$this.bodySkeleton);
				this.texture=null;
			}
		}));
	}

	__proto.clickHandler=function(){
		this.idx++;
		if(this.idx > this.actArr.length)this.idx=0;
		if(this.bodySkeleton)this.bodySkeleton.play(this.actArr[this.idx],true);
		if(this.weaponSkeleton)this.weaponSkeleton.play(this.actArr[this.idx],true);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		_super.prototype.destroy.call(this,destroyChild);
		this.off("click",this,this.clickHandler);
		if(this.bodySkeleton){
			SkeletonTempletMgr.ins.removeReference(this.bodyTemplet["_skBufferUrl"]);
			this.bodySkeleton.removeSelf();
			this.bodySkeleton.destroy(true);
		}
		this.bodySkeleton=null;
		if(this.weaponSkeleton){
			SkeletonTempletMgr.ins.removeReference(this.weaponTemplet["_skBufferUrl"]);
			this.weaponSkeleton.removeSelf();
			this.weaponSkeleton.destroy(true);
		}
		this.weaponSkeleton=null;
		this.bodyTemplet=null;
		this.weaponTemplet=null;
		this.actArr=null;
		HeroShowSkeleton.createNum--;
	}

	HeroShowSkeleton.createNum=0;
	HeroShowSkeleton.IDLE="idle";
	HeroShowSkeleton.WALK="walk";
	HeroShowSkeleton.PREPARE="prepare";
	HeroShowSkeleton.ATK1="atk1";
	HeroShowSkeleton.HIT="hit";
	return HeroShowSkeleton;
})(Component)


/**
*指引遮罩基类 为了解决原来的旧指引把按钮移出自己层级的尴尬的处理方式 尽量做到不干预原来的功能
*@author chengwen.yi
*
*/
//class modules.newguide.view.BaseMaskView extends laya.ui.Component
var BaseMaskView=(function(_super){
	function BaseMaskView(){
		this.bg=null;
		this.leftBg=null;
		this.centerTop=null;
		this.centerBottom=null;
		this.rightBg=null;
		this.rect=null;
		BaseMaskView.__super.call(this);
		this.mouseEnabled=true;
		this.mouseThrough=true;
		this.width=ResizeMgr.bestFitWidth;
		this.height=ResizeMgr.bestFitHeight;
		ResizeMgr.addListener(this,true);
	}

	__class(BaseMaskView,'modules.newguide.view.BaseMaskView',_super);
	var __proto=BaseMaskView.prototype;
	Laya.imps(__proto,{"laya.ui.IResize":true})
	__proto.setMaskRect=function(rect,maskAlpha){
		(maskAlpha===void 0)&& (maskAlpha=0.6);
		this.rect=rect;
		if(this.bg==null){
			this.bg=new Component();
			this.bg.mouseEnabled=true;
			this.bg.mouseThrough=true;
			this.addChild(this.bg);
			this.leftBg=new Image("assets/textrue/common/blank.png");
			this.leftBg.name="leftBg";
			this.leftBg.sizeGrid="2,2,2,2,1";
			this.leftBg.mouseEnabled=true;
			this.bg.addChild(this.leftBg);
			this.centerTop=new Image("assets/textrue/common/blank.png");
			this.centerTop.name="centerTop";
			this.centerTop.sizeGrid="2,2,2,2,1";
			this.centerTop.mouseEnabled=true;
			this.bg.addChild(this.centerTop);
			this.centerBottom=new Image("assets/textrue/common/blank.png");
			this.centerBottom.name="centerBottom";
			this.centerBottom.sizeGrid="2,2,2,2,1";
			this.centerBottom.mouseEnabled=true;
			this.bg.addChild(this.centerBottom);
			this.rightBg=new Image("assets/textrue/common/blank.png");
			this.rightBg.name="rightBg";
			this.rightBg.sizeGrid="2,2,2,2,1";
			this.rightBg.mouseEnabled=true;
			this.bg.addChild(this.rightBg);
		}
		this.bg.alpha=maskAlpha;
		this.bg.width=ResizeMgr.bestFitWidth;
		this.bg.height=ResizeMgr.bestFitHeight;
		this.leftBg.x=0;
		this.leftBg.y=0;
		this.leftBg.width=rect.x;
		this.leftBg.height=ResizeMgr.bestFitHeight;
		this.centerTop.x=rect.x;
		this.centerTop.y=0;
		this.centerTop.width=rect.width;
		this.centerTop.height=rect.y;
		this.centerBottom.x=rect.x;
		this.centerBottom.y=rect.y+rect.height;
		this.centerBottom.width=rect.width;
		this.centerBottom.height=ResizeMgr.bestFitHeight-(rect.y+rect.height);
		this.rightBg.x=rect.x+rect.width;
		this.rightBg.y=0;
		this.rightBg.width=ResizeMgr.bestFitWidth-(rect.x+rect.width);
		this.rightBg.height=ResizeMgr.bestFitHeight;
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.width=ResizeMgr.bestFitWidth;
		this.height=ResizeMgr.bestFitHeight;
		if(this.bg && this.rect){
			this.bg.width=ResizeMgr.bestFitWidth;
			this.bg.height=ResizeMgr.bestFitHeight;
			this.leftBg.height=ResizeMgr.bestFitHeight;
			this.centerBottom.height=ResizeMgr.bestFitHeight-(this.rect.y+this.rect.height);
			this.rightBg.width=ResizeMgr.bestFitWidth-(this.rect.x+this.rect.width);
			this.rightBg.height=ResizeMgr.bestFitHeight;
		}
	}

	return BaseMaskView;
})(Component)


//class modules.test.EditAnimation extends laya.ui.Component
var EditAnimation=(function(_super){
	function EditAnimation(name,type,onComplete){
		EditAnimation.__super.call(this);
		this.mouseEnabled=true;
		this.mouseThrough=true;
		UIFactory.ins.createGAnimation(name,type,this);
	}

	__class(EditAnimation,'modules.test.EditAnimation',_super);
	return EditAnimation;
})(Component)


/**
*只供动画编译器使用
*@author chengwen.yi
*
*/
//class modules.test.EditParticle extends laya.ui.Component
var EditParticle=(function(_super){
	function EditParticle(id,offX,offY){
		this.particle2D=null;
		this.startStageX=NaN;
		this.startStageY=NaN;
		this.startX=NaN;
		this.startY=NaN;
		this.isDown=false;
		EditParticle.__super.call(this);
		(offX===void 0)&& (offX=0);
		(offY===void 0)&& (offY=0);
		this.mouseEnabled=true;
		this.mouseThrough=false;
		var image=new Image();
		image.loadImage("assets/textrue/test/testBomb.png");
		image.anchorX=0.5;
		image.anchorY=0.5;
		this.addChild(image);
		this.particle2D=UIFactory.ins.createParticle("lizi"+id+".part");
		this.particle2D.x=offX;
		this.particle2D.x=offY;
		this.addChild(this.particle2D);
		Laya.stage.on("mousedown",this,this.mouseDownHandler);
		Laya.stage.on("mousemove",this,this.mouseMoveHandler);
		Laya.stage.on("mouseup",this,this.mouseUpHandler);
	}

	__class(EditParticle,'modules.test.EditParticle',_super);
	var __proto=EditParticle.prototype;
	__proto.mouseDownHandler=function(e){
		this.startStageX=e.stageX;
		this.startStageY=e.stageY;
		this.startX=this.x;
		this.startY=this.y;
		this.isDown=true;
	}

	__proto.mouseMoveHandler=function(e){
		if(this.isDown){
			var endStageX=e.stageX;
			var endStageY=e.stageY;
			this.x=this.startX+(endStageX-this.startStageX);
			this.y=this.startY+(endStageY-this.startStageY);
		}
	}

	// this.rotation=Math.atan(tanA);
	__proto.mouseUpHandler=function(e){
		this.isDown=false;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		_super.prototype.destroy.call(this,destroyChild);
		Laya.stage.off("mousedown",this,this.mouseDownHandler);
		Laya.stage.off("mousemove",this,this.mouseMoveHandler);
		Laya.stage.off("mouseup",this,this.mouseUpHandler);
	}

	return EditParticle;
})(Component)


/**
*骨骼动画预览类 点击会切换下一个动作
*只供动画编译器使用
*@author chengwen.yi
*
*/
//class modules.test.EditSkeleton extends laya.ui.Component
var EditSkeleton=(function(_super){
	function EditSkeleton(id,type,onComplete){
		this._templet=null;
		this._skeleton=null;
		this._actionNames=null;
		this.actIdx=0;
		EditSkeleton.__super.call(this);
		var _$this=this;
		this.mouseEnabled=true;
		this.mouseThrough=true;
		UIFactory.ins.createSkeletonByName(id,type,Handler.create(this,function(templet,skeleton){
			if(skeleton){
				skeleton.mouseEnabled=true;
				skeleton.mouseThrough=true;
				_$this._templet=templet;
				_$this._skeleton=skeleton;
				skeleton.play(0,true);
				_$this.addChild(_$this._skeleton);
				if(onComplete){
					onComplete.runWith(this);
				}
			}
		}));
		this.on("click",this,this.clickHandler);
	}

	__class(EditSkeleton,'modules.test.EditSkeleton',_super);
	var __proto=EditSkeleton.prototype;
	__proto.play=function(nameOrIndex,loop,force,start,end,freshSkin){
		(force===void 0)&& (force=true);
		(start===void 0)&& (start=0);
		(end===void 0)&& (end=0);
		(freshSkin===void 0)&& (freshSkin=true);
		if(this._skeleton)this._skeleton.play(nameOrIndex,loop,force,start,end,freshSkin);
	}

	__proto.playbackRate=function(value){
		if(this._skeleton)this._skeleton.playbackRate(value);
	}

	__proto.clickHandler=function(){
		this.actIdx++;
		if(this.actIdx > this._templet.getAnimationCount())this.actIdx=0;
		if(this._skeleton){
			this._skeleton.play(this.actIdx,true);
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		_super.prototype.destroy.call(this,destroyChild);
		this.off("click",this,this.clickHandler);
		this._templet=null;
		this._skeleton=null;
	}

	__getset(0,__proto,'actionNames',function(){
		if(this._templet){
			if(this._actionNames==null){
				this._actionNames=[];
				for (var i=0,len=this._templet.getAnimationCount();i < len;i++){
					this._actionNames.push(this._templet.getAniNameByIndex(i));
				}
			}
			return this._actionNames;
		}
		return null;
	});

	return EditSkeleton;
})(Component)


//class laya.ui.AniSkeleton extends laya.ui.Component
var AniSkeleton=(function(_super){
	function AniSkeleton(name,type,nameOrIndex,loop,onStoppedHandler,onComplete,isLang){
		//补给
		this._templet=null;
		this._skeleton=null;
		this._nameOrIndex=null;
		this._waitNameOrIndexObj=null;
		//public static var createArr:Array=[];
		this.skurl=null;
		AniSkeleton.__super.call(this);
		var _$this=this;
		(nameOrIndex===void 0)&& (nameOrIndex=0);
		(loop===void 0)&& (loop=true);
		(isLang===void 0)&& (isLang=false);
		this.mouseEnabled=false;
		this.mouseThrough=false;
		UIFactory.ins.createSkeletonByName(name,type,Handler.create(this,function(templet,skeleton){
			if(skeleton){
				if(this.destroyed){
					skeleton.destroy(true);
					return;
				}
				_$this.skurl=templet["_skBufferUrl"];
				_$this._templet=templet;
				_$this._skeleton=skeleton;
				SkeletonTempletMgr.ins.addReference(_$this.skurl);
				if(onStoppedHandler !=null)_$this._skeleton.on("stopped",this,onStopped);
				function onStopped (evt){
					if(onStoppedHandler !=null && onStoppedHandler.method){
						if(onStoppedHandler.method.length==1){
							onStoppedHandler.runWith(_$this);
						}
						else{
							onStoppedHandler.run();
						}
					}
				}
				_$this.addChild(_$this._skeleton);
				if(_$this._waitNameOrIndexObj){
					_$this.play(_$this._waitNameOrIndexObj.nameOrIndex,_$this._waitNameOrIndexObj.loop);
					_$this._waitNameOrIndexObj=null;
				}
				else{
					if(nameOrIndex !=-1)_$this.play(nameOrIndex,loop);
				}
				if(onComplete !=null)onComplete.run();
			}
		}),isLang);
		AniSkeleton.createNum++;
	}

	__class(AniSkeleton,'laya.ui.AniSkeleton',_super);
	var __proto=AniSkeleton.prototype;
	//createArr.push(this);
	__proto.play=function(nameOrIndex,loop,force,start,end,freshSkin){
		(force===void 0)&& (force=true);
		(start===void 0)&& (start=0);
		(end===void 0)&& (end=0);
		(freshSkin===void 0)&& (freshSkin=true);
		if(this._skeleton){
			if(this._nameOrIndex !=nameOrIndex){
				this._nameOrIndex=nameOrIndex;
				this._skeleton.play(nameOrIndex,loop,force,start,end,freshSkin);
			}
		}
		else{
			this._waitNameOrIndexObj={nameOrIndex:nameOrIndex,loop:loop};
		}
	}

	__proto.playSkeleton=function(nameOrIndex,loop,force,start,end,freshSkin){
		(force===void 0)&& (force=true);
		(start===void 0)&& (start=0);
		(end===void 0)&& (end=0);
		(freshSkin===void 0)&& (freshSkin=true);
		if(this._skeleton){
			this._skeleton.play(nameOrIndex,loop,force,start,end,freshSkin);
		}
	}

	__proto.stop=function(){
		if(this._skeleton){
			this._skeleton.stop();
		}
	}

	// }
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this._templet=null;
		if(this._skeleton){
			this._skeleton.destroy();
			this._skeleton=null;
			SkeletonTempletMgr.ins.removeReference(this.skurl);
		}
		this._nameOrIndex=null;
		this._waitNameOrIndexObj=null;
		if(!this.destroyed)AniSkeleton.createNum--;
		_super.prototype.destroy.call(this,destroyChild);
	}

	// }
	__getset(0,__proto,'nameOrIndex',function(){
		return this._nameOrIndex;
	});

	AniSkeleton.RoleShow="roleshow";
	AniSkeleton.Role="role";
	AniSkeleton.Weapon="weapon";
	AniSkeleton.Npc="npc";
	AniSkeleton.Obj="obj";
	AniSkeleton.Bomb="bomb";
	AniSkeleton.Blast="blast";
	AniSkeleton.Buff="buff";
	AniSkeleton.UI="ui";
	AniSkeleton.Effect="effect";
	AniSkeleton.Supply="supply";
	AniSkeleton.createNum=0;
	return AniSkeleton;
})(Component)


//class laya.ui.Layer extends laya.ui.Component
var Layer=(function(_super){
	function Layer(layerName){
		Layer.__super.call(this);
		if(layerName)this.name=layerName;
		this.width=ResizeMgr.bestFitWidth;
		this.height=ResizeMgr.bestFitHeight;
		this.mouseThrough=true;
	}

	__class(Layer,'laya.ui.Layer',_super);
	var __proto=Layer.prototype;
	Laya.imps(__proto,{"laya.ui.ILayer":true})
	__proto.getLastView=function(){
		return this.numChildren > 0 ? this.getChildAt(this.numChildren-1):null;
	}

	__proto.getLastViewType=function(){
		var view=this.getLastView();
		if((view instanceof laya.ui.BaseView )){
			return (view).viewType;
		}
		else{
			return "";
		}
	}

	return Layer;
})(Component)


//class modules.vip.view.BarrageItemView extends laya.display.Text
var BarrageItemView=(function(_super){
	function BarrageItemView(){
		this._data=null;
		BarrageItemView.__super.call(this);
	}

	__class(BarrageItemView,'modules.vip.view.BarrageItemView',_super);
	var __proto=BarrageItemView.prototype;
	__proto.updateView=function(){
		if(this._data && Boolean(this._data.param)){
			var params=this._data.param.split(",");
			var opType=int(params.shift());
			switch (opType){
				case 10000:{
						if (int(params[2])==11){
							var campaignVO=CampaignModel.getConfigData(int(params[3]));
							this._data.content=LanguageMgr.Ins.GetLan(9050008,"",campaignVO.Name+"-"+LanguageMgr.Ins.GetLan(CampaignConst.DifficultLan[campaignVO.Difficult]));
						}
						else{
							this._data.content=LanguageMgr.Ins.GetLan(9050008,"",LanguageMgr.Ins.GetLan(14300178));
						}
						break ;
					}
				}
		}
		this.text="【VIP"+this._data.sendPlayer.vipLevel+"】"+"【"+this._data.sendPlayer.nickName+"】"+BarrageUtils.replaceWithEmoji(this._data.content);
		this.x=ResizeMgr.bestFitWidth;
		this.y=BarrageUtils.getHeight();
		this.fontSize=BarrageMgr.ins.model.getFontSize(this._data.sendPlayer.vipLevel);
		this.color=BarrageMgr.ins.model.getFontColor(this._data.sendPlayer.vipLevel);
		this.cacheAsBitmap=true;
	}

	__proto.update=function(){
		this.x=this.x-BarrageModel.SPEED;
		if(this.x+this.width < 0){
			this.destroy();
			EventMgr.ins.event("RemoveChatMsg");
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		_super.prototype.destroy.call(this,destroyChild);
		this._data=null;
	}

	__getset(0,__proto,'data',null,function($data){
		this._data=$data;
		this.updateView();
	});

	return BarrageItemView;
})(Text)


/**
*文本控件 可以开启HTML模式
*@author chengwen.yi
*
*/
//class laya.ui.GText extends laya.ui.Component
var GText=(function(_super){
	function GText(text,isHtmlText){
		this._tf=null;
		this._html=null;
		this._isHtmlText=false;
		this.isLayaIDE=false;
		//仅在编译代码导出到IDE才设置为true
		this.__text="";
		this._align="left";
		this._underlineColor=null;
		this._overflow=Text.VISIBLE;
		(text===void 0)&& (text="");
		(isHtmlText===void 0)&& (isHtmlText=false);
		GText.__super.call(this);
		Font.defaultColor=Styles.labelColor;
		this.text=text;
		this.isHtmlText=isHtmlText;
	}

	__class(GText,'laya.ui.GText',_super);
	var __proto=GText.prototype;
	/**@inheritDoc */
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		_super.prototype.destroy.call(this,destroyChild);
		this._tf=null;
		this._html=null;
	}

	/**@inheritDoc */
	__proto.createChildren=function(){
		if(this._isHtmlText){
			this.addChild(this._html=new HTMLDivElement());
		}
		else{
			this.addChild(this._tf=new Text());
		}
	}

	__proto.refreshText=function(){
		this._html.innerHTML=this.__text;
		switch(this._align){
			case "left":
				this._html.x=0;
				break ;
			case "center":
				this._html.x=(this.width-this._html.contextWidth)*.5;
				break ;
			case "right":
				this._html.x=this.width-this._html.contextWidth;
				break ;
			}
	}

	/**@copy laya.display.Text#changeText()
	**/
	__proto.changeText=function(text){
		if(this._isHtmlText){
			this._html.innerHTML=text;
		}
		else {
			this._tf.changeText(text);
		}
	}

	__proto.updateValign=function(value){
		if(value=="middle"){
			this._html.y=(this.height-this._html.contextHeight)/2;
		}
		else if(value=="bottom"){
			this._html.y=this.height-this._html.contextHeight;
		}
		else{
			this._html.y=0;
		}
	}

	/**
	*@copy laya.display.Text#underline
	*/
	/**
	*@copy laya.display.Text#underline
	*/
	__getset(0,__proto,'underline',function(){
		return this._isHtmlText ? this._html.style.underLine :this._tf.underline;
		},function(value){
		if(this._isHtmlText){
			this._html.style.underLine=value ? 0 :1;
		}
		else{
			this._tf.underline=value;
		}
	});

	/**HTML */
	__getset(0,__proto,'contextHeight',function(){
		return this._html.contextHeight;
	});

	__getset(0,__proto,'isHtmlText',function(){
		return this._isHtmlText;
		},function(value){
		if(this._isHtmlText !=value){
			var tempValue={};
			tempValue.text=this.text;
			tempValue.wordWrap=this.wordWrap;
			tempValue.color=this.color;
			tempValue.font=this.font;
			tempValue.align=this.align;
			tempValue.valign=this.valign;
			tempValue.bold=this.bold;
			tempValue.italic=this.italic;
			tempValue.leading=this.leading;
			tempValue.fontSize=this.fontSize;
			tempValue.padding=this.padding;
			tempValue.bgColor=this.bgColor;
			tempValue.borderColor=this.borderColor;
			tempValue.stroke=this.stroke;
			tempValue.strokeColor=this.strokeColor;
			tempValue.width=this.width;
			tempValue.height=this.height;
			tempValue.overflow=this.overflow;
			tempValue.underline=this.underline;
			tempValue.underlineColor=this.underlineColor;
			if(this._tf){
				this.removeChild(this._tf);
				this._tf=null;
			}
			if(this._html){
				this.removeChild(this._html);
				this._html=null;
			}
			if(value){
				this.addChild(this._html=new HTMLDivElement());
			}
			else{
				this.addChild(this._tf=new Text());
			}
			this._isHtmlText=value;
			this.text=tempValue.text;
			this.wordWrap=tempValue.wordWrap;
			this.color=tempValue.color;
			this.font=tempValue.font;
			this.align=tempValue.align;
			this.valign=tempValue.valign;
			this.bold=tempValue.bold;
			this.italic=tempValue.italic;
			this.leading=tempValue.leading;
			this.fontSize=tempValue.fontSize;
			this.padding=tempValue.padding;
			this.bgColor=tempValue.bgColor;
			this.borderColor=tempValue.borderColor;
			this.stroke=tempValue.stroke;
			this.strokeColor=tempValue.strokeColor;
			this.width=tempValue.width;
			this.height=tempValue.height;
			this.overflow=tempValue.overflow;
			this.underline=tempValue.underline;
			this.underlineColor=tempValue.underlineColor;
		}
	});

	/**
	*@copy laya.display.Text#align
	*/
	__getset(0,__proto,'align',function(){
		return this._align;
		},function(value){
		this._align=value;
		if(this._isHtmlText){
			this.refreshText();
		}
		else{
			this._tf.align=value;
		}
	});

	/**
	*当前文本内容字符串。
	*@see laya.display.Text.text
	*/
	__getset(0,__proto,'text',function(){
		return this.__text;
		},function(value){
		value=UIUtils.adptString(value+"");
		this.__text=value;
		if(this._isHtmlText){
			this.refreshText()
		}
		else if (this._tf.text !=value){
			this._tf.text=value;
			this.event("change");
			if (!this._width || !this._height)this.onCompResize();
		}
	});

	/**
	*@copy laya.display.Text#wordWrap
	*/
	/**
	*@copy laya.display.Text#wordWrap
	*/
	__getset(0,__proto,'wordWrap',function(){
		return this._isHtmlText ? this._html.style.wordWrap :this._tf.wordWrap;
		},function(value){
		if(this._isHtmlText){
			this._html.style.wordWrap=value;
		}
		else{
			this._tf.wordWrap=value;
		}
	});

	/**
	*@copy laya.display.Text#strokeColor
	*/
	__getset(0,__proto,'strokeColor',function(){
		return this._isHtmlText ? this._html.style.strokeColor :this._tf.strokeColor;
		},function(value){
		if(this._isHtmlText){
			this._html.style.strokeColor=value;
			this.refreshText();
		}
		else{
			this._tf.strokeColor=value;
		}
	});

	/**HTML */
	__getset(0,__proto,'contextWidth',function(){
		return this._html.contextWidth;
	});

	/**
	*@copy laya.display.Text#font
	*/
	__getset(0,__proto,'font',function(){
		return this._isHtmlText ? this._html.style.font :this._tf.font;
		},function(value){
		if(this._isHtmlText){
			this._html.style.font=value;
			this.refreshText();
		}
		else{
			this._tf.font=value;
		}
	});

	/**@inheritDoc */
	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		this._dataSource=value;
		if ((typeof value=='number')|| (typeof value=='string'))this.text=value+"";
		else Laya.superSet(Component,this,'dataSource',value);
	});

	/**
	*@copy laya.display.Text#color
	*/
	__getset(0,__proto,'color',function(){
		return this._isHtmlText ? this._html.style.color :this._tf.color;
		},function(value){
		if(this._isHtmlText){
			this._html.style.color=value;
			this.refreshText();
		}
		else{
			this._tf.color=value;
		}
	});

	/**
	*@copy laya.display.Text#valign
	*/
	__getset(0,__proto,'valign',function(){
		return this._isHtmlText ? this._html.style.valign :this._tf.valign;
		},function(value){
		if(this._isHtmlText){
			this._html.style.align=value;
			Laya.timer.frameOnce(2,this,this.updateValign,[value]);
		}
		else{
			this._tf.valign=value;
		}
	});

	/**非HTML */
	__getset(0,__proto,'textWidth',function(){
		return this._tf.textWidth;
	});

	/**
	*<p>边距信息</p>
	*<p>"上边距，右边距，下边距 , 左边距（边距以像素为单位）"</p>
	*@see laya.display.Text.padding
	*/
	__getset(0,__proto,'padding',function(){
		return this._isHtmlText ? this._html.style.padding.join(","):this._tf.padding.join(",");
		},function(value){
		if(this._isHtmlText){
			this._html.style.padding=UIUtils.fillArray(Styles.labelPadding,value,Number);;
		}
		else{
			this._tf.padding=UIUtils.fillArray(Styles.labelPadding,value,Number);
		}
	});

	/**
	*@copy laya.display.Text#bold
	*/
	__getset(0,__proto,'bold',function(){
		return this._isHtmlText ? this._html.style.bold :this._tf.bold;
		},function(value){
		if(this._isHtmlText){
			this._html.style.bold=value;
			this.refreshText();
		}
		else{
			this._tf.bold=value;
		}
	});

	/**
	*@copy laya.display.Text#italic
	*/
	__getset(0,__proto,'italic',function(){
		return this._isHtmlText ? this._html.style.italic :this._tf.italic;
		},function(value){
		if(this._isHtmlText){
			this._html.style.italic=value;
			this.refreshText();
		}
		else{
			this._tf.italic=value;
		}
	});

	/**
	*@copy laya.display.Text#leading
	*/
	__getset(0,__proto,'leading',function(){
		return this._isHtmlText ? this._html.style.leading :this._tf.leading;
		},function(value){
		if(this._isHtmlText){
			this._html.style.leading=value;
		}
		else{
			this._tf.leading=value;
		}
	});

	/**
	*@copy laya.display.Text#fontSize
	*/
	__getset(0,__proto,'fontSize',function(){
		return this._isHtmlText ? this._html.style.fontSize :this._tf.fontSize;
		},function(value){
		if(this._isHtmlText){
			this._html.style.fontSize=value;
			this.refreshText();
		}
		else{
			this._tf.fontSize=value;
		}
	});

	/**
	*@copy laya.display.Text#bgColor
	*/
	__getset(0,__proto,'bgColor',function(){
		return this._isHtmlText ? this._html.style.backgroundColor :this._tf.bgColor
		},function(value){
		if(this._isHtmlText){
			this._html.style.backgroundColor=value;
		}
		else{
			this._tf.bgColor=value;
		}
	});

	/**
	*@copy laya.display.Text#borderColor
	*/
	__getset(0,__proto,'borderColor',function(){
		return this._isHtmlText ? this._html.style.borderColor :this._tf.borderColor
		},function(value){
		if(this._isHtmlText){
			this._html.style.borderColor=value;
		}
		else{
			this._tf.borderColor=value;
		}
	});

	/**
	*@copy laya.display.Text#stroke
	*/
	__getset(0,__proto,'stroke',function(){
		return this._isHtmlText ? this._html.style.stroke :this._tf.stroke;
		},function(value){
		if(this._isHtmlText){
			this._html.style.stroke=value;
			this.refreshText();
		}
		else{
			this._tf.stroke=value;
		}
	});

	/**
	*@inheritDoc
	*/
	__getset(0,__proto,'measureWidth',function(){
		return this._isHtmlText ? this._html.width :this._tf.width;
	});

	/**
	*@inheritDoc
	*/
	__getset(0,__proto,'measureHeight',function(){
		return this._isHtmlText ? this._html.height :this._tf.height;
	});

	/**
	*@inheritDoc
	*/
	/**
	*@inheritDoc
	*/
	__getset(0,__proto,'width',function(){
		if (this._width || (this._tf &&this._tf.text)|| (this._html && this._html.text))return Laya.superGet(Component,this,'width');
		return 0;
		},function(value){
		Laya.superSet(Component,this,'width',value);
		if(this._isHtmlText){
			this._html.width=value;
		}
		else{
			this._tf.width=value;
		}
	});

	/**
	*@inheritDoc
	*/
	/**
	*@inheritDoc
	*/
	__getset(0,__proto,'height',function(){
		if (this._height || (this._tf &&this._tf.text)|| (this._html && this._html.text))return Laya.superGet(Component,this,'height');
		return 0;
		},function(value){
		Laya.superSet(Component,this,'height',value);
		if(this._isHtmlText){
			this._html.height=value;
		}
		else{
			this._tf.height=value;
		}
	});

	/**
	*@copy laya.display.Text#overflow
	*/
	/**
	*@copy laya.display.Text#overflow
	*/
	__getset(0,__proto,'overflow',function(){
		return this._overflow;
		},function(value){
		this._overflow=value;
		if(this._isHtmlText){
		}
		else{
			this._tf.overflow=value;
		}
	});

	/**
	*@copy laya.display.Text#underlineColor
	*/
	/**
	*@copy laya.display.Text#underlineColor
	*/
	__getset(0,__proto,'underlineColor',function(){
		return this._isHtmlText ? this._underlineColor :this._tf.underlineColor;
		},function(value){
		this._underlineColor=value;
		if(this._isHtmlText){
		}
		else{
			this._tf.underlineColor=value;
		}
	});

	return GText;
})(Component)


/**
*测试导弹
*@author huyouwei
*/
//class modules.battle.bomb.NormalBomb extends modules.battle.bomb.BaseBomb
var NormalBomb=(function(_super){
	function NormalBomb(bombId){
		this.bombSkeleton=null;
		NormalBomb.__super.call(this,bombId);
	}

	__class(NormalBomb,'modules.battle.bomb.NormalBomb',_super);
	var __proto=NormalBomb.prototype;
	__proto.init=function(data){
		var _$this=this;
		_super.prototype.init.call(this,data);
		var config=BombModel.getBombPerformanceConfigByBombId(this.bombId);
		if(config){
			this._blastName=config.ExplodePath1;
			if(config.MissilePath1=="0")
				return;
			var bombName;
			var flyArgument;
			var bool=false;
			if(config.LineType==0 && !UIFactory.ins.isExistSkeletonResByName(config.MissilePath1,"bomb")){
				var bombPerformanceVO=BombModel.getBombPerformanceConfigByBombId(3000002);
				bombName="bomb";
				flyArgument=bombPerformanceVO.FlyArgument;
				bool=true;
			}
			else{
				bombName=config.MissilePath1;
				flyArgument=config.FlyArgument;
				bool=false;
			};
			var aniSkeleton=UIFactory.ins.createGAnimation(bombName,"bombframe",null,false);
			aniSkeleton.scale(1 *this.trans(),1);
			this.bombNode.addChild(aniSkeleton);
			this.bombSkeleton=aniSkeleton;
			if(!bool || UrlParam.PARAMS["PLID"] !="wx")this.showParticle(flyArgument);
			if(bool){
				UIFactory.ins.createGAnimation(config.MissilePath1,"bombframe",null,true,
				null,
				Handler.create(this,function(aniSkeleton2){
					if(_$this.bombSkeleton){
						_$this.bombSkeleton.removeSelf();
						_$this.bombSkeleton.destroy(true);
						_$this.bombSkeleton=null;
					}
					this.bombNode.destroyChildren();
					this.removeChild(_$this.bombNode);
					this.destroyChildren();
					this.addChild(_$this.bombNode);
					aniSkeleton2.scale(1 *_$this.trans(),1);
					this.bombNode.addChild(aniSkeleton2);
					_$this.bombSkeleton=aniSkeleton2;
					_$this.showParticle(config.FlyArgument);
				}));
			}
		}
	}

	__proto.showParticle=function(str){
		if(!this.destroyed&&this.parent){
			if(str=="0")return;
			var arr=str.split(";");
			for (var i=0;i < arr.length;i++){
				var str1=arr [i];
				if(str1.indexOf("|")!=-1){
					var particleName=str1.split("|")[0]+".part";
					var part=UIFactory.ins.createParticle(particleName);
					this.addChild(part);
				}
			}
		}
		else{
			console.log("问题找到了~~~~~~~~~~~~~~~~~~~~");
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(!this.destroyed){
			if(this.bombSkeleton){
				this.bombSkeleton.removeSelf();
				this.bombSkeleton.destroy(true);
				this.bombSkeleton=null;
			}
			_super.prototype.destroy.call(this,destroyChild);
		}
	}

	return NormalBomb;
})(BaseBomb)


//class modules.battle.bomb.TyreBomb extends modules.battle.bomb.BaseBomb
var TyreBomb=(function(_super){
	function TyreBomb(bombId){
		this.moveDir=0;
		//朝左边
		this.moveTween=null;
		this._$5_speed=150;
		this.frameRate=30;
		this.movetime=0;
		TyreBomb.__super.call(this,bombId);
		var config=BombModel.getBombPerformanceConfigByBombId(bombId);
		this._blastName=config.ExplodePath1;
	}

	__class(TyreBomb,'modules.battle.bomb.TyreBomb',_super);
	var __proto=TyreBomb.prototype;
	__proto.move=function(){
		SoundMgr.instance.playSound(4006045);
		this.moveDir=this.dir;
		Laya.timer.frameLoop(1,this,this._autoMove);
		var aniSkeleton=UIFactory.ins.createGAnimation("bomb13walk","bombframe",null,true);
		aniSkeleton.scale(1 *this.trans(),1);
		this.bombNode.addChild(aniSkeleton);
		aniSkeleton.y=-60;
	}

	__proto._autoMove=function(){
		var dx=1/this.frameRate *this._$5_speed *this.moveDir;
		this.x=this.x+dx;
		var point=TileReader.findNotEmptyPoint2(Math.floor(this.x),Math.floor(this.screenheight-(this.y-10)));
		this.y=this.screenheight-point.y;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		_super.prototype.destroy.call(this,destroyChild);
		Laya.timer.clear(this,this._autoMove);
	}

	TyreBomb.DIR_RIGHT=1;
	TyreBomb.DIR_LEFT=-1;
	return TyreBomb;
})(BaseBomb)


//class modules.chat.item.ChatBriefListItem extends laya.ui.Box
var ChatBriefListItem=(function(_super){
	function ChatBriefListItem(tfWidth){
		this.textfiled=null;
		this.tfWidth=0;
		this._channel=null;
		ChatBriefListItem.__super.call(this);
		this.tfWidth=tfWidth;
	}

	__class(ChatBriefListItem,'modules.chat.item.ChatBriefListItem',_super);
	var __proto=ChatBriefListItem.prototype;
	__proto.initialize=function(){
		laya.ui.Component.prototype.initialize.call(this);
		this.textfiled=new HTMLDivElement();
		this._channel=new NImage;
		this.addChild(this.textfiled);
		this.addChild(this._channel);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.textfiled=null;
		this._channel=null;
		laya.ui.Component.prototype.destroy.call(this);
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(Box,this,'dataSource',value);
		var data=value;
		var type=data.type;
		var html;
		this.textfiled.width=this.tfWidth;
		this._channel.x=this.textfiled.x=14;
		this._channel.y=0;
		this.textfiled.style.fontFamily="SimHei";
		this.textfiled.style.fontSize=19;
		this.textfiled.style.valign="top";
		this.textfiled.style.lineHeight=30;
		this._channel.skin=null;
		if (ChatConst.COLOR_SETTING[type]){
			this.textfiled.style.color=ChatConst.COLOR_SETTING[type];
		}
		else{
			this.textfiled.style.color=ChatConst.COLOR_SETTING['system'];
		}
		if (type > 9050000 || type==ChatConst.SYSTEM_TYPE){
			this.textfiled.y=0;
			this._channel.skin='assets/textrue/language/'+LanguageMgr.Ins.country+'/chat/ui_biaoqian_xitong.png';
			html="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
			if(UrlParam.PARAMS["PLID"]=="wx"){
				html+="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
			};
			var h2;
			if (type==ChatConst.SYSTEM_TYPE){
				h2=LanguageMgr.Ins.GetLan.apply(LanguageMgr.Ins,[data.content].concat(data.param.split(",")));
			}
			else if (type==9050004){
				h2=data.content;
			}
			else{
				h2=LanguageMgr.Ins.GetLan(type+'');
				var arrs=data.content.split(',');
				var itemVO;
				var skillPerformanceVO;
				var value1='<font color="#10e0e2">'+arrs[0]+'</font>';
				var value2='';
				var value3=''
				switch (type){
					case 9050003:{
							skillPerformanceVO=SkillModel.getSkillPerformanceBySkillId((SkillModel.getSkillConfigData(arrs[1])).Display);
							value2=LanguageMgr.Ins.GetLan(skillPerformanceVO.NameDisplay+'');
							value3=arrs[2];
							break ;
						}
					default :{
							itemVO=ItemModel.getItemConfigData(arrs[1]);
							value2=LanguageMgr.Ins.GetLan(itemVO.Name+'');
							break ;
						}
					}
				h2=StringUtils.formate(h2,value1,value2,value3);
			}
			html+=h2;
			try {
				this.textfiled.innerHTML=html;
				}catch(e){
				this.textfiled.innerHTML="";
				console.log(">>>>>>>>HTML错误:",html);
			}
		}
		else{
			var paddingTop='0';
			this.textfiled.y=0;
			var icon=null;
			switch (type){
				case 1:{
						icon=URL.rootPath+'assets/textrue/language/'+LanguageMgr.Ins.country+'/chat/ui_biaoqian_shijie.png';
						break ;
					}
				case 5:{
						icon=URL.rootPath+'assets/textrue/language/'+LanguageMgr.Ins.country+'/chat/ui_biaoqian_gonghui.png';
						break ;
					}
				case 3:{
						icon=URL.rootPath+'assets/textrue/language/'+LanguageMgr.Ins.country+'/chat/ui_fangjian.png';
						break ;
					}
				case 4:{
						icon=URL.rootPath+'assets/textrue/language/'+LanguageMgr.Ins.country+'/chat/ui_biaoqian_zhangdou.png';
						break ;
					}
				};
			var name;
			if (data.sendPlayer && Boolean(data.sendPlayer.nickName)){
				name='[ '+data.sendPlayer.nickName+' ]';
			}
			else{
				name='';
			}
			html='';
			if (icon){
				html+="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
				if(UrlParam.PARAMS["PLID"]=="wx"){
					html+="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
				}
				this._channel.skin=icon;
			};
			var content;
			if (!Boolean(data.param)){
				content=ChatUtils.onGetChatInfoZH(data.content,{width:"30px",height:"30px",paddingTop:paddingTop,imgPaddingTop:paddingTop});
			}
			else{
				var params=data.param.split(",");
				var opType=int(params.shift());
				switch (opType){
					case 10000:{
							if (int(params[2])==11){
								var campaignVO=CampaignModel.getConfigData(int(params[3]));
								content=LanguageMgr.Ins.GetLan(9050008,"",campaignVO.Name+"-"+LanguageMgr.Ins.GetLan(CampaignConst.DifficultLan[campaignVO.Difficult]))+"</span>";
							}
							else{
								content=LanguageMgr.Ins.GetLan(9050008,"",LanguageMgr.Ins.GetLan(14300178))+"</span>";
							}
							content+='<font color="#10e0e2">'+LanguageMgr.Ins.GetLan(14300176)+'</font>'+"<span style='padding:"+paddingTop+" 0 0 0'>";
							break ;
						}
					default :
						content=data.content;
						break ;
					}
				}{
				if (name){
					if (content.indexOf("src")!=-1){
						paddingTop="-5";
						}else{
						paddingTop="0";
					}
					html+="<span style='color:#10e0e2;padding:"+paddingTop+" 0 0 0'>";
					html+=name;
					html+="</span>";
				}
				html+="<span style='padding:"+paddingTop+" 0 0 0'>";
				html+=String.fromCharCode(0x3000);
				html+="</span>";
				html=html.replace(String.fromCharCode(0x3000),content);
				try {
					this.textfiled.innerHTML=html;
					}catch(e){
					this.textfiled.innerHTML="";
					console.log(">>>>>>>>HTML错误:",html);
				}
			}
		}
		this.height=this.textfiled.contextHeight;
	});

	return ChatBriefListItem;
})(Box)


/**
*战斗单元
*@author huyouwei
*/
//class modules.battle.part.role.Fighter extends modules.battle.part.BasePart
var Fighter=(function(_super){
	function Fighter(){
		this._type=0;
		this.isDrop=false;
		this.moveDir=-1;
		this.screenwidth=0;
		this.screenheight=0;
		this.moveTween=null;
		this.moveSpeed=50;
		this.frameRate=1.0/30.0;
		this.vy=NaN;
		this.vx=NaN;
		this.jifeix=NaN;
		this.jifeiy=NaN;
		this.ex=0;
		this.ey=0;
		this.handler=null;
		this.updateX=false;
		this.updateY=false;
		this.livingId=0;
		this.hp=0;
		this.maxHp=-1;
		this.hdHp=0;
		//护盾HP
		this.autoMovex=NaN;
		this.autoMovey=NaN;
		this.bodyRotation=0;
		this.anglePos1=null;
		this.anglePos2=null;
		this.isHide=false;
		this.bufferList=[];
		this.bufferEffectList=[];
		this.bufferIconList=[];
		this.damages=[];
		this.collideNode=null;
		this.isLive=true;
		this._collideArea={temp:null};
		this.idx=0;
		this.skeleton=null;
		this.acts=null;
		this.touchArea=null;
		this.isDestroy=false;
		this.cutHpindex=0;
		this.perHp=0;
		Fighter.__super.call(this);
		this.side=Fighter.DIR_RIGHT;
	}

	__class(Fighter,'modules.battle.part.role.Fighter',_super);
	var __proto=Fighter.prototype;
	Laya.imps(__proto,{"modules.battle.part.BaseCollision":true})
	__proto.init=function(screenwidth,screenheight,moveDir){
		this.screenwidth=screenwidth;
		this.screenheight=screenheight;
		this.moveDir=moveDir;
		if(moveDir==Fighter.DIR_LEFT){
			this.acts=[0,2,3];
			}else{
			this.acts=[1,2,4];
		}
	}

	__proto.initBaseInfo=function(info){}
	__proto.initView=function(msg,screenwidth,screenheight){}
	__proto.refresh=function(mapPlayerMsg){}
	__proto.resetPath=function(pos,isDrop,handler){
		(isDrop===void 0)&& (isDrop=false);
		this.isDrop=isDrop;
		if(this.isDrop){
			Laya.timer.clear(this,this._autoMove);
			Laya.timer.clear(this,this._jifei);
			this.stop();
			this.calcTween(this.x,this.y,pos.x,pos.y,"",Handler.create(this,this.resetPathComplete,[pos.x,pos.y,handler]),isDrop);
		}
		else{
			this.resetPathComplete(pos.x,pos.y,handler);
		}
	}

	__proto.resetPathComplete=function(x,y,handler){
		this.x=x;
		this.y=y;
		this.isDrop=false;
		this.checkAngle(true);
		if(handler){
			handler.run();
		}
		EventMgr.ins.event("refreshdistance");
	}

	__proto.getNextPos=function(step){
		(step===void 0)&& (step=1);
		var tox=0;
		var toy=0;
		var point=null;
		if(this.moveDir==Fighter.DIR_RIGHT){
			tox=this.x+step;
			toy=this.y-10;
			point=TileReader.findNotEmptyPoint2(tox,this.screenheight-toy);
			}else if(this.moveDir==Fighter.DIR_LEFT){
			tox=this.x-step;
			toy=this.y-10;
			point=TileReader.findNotEmptyPoint2(tox,this.screenheight-toy);
		}
		if(point.x !=-1 && point.y !=-1){
			point.y=this.screenheight-point.y
			if(point.y-this.y > 0 && Math.abs(point.y-this.y)>=10){
				this.onHandleDrop(point);
				return new Point(-1,-1);
			}
			return point;
			}else{
			point.x=tox;
			point.y=toy;
			this.onHandleDrop(point);
		}
		return point;
	}

	__proto.onHandleDrop=function(point){}
	__proto.checkAngle=function(force){
		(force===void 0)&& (force=false);
		if(force){
			this.calcAngle();
			return;
		};
		var dx=this.x-this.anglePos1.x;
		var dy=this.y-this.anglePos1.y;
		var len=Math.floor(Math.sqrt(dx *dx+dy *dy));
		if(len <=5){
			this.calcAngle();
			return;
		}
		dx=this.x-this.anglePos2.x;
		dy=this.y-this.anglePos2.y;
		len=Math.floor(Math.sqrt(dx *dx+dy *dy));
		if(len <=5){
			this.calcAngle();
			return;
		}
	}

	__proto.calcAngle=function(){
		var p1=new Point(this.x,this.y);
		var p2=new Point(this.x,this.y);
		for(var i=0;i < 5;i++){
			var tox=this.x+i;
			var toy=this.y-5;
			var point=TileReader.findNotEmptyPoint2(tox,this.screenheight-toy);
			if(point.x==-1 && point.y==-1){
				break ;
			}
			else{
				p1.x=point.x;
				p1.y=this.screenheight-point.y;
			}
		}
		for(var i=0;i < 5;i++){
			var tox=this.x-i;
			var toy=this.y-5;
			var point=TileReader.findNotEmptyPoint2(tox,this.screenheight-toy);
			if(point.x==-1 && point.y==-1){
				break ;
			}
			else{
				p2.x=point.x;
				p2.y=this.screenheight-point.y;
			}
		}
		this.anglePos1=p1;
		this.anglePos2=p2;
		var dx=p1.x-p2.x;
		var dy=p1.y-p2.y;
		var len=Math.sqrt(Math.pow(dx,2)+Math.pow(dy,2));
		var cos=dx/len;
		var deg=Math.acos(cos);
		var K=MathTools$1.calcK(p1.x,p1.y,p2.x,p2.y);
		var a=1;
		if(K < 0)a=-1;
		var rotation=deg *180/Math.PI *a;
		this.bodyRotation=rotation *-1;
		this.changeRotation(rotation);
	}

	__proto.changeRotation=function(rotation){}
	__proto.autoMove=function(x,y,dir){
		this.autoMovex=x;
		this.autoMovey=y;
		this.moveDir=dir;
		this.turnRight(dir==Fighter.DIR_RIGHT);
		Laya.timer.frameLoop(1,this,this._autoMove,[dir],true);
	}

	//trace("_autoMove ",autoMovex,autoMovey);
	__proto.walk=function(){}
	__proto._autoMove=function(dir){
		if (this.isDrop){
			Laya.timer.clear(this,this._autoMove);
			this.stop();
			return
		};
		var _dx=this.x-this.autoMovex;
		var _dy=this.y-this.autoMovey;
		this.checkAngle();
		this.walk();
		if(Math.abs(_dx)<=3){
			Laya.timer.clear(this,this._autoMove);
			this.stop();
			this.x=this.autoMovex;
			this.y=this.autoMovey;
			EventMgr.ins.event("ROLE_MOVE_OVER");
			return;
		};
		var _dir=this.x-this.autoMovex > 0?Fighter.DIR_LEFT:Fighter.DIR_RIGHT;
		var dx=this.frameRate *60 *_dir;
		this.x=this.x+dx;
		var point=TileReader.findNotEmptyPoint2(Math.floor(this.x),Math.floor(this.screenheight-(this.y-10)));
		this.y=this.screenheight-point.y;
		EventMgr.ins.event("refreshdistance");
	}

	__proto._move=function(dist,dir,callback){
		this.moveDir=dir;
		this.moveTween=this.calcTween(this.x,this.y,dist.x,dist.y,"",callback);
		this.turnRight(dir==Fighter.DIR_RIGHT);
	}

	__proto.turnRight=function(isTurnRight){}
	__proto.calcTween=function(curX,curY,toX,toY,easeName,complete,isDrop){
		(easeName===void 0)&& (easeName="");
		(isDrop===void 0)&& (isDrop=false);
		var len=Math.sqrt(Math.pow(curX-toX,2)+Math.pow(curY-toY,2));
		var _speed=this.moveSpeed;
		if(isDrop){
			_speed=_speed *2;
		};
		var dt=len / _speed;
		var ease=Ease[easeName];
		return Tween.to(this,{x:toX,y:toY},dt *1000,ease,complete,0,true,true);
	}

	__proto.stop=function(){
		if(this.moveTween){
			Tween.clear(this.moveTween);
			this.moveTween=null;
		}
		EventMgr.ins.event("refreshdistance");
	}

	__proto.getAy=function(){
		return-700;
	}

	__proto.getAx=function(){
		return 0;
	}

	__proto.updateVx=function(dt){
		var ax=this.getAx();
		this.vx=this.vx+ax *dt;
	}

	__proto.updateVy=function(dt){
		var ay=this.getAy();
		this.vy=this.vy+ay *dt;
	}

	__proto._jifei=function(){
		if (this.isDrop){
			Laya.timer.clear(this,this._jifei);
			return
		};
		var t=1/30;
		var dx=this.x-this.ex;
		var dy=this.y-(this.screenheight-this.ey)-60;
		if(Math.abs(dx)<=10)this.updateX=false;
		if(Math.abs(dy)<=10)this.updateY=false;
		if(this.updateX){
			this.updateVx(t);
			this.jifeix=this.jifeix+this.vx *t;
			this.x=this.jifeix;
		}
		if(this.updateY){
			this.updateVy(t);
			this.jifeiy=this.jifeiy+this.vy *t;
			this.y=this.screenheight-this.jifeiy;
		}
		if(!this.updateX && !this.updateY){
			this.x=this.ex;
			this.y=this.screenheight-this.ey;
			Laya.timer.clear(this,this._jifei);
			this.checkAngle(true)
			if(this.handler){
				this.handler.run();
			}
		}
	}

	__proto.jifei=function(dir,ox,oy,vx,vy,ex,ey,handler){
		this.x=ox;
		this.y=this.screenheight-oy;
		this.jifeix=ox;
		this.jifeiy=oy;
		this.vx=vx;
		this.vy=vy;
		this.ex=ex;
		this.ey=ey;
		this.handler=handler;
		this.updateX=true;
		this.updateY=true;
		Laya.timer.frameLoop(1,this,this._jifei);
	}

	__proto.die=function(){
		if(this.isLive){
			EventMgr.ins.event("fighter_die",[this]);
			this.isLive=false;
		}
	}

	__proto.launch=function(dir){
		this.moveDir=dir;
		this.turnRight(this.moveDir==Fighter.DIR_RIGHT);
	}

	__proto.syncState=function(battleSyncPlayerStateMsg){
		this.syncHp(battleSyncPlayerStateMsg.currentHP,this.hdHp);
		this.addHp(battleSyncPlayerStateMsg.value,false);
		this.checkState(battleSyncPlayerStateMsg.type);
	}

	__proto.syncHp=function(currentHP,hdHp){
		if(!this.isLive)
			return;
		this.hp=currentHP>0?currentHP:0;
		this.hdHp=hdHp>0?hdHp:0;
	}

	__proto.addHp=function(value,isCritcal){
		if(value > 0){
			this.showAddHp(value);
			var temp=this.hp+value;
			this.syncHp(temp,this.hdHp);
			}else{
			var isGray=0;
			if(this.hdHp > 0){
				isGray=1;
				var _hdhp=this.hdHp-Math.abs(value);
				if(_hdhp > 0){
					this.hdHp=_hdhp;
					this.syncHp(this.hp,this.hdHp);
					}else{
					this.hdHp=0;
					this.hp=this.hp+_hdhp;
					if(this.hp <=0)
						this.hp=0;
					this.syncHp(this.hp,this.hdHp);
				}
				}else{
				this.hp=this.hp+value;
				this.syncHp(this.hp,this.hdHp);
			}
			this.costHp(Math.abs(value),isCritcal,isGray);
		}
	}

	__proto.showAddHp=function(addHp){
		var addHpNode=new AddHpEffect(addHp);
		addHpNode.x=-50;
		addHpNode.y=-180;
		addHpNode.zOrder=9999999999;
		this.addChild(addHpNode);
	}

	__proto.showDamage=function(damage,isGray){
		(isGray===void 0)&& (isGray=0);
		var damgeNode=new HPDamage(damage,0,isGray);
		damgeNode.x=-50;
		damgeNode.y=-180;
		this.addChild(damgeNode);
		this.damages.push(damgeNode);
	}

	__proto.showCrital=function(damage,isGray){
		(isGray===void 0)&& (isGray=0);
		var damgeNode=new HPDamage(damage,1,isGray);
		damgeNode.x=-50;
		damgeNode.y=-180;
		this.addChild(damgeNode);
		this.damages.push(damgeNode);
	}

	__proto.checkState=function(state){
		if(state==Fighter.DEATH){
			this.die();
		}
	}

	__proto.cutHp=function(curHp,damage,isCrital,isPerfectHit,damageType){
		if (this.isDestroy)return;
		var isGray=0;
		if(this.hdHp > 0){
			isGray=1;
			var temp=this.hdHp-damage;
			if(temp > 0){
				this.hdHp=temp;
				}else{
				this.hdHp=0;
			}
		}
		this.syncHp(curHp,this.hdHp);
		this.costHp(damage,isCrital,isGray);
		if(isPerfectHit==1){
			var perfecthit=new PerfectHitEffect();
			this.addChild(perfecthit);
		}
	}

	__proto.cutHp2=function(curHp,damage,isCrital,isPerfectHit,damageType){
		if (this.isDestroy)return;
		var isGray=0;
		if(this.hdHp > 0){
			isGray=1;
			var temp=this.hdHp-damage;
			if(temp > 0){
				this.hdHp=temp;
				}else{
				this.hdHp=0;
			}
		}
		this.syncHp(curHp,this.hdHp);
		new BoomerangHp(damage,3,this,isCrital,isGray);
		if(isPerfectHit==1){
			var perfecthit=new PerfectHitEffect();
			this.addChild(perfecthit);
		}
	}

	__proto.costHp=function(damage,isCrital,isGray){
		(isCrital===void 0)&& (isCrital=0);
		(isGray===void 0)&& (isGray=0);
		if(damage > 0){
			if(isCrital==1){
				this.showCrital(damage,isGray);
				}else{
				this.showDamage(damage,isGray);
			}
		}
	}

	__proto.getTouchRect=function(){
		return new Rectangle(this.x,this.y,this.width,this.height);
	}

	__proto.touchBegin=function(ex,ey){}
	__proto.touchMove=function(ex,ey){}
	__proto.touchEnd=function(ex,ey){}
	__proto.update=function(){
		this.executeAddBuffer(0);
		_super.prototype.update.call(this);
	}

	__proto.executeAddBuffer=function(bombLivingId){
		for(var i=0;i < this.bufferList.length;i++){
			var buffer=this.bufferList[i];
			if(buffer.bombLivingId==bombLivingId && !buffer.executeAdd){
				buffer.executeAdd=true;
				var battleScene=SceneMgr.ins.curScene;
				new BufferAddExecutor(buffer,this,battleScene);
			}
		}
	}

	__proto.syncBuffer=function(msg){
		for(var i=0;i < msg.details.length;i++){
			var buffer=msg.details[i];
			if(buffer.isAdd){
				var _buffer=new Buffer(buffer,msg.livingID,msg.bombLivingId,msg.time);
				this.bufferList.push(_buffer);
				}else{
				this.removeBuffer(buffer.livingID);
				this.reCalcBufferIconPos();
			}
		}
	}

	__proto.removeAllBuffer=function(){
		var ids=[];
		for(var i=0;i < this.bufferList.length;i++){
			var buffer=this.bufferList[i];
			ids.push(buffer.livingID);
		}
		for(var i=0;i < ids.length;i++){
			this.removeBuffer(ids[i]);
		}
	}

	__proto.removeBuffer=function(livingID){
		for(var i=0;i < this.bufferList.length;i++){
			var buffer=this.bufferList[i];
			if(buffer.livingID==livingID){
				this.bufferList.splice(i,1);
				break ;
			}
		}
		for(var i=0;i < this.bufferEffectList.length;i++){
			var obj=this.bufferEffectList[i];
			if(obj.livingId==livingID){
				var list=obj.list;
				for(var j=0;j < list.length;j++){
					var node=list[j];
					node.destroy(true);
				};
				var icon=obj.icon;
				if(icon)
					icon.destroy(true);
				this.bufferEffectList.splice(i,1);
				i=i-1;
			}
		}
		for(var i=0;i < this.bufferIconList.length;i++){
			var obj=this.bufferIconList[i];
			if(obj.livingId==livingID){
				this.bufferIconList.splice(i,1);
				i=i-1;
			}
		}
	}

	__proto.executeBuffer=function(msg,executeType){
		for(var i=0;i < this.bufferList.length;i++){
			var buffer=this.bufferList[i];
			if(buffer.livingID==msg.livingId){
				this.showBuff(buffer,executeType);
			}
		}
	}

	__proto.checkBuff=function(bufferId){
		if (!this.bufferList){
			return false
		}
		for(var i=0;i < this.bufferList.length;i++){
			var buffer=this.bufferList[i];
			if(buffer.bufferID==bufferId){
				return true
			}
		}
		return false
	}

	__proto.showBuff=function(buffer,showType){
		var icon=this.createBufferIcon(buffer,showType);
		var list=this.createBuffer(buffer,showType);
		var data={livingId:buffer.livingID,list:list,icon:icon};
		this.bufferEffectList.push(data);
		this.reCalcBufferIconPos();
	}

	__proto.createBufferIcon=function(buffer,showType){
		if(showType !=Buffer.SHOW_ATONCE)return null;
		var bufferPerfor=BufferModel.getBufferPerformanceByBufferId(buffer.bufferID);
		var Icon=bufferPerfor.Icon;
		return this._createBufferIcon(Icon,buffer.livingID);
	}

	__proto._createBufferIcon=function(Icon,livingID,count){
		(count===void 0)&& (count=0);
		var node=null;
		if(Icon !=0){
			node=new Sprite();
			node.x=0;
			node.y=-150;
			this.addChild(node);
			var bg=new Image("battle/menu/ui_buffdi.png");
			bg.anchorX=0.5;
			bg.anchorY=0.5;
			node.addChild(bg);
			var icon=new Image("assets/textrue/bufficon/"+Icon+".png");
			icon.anchorX=0.5;
			icon.anchorY=0.5;
			icon.scale(32/100,32/100);
			node.addChild(icon);
			if(count > 0){
				var buffcount=new Label(""+count);
				buffcount.x=5;
				buffcount.y=0;
				buffcount.stroke=2;
				buffcount.strokeColor="#527dfb";
				buffcount.align="center";
				buffcount.fontSize=15;
				buffcount.color="#ffffff";
				buffcount.name="count";
				node.addChild(buffcount);
			}
			this.bufferIconList.push({livingId:livingID,icon:node});
		}
		return node;
	}

	__proto.reCalcBufferIconPos=function(){
		var px=-(this.bufferIconList.length *40)/2;
		var py=-150;
		for(var i=0;i < this.bufferIconList.length;i++){
			var icon=this.bufferIconList[i].icon;
			icon.x=px+i *40;
			icon.y=py;
		}
	}

	__proto.createBuffer=function(buffer,executeType){
		var effect=[];
		var bufferPerfor=BufferModel.getBufferPerformanceByBufferId(buffer.bufferID);
		var bufferEffectId=bufferPerfor.BuffEffectID;
		if(executeType==Buffer.SHOW_DELAY){
			bufferEffectId=bufferPerfor.EffectEnableShowID;
		}
		if(bufferEffectId && bufferEffectId !="-1"){
			var ids=[];
			var pos=bufferEffectId.search(",");
			if(pos !=-1){
				ids=bufferEffectId.split(",");
				}else{
				ids.push(bufferEffectId);
			}
			for(var i=0;i < ids.length;i++){
				var id=int(ids[i]);
				var node=this.createEffect(id);
				effect.push(node);
			}
		}
		return effect;
	}

	__proto.createEffect=function(id){
		var node=new Sprite();
		var effect=EffectModel.getEffectPerformanceById(id);
		var isLang=false;
		var effectPath=effect.EffectPath;
		if(effect.EffectPath.search("_lang")!=-1){
			isLang=true;
			effectPath="language/"+LanguageMgr.Ins.country+"/"+effect.EffectPath.replace("_lang","");
		};
		var isLoopPlay=effect.Type==2 ? true :false;
		if(effectPath.indexOf("frames/")==-1){
			var pathName="assets/animation/"+effectPath+".sk";
			var aniSkeleton=new AniSkeleton(pathName,null,0,isLoopPlay,!isLoopPlay ? Handler.create(this,this.playAniComplete):null);
			node.addChild(aniSkeleton);
		}
		else{
			var url="assets/animation/"+effectPath+".json";
			UIFactory.ins.createGAnimationByUrl(url,node,isLoopPlay,!isLoopPlay ? Handler.create(this,this.playAniComplete):null);
		}
		this.addChild(node);
		return node;
	}

	__proto.playAniComplete=function(ani){
		ani.removeSelf();
		ani.destroy();
	}

	__proto.myturn=function(){
		this.playTurn();
	}

	// }
	__proto.playTurn=function(){
		var _$this=this;
		SoundMgr.instance.playSound(4003010);
		this.idx=0;
		if(this.skeleton){
			this.skeleton.visible=true;
			if(!this.skeleton.hasListener("stopped")){
				this.skeleton.on("stopped",this,function(){
					++_$this.idx;
					if(_$this.idx < _$this.acts.length-1){
						_$this.skeleton.play(_$this.acts[_$this.idx],false);
					}
					else{
						_$this.skeleton.play(_$this.acts[_$this.idx],true);
					}
				});
			}
			this.skeleton.play(this.acts[this.idx],false);
		}
		CameraManager.instance.setMapPos(this.x,this.y,this.getBounds().width+200,ResizeMgr.bestFitHeight/2-200,500,this._type==Fighter.HERO ? true :false);
	}

	__proto.overturn=function(){
		if(this.skeleton)
			this.skeleton.visible=false;
	}

	__proto.syncLiving=function(msg){}
	__proto.destroyFighter=function(){
		if(this.isDestroy)
			return;
		this.isDestroy=true;
		this.removeAllBuffer();
		if(this.damages){
			for(var i=0;i < this.damages.length;i++){
				var damage=this.damages[i];
				damage.destroyHPDamage();
			}
			this.damages.splice(0);
		}
		Laya.timer.clear(this,this._autoMove);
		this.moveTween=null;
		this.handler=null;
		if(this.bufferList){
			this.bufferList.splice(0);
			this.bufferList=null;
		}
		if(this.bufferEffectList){
			this.bufferEffectList.splice(0);
			this.bufferEffectList=null;
		}
		if(this.bufferIconList){
			this.bufferIconList.splice(0);
			this.bufferIconList=null;
		}
		if(this.damages){
			this.damages.splice(0);
			this.damages=null;
		}
		this.touchArea=null;
		if(this.skeleton){
			this.skeleton.destroy(true);
			this.skeleton=null;
		}
		if(this.collideNode){
			this.collideNode.destroy(true);
			this.collideNode=null;
		}
		this.removeSelf();
		this.destroy(true);
	}

	__proto.calcDelayTime=function(){
		return 0;
	}

	__proto.addHDHp=function(value){
		this.hdHp=value;
		this.syncHp(this.hp,this.hdHp);
	}

	__getset(0,__proto,'collideArea',function(){
		return this._collideArea;
		},function(areas){
		if(this.collideNode){
			this.collideNode.removeSelf();
			this.collideNode.destroy(true);
		}
		this.collideNode=new Sprite();
		this.addChild(this.collideNode);
		for(var i=0;i<areas.length;i++){
			var data=areas[i];
			var collideImage=new Image("battle/menu/mask.png");
			this.collideNode.zOrder=-1;
			this.collideNode.addChild(collideImage);
			collideImage.anchorX=data.anchorX;
			collideImage.anchorY=data.anchorY;
			collideImage.width=data.radius *2;
			collideImage.height=data.radius *2;
			collideImage.pos(data.posX,-data.posY);
			collideImage.alpha=0;
			data.image=collideImage
			data.pos=new Point(this.x+data.posX,this.y-data.posY);
		}
		this._collideArea.temp=areas;
	});

	__getset(0,__proto,'launchDelayFrame',function(){
		return 0;
	});

	__getset(0,__proto,'type',function(){
		return this._type;
	});

	Fighter.ADD_HP=1;
	Fighter.SUB_HP=2;
	Fighter.DEATH=3;
	Fighter.DIS=4;
	Fighter.ASSIST=5;
	Fighter.INT_HP=6;
	Fighter.DIS_NOHP=7;
	Fighter.DIR_RIGHT=1;
	Fighter.DIR_LEFT=-1;
	Fighter.HERO=1;
	Fighter.ROLE=2;
	Fighter.NPC=3;
	Fighter.MONSTER=4;
	return Fighter;
})(BasePart)


//class modules.battle.part.obj.Supply extends modules.battle.part.obj.BaseObject
var Supply=(function(_super){
	function Supply(msg,battleScene){
		this.born=null;
		this.idle=null;
		this.hitEffect=null;
		this.die=null;
		this.isDie=false;
		this.delayDie=false;
		this.objMsg=null;
		this.battleScene=null;
		this.particleName=null;
		this.tishenani=null;
		this.objMsg=msg;
		this.battleScene=battleScene;
		Supply.__super.call(this,msg);
	}

	__class(Supply,'modules.battle.part.obj.Supply',_super);
	var __proto=Supply.prototype;
	__proto.initObject=function(screenWidth,screenHeight){
		_super.prototype.initObject.call(this,screenWidth,screenHeight);
		var config=SceneSupplyModel.getSceneSupplyConfig(this.templateId);
		var resource=config.SupplyResource;
		this.born=config.SupplyEffect;
		this.idle=config.SupplyIdle;
		this.die=config.SupplyDieEffect;
		this.hitEffect=config.SupplyHit;
		this.objSkeleton=new AniSkeleton(resource,"supply",this.idle,true,Handler.create(this,this.playEnd,null,false));
		this.objSkeleton.visible=false;
		this.objNode.addChild(this.objSkeleton);
	}

	__proto.playEnd=function(){
		if(this.objSkeleton.nameOrIndex==this.born){
			this.objSkeleton.play(this.idle,true);
			}else if(this.objSkeleton.nameOrIndex==this.die){
			if(!this.delayDie){
				this.destroyObject();
			}
		}
	}

	__proto.showBirth=function(){
		var fighter=this.battleScene.getFighter(this.objMsg.targetLivingId);
		if(fighter){
			var particle=UIFactory.ins.createParticle("lizi_bjx.part");
			particle.x=fighter.x;
			particle.y=fighter.y;
			this.battleScene.objectView.addChild(particle);
			Tween.to(particle,{x:this.objMsg.x,y:this.screenHeight-this.objMsg.y},1000,null,Handler.create(this,this.onCallBack,[particle]));
			}else{
			this.objSkeleton.visible=true;
			this.objSkeleton.play(this.born,false);
		}
	}

	__proto.onCallBack=function(particle){
		if(this.objSkeleton){
			this.objSkeleton.visible=true;
			this.objSkeleton.play(this.born,false);
		}
		if(particle){
			particle.removeSelf();
			particle.destroy(true);
		}
	}

	__proto.showDie=function(){
		if(this.isDie)
			return;
		this.objSkeleton.play(this.die,false);
		this.isDie=true;
	}

	__proto.showHit=function(){
		if(!this.tishenani){
			this.tishenani=new AniSkeleton(this.hitEffect,"effect",0,false,Handler.create(this,this.destroyObject),null,true);
			this.addChild(this.tishenani);
			this.showDie();
			this.delayDie=true;
		}
	}

	__proto.destroyObject=function(){
		_super.prototype.destroyObject.call(this);
		this.removeSelf();
		this.destroy(true);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.objSkeleton){
			this.objSkeleton.removeSelf();
			this.objSkeleton.destroy(true);
			this.objSkeleton=null;
		}
		if(this.tishenani){
			this.tishenani.removeSelf();
			this.tishenani.destroy(true);
			this.tishenani=null;
		}
		this.objMsg=null;
		this.battleScene=null;
		laya.ui.Component.prototype.destroy.call(this,destroyChild);
	}

	return Supply;
})(BaseObject)


//class ui.room.items.InviteDialogItemUI extends laya.ui.Box
var InviteDialogItemUI=(function(_super){
	function InviteDialogItemUI(){
		this.contentBox=null;
		this.bg1=null;
		this.bg2=null;
		this.headImg=null;
		this.typeName=null;
		this.battleName=null;
		InviteDialogItemUI.__super.call(this);
		var temp=InviteDialogItemUI.uiView;
		InviteDialogItemUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(InviteDialogItemUI.uiView);
	}

	__class(InviteDialogItemUI,'ui.room.items.InviteDialogItemUI',_super);
	var __proto=InviteDialogItemUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("Text",Text);
		ClassUtils.createByJson(uiData,this,this);
	}

	InviteDialogItemUI.uiView="eJyNUs1Og0AQfpfxSiwgIOWo8dDEeLHxYhqzwACbAktgqS1NjyY+gvEZfAQfR30OB2hJ/1sOJDs78/3NzkHOMgQHbsQUFMhykRXgzGEGjqrAtPm/cl9G4Gi2pUCOqY/5sJ1pDzSWiLLAYZSLMqTGgMUFLot3KXNj9MGReUm1CHkYSXBMe6GAF/GYbp7nRzVMWE5XnkglprLt2KRrkXfZ9jEMEhbiOkeL7oYaFYsxT2tXQiQ9nk64xF7JX5LKDS+zNDyfd6Ec5iNPepOrrnTc+lFuvSE/BWo1oNfdsgxzhR8h8wdJLX8VvmGdFQ2haqsnsF9eVS2D2XgVCSvGpHd0QvGV3YD3D3vXdpzfMxfj/ThaZ7jufWBJzSdxSn7h9+3r5/uTzgG9okdeEZRmUAQiFvXAhWqYnm1tMA3rya29tWmY/W5zTMp4i0p/0v/eP+qFylyM8baj8Ey0rK7e7H9NjbWmJqBPVZsER4t/2tgsww==";
	return InviteDialogItemUI;
})(Box)


//class ui.room.items.RoomInviteFriendItemUI extends laya.ui.Box
var RoomInviteFriendItemUI=(function(_super){
	function RoomInviteFriendItemUI(){
		this.bg=null;
		this.headIcon=null;
		this.onlineTxt=null;
		this.onlineIcon=null;
		this.nameTxt=null;
		this.inviteBtn=null;
		this.inviteBtnNameTxt=null;
		this.rankingIcon=null;
		this.sexIcon=null;
		this.meiliTxt=null;
		RoomInviteFriendItemUI.__super.call(this);
		var temp=RoomInviteFriendItemUI.uiView;
		RoomInviteFriendItemUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(RoomInviteFriendItemUI.uiView);
	}

	__class(RoomInviteFriendItemUI,'ui.room.items.RoomInviteFriendItemUI',_super);
	var __proto=RoomInviteFriendItemUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("Text",Text);
		ClassUtils.createByJson(uiData,this,this);
	}

	RoomInviteFriendItemUI.uiView="eJydU0+L00AU/y7jdaid/E+OPSgLshd7UESWtJkkw6YzJZnNplsKomel4NE9exPx5OIifpmW6rdwMtN0kyZuFnMIDDPv9++9twR8McfAAyNWAAjmKZtnwFuCBfCGEBTyf0kCHgNPNxEEKaYBTseqRh1EWYxJFHPgOc4KgmlMkgB4r5YV9MnMj3AvuA5B7qfi+SQSb7NzQksGxmaPL8hZvJhEYTSYU3lHrvDTlAgO4EIXIg26TQ0reC83UuTojt1yWoy8mHTwIRsiB5Z/q0Zp9VPqilK/o9QqvzH2g5Mpo3VArQ/Q3AO2hV9xKburEWNc8CMcTcIYB1mGXcliNCEUj2UFLws9sPt8u/vxa3PzpQyFp+wcS4BKNTIhCBnlz0Ve6jRlCSuxHj2RnyjzExKVaqeYcjE6q9XrHqOWFGhZTVn7vI6sq7szIi5VBjXsDu8ISWwXHdwj06x4qD9rmt+u3+0+Xm9uP2xu3m/X6923n9v1p1rPNL3uXtNq7kMrNAK7Ied0dMG59FBXZBhSkT60DpIco1JEaE44HvEO4wucJOxS65hXQw6rWBK7pCI54y+FTXtg7k8vBGmthbr5wLkxj+bGbss8PU7wz9s3v79+r0em/TOy/x8YXWWIjEMrU5+KuCI5M317pbuyWhuKxcpJRiaJeBn6SYYrtAwX3dNH89bQdTEYauVcvQXw0Lm1bIXgVJJmmCSkEfWzfGA2l/T+xSxj/Qvj3elU";
	return RoomInviteFriendItemUI;
})(Box)


//class ui.newguide.ChickenLeftUI extends laya.ui.Box
var ChickenLeftUI=(function(_super){
	function ChickenLeftUI(){
		this.textBg=null;
		this.content=null;
		ChickenLeftUI.__super.call(this);
		var temp=ChickenLeftUI.uiView;
		ChickenLeftUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(ChickenLeftUI.uiView);
	}

	__class(ChickenLeftUI,'ui.newguide.ChickenLeftUI',_super);
	var __proto=ChickenLeftUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	ChickenLeftUI.uiView="eJxdkE9PwzAMxb8KMtew/ltHl+MuDAlOcJkQQlnrthZZUjUZa6n63XGLmFAvUew8v/dzBvB9gyBhZzsQ0LS2cSAH6EGGArr5vFDha5DrkO81UlV7kPfhKCCvSRcg34Y/k8eTqnBhc5ctfJJoLeBLtaz32PldxQPukwzXyjn0Lpja7RkDg5fqTAUGZ/royRTKJqvGzHr6xoeWOBziSCShiFOx3cA/vs04iivXkzqiXnAlV4rcGo/G87vG0k+LCiC39yf9yiAgJxYBJateOBZknP1WPPpMeWudLf3NQe2R2CK32k6mt9kxDaMtd5TJa9se+AtWKWcqTdW065w1ju/jD1Cod/k=";
	return ChickenLeftUI;
})(Box)


//class ui.newguide.ChickenRightUI extends laya.ui.Box
var ChickenRightUI=(function(_super){
	function ChickenRightUI(){
		this.textBg=null;
		this.content=null;
		ChickenRightUI.__super.call(this);
		var temp=ChickenRightUI.uiView;
		ChickenRightUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(ChickenRightUI.uiView);
	}

	__class(ChickenRightUI,'ui.newguide.ChickenRightUI',_super);
	var __proto=ChickenRightUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	ChickenRightUI.uiView="eJxdkE9PwzAMxb9KZa5h7fpnbD3uAkhwggMTQihLvSaiJFGSsY6p3x2n0za0SyTbee/97AOEvUWoYWl6YGCdsR7qA+yhzhj047tTTZBQ5+WUgUTVygD1XTYwEFJ1DdTvh5PJ4zdv8crmdjb65GVxcapyBj/ckSJgH5YtSfyX0lRz7zH4NLbdFlONu3arGky36nOvdMNNMbF6/K9+8d4piod8yoqM5RVbzOJA8A7fKPc/7WwY2Jnyia+xu6IszkTC6IA60DxCUOOV2ySYxFjUSZCYCIk+jt3Ru6QLbUjzQkC02vxYke5ZCWe82YRkxR9QkUKYzsSIm/m6yqYL6nAtpHErOvOkOlXETui8U208yDFlGD6GP3qvg+8=";
	return ChickenRightUI;
})(Box)


/**
*普通指引 指引点击按钮
*@author chengwen.yi
*
*/
//class modules.newguide.view.ClickMaskView extends modules.newguide.view.BaseMaskView
var ClickMaskView=(function(_super){
	function ClickMaskView(target,info,isMask,maskAlpha){
		this.aniFinge=null;
		this.targetBg=null;
		this.targetGlobalRect=null;
		this.tempPoint=new Point();
		(isMask===void 0)&& (isMask=true);
		(maskAlpha===void 0)&& (maskAlpha=0.6);
		ClickMaskView.__super.call(this);
		this.setTarget(target,info,isMask,maskAlpha);
	}

	__class(ClickMaskView,'modules.newguide.view.ClickMaskView',_super);
	var __proto=ClickMaskView.prototype;
	__proto.setTarget=function(target,info,isMask,maskAlpha){
		(isMask===void 0)&& (isMask=true);
		(maskAlpha===void 0)&& (maskAlpha=0.6);
		if(target){
			this.tempPoint.x=0;
			this.tempPoint.y=0;
			var rect;
			if(target.width > 0 && target.height > 0){
				rect=new Rectangle(target.x-(target["anchorX"] ? target["anchorX"] :0)*target.width,target.y-(target["anchorY"] ? target["anchorY"] :0)*target.height,target.width,target.height);
			}
			else{
				rect=target.getBounds();
			}
			this.tempPoint=target.localToGlobal(this.tempPoint);
			if(isMask){
				if(this.targetBg==null){
					this.targetBg=new Image("assets/textrue/common/blank.png");
					this.targetBg.mouseEnabled=false;
				}
				this.targetBg.x=rect.x;
				this.targetBg.y=rect.y;
				this.targetBg.width=rect.width;
				this.targetBg.height=rect.height;
				this.targetBg.alpha=maskAlpha;
				target.parent.addChild(this.targetBg);
				target.parent.addChild(target);
				rect.x=this.tempPoint.x;
				rect.y=this.tempPoint.y;
				this.setMaskRect(rect,maskAlpha);
			}
			else{
				this.rect=rect;
			}
			if(this.aniFinge==null){
				this.aniFinge=this.createGuideSkeleton();
			}
			this.aniFinge.x=this.tempPoint.x+rect.width*0.5+(info ? info.offX :0);
			this.aniFinge.y=this.tempPoint.y+rect.width*0.5+(info ? info.offY :0);
			this.addChild(this.aniFinge);
		}
	}

	__proto.createGuideSkeleton=function(){
		var aniSkeleton=new AniSkeleton("effect_dianji","guide",0);
		aniSkeleton.mouseEnabled=false;
		return aniSkeleton;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.aniFinge){
			this.aniFinge.removeSelf();
			this.aniFinge.destroy();
			this.aniFinge=null;
		}
		if(this.targetBg){
			this.targetBg.removeSelf();
			this.targetBg.destroy();
			this.targetBg=null;
		}
		laya.ui.Component.prototype.destroy.call(this,destroyChild);
	}

	return ClickMaskView;
})(BaseMaskView)


// public class NButton extends Button //这个是分包js的时候用的类，button继承自editorUI
//class component.NButton extends laya.ui.Button
var NButton=(function(_super){
	function NButton(skin,label){
		/**缩放时间 **/
		this.scaleTime=100;
		this._oriScaleX=1;
		this._oriScaleY=1;
		this._tempScaleX=1;
		this._tempScaleY=1;
		this.nSkin=null;
		(label===void 0)&& (label="");
		NButton.__super.call(this,skin,label);
		this._stateNum=1;
		this.anchorX=0.5;
		this.anchorY=0.5;
		this.on("mousedown",this,this.mouseDown);
		this.on("mouseup",this,this.mouseUp);
		this.on("mouseout",this,this.mouseOut);
		this.on("click",this,this.closeTips);
		EventMgr.ins.on("UPDATE_ALL_IMAGE",this,this.onUpdate);
	}

	__class(NButton,'component.NButton',_super);
	var __proto=NButton.prototype;
	__proto.closeTips=function(){
		EventMgr.ins.event("Close_All_Tips");
	}

	__proto.onUpdate=function(isUpdate){
		(isUpdate===void 0)&& (isUpdate=true);
		if (this.nSkin==null || this.nSkin==""){
			return;
		};
		var country=this.nSkin.split("/")[1];
		if (this.nSkin.indexOf(LanguageMgr.Ins.countryLast)!=-1){
			var value=this.nSkin.replace(country,LanguageMgr.Ins.country);
			this.nSkin=value;
		}
		if (isUpdate){
			Laya.superSet(Button,this,'skin',this.nSkin);
		}
	}

	__proto.mouseDown=function(){
		this.scaleSmall();
	}

	__proto.mouseUp=function(e){
		if (e.type=="mouseup"){
			if (e.currentTarget.name !="toright" && e.currentTarget.name !="toleft" && e.currentTarget.name !="feiji" && e.currentTarget.name !="card"){
				SoundManager.playSound("assets/sound/soundeffect/other/normalclick.mp3");
			}
		}
		this.scaleBig();
	}

	__proto.mouseOut=function(e){
		this.scaleBig();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		Tween.clearTween(this);
		this.off("mousedown",this,this.mouseDown);
		this.off("mouseup",this,this.mouseUp);
		this.off("mouseout",this,this.mouseOut);
		this.off("click",this,this.closeTips);
		EventMgr.ins.off("UPDATE_ALL_IMAGE",this,this.onUpdate);
		_super.prototype.destroy.call(this);
	}

	__proto.scaleSmall=function(){
		Tween.to(this,{tempScaleX:0.8,tempScaleY:0.8},this.scaleTime);
	}

	__proto.scaleBig=function(){
		Tween.to(this,{tempScaleX:1,tempScaleY:1},this.scaleTime);
	}

	__getset(0,__proto,'scaleY',_super.prototype._$get_scaleY,function(value){
		this._oriScaleY=value;
		Laya.superSet(Button,this,'scaleY',value*this._tempScaleY);
	});

	__getset(0,__proto,'skin',_super.prototype._$get_skin,function(value){
		this.nSkin=value;
		this.onUpdate();
		Laya.superSet(Button,this,'skin',this.nSkin);
	});

	__getset(0,__proto,'tempScaleX',function(){
		return this._tempScaleX;
		},function(value){
		this._tempScaleX=value;
		Laya.superSet(Button,this,'scaleX',this._oriScaleX*this._tempScaleX);
	});

	__getset(0,__proto,'tempScaleY',function(){
		return this._tempScaleY;
		},function(value){
		this._tempScaleY=value;
		Laya.superSet(Button,this,'scaleY',this._oriScaleY*this._tempScaleY);
	});

	__getset(0,__proto,'scaleX',_super.prototype._$get_scaleX,function(value){
		this._oriScaleX=value;
		Laya.superSet(Button,this,'scaleX',value*this._tempScaleX);
	});

	return NButton;
})(Button)


/**
*
*@author chengwen.yi
*
*/
//class laya.ui.GButton extends laya.ui.Button
var GButton=(function(_super){
	function GButton(skin,label){
		/**缩放时间 **/
		this.scaleTime=100;
		this.tempScaleX=0.0;
		///////////////IColorFilter-start/////////////////////
		this._colorFilterValue=null;
		this._isNull_f=true;
		this._color_f=NaN;
		this._alpha_f=NaN;
		this._colorMatrix_f=null;
		this._brightness=0;
		//明亮度 默认值0 取值范围[-100,100] 和PS一致
		this._contrast=0;
		//对比度 默认值0 取值范围[-100,100] 和PS一致
		this._saturation=0;
		//饱和度 默认值0 取值范围[-100,100] 和PS一致
		this._hue=0;
		(label===void 0)&& (label="");
		GButton.__super.call(this,skin,label);
		this._stateNum=1;
		this.anchorX=0.5;
		this.anchorY=0.5;
		this.on("mousedown",this,this.mouseDown);
		this.on("mouseup",this,this.mouseUp);
		this.on("mouseout",this,this.mouseOut);
	}

	__class(GButton,'laya.ui.GButton',_super);
	var __proto=GButton.prototype;
	__proto.onUpdate=function(){
		if(this.skin==null || this.skin=="")return;
		var country=this.skin.split("/")[1];
	}

	__proto.mouseDown=function(){
		if(this.tempScaleX==0){
			this.tempScaleX=this.scaleX;
		}
		Tween.to(this,{scaleX:0.8 *this.tempScaleX,scaleY:0.8},this.scaleTime);
	}

	__proto.mouseUp=function(e){
		if(this.tempScaleX==0){
			this.tempScaleX=this.scaleX;
		}
		if(e.type=="mouseup"){
			if(e.currentTarget.name !="toright" && e.currentTarget.name !="toleft" && e.currentTarget.name !="feiji" && e.currentTarget.name !="card"){
				SoundManager.playSound("assets/sound/soundeffect/other/normalclick.mp3");
			}
		}
		Tween.to(this,{scaleX:1 *this.tempScaleX,scaleY:1},this.scaleTime);
	}

	__proto.mouseOut=function(e){
		if(this.tempScaleX==0){
			this.tempScaleX=this.scaleX;
		}
		Tween.to(this,{scaleX:1 *this.tempScaleX,scaleY:1},this.scaleTime);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		_super.prototype.destroy.call(this);
		this.off("mousedown",this,this.mouseDown);
		this.off("mouseup",this,this.mouseUp);
		this.off("mouseout",this,this.mouseOut);
	}

	__proto.updateColorMatrix=function(){
		if(!this._isNull_f || this._brightness !=0 || this._contrast !=0 || this._saturation !=0 || this._hue !=0){
			UIUtils.clearFilter(this,GColorFilter);
			if(this._colorMatrix_f==null)this._colorMatrix_f=new ColorMatrix();
			if(!this._isNull_f){
				this._colorMatrix_f.setColorMatrix(this._color_f,this._alpha_f);
			}
			else{
				this._colorMatrix_f.reset();
			}
			this._colorMatrix_f.adjustBrightness_PS(this._brightness);
			this._colorMatrix_f.adjustContrast_PS(this._contrast);
			this._colorMatrix_f.adjustSaturation_PS(this._saturation);
			this._colorMatrix_f.adjustHue_PS(this._hue);
			UIUtils.addFilter(this,new GColorFilter(this._colorMatrix_f));
		}
		else{
			if(this.filters){
				UIUtils.clearFilter(this,GColorFilter);
			}
		}
	}

	/**
	*明亮度
	*
	*/
	__getset(0,__proto,'brightness',null,function(value){
		if(this._brightness !=value){
			this._brightness=value;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	//色相 默认值0 取值范围[-180,180] 和PS一致
	__getset(0,__proto,'colorFilter',null,function(value){
		if(this._colorFilterValue !=value){
			var color=0;
			var isSetAlpha=false;
			var alphaVal=NaN;
			var len=NaN;
			var isNull=false;
			if((typeof value=='string')){
				if(value){
					value.charAt(0)=='#' && (value=value.substr(1));
					color=parseInt(value,16);
					len=value.length;
					isSetAlpha=len > 6;
					alphaVal=isSetAlpha ? parseInt(value.substr(0,len-6),16)/ 255 :1;
				}
				else{
					isNull=true;
				}
			}
			else if(value==null){
				isNull=true;
			}
			else{
				color=value;
				value=color.toString(16);
				len=value.length;
				isSetAlpha=len > 6;
				alphaVal=isSetAlpha ? parseInt(value.substr(0,len-6),16)/ 255 :1;
			}
			this._isNull_f=isNull;
			this._color_f=color;
			this._alpha_f=alphaVal;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	/**
	*颜色滤镜透明度
	*@param value
	*
	*/
	__getset(0,__proto,'colorAlpha',null,function(value){
		if(this._alpha_f !=value){
			this._alpha_f=value;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	/**
	*对比度
	*@param value
	*
	*/
	__getset(0,__proto,'contrast',null,function(value){
		if(this._contrast !=value){
			this._contrast=value;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	/**
	*色相
	*@param value
	*
	*/
	__getset(0,__proto,'hue',null,function(value){
		if(this._hue !=value){
			this._hue=value;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	/**
	*饱和度
	*@param value
	*
	*/
	__getset(0,__proto,'saturation',null,function(value){
		if(this._saturation !=value){
			this._saturation=value;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	return GButton;
})(Button)


/**
*用来批量切换国家的Image
*@author weiqiang.huang
*
*/
//class component.NImage extends laya.ui.Image
var NImage=(function(_super){
	function NImage(skin){
		this.nSkin=null;
		NImage.__super.call(this,skin);
		EventMgr.ins.on("UPDATE_ALL_IMAGE",this,this.onUpdate);
	}

	__class(NImage,'component.NImage',_super);
	var __proto=NImage.prototype;
	__proto.onUpdate=function(isUpdate){
		(isUpdate===void 0)&& (isUpdate=true);
		if(this.nSkin==null || this.nSkin=="")return;
		var nameAry=this.nSkin.split("/");
		var country="";
		for (var i=0;i < nameAry.length;i++){
			if(nameAry[i]==LanguageMgr.Ins.countryLast){
				country=nameAry[i];
			}
		}
		if(this.nSkin.indexOf(LanguageMgr.Ins.countryLast)!=-1){
			this.nSkin=this.nSkin.replace(country,LanguageMgr.Ins.country);
		}
		if(isUpdate)this.skin=this.nSkin;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		_super.prototype.destroy.call(this,destroyChild);
		EventMgr.ins.off("UPDATE_ALL_IMAGE",this,this.onUpdate);
	}

	__getset(0,__proto,'skin',_super.prototype._$get_skin,function(value){
		this.nSkin=value;
		this.onUpdate(false);
		Laya.superSet(Image,this,'skin',this.nSkin);
	});

	return NImage;
})(Image)


/**
*微信输入文本
*@author baohua.chen
*创建时间：2017-10-3 下午6:47:35
*
*/
//class component.NTextInput extends laya.ui.Label
var NTextInput=(function(_super){
	function NTextInput(text){
		/**@private */
		this._bg=null;
		/**@private */
		this._skin=null;
		this._multiple=false;
		this._maxChars=0;
		(text===void 0)&& (text="");
		NTextInput.__super.call(this,text);
		this.addEvent();
	}

	__class(NTextInput,'component.NTextInput',_super);
	var __proto=NTextInput.prototype;
	__proto.addEvent=function(){
		this.on("mousedown",this,this.mouseDown);
	}

	__proto.getMultiple=function(){
		return this._multiple;
	}

	__proto.setMultiple=function(value){
		this._multiple=value;
	}

	__proto.mouseDown=function(){
		var _$this=this;
		window.wx.offKeyboardComplete();
		window.wx.offKeyboardConfirm();
		window.wx.offKeyboardInput();
		window.wx.showKeyboard({
			defaultValue:this.getText(),
			maxLength:this.maxChars,
			multiple:this.getMultiple(),
			confirmHold:true,
			confirmType:'done',
			success:function (res){
				console.log('打开键盘成功');
			},
			fail:function (res){
				console.log("打开键盘出错:"+(res ? res.errMsg :""));
			}
		})
		window.wx.onKeyboardConfirm(function(res){
			var str=res ? res.value :"";
			console.log('onKeyboardConfirm:'+str);
			_$this.setText(str);
			_$this.hideKeyboard();
		})
		window.wx.onKeyboardInput(function(res){
			var str=res ? res.value :"";
			console.log('onKeyboardInput:'+str);
			if(!_$this.getMultiple()){
				if(str.indexOf("\n")!=-1){
					_$this.hideKeyboard();
				}
				else{
					console.log('换行符有问题');
				}
			}
			_$this.setText(str);
		})
		window.wx.onKeyboardComplete(function(res){
			var str=res ? res.value :"";
			console.log("onKeyboardComplete:"+str);
			window.wx.offKeyboardComplete();
			window.wx.offKeyboardConfirm();
			window.wx.offKeyboardInput();
		})
	}

	__proto.hideKeyboard=function(){
		window.wx.hideKeyboard({
			success:function (res){
				console.log('隐藏键盘')
				window.wx.offKeyboardComplete();
				window.wx.offKeyboardConfirm();
				window.wx.offKeyboardInput();
			},
			fail:function (res){
				console.log("隐藏键盘出错:"+(res ? res.errMsg :""));
			}
		})
	}

	__proto.setText=function(str){
		this.text=str;
	}

	__proto.getText=function(){
		return this.text ? this.text :"";
	}

	__proto.removeEvent=function(){
		this.off("mousedown",this,this.mouseDown);
	}

	__proto.destroyChildren=function(){
		this.removeEvent();
		laya.display.Node.prototype.destroyChildren.call(this);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		_super.prototype.destroy.call(this);
	}

	__getset(0,__proto,'maxChars',function(){
		return this._maxChars;
		},function(value){
		this._maxChars=value;
	});

	/**
	*表示此对象包含的文本背景 <code>AutoBitmap</code> 组件实例。
	*/
	__getset(0,__proto,'bg',function(){
		return this._bg;
		},function(value){
		this.graphics=this._bg=value;
	});

	/**
	*@copy laya.ui.Image#skin
	*/
	__getset(0,__proto,'skin',function(){
		return this._skin;
		},function(value){
		if (this._skin !=value){
			this._skin=value;
			this._bg || (this.graphics=this._bg=new AutoBitmap());
			this._bg.source=Loader.getRes(this._skin);
			this._width && (this._bg.width=this._width);
			this._height && (this._bg.height=this._height);
		}
	});

	/**
	*<p>当前实例的背景图（ <code>AutoBitmap</code> ）实例的有效缩放网格数据。</p>
	*<p>数据格式："上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)"，以逗号分隔。
	*<ul><li>例如："4,4,4,4,1"</li></ul></p>
	*@see laya.ui.AutoBitmap.sizeGrid
	*/
	__getset(0,__proto,'sizeGrid',function(){
		return this._bg && this._bg.sizeGrid ? this._bg.sizeGrid.join(","):null;
		},function(value){
		this._bg || (this.graphics=this._bg=new AutoBitmap());
		this._bg.sizeGrid=UIUtils.fillArray(Styles.defaultSizeGrid,value,Number);
	});

	/**@inheritDoc */
	__getset(0,__proto,'width',_super.prototype._$get_width,function(value){
		Laya.superSet(Label,this,'width',value);
		this._bg && (this._bg.width=value);
	});

	/**@inheritDoc */
	__getset(0,__proto,'height',_super.prototype._$get_height,function(value){
		Laya.superSet(Label,this,'height',value);
		this._bg && (this._bg.height=value);
	});

	return NTextInput;
})(Label)


//class component.ProgressBarEx extends laya.ui.ProgressBar
var ProgressBarEx=(function(_super){
	function ProgressBarEx(){
		this._padding=[0,0,0,0];
		ProgressBarEx.__super.call(this);
	}

	__class(ProgressBarEx,'component.ProgressBarEx',_super);
	var __proto=ProgressBarEx.prototype;
	/**
	*@private
	*更改进度值的显示。
	*/
	__proto.changeValue=function(){
		this._bar.width=this.width;
		this._bar.x=this._padding[3];
		this._bar.y=this._padding[0];
		this._bar.scrollRect==null && (this._bar.scrollRect=new Rectangle);
		this._bar.scrollRect.x=this._padding[3];
		this._bar.scrollRect.width=(this.width-this._padding[3]-this._padding[1])*this.value;
		this._bar.scrollRect.y=this._padding[0];
		this._bar.scrollRect.height=this.height-this._padding[2]-this._padding[0];
	}

	/**
	*<p>边距信息</p>
	*<p>"上边距，右边距，下边距 , 左边距（边距以像素为单位）"</p>
	*/
	__getset(0,__proto,'padding',function(){
		return this._padding.join(",");
		},function(value){
		this._padding=UIUtils.fillArray([0,0,0,0],value,Number);
	});

	return ProgressBarEx;
})(ProgressBar)


/**
*
*@author chengwen.yi
*
*/
//class laya.ui.GImage extends laya.ui.Image
var GImage=(function(_super){
	function GImage(skin){
		///////////////IColorFilter-start/////////////////////
		this._colorFilterValue=null;
		this._isNull_f=true;
		this._color_f=NaN;
		this._alpha_f=NaN;
		this._colorMatrix_f=null;
		this._brightness=0;
		//明亮度 默认值0 取值范围[-100,100] 和PS一致
		this._contrast=0;
		//对比度 默认值0 取值范围[-100,100] 和PS一致
		this._saturation=0;
		//饱和度 默认值0 取值范围[-100,100] 和PS一致
		this._hue=0;
		GImage.__super.call(this,skin);
	}

	__class(GImage,'laya.ui.GImage',_super);
	var __proto=GImage.prototype;
	Laya.imps(__proto,{"laya.filters.IColorFilter":true})
	__proto.updateColorMatrix=function(){
		if(!this._isNull_f || this._brightness !=0 || this._contrast !=0 || this._saturation !=0 || this._hue !=0){
			UIUtils.clearFilter(this,GColorFilter);
			if(this._colorMatrix_f==null)this._colorMatrix_f=new ColorMatrix();
			if(!this._isNull_f){
				this._colorMatrix_f.setColorMatrix(this._color_f,this._alpha_f);
			}
			else{
				this._colorMatrix_f.reset();
			}
			this._colorMatrix_f.adjustBrightness_PS(this._brightness);
			this._colorMatrix_f.adjustContrast_PS(this._contrast);
			this._colorMatrix_f.adjustSaturation_PS(this._saturation);
			this._colorMatrix_f.adjustHue_PS(this._hue);
			UIUtils.addFilter(this,new GColorFilter(this._colorMatrix_f));
		}
		else{
			if(this.filters){
				UIUtils.clearFilter(this,GColorFilter);
			}
		}
	}

	/**
	*明亮度
	*
	*/
	__getset(0,__proto,'brightness',null,function(value){
		if(this._brightness !=value){
			this._brightness=value;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	//色相 默认值0 取值范围[-180,180] 和PS一致
	__getset(0,__proto,'colorFilter',null,function(value){
		if(this._colorFilterValue !=value){
			var color=0;
			var isSetAlpha=false;
			var alphaVal=NaN;
			var len=NaN;
			var isNull=false;
			if((typeof value=='string')){
				if(value){
					value.charAt(0)=='#' && (value=value.substr(1));
					color=parseInt(value,16);
					len=value.length;
					isSetAlpha=len > 6;
					alphaVal=isSetAlpha ? parseInt(value.substr(0,len-6),16)/ 255 :1;
				}
				else{
					isNull=true;
				}
			}
			else if(value==null){
				isNull=true;
			}
			else{
				color=value;
				value=color.toString(16);
				len=value.length;
				isSetAlpha=len > 6;
				alphaVal=isSetAlpha ? parseInt(value.substr(0,len-6),16)/ 255 :1;
			}
			this._isNull_f=isNull;
			this._color_f=color;
			this._alpha_f=alphaVal;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	/**
	*颜色滤镜透明度
	*@param value
	*
	*/
	__getset(0,__proto,'colorAlpha',null,function(value){
		if(this._alpha_f !=value){
			this._alpha_f=value;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	/**
	*对比度
	*@param value
	*
	*/
	__getset(0,__proto,'contrast',null,function(value){
		if(this._contrast !=value){
			this._contrast=value;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	/**
	*色相
	*@param value
	*
	*/
	__getset(0,__proto,'hue',null,function(value){
		if(this._hue !=value){
			this._hue=value;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	/**
	*饱和度
	*@param value
	*
	*/
	__getset(0,__proto,'saturation',null,function(value){
		if(this._saturation !=value){
			this._saturation=value;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	return GImage;
})(Image)


/**
*RGB颜色叠加、减少
*@author chengwen.yi
*
*/
//class laya.ui.GImageRGBA extends laya.ui.Image
var GImageRGBA=(function(_super){
	function GImageRGBA(skin){
		/**
		*叠加红色百分百 默认值为0 取值范围[-100,100]
		*/
		this._addRedPer=0;
		/**
		*叠加绿色百分百 默认值为0 取值范围[-100,100]
		*/
		this._addGreenPer=0;
		/**
		*叠加蓝色百分百 默认值为0 取值范围[-100,100]
		*/
		this._addBluePer=0;
		/**
		*透明度百分百 默认值为100 取值范围[0,100]
		*/
		this._alphaPer=100;
		GImageRGBA.__super.call(this,skin);
	}

	__class(GImageRGBA,'laya.ui.GImageRGBA',_super);
	var __proto=GImageRGBA.prototype;
	Laya.imps(__proto,{"laya.filters.IRGBAFilter":true})
	__proto.updateRGBAMatrix=function(){
		UIUtils.clearFilter(this,GRGBAFilter);
		var _GRGBAFilter=new GRGBAFilter([
		1+this._addRedPer/100,0,0,0,0,
		0,1+this._addGreenPer/100,0,0,0,
		0,0,1+this._addBluePer/100,0,0,
		0,0,0,this._alphaPer/100,0]);
		UIUtils.addFilter(this,_GRGBAFilter);
	}

	__getset(0,__proto,'alphaPer',function(){
		return this._alphaPer;
		},function(value){
		if(this._alphaPer !=value){
			this._alphaPer=value;
			Laya.timer.callLater(this,this.updateRGBAMatrix);
		}
	});

	__getset(0,__proto,'addRedPer',function(){
		return this._addRedPer;
		},function(value){
		if(this._addRedPer !=value){
			this._addRedPer=value;
			Laya.timer.callLater(this,this.updateRGBAMatrix);
		}
	});

	__getset(0,__proto,'addGreenPer',function(){
		return this._addGreenPer;
		},function(value){
		if(this._addGreenPer !=value){
			this._addGreenPer=value;
			Laya.timer.callLater(this,this.updateRGBAMatrix);
		}
	});

	__getset(0,__proto,'addBluePer',function(){
		return this._addBluePer;
		},function(value){
		if(this._addBluePer !=value){
			this._addBluePer=value;
			Laya.timer.callLater(this,this.updateRGBAMatrix);
		}
	});

	return GImageRGBA;
})(Image)


//class laya.display.GAnimation extends laya.display.Animation
var GAnimation=(function(_super){
	function GAnimation(){
		this._atlasScale=NaN;
		this._scaleX=1;
		this._scaleY=1;
		///////////////IColorFilter-start/////////////////////
		this._colorFilterValue=null;
		this._isNull_f=true;
		this._color_f=NaN;
		this._alpha_f=NaN;
		this._colorMatrix_f=null;
		this._brightness=0;
		//明亮度 默认值0 取值范围[-100,100] 和PS一致
		this._contrast=0;
		//对比度 默认值0 取值范围[-100,100] 和PS一致
		this._saturation=0;
		//饱和度 默认值0 取值范围[-100,100] 和PS一致
		this._hue=0;
		GAnimation.__super.call(this);
	}

	__class(GAnimation,'laya.display.GAnimation',_super);
	var __proto=GAnimation.prototype;
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		_super.prototype.destroy.call(this,destroyChild);
		AnimationTempletMgr.ins.removeReference(this._url);
	}

	__proto.setUrlFrames=function(url,frames){
		this.frames=frames;
		this._url=url;
		var atlas=Loader.getAtlas(url);
		this.atlasScale=atlas && atlas.scale ? 1/atlas.scale :1;
		AnimationTempletMgr.ins.addReference(url);
	}

	__proto.updateColorMatrix=function(){
		if(!this._isNull_f || this._brightness !=0 || this._contrast !=0 || this._saturation !=0 || this._hue !=0){
			UIUtils.clearFilter(this,GColorFilter);
			if(this._colorMatrix_f==null)this._colorMatrix_f=new ColorMatrix();
			if(!this._isNull_f){
				this._colorMatrix_f.setColorMatrix(this._color_f,this._alpha_f);
			}
			else{
				this._colorMatrix_f.reset();
			}
			this._colorMatrix_f.adjustBrightness_PS(this._brightness);
			this._colorMatrix_f.adjustContrast_PS(this._contrast);
			this._colorMatrix_f.adjustSaturation_PS(this._saturation);
			this._colorMatrix_f.adjustHue_PS(this._hue);
			UIUtils.addFilter(this,new GColorFilter(this._colorMatrix_f));
		}
		else{
			if(this.filters){
				UIUtils.clearFilter(this,GColorFilter);
			}
		}
	}

	__getset(0,__proto,'atlasScale',function(){
		return this._atlasScale;
		},function(value){
		this._atlasScale=value;
		this.scaleX=this.scaleX;
		this.scaleY=this.scaleY;
	});

	/**
	*对比度
	*@param value
	*
	*/
	__getset(0,__proto,'contrast',null,function(value){
		if(this._contrast !=value){
			this._contrast=value;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	__getset(0,__proto,'scaleX',function(){
		return this._scaleX;
		},function(value){
		this._scaleX=value;
		Laya.superSet(Animation,this,'scaleX',value*this._atlasScale);
	});

	__getset(0,__proto,'scaleY',function(){
		return this._scaleY;
		},function(value){
		this._scaleY=value;
		Laya.superSet(Animation,this,'scaleY',value*this._atlasScale);
	});

	/**
	*明亮度
	*
	*/
	__getset(0,__proto,'brightness',null,function(value){
		if(this._brightness !=value){
			this._brightness=value;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	//色相 默认值0 取值范围[-180,180] 和PS一致
	__getset(0,__proto,'colorFilter',null,function(value){
		if(this._colorFilterValue !=value){
			var color=0;
			var isSetAlpha=false;
			var alphaVal=NaN;
			var len=NaN;
			var isNull=false;
			if((typeof value=='string')){
				if(value){
					value.charAt(0)=='#' && (value=value.substr(1));
					color=parseInt(value,16);
					len=value.length;
					isSetAlpha=len > 6;
					alphaVal=isSetAlpha ? parseInt(value.substr(0,len-6),16)/ 255 :1;
				}
				else{
					isNull=true;
				}
			}
			else if(value==null){
				isNull=true;
			}
			else{
				color=value;
				value=color.toString(16);
				len=value.length;
				isSetAlpha=len > 6;
				alphaVal=isSetAlpha ? parseInt(value.substr(0,len-6),16)/ 255 :1;
			}
			this._isNull_f=isNull;
			this._color_f=color;
			this._alpha_f=alphaVal;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	/**
	*颜色滤镜透明度
	*@param value
	*
	*/
	__getset(0,__proto,'colorAlpha',null,function(value){
		if(this._alpha_f !=value){
			this._alpha_f=value;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	/**
	*色相
	*@param value
	*
	*/
	__getset(0,__proto,'hue',null,function(value){
		if(this._hue !=value){
			this._hue=value;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	/**
	*饱和度
	*@param value
	*
	*/
	__getset(0,__proto,'saturation',null,function(value){
		if(this._saturation !=value){
			this._saturation=value;
			Laya.timer.callLater(this,this.updateColorMatrix);
		}
	});

	return GAnimation;
})(Animation)


/**
*该基类适合一些全屏界面继承
*@author chengwen.yi
*
*/
//class laya.ui.BaseView extends laya.ui.View
var BaseView=(function(_super){
	function BaseView(){
		this.viewType=null;
		//当前view类型
		this._isOpenResize=false;
		this.isCheckGuide=true;
		this._isShow=false;
		BaseView.__super.call(this);
	}

	__class(BaseView,'laya.ui.BaseView',_super);
	var __proto=BaseView.prototype;
	Laya.imps(__proto,{"laya.ui.IResize":true})
	/**
	*仅通过UIMgr.openView 打开才会执行到该方法
	*@param $x
	*@param $y
	*@param $isCheckAutoCenter
	*@param $isPopUp
	*@param $maskAlpha
	*
	*/
	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		this._isShow=true;
		NewGuideMgr.ins.checkAllGuide(this,true);
	}

	/**
	*仅通过UIMgr.closeView 关闭才会执行到该方法
	*@param isPlaySound
	*
	*/
	__proto.hideView=function(isPlaySound){
		(isPlaySound===void 0)&& (isPlaySound=false);
		this._isShow=false;
		NewGuideMgr.ins.checkAllGuide(this,false);
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){}
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.isOpenResize=false;
		_super.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'isShow',function(){
		return this._isShow;
	});

	__getset(0,__proto,'isOpenResize',function(){
		return this._isOpenResize;
		},function(value){
		if(this._isOpenResize !=value){
			this._isOpenResize=value;
			if(this._isOpenResize){
				ResizeMgr.addListener(this,true);
			}
			else{
				ResizeMgr.removeListener(this);
			}
		}
	});

	return BaseView;
})(View)


//class ui.activity.view.commonActivity.CommonActivityUI extends laya.ui.View
var CommonActivityUI=(function(_super){
	function CommonActivityUI(){
		this.list=null;
		this.btnMoreInfo=null;
		this.activityTime=null;
		this.txtTime=null;
		this.txtRemainTime=null;
		this.txtTimeCount=null;
		this.txtTimeHour=null;
		this.activityInc=null;
		this.txtActivityInc=null;
		CommonActivityUI.__super.call(this);
	}

	__class(CommonActivityUI,'ui.activity.view.commonActivity.CommonActivityUI',_super);
	var __proto=CommonActivityUI.prototype;
	__proto.createChildren=function(){
		var temp=CommonActivityUI.uiView;
		CommonActivityUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.activity.view.item.CommonActivityItem",CommonActivityItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(CommonActivityUI.uiView);
	}

	CommonActivityUI.uiView="eJy1lE1v00AQhv/LcnU+1o4/b00PEAl6IAiBUIS2zsbeYu9G9jpNqYI4IBUkUA8cqkIlOABSL8ChQiCB+DNNCif+Ahs7duzENBQJ5ZT1zDvPvLOzu4Dv9DGwwE2Ct4EE+gHrh8DaBduky11g6UpdAi4mjsuBpUJtJAHbJV4XWHd209QmG+Yzd4ClSGAILGiURbd85OCFeKg04oyKLmWFoSgc3iNUpCCbkwHhOzWb+T6ja/m/Tafap47QC8l9fDkgohaAmgRlCTYkCMGcXtHhaCRlHFdJyJcwzAQDZhiaqUpggAKR4CUJg7YdMM9roqCd0CVQtUEYn6c0fWTj28ASfQW4jxG/JeQlQJGP51IZmaqXObVe6LbFsZ/nDSLKSazms27k4bCa2lQdiFlWiYivlkrMIAJMuzgAo1En50rZdDQ9dkVurBxIRO72MHXwkCAqp07YyMPT7qtq3v6NZsQ5o4sTqBtxLVU1Uts3Ob3GAtyiPQYyAA9RJxKktXWXUBzi2jlEUxhnSGY4s+bzqnms5bsMk+7NlCetdGNqfqZXOC0b5saSs//QitsNXbIl+ombGa2YWwUm11mVjew+w+kwV06x0kVsK+oSuWS3FEmG8W6ZuRss64XVQpvYW7RRTt4EPdsnPuQzDzkeCg0g16Ex/nIC5cnRY7k+OXg7t1fEtjkK0oQeo7wtmERhIWszj00FLxlIlZW6+L7JpubzIMKrsCpQTTxStBzXdewjQot04yfHp98OJweffh6cFMAKwXMyaOTIzJ5qQvWCZMmbqAnH0+k16gvmrTPxCmSMpmnmwfIB2aDkPzFuu+LFKBBKAHnEiZ84THn8VPydmZqqLHBeYVGQs/LjvvARLLLOgi5iYefc1dW18tVtUXt5c6eH/3FxtwgOXcSWFvfcXcmPe60AP3Ny8mF//Ob47MWjs5fvJ6/3fn19+uP73uTo1ennZ+OHh+Pn7x4UXC5qXGSLOvHvNzwDuhk=";
	return CommonActivityUI;
})(View)


//class ui.activity.view.idea.IdeaViewUI extends laya.ui.View
var IdeaViewUI=(function(_super){
	function IdeaViewUI(){
		this.msgTxt=null;
		IdeaViewUI.__super.call(this);
	}

	__class(IdeaViewUI,'ui.activity.view.idea.IdeaViewUI',_super);
	var __proto=IdeaViewUI.prototype;
	__proto.createChildren=function(){
		var temp=IdeaViewUI.uiView;
		IdeaViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(IdeaViewUI.uiView);
	}

	IdeaViewUI.uiView="eJyVkcFKw0AQht9lvAZbW5tKbtKDehHUogeRsk02ybTbbNhs2sYS0IOgUunNk4fqVehJKFjRl2lTb76Cm9SCKAheFnZ2/v/7d6YHMvIpGHCItAMa+IL7ARg96KAlXTDKxbwGLkXHlWCU1vRYA9NFZoFx3FtKd3daxKHfxREYStbNzqCJnmpixHNC1ZaruOjRgOaIKbGNMsqhRUkuxFrdqTWQeBHaxGuGuNrwHYhj7W9MQV/PQPraP0h7+7UKt+gvwlaVduVPQGkjAxTz6i8dLqwjQXwwpAipthxSQVc9bSKURStwqpmHTK0MSK4ek8FgNnpI7m5mr6Pp2/30uT+fPM2H5x8v/eTy9v3sIhlPZtfDxetsMFZi3qbCZryjDAJTcMZUjVFioecomgqCwbZssSzuV5TljgrFogY29+QBntI02uKmnDYFktTI5IynUVdsk5atsqrUebrQhQ9h6GRTpLZUwzmJPwHj2sTQ";
	return IdeaViewUI;
})(View)


//class ui.activity.view.commonActivity.items.CommonActivityItemUI extends laya.ui.View
var CommonActivityItemUI=(function(_super){
	function CommonActivityItemUI(){
		this.imgBgLight=null;
		this.imgBgHigh=null;
		this.imgHadGot=null;
		this.list=null;
		this.btnRec=null;
		this.btnGoFinish=null;
		this.containerDiamond=null;
		this.txtAccuRecharge=null;
		this.txtDiamondProgress=null;
		this.txtDiamondTarget=null;
		this.containerMoney=null;
		this.txtAccuConsume=null;
		this.txtMoneyProgress=null;
		this.txtMoneyTarget=null;
		CommonActivityItemUI.__super.call(this);
	}

	__class(CommonActivityItemUI,'ui.activity.view.commonActivity.items.CommonActivityItemUI',_super);
	var __proto=CommonActivityItemUI.prototype;
	__proto.createChildren=function(){
		var temp=CommonActivityItemUI.uiView;
		CommonActivityItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.activity.view.item.CommonActivityReward",CommonActivityReward);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(CommonActivityItemUI.uiView);
	}

	CommonActivityItemUI.uiView="eJytlMtu00AUht9l2BonvuRi75ogWqSAUFuhViiKJvbEHmHPpONxLkSRuqnEE8ASWLGjCxArXqekj8F4bDdO7BRSyCKKJzPn/87/n/EC8PkYARu8wmgKFDBmdBwBewGm2OU+sJtWQwE+wp7PgW01lgpwfBy4wH69yE8+C6GHikcnkIllHHodrycPKiB6g4lYgw7HE8znNYeGISUH+WOMB35MXUq8AceQauqYeOIUgSHarLRcKn+leyR27y2rV8jKQkXVFyXZObCFRzPxbbaUNcQRdA9pofcAEi8WR2tdHxMUodo9VHMcYOJdxCWgrGgRqIcjvoXTljiGltME6ZbJicNoEHQgO0mRUuHaJJLrmVg0hg46A7YmmmJojCA/Fw/57zPZbAYk61aNRHejo2M0hcwtMrKYcCxLhNSNAxSpuRnqRMyhijkK1R1FMm2GiIuYcKJfDKcTc07Jlh1NU80Calu5JUNOjpGzTiezQiwPGJps+p7trWq0cho0LfVf3z/7XHvPttqFtg7pU0xw5D9s8i7iKSSOj4hX8uCucHH6OnS23b0hoUzrbvwcSjgUyuwJhkLOzYdM7K3ytAeHKNgq+tiSRZt6XpPP+IHjxCIXHzKZAEcz8YoCq+/Xqy/XN1dXN5c/xepIaJ/gt4mWMMmhAU1OP2oYsFkfif+HNBHnLEYbd6oCISVYT5AgyPp5yajHUBStISzL2q09GtXFZ0NbAYnplCXX7k8celOCWPUyyGliBV9j1ATH6tP71cdvezmR05xLmv79aacTaJilsJ9TguaVl6ayK1lHr2/l26UkisPNeG+/fv71493t5Yf/Gm8inYytodZ1zWybRqtRYJHNlHK2rF0EDLkPDtho5SRmWzPNhqHpJZSKpP8p4v7yN8LUpM0=";
	return CommonActivityItemUI;
})(View)


//class ui.activity.view.commonActivity.items.CommonActivityRewardUI extends laya.ui.View
var CommonActivityRewardUI=(function(_super){
	function CommonActivityRewardUI(){
		this.imgBgLight=null;
		this.imgBgHigh=null;
		this.imgIcon=null;
		this.txtCount=null;
		CommonActivityRewardUI.__super.call(this);
	}

	__class(CommonActivityRewardUI,'ui.activity.view.commonActivity.items.CommonActivityRewardUI',_super);
	var __proto=CommonActivityRewardUI.prototype;
	__proto.createChildren=function(){
		var temp=CommonActivityRewardUI.uiView;
		CommonActivityRewardUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(CommonActivityRewardUI.uiView);
	}

	CommonActivityRewardUI.uiView="eJyVkU1PwzAMhv+LuYbRD9qg3mAXJu2GhECIQ0iz1KxNqi7dWqr+d5JqmTrEhLhEsWW/z2t7ANPXAjJ4RnEAAnWj6x1kAxwwNwVkNCVQCJSFcf+RAC+wzCF7G3zjqmJSzDv3rLFprOSDXE+NBHZbVDbHuME9mv6G66rS6t6HLV7nTH+2OS5qJW29YpU41xhHcpnYQxYQ6KZ3Rn+0nf+BR7/QJ42/4HEy0WNK/NrSuZMV1+pM9pjwe3XFTPFCN692hEXio5cpmsPX7EOUP+BJOsFvqSeazix1q9zejeisPoRBELhFmEZvxVKX2pVdhZQmAT3lrf+Tx5mENxneEdhoZZ7wy1ZE1jL3QnG42URO6PIQNipRujM0x3O+j9/WHchw";
	return CommonActivityRewardUI;
})(View)


//class ui.activity.view.commonActivity.items.CommonRewardItemUI extends laya.ui.View
var CommonRewardItemUI=(function(_super){
	function CommonRewardItemUI(){
		this.nameText=null;
		this.icon=null;
		this.countText=null;
		CommonRewardItemUI.__super.call(this);
	}

	__class(CommonRewardItemUI,'ui.activity.view.commonActivity.items.CommonRewardItemUI',_super);
	var __proto=CommonRewardItemUI.prototype;
	__proto.createChildren=function(){
		var temp=CommonRewardItemUI.uiView;
		CommonRewardItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(CommonRewardItemUI.uiView);
	}

	CommonRewardItemUI.uiView="eJyFUbFOwzAQ/RV0rAaSljbBG2IAJJhAQIUYjOMkR1M7ctyWUmVgYuZv+CEG/oJLi0lAVGRI9C537957twS3KBVwuEI1BwalNWUFfAlzTFwOPAx7DHKFWe4aENcMZI5FAvx26UdPJyJT3dkF8H0Gj8Bj5nkOIgbVGDW1C+lwhm6xJ81kYvShh1PceUA9ngqd7ZY6I8IKn9SxRVoGAev1WfOCVk4c1zX7VnEm7lXxS0UYrHUMhiTE2OTaihJ4KopKsR8OZ8IShRYTdakeHbG45sPh4+X1/e2ZsJkpmxZmTrUck0Tpjo4eEaRGuwuSS3zDNaLOc5TWVCZ1WyNxopBGpClMs2k7XT1UEVrmxo6AB7sDj248KjBrEpNKO2Wh6/bPzOPW7NrbMPLWUJqu5ObH5s3/xRp9Xbc97yD2i6SZavcjxH4Q0CmdNWN15O2HUTQIIvB1aurEGXTj9IimDi2KohtiP0zTXrQ5xLCN0K646/qu/gQBruoy";
	return CommonRewardItemUI;
})(View)


//class ui.activity.item.LuckyWheelBoxItemUI extends laya.ui.View
var LuckyWheelBoxItemUI=(function(_super){
	function LuckyWheelBoxItemUI(){
		this.img_icon=null;
		this.label_count=null;
		LuckyWheelBoxItemUI.__super.call(this);
	}

	__class(LuckyWheelBoxItemUI,'ui.activity.item.LuckyWheelBoxItemUI',_super);
	var __proto=LuckyWheelBoxItemUI.prototype;
	__proto.createChildren=function(){
		var temp=LuckyWheelBoxItemUI.uiView;
		LuckyWheelBoxItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(LuckyWheelBoxItemUI.uiView);
	}

	LuckyWheelBoxItemUI.uiView="eJyNkN1qxCAQRt9leivdv6wLvkAp9K7QXpQSrDE6u66GxOzWBt+9k10SQq+KgyBzOH4zA8TUaBDwhvoKDJo2NB2IITNQFl0F4mOYkOezNHrBQAKxZvB9u69YRQviwBl0J/SESxXxgjGtXK9O6d1q7VY9ljZV5dHhY+MNuTr80U8t0j+w2bOpqGE1GhtH4X+j8FsUPkfhBYOLbInGsylRBb/Q8iJnNute5Jd2f3T7+2i7YhYW60noRr5Uofdx4dxSvw4+vtJM95cKLoz8w25T19sDsdKhGZfjdB0h5086v9eDeA8=";
	return LuckyWheelBoxItemUI;
})(View)


//class ui.activity.view.recharge.RechargeRewardListItemUI extends laya.ui.View
var RechargeRewardListItemUI=(function(_super){
	function RechargeRewardListItemUI(){
		this.icon=null;
		this.txt=null;
		this.star=null;
		RechargeRewardListItemUI.__super.call(this);
	}

	__class(RechargeRewardListItemUI,'ui.activity.view.recharge.RechargeRewardListItemUI',_super);
	var __proto=RechargeRewardListItemUI.prototype;
	__proto.createChildren=function(){
		var temp=RechargeRewardListItemUI.uiView;
		RechargeRewardListItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(RechargeRewardListItemUI.uiView);
	}

	RechargeRewardListItemUI.uiView="eJx9kd1ugzAMhd/Fu40KaWFB3FbatOtN06ZpmiJIwWogKEn/VvHucxgguoshIDL4+Du2r+AvnYIcXlGdgEFnTecgv8IJS19DzuOUQa2wqv0Q9AyKGnUJ+cd1kj41slJL7QXymMF5eM917hm4PbaUX5imMW10wC+PneOrrq1I7fBbPVqkysATFu6McQFLetL37F8q5wM2HCM3SxgcpaV8LEwLswfpnPIu8urs7UFF6FUTEqLK6HI0NHGzG+wLKf5QhRio681MFdlE9UN2wFCQxnQFD96avdoabULKHRcijcX8HfLNommqtDOtf6bpEIIGWkyyDd/t1kEmNVahJztIlmYfSLnV2P0xvP4dk0gnl87TEQJ9CDIpJdxsK+zqjG0VnmldtVKhpyGzkFq907pXyRi8jUGJVhUeTSh0VNYj/SSHn/0P0GzCCw==";
	return RechargeRewardListItemUI;
})(View)


//class ui.activity.item.shareInvite.ShareInvteGoodsItemUI extends laya.ui.View
var ShareInvteGoodsItemUI=(function(_super){
	function ShareInvteGoodsItemUI(){
		this.bg=null;
		this.icon=null;
		this.countTxt=null;
		this.overIcon=null;
		this.msgTxt=null;
		ShareInvteGoodsItemUI.__super.call(this);
	}

	__class(ShareInvteGoodsItemUI,'ui.activity.item.shareInvite.ShareInvteGoodsItemUI',_super);
	var __proto=ShareInvteGoodsItemUI.prototype;
	__proto.createChildren=function(){
		var temp=ShareInvteGoodsItemUI.uiView;
		ShareInvteGoodsItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ShareInvteGoodsItemUI.uiView);
	}

	ShareInvteGoodsItemUI.uiView="eJx9kctOwzAQRf9l2EZt0kdKvENdQCXEhgqBEKrc1HGGunawnT6o+u/YSVMCpWTheDyeuXeO92B3BQMCT8g2EEChVWGA7GGDC5sDSZIAcoY8t0Ci/uAQQJqjWAB53TeVkxXlrF26AxIGsK3WNdXuypy7vFmidHuaWlyj3XVNTjWbSLdn3RJnC6reyxmVsznvFJLD4RD8KzFIKg3/O3qNB40epkrCt3GfoDLNlX5xpjrDJnquorbQPZ0z8UsoroeJWkJRI5SqUtrp1vrxrFZLNlZC+cRVNBoNw9HpHEivBdK1ypS0j/jpE2EduaobjdTLp02XfpRlPd+FCuSenq46tC0//AXnurLs1jUanAt3L6PCsMa2WjM9qRkdX0VQyUvXpzvOUTLDupeeaYcCJf8oz97odsoqDm0bUdiv2Z3QJXHjYWV4Dc76OgLZwvBzjGHWz5LBT4xo7uxKVHLE6pJdAhvFl8Fm1dcCmzJpmXYTvR2+AOzK+Ng=";
	return ShareInvteGoodsItemUI;
})(View)


//class ui.activity.view.TabItemUI extends laya.ui.View
var TabItemUI=(function(_super){
	function TabItemUI(){
		this.btnTab=null;
		this.redDot=null;
		this.imgStateBg=null;
		this.txtActivityState=null;
		this.titleMsg=null;
		TabItemUI.__super.call(this);
	}

	__class(TabItemUI,'ui.activity.view.TabItemUI',_super);
	var __proto=TabItemUI.prototype;
	__proto.createChildren=function(){
		var temp=TabItemUI.uiView;
		TabItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(TabItemUI.uiView);
	}

	TabItemUI.uiView="eJyNUktOwzAUvAp6bFNIk7ai3vERAvHZFIEAocpJ3OSpqR05L7SlQgIWCIkFB2HBkhMh4BY4gbRVKSr2ypZn5s2MR0DDRACDYxR9sCDRKkmBjaCPAUXAHKduQSQwjAhY0722wI8wDoCdj0rk4UZGpOQ0eAis1rBgAKxaNfhLrs07j+QR98yztIvSnLlPeIk0XM2wrYXsZ22vIHJWEhnCPKXdHg/FjI5dyDh2rZTRIthSNFemEikZBshl5Vvi2voHtV0SYy9sESexEc73EGXK46od4C/yfe6JeDYfp2CvmHj6SgcnmifAOjxOhVVm33BLaRrQ+o9SMYLhIjEwjcD77fP7w30+EGnVFZsqVjlguelW12xvfG8SskArg0XTFKvUmpNWq2sWdJSkFl6JycmQbJ+dunuGwi9JO8UyN57KiyGdmWF5jGEehS8kCb3Qd/6f8n/xt23HGXdJSLE4SMOJ38+7m4+X17eX+7enR5h4qNWnPbj22MMB+lqlqkNLp3xH4LQb7tZ9e6GbC7O/ALzYBjw=";
	return TabItemUI;
})(View)


//class ui.activity.view.placard.PlacardViewUI extends laya.ui.View
var PlacardViewUI=(function(_super){
	function PlacardViewUI(){
		this.msgTxt=null;
		PlacardViewUI.__super.call(this);
	}

	__class(PlacardViewUI,'ui.activity.view.placard.PlacardViewUI',_super);
	var __proto=PlacardViewUI.prototype;
	__proto.createChildren=function(){
		var temp=PlacardViewUI.uiView;
		PlacardViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PlacardViewUI.uiView);
	}

	PlacardViewUI.uiView="eJxNjz0PgjAURf/Lde0AiIjd3Nw1OhiHChWaVB9pKx8S/rutSuL4bnLPuW+EGxoJjqOSHRgaQ40FH9Gp0tXg62XEUEtV1Q58FWcTQ1ErXYKfx7l6kL37rw7gacbQgycxQ0emPBnRgDvzlGwGZ/mGoRXG9++2OnwI1Epz09T5zBaGtPaZlqJUj8rLGZTdubv+6H6weVmaetONHm6vXn5Skn4vD9oaJQKnIE1BtsjFKllGPrlSeCNwpukyvQFcmlOF";
	return PlacardViewUI;
})(View)


//class ui.activity.view.shareFriend.ShareFriendViewUI extends laya.ui.View
var ShareFriendViewUI=(function(_super){
	function ShareFriendViewUI(){
		this.list=null;
		this.btnGet=null;
		this.isGet=null;
		this.btnShare=null;
		ShareFriendViewUI.__super.call(this);
	}

	__class(ShareFriendViewUI,'ui.activity.view.shareFriend.ShareFriendViewUI',_super);
	var __proto=ShareFriendViewUI.prototype;
	__proto.createChildren=function(){
		var temp=ShareFriendViewUI.uiView;
		ShareFriendViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.activity.item.ShareFriendGoodItemUI",ShareFriendGoodItemUI);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ShareFriendViewUI.uiView);
	}

	ShareFriendViewUI.uiView="eJydkk9rg0AQxb/LnBfzR43EYwsNQsmltBRKCWucuNOa1e6uSSTku3c1NdpgD81FxJ237/feeARTFQghvBDugUGh8kJDeIQ9JUZAGLhjBgIpFQZCfzI7MVgLyhII346tdBlteYp9cQWhlR2ap/4kaYcyLtPSjo3uBUnUOOJrQzsy1UgLrvBBEcqk/x6nzkeRwunELkaPpM2VjTv1G6PJ3GMtsz+eMNhxVbueFQoL5ObVHnVh5sFQlqcOYJHnSWRw23eUfFtPKXuMqr64lIaaTyU5bSKHrMoZuOk5snHee4GWd6UxubzK5M28n0xumyM2coF1kn+1WdIqI/lVOoX8XeTgxrype7b16/pIU5zZ2Q3PNLYYpG+jqMhypEMgfxQQNCR+ML8sddot1ZbRlHsDyOYgqlVcmgaEWV2MmdVD91vMgnpF39mzBmg=";
	return ShareFriendViewUI;
})(View)


//class ui.activity.view.shareInvite.ShareInviteViewUI extends laya.ui.View
var ShareInviteViewUI=(function(_super){
	function ShareInviteViewUI(){
		this.barMsg=null;
		this.list=null;
		this.msgTxt=null;
		this.btnShare=null;
		ShareInviteViewUI.__super.call(this);
	}

	__class(ShareInviteViewUI,'ui.activity.view.shareInvite.ShareInviteViewUI',_super);
	var __proto=ShareInviteViewUI.prototype;
	__proto.createChildren=function(){
		var temp=ShareInviteViewUI.uiView;
		ShareInviteViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.activity.view.item.ShareInviteGoodsItem",ShareInviteGoodsItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ShareInviteViewUI.uiView);
	}

	ShareInviteViewUI.uiView="eJyVU8tu1DAU/RezjTKPNPPIjlaojAQV0lSoCFUjJ7lxTB072M5MwmgkxAqJRVf9BNZ0h1SJfg2Dyl/geCbpdOgCsohynXvuOcc+XiJd5YAC9JrCAjkolyJXKFiiBY11ioKh13VQCpSkGgV+b7ByUJRSFqPg7bKBnkwyTGAXXKHAwEr7VheUmyaGOSlMW+copRwUdHCk6ZzqqqNSLGHCzTd0CjorKZfAKyzeU05mISUhcd/lBK1WTsv4SgoiQalDLJ+Ve8Se37PU5j3H0jSHWL5UBNUlKwy66479VtajKvLteChnmmLh5vwh/Quq9B5rv7dh9QYNLds0qRxHcGbkGE4JOWBtCv+xbZxuFWg4FiJWEw3ZLoksuKZZ3ZiJuGCg3Ea7Ozdn5xrhmTu9d7E7hGMLNPsagzRWznfMHJ9Cue/mYHiw2cOx0wShPx41zjJFTi1E18gA/f708e7b9/XXH+vLL3e3t+vP1z9vbn5dXdfutRQXcCSYqIFPPK8fDpN23Ux1EFXPdcasiEDLAu7j1vcclAiup/RD3drdVGbOU0kxM1OiZm5iH7OCGSU2bZDoB0d2clhoLfhfPjcxHfS8Ni2a201EbUQikWWC19GsgDGxsHFwTKBDYOY3+ucr0R9ZsuHo/y9FgpXgpL0U1stWB+ZRKuSbOtd+U53Zqj7n89Uf1sFQUA==";
	return ShareInviteViewUI;
})(View)


//class ui.menu.battle.RoleUseSkillUI extends laya.ui.View
var RoleUseSkillUI=(function(_super){
	function RoleUseSkillUI(){
		this.bg=null;
		this.icon=null;
		this.level=null;
		this.skillName=null;
		RoleUseSkillUI.__super.call(this);
	}

	__class(RoleUseSkillUI,'ui.menu.battle.RoleUseSkillUI',_super);
	var __proto=RoleUseSkillUI.prototype;
	__proto.createChildren=function(){
		var temp=RoleUseSkillUI.uiView;
		RoleUseSkillUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(RoleUseSkillUI.uiView);
	}

	RoleUseSkillUI.uiView="eJylkMFKxDAQhl9Fxmuw3arrkuueBPGieBGRtJ0moWlSmmx319J38TEUfB19DpMuXaUiK5hDmPn5Z74/6cBtawQKdxLXQKBuTG2BdrCWuRNA5+cEBEouHNBF3BPIhFQ50PtuHLysGMfvky1rvJxyr9lSal8za9HZyOHGNSuMvKpUVEm9qx5TyXS5YprHyUmtOfQ9+X37FmhCYDPcO5LMjP4zS2DO9A/KrXdPILN4oFwsRozCFpU3hc2+vWqPZknAusaUuDTKBNNxPJy9DvSUQGG0u5FPvkn80my0FkWRDdbUhB8NcQ9kOptPMg1vumYVfuX6eH55f3v9bzB/JsEe+k+Y2rL+";
	return RoleUseSkillUI;
})(View)


//class ui.chat.ChatBriefBattleViewUI extends laya.ui.View
var ChatBriefBattleViewUI=(function(_super){
	function ChatBriefBattleViewUI(){
		this.chat_bg=null;
		this.box=null;
		ChatBriefBattleViewUI.__super.call(this);
	}

	__class(ChatBriefBattleViewUI,'ui.chat.ChatBriefBattleViewUI',_super);
	var __proto=ChatBriefBattleViewUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatBriefBattleViewUI.uiView;
		ChatBriefBattleViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatBriefBattleViewUI.uiView);
	}

	ChatBriefBattleViewUI.uiView="eJyFjstqwzAQRf/lrkVrGUIbLQul5AeyCSHIziANtSUhyXnU6N+jGFLSVTezuK85M/I1EBS2TGcIhOhDgppx5mO2UO26ERj9lOjT6W6gI1SOEwlYYmMzlGyaItBbHqq1mx9zm1Ebet67QtWly3Kft0861nhvdT50phbSN7u74MfRu9eJD5lD6ox8CW6x+Ye+ItdfkK2QayFXQr7jL08RvxzbD3/5D+OtfWB0SzgF3dduVfXAZqEhlymilH25AQOHXhY=";
	return ChatBriefBattleViewUI;
})(View)


//class ui.menu.battle.EmoticonsUI extends laya.ui.View
var EmoticonsUI=(function(_super){
	function EmoticonsUI(){
		this.word1=null;
		this.word2=null;
		this.word3=null;
		this.word4=null;
		this.word5=null;
		this.word6=null;
		this.list=null;
		EmoticonsUI.__super.call(this);
	}

	__class(EmoticonsUI,'ui.menu.battle.EmoticonsUI',_super);
	var __proto=EmoticonsUI.prototype;
	__proto.createChildren=function(){
		var temp=EmoticonsUI.uiView;
		EmoticonsUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(EmoticonsUI.uiView);
	}

	EmoticonsUI.uiView="eJzFlc9u00AQxl8FDddVm/W/xD6WA0JCXJBQEELVJl7iJa5t7HWTEOWCkGgrIYTCpRUSVRHcEHDjUp6mSdu3YGLH9ZKmVnpKEiWz3tmd33wbfTsEOYg4OPBE8B4QiOIwSsAZjgi0PeG74DwbFikPdliHKzkwAKdGoA+OphHoCVd64OiGSSDpigAXtJiUPt9sCRa+EkFnMxXbRdxNWdDZiIIO7peI1/x+LLAWUIPQOqE6oSZOeFx0PAmOQa3RiFRyaDUrI6FaVfXEw6ov8UFfXFWPQ8mkCHGFbmE3LGh7YfwUO9swi1EzG6kIW2H/GkA9B7AUKYyyB43SZZo+2kqlxOL/b6bnstq45S6LMa0Xxi6Fqta8lA1SVVWftbj/GKXNjycb3gv9MMYicPdF9iI3/BbLMfPs9Hjy7RTU5iuZNctQobW1QN+Z7o/Pj96e/Xl/+elwBXY7PzvbUtH1taBf/DrBD6q+OvaC5MZauKd7Hyd/96YHv6c/9ldAp5a+5C9urgV9Mn43GX+/BfSC4NZaqC/ffJ18+Hn++cvF8QmyP1foH4pELtpTbo9m7cqdNJsWTfh5fhKxNkfno+Y8bubrYh5xJnFCK2Kc0Etro9ZSa7vukblDlAj1BoGA7cySYx64PFY8v27c7goqd21UXgFFvN1adv3g3WMT2sBvFaWxgvs1MgqDls3djOGybjovHondcCatbs3jZh7PZRHtrFJx5iqUNjvz2fsfX1+ObQ==";
	return EmoticonsUI;
})(View)


//class ui.menu.battle.GetLostScoreUI extends laya.ui.View
var GetLostScoreUI=(function(_super){
	function GetLostScoreUI(){
		this.bg=null;
		this.title=null;
		this.score=null;
		GetLostScoreUI.__super.call(this);
	}

	__class(GetLostScoreUI,'ui.menu.battle.GetLostScoreUI',_super);
	var __proto=GetLostScoreUI.prototype;
	__proto.createChildren=function(){
		var temp=GetLostScoreUI.uiView;
		GetLostScoreUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(GetLostScoreUI.uiView);
	}

	GetLostScoreUI.uiView="eJx9kFFPgzAUhf/L9ZWMMiaTvpk9mRhfTIzGGFPgQq8rLYHiNgn/3VZkmz7sqe3pPed8uQPYQ4PA4YlwBwE0rWk64APsqLASeJysApBIlbTAk2gMIJekCuCvw+x8uKtFhefeT9E6Pauc1m1J+7uwVmFYo+5DVYQ9vcveFPhBJeqCFo32s1rUOPnGMbgQfwC+TAPYu+OGBb9tllzBqVAJXfXOF24kaewwvETwt39OEjqXpn0BzhbX8+sZeHQOdy8yVP/YonhiS5OZrctN6xMt7t0WYcmYB7Wt2eLGKONHrqJ1UrL1UQe+OgLN9tJo+0hfTorZ9HKfty0JT5Afg0SZRannV1T9rAJL6zb6Nn4D4uabXQ==";
	return GetLostScoreUI;
})(View)


//class ui.menu.battle.PlayerMsgTipsUI extends laya.ui.View
var PlayerMsgTipsUI=(function(_super){
	function PlayerMsgTipsUI(){
		this.btn_addFriend=null;
		PlayerMsgTipsUI.__super.call(this);
	}

	__class(PlayerMsgTipsUI,'ui.menu.battle.PlayerMsgTipsUI',_super);
	var __proto=PlayerMsgTipsUI.prototype;
	__proto.createChildren=function(){
		var temp=PlayerMsgTipsUI.uiView;
		PlayerMsgTipsUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PlayerMsgTipsUI.uiView);
	}

	PlayerMsgTipsUI.uiView="eJx1jsuqwjAURf9lj4PWJzVDB4oTh05ESjShOT7S0JyqteTfrYKPe0HY07XXasC1N5BYkblAwJeFD5ANLqTZQvaSVMAayi1DpkkU2Fk6ash18yIXJ5Wbb7RusaHAFTIRf37CgVwLbBXz0XRPxlXdijImHzre5e1FoJuZl9Teo5+K1/ApGE9iFG/zcloxF+6fe5g+3aOBwFmVDx+7TGk9K8k4jV8Z+5BZVdRF9WyJcRPvGLVaLg==";
	return PlayerMsgTipsUI;
})(View)


//class ui.menu.battle.PropertyItemUI extends laya.ui.View
var PropertyItemUI=(function(_super){
	function PropertyItemUI(){
		this.icon=null;
		this.skillname=null;
		this.number=null;
		PropertyItemUI.__super.call(this);
	}

	__class(PropertyItemUI,'ui.menu.battle.PropertyItemUI',_super);
	var __proto=PropertyItemUI.prototype;
	__proto.createChildren=function(){
		var temp=PropertyItemUI.uiView;
		PropertyItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PropertyItemUI.uiView);
	}

	PropertyItemUI.uiView="eJydkE1OwzAQhe8ybK0m6V/a7FiyBiEQQsh1ponBsSPb6Q9VbsOaDVuOA/dgEpoQsagQm5Fm9ObN9+YAfl8iJHAtcQsMSmtKB8kBtjL1OSTRMmaQo8xyD8k0rhmIXKoUkrtDt3lR8AyHq3tIQga7tronqUmz4t4rDArUVVDJBy9L53apHJU6g7pmJ73mrRfVDbckkcJo6I25c+hd4HHnbYWBMEVhdNBomjsrbh6l2rRnaEVwhbeENYqPzc2x0bzAznqIc0W2v2iiaYszHbP+RWHYsRGUUq0ZgwaJRh/vL5+vb9SbDdq1Mlua5TJNsQlxvDtc6349JtO10f5SPpMkWnx3JD63kisSCqNMc/MMhYiXnCZcyaz5icK1/2OMaLLsc8z6GLoqVmh/MkzC0/y9/h/wMzFZzAfwtnWo6/v6C0UT07M=";
	return PropertyItemUI;
})(View)


//class ui.menu.battle.PveBoxRewardUI extends laya.ui.View
var PveBoxRewardUI=(function(_super){
	function PveBoxRewardUI(){
		this.iconGoldBuff=null;
		this.iconGemBuff=null;
		this.boxReward=null;
		this.turn9=null;
		this.turn8=null;
		this.turn7=null;
		this.turn6=null;
		this.turn5=null;
		this.turn4=null;
		this.turn3=null;
		this.turn2=null;
		this.turn1=null;
		this.turn0=null;
		this.iconReward0=null;
		this.iconReward1=null;
		this.iconReward2=null;
		this.txtTurnLeft=null;
		this.txtTurn0=null;
		this.txtTurn1=null;
		this.txtTurn2=null;
		this.boxFengli=null;
		this.txtFengli=null;
		this.txtGemBuffCost=null;
		this.txtGemBuffNum=null;
		this.txtGemBuffName=null;
		this.txtGoldBuffCost=null;
		this.txtGoldBuffNum=null;
		this.txtGoldBuffName=null;
		this.btnGiveUp=null;
		this.txtGiveUp=null;
		PveBoxRewardUI.__super.call(this);
	}

	__class(PveBoxRewardUI,'ui.menu.battle.PveBoxRewardUI',_super);
	var __proto=PveBoxRewardUI.prototype;
	__proto.createChildren=function(){
		var temp=PveBoxRewardUI.uiView;
		PveBoxRewardUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PveBoxRewardUI.uiView);
	}

	PveBoxRewardUI.uiView="eJzVWNtu2zYYfpWBu1VikhJ1ulsKLBvQ9WJrtxZDEdAWJbORRUOmEqeBr9cVKNCL7aIYMOx2z1DsbeYCe4tRJ0t2rBOaOG2CABFN///3ffxP1DWQV3MGXPAjZ5dAA/NYzBfAvQaX3JNT4CKkmysNTKY89ID783W5/dsZDVh9/xVwMcEaWALX1sAFjdUmPhHRqQi9k8T31d7FOY/U6phKGbLRjEXJaH7BRgk/e8FpNOZnY7XveB4FYLXSWj0hy8o8OVue2KzTkc+i4OU0odF+XydiuePJyfzoJi49jcXye3ZJYw/0lQVmJkyjXYDISzwOjQyS2jmhIXsK3CPUJQXGG/PFkRGnjydceuIv2WnMFQsANaSpv071c0II63386L0OtGCBbKeiQQ5CAxu9DmYQDR3BioZ9EBq62cuP0YtGEbGojHmZxJHTkcDK/q1EL3bqXu0eXlu008CU8WAqlVm9JxSHNECxDgelTDC77t/s4X9gspkNVMnBVcfIasBiHFp2bGz5129bdh3aDVTxwWXXdacBCzq07Lq1VW5g73LT3r/tPNR1VBVkWIEjcFgTh22g1GQwo4vzQpSYRR6LH+cW0/XO+CBF/JH6UJPPGjU16GLB5GIk2VLGCRtxyWbpvtGYiqWaooIzUi/CzxTmY6OqyNkDjSZTEauPUPl/9glZrZ730DKb8j5jLdEnpKVuGZ+1lvgetNwH8Qjl9cyArTOpFFEwDW7gIHUc6iEWkkoulBEMu8QpPWMbtXm+otEdOUZm6+GnN6uP8PyQjlnYMChtyvVSPlYV+yHzpdqZBoBaXP/697//vENZ4ZKxOGcPRCjS3V8afvq7WVf2NOCLSP6gukhKJ39SO7/jk1gshC+/eEa/YVx9Y1La8Jnv2zboQmqSXCJi7mCFFVBr/cef67evBuM0BuDcDecO1EYeUdauwuiTRk2KDIQ7qPH9om4vwwbK31iYVu1+/zWLgpDvvd/vY36Ea4yL76YrIQ/SpJxxzwvZRgR0bN+kjwzk0Cb6GG7ofxVzGm6Rzn7UylikQNPSW6ujWWrX5VBPBaoJiySLwbY+e7MdFiNUdS/S7Rrh4q3LA7GoZT/Zk/cmRqbjbZMs+11qvHbeuNd5l9RLSnFmqytOkWPmV07YyudRMqvo4BH+OEK9AhjZvg9hjVCYVtRuPkWRg6idEJ1VQQg+/PZ+/cv79eu/Prx6e/fMqtQcwgzbRYczGogVbxa7Q2/sEAjhvYcetvJJijjthHrE3gBGdxh72HSK2GtKppLRgOC7bWrdwffoJJFqNNxtDWZeKMimoY1ldMov2JN5Bo5Klh6Uu3/uU6OXR8WLxOPF7BVm+rmg92tjpG/q7n77cnnj/rvvkKx8nNDT+i1i76eYzstGURyZWW/ZG4blYb3+/b93b24eE6bYxGZjyybD8mhYx3q++h9Y9MlD";
	return PveBoxRewardUI;
})(View)


//class ui.menu.battle.ScoreBarUI extends laya.ui.View
var ScoreBarUI=(function(_super){
	function ScoreBarUI(){
		this.mpImgRank=null;
		this.mpBarBg=null;
		this.mpBarPro=null;
		this.mpTextNum=null;
		this.mpTextScore=null;
		this.mpImgLight=null;
		ScoreBarUI.__super.call(this);
	}

	__class(ScoreBarUI,'ui.menu.battle.ScoreBarUI',_super);
	var __proto=ScoreBarUI.prototype;
	__proto.createChildren=function(){
		var temp=ScoreBarUI.uiView;
		ScoreBarUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ScoreBarUI.uiView);
	}

	ScoreBarUI.uiView="eJyt091KwzAUB/B3Od6GLWkdjlzuRgZDxIk4RCRrszauX2Sp2xy98lrwTp9BkOndHmjzOTz7oh1IGc7etCc5Cb/8207AjBMJHK6UHAKBRMfJAPgEhso1PnCrRgn4Unm+AW7TjIDjq8AFfjPZrmyGwpPFpWPgrEZgtL49CI1NYdIMvQsR9bFx0FcRDnWFMYGshjJKq4FbTdUdqySRt2xwRCA7wGmltimuN4WIHD/WnZ1qPZdlZB+RjcfZHq2oawjd8Mps965x1danHuWpVpgCMEqYReqEMchzskqkeydor70FLt3hnuu4zNsVOs8z99bRekIYLWqtEm0h1ZboyuB35XEuu5Qjc5aG2GfwCYcWL8+Lj9fF59f323Q+e5rP3rHE6V4cmTbCcJM6ZhIH8XKDo97qgoNJO3EtUW0n1jJn2ZTSvytYlt0e9sHh79Ba5V/6DlU/FZH3H58den8ADUs69A==";
	return ScoreBarUI;
})(View)


//class modules.battle.view.menu.SkillTips extends laya.ui.View
var SkillTips=(function(_super){
	function SkillTips(skillId){
		SkillTips.__super.call(this);
		var bg=new Image("battle/menu/ui_tips.png");
		bg.sizeGrid="37,37,37,37,1";
		this.addChild(bg);
		var skillData=SkillModel.getSkillConfigData(skillId);
		var skillPerData=SkillModel.getSkillPerformanceBySkillId(skillData.Display);
		var attributeDescription=skillPerData.AttributeDescription;
		var propertys=attributeDescription.split(",");
		var x=10;
		var y=60;
		for(var i=0;i < propertys.length;i++){
			var px=x+i%2 *207;
			var py=y+Math.floor(i/2)*57;
			var data=propertys[i].split("|");
			var item=new PropertyItem(data[0],LanguageMgr.Ins.GetLan(data[1]),data[2]);
			item.x=px;
			item.y=py;
			bg.addChild(item);
		}
		bg.width=430;
		bg.height=Math.ceil(propertys.length/2)*57+57;
		var skillname=LanguageMgr.Ins.GetLan("9007379",skillData.Level)+" "+LanguageMgr.Ins.GetLan(skillPerData.NameDisplay.toString());
		var title=new Label(skillname);
		title.anchorX=0.5;
		title.anchorY=0.5;
		var colors=["#ffffff","#f5b600","#722bbe"];
		title.color=colors[skillData.Quality];
		title.fontSize=25;
		title.x=430/2;
		title.y=25;
		bg.addChild(title);
		var line=new Image("battle/menu/ui_tip_fenggexian.png");
		line.anchorX=0.5;
		line.anchorY=0.5;
		line.scale(430/270,1.0);
		line.x=430/2;
		line.y=46;
		bg.addChild(line);
		this.width=bg.width;
		this.height=bg.height;
	}

	__class(SkillTips,'modules.battle.view.menu.SkillTips',_super);
	return SkillTips;
})(View)


//class ui.menu.battle.over.BattleOverDanViewUI extends laya.ui.View
var BattleOverDanViewUI=(function(_super){
	function BattleOverDanViewUI(){
		this.imgTitle=null;
		this.barDan=null;
		this.barExp=null;
		this.viewStar=null;
		this.iconDan=null;
		this.imgHead=null;
		this.listNorL=null;
		this.listNorR=null;
		this.boxNext=null;
		this.txtTime=null;
		this.txtTitle0=null;
		this.txtTitle1=null;
		this.txtTitle2=null;
		this.txtTitle3=null;
		this.txtTitle4=null;
		this.txtAddDan=null;
		this.txtAddExp=null;
		this.txtDanName=null;
		this.txtLevel=null;
		this.boxGold=null;
		this.txtGoldNum=null;
		this.boxBox=null;
		this.boxKey=null;
		this.additionBar=null;
		BattleOverDanViewUI.__super.call(this);
	}

	__class(BattleOverDanViewUI,'ui.menu.battle.over.BattleOverDanViewUI',_super);
	var __proto=BattleOverDanViewUI.prototype;
	__proto.createChildren=function(){
		var temp=BattleOverDanViewUI.uiView;
		BattleOverDanViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.menu.battle.over.BattleOverNormalItemUI",BattleOverNormalItemUI);
		View.regComponent("modules.common.AdditionBar",AdditionBar);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleOverDanViewUI.uiView);
	}

	BattleOverDanViewUI.uiView="eJzVWV1v40QU/StoeAEp68z4M84L2i6rbUW3ILagXaFVNYmnybSObdlO6raqxBPwAALxhJBWKyGkSjwAgjcW8WvoVv0XzHgcZ5w6jp2UVtuqVSYZzz1z7pk7996cgvg4IKALPqXkCLRAEPpBBLqn4Ig68RB0EdLMFhgSOhjGoGvq8KwF+kPqOqD72en02Z2tER4Q+elj0IUtkKT/Jzhkc+hosEtjl8+KDqnH3nGxNxiz59oPhtQjEWn3cMwmtEfEG7f9CQnbY7oXub2BchAMwNlZq9oegurUYhMDJcuXrW6YRro66rSm1Jh6bqls4ThxlMAb8P3SE/IopIwy0Gmlv0CmdKlpQ0tNqzqsNLg/SFKD8nofhf4gJFG0gcOHyfy6UKyLLHvqpB4O38ceWGwmyNYjyZ6DPZRtMMCOQ9mrLoAtrcX+6mOw9RSDjSQID5OgHgSSBPUgcHE/iXH/cF4zmtAM4r4U9idiasgREJf0Y+JseQ5hk/Qy6W/4hS2xaey4eHjEP6MxGUFQ9lSZm+8hJLAgM5eYUe3xhO14qrE+dskz9rRiZIOn2SCgEz/mn9jZa/aBrucgI7ZXKOnR0GTitnGPuNeAZrrRGXkxSWI+b6Igg8OIQ/+QPPBdn3P5ttqxtJ6ev880nNuNkzijed/34ifsiLBPDTFiHz+m/dCP/P34rWd4k1A2rT9ddD/9Yf59LgFd5gdU2w92tjmtLvUSkYgNsdcf+iEjHHL2xehpOlp20IXljr2CYbjEcBOq1KZUmatQpa5OVXpIjDtyj2ndsXu02u7RsivLXoUr7Qa4Wu0QraGM9Q7RevLI2NbuWh96U32o/OJpDFm/CX2sFDnWUObKkeMmNLlS5LgRTaL/50p5vsw6soTA7FkV0Pe9QoaJWSIXR22eRoRjjsvBbtsZY++I0D0Ijbn0BiqWlN+I0er0GLYAyNOsacZlSgXLJsHOsvydP1APwTaN4vn80+gIAFZnatZls3b8cJvbDXCfb5pZCElAMM/i1Olrnt6VJqSpgz9krmWrjLC7xUKCbDUkLJsNd8VkMZj5PR+HYy+m6VtjqnCxKEI4CteMUmbjk625jKxku5q5aLsfv/HbLa1JDdsUJ8BsWJUeuCeZ8utpa+5S4KY7opywVS0Xt8oz96zM8pMdnrrPhKybtUt7ZGbhu+GunIPqTaHK0iO1mNeJrH7Y5S7LS5B3jHdrFCCoUG+oK9cbZYURgiLQWxosoGQ8wBnOi+++uTz/vVj3wDo4INSsjg0qAkwFpo5pzmNCM0z//v3zxa9/3jYm29DnMakzTJevvr365evbxoTgdedpkvO+fPX6xee3BcqA2UGzrhGlzzC9/uHl5V/nl+e/XXz1Rb0SfAaet7Nqn4DaJzWFLho7OpRP7H3HEbe/gH6PF/xzeBE0oEUW4VXNHO/9kGK3iNKCFgRLkdnTpEgtIhNtpwyZAWFTKiuhZSGkGpo+7fTZMmmMsR0sR7qLFz9evTy//OOfq+9/aupwicBGDq+jVjM71pYEfptM0onN+0QrilRGuVlyLWZ9XJVfj2nGwdZXa3T2pKZvfoM+8l0HFFq5dSqveu3jA974Xr9/XMPYgO2iuaUyBWhCAEZHEgDnaGc8yiWgXj9XmmY4CC1ULFx8rjRr39B6c4Gpuli2zFapL8XMhq6Uv+a4Vbcyw6qoXXgHe5G9HvYTyhKzPbXK5Ky20uXSSl+nsqpgpe+PRr7Xxm4wxBms5qyLtr06W7+6Ub6M9UKVMMLRoQwK1sj8BB4N5YHuvetBDqY/i2SuV8h8QTiuFjoy1HKlf0CO3/ygxb+5w/4JF/dxVNdksWXBrnwaU9/bSL+FKFwSWSDr5NcwLsydlYsj3xm7JFKEqBV5SW7uP8ubQpA=";
	return BattleOverDanViewUI;
})(View)


//class ui.menu.battle.over.BattleOverViewUI extends laya.ui.View
var BattleOverViewUI=(function(_super){
	function BattleOverViewUI(){
		this.fontDan=null;
		this.barDan=null;
		this.barExp=null;
		this.iconDan=null;
		this.imgHead=null;
		this.boxFour=null;
		this.listFour=null;
		this.txtTime=null;
		this.txtAddDan=null;
		this.txtAddExp=null;
		this.additionBar=null;
		BattleOverViewUI.__super.call(this);
	}

	__class(BattleOverViewUI,'ui.menu.battle.over.BattleOverViewUI',_super);
	var __proto=BattleOverViewUI.prototype;
	__proto.createChildren=function(){
		var temp=BattleOverViewUI.uiView;
		BattleOverViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.menu.battle.over.BattleOverFourItemUI",BattleOverFourItemUI);
		View.regComponent("modules.common.AdditionBar",AdditionBar);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleOverViewUI.uiView);
	}

	BattleOverViewUI.uiView="eJy9Vm1vmzAQ/iuT92XTENi8N9/arl0rdS/SumnVNFUOuMQt2MiYlq7qf5+NoaUJC0STRoSCyd1zzz13PucByPuSgAX4TskdsEApeFmBxQO4o6lcgQVCXmiBFaHZSoJF6MNHCyQrmqdg8fOh9z0tcEaGzvfKMXIt0IAFtEB1Q5myWmIpc+IUhNUOvyXCqenlfbPM7OsyA4+P1la4IAxaOFfhddRCfyu0bFK7ZJnCqehv8kFQRRnEVvsBw5SGoY85k4c5LTei77XRkRtZ4BYLZXmlLN9jBvQ6r7Uv1hfYyqmhLNN3T2xFiNSe+jnBOblQetlB0K1+mNWkNHtRS05/bYlNE87cNvAUYAih0drfXjyNiDYQvwieCVJVB1gcNRvIbqej2+u4xMLI+LdAZYdHmssUs065Eqep0lHZQ8uz1L0zBTceUjhqynkUSFPOojBaqCg22SPYh9YSvkgfqyiyciRppKg1hxTnznPpLIBZsuLCNEq/Mo0yt08C92kLBeETkSI7ITid2i3aYR6DA76uPOznQac6b455LcDYQPk0xh+uzZMcs6xWZs7hijJSEWd8wFxXGwNmFD42Ayb0doygixP8c3G6aRlBNLnl/FmbOPJawBh5k4DePEBkpow7DThvzERGcAT9acR+zPwaYJ7RSq4fOjA0WfdNliubtstUhBInesCqNAQpCZbq2e+fVZHQWCMetHw+KyYa5VSSYhhREJYScW5MzUL9zHDxYi1qJmn7qqa2zsw2Wdo6QXszwrfTtURH27XfzQjG3m4Nm15v71Y0LNwZXpJ8PXSM+tB+L7Rs5LlO0gJ6dKkXb4K3WnQp+A055DnXRq/dOPKW/tP7thj6IP2qZo4aya5ZKcuPNBG84lfy1QU+IVR5JD3GVXuBKZIhNBvARUOO+2lqxm3H8p07g6Q7JKnhOpL7guJ8hNouWvY0vWiNpjmROpoBdBCE/5GqIkAl5UydoBt/hXyjq96+hjB+Yfzc7gVP65xUdsKLgjN7iKkb/A+SJlG+";
	return BattleOverViewUI;
})(View)


//class ui.menu.battle.StarUI extends laya.ui.View
var StarUI=(function(_super){
	function StarUI(){
		this.mpBoxAll=null;
		this.mpBgStar=null;
		this.mpImgStar=null;
		StarUI.__super.call(this);
	}

	__class(StarUI,'ui.menu.battle.StarUI',_super);
	var __proto=StarUI.prototype;
	__proto.createChildren=function(){
		var temp=StarUI.uiView;
		StarUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(StarUI.uiView);
	}

	StarUI.uiView="eJyVjl0LgjAUhv/Lez0sAgl2V3deB5FEhOjYhroNXX4g/vfmQLCQPhhs54zzPucZYHvDQHGWrAWBqbSpQQe0MrMCNNwSCCa5sFM9EqRCFhnodZiDR90tcz2oi3T+XjCapHKzpXHTh6LAN2hUJpy9YXeh507PGpifrCsJ6lwq92Mas3nIe64V76TigVH8ZStBolKhq9iZBuHcXXz3s9H+k1FUriv9rzPe/HkCbVqEgw==";
	return StarUI;
})(View)


//class ui.menu.battle.MulitBattleOpenCardUI extends laya.ui.View
var MulitBattleOpenCardUI=(function(_super){
	function MulitBattleOpenCardUI(){
		this.boxCard=null;
		this.card1=null;
		this.card3=null;
		this.card2=null;
		this.card0=null;
		this.card4=null;
		this.btnShowAD=null;
		this.moneyIcon=null;
		this.moneyValue=null;
		this.txtReward=null;
		this.btnContinue=null;
		this.btnBack=null;
		this.txtReturnTime=null;
		this.boxPopup=null;
		this.txtBoxTitle=null;
		this.txtBoxTime=null;
		this.txtBoxDesc=null;
		this.btnBoxOpen=null;
		this.txtBoxPrice=null;
		this.btnBoxDrop=null;
		this.txtDropTime=null;
		this.imgBoxIcon=null;
		this.additionBar=null;
		this.bottomCenterBox=null;
		this.txtOpenTime=null;
		MulitBattleOpenCardUI.__super.call(this);
	}

	__class(MulitBattleOpenCardUI,'ui.menu.battle.MulitBattleOpenCardUI',_super);
	var __proto=MulitBattleOpenCardUI.prototype;
	__proto.createChildren=function(){
		var temp=MulitBattleOpenCardUI.uiView;
		MulitBattleOpenCardUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.menu.battle.items.MulitBattleOpenCardItemUI",MulitBattleOpenCardItemUI);
		View.regComponent("modules.common.AdditionBar",AdditionBar);
		View.regComponent("modules.hall.view.MainBoxView",MainBoxView);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MulitBattleOpenCardUI.uiView);
	}

	MulitBattleOpenCardUI.uiView="eJzFWFtv40QU/isr8wJSSDweX/PWpi1UYi9iy6orhFaOM3GGOp5gj9u01UpcVkICFgRCFK3EwwqhIiEqgRALtMuv2fTytH+BGd8yTpxbK5U8tBlnfM53zvnON8fel+huD0l16R5GO1JF6gWkF0r1fWkHt2hHqgMA9YrUQdjtUKmuq/LDiuR0sNeS6u/uZ/eud20XTbw53MI+29SxPa/p1pputee7bHOXRCHa6AQkctnWtu2FKL246ttND7Xyi6L3h5XJXneZx4rUl+py7tSzfTdi22qNDvZRiGpNm1IP1brIj2qkh3zHDlq1CD9ouiDGNdMBNGMXAGiVLEwLgNzhZPtKGneI99AbAWbhScACFUWzKsBQ2H9DGoYKdU1Eskz6ozgsLcGhMN/bdsBdk36DeZPKKnQz8jBdjrHdZqj4vnWKuqJRbszMjXHcgP0cRD7FXW4iwlUeVTWJsIrZ7WF1gt131guJnM+7pkLRO7xe71BXRO/KNXofepWvN2ZDUcWY1at5f0/wf2s5opT4I6TVdCMmrWYaefMAM696k/p3O2RnaUXK28kh3W7cPl6ExvtHrqhyhf/hfvA2ofelumJVtXS1yVuTr7Ku0qyy3rhV2ud60l6yubiWuFt7KVbfjlPp2U3ksaXtOx0SMJAyR5WsNuPVLNlRYjRqIS/ET5xleXFsD8W2zXSxmS5SFNhhBZnpKIsb5hWCeWMwl2h33YnrOgakjXx3rxOxJLXsMUiWCMkSdE4RAb2V5qkMEFRzQKpWAHTPZuRgd1HUZxYVLv40IFuoQTzCN70CVg1zeVXKrsfZzAGw7W3i07uMVewHNVmxu5YCbHMsTmZlrbG2JnOm2R52Yz6gNpVmwk+OCx2UoKd9+jba4ZKdgZcGP303+Ow36SohyIuHMH/nGrxz825tMD/Yj5M/qV/nbjjFShwYi/fbnrf7fsq4aR02f5RWQZOWbWdrPMJd5HlkZ8EYEzJoek4G/RLhtjtpsJnkAUHweJtkxFCsWewEia5YeoGSNAr8DX4I5LR8VZFfGydls607iimQEhSIqOREvImdgISkTW/ct99EWKRkO/6McLBk3EmRAnUoA6bGhQmHmA2L+ayYj0J3SC/qlZZmrDIzRzc412goxwhjVHNaHIri62BOIYFQrBVL1AZmLoaVuvjl+7N/Di+OH118+vXg6IezoxIxkWVgQUuoGxTrBuWF6jYdtZoM5NpwSs1QF+h1fvjjxbcfnR78eXHwx8uTJ5B9K+HbdNzKXLiRriCFu24SzgoaRGj2CZSkXoFGMYgVFDqCdJ/8Pfjq89OPfz578ijJ/IvnjwfPfj89fvry5IsXfz0+/+T52fHh2fGv518+G/x7MKk6pgyRDCdGCeasjmKaheqUKx5MCwTBUJOAporqR/p80hsXQDdAyB9RIs6dTIm4kl9i8MoOTG1xYWxtTT8FwMyHu0RkDHlmB08ddorz15waHCubyK47AXbEHrnBPsCwSvpC1UwAnOJwcEkdLmZr9okJ1UT1tKEsJZxZYZvGOUMCljHUxO6lzk0A4OKkCGjrgwVoMa1CQBYqxAP8Xw/J0kSl5VCVXKpw12XlKA7tdhgiGtY4bqZ/Nf5oxx8OWA5JH7PEPjBGMwYmP64stVqYYsLGpGBspEveUfBXHCkau7B5+LDZJa3IQ2E1eZyoijaLUd+0MafX6NsqPrwBNZGy4RDACNttIJ+iIJkoxv3xl1LVbWasKhqeSQhNSwc5U2AEl8kiIwYffnN+9JQdZuxM08JxbiimAZvqlRvXSWb6kWH3P3cyfrc=";
	return MulitBattleOpenCardUI;
})(View)


//class ui.battleRecord.item.BattleRecordItemUI extends laya.ui.View
var BattleRecordItemUI=(function(_super){
	function BattleRecordItemUI(){
		this.img_battle_result=null;
		this.label_battle_time=null;
		this.UI0=null;
		this.UI1=null;
		this.UI2=null;
		this.UI3=null;
		BattleRecordItemUI.__super.call(this);
	}

	__class(BattleRecordItemUI,'ui.battleRecord.item.BattleRecordItemUI',_super);
	var __proto=BattleRecordItemUI.prototype;
	__proto.createChildren=function(){
		var temp=BattleRecordItemUI.uiView;
		BattleRecordItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.battleRecord.item.BattleRecordPlayerInfoLeftUI",BattleRecordPlayerInfoLeftUI);
		View.regComponent("ui.battleRecord.item.BattleRecordPlayerInfoRightUI",BattleRecordPlayerInfoRightUI);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleRecordItemUI.uiView);
	}

	BattleRecordItemUI.uiView="eJzFkFFrgzAUhf/L3Wuwamvb+bg9CWWMjo6NMSRqmoTFRGJc1xX/+6LO1pUWyvawF/HCyTnfOTsw24JACI+cbABBoVVRQrgDRjhlBkJ/HNQIUsZFBuHLrpdHOaZkqN9C6CL4aL/lG5dWk2BjBFmSQmkzqnjMlKQCyzihTiEp1DXa292d8pt0hsF0guAdayvjOY0711iTshIG9mHWmFbWY3TLuCQlGR2nl4zYeB5vlM7afARYpkzpZ8vsBP311F5DtgVOiDhC8zo0z0ew4Zlh9nfm9ZSiedBzGp43vfo5vTmCtZLmgX+S7kqVUM2rq2scTPyswRKctpXI2vxY6ea7Umor3Au8JTqSa7VoZEfLeXu8DmkVuVaiK9nihFBxJxmYOdyQ3Dlvv4ou4Fi2DU+CzKfugcT7LUkbcBHK+Un82WAT/z83mbregWT8901e6y/z6ERp";
	return BattleRecordItemUI;
})(View)


//class ui.battleRecord.view.BattleRecordViewUI extends laya.ui.View
var BattleRecordViewUI=(function(_super){
	function BattleRecordViewUI(){
		this.img_battleInfo_up=null;
		this.img_battleInfo_down=null;
		this.lab_page=null;
		this.btn_pre=null;
		this.btn_next=null;
		this.list_battleInfo=null;
		this.topbar=null;
		BattleRecordViewUI.__super.call(this);
	}

	__class(BattleRecordViewUI,'ui.battleRecord.view.BattleRecordViewUI',_super);
	var __proto=BattleRecordViewUI.prototype;
	__proto.createChildren=function(){
		var temp=BattleRecordViewUI.uiView;
		BattleRecordViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.battleRecord.item.BattleRecordItemUI",BattleRecordItemUI);
		View.regComponent("modules.common.TopBar",TopBar);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleRecordViewUI.uiView);
	}

	BattleRecordViewUI.uiView="eJzFVNuOmzAQ/Zfpq0UgLFnCW9OHKtJqH9pttVVVIQMT4xZsyzZN0lX+vebWEJRuL1JVCQkMM+cyHPsJ7FEhJPCe4x4IKC2VgeQJ9rywJSRBEK4IlMhZaSFZ3fgnAnnJqwKSj09j77amDKfNR0jiJYGDu5EzUrAmYL5w4TpyWddSLBqeCuQ5Ck8J5gAM/4avNXfgEPhkvOAs4CYOCTBNHcGOVgYJ0EqV1KGfTuRZPX4nxyeXxgY51Bi0ZmHxYHWDi7O6jLOCe58Vg8sh/IIsXndsgRP7lWpXxGuWZtTaCrdiJ9NGwQ/u/vUbVFLblrKUglVUpBkbhvK7DsPl6nnWQu7FP+CNbqOON2qJfwK+o+KIacFTP+zQr6XojmZYzbCHOZ5TFPujuYpmqerV7KSwb110IFnG/cp9f6k5beFyWcm2/sV6F62DqDPGWRdCFBY1nE6fJg7vN421Usw9rnslYRCM/JkVqdIIF5luvTKNQ6Cvuby/NsJlj357TqT7E6xxhYtXJRdocDGfqCldxZG7qbapHX+ZyEupP7ice9G4euxWf2IyDi9MCof/v1weOP1bj3fc2Hma/NkGqVzNZIe0LhXN0YG700ujQmqnz4/tbrjidjOozqUuthbrKa1GUaB+6Av7hfusG2F53b5quJdN2j3u+r054LvtLKUPUm2onvL0hqxUGb0kqGXRVGi8/lDzhs4W7jvDtfC+";
	return BattleRecordViewUI;
})(View)


//class ui.menu.battle.BeyondItemUI extends laya.ui.View
var BeyondItemUI=(function(_super){
	function BeyondItemUI(){
		this.nickname=null;
		this.apple=null;
		this.jiangbei=null;
		this.jifen=null;
		this.head=null;
		BeyondItemUI.__super.call(this);
	}

	__class(BeyondItemUI,'ui.menu.battle.BeyondItemUI',_super);
	var __proto=BeyondItemUI.prototype;
	__proto.createChildren=function(){
		var temp=BeyondItemUI.uiView;
		BeyondItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BeyondItemUI.uiView);
	}

	BeyondItemUI.uiView="eJyVU91KwzAUfhU53pat69bS9gVU0CtBHCKStmmTrSalzVzn6JUXeikI6jMI3u+B5p7DrEm3qbix3pRz8uX7OYdMQUwyDD5cUDwGA7KcZwX4UxjTSBDwLc8ygGCaEAF+x+xWBoSEphH4V9Pm6sktSvDm3WJImeyjLEvxEbrF7ZAgPhnh9ojelLSkrYwlUFXG/wwTqSyFS/nrGlv5guQP2ykKcPqbzazZXNeAO5RLEKPhkEkuiRO4lOFg8f6yeHpevD7OZw/z2cfX55s8qyE/0DFn4pzey27HVZU8P6Nhzgsei4M+OsZUwkKe8qXOoevZsRXJDkppsoyR4ljsTN/rKb9e47cOD9tnMYhFUE9j5Vvd2iXmOLVYx1xNZ0ARS4I6yFZBDdOiRYhS3AffbNm6uNSFtrNBi1hIeN6AVaXQu1Zpe8pt11q7jTFbL9LTH2zoKsC+u4sjN7CCfXdnqd1ZMpd+RbbTWCUYRWtfumrel+1U1XX1DRq5JV8=";
	return BeyondItemUI;
})(View)


//class ui.room.AppleRewardItemUI extends laya.ui.View
var AppleRewardItemUI=(function(_super){
	function AppleRewardItemUI(){
		this.mpTextRank=null;
		this.mpBgChest=null;
		this.mpIconChest=null;
		this.mpTextChest=null;
		this.mpBgGold=null;
		this.mpIconGold=null;
		this.mpTextGold=null;
		AppleRewardItemUI.__super.call(this);
	}

	__class(AppleRewardItemUI,'ui.room.AppleRewardItemUI',_super);
	var __proto=AppleRewardItemUI.prototype;
	__proto.createChildren=function(){
		var temp=AppleRewardItemUI.uiView;
		AppleRewardItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(AppleRewardItemUI.uiView);
	}

	AppleRewardItemUI.uiView="eJytk8FKw0AQht9lvAbTJtomOeqhFDypSEFEYrpN1jbZkGxtaynoQXoS9Cp48F4KXqQHH8dQPfkKztbEJqGlVE32sAwz//wzH9sH3vMJGHBESQck8APmh2D0oUPr3AFjW1MlcAi1HQ5GsVAYSGA5tFUH47iflFZd0ya/rN0zz0grXdsDQ92SoCsqJLgwA0xy/UPS5fum18RMjleMTUejt8lVdHf7+fqAUc90ST6zwTx+QC8xrqKUxVpMiG1YmlYu6TAYSMsnQBf6t4kSzhDPo6UM7di7Dgk51oRN6mHIDEPCQ1m4C9pEtpjrMk9u09OO39z0PVtkopdKQHF+UBRJHFWcYtr+XDdZnLbWztMeqxbzErWfBulgqkVqGQuRFGbb0PQskkQoZvL+chMNn6Lx43T8XCvmqSTJcyzKQiwnK8BoMytqubgETIXhqv7OJUslFv0fKFmHAWOu3AjalMvn1LPPaGwrg0yUrIlMme1Jz72iuHdM7GN4H02ua/g48csDi1NX8xL/F0IgYZw=";
	return AppleRewardItemUI;
})(View)


//class ui.room.AppleRoomItemUI extends laya.ui.View
var AppleRoomItemUI=(function(_super){
	function AppleRoomItemUI(){
		this.mpImgBg=null;
		this.mpIconBg=null;
		this.mpIconItem=null;
		this.mpIconGold=null;
		this.mpTextName=null;
		this.mpTextDesc=null;
		this.mpTextCount=null;
		this.mpBtnHook=null;
		this.mpImgHook=null;
		this.mpBtnSend=null;
		this.mpImgSend=null;
		AppleRoomItemUI.__super.call(this);
	}

	__class(AppleRoomItemUI,'ui.room.AppleRoomItemUI',_super);
	var __proto=AppleRoomItemUI.prototype;
	__proto.createChildren=function(){
		var temp=AppleRoomItemUI.uiView;
		AppleRoomItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(AppleRoomItemUI.uiView);
	}

	AppleRoomItemUI.uiView="eJytlEtv00AQx7/LcrUaPxPiY4MUKqFciqAVqtDWHtvb2LuWvU5fitSeOFSAEIdcuXDlxkOqgE8T0n4LxnEem9IQIyEf7F3P7Pz+M7NzTuRpCsQlzxgcE42kmUhz4p6TY+bLiLiO/VAjEbAwksQ1bH2oES9isU/cF+dz152EhqD6nqKftnLCgGZomKQ7SbgdomneZxw3aJrG0KUJNDIhkkaQFUw2CvYyZnDIqPDZVsqn5uwMuhnDqKTpaKahNZuaaWoGUdis2mxGSyMn+FoyGrqpMHqC14H0qTgq+gXl4Z+Utq5hFNvQTEdl1M3a+TOmjOVL5dqRkChkeQ4yb0g4kVkBDYY/GRqVcGcR8PCI0SMWFfMsUu5FItsnrr7lzFd701VdKtOpMmfqq1hdgb4bsUK0mqfKozHMSaaLvRWseyGH2gLuCT2EeA0c5n5R15YC+hR5elhGdCvRcO/m84fbi8vxx+/jt1e4KwaQBbE4xj8R833gSuksPCgQXO5ijauVJ2JRHvwgaMKh7/0lv/gds7DMTAyBJJt0lMylDr3sT5H5zzOaErdM5UKX6bRXdT2C3Fvqmly/n3wa/Rp9uXnzdfxjdPvq3fjb5eTn9fji9RqZS2mmpUoLQG/D/5PWrqS171SlIwoul/imXnaIzEQfOnMSm5qObi/2kXMFuqlAG60g8C0V2lCQjeHwAJ8lZ2+7kFLwO6R21UyWo6BuS/5YiP7myRCK4gTnwmx81bpcyoD8pxhVhBqCZl1lN1cF7QL3awTLAPhaMb17R0V7Gq/VWjQtzmxV5rrIMQ7UAs9rdCLGIZ+hIEQeFeKUitkESdlAyP1qmE+/sbaWpVxYpyr0wfA3GhU+kQ==";
	return AppleRoomItemUI;
})(View)


//class ui.chat.ChatFullView.ChatBoxItem.ChatBoxListItemUI extends laya.ui.View
var ChatBoxListItemUI=(function(_super){
	function ChatBoxListItemUI(){
		this.box=null;
		this.imgBg=null;
		this.imgHead=null;
		this.imgLBubble=null;
		this.imgRBubble=null;
		this.vSex=null;
		this.imgMedal=null;
		this.txtName=null;
		this.vipBg=null;
		this.imgVipLv=null;
		ChatBoxListItemUI.__super.call(this);
	}

	__class(ChatBoxListItemUI,'ui.chat.ChatFullView.ChatBoxItem.ChatBoxListItemUI',_super);
	var __proto=ChatBoxListItemUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatBoxListItemUI.uiView;
		ChatBoxListItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatBoxListItemUI.uiView);
	}

	ChatBoxListItemUI.uiView="eJyVVE1vozAQ/Sur2avb2ATywTGXtlK6h01VabWqKkMMjOpgCoYmG+W/rw0JtdI2SS98zpv35s2DLehNISCERxRvQKAoVVFBuIU3XOoMwuHI3xGIM5RLCP9uD9UztXaLNxBeDQmsIaQEGl6aishUfIa8W/FUHGH9AwhX6Sw1L6sXzM1tnHE9yLiUg6Q2hyh95g3XvLwu8hR2O3Ky6aTVY1rvJxkxh+VW8OWXPA4JgUxgmmkLP0foj1rGiddTeva655zP6iiS4kvaGp9fseCK7Zkr/CduSjTugUeJFxA2Iv7QkTT2L5H0qZbfF2rxLtXiT10tNkwLzeOXIz3j1iE27lPSLMTlMWEt2o6BFVr1YcJlJfoZCsk3ohx0p7s8UXaMnOf7GXK+sp1RixU7nZ4uN99iaT6SUEPydGZBtBuJ0n5PAXXWdC+WXDouB9TV/SDW+tgir2sYvDdkLDh01Gv9y+ojoC00hLmqsXL6e2bsROV6YdZtkJPuzhTeY1yqSiX6xx9+K9BAYiWV7fmTUUGFZ55wiak1SIpEn/06p63OaS+tweLEl28czlSeRrX+mEeTxYDYw1lO5nfxo5N3t91fzyMW88Z1Y2gX+LT7D4Llm0E=";
	return ChatBoxListItemUI;
})(View)


//class ui.chat.ChatFullView.ChatGuild.DailyDonateTipUI extends laya.ui.View
var DailyDonateTipUI=(function(_super){
	function DailyDonateTipUI(){
		this.bg=null;
		this.lab_3=null;
		this.lab_4=null;
		this.lab_6=null;
		this.lab_5=null;
		this.line=null;
		DailyDonateTipUI.__super.call(this);
	}

	__class(DailyDonateTipUI,'ui.chat.ChatFullView.ChatGuild.DailyDonateTipUI',_super);
	var __proto=DailyDonateTipUI.prototype;
	__proto.createChildren=function(){
		var temp=DailyDonateTipUI.uiView;
		DailyDonateTipUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(DailyDonateTipUI.uiView);
	}

	DailyDonateTipUI.uiView="eJzNlD1P3EAQhv/L0K7g/IFJ3BEJRUjpQDQIndbnsb1i7bXsvS9OSHSI4kS6U1CKUCBRQQNU8HNiuCp/IeM77nzARYgm0Hi9M7Pzvs+udnuguymCC1sC28AgzVSag9uDtvB1BK5p2wwiFGGkwTUsZ59BIxLSB3e7N1n6RXVmV3bBrTHo0Hde8XrMQ5xfzp6ItnhG5V5ItfmuSOi/oeJ4qSnqWqT5YpqMMmIPv2aCFMC0mfmJWTVmOvDU8j6bqn/jHspn6s48Xcm9ukWFGjvUBYrL42JwVvS/P1z/oqhqYRZI1aZMJHwfE4rFqpnjZpSpZkitAi5zfAyuJdyT6E+DE2+mxSBQid4gCJqZ4xn1XM0EL102lFSlmYXAQc9vUIRLEY62AhONGbyGZi+PdtaoEA2HRFsiF+RoaqhCtmeQR7DFj4vhwcnv/umf25P/DSkx0K8iGjXjBWOp8m9Gp2IcHvbv7y6Kwc1wcPVRAVesN57h8vMzvD8/KH4evesZ7sxAvngBiO5zdQdNZwojEqxufyp5F7Ol8bCeBKp8CjyltYrrZeXjizDxTF3GSWpulwb+AuDrpMc=";
	return DailyDonateTipUI;
})(View)


//class ui.chat.ChatFullView.ChatExpressionUI extends laya.ui.View
var ChatExpressionUI=(function(_super){
	function ChatExpressionUI(){
		this._list=null;
		this.btn_close=null;
		ChatExpressionUI.__super.call(this);
	}

	__class(ChatExpressionUI,'ui.chat.ChatFullView.ChatExpressionUI',_super);
	var __proto=ChatExpressionUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatExpressionUI.uiView;
		ChatExpressionUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.chat.item.ChatExpressionItem",ChatExpressionItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatExpressionUI.uiView);
	}

	ChatExpressionUI.uiView="eJx1kMtuwjAQRf9l1laoIRHgZSsWSN1RVa2qCplkiK36JdvhIZR/r0lDQIhurPFo7tw75wTx6BAYvEvcAwHnrQvATrCXVRTAprMnAgJlLSKwcT5vCZRCqgrY1+kiXWpe4632CCypDt0bfqRJM6XgcSS4UqNtkx48OI8hSGtGm3p9/WXO1GmTtk3AN+FtU6cMW64Cti0ZDF9liHd+s2lnSCkZkudjAjvu0/xa/Ql2q9JbpZ65X/WprNYpwi50/d48OF7iZ9pV9PUHsDkBjw55TDW9IUKLySMiL+naxXDUMqL+D49vTJT6rNG2ahSG7Ewqk0mSPdxieDft0VTooW2/b7isnE/COyuad17FrBjQ0Am9oNlEsy6VDfiYet9cGL5RmE6MvsHr9Xlx9v8FU+G+gw==";
	return ChatExpressionUI;
})(View)


//class ui.chat.ChatFullView.ChatExpression.ChatExpressionItemUI extends laya.ui.View
var ChatExpressionItemUI=(function(_super){
	function ChatExpressionItemUI(){
		this.icon=null;
		ChatExpressionItemUI.__super.call(this);
	}

	__class(ChatExpressionItemUI,'ui.chat.ChatFullView.ChatExpression.ChatExpressionItemUI',_super);
	var __proto=ChatExpressionItemUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatExpressionItemUI.uiView;
		ChatExpressionItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatExpressionItemUI.uiView);
	}

	ChatExpressionItemUI.uiView="eJyNTlEKwjAUu0u+ix0I++gNvIA/IlK7Z9/DrStrdRtjd7cKg31KIISQhCzIcyQYnIVGKMShjwlmwShNZpi6VmASz/mrVwXH0jYwl2Urnjrrad9MTwnFd2yzZtu2+vEqRFMcKCXpg777m2TqDjF4/LU4wxwVph9vvyqFtx1KWlwfsDtZreu14ANGPUaW";
	return ChatExpressionItemUI;
})(View)


//class ui.chat.ChatFullView.ChatGuild.ChatGuildBoxUI extends laya.ui.View
var ChatGuildBoxUI=(function(_super){
	function ChatGuildBoxUI(){
		this._1=null;
		this.btnFriend=null;
		this._2=null;
		this.btnCancelBattle=null;
		ChatGuildBoxUI.__super.call(this);
	}

	__class(ChatGuildBoxUI,'ui.chat.ChatFullView.ChatGuild.ChatGuildBoxUI',_super);
	var __proto=ChatGuildBoxUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatGuildBoxUI.uiView;
		ChatGuildBoxUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatGuildBoxUI.uiView);
	}

	ChatGuildBoxUI.uiView="eJzNU9tq20AQ/ZUyfVViXXPRWyxIm4eWQqEkhCDW0lo7ZLPrSKvastG/Z6yVUmPk2nkLKxZGO7dz5swGTLPgEMMf5EtwYFHqRQXxBpaYGwFx6PoOCI6FMBBfu60DmUCZQ/y4GSLvXljBd0MbiF0HVt29m6Z6RkX+mWBmIpiUk3lNV41pw/QrqmJWnC9UQZkqXPNvJVIV8C4cL7QfHGtkqld7bfj+edR14gcO/GUlOaUejMX+nNbGaLUfb6O9S38Inxl1WyJXORzCM++eU3Ls0Ug24/I3Qdom6s1fLM8JMUWfeYPLrVYEDX5gVupKz82XB/ad4/CaaKlL6gu+JlHiTm+G/zcSi64LrgwvR7GNDSi0tISHUGCmVWqQ6bVgFkjbOv/YGkvp25wXl+85JVNFTY6TRKDiFZ/sFWmaqueIqUzo8oEksx2Yte7JatsnOs5/RvyutH68/skUnHmWg0MUNM36NOBBYFXiRh9B7o9AP1pqSy6Vug5PrrRkaEhpx4qNyj+86qoFQbQj/4RycDllxkh+cAloqVcknkxwVaSz2nyWVRgXrt3y6OpkUrOOgyPa3TL81J831oO5NQ==";
	return ChatGuildBoxUI;
})(View)


//class ui.chat.ChatFullView.ChatRoom.ChatRoomItemUI extends laya.ui.View
var ChatRoomItemUI=(function(_super){
	function ChatRoomItemUI(){
		this.state=null;
		this.xianlu=null;
		this.lc=null;
		ChatRoomItemUI.__super.call(this);
	}

	__class(ChatRoomItemUI,'ui.chat.ChatFullView.ChatRoom.ChatRoomItemUI',_super);
	var __proto=ChatRoomItemUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatRoomItemUI.uiView;
		ChatRoomItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatRoomItemUI.uiView);
	}

	ChatRoomItemUI.uiView="eJyNkM9Kw0AQxl9FxutimjZq2asH9aAXRRCRsE0n2cHtbkg2trXk4MFH8Dk8ieDFt2l9DCcN9U9pQRYGdveb7zfzzcBPcwQJV4RjEJAXLi9BzmBMQ69B9sJIgEbKtAcZRbWARJMZgryZrTpPRyrDba3lHVnWJFr5QCtjgrTiMsjiwrlRTB5He7nNuLukBzwuiJ2hI7p90RSoa7EdMwUZhgImILuHAu5VwaLSK9+INmMrik215G3a4xInfs2/s7Tv7a/sJ6SsqVjkG62ExfvH59tLyA+ps/6CV+CZ+u2Nv88oKVzpUr9zrU6QWJY44xqj3fQAB8Pkz4Jb+WFj2Q5gkh/4/PVx8fz0X/Zv0vmmLKM2yrDznZ5RNqtYGBxpslhisBZnQ4rReizaTOtbPl+IVsD8";
	return ChatRoomItemUI;
})(View)


//class ui.chat.ChatBriefViewUI extends laya.ui.View
var ChatBriefViewUI=(function(_super){
	function ChatBriefViewUI(){
		this.chat_bg=null;
		this.box=null;
		ChatBriefViewUI.__super.call(this);
	}

	__class(ChatBriefViewUI,'ui.chat.ChatBriefViewUI',_super);
	var __proto=ChatBriefViewUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatBriefViewUI.uiView;
		ChatBriefViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatBriefViewUI.uiView);
	}

	ChatBriefViewUI.uiView="eJxdjkEOgjAQRe/y141KUYhdujFewI0xpEDTTkRooApIencbEoy6mcXMf/PfBDdaBYEzqR4Mtm1sBzGhp9IZiDjZMRhF2jiILfcMhaGqhLhMC3m6S62+0RFiwzDM8/vNU7YhXhjpslwHoLtRHRZGVtX6QRkVTZ3memXr+UgvdWwpNCHasyhlPGY8xY+MZx+JQzP8KSSzQsSX3jwkvL/6N18VSa8=";
	return ChatBriefViewUI;
})(View)


//class ui.chat.ChatFullViewUI extends laya.ui.View
var ChatFullViewUI=(function(_super){
	function ChatFullViewUI(){
		this.bg=null;
		this.tabChannel=null;
		this.imgGuildNum=null;
		this.txtGuildMsg=null;
		this.input=null;
		this.btnExpression=null;
		this.btnSendWorld=null;
		this.btnSendNormal=null;
		this._input=null;
		this.btnSendBarrage=null;
		this.sendBarrageCheck=null;
		this.imgForbidden=null;
		this.txtForbidden=null;
		this.output=null;
		this.shrinkage=null;
		this.viewLine=null;
		this.viewDonate=null;
		this.viewMask=null;
		this.viewGuildOpt=null;
		this.btnLine=null;
		this.txtLine=null;
		ChatFullViewUI.__super.call(this);
	}

	__class(ChatFullViewUI,'ui.chat.ChatFullViewUI',_super);
	var __proto=ChatFullViewUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatFullViewUI.uiView;
		ChatFullViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		View.regComponent("ui.chat.ChatFullView.ChatBoxItemUI",ChatBoxItemUI);
		View.regComponent("ui.chat.ChatFullView.ChatRoomUI",ChatRoomUI);
		View.regComponent("modules.chat.item.ChatDonateTip",ChatDonateTip);
		View.regComponent("modules.chat.item.ChatGuildBox",ChatGuildBox);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatFullViewUI.uiView);
	}

	ChatFullViewUI.uiView="eJzNV19v21QU/yrV3avb2U6cpHlbMwqV1jIthTIhFF3H18lVHV/r+jprqSptoKp76ISmiSF4QZpA4gHEwxAMdbAv0z/pE1+Bc31tx0ntJaOgkUhOrn3uPed3/vzO8R4SuwFBTfQhJfeQhgLOghA199A96og+alq1mob6hPb6AjVrVX1fQ90+9RzU/Hgv3bo2wD2S37uLmrqGduJr/pwh5iBu90A23KY+/O/2sbjex5533Y3gYvc6ctGRi6XA76H9fS1Ts4ntKSWGUYnVZEcLbLf62PeJJ1UEuAv7jGqpNuF3YEenq7bECjXkUE66gjK5YUi4oF3soSLYK5EQIFWC+01U+nggD6SCDHRYetgmXpt+CvdMPVnexo5DQbiJFk1Nl99UcJX5EBq0TruchcwVC3fxe4SmT1vMYxyMQ9dsy27YWLvmum5yUXdSSZA5f368cH787YTXC1FW61eEafxnMMfw0ksO4MmLpwvnXx7NBmhdFaD5dgCeHvy4cPLym8J8LSrTRYWzVs8K1aykxUQHvXcjOGMjGpQWbEQ7feb3HIr9xAcpV5jVIhs2yY6YMkGVsJkZYDSyat4RsQHroTxYyK1NY6zBAKNdcJrysCxzt8yFXem9xHmwtJm0SvCIaAh7tBcDI74gHDLjE/jOyI7aVbOj8nay4+zhq4WLr36JQeYgsp1Z5K2Pk8IPIpELc70wzBuFbqs04nMrdTNrBcJ/ZyfgJAxpLF3uThe4PPFjimaiiks0qkBVLUiOIQ2p7YGsi72Q5CxoE9/ZYhwQlBkQgkReeVtwtk1aaVJVSMUwq5MP44zOh7h6KcRxfDWrWhREYtW76f0bSYZ6xBVj+Jau/4v4NxgfYO91ZQ6ZTCMIQwjlbkw4owzfYvWfpbBjy+80+qQ+c1T3xeOL+w8mJwSgiLUkQSfmhGRMWB6znLGceqCTpnQx9PhpghfOHAQSw/lnv58eHo9efX1xeDT688npwfe5krD0PC+Z5jy8VLfrbkM2xUt0NDPEy6qoJG0m4GR3fm20VzDnqheUhrvbJ93tjt1LkdMhE3cBTSP5/5FC9n8qh3wE5u1/1XR+TFxXyUbJcOynlvTFTGdN9b9KY7qVFOk3jNgA+ZM13VXGbeo4pJwQ3VRCzcjz9VnDVFitXHvNq1L9FZ399N3Fs8cXD56cvHg0+vwPqLLRD/f/enk0+vm304eHZ4+ejQ6fnx78enL8VIkpATSR8pV5W/FkI4LRXUAzWoMGOWV7vRbbvlxPbWeRUEXLI1/QuK9GdEm6aUmesgpeki80S7kjP1ibqKZ2wKETFzY+Sx/XkpVNI2GfU39bhTD/QjQF4A5j09Ybybhcz9elmj7U0UMw9Rb1yXx4pIYpMDcx9XZvMh8LskmD6RnPsIy0oZeqV5snDBgwJ/JIqKyQU0usfaxlTm/mx4hGXuU6DrfRzJfL28zbLTuXQ40SvqkE+zTOeEZ9ESZ0IhWqqwWkbABFpL+gTIuvkkHA81vJ7KlWrXGO6vCRyU09L7ur625x8sbT6uVxyqqq9JWKS4hZ+iPe/X4g5ghCpmh2f6glFCO7UtYEkmQrJTQO9UVKyeVWTLmFRCbHeMadLY6DNMeS4NfzY32if5h2uwGQkEfGJHRH6rfybDrZU/WMYNp0MMUrLaulr9woaqWSjv8GhsGE/w==";
	return ChatFullViewUI;
})(View)


//class ui.common.AdditionBarUI extends laya.ui.View
var AdditionBarUI=(function(_super){
	function AdditionBarUI(){
		this.bg=null;
		this.txt=null;
		AdditionBarUI.__super.call(this);
	}

	__class(AdditionBarUI,'ui.common.AdditionBarUI',_super);
	var __proto=AdditionBarUI.prototype;
	__proto.createChildren=function(){
		var temp=AdditionBarUI.uiView;
		AdditionBarUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(AdditionBarUI.uiView);
	}

	AdditionBarUI.uiView="eJxtj1FLwzAQgP/KOPEtaLO1gvkDKuiTMBARSbtrey5NSpq5zdL3IQj+AB/0x22/Y9eN6R7MQ3KXfJfvroWwrBEUjAnnIKD2rm5AtZ2ArCQzAfXYHpCbShd4xMASVCRgsdvnNAklKJlIAa/aM54WzDZTshxnrqqcPZ/R80uWFme17d9KpKIMoEYJc/SGV57YB5GQiYhEHEPXiV/5rU7R/CuXoz/78OJgD4vAdEA+FGy+VuuPn4GMotP1+/dm9dl3Fryb8s9DAVZXuC8ZazPDo9bkpYDc2XDP7XEW7zNm7yjzrnF5GDzoayQuyZxxvfgk3y2+0YaKfniDeeBZnrotkFxz+Q==";
	return AdditionBarUI;
})(View)


//class ui.common.TopBarUI extends laya.ui.View
var TopBarUI=(function(_super){
	function TopBarUI(){
		this.btnBack=null;
		this.boxGold=null;
		this.boxPink=null;
		this.boxGems=null;
		TopBarUI.__super.call(this);
	}

	__class(TopBarUI,'ui.common.TopBarUI',_super);
	var __proto=TopBarUI.prototype;
	__proto.createChildren=function(){
		var temp=TopBarUI.uiView;
		TopBarUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(TopBarUI.uiView);
	}

	TopBarUI.uiView="eJztlEFPg0AQhf+KGa+bCguUys1e1ESNiUmjMcYssMBa2G1gsdSm/90BFGhto/FcDpssmZnvzeOFNejVgoMHM8GXQGCRq0UB3hqWItQJeKZpjQkkXMSJBs91NwSCRKQheM/r79brjMV82LsCzyBQNefWnGIuJDYEKsuUPCvFq/ZDMVrIGLsL8cEvc4GTwSDWhOBBiQlb8A3poHfTUmsld7DYUnMdl8A7y7HM13LKgjnsYUdMJmVLHw6eqmpnqN3MtIzzbhtqjDuAqi4V+tHrdP5sUiuW0pHr9Ea59h6tSal84cf7rKK1VXQyFGD+bhR1GzbSGvgP4JtgCVN+qb+QkmW8tfMiDLf82rvYpN3M7dZyekg/TQSNrk431jAZJCp/wuiMuttjcxsyb5jP0x2m2X4mxxq6OcFvpnmFw01q2U4dQZ2rOW+8/1KhKz1jackHSiyLQKSkfkCjsdRub1h7K4JcFSrSJ0/sigtsCVSq6hycRs2Db1gq4nrPlEcanXr5Q7Yc6hzI1r2Q82O2jtn6f7Zc2zj03+JZcczWMVuHsvWy+QSdQXkA";
	return TopBarUI;
})(View)


//class ui.email.item.EmailGoodsItemUI extends laya.ui.View
var EmailGoodsItemUI=(function(_super){
	function EmailGoodsItemUI(){
		this.imgIcon=null;
		this.labCount=null;
		EmailGoodsItemUI.__super.call(this);
	}

	__class(EmailGoodsItemUI,'ui.email.item.EmailGoodsItemUI',_super);
	var __proto=EmailGoodsItemUI.prototype;
	__proto.createChildren=function(){
		var temp=EmailGoodsItemUI.uiView;
		EmailGoodsItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(EmailGoodsItemUI.uiView);
	}

	EmailGoodsItemUI.uiView="eJx9kFFPgzAUhf/L9ZXMDYZsfTN7WuLbEqMxxnSlwM1KLymdc5L+d9tGhPiwl5ZT7jnfaQew104Cg2eUF0igM9T1wAa4YGkbYNtlAo3EurHh2yUgGlQlsLdhNO5bXsu58wrMm77i2p9Q+xlBbUv6/owfnErMFp2uvaMXXMlXP7fY/oqXKJxLbqav8xgftlnLT278PLb1XpCGeesEuBYNmYjKRxVZ+Zz1xI9S/WM9bCIrnVj5ZmQpftzRWdtwFWvoJHekKPy4WxVFviz+zoFlU5/U96lI2wN+y0l516NBHvBiTMlWVZWGFK6wDs9oYoJz7+4HnqyFdw==";
	return EmailGoodsItemUI;
})(View)


//class ui.email.item.EmailItemUI extends laya.ui.View
var EmailItemUI=(function(_super){
	function EmailItemUI(){
		this.imgBG=null;
		this.imgIcon=null;
		this.imgRed=null;
		this.imgLine=null;
		this.labDes=null;
		this.labDate=null;
		this.labLastDay=null;
		this.labName=null;
		EmailItemUI.__super.call(this);
	}

	__class(EmailItemUI,'ui.email.item.EmailItemUI',_super);
	var __proto=EmailItemUI.prototype;
	__proto.createChildren=function(){
		var temp=EmailItemUI.uiView;
		EmailItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(EmailItemUI.uiView);
	}

	EmailItemUI.uiView="eJzFkz2P0zAYx7+LWdMjTuLmZQMOnU6qGEDiRQid3OZJYl0SR46PtlRdmGA6wXJiYkFIXWAA3VLxba5U9y1wUtL6oG9iYUgcO/b/+f31fzxCclgACtBjBn1koELwokTBCPVZKBMUOJZpoARYnEgUuGRsoF7C0hAFz0fNyeOMxqAfHaJAHRrUb13mJRVqO8viu0dqe3nKcjW9n1GW3j5jJ1B9nHRjfFDkcfWfvYIjwVQp1MKWgdtGPVjoBs/Y2Mrh1BzupmoCyrraLpl2LYN1D8c9nm90wQvI9xJe8BFPE34I4RrdHPoZlKVS2EvXJgvj7jIB29bpOyyHNVUGZwNG8zUJmAYxqgffqNyhXUj/qOwvCquhz0X4RNACBRFNS1iSYM9tSFLaPYRSKUgYqDzR7Pzd/PP57M1k9v6rlnPVPBHP5SMFtJqp/XcEoxVAj6e80rvlR8THRK3QlMWVtRQiuZPZsmpo299GbbZ1aiphhW2Z2G35LcvfyIy9fZjzXsLFM3VvDkgze6rOrtyIWnuXHbII3zHtLXaIHkKHlvKQDrUg3k6ufnz4eXF5ffE9sPzZp4lmrTHzH6w5vy+0t8XZqtGVswc004Kaf5vOpx+vX3+5ml5WDS4FP4V7Da3leCYOl+uqIf6lBdvdKDK9v1vwxfgXJ7i29w==";
	return EmailItemUI;
})(View)


//class ui.help.HelpItemUI extends laya.ui.View
var HelpItemUI=(function(_super){
	function HelpItemUI(){
		this.helptext=null;
		HelpItemUI.__super.call(this);
	}

	__class(HelpItemUI,'ui.help.HelpItemUI',_super);
	var __proto=HelpItemUI.prototype;
	__proto.createChildren=function(){
		var temp=HelpItemUI.uiView;
		HelpItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(HelpItemUI.uiView);
	}

	HelpItemUI.uiView="eJyrViqpLEhVslIKy0wtV9JRKijKLyhWsqpWKs9MKclQsjK1MNZRykjNTM8oAXIManWUkjMyc1KUrKKrYTp9EpNSc5C1VipZGegoVYDJ8vyilPCixAIlq5Ki0lQdFGPLEouA2jNScwpKUitKgCaAKSsl48cNjS+b1j1ft/H5yl0vp295sqP3xbbNz+Y0PJu24fmsFqDUk93bXi7c9mz2fpDg9OVwwfd7ep72tD7rXvNsTufLmS1AEaDU08nLHjc0AY3PS8xNRbUQ4TEdpbT8vJLgzCqgCkMLCA+o1rEoMxHkt+T8nHyQY5Utkk1NjQyAIok5mel5QJGc1LQSpdra2FoA72aH2g==";
	return HelpItemUI;
})(View)


//class modules.battle_apple.bomb.LocalBomb extends modules.battle.bomb.NormalBomb
var LocalBomb=(function(_super){
	function LocalBomb(bombId){
		this.isMoveOver=false;
		this.hasReturn=false;
		this.frameNum=0;
		LocalBomb.__super.call(this,bombId);
	}

	__class(LocalBomb,'modules.battle_apple.bomb.LocalBomb',_super);
	var __proto=LocalBomb.prototype;
	__proto.moveUpdate=function(){
		modules.battle.bomb.BaseBomb.prototype.moveUpdate.call(this);
		console.log("LocalBomb :::: + moveUpdate x :"+this.lastPos.x+" y : "+this.lastPos.y);
		if(this.lastPos.x==-1 && this.lastPos.y==-1){
			return
		};
		var shootResult=this.newCheckCollide();
		console.log("LocalBomb :::: + shootResult :"+shootResult);
		if(shootResult==5){
			if(!this.hasShoot){
				this.showBomb();
			}
			this.complete();
		}
		if(shootResult==2){
			EventMgr.ins.event("SHOOT_APPLE");
		}
		if(shootResult==1){
			EventMgr.ins.event("SHOOT_BODY");
			if(!this.hasShoot){
				this.showBomb();
			}
			this.complete();
		}
		if(shootResult==4){
			EventMgr.ins.event("SHOOT_HEAD");
			if(!this.hasShoot){
				this.showBomb();
			}
			this.complete();
		}
		if(!this.isEmpty(Math.floor(this.x),Math.floor(this.firey))){
			this.showBomb();
			this.complete();
		}
		if((this.x > LocalBattleMgr.getInstance().singleScene.root.width)|| (this.x < 0)){
			this.complete();
		}
		this.frameNum++;
		if (this.frameNum%3==0){
			this.addPoint(this.x,this.y);
		}
	}

	__proto.showBomb=function(){
		var msg=LocalBattleMgr.getInstance().getBattleFireActionMsg(LocalBattleMgr.getInstance().fireMsg,[this.x,this.firey,0,0,"",0,0,0,TriggerType.BOMB]);
		EventMgr.ins.event("ADD_BOMBACTION",msg);
	}

	// LocalBattleMgr.getInstance().singleScene.blast(blastName,this.x,this.y,detailMsg);
	__proto.addPoint=function(posX,posY){
		var pointImg=new Image("battle/menu/ui_huidian.png")
		pointImg.anchorX=0.5;
		pointImg.anchorY=0.5;
		pointImg.zOrder=999999999;
		if(LocalBattleMgr.getInstance().getUniformRound()%2==0){
			LocalBattleMgr.getInstance().curPointArr.push(pointImg);
			}else{
			LocalBattleMgr.getInstance().lastPointArr.push(pointImg);
		}
		pointImg.x=posX;
		pointImg.y=posY;
		LocalBattleMgr.getInstance().singleScene.roleView.addChild(pointImg);
	}

	__proto.addArrowAni=function(posX,posY,aniName){
		posX=this.shootPoint.x;
		posY=this.shootPoint.y;
		var arrowAni=new AniSkeleton(aniName,"npc","-1",false);
		arrowAni.anchorX=1;
		arrowAni.anchorY=0;
		arrowAni.rotation=this.bombNode.rotation;
		if (LocalBattleMgr.getInstance().singleScene.hero.moveDir==-1){
			arrowAni.rotation=this.bombNode.rotation+180;
		}
		arrowAni.zOrder=999999999;
		LocalBattleMgr.getInstance().arrowArray.push(arrowAni);
		var npcMan=LocalBattleMgr.getInstance().collideFighterArray[0];
		arrowAni.x=posX-npcMan.x;
		arrowAni.y=posY-npcMan.y;
		arrowAni.name=aniName;
		npcMan.addChild(arrowAni)
	}

	__proto.addArrowImage=function(posX,posY,inTree){
		(inTree===void 0)&& (inTree=false);
		if(inTree){
			posX=this.shootPoint.x;
			posY=this.shootPoint.y;
		};
		var arrowImage=new Image("appleGame/fruit/banqiang.png")
		arrowImage.anchorX=1;
		arrowImage.anchorY=0;
		arrowImage.rotation=this.bombNode.rotation;
		if (LocalBattleMgr.getInstance().singleScene.hero.moveDir==-1){
			arrowImage.rotation=this.bombNode.rotation+180;
		}
		arrowImage.zOrder=999999999;
		var npcMan=LocalBattleMgr.getInstance().collideFighterArray[0];
		if(!inTree){
			arrowImage.x=posX;
			arrowImage.y=posY;
			LocalBattleMgr.getInstance().singleScene.roleView.addChild(arrowImage);
			LocalBattleMgr.getInstance().arrowArray.push(arrowImage);
			}else{
			arrowImage.x=posX-npcMan.x;
			arrowImage.y=posY-npcMan.y;
			arrowImage.name="arrowImage"
			npcMan.addChild(arrowImage);
			LocalBattleMgr.getInstance().treeArrows.push(arrowImage);
		}
	}

	__proto.moveOver=function(){
		if (this.isMoveOver){
			return;
		}
		if(!this.hasHitBody && !this.hasShoot){
			EventMgr.ins.event("SHOOT_AIR");
			this.sendMoveOver(1000)
			}else if (this.hasHitBody){
			this.sendMoveOver(1000)
		}
		else{
			this.sendMoveOver();
		}
	}

	__proto.clearSomePoint=function(){
		var lastPos=new Point(this.x,this.y);
		for(var i=0;i < LocalBattleMgr.getInstance().curPointArr.length;i++){
			var pointImg=LocalBattleMgr.getInstance().curPointArr[i];
			if(pointImg){
				if(this.twoPosDistance(lastPos,new Point(pointImg.x,pointImg.y))<=170){
					pointImg.visible=false;
				}
			}
		}
		for(var i=0;i < LocalBattleMgr.getInstance().lastPointArr.length;i++){
			var pointImg=LocalBattleMgr.getInstance().lastPointArr[i];
			if(pointImg){
				if(this.twoPosDistance(lastPos,new Point(pointImg.x,pointImg.y))<=170){
					pointImg.visible=false;
				}
			}
		}
	}

	__proto.sendMoveOver=function(delay){
		(delay===void 0)&& (delay=0);
		if(!this.hasShoot){
			LocalBattleMgr.getInstance().addDieNum();
		}
		EventMgr.ins.event("SEND_RESULT_TO_SERVER",this.hasShoot);
		var msg=new com.road.ddt.proto.battle.BattlePlayerFireMsg();
		msg.time=delay;
		EventMgr.ins.event(String(0x0022),msg);
		this.isMoveOver=true;
	}

	__proto.newCheckCollide=function(){
		for(var i=0;i < LocalBattleMgr.getInstance().collideFighterArray.length;i++){
			var fighter=LocalBattleMgr.getInstance().collideFighterArray[i];
			var area=fighter.collideArea;
			if(!area.temp){
				return 3;
			};
			var tree=LocalBattleMgr.getInstance().appleTree;
			if(tree){
				if((this.curPos.x >=fighter.x+tree.x-tree.width/2)&& ((this.curPos.x <=fighter.x+tree.x+tree.width/2))
					&& (this.curPos.y >=fighter.y+tree.y)&& ((fighter.y+tree.y+tree.height))){
					this.shootPoint=new Point(this.x,this.y);
					return 5;
				}
			}
			for(var j=0;j < area.temp.length;j++){
				var data=area.temp[j];
				var collideResult=GeometryUtils.getLineAndCirclePoint(this.curPos,this.lastPos,data.pos,data.radius);
				if(collideResult.result){
					if(j==0){
						if(!this.hasShoot){
							this.hasShoot=true;
							LocalBattleMgr.getInstance().addShootLevel();
							this.shootPoint=collideResult.point;
							return 2;
							}else{
							return 3;
						}
						}else{
						if(!this.hasReturn && this.hasShoot){
							this.hasReturn=true;
							this.shootPoint=collideResult.point;
							return 4;
						}
						else if(!this.hasHitBody && !this.hasShoot){
							this.hasHitBody=true;
							if(j==1){
								this.shootPoint=collideResult.point;
								return 4;
								}else{
								this.shootPoint=collideResult.point;
								return 1;
							}
							}else{
							return 3;
						}
					}
				}
			}
		}
		return 3;
	}

	__getset(0,__proto,'blastName',function(){
		return "blast31";
	});

	return LocalBomb;
})(NormalBomb)


//class ui.email.view.MessageMainViewUI extends laya.ui.View
var MessageMainViewUI=(function(_super){
	function MessageMainViewUI(){
		this.detailsLab=null;
		this.labName=null;
		this.lists=null;
		this.imgGet=null;
		this.txtContent=null;
		MessageMainViewUI.__super.call(this);
	}

	__class(MessageMainViewUI,'ui.email.view.MessageMainViewUI',_super);
	var __proto=MessageMainViewUI.prototype;
	__proto.createChildren=function(){
		var temp=MessageMainViewUI.uiView;
		MessageMainViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.email.item.EmailGoodsItem",EmailGoodsItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MessageMainViewUI.uiView);
	}

	MessageMainViewUI.uiView="eJyVVM1u00AQfpflaiX+ifPjG1QoVKp6KYIiVFUbe2KvWO+a3U3bNOoFKOLEA/AASFyC4FAJeJ2WwlswazeJUxciLivv6Jv5Zr751jNipgWQiDxhcEwcUihZaBLNyDFLTEaisN91SAYszQyJOmH3zCFxxnhCouezRep2TlOo505J5DrkpDzrdfQLJhAfyzxvT9ihABaDaBUixWTNTmGoGBYmXt/xO47vO16PrJOfOf8k7XRK1qDG6i1ZH+aUcUt7moFI0yatHzj+oGKu0QbuRtp+yeoHQZML7MchZ8ZwKBk31Qo6/dsz9AbNumaUNAdwHd91ysOrDeCtD7BDR8BvkXrdaoJe6JAjqhCVgEEmjWCEGjjBOuT3q/nlj4tfnz/+fH2O0bEUZg/JMc+tboi5rxi11WPJpa1zbzAOB16IkZG0pjFqApskcBtLdP8ibMLEHXvE8a0M3roMG0XoVuZBCyyIfXepB6ejXZrDSozL71+v3325/vDm+v2nq/lFVGNayLFZnH4chr675okdps1tS4RVZ17tNXWDZWeYoK0ABY1hv0IpKIAavNTe7gDj2V6sJOcPqNpbvUQp2pku45VB73jgpepDKRO9bSCvt6cmwrDcYnKZTDjoVrmYFkNcq5EmaAlVIBJQOPZBbfDdu6wQVl4IfTsu02zEETqmXMNifJanQ7CK3RiEU5FOsFB7K2MCNLSXjpkyjnZ5ObkxDBVxJtUztFsrXNz2y1t9HcPHdt3rTQ16lVF8XIdUyVNFi8rYq/XYH1HVnzkxW7h9EGblnau351fzb3iXR6DGXB5jrNoAxjhQa2usj78uph+ZnJc93DAsTRZ0/ttlB2d/AD+p4yw=";
	return MessageMainViewUI;
})(View)


//class ui.friends.items.AddFriendItemUI extends laya.ui.View
var AddFriendItemUI=(function(_super){
	function AddFriendItemUI(){
		this.sexImg=null;
		this.addBtn=null;
		this.segmentImg=null;
		this.headImg=null;
		this.nameText=null;
		this.vipIcon=null;
		AddFriendItemUI.__super.call(this);
	}

	__class(AddFriendItemUI,'ui.friends.items.AddFriendItemUI',_super);
	var __proto=AddFriendItemUI.prototype;
	__proto.createChildren=function(){
		var temp=AddFriendItemUI.uiView;
		AddFriendItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(AddFriendItemUI.uiView);
	}

	AddFriendItemUI.uiView="eJydk9FOgzAUht/leEuUdowBd+7GLDHeaLwxhnSjo1VoCZQNtuzCBzAx8SG89aWW+BgWcBvbiC4mpKSk5/v/85+yBFUmFDy453QOBiSpTDLwljDngWLgWQNsAKM8ZAo8F68MmDAeBeA9LDeVo5iEtF1agmcaUNRrG5M9c6HPT1NORZBd5NwvuCi4v2BShL6JzhMRwp7ayvhVBfVqGeRsdWyrS4YRWcrcVzIvONFSWUyi6ECtruQLepVy3R0gbGwe+MsGHjQ2LN3vjKT6VEaLUVzRj72IWS38Z2uoZvYcuzO3hULmEedmmCslxQHJcmqSVbls3JEgGCrR6e6JE1aeZBD/ZG+7uyE7u/7DmArVZLBJ2HL+N88GySgJ9nm21eZdkzGNDni9JkSM0RaI7O2QBInpHS2ULlLVy4P1x/vX58v67VWvLSGs7+5UCnWrr8dup89fppxUmhMZyYp45k77LurrL2NZ/SMqzemJObpmR4wznowm9UDbGT6uvgErDCra";
	return AddFriendItemUI;
})(View)


//class ui.friends.items.AskItemUI extends laya.ui.View
var AskItemUI=(function(_super){
	function AskItemUI(){
		this.bg=null;
		this.line=null;
		this.headImg=null;
		this.tipsText=null;
		this.playerNameText=null;
		this.agreeBtn=null;
		this.refuseBtn=null;
		AskItemUI.__super.call(this);
	}

	__class(AskItemUI,'ui.friends.items.AskItemUI',_super);
	var __proto=AskItemUI.prototype;
	__proto.createChildren=function(){
		var temp=AskItemUI.uiView;
		AskItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(AskItemUI.uiView);
	}

	AskItemUI.uiView="eJy9lM+O0zAQxt/FXMM2TpuQ5sYihFZCvbCCRQhVTjpNXBw7chza7qoS7AkhgbhxhCMcAHHgzwt1Wd6CSdq0hY22hQNSVNeOPb/vG8/khJhpBiQgdzmMiUUyrbKcBCdkzAcmIUHnmm2RBHicGBLQtjezSJRwMSDBg5P66EHKYtg8OyUBnpqQoN3GcRnJ8RyLPGYaD4Qx7s4fcYn/h5qDHOStgvdjJeMEx+OR7e5lstoUMQFHJLhKN1W4+IIfwy3NUQdxHMvxLepa1CezmXWpLK+SZTfRE6amqugbVUw4k3E/T5kQtYw1jTpW/Wyl+W6F87vrJKDSZRIEl9CYhpApfIYgY6jwO3taMjy7RiTABgdpaaDOnWdvRrvNQhB/ROs4VThaCh0rPbinWUYCowtYAWjXqwmGZ/khTAwGMeUQkPNP384+n56dvjv/8vbnk6fz5/j7Zv7sO+5IVZHDYaJVEWOUIRM5LBdvShYKGKwWa7mdtkWGSpo7mH9Mnr2YIeW65qxUHimhSh1X/NC1aRdXQlUW50IvEzwukytgaMg245RevCy39pkJNgXdYyn87vbHy/fzj1/nr17MP7z2PO+fTNa2tpt0vdCn0a4me/uFMUpesLloTdpZG+2uKobFGmDfyHVhRipNq+bEF3LZDqvrsZs+B72mIqV+Re14q8ACm6zAja0bCXZCDq2NFkDZ8ZQvaUxGidL3scT33Hp2VM1ms4c7+3U82uBXwxBvptGw0igQQh7/L9OjYlTA33puwrp1C7u7cfPLobRE/gJUaf6K";
	return AskItemUI;
})(View)


//class ui.friends.items.BattleReportItemUI extends laya.ui.View
var BattleReportItemUI=(function(_super){
	function BattleReportItemUI(){
		this.headImg_1=null;
		this.headImg_2=null;
		this.mapNameText=null;
		this.nameText_1=null;
		this.nameText_2=null;
		this.winNameText=null;
		BattleReportItemUI.__super.call(this);
	}

	__class(BattleReportItemUI,'ui.friends.items.BattleReportItemUI',_super);
	var __proto=BattleReportItemUI.prototype;
	__proto.createChildren=function(){
		var temp=BattleReportItemUI.uiView;
		BattleReportItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleReportItemUI.uiView);
	}

	BattleReportItemUI.uiView="eJzNlE9v0zAYxr/Lu6sZseOmbW4TBzQJ7QJCIIQqN3ESa0kcJe7aUvXEkStHLnwAhMQFUZD4MhXbx8Bx0rQd2bL1wqIoli37eX5+/2QBap5xcOGl4FNAkOUyK8BdwFT4KgKXOhRBxEUYKXCxYy0ReJGIfXDfLDZHTxMW8t2zc3AtBDPz3dUpzkWq9we54KlfPJ6I0Tg8ztIQ9iz0PvGOP82FNgELYYrKDyyX6FZHahx7bS6hTMNIj75fuxUei/lrzXdM68krM+n0sI0J7uM2m4vCyHeK9CpSpwmO47TJRUzO5WSk5GQmWBqOioTF8bVwmZPbaGGCNu9dMWyK/y8HtqvM9VvNVVKXyF1l7EFroTU623w/wodl6oLlen/EmX+ahCO8F4UDg74vSW6UfMbGPL5+cWwkKW0Uid3fSCYsO2MJf8FnSh9T5eDCny8/16vP6x8fLn//2rEiBEEgU/Vc51HPrGqm95/kgpWunoxlKXo0GPcsPNQrY1n+CVQ+4d2UxGAOG0rT6RVlWiOaYN4HEg9uhvRwnxK2B4mAxSIsK8PjqeI5dFNXDU+G9FZu8tC462bAZLCtCqupiqlI/62Kq+9f16vV5cdvJ1fvP5VtonJ5zp9ssALzNOta75DKCQKLWrTrcm+XfwFUnBrq";
	return BattleReportItemUI;
})(View)


//class ui.friends.items.ChatItemUI extends laya.ui.View
var ChatItemUI=(function(_super){
	function ChatItemUI(){
		this.leftView=null;
		this.rightView=null;
		ChatItemUI.__super.call(this);
	}

	__class(ChatItemUI,'ui.friends.items.ChatItemUI',_super);
	var __proto=ChatItemUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatItemUI.uiView;
		ChatItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.friends.items.ChatLeftItemUI",ChatLeftItemUI);
		View.regComponent("ui.friends.items.ChatRightItemUI",ChatRightItemUI);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatItemUI.uiView);
	}

	ChatItemUI.uiView="eJyrViqpLEhVslIKy0wtV9JRKijKLyhWsqpWKs9MKclQsjIxN6jVUUrOyMxJUbKKroapds5ILPFJTSvxLEnNRdZVllgElM0BykDNKyrNK8nMBWkpzdRLK8pMzUsp1ssE6irWQzYj1FOptlYHxfigzPQMHOYXgaSIswBuCtiG2FoAFldSyg==";
	return ChatItemUI;
})(View)


//class ui.friends.items.FacebookFriendItemUI extends laya.ui.View
var FacebookFriendItemUI=(function(_super){
	function FacebookFriendItemUI(){
		this.headImg=null;
		this.nameText=null;
		this.addFriendBtn=null;
		FacebookFriendItemUI.__super.call(this);
	}

	__class(FacebookFriendItemUI,'ui.friends.items.FacebookFriendItemUI',_super);
	var __proto=FacebookFriendItemUI.prototype;
	__proto.createChildren=function(){
		var temp=FacebookFriendItemUI.uiView;
		FacebookFriendItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(FacebookFriendItemUI.uiView);
	}

	FacebookFriendItemUI.uiView="eJyV0UFLwzAUAOD/8rwWbZqtrrm5gzIQL4oXkRLXrIm2SWlT12705FnYzf8gihcP+0Eb+DNMuxXHNhShtGl473t5eVPQZcKAwLVgY7AgSVWSAZnCWASaA8GeawFnIuQaSA9VFgy5iAIgN9M2cxDTkG2mlkBsC4rmnT0IaWJGqWAyyI5y4RdCFsKfcCVD30aHiQyhqqxfNbTivH0cp6pUua9VXghqyCymUdSoJlpM2FkqzGkBOVb7/KPc+hJcs/FIUxPOGQ0GcW23d+Lam9w5vWPRNocb7vjHczq4BSWN2RUrtMnR9YfAcvb29fG5nD0v318W86fF/NUsNgo6jgUjJfWlac7gvdWfSTxJBa1rD1WkavrAw12EOmbnTtUT02nO/mq92xwV4/2Tm2hk7wzsop9rreQWhL2V5HbbTmkQnDZWX9fBu/y9oLxc87fVN0SE2S8=";
	return FacebookFriendItemUI;
})(View)


//class ui.friends.items.GuildFriendItemUI extends laya.ui.View
var GuildFriendItemUI=(function(_super){
	function GuildFriendItemUI(){
		this.detailsBtn=null;
		this.segmentImg=null;
		this.headImg=null;
		this.nameText=null;
		this.jobText=null;
		this.addFriendBtn=null;
		this.vipIcon=null;
		GuildFriendItemUI.__super.call(this);
	}

	__class(GuildFriendItemUI,'ui.friends.items.GuildFriendItemUI',_super);
	var __proto=GuildFriendItemUI.prototype;
	__proto.createChildren=function(){
		var temp=GuildFriendItemUI.uiView;
		GuildFriendItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(GuildFriendItemUI.uiView);
	}

	GuildFriendItemUI.uiView="eJyVk81q20AQx1+lbK+i3ZVk6+PWQD8MbS8NhVKKWUsr7SSrXSGtEtnGh9JrArn1HUpCLz3k0rexIY/RlWwZOXHrFISkHWZ+85/RX3OkpzlDIfoI7BxZKC9UXqJwjs4h1hyFTjC0EGeQco1CnywsFHEQMQo/z7vKUUZT1i+dohBbqG7v5SlIk5MUwGRcPq9gXIOsYTzjSqZjTJ7lMkWLhfVPGlnjgn04TtVUVWOtqhqoQZYZFaKlmmyYsdcFGLWI2FZ37bR7f1RpreS9hgO3bWgHnoXOaGHyYqYpiPJIN6kPVUScnlL5qGEcu2UTYsbZLNn1uzYlSzMm9Shr5Hdrd/3HL2hDHOKOyBmNd3FD3Me9pRMm7uH8luZ5W5yN7Y4nacaOWa1NiW4eIVpdXd/9/LW6ulzdfF/eflve/jAvvX62qU2U1B/M1zBS/fXJFL4ogDatIyVUg34aOANCXBOZqMZiuqjYIanuWivxnK1YL+i0nqjJrtS7rxfL35fmnKmqZMe8UFVqKhIqSrYJvpR0Ili8DR6c4h1EhSpVop98om8Y9OdJEs/D2ESogLRxjGCJPmiQQTuR4+z/e2aa4Ac+2+9iJ1iThoNuITSOX7Wsv/n4BCif/o+NPbzHxWeQj6JWTt/CXxZ/ADQVbb0=";
	return GuildFriendItemUI;
})(View)


//class ui.friends.items.MyFriendItemUI extends laya.ui.View
var MyFriendItemUI=(function(_super){
	function MyFriendItemUI(){
		this.bgImg=null;
		this.clickHeadBg=null;
		this.segmentImg=null;
		this.headImg=null;
		this.sexImg=null;
		this.operateBtn=null;
		this.sendOutBtn=null;
		this.battleBtn=null;
		this.stateBg=null;
		this.tipsPoint=null;
		this.nameText=null;
		this.stateText=null;
		this.vipIcon=null;
		MyFriendItemUI.__super.call(this);
	}

	__class(MyFriendItemUI,'ui.friends.items.MyFriendItemUI',_super);
	var __proto=MyFriendItemUI.prototype;
	__proto.createChildren=function(){
		var temp=MyFriendItemUI.uiView;
		MyFriendItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MyFriendItemUI.uiView);
	}

	MyFriendItemUI.uiView="eJyNlMGuk0AUht9l3BJlKLTAziZGmxg18caNMWQKU5jcYYbA0NI2XenW5O50595448ZFE1+njfoWzkBpoaW3TRrKTOb83/nPOcwSiHmCgQveETwDGkhSnmTAXYIZCUQE3J7T10CESRgJ4NpwpQE/IjQA7vtlHTmKUYiboXPg6hooyucUpfLIOBzFoTyS3RIml5OUYBZkT3LiFYQVxFtEnIWeDh8nTB2LeZ7hZwyNKZYkkeZ4tdIe5MEK6NRAnxL/9gVGwbAbGyE+57kneF4QJNFZjCjd0RmK8YnEaUpSlizw85TINYCGVv/AxVzLVCG0tbrIpl3nneEwxkxU1arLbtrX298p9velj6SDSq60cBOlPA/liQmiGT72tduswX39EtiqvAz0g4HiXKvZtCxwU/LVMBeCs2PRQanag71alSc4RQIPBetUznI+R9wz2g1sBF3P7DsHJyx4nYtzTEpmeZvXCLiaZ1j9/TeChKBnLcppnZNFhFibeQi62CmjBA7Mw4zs0ZlQderu2kLsiPVQQKc1+aYmh089Hs6gAgmSZG84YaJ7QPDsZEJeojGmx9NeWTF0a+8F2vu+qcrc4EIhhPpzwfbux9+fv7Z3n7f3Xzbrj5v1d/nScGRIvQln4q10paSqlQx8mhKk4D6nXEk/cnoWhKbcGXPacTN1JWuZF+rezvXP70//vn7brO+bFbda+Znn8/MDYzDQ5Q6iJFTV9eVlgtMrryT1FZ/cSFOSjPxyfJvX0YfVf1nRBHA=";
	return MyFriendItemUI;
})(View)


//class ui.friends.items.PhizItemUI extends laya.ui.View
var PhizItemUI=(function(_super){
	function PhizItemUI(){
		this.icon=null;
		PhizItemUI.__super.call(this);
	}

	__class(PhizItemUI,'ui.friends.items.PhizItemUI',_super);
	var __proto=PhizItemUI.prototype;
	__proto.createChildren=function(){
		var temp=PhizItemUI.uiView;
		PhizItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PhizItemUI.uiView);
	}

	PhizItemUI.uiView="eJx9jkEKwjAURO8y66AFoYvcwAu4EZHafJOPNg1JaC3h391YKHTlZpjFvMcU5CUQNC5MMxRCHEOCLpjZZAfdtgqO2Lr866LQO34b6GvZwPPQWdqTC3Sj8FkzvdjXzTMyeZOOD3vnTMMheAsR9ddxWh01tydVN3WxrrkfPXa3GpGbfAETkz8b";
	return PhizItemUI;
})(View)


//class ui.friends.items.SystemTipsItemUI extends laya.ui.View
var SystemTipsItemUI=(function(_super){
	function SystemTipsItemUI(){
		this.bg=null;
		this.lingBg=null;
		this.msgText=null;
		this.titleText=null;
		this.agreeBtn=null;
		this.refuseBtn=null;
		SystemTipsItemUI.__super.call(this);
	}

	__class(SystemTipsItemUI,'ui.friends.items.SystemTipsItemUI',_super);
	var __proto=SystemTipsItemUI.prototype;
	__proto.createChildren=function(){
		var temp=SystemTipsItemUI.uiView;
		SystemTipsItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(SystemTipsItemUI.uiView);
	}

	SystemTipsItemUI.uiView="eJy9lEFv0zAUx7+LuYa1zpoozY0ihJDQLkwwhCbkJC+Oi2tXjsPaVblwBA24ceXCgQMgLgyB+DZk8DF4CU1btgjKAaRIju1n//+/52cviJ1PgYTktoAj4pCp0dOchIvSIXEmZELCe4s25MaEcdiIIXMS9h0yI+HuLrZHIrEZCV3fdchDZnBBxDE6fyAU/qdGgEryXiHuc614hu3xuO/tTFUTFDMJByS8TB2SgeCZJSGlPk6IY7huBPogruu4gUM9hwakLJ3f2vKHja9guLaFa5e2pFB81G0tYhq/FBSHxtmmzk0WgTynM3DXOtokdwybktCaAjZ0vVZ3kvN9mFncwtZNSL6/Oz17/+js9HP1+OXXj5+qV1+qZ09weqKLHPYzowuOO6RM5rAcvKZYJCFZDba5cjH/qVb2FqZr3UOJK0aw2nSspa49XAoir0+HOBLp+nR/emVS8DoTElL7R2ZKL+Z2xWiFlfAr5benr6u3H6rnJ9WbF77v/2M+z48CGm/LtzcqrNXqHOFw0BDSwRpx2G8JGTcAI6vW9RPryaSpa5xQy4JujQ/6XTdpr6tmadCoDvzVxpIpXmBg72omFOTQ26hUdM3nYqnGVJxpcxev447X9g6aXlkebovr+rQD10CK59LJqw36g0jw/8U8LsYF/C3yBdlZ82ptITcTdZKX78Bh+QNsU7EQ";
	return SystemTipsItemUI;
})(View)


//class ui.friends.items.TimeLineItemUI extends laya.ui.View
var TimeLineItemUI=(function(_super){
	function TimeLineItemUI(){
		this.timeText=null;
		TimeLineItemUI.__super.call(this);
	}

	__class(TimeLineItemUI,'ui.friends.items.TimeLineItemUI',_super);
	var __proto=TimeLineItemUI.prototype;
	__proto.createChildren=function(){
		var temp=TimeLineItemUI.uiView;
		TimeLineItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(TimeLineItemUI.uiView);
	}

	TimeLineItemUI.uiView="eJyNkEFPwzAMhf+LuWbQFlC33DhwmMSNCSEhhLLWTSzSpEpS1lH1v+OKwSYu42T5ye+zn0dI+w5BwhPhDgR0wXcR5Ag7qpMBeVNmAgySNglkkU0CKkO2Bvky/jjXrdJ4at2DXAoYQOarUkB8J8dTTSB0dbzq6a1Bp3Eg5S47p9kYK2XxGeQinybxD2xRXp/HnqIe1BbtH1T2jcq4HqKWhYAPFXg+UYsbHBJb0lwk5Eveym3r+4gbE3yv2dEoG/Eg3ju1tVj/isefCWi8S4/0iceOkXeB1HxU5a2fl16s6hJvFSvKkp6zVegSBk7yOn0B8peGGw==";
	return TimeLineItemUI;
})(View)


//class ui.guild.boxviews.BarBoxViewUI extends laya.ui.View
var BarBoxViewUI=(function(_super){
	function BarBoxViewUI(){
		this.bg=null;
		this.bar=null;
		this.btnHelp=null;
		this.lan4=null;
		this.barValue=null;
		this.lan3=null;
		this.txtCoin=null;
		this.txtCard=null;
		this.txtTime=null;
		this.txtTimeKey=null;
		this.boxTitleText=null;
		this.btnBox=null;
		this.txtLevel=null;
		BarBoxViewUI.__super.call(this);
	}

	__class(BarBoxViewUI,'ui.guild.boxviews.BarBoxViewUI',_super);
	var __proto=BarBoxViewUI.prototype;
	__proto.createChildren=function(){
		var temp=BarBoxViewUI.uiView;
		BarBoxViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BarBoxViewUI.uiView);
	}

	BarBoxViewUI.uiView="eJzNVl1r3EYU/Stl+qpk51OS9y0OJSlNS6EmxJRQZqWRNLVWI6RZZ11jyEtLP6CBBNIQEvKU5CWkDZQSmkD/jNdOn/oXOvpYSeuVvXabQBYWrbSje865986dswv0TirAEFyV4gawQJqpNAfD3T0LeJGMfTD8cne+5OMxD0VnDdgBQ2iBKRhiZq43pK8jMHQotsA2z8wLo9CszrdkYn6HExNtMJFfjbiaSp6EvjyfJuUC+Y24lEkDBRCzELGQayFm/oiEDCMNhgjSvT2rofF5psJM5Pm6wVgkQ92KzRpp2GCbNmzK9ds8npgo8DxbppbWkWtic3yCFkjCgiC0MARdVn3JITUfmyxjfe3rOgOroiBcRmEObVS5+Pi8bq1Kayq3ld40cVuFLl5JgpQkbMdZRg7C6TImNSmyzRd1Eum4XZjP1idaq+QIEKuATM1ZUzidXBZx2tNLoUrCyFx1VBOI+UjEZgXo698r5Z9HSsRKuHPFtU4ugu4cOeYJNS9oMTXswZtffz+493NBQ2dqS1xUsSoWfbgm7BFlzXNTcAuM1SQXG1GmJqEJGfA4F/XDjxI+ioXfPGy6zLwVqER/YXJoSLjVnYn/qfQylatAf7DJLwtpcLw5chAE1HfNEx7LsMiMJxItMtNS1zuJ7tPNUKmbQKfdKhR1tsrVcp802vGAwXelHJOucgwb5RcyyeMjes2nT+/Jagkt1bqdKmMIO1UmrdLZ84eHz1/sv/xp/+XNwz+fzh7fnf344v0seuJFKtush1l1d21+d7YEMbtMkOOgdo433aCn+qKSSZuiay6EPd3AHdsm9mJKmhqjhRrjM9Q4FoE+rQDXbfuZul0BPPNbAVP03vFn9dhrjy5EugI25LizHdnst1sHv/xhz77/7u/bj97ZxmRvYSSdSj6ufARZa/cnQkfUfyJ22gQcPnl1+OrOwcNHb/66d/Dgh39e319OAvTsAJO3u0XnfXByEmwcBNA/+5xC1ZwiyOmbUyM13ZA6FhtFCtp59e2z/df3q6kF/lOVnQWB9P+N3z7zQNcqH9RxMKWnqk5znudC54NCTjYRA6nFWHoqKc/3aIerPJJ4yZGthKwH2ilwQhX7c//i8ViUA5XWN+U8pavQ6tPUZa0v89R4XIlIJ8blhEtW70T7Y6Ou+1lX0xOM9GmsTy/pes+1I5/RBiXicVyAaJnmoxAt+ztjgImxdwR2yoLtlWOubvB2yhW90WzzK2K7fKVubQQHaCE+OmYe9XXqscbo+t6/Aowhhg==";
	return BarBoxViewUI;
})(View)


//class ui.guild.boxviews.OpenBoxViewUI extends laya.ui.View
var OpenBoxViewUI=(function(_super){
	function OpenBoxViewUI(){
		this.btnOpen=null;
		this.txtLevel=null;
		this.lan5=null;
		this.txtMycoin=null;
		this.txtMycard=null;
		this.txtUnact=null;
		OpenBoxViewUI.__super.call(this);
	}

	__class(OpenBoxViewUI,'ui.guild.boxviews.OpenBoxViewUI',_super);
	var __proto=OpenBoxViewUI.prototype;
	__proto.createChildren=function(){
		var temp=OpenBoxViewUI.uiView;
		OpenBoxViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(OpenBoxViewUI.uiView);
	}

	OpenBoxViewUI.uiView="eJzNVMtunEAQ/BVrciVmhufCLbGiJJLtHPKQrciyBmhgYnaGwGCvvdp/T7OwwGaJN49LOMFouququ4o10Y8lkJB8EfBADFJWqqxJuN4YJM5FkZDw63p35fJ1o7WSk1vkkYSua5AVCW2HGuRBJDonoWP7BrnnFdZEWn4ooa2p74TEg4LLrOEZmGe5kFCDmTUIYzbi9u57lker26jRp6XMsKLgERRYgq85iCzXJGTUnmP2fokdf+LF7I4XcwfsASriaiWQyBZoszGebeT5XSPXGQS2r33PnBdF21KLso4y1lOvxRO8rQSSJNSwbIMaNp3IsLwp6PlW5z6oz3pQb5xqsBuqXulzuN/WaFhhP8KoyfYAsDxVUn9EHjiKRfeFF19Vgrd1sSpU2+pFmqZOssATXohsuyBINc7k5shUmLUl6PnBQNCiweGoZfKtSMTsWCiOhTFnQtu2jy2jh2U0sCe4Myv+Ldw65gVckfAl+xMOtFPuzqhNs9UhpIN4Xos5NTKjR33X4fj+qI7XNejabJdeNWAKDUsRK2lmqkh2uK2kayR56oz68OMoWjfYwBqtHavlEpujrLLB3B+mZc64fez8qS+Yt3Mupt8dXXutmuqkggdeJS1zXak7ONsZMwAvctzhHNsYZKmaGj7llWoy7Jvyoob+8I3kUQHJcDhs05oGwbKGIFyIuFK1SvXJNX8H4tlIxCA1VEel9z+KBRsz28Z4yOzFY6yEHOVfLSilh8K573m2ty98PtcTOXO5xucw10ckdD/zwF38UkK3rP9XghVsJUz/1r4/kfBZ8liPCi6VLHmlRSxKLrVxxuWJVBpdGYO4h96dNfkb73l73rPpv3nvZvMDu7Ng0g==";
	return OpenBoxViewUI;
})(View)


//class ui.guild.boxviews.UnopenBoxViewUI extends laya.ui.View
var UnopenBoxViewUI=(function(_super){
	function UnopenBoxViewUI(){
		this.bg=null;
		this.unopenTipsImg=null;
		this.btnHelp=null;
		this.lan4=null;
		this.unopenTipsText=null;
		this.lan0=null;
		this.lan1=null;
		this.lan2=null;
		this.txtTime=null;
		this.txtTimeKey=null;
		UnopenBoxViewUI.__super.call(this);
	}

	__class(UnopenBoxViewUI,'ui.guild.boxviews.UnopenBoxViewUI',_super);
	var __proto=UnopenBoxViewUI.prototype;
	__proto.createChildren=function(){
		var temp=UnopenBoxViewUI.uiView;
		UnopenBoxViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(UnopenBoxViewUI.uiView);
	}

	UnopenBoxViewUI.uiView="eJzNlltv0zAYhv9KMLdhi3NqmjtACCYON1TAhBByWicxS+MocbeVadIQYhpi4jBNYowhLtDYDdpA4iSYxJ9Zuu6Kv4CTtkmhXVdgoFWqkjjO9/p9/PmzZwCrBxiY4ArBU0AEQUiDCJgzsyIou8SrAPP6TKfLWBU5uKsPqANTEsE0MGWNX6dIhbnALKiyCCZRyD+wHN47miA+v3dqPNpojdy0EJ0myHcqZCTw0w7kNj4bEi4FoCZCRYSGCDX+wsXEcRkwoaTOzooDhwFhOg7DULJxGNL+2hPDShvSgcpKW1nbXy5VOyhQK45s6L1xbvEgFv/3Q6aoolIQFT50Ve0auAKH0zPkv9OLysjD14B5Av6ONlS0VB3qUidXaj4NsF8iQTRWHZw2rNbD89KpGmPU/0VFk1sikqplGcn8c9gL+sR3qO+4/MrctmcPWdjjPUC/pXAhffkL0JanE8m1nYNQMjrKHvITXgxPc0KgufW+sfIwGQYL6QQ+TT2adDpexLqlalk7zwcRVGktwiU3pDWHh7SRF+F24xkfWR6uZI3ZBPCvbOqzy3za+CCM1hOPf5GUQxpRmwnj6BwmXKfcUbZtW60YvAV5xEnIlLHPcMgx3+gC3c+3LKmpcVVKigANK1dDFACThTWcgdA1rXeiSwmLDEnJxQKe5KICiQSfMiFiKGS4ItQxE4XAwyjCgkfphGDTcAqFFYFRgbBj4E8IwYLRjSgpX21EJ0OCvG4wll1EBZ23WDTJgZatHkiDEan52m4D0VSpKzOkHMPZJCGFsosj9n/SQ5aHTA/+65ceg51r7Q2ikBdmReu2DnPr8dJifO/NzvZqY+Fx/GRl5/Nc88OnxvLHvefzzbtr8dqXvaX1ePHZEcPy86oJ01gHUmltV7pezKikqyijIudUxObGq73lO82t9Xjzxe7muyNt38P2EO7Vdl3OcwIqWaFk06xEqjgHoMVvHzWeftTjhfm9pZf/yr6sHULNHMo+LKb2la65T44vP7k/j+s5gN3XX+PtuXjjQfPbSmPt/vft1V4IRlGxJPmQcwAOB8HilX9wZeh3BlD11hqQjXyXyI9sKIowi0YTArzgjhKGq6RM/XSnduuIRi6RO4eT5Agyzo+iI3p+HkkfOrZ0KdnFfgDnv5Ky";
	return UnopenBoxViewUI;
})(View)


//class modules.battle.part.monster.BaseMonster extends modules.battle.part.role.Fighter
var BaseMonster=(function(_super){
	function BaseMonster(msg){
		this.headurl="";
		this.nickName=null;
		this.level=0;
		this.posX=0;
		this.posY=0;
		this.robotId=0;
		this._actConfig=null;
		this._npcPreforConfig=null;
		this._container=null;
		this._aniSkeleton=null;
		this._hpView=null;
		this._nickname=null;
		this._levelLabel=null;
		this.xuetiao=null;
		// public static final int REVERSED_CAST=4;// 反抛帝
		this.judgeDatas=[];
		this.curJudgeEffect=null;
		BaseMonster.__super.call(this);
		this._type=Fighter.MONSTER;
		this.initBaseInfo(msg);
	}

	__class(BaseMonster,'modules.battle.part.monster.BaseMonster',_super);
	var __proto=BaseMonster.prototype;
	Laya.imps(__proto,{"modules.battle.part.role.IRole":true})
	__proto.initBaseInfo=function(info){
		var msg=info;
		this.level=msg.level;
		this.maxHp=msg.maxHp
		this.hp=msg.hp;
		this.side=msg.dir;
		this.livingId=msg.livingId;
		this.posX=msg.posX;
		this.posY=msg.posY;
		this.headurl=msg.headUrl ? msg.headUrl :"";
		this.robotId=msg.robotId;
		this.syncHp(this.hp,msg.shieldHp);
		this._npcPreforConfig=NPCModel.getNpcPerformanceByNpcId(this.robotId);
		this.nickName=StringUtils.subName(LanguageMgr.Ins.GetLan(this._npcPreforConfig.Name),125,25);
		this._actConfig=this._npcPreforConfig.ActConfig;
	}

	__proto.initView=function(msg,screenwidth,screenheight){
		this.init(screenwidth,screenheight,this.moveDir);
		this.x=msg.posX;
		this.y=screenheight-msg.posY;
		this._container=new Sprite();
		this._container.mouseEnabled=true;
		this._container.mouseThrough=true;
		this.addChild(this._container);
		this._aniSkeleton=new AniSkeleton(this._actConfig,"npc","idle",true,Handler.create(this,this.playEnd,null,false));
		this._container.addChild(this._aniSkeleton);
		this.turnRight(this.moveDir==Fighter.DIR_RIGHT);
		this.checkAngle(true);
		this.createMenu(msg);
		this.syncHp(this.hp,this.hdHp);
	}

	__proto.createMenu=function(mapPlayerMsg){
		var xuetiao1=new RoleHongTiaoUI();
		xuetiao1.name="xuetiao";
		xuetiao1.anchorX=0.5;
		this._hpView=xuetiao1;
		xuetiao1.scale(1.2,1.2);
		this.addChild(xuetiao1);
		this._nickname=xuetiao1.nickname;
		this._levelLabel=xuetiao1.level;
		this.xuetiao=xuetiao1;
		this._nickname.text=this.nickName;
		this._levelLabel.text=this.level > 0 ? this.level+"" :"";
	}

	__proto.syncInfo=function(playerInfoMsg){
		this.syncHp(playerInfoMsg.hp,this.hdHp);
		this.resetPath(new Point(playerInfoMsg.posX,this.screenheight-playerInfoMsg.posY),false);
		this.moveDir=playerInfoMsg.dir;
		this.turnRight(this.moveDir==Fighter.DIR_RIGHT);
	}

	__proto.costHp=function(damage,isCrital,isGray){
		(isCrital===void 0)&& (isCrital=0);
		(isGray===void 0)&& (isGray=0);
		_super.prototype.costHp.call(this,damage,isCrital,isGray);
		if (damage > 0){
			this.playAni("hit",false);
		}
	}

	__proto.syncHp=function(currentHP,hdHp){
		if (!this.isLive){
			return;
		}
		_super.prototype.syncHp.call(this,currentHP,hdHp);
		if (this.hp >=this.maxHp){
			this.hp=this.maxHp;
		}
		this.hp=this.hp+hdHp;
		EventMgr.ins.event("sync_menu_hp");
		var hdpercent=NaN;
		if (hdHp > 0){
			hdpercent=(this.hp+hdHp)/ this.maxHp;
			if (hdpercent >=1.0){
				hdpercent=1.0;
			}
			EventMgr.ins.event("sync_hdhp",[hdpercent,this.side]);
		}
		else{
			hdpercent=0;
			EventMgr.ins.event("sync_hdhp",[hdpercent,this.side]);
		}
		if (this.xuetiao){
			this.xuetiao.hpmask.width=this.hp / this.maxHp *135;
			this.xuetiao.mpTextHp.text=this.hp+"";
		}
	}

	__proto.playEnd=function(){
		EventMgr.ins.event("MONSTER_PLAY_OVER",[this._aniSkeleton.nameOrIndex,this.livingId]);
		this.playAni("idle",true);
	}

	__proto.playAni=function(aniName,loop){
		if (this.isLive){
			this._aniSkeleton.play(aniName,loop);
		}
	}

	__proto.launch=function(dir){
		_super.prototype.launch.call(this,dir);
		this.playAni("attack",false);
	}

	__proto.walk=function(){
		_super.prototype.walk.call(this);
		this.playAni("walk",true);
	}

	__proto.stop=function(){
		_super.prototype.stop.call(this);
		this.playAni('idle',true);
	}

	__proto.changeCrown=function(livingId){}
	__proto.changeRotation=function(rotation){
		_super.prototype.changeRotation.call(this,rotation);
		this._container.rotation=rotation;
	}

	__proto.turnRight=function(turnRight){
		this._aniSkeleton.scaleX=turnRight ?-1.0 :1.0;
	}

	__proto.show=function(x,y,handler){
		this._container.visible=true;
		this.x=x;
		this.y=y;{
			if (handler){
				handler.run();
			}
		}
	}

	__proto.refresh=function(msg){
		this.x=msg.posX;
		this.y=this.screenheight-msg.posY;
		this.moveDir=msg.direction;
		this.turnRight(this.moveDir==Fighter.DIR_RIGHT);
		this.checkAngle(true);
	}

	__proto.miaozhun=function(dir,frameAngle){
		_super.prototype.launch.call(this,dir);
	}

	__proto.useSkill=function(skillId){
		var skillData=SkillModel.getSkillConfigData(skillId);
		if (skillData==null){
			return false;
		};
		var skillPerData=SkillModel.getSkillPerformanceBySkillId(skillData.Display);
		if (skillPerData==null || skillPerData.Icon=="0"){
			return false;
		};
		var useSkillNode=new UseSkillEffect(skillPerData.Icon,skillData);
		useSkillNode.x=0;
		useSkillNode.y=-150;
		useSkillNode.zOrder=9999999999;
		this.addChild(useSkillNode);
		return true;
	}

	__proto.syncLiving=function(msg){
		this.visible=msg.isHide ? false :true;
		this.isHide=msg.isHide;
	}

	__proto.syncDiceResult=function(msg){}
	// dicResult=msg.result;
	__proto.revive=function(battlePlayermsg){}
	/**人物表情 */
	__proto.playExpression=function(expId){}
	/**人物说话 */
	__proto.say=function(str){}
	__proto.calcDelayTime=function(){
		return 0;
	}

	__proto.showBattleJudge=function(juageType){
		this.judgeDatas.push(juageType);
		this.checkJudgeShow();
	}

	__proto.checkJudgeShow=function(){
		if (this.judgeDatas.length > 0 && !this.curJudgeEffect){
			var juageType=this.judgeDatas[0];
			this._cretaeJudgeEffect(juageType);
			this.judgeDatas.splice(0,1);
		}
	}

	__proto._cretaeJudgeEffect=function(juageType){
		var anis=["renpinbaofa","tejidashi","jingzhundashen" ,"fanpaodi"];
		var aniName=anis[juageType-1];
		var effectPath="assets/animation/uieffect/huihepingjia.sk";
		var aniSkeleton=new AniSkeleton("huihepingjia","ui",aniName,false,Handler.create(this,this.judgeStoped),null,true);
		this.addChild(aniSkeleton);
		this.curJudgeEffect=aniSkeleton;
		this.curJudgeEffect.x=0;
		this.curJudgeEffect.y=-70;
	}

	__proto.judgeStoped=function(){
		this.clearJudge();
		this.checkJudgeShow();
	}

	__proto.clearJudge=function(){
		if (this.curJudgeEffect){
			this.curJudgeEffect.removeSelf();
			this.curJudgeEffect.destroy(true);
			this.curJudgeEffect=null;
		}
	}

	__proto.checkDie=function(){
		if (this.hp <=0){
			this.die();
		}
	}

	__proto.addReviveEffect=function(){}
	__proto.die=function(){
		if (this.isLive){
			this.playAni("die",false);
			this.syncHp(0,0);
			this.isLive=false;
			EventMgr.ins.event("fighter_die",[this,500]);
		}
	}

	__proto.destroyFighter=function(){
		if (this.isDestroy){
			return;
		}
		this._aniSkeleton && this._aniSkeleton.destroy();
		this._aniSkeleton=null;
		this._container && this._container.destroy();
		this._container=null;
		this._actConfig=null;
		this._hpView=null;
		this._nickname=null;
		this._levelLabel=null;
		this.xuetiao=null;
		_super.prototype.destroyFighter.call(this);
	}

	__getset(0,__proto,'launchDelayFrame',function(){
		return this._npcPreforConfig ? this._npcPreforConfig.AttackDelay || 0 :0;
	});

	return BaseMonster;
})(Fighter)


//class modules.battle.part.npc.BaseNpc extends modules.battle.part.role.Fighter
var BaseNpc=(function(_super){
	function BaseNpc(msg){
		this.template=0;
		this.teamType=0;
		this.groupId=0;
		this.isFalling=0;
		this.fallPosX=0;
		this.fallPosY=0;
		this.isShow=0;
		this.CallingId=null;
		this.npcNode=null;
		this.npcSkeleton=null;
		this.actConfig=null;
		BaseNpc.__super.call(this);
		this.initBaseInfo(msg);
		this._type=Fighter.NPC;
	}

	__class(BaseNpc,'modules.battle.part.npc.BaseNpc',_super);
	var __proto=BaseNpc.prototype;
	__proto.initBaseInfo=function(info){
		var msg=info;
		this.livingId=msg.livingId;
		this.template=msg.template
		this.x=msg.x;
		this.y=msg.y;
		this.teamType=msg.teamType
		this.moveDir=msg.directionType
		this.groupId=msg.groupId
		this.isFalling=msg.isFalling
		this.fallPosX=msg.fallPosX
		this.fallPosY=msg.fallPosY
		this.isShow=msg.isShow
		this.hp=msg.hp
		this.maxHp=this.hp
		this.CallingId=msg.callingId
		this.actConfig=NPCModel.getNpcPerformanceByNpcId(this.template).ActConfig;
	}

	__proto.initView=function(msg,screenwidth,screenheight){
		this.init(screenwidth,screenheight,this.moveDir);
		this.y=screenheight-this.y;
		this.npcNode=new Sprite();
		this.npcNode.mouseEnabled=true;
		this.npcNode.mouseThrough=true;
		this.npcNode.visible=this.isShow==1;
		this.addChild(this.npcNode);
		this.npcSkeleton=new AniSkeleton(this.actConfig,"npc","idle",true,Handler.create(this,this.playEnd,null,false));
		this.npcNode.addChild(this.npcSkeleton);
		this.turnRight(this.moveDir==Fighter.DIR_RIGHT);
		this.checkAngle(true);
	}

	__proto.playEnd=function(){
		console.log("npc  playEnd");
	}

	__proto.playNpcAni=function(aniName,loop){
		this.npcSkeleton.play(aniName,loop);
	}

	__proto.changeRotation=function(rotation){
		_super.prototype.changeRotation.call(this,rotation);
		this.npcNode.rotation=rotation;
	}

	__proto.turnRight=function(turnRight){
		this.npcSkeleton.scaleX=turnRight ? 1.0 :-1.0;
	}

	__proto.show=function(x,y,handler){
		this.npcNode.visible=true;
		this.x=x;
		this.y=y;
		if (this.isFalling==1){
			this.resetPath(new Point(this.fallPosX,this.screenheight-this.fallPosY),true,handler);
		}
		else{
			if (handler){
				handler.run();
			}
		}
	}

	__proto.refreshNpc=function(npcMsg){
		this.initBaseInfo(npcMsg);
		this.y=this.screenheight-this.y;
	}

	__proto.destroyFighter=function(){
		if (this.isDestroy){
			return;
		}
		this.CallingId=null;
		this.npcNode=null;
		if (this.npcSkeleton){
			this.npcSkeleton.destroy(true);
		}
		this.npcSkeleton=null;
		this.actConfig=null;
		_super.prototype.destroyFighter.call(this);
	}

	return BaseNpc;
})(Fighter)


//class ui.guild.item.ChatMeansItemUI extends laya.ui.View
var ChatMeansItemUI=(function(_super){
	function ChatMeansItemUI(){
		this.bg=null;
		this.txtContent=null;
		ChatMeansItemUI.__super.call(this);
	}

	__class(ChatMeansItemUI,'ui.guild.item.ChatMeansItemUI',_super);
	var __proto=ChatMeansItemUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatMeansItemUI.uiView;
		ChatMeansItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatMeansItemUI.uiView);
	}

	ChatMeansItemUI.uiView="eJytkc1KAzEQx19Fxmuwu/2gba4iKuhJUUSkZHeTTTS7WZJsP9ljPfgInrx48wnEx2nfw3FtS5VeBEMyIUP+M7+ZmYGfFBwoXCk+AgKFNYUDOoORSrwE2uoHBCRXqfRAO0FFIJZKJ0BvZ2vlacZSvi2dAEXRuLarML12l8BQORVplAimHSfgHlSO+thkmckbpRqkJk8l3tP7oHVQ5CkGdWrKj63ChBA2SdgjYZuEffjBVJE/sdQlDZnF71GdYoUhmW9IpnVDlGiidBAx7zUfRGa8A6ZN1nsLptvZhjljEde/YMJwQ2Nscm1ZAdTbku+i82N/aHLPc49BPB9jAnDCJYLhWT69LOevi/fH5fxt8fH8X37MlJnS8UtpTZnKzaxq51HOcH7Jxqk5SxR2hnYICCS9wP4AbQbfL6Q9V7E1zgi/d8NOuMLgsdHmq7Z9IQJc6GFapXX/sU5uoaruqk/u2uqL";
	return ChatMeansItemUI;
})(View)


//class ui.chat.ChatFullView.ChatGuild.ChatGuildBattleBoxUI extends laya.ui.View
var ChatGuildBattleBoxUI=(function(_super){
	function ChatGuildBattleBoxUI(){
		this.boxBattle=null;
		this.headImg=null;
		this._btn=null;
		this.fir_name=null;
		this._speak=null;
		this._desc=null;
		this.boxResult=null;
		this.bg=null;
		this.txt=null;
		ChatGuildBattleBoxUI.__super.call(this);
	}

	__class(ChatGuildBattleBoxUI,'ui.chat.ChatFullView.ChatGuild.ChatGuildBattleBoxUI',_super);
	var __proto=ChatGuildBattleBoxUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatGuildBattleBoxUI.uiView;
		ChatGuildBattleBoxUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatGuildBattleBoxUI.uiView);
	}

	ChatGuildBattleBoxUI.uiView="eJydVFtL3EAU/isyvoaa7CXrBuvDQlGh7UMrLaVKyGVywdnMmsy6u8pCaaHYC7U+tLRgKbRUfBF9EBS77a9JUt/8Cz1JTDZednVlw8IM53znO9/55qwh1mlgJKEnNm4hDjVc2vCQtIZats4sJBWrPIcsbJsWQ5JQFLsc0iyb6Eh6vpam1mg7n9mBLA61kQSZeZQVxYVglbZrCmMEo2tx5+qKiQdx8pZsB2I0S2ETlkLIhNGEP9WU1Rhdhjp3Go4J6Z69imdcG6CRUOLS7xblobFS3FhlSHkLK3pWfDTYUqaXKKRyRXBzdTPHVhS63cUuNxRvMsabFDLAQrU6TDLaloXLaolc/BuxtpAMv1oYVLDTWZU7y4k+OayHtSZj1LmIxidwxWIllURWWRQ1AHwZ4GvMOeuGKComEHWu0jxus4tlkgkIxb5nS9W0oGG7sqPUo0ZZlCqhMs/nVClAskEd9hikgxOfnCDsga251KMGG3umzGIbUjRKaAQ5zvOaYBjX0aqUE1rQe4u6+lNXaSCJuU3cH6yY0ZS9BlaWUHQkthlpU7d1neRoBxt74acf/tGHcH3TP3oRrn857X2Hb9T7SFjwpQ0SS2Jfh/ItdNBV3cCFczrMXCFEScxMNUiIciETQsee1u863P0ZbO0Ee7/DN3/93le/dxBsvISmpiJ2YzGTuwto3DB0zPMLaLrkHx+Hh4fQ7dREFDI9Blh0BbsGoS3A86AZQvIagEVtb5bVScz8jFfmDiGvilC9iSoGWIODVRltjgQtHSnBBkPnH+Hl9VsYun4fYa9JWM6/lfJN9xQ/BNgc+CZvtZSBVK7H+/E7vvBmhYzN1ZbIsWOxo9JnAG7YeHey/xZG7B/tnvbeB5s74bd9v7cNNyevtvzj18HHg+DP9r9fnyGtTpsenrdc2jQB1VCIh88u7zmKSrCeXWaOKI/+EhL/of6oNeww7MbDXuz+B3uioTM=";
	return ChatGuildBattleBoxUI;
})(View)


//class ui.guild.item.ChatRequestItemUI extends laya.ui.View
var ChatRequestItemUI=(function(_super){
	function ChatRequestItemUI(){
		this.bg=null;
		this.btnYes=null;
		this.btnNo=null;
		this.txtContent=null;
		ChatRequestItemUI.__super.call(this);
	}

	__class(ChatRequestItemUI,'ui.guild.item.ChatRequestItemUI',_super);
	var __proto=ChatRequestItemUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatRequestItemUI.uiView;
		ChatRequestItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatRequestItemUI.uiView);
	}

	ChatRequestItemUI.uiView="eJy9UsFq1FAU/RW5bmMnSTt2JjstIoIUQRGLyPAyuUkeffNeSG7a1CEboWAFcdeFK0XdacWNUvBzmrGf4U1Mwow4IAgm4SX35pxzT87LHOgoQfDgocRDsCBJTZKBN4dDGVAM3ubYtiBGGcUEnmMPSwumsVQBeI/nHfXOTES4zD0Cj1lFsy7rHIiU4X7E2Gxfan6exoIGsVBqEOa8+NHEF0QKJ74pNhLdIOVTvJ1KngjOltVdsOqqtHo3uzdzIqN/87PtNobc0bi3NHZ7R6T3MFtyZWazQS4nUYqoWxuJPDC0x9NGG8O2egTe1vW6UsJHdZ9Ss487Rpla8urIH9rOGFZeMrur+aPYjduW90QQSB7jwTXHsuuzIzZ6WS0YNoe15t7hGfnj7dnl2fulgDa3/zofx3b+nM+uWY3H6DqgQgozjVHztuX0n4Ny/zmo6tXp4uvztUHdbWCrMTmj9f81FbRjNKEmJhEWLAgX5yeLT++qk5eL0/Mrl5+/Lb48q168qY4/VMcfL76/ZuDM5Bk+iFOTRywXCpVh27ylha8w6Ju9Sw4j5EFtNPaviofdSKWoDU+7aAM/CNHljlAyanaOzWEKZfmk/Akl1U1Y";
	return ChatRequestItemUI;
})(View)


/**
*人物
*@author huyouwei
*/
//class modules.battle.part.role.Role extends modules.battle.part.role.Fighter
var Role=(function(_super){
	function Role(msg){
		this.maxMove=200;
		this.headurl="";
		this.userId=null;
		this.nickName=null;
		this.level=0;
		this.skills=null;
		this.sex=0;
		this.posX=0;
		this.posY=0;
		this.friendSkill=0;
		this.teamType=0;
		this.roleNode=null;
		this.heroSkeleton=null;
		this.mubeiSkeleton=null;
		this.test=null;
		this.nickname=null;
		this.moveK=4;
		this.state=0;
		this.mvpId=0;
		/**walk音效是否播放完 */
		this.playWalkEnd=false;
		//public var commonWeaponId:int=0;
		this.curAniName="";
		this.aimangle=0;
		this.aimEndAngle=0;
		this.autoAngle=0;
		this.isAutoAim=false;
		this.isAntiThrow=false;
		this.isNeedAntiThrow=false;
		this.friendState=0;
		this.hpView=null;
		/**聊天泡泡 */
		this.wordbox=null;
		this.wordTxt=null;
		this.bombCount=-1;
		//自爆弹数量
		this.zibaodan=null;
		this.zibaodancount=null;
		this.dicResult=false;
		this.dicEffect=null;
		this.tuoguan=null;
		this.birthEffect=null;
		this.phyStrength=0;
		this.maxPhyStrength=0;
		this.skillList=null;
		this.hdpercent=0;
		this.killNum=0;
		this.dieNum=0;
		this.damageNum=0;
		this.score=0;
		this.reviveEffect=null;
		this.fuhuoEffect=null;
		this.levelLabel=null;
		this.xuetiao=null;
		/**连续2句话的时候 */
		this.hasWord=false;
		this.crownAni=null;
		this._battlePlayermsg=null;
		// public static final int REVERSED_CAST=4;// 反抛帝
		this.judgeDatas=[];
		this.curJudgeEffect=null;
		this.numMove=this.maxMove;
		Role.__super.call(this);
		this.initBaseInfo(msg);
		this._type=Fighter.ROLE;
		this.moveSpeed=int(ConfigModel.getConfigData(1004).ConfigValue);
		this.maxMove=int(ConfigModel.getConfigData(1003).ConfigValue)*int(ConfigModel.getConfigData(1005).ConfigValue);
		this.numMove=this.maxMove;
		EventMgr.ins.on("recv_battle_fire",this,this.fireComplete);
	}

	__class(Role,'modules.battle.part.role.Role',_super);
	var __proto=Role.prototype;
	Laya.imps(__proto,{"modules.battle.part.role.IRole":true})
	__proto.fireComplete=function(){
		Laya.timer.once(800,this,this.checkChangeDir);
	}

	__proto.checkChangeDir=function(){
		this.checkAntiThrow(this.livingId);
	}

	__proto.checkAntiThrow=function(playerId){
		if(SceneMgr.ins.isInScene(SceneType.BATTLE_SCENE)){
			if (Cache.ins.battle.battlePlayerFireMsg && Cache.ins.battle.battlePlayerFireMsg.bombDetail && Cache.ins.battle.battlePlayerFireMsg.bombDetail[0])
				EventMgr.ins.event("ROLE_MOVE_DIR",Cache.ins.battle.battlePlayerFireMsg.bombDetail[0].livingID);
		}
	}

	__proto.initBaseInfo=function(info){
		var msg=info;
		this.userId=msg.userId;
		this.nickName=StringUtils.subName(msg.nickName,125,25);
		this.level=msg.level;
		this.maxHp=msg.maxHp
		this.hp=msg.hp;
		this.skills=msg.skills;
		this.sex=msg.sex;
		this.side=msg.dir;
		this.livingId=msg.livingId;
		this.posX=msg.posX;
		this.posY=msg.posY;
		this.phyStrength=msg.phyStrength;
		this.maxPhyStrength=msg.maxPhyStrength;
		this.skillList=msg.skillList;
		this.killNum=msg.killNum;
		this.dieNum=msg.dieNum;
		this.damageNum=msg.totalDamage;
		this.score=msg.damgeScore;
		this.headurl=msg.headUrl?msg.headUrl:"";
		this.friendState=msg.friendState;
		this.friendSkill=msg.friendSkill;
		this.teamType=msg.teamType;
		this.scale(1.2,1.2);
		this.syncHp(this.hp,msg.shieldHp);
	}

	__proto.checkDie=function(){
		if(this.hp <=0){
			this.die();
		}
	}

	__proto.reviveInfo=function(msg){
		this.maxHp=msg.maxHp;
		this.hp=msg.hp;
		this.livingId=msg.livingId;
		this.posX=msg.posX;
		this.posY=msg.posY;
		this.syncHp(this.hp,msg.shieldHp);
	}

	__proto.initView=function(msg,screenwidth,screenheight){
		this.init(screenwidth,screenheight,msg.direction);
		this.mouseEnabled=true;
		this.x=msg.posX;
		this.y=this.screenheight-msg.posY;
		this.roleNode=new Sprite();
		this.roleNode.mouseEnabled=true;
		this.roleNode.mouseThrough=true;
		this.addChild(this.roleNode);
		this.heroSkeleton=new HeroSkeleton(this.sex==1 ? RoleModelType.RandomManModel :RoleModelType.RandomWamanModel,Role.skillPerformance.Avatar,false,Handler.create(this,this.onComplete));
		this.heroSkeleton.setScale(0.78,0.78);
		this.heroSkeleton.mouseEnabled=false;
		this.roleNode.addChild(this.heroSkeleton);
		this.side=msg.direction;
		this.createBattle(msg);
		this.syncHp(this.hp,this.hdHp);
		this.turnRight(this.moveDir==Fighter.DIR_RIGHT);
		this.checkAngle(true);
		this.roleNode.alpha=0;
		if(Cache.ins.battle.isRandomFight()){
			this.acts=[0,2,3];
		}
	}

	__proto.onComplete=function(){
		EventMgr.ins.event("roleskeleton_complete");
	}

	__proto.createBattle=function(mapPlayerMsg){
		var isBlueName=false;
		if(Cache.ins.battle.battleType==10){
			isBlueName=this.teamType==2;
		}
		else{
			isBlueName=this.userId==PlayerInfo.instance.playerId ? true :false;
		}
		if(isBlueName){
			var xuetiao2=new RoleLanTiaoUI();
			xuetiao2.name="xuetiao";
			xuetiao2.anchorX=0.5;
			this.hpView=xuetiao2;
			this.addChild(xuetiao2);
			this.nickname=xuetiao2.nickname;
			this.levelLabel=xuetiao2.level;
			this.xuetiao=xuetiao2;
			}else{
			var xuetiao1=new RoleHongTiaoUI();
			xuetiao1.name="xuetiao";
			xuetiao1.anchorX=0.5;
			this.hpView=xuetiao1;
			this.addChild(xuetiao1);
			this.nickname=xuetiao1.nickname;
			this.levelLabel=xuetiao1.level;
			this.xuetiao=xuetiao1;
		}
		this.nickname.text=this.nickName;
		this.levelLabel.text=""+this.level;
	}

	__proto.hideHpProgress=function(){
		if(this.hpView)this.hpView.visible=false;
	}

	__proto.refresh=function(mapPlayerMsg){
		this.x=mapPlayerMsg.posX;
		this.y=this.screenheight-mapPlayerMsg.posY;
		this.moveDir=mapPlayerMsg.direction;
		this.turnRight(this.moveDir==Fighter.DIR_RIGHT);
		this.checkAngle(true);
	}

	/**播放表情 */
	__proto.playExpression=function(expId){
		if(this.isHide){
			return;
		};
		var emotionPath=UIFactory.ins.getSkeletonRootPath("emotion",false)+expId+".sk";
		var aniSkeleton=new AniSkeleton(emotionPath,null,0,false,Handler.create(this,this.onCallBack));
		this.parent.addChild(aniSkeleton);
		aniSkeleton.x=this.x;
		aniSkeleton.y=this.y;
		if(expId < 11){
			aniSkeleton.y=this.y-80;
			aniSkeleton.scaleX=this.moveDir;
			aniSkeleton.x=this.moveDir==1? this.x+50 :this.x-100;
			}else{
			aniSkeleton.y=this.y-200;
		}
	}

	__proto.onCallBack=function(aniSkeleton){
		aniSkeleton.destroy(true);
	}

	/**人物说话 */
	__proto.say=function(str){
		if(this.isHide)
			return;
		if(this.wordbox==null){
			this.wordbox=new Box();
			var wrodbg=new Image("battle/biaoqing/ui_paopaokuang.png");
			wrodbg.sizeGrid="32,67,52,29";
			wrodbg.anchorX=0.5;
			wrodbg.anchorY=0.5;
			wrodbg.width=150;
			this.wordTxt=new Label(str);
			this.wordTxt.anchorX=0.5;
			this.wordTxt.anchorY=0.5;
			this.wordTxt.fontSize=30;
			this.wordTxt.color="#ffffff";
			this.wordTxt.stroke=2;
			this.wordTxt.strokeColor="#000000";
			this.wordTxt.x=wrodbg.x;
			this.wordTxt.y=wrodbg.y-this.wordTxt.height/2;
			this.wordbox.addChild(wrodbg);
			this.wordbox.addChild(this.wordTxt);
			if(this.moveDir==-1){
				wrodbg.scaleX=1;
				this.wordbox.x=-100;
				}else{
				wrodbg.scaleX=-1;
				this.wordbox.x=100;
			}
			this.wordbox.y=-100;
			}else{
			this.wordTxt.text=str;
			if(this.hasWord){
				Laya.stage.clearTimer(this,this.removeWord);
			}
		}
		this.addChild(this.wordbox);
		this.hasWord=true;
		Laya.stage.timer.once(3000,this,this.removeWord);
	}

	__proto.removeWord=function(){
		if(this.wordbox){
			this.wordbox.removeSelf();
			this.wordbox.destroy(true);
			this.wordbox=null;
		}
		this.hasWord=false;
	}

	__proto.move=function(dir){
		this.moveDir=dir;
		var nextPoint=this.getNextPos(2);
		if(this.isCanMove(this.x,this.y,nextPoint.x,nextPoint.y)){
			var callback=Handler.create(this,this.complete);
			this._move(nextPoint,dir,callback);
			this.playRoleAni("walk",true);
			if(this.x !=nextPoint.x || this.y !=nextPoint.y){
				if(!this.playWalkEnd){
					this.playWalkEnd=true;
					SoundMgr.instance.playSound(4003012,Handler.create(this,this.playEnd));
				}
			}
			if(this.numMove < this.maxMove){
				this.numMove=this.numMove+2;
				this.onHandleXingDongli();
			}
			}else{
			this.turnRight(dir==Fighter.DIR_RIGHT);
			this.playRoleAni("idle",true);
			this.syncPos();
		}
	}

	// private var islock:Boolean;
	__proto.resetPathComplete=function(x,y,handler){
		_super.prototype.resetPathComplete.call(this,x,y,handler);
		this.playRoleAni("idle",true);
	}

	__proto.walk=function(){
		_super.prototype.walk.call(this);
		this.playRoleAni("walk",true);
	}

	__proto.onHandleXingDongli=function(){}
	__proto.complete=function(){
		this.checkAngle();
		this.move(this.moveDir);
		EventMgr.ins.event("refreshdistance");
	}

	__proto.playEnd=function(){
		this.playWalkEnd=false;
	}

	__proto.stop=function(){
		_super.prototype.stop.call(this);
		this.playRoleAni("idle",true);
	}

	__proto.changeRotation=function(rotation){
		_super.prototype.changeRotation.call(this,rotation);
		this.roleNode.rotation=rotation;
	}

	__proto.isCanMove=function(curX,curY,toX,toY){
		if (this.checkBuff(2022002)|| this.checkBuff(2023001)){
			return false;
		}
		if(this.isDrop){
			return false;
		};
		var battleScene=SceneMgr.ins.curScene;
		if(toX < 0 || toY < 0 || toX >=battleScene.width){
			return false;
		}
		if(this.numMove >=this.maxMove){
			return false;
		};
		var K=MathTools$1.calcK(curX,curY,toX,toY);
		if (K==0){
			return true
		}
		if(this.moveDir==Fighter.DIR_RIGHT){
			if(K < 0){
				if(Math.abs(K)> this.moveK){
					return false;
				}
			}
			}else if(this.moveDir==Fighter.DIR_LEFT){
			if(K > 0){
				if(Math.abs(K)> this.moveK){
					return false;
				}
			}
		}
		return true;
	}

	__proto.syncPos=function(){
		var msg=new com.road.ddt.proto.battle.BattleMoveMsg();
		msg.posX=this.x;
		msg.posY=this.screenheight-this.y;
		msg.fallY=-1;
		msg.type=0;
		msg.direction=this.moveDir;
		SocketManager.Instance.sendSocketData(0x3AA4,msg);
	}

	__proto.playRoleAni=function(aniName,loop){
		if(this.heroSkeleton){
			if(!this.isLive){
				this.destroyZiBao();
				this.heroSkeleton.play("die",true);
				return;
			}
			this.heroSkeleton.play(aniName,loop);
		}
	}

	__proto.turnRight=function(turnRight){
		if(this.heroSkeleton){
			this.heroSkeleton.isTurnRight=turnRight;
			if(this.zibaodan){
				this.zibaodan.scale(turnRight?1.0:-1.0,1.0);
				if(turnRight){
					this.zibaodan.x=-100;
					this.zibaodan.y=-100;
					}else{
					this.zibaodan.x=100;
					this.zibaodan.y=-100;
				}
			}
		}
	}

	__proto.setFrameIndexByRotation=function(rotation){
		if(!this.isLive)
			return;
		var angle=Math.round(rotation);
		if(angle<=0)
			angle=0;
		if(angle>=90)
			angle=90;
		if(this.heroSkeleton)
			this.heroSkeleton.index=angle;
	}

	__proto.miaozhun=function(dir,frameAngle){
		_super.prototype.launch.call(this,dir);
		this.aimangle=1;
		if(frameAngle > 90)frameAngle=180-frameAngle;
		this.aimEndAngle=frameAngle;
		Laya.timer.frameLoop(1,this,this.playAim,[1]);
	}

	__proto.update=function(){
		_super.prototype.update.call(this);
		this.autoAim();
	}

	__proto.autoAim=function(){
		if (this.isAutoAim){
			this.playRoleAni("attack-aim",true);
			this.setFrameIndexByRotation(70);
			}else{
			this.autoAngle=0;
			return
		}
	}

	__proto.playAim=function(flag){
		this.aimangle=this.aimangle+2 *flag;
		this.playRoleAni("attack-aim",false);
		this.setFrameIndexByRotation(this.aimangle);
		var temp=this.aimEndAngle+(90-this.aimEndAngle)/2;
		if(this.aimangle>=temp && flag > 0){
			Laya.timer.clear(this,this.playAim);
			Laya.timer.frameLoop(1,this,this.playAim,[-1]);
			}else if(this.aimangle <=this.aimEndAngle && flag < 0){
			Laya.timer.clear(this,this.playAim);
		}
	}

	__proto.launch=function(dir){
		Laya.timer.clear(this,this.playAim);
		_super.prototype.launch.call(this,dir);
		this.playRoleAni("attack-shoot1",false);
		Laya.timer.once(500,this,this.attackOverHandler);
	}

	__proto.attackOverHandler=function(){
		this.playRoleAni("attack-over",false);
		Laya.timer.once(150,this,this.playAttackOverEndHandler);
	}

	__proto.playAttackOverEndHandler=function(){
		this.playRoleAni("idle",true);
	}

	__proto.cutHp=function(curHp,damage,isCrital,isPerfectHit,damageType){
		_super.prototype.cutHp.call(this,curHp,damage,isCrital,isPerfectHit,damageType);
		this.playRoleAni("hit",false);
		Laya.timer.once(1000,this,this.playRoleAni,["idle",true]);
	}

	__proto.syncHp=function(currentHP,hdHp){
		if(!this.isLive)
			return;
		_super.prototype.syncHp.call(this,currentHP,hdHp);
		if(this.hp >=this.maxHp){
			this.hp=this.maxHp;
		}
		this.hp=this.hp+hdHp
		EventMgr.ins.event("sync_menu_hp");
		if(hdHp > 0){
			this.hdpercent=(this.hp+hdHp)/this.maxHp;
			if(this.hdpercent>=1.0){
				this.hdpercent=1.0;
			}
			EventMgr.ins.event("sync_hdhp",[this.hdpercent,this.side]);
			}else{
			this.hdpercent=0;
			EventMgr.ins.event("sync_hdhp",[this.hdpercent,this.side]);
		}
		if(this.xuetiao){
			this.xuetiao.hpmask.width=this.hp/this.maxHp *135;
			this.xuetiao.mpTextHp.text=this.hp+"";
		}
	}

	__proto.playTurn=function(){
		_super.prototype.playTurn.call(this);
		this.isAutoAim=false;
		this.playRoleAni("myturn",false);
		Laya.timer.once(1000,this,this.myTurnCallback);
	}

	__proto.myTurnCallback=function(){
		if (!this.isAutoAim){
			this.playRoleAni("idle",true);
		}
	}

	__proto.die=function(){
		this.syncHp(0,0);
		_super.prototype.die.call(this);
		if(this.mubeiSkeleton==null){
			this.mubeiSkeleton=new AniSkeleton("assets/animation/other/siwangmubei.sk",null,0,false,Handler.create(this,this.playDieSound));
			this.addChild(this.mubeiSkeleton);
			this.dievisible();
			EventMgr.ins.event("die_revive");
		}
	}

	__proto.playDieSound=function(){
		SoundMgr.instance.playSound(4003004);
		if(this._battlePlayermsg){
			this.revive(this._battlePlayermsg);
			this._battlePlayermsg=null;
		}
	}

	__proto.dievisible=function(){
		Laya.timer.once(1000,this,this.playRoleAni,["die",true]);
	}

	__proto.overturn=function(){
		_super.prototype.overturn.call(this);
		this.isAutoAim=false;
	}

	//changeWeapon(getWeaponId());
	__proto.getWeaponId=function(){
		return Role.skillPerformance.Avatar;
	}

	__proto.changeWeapon=function(weaponId){
		if(this.heroSkeleton){
			this.heroSkeleton.updateWeapon(weaponId,Role.skillPerformance.WeaponType==1 ? true :false);
			Role.skillPerformance.Avatar=weaponId;
		}
	}

	__proto.myturn=function(){
		_super.prototype.myturn.call(this);
		this.changeWeapon(this.getWeaponId());
	}

	__proto.useSkill=function(skillId){
		var skillData=SkillModel.getSkillConfigData(skillId);
		var skillPerData=SkillModel.getSkillPerformanceBySkillId(skillData.Display);
		if(skillPerData.Avatar !=0){
			if(this.heroSkeleton)
				this.heroSkeleton.updateWeapon(skillPerData.Avatar,skillPerData.WeaponType==1 ? true :false);
		}
		this.playRoleAni("useitem",false);
		Laya.timer.once(1000,this,this.myTurnCallback);
		var useSkillNode=new UseSkillEffect(skillPerData.Icon,skillData);
		useSkillNode.x=0;
		useSkillNode.y=-150;
		useSkillNode.zOrder=9999999999;
		this.addChild(useSkillNode);
		return true;
	}

	__proto.syncLiving=function(msg){
		if(this.type==Fighter.HERO){
			if(this.heroSkeleton)
				this.heroSkeleton.alpha=msg.isHide?0.5:1;
			}else{
			this.visible=msg.isHide?false:true;
		}
		this.isHide=msg.isHide;
		this.showTuoGuan(msg.isMandate);
		EventMgr.ins.event("sync_mandate",[msg.isMandate,this.side,this.livingId]);
		var temp=msg.bombCount;
		if(this.bombCount==-1){
			this.bombCount=temp;
			this.checkZibaodanCount(true);
			}else{
			this.bombCount=temp;
			this.refreshZibaoDanCount();
		}
	}

	__proto.showTuoGuan=function(isMandate){
		if(isMandate){
			if(!this.tuoguan){
				this.tuoguan=new Image(LanguageMgr.Ins.getBattleLanguagePath("ui_tuogz.png"));
				this.tuoguan.anchorX=0.5;
				this.tuoguan.anchorY=0.5;
				this.tuoguan.x=0;
				this.tuoguan.y=-100;
				this.addChild(this.tuoguan);
			}
			}else{
			if(this.tuoguan){
				this.tuoguan.destroy(true);
				this.tuoguan.removeSelf();
				this.tuoguan=null;
			}
		}
	}

	__proto.showBirth=function(delay){
		this.roleNode.alpha=1;
	}

	//Laya.timer.once(delay,this,this._showBirth);
	__proto._showBirth=function(){
		Tween.to(this.roleNode,{alpha:1},15/30*1000);
	}

	__proto.showBirthEnd=function(){
		this.birthEffect.removeSelf();
		this.birthEffect.destroy(true);
		this.playRoleAni("idle",true);
	}

	__proto.showRevive=function(){
		this.fuhuoEffect=new AniSkeleton("assets/animation/effect/fuhuo.sk",null,0,false,Handler.create(this,this.showReviveEnd));
		this.addChild(this.fuhuoEffect);
	}

	__proto.showReviveEnd=function(){
		this.fuhuoEffect.removeSelf();
		this.fuhuoEffect.destroy(true);
		this.playRoleAni("idle",true);
	}

	__proto.refreshZibaoDanCount=function(){
		if(this.zibaodan && this.bombCount > 0){
			(this.zibaodancount.getChildByName("count")).text=""+this.bombCount;
		}
	}

	__proto.showZiBaoDan=function(isFirst){
		if(this.bombCount > 0){
			if(!this.zibaodan){
				this.zibaodan=new AutoBomb();
				this.addChild(this.zibaodan);
				this.zibaodan.zOrder=-1;
				this.zibaodancount=this._createBufferIcon(3,-100,this.bombCount);
				this.reCalcBufferIconPos();
				if(isFirst){
					this.zibaodan.showBirth();
					}else{
					this.zibaodan.showChangeBorn();
				}
				}else{
				this.zibaodan.visible=true;
				this.zibaodan.showNormal();
				(this.zibaodancount.getChildByName("count")).text=""+this.bombCount;
			}
			this.turnRight(this.moveDir==Fighter.DIR_RIGHT);
			}else{
			this.destroyZiBao();
		}
	}

	__proto.destroyZiBao=function(){
		if(this.zibaodan){
			if(this.dicResult){
				this.zibaodan.showDie();
				EventMgr.ins.event("resetzibaodan");
				}else{
				this.zibaodan.showChange();
			}
			this.zibaodancount.removeSelf();
			this.zibaodancount.destroy(true);
			this.removeBuffer(-100);
			this.zibaodan=null;
		}
	}

	__proto.syncDiceResult=function(msg){
		this.dicResult=msg.result;
	}

	__proto.checkZibaodanCount=function(isFirst){
		(isFirst===void 0)&& (isFirst=false);
		this.showZiBaoDan(isFirst);
	}

	__proto.revive=function(battlePlayermsg){
		this._battlePlayermsg=battlePlayermsg;
		this.isLive=true;
		this.reviveInfo(battlePlayermsg);
		this.x=battlePlayermsg.posX;
		this.y=this.screenheight-battlePlayermsg.posY;
		this.checkAngle(true);
		this.showRevive();
		this.removeMubeiSkeleton();
		this.removeReviveEffect();
	}

	__proto.removeMubeiSkeleton=function(){
		if(this.mubeiSkeleton){
			this.mubeiSkeleton.removeSelf();
			this.mubeiSkeleton.destroy(true);
			this.mubeiSkeleton=null;
		}
	}

	__proto.removeReviveEffect=function(){
		if(this.reviveEffect){
			this.reviveEffect.removeSelf();
			this.reviveEffect.destroy(true);
			this.reviveEffect=null;
		}
	}

	__proto.addReviveEffect=function(){}
	// reviveEffect.blendMode=BlendMode.ADD;
	__proto.destroyFighter=function(){
		if(this.isDestroy)
			return;
		EventMgr.ins.off("recv_battle_fire",this,this.fireComplete);
		this.destroyZiBao();
		this.clearJudge();
		this.roleNode=null;
		this.heroSkeleton && this.heroSkeleton.destroy(true);
		this.heroSkeleton=null;
		this.mubeiSkeleton && this.mubeiSkeleton.destroy(true)
		this.mubeiSkeleton=null;
		this.test=null;
		this.nickname=null;
		Laya.timer.clear(this,this.playAim);
		_super.prototype.destroyFighter.call(this);
	}

	__proto.cleanCrown=function(){
		if(this.crownAni){
			this.crownAni.removeSelf();
			this.crownAni.destroy(true);
			this.crownAni=null;
		}
	}

	__proto.changeCrown=function(id){
		if(this.crownAni==null){
			this.crownAni=new CrownAni();
			this.addChild(this.crownAni);
			if(this.mvpId==0 || this.mvpId !=id){
				this.mvpId=id;
				SoundMgr.instance.playSound(4006056);
				var aniTemp=new AniSkeleton('ui_mowangjianglin',"ui",0,false,null,null,true);
				this.crownAni.addChild(aniTemp);
			}
		}
	}

	__proto.showBattleJudge=function(juageType){
		this.judgeDatas.push(juageType);
		this.checkJudgeShow();
	}

	__proto.checkJudgeShow=function(){
		if(this.judgeDatas.length > 0 && !this.curJudgeEffect){
			var juageType=this.judgeDatas[0];
			this._cretaeJudgeEffect(juageType);
			this.judgeDatas.splice(0,1);
		}
	}

	__proto._cretaeJudgeEffect=function(juageType){
		var anis=["renpinbaofa","tejidashi","jingzhundashen" ,"fanpaodi"];
		var aniName=anis[juageType-1];
		var effectPath="assets/animation/uieffect/huihepingjia.sk";
		var aniSkeleton=new AniSkeleton("huihepingjia","ui",aniName,false,Handler.create(this,this.judgeStoped),null,true);
		this.addChild(aniSkeleton);
		this.curJudgeEffect=aniSkeleton;
		this.curJudgeEffect.x=0;
		this.curJudgeEffect.y=-70;
	}

	__proto.judgeStoped=function(){
		this.clearJudge();
		this.checkJudgeShow();
	}

	__proto.clearJudge=function(){
		if(this.curJudgeEffect){
			this.curJudgeEffect.removeSelf();
			this.curJudgeEffect.destroy(true);
			this.curJudgeEffect=null;
		}
	}

	__proto.syncInfo=function(playerInfoMsg){
		this.syncHp(playerInfoMsg.hp,this.hdHp);
		this.resetPath(new Point(playerInfoMsg.posX,this.screenheight-playerInfoMsg.posY),false);
		this.moveDir=playerInfoMsg.dir;
		this.turnRight(this.moveDir==Fighter.DIR_RIGHT);
	}

	__getset(0,__proto,'curWeaponId',function(){
		return this.heroSkeleton.weaponId;
	});

	// }
	__getset(1,Role,'skillPerformance',function(){
		if(Role._skillPerformance==null){
			var defauleWeapon=1000002;
			var skillData=SkillModel.getSkillConfigData(defauleWeapon);
			Role._skillPerformance=SkillModel.getSkillPerformanceBySkillId(skillData.Display);
		}
		return Role._skillPerformance;
	},modules.battle.part.role.Fighter._$SET_skillPerformance);

	Role._skillPerformance=null;
	return Role;
})(Fighter)


//class ui.guild.item.DonateCardItemUI extends laya.ui.View
var DonateCardItemUI=(function(_super){
	function DonateCardItemUI(){
		this.btn_request=null;
		this.card=null;
		this.bar=null;
		this.countTxt=null;
		DonateCardItemUI.__super.call(this);
	}

	__class(DonateCardItemUI,'ui.guild.item.DonateCardItemUI',_super);
	var __proto=DonateCardItemUI.prototype;
	__proto.createChildren=function(){
		var temp=DonateCardItemUI.uiView;
		DonateCardItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.skill.item.SkillCard",SkillCard);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(DonateCardItemUI.uiView);
	}

	DonateCardItemUI.uiView="eJx1UtFu0zAU/RV0eTVZHDWw5nGTtiENNKkIbUKochM3vZoTZ46zdVR94YcmnvgjtM/YtZO0XoEksmP73nuOz7kbsI+NhAy+onwABo3RTQvZBh6wsCvIeJIyWEksVxayhKdbBvkKVQHZt82Y+rESpQxzHyGLGaz9GNZpb7GmeJqUOupwfisagYsyauqS0lv8Ic8NUmngMRs/2MPzD+l2y3awn086a3V9AMynqYd+n+yxY+JxLwzlLGw9N/Kuk62FHZ9cV5Wjo42oS7nAkVCD99re0LXj4f8aspRHVF+JhVQz4kuHk2F5JYoCKS+Dd5zF7oXh5EzXxB5mWF1IHDdPtdKGSMPbpX/Yf+YxniKfn37/+fUzEGQSh3rMnKynwhSHivR6jBLkfUSbCyXpcnF0PCyuh4XpaouVq1jpolOyjbxhEVpZRXuQEPrK6NLItj0hhAPwtO+E48CN6c4NH/6qK5qh0pz/3RXUDhPmhkCC5JUEl16pfzOYBgz4TgxNl/2yds1g5dq5lByF5TllLcm+3muC9ysK+4S50a1e2jc3onc1d4Y6P8/8QztCYen7S9ZWGhLs+/YFfJ4SAw==";
	return DonateCardItemUI;
})(View)


//class ui.chat.ChatFullView.ChatGuild.ChatGuildDonateUI extends laya.ui.View
var ChatGuildDonateUI=(function(_super){
	function ChatGuildDonateUI(){
		this.txtName=null;
		this._info=null;
		this._card=null;
		this.txtGetSkill=null;
		this._btn=null;
		this._progress_bg=null;
		this._progress_bar=null;
		this._progress_txt=null;
		this.getCoinBox=null;
		this.txtCoin=null;
		this.getExpBox=null;
		this.txtExp=null;
		this.timeBox=null;
		this.msgTxt=null;
		this.djs=null;
		this.txtHaveBox=null;
		this.txtHave=null;
		ChatGuildDonateUI.__super.call(this);
	}

	__class(ChatGuildDonateUI,'ui.chat.ChatFullView.ChatGuild.ChatGuildDonateUI',_super);
	var __proto=ChatGuildDonateUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatGuildDonateUI.uiView;
		ChatGuildDonateUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatGuildDonateUI.uiView);
	}

	ChatGuildDonateUI.uiView="eJy1VsuO2zYU/ZWCXUaJ9ZbsXTMIkgJtNhkUDYrAoCRKYoYmDYmecTowELRBkDYI2kVXQRbJIkA2BbroA83jbzJOdv2FUqIetEYje9IUNgRTJi/PPefcSx4DfmeOwAR8hdER0MA8Y/McTI7BHTDRNbAsn0c44imYWGPxO0U4STmYGJa70kCYYhKByTfHdZjPZzBBnTheX5z8AFMxP0whH6WQkFG8EI8gmQaQc4KmAVtemtNEhMrxt+hqhsU2wLC1+gs+CIqxO5QFnkaMQo6mnM1PQ/FLGJtAbL0Pxz5a8l5GzBaHZ2rgEGZiNl/y63BW4ObFuglY//rq7ctnb/9+uL73k7KX6WogZpTfEJBEXr4ciflf4jBjOYv5JzfhNYTFkpARVoT+VNdDI47BaqU14K73sWRK5S3LacghkCYLMXO0l2KKcjTqsFVShWlSEQVpmLLspqD6klOPvhYw1a17d5Yb23pNxxTTmIEBjRJIOSx3Xa1uic9wfMfpMu/azVYhzCKFYc9X0fao6MtgY7cJZvi2ouNVxG8cYEIULX/58+TBb+8e31v/ePf992/+ef1Y/McOURYTdiT+T3EUIapa2z+/ylEQxcjcVPnygnNGuy4cVzIbTQJ+48NpwOkg7xlCtFKbwAARMUsBbtl9pdDrNsMtYdjG+cyGhq0mRqutdjAMaThDbw1hun7DgZgr8szzaZAMcSG6lnm6Q+iaoWvFA+zanS7K9nSx1cPpgSLGw1isQSzDnpYIDNHbaghKLTYYeLmuMrWtjxy92I5n7ADt1Tb0fMe0vOZ9Wdtn2Nrexdax6FxCX4KTMnFEOcrApsSX2bKbji1bmWn6bZE6hcA4xwERi3i2QHWCCeJ7DFMZpsbq9jb1s5vX2G/UgXmOeD4qeBK7jDBHMxwyOkoYiWqNQkhQaV63GpTedVWZvijLq5OY0znJxr7SeYosWoEuCHv3CIQgtHSoCGRpYMYWOdpPM7ZIRMwYkhxVL69QKPiKmpdNoTuqlPWpJOJ/lmFIOgJKDQNG2ji1oFkZbrue8ugs6raW0/IV/a4s55vyOb3y9VIqvW+31vdUTkXkrZQ6hhcHgUKp/REotXegtMviQNuTrtniULScnzKooxrU2aaUM646q6sUW5VoxSmeoWLdLnempewZcuEsT/bVBrR+9PP7P56e3P/r5NHv8kg975EZx3qh5463N+mTcdMXo9t5C0Y3RG1Oyob4oSg695g+r7pVGXhWa1ZPMes1eIikJjVH371YP3y+fvLD/3rnOPvi11qUoJjvynR1IPrW5mnUbyeZ9cc8l8b/6Vy6tfoXZPs8+w==";
	return ChatGuildDonateUI;
})(View)


//class ui.guild.item.DonateItemUI extends laya.ui.View
var DonateItemUI=(function(_super){
	function DonateItemUI(){
		this.hasNumProBar=null;
		this.donateBtn=null;
		this.cardBox=null;
		this.hasNumText=null;
		DonateItemUI.__super.call(this);
	}

	__class(DonateItemUI,'ui.guild.item.DonateItemUI',_super);
	var __proto=DonateItemUI.prototype;
	__proto.createChildren=function(){
		var temp=DonateItemUI.uiView;
		DonateItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(DonateItemUI.uiView);
	}

	DonateItemUI.uiView="eJxtUm1vmzAQ/i+3r1YDhATCt6WaqkpTNGnVtGmqIhcutluwkTFrmoj/vgMCIagIMDb3vPg5n8F9lAgJ/FL4DgxKa8oKkjO8q8xJSPwoYCBRCekgCeK4YZBKlWeQ/D0P0MeCC5xiPwhHsCMNHhuZVvRdvSlNCFETxaJWe2G0kDSeXr3wrtQCJmKeT/XqhA9WkRz4IRtuaBo2qv+wRlisqi23cw9x3JtYX02EZOIfVSYgebWrC0L3wBtn5YVz789N3XryWMzoufGz29bOGT3zEqx6L3E06GdGc4dbp6/iqSkKo7tcLKK+aOf8BXP6C59lv/ss/KXXaUXRyJxzLWoqXNxLpbHCxdiB19M+uAhxnUpj/0Di3a2G2e9u1jTPkx1uzXGe9LoPenMNehkOG025zXrIkKK/Xk4T+95tcMa48TvKYHKAgs1t757w6Ajm2oHOh+d5i/bV5umsecN7k5u2+svmsOZhNK4TK4PC1BU+SWtqQdwHnld4Wfym+UuO2bg4uqY4D0a7n9T/9iT1M+L/ahVv/aeD3qG72kRzJbrGonZooY3xP6GAESQ=";
	return DonateItemUI;
})(View)


//class ui.guild.item.GuildBuffListItemUI extends laya.ui.View
var GuildBuffListItemUI=(function(_super){
	function GuildBuffListItemUI(){
		this.updateBtn=null;
		this.consumeCount=null;
		this.maxBox=null;
		this.isMax=null;
		this.updateingBg=null;
		this.updateTime=null;
		this.updateTipText=null;
		this.descrText=null;
		this.levelText=null;
		this.nameText=null;
		this.effectDescrGText=null;
		this.buffIcon=null;
		GuildBuffListItemUI.__super.call(this);
	}

	__class(GuildBuffListItemUI,'ui.guild.item.GuildBuffListItemUI',_super);
	var __proto=GuildBuffListItemUI.prototype;
	__proto.createChildren=function(){
		var temp=GuildBuffListItemUI.uiView;
		GuildBuffListItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(GuildBuffListItemUI.uiView);
	}

	GuildBuffListItemUI.uiView="eJzFVl2P20QU/StoeAHJNJ7xZ/K4RVoqQV+oEAghNHHG9mwdO7LH27SrSCshym7LPqz4EIKqC30A8fWCkFiWrfgzsbc/gztxHDuJE6OKCiuyLGfuPeeee+54DpC4O2Koh97h7A5S0CiORgnqHUwU5Pg8GKDe+wflkhtD6rHaGnQX9bCCxnA3bQXd4QPho15XhXfJbR5ChJdCik7KP9zjIQu9e6nPBvzaKPQgS8Lvsd2YAwIipkJ0RdMVYsEfPuOeLyCppk8mylZ0dYauLrBxV1/HTvreOiQ2FawqcCfqEqTZBomLim0DL1DJOuY4HXMazmHL7ERtS66TF5jc0l5gcqzq/1H2mzupEFG4Sr5I3zXNqtkGPO/TGGLS0YAKtiNk1Fr7fXDeHm/yHXSfKHDTJBjfj8R7qKfh+fO7AAquDmifBbC2xtc0mqbj5maDyjxzWgENvRTWda77MBIJ66zynLOkoeNHMXBQrxlt2hNjhqLVlLcWgE40HEahBPD8/orw2pLwt9hYrGa2Z5mNarrtheZOFCbpkF2P0lCGCRkNo6zCJVUWcXQb/gwiufZlw6K49n7mjUX7wZduFIq3oTHSDKBtGebOLgjrR1JsEacMpAm4N6uMhYLFaDL5oN09xjb3DOl4Jxo/v3W2+6JJ1mIP0YwGWXnyFh1XemZ//Jb/9d3VxQ//o6ZNnjOtYtzNqgZsq8vzyENvx2uQdW8gmiTtKthS5K2+NdgtDrWKCeuSFexbfMgqFTGBfbtnGOsiDphpr4pYCYft7cK1kNOsOTljldxovrrs8skn0OLp+a9oqW2khm5o1FRd1IZYDCwhVVtM6bYCfcASJ15Gzh8dTy/uT59+lj34Jru8yD79Unkp+/5I/u6fTP88m56f5A8/zv7+KD86ffbk5/zwp6vjH/NfLp79fgZx9U6RjdSpa1FddrV0WcBc0VYJVsujxaISYyFjwPZZsFzIm9p6c21H72Nnw4SQ55uQeBb+L8mbenUsskvyIR2yZe51+TdLWqdoWzoluG2IK467TaOjzb1i1ryyGCPmuswRr0vH7G5m28uePM4efJsfH0ojXX6dnX4Fe9LV52fZ6dPs8PKV6flDMHb+xVH++JH6GjbUVyEPT94Qw6J9c+ZlxYbVbqKiYpcGCdviqMYzSvEVkFtXue12y3L7qevecKLaAYImCRNJRxYNHDtyAXeKL+kep478NKjaygfVNuXO+Q/fsbSl";
	return GuildBuffListItemUI;
})(View)


//class ui.guild.item.GuildChestItemUI extends laya.ui.View
var GuildChestItemUI=(function(_super){
	function GuildChestItemUI(){
		this.txtName=null;
		this.txtJob=null;
		this.txtNum=null;
		this.clipnum=null;
		this.first=null;
		this.headImg=null;
		GuildChestItemUI.__super.call(this);
	}

	__class(GuildChestItemUI,'ui.guild.item.GuildChestItemUI',_super);
	var __proto=GuildChestItemUI.prototype;
	__proto.createChildren=function(){
		var temp=GuildChestItemUI.uiView;
		GuildChestItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(GuildChestItemUI.uiView);
	}

	GuildChestItemUI.uiView="eJytlN1q1EAUx19Fxtu0O/n+uJOiUhFvlKKILJNkkkybZMJk0u52CYh4odfijS8hom8ktD6GZ5JNslu3XYTeLJuTzP9/fudjVkguK4oCdMLoBdJQJXhVo2CFLlgsMxTo2MEayihLM4kCz281FGUsj1HwdjUcPS5ISjfPLlEAhxbd75ZOfcZKOBDxouDlrGHzkDDJCD+Yh6eHVZmCSM0u6VPBwABhzbA0rJkGhEtSKKswRW2r3ensds665++wS2iZUvDsvPYJ6XqnZGB3h1J8Gv8j8pyENL8p4vUinjuVwofYORFwQi7kCwWmIUkXUF909fnL9acf198+/vn+6+rn1/7/7/cf4IuCNzV9lQnepCCSkLym6+DjkoQ5jcfg0C3T0FDCS/kSSgopWP0TuDwSjKhEI55zlcZD37Z93YZIyFVrpWhAhuQsVdA5TeReTmsXp7XB+YyHE+YJZxF9kFMSU3EfaMbtaEniuhij/8VxOhzfskec7a41xUhjGliNthT8jB4Ntp5rm51tH4cc7wHTuQszwdhUmGWUcfEGdu/QHp5eQzOmAohOe7MCT0D0KGfVzdnti6BaO26xPhQhgu/LrgrnJG+UitXhViSi4HegT1uTNnBhqKWpL4clzyhVGFg3TMt2XM9HE7Tt7d3MLi/XGPOyzSGthIlaoq2FVc4FZTmbY33tP95n7j6r9SAY1mTmjGOdwQAfF5uC6t0tHYCnvVxmP3X2htl0a5K6prKeqaGD/ZwxSQsW9bdRmi0JrzNm3OBzcNu+a/8CWuHckg==";
	return GuildChestItemUI;
})(View)


//class ui.guild.item.GuildInfoListItemUI extends laya.ui.View
var GuildInfoListItemUI=(function(_super){
	function GuildInfoListItemUI(){
		this.txtName=null;
		this.txtJob=null;
		this.arrow=null;
		this.clipnum=null;
		this.first=null;
		this.headImg=null;
		this.green=null;
		this.divIcon=null;
		this.divName=null;
		this.donateBox=null;
		this.labTxt0=null;
		this.txtDonate=null;
		this.qqBox=null;
		this.btnAdd=null;
		this.vipIcon=null;
		GuildInfoListItemUI.__super.call(this);
	}

	__class(GuildInfoListItemUI,'ui.guild.item.GuildInfoListItemUI',_super);
	var __proto=GuildInfoListItemUI.prototype;
	__proto.createChildren=function(){
		var temp=GuildInfoListItemUI.uiView;
		GuildInfoListItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(GuildInfoListItemUI.uiView);
	}

	GuildInfoListItemUI.uiView="eJytVt1O1EAYfRUy3nZh+r/dO0BRjHIDIRBjyGw7bQfbmaWdwgIhIYZEvSDRGG+8MvEBjFGvfBwTWN7Cabv92d3uz8XeEKbbOd8535zvTC8BP+9h0AH7BJ8BCfQi1otB5xKcEYf7oCNDA0rAx8TzOei0rSsJ2D4JHNB5dVls3Q6Rh+t7z0FHbOpnf0dw4jeEig02C0NG1xJy1EWEE8RaR93j1R71BEhMLvDTiIgCAEqKJkFJVcDVlTSzmpFVky2toYSLqYdFnQx/HpCVASmyXBI3m2g7x86QbtEZE9ahX6AuDsag5ZykqtWaYrUlcIoisYP3+Q4KUzoc9wUeuPvw+f79z/uvN4Mfv+9+fcn//3f9VrwRsiTGe37EEk+AuCiI8fDhE4q6AXbKhwU7VZGAyyjfFc0V8rR8JaqsRwSlRG0WsJTGI0vXLVkXT7osPWQeJQIGBcRLGxBgl4N5OrVcp2JZNZ1aTedz1q1k7jNi45UAIwdHy5AGS2kviR2xmLl85RA9w6Qu0nVNE0IwQ1iTN2Q9d5lqFmJQFLF0aIb+8BIxGKk94gmvbQlOmwHpjUNqGaRes4QKC3RbvE+TEKTrIBEoqbt7yMYHoNOSzYayF8UM+RinLYCyomq6YbatmlMNOFdoTsooSelqwcklUczByESklUNMAnIE5bGhaJvzSml5AxStKmaUXvGFK7bDOmD6G6K2z6JDES6rerE6yFZzi+W1TKUo4EUY00k1F4j0CaILBYam5M0yq8QwyhN0yOm2zehI8xcV0DRaSjsrZsCqW3JbrlUbjZDB7ffB9fXD35uHd5+WMVvKIrNlucMAmTpbG6w/rit3nGmUPnMYRRynbzZdODPiVatSpwrXAHX3+hzWwvX24+DPt+XmzS4Jp7Zi6olXbbIx5SICF7SAUtlNt2rZ+jjrWyk0pbfEY5+4LSaCtEFF09S0ZDWT0Up1NN/YG8Pxez3TOXkkW7CM5JOTaaaZ/pXSUtR5LCoOOxsJ59lM14HU/MOhyq4up+uOU2VLgKiXCAJrmz6hOMZreWojx9mKCKZO3CB3+pdO/XLVyrg5Jb2xuNFgivgfS3wiDA==";
	return GuildInfoListItemUI;
})(View)


//class ui.guild.item.GuildListItemUI extends laya.ui.View
var GuildListItemUI=(function(_super){
	function GuildListItemUI(){
		this.bg1=null;
		this.bg0=null;
		this.icon=null;
		this.txt0=null;
		this.txt1=null;
		this.txt3=null;
		this.divIcon=null;
		this.txtDiv=null;
		GuildListItemUI.__super.call(this);
	}

	__class(GuildListItemUI,'ui.guild.item.GuildListItemUI',_super);
	var __proto=GuildListItemUI.prototype;
	__proto.createChildren=function(){
		var temp=GuildListItemUI.uiView;
		GuildListItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(GuildListItemUI.uiView);
	}

	GuildListItemUI.uiView="eJzNk9tK7DAUhl9FlrdF03Zaa+82KCp4uFA2imwk06btwjapaTrWPQx4IXjlhc/gY+wX0rfYyTA9KCIDingTWDn8f74/K1NQNyWDEH4juwYLSinKCsIpXGOsMght4nsWZAzTTEHoezMLogzzGMLzaXt0r6ApG569gZBY0MzHVzoTKvX+cWrr3dUlcl1EoigEX6/xokHeYIwXVcb4WslTswf/sh2J2g2INXIsPRCYzaxPWJOPrK+Qfsran1s7G523R1pnjASHPkmPDLX26Zjlb7Sc0VwssDsxx+44VKMMiGKN1oKdWr/IyiEtzH0KUVfsJJOiTvWZhOYVW0xuczrOWdxNtndxHQsSwdWxRtYui0rr/pJIzbUikQvjurqZeJu2p2fGwrSAkrWWoTmmJs6cJQqWpHLNkyywAndAZfdUDlkPyPcCLXRaoohxxeSyTMEo6HvOHQ2g3B7qqGT8pzG918nGTjP5pP9HftfLMU72XrezWaM8yoQ8019vzWur03m1ZIC+Ca0LMBgEuIWTPsLnh6fn29uXf3cv949fG+UBRlJUIlErZ3SX4buhvun2P7P/nDyjyQ==";
	return GuildListItemUI;
})(View)


//class ui.guild.item.GuildShopListItemUI extends laya.ui.View
var GuildShopListItemUI=(function(_super){
	function GuildShopListItemUI(){
		this.iconBg=null;
		this.icon=null;
		this.itemNameText=null;
		this.starList=null;
		this.priceText=null;
		this.countText=null;
		this.soldOutMask=null;
		this.soldOutFlag=null;
		GuildShopListItemUI.__super.call(this);
	}

	__class(GuildShopListItemUI,'ui.guild.item.GuildShopListItemUI',_super);
	var __proto=GuildShopListItemUI.prototype;
	__proto.createChildren=function(){
		var temp=GuildShopListItemUI.uiView;
		GuildShopListItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(GuildShopListItemUI.uiView);
	}

	GuildShopListItemUI.uiView="eJydlF+OmzAQxu8yfUUbMIQAb23UrSpttw+tqlbVqnKIA24MRmCSbCLu0mNspV6nPceO+ReSpc2qFlGEPXz+zXxjH0DdZwwC+MTZFgzIcpkVEBwqA8KYiyUEXw9dyNuERmwQA/cQmAbsILAM2PKliiGwHduAYs1TjI9KFJiU/NuSr0uaRqZ1laURChR8z97kHMWBEKN7cCGRZcFep3QhGC6qvGQGxIxHscI9iFdVxj9hLKemmZIeZ4YzG5pjPA9l+qre/ByOyu9lw0ee8qFk98CRxTcvongNitujuO4QZSDmOUOxG7pg4lzMb6o8PdbZ0nVu5RRLbmnCPrKdwg+V/gvgz4+H379+Drax0aqVTNUHTA4C4jRvGPky51TvGEohtd4L6s6sqY0zCyl6G6jgka6bYCsFQ+BrVJkLno0XwDL9jrNQNL/hhWbcUFHqbymOEUt2PI30r7MjZkyD1qEhFewL9t2V0758bl+WPGeh4lIrbViuOC7CJZvcWVvZ6bGDSQ8UyiSRqSaKdosWpi+ne8m1WXs2fLvX9vt2zHIenjpmmxhfqFyu2bxzgjieaS2hm4fA+R8/3cVqZXrP9XMsFa9JxTkeLD3TZBLKMlUnmfh6PMnFJY5J6HguHX2bC/l7Lqt6wJE/rxUu+dzwm6fXVNuWWJT3pXpHi/VIK+5jto+pfO7FYJGTtrgd7Tm7hiHT2RnCtaCDC0rgjVTi15N5zFNWsEnPVMSy3NL2eFTVXfUIEW/JrA==";
	return GuildShopListItemUI;
})(View)


//class ui.guild.item.LineItemUI extends laya.ui.View
var LineItemUI=(function(_super){
	function LineItemUI(){
		this.list=null;
		this.titleBox=null;
		this.txtTItle=null;
		LineItemUI.__super.call(this);
	}

	__class(LineItemUI,'ui.guild.item.LineItemUI',_super);
	var __proto=LineItemUI.prototype;
	__proto.createChildren=function(){
		var temp=LineItemUI.uiView;
		LineItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.guild.item.GuildChestItem",GuildChestItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(LineItemUI.uiView);
	}

	LineItemUI.uiView="eJyFUk9L3EAU/y6v1+k2cd1/udVSZMFbRQoiZXbzTB5OMmEyqVmXXAQPFtoeeivtvYgIhR4K6rcx9mv4Jqu769ZScpo3v3/vN5mCnWQIAewQHoKAzOgsh2AKhxTaGALf63oCYqQothC0214lYByTCiHYnT5wtyi3y9wJBN01ASUEzH0k9F4axqsZ3mCG0r7lu4XDwH/KYLPgwasYczu0mCxbmSK1lDhMosNCYd6KHLZFjGv9RUtlAzWYhmigqvYqMffY0OXKDn632aG/WKI/mO9gySqccebt9J7KPkxkhMvK+QGlPG9yvijo3YikthRSK0sjxuV0hJuGWAM84b51z+Oo4t+Ck6bn0pXXEf+VH0uF3Plzf8XKd17t7uCR15YcoVrx6jdefm9RS6e3qKW020NuhjkWSy4Fbr+d1Z+Pb35/qq+/1Kcf65Pzm6uv9cX3Pxc/b39d1h9+MDTRRY7bsdFFxHL7UuV4P3ydypHCcD586HptXcC+Tu0bXoFP3uzEdi8NSZd4rJV2gZ4NOh3uhScj7R7GmoJlpKLItTTG1N7/CXvVHdjFArg=";
	return LineItemUI;
})(View)


//class ui.guild.view.GuildBoxPageUI extends laya.ui.View
var GuildBoxPageUI=(function(_super){
	function GuildBoxPageUI(){
		this.panel=null;
		this.vbox=null;
		this.tip=null;
		this.txtNick=null;
		this.btnPlayer=null;
		this.btnAddF=null;
		GuildBoxPageUI.__super.call(this);
	}

	__class(GuildBoxPageUI,'ui.guild.view.GuildBoxPageUI',_super);
	var __proto=GuildBoxPageUI.prototype;
	__proto.createChildren=function(){
		var temp=GuildBoxPageUI.uiView;
		GuildBoxPageUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(GuildBoxPageUI.uiView);
	}

	GuildBoxPageUI.uiView="eJy9U81q3DAQfhf1KhpZdpy1b9mSlEIJgS25lBBkW2uLaCUjy/vTxbeemkNvhUIhueQRCiWQt+mmfYyOHdvrJintqScx45nvT/Ia2VXOUYhOBF8gjHKj8wKF6wqjOBMyQeHbdTdyzBSXgxm0QqHj7mK0RGF9LERiM2gRfw+jOTOwkrcr80lstJRjZibnQsGHWM9mWu3Mi6b/PFcpTGVcpJkFMMd7iv9krJcP6ElDTnpu0hHPo2a2QyRVdVrhHukxkENHDZQXBFsjIwpwohCRhKUpkwXv4K3IB+iUPqn31Yyl/C+CnZGHUbHNZKcUZwBetIkU4h1/aQTAIuph0OgSTP0BtePTamDsNYseXdG9MXdA2adkl/ZIxOewYPkS0BAhDhQzXRb8TWZ0mWa98aZ5oBiEkfTN/sYgqalWdgJ6IQ/3vgLAfSNYLSjWUteMz6Yuj5I6FSZF2rjmynKDhi6OxqW1Wj3w4fuNkYB26iOrjiVbwfJvEcKzghBXXEq9OKNtkLIOplXnteWLWlNRiwr2dn0S4D+c3TpM3l1e//hy8fPr+7tPn/9BskPpVnP3kKwp+cDCfpIc/j8Dmw9X37/dbK5vNx8vUP1TnFa/AKR9Q0k=";
	return GuildBoxPageUI;
})(View)


//class ui.guild.view.GuildBuffPageUI extends laya.ui.View
var GuildBuffPageUI=(function(_super){
	function GuildBuffPageUI(){
		this.buffList=null;
		this.buffInfoList=null;
		this.buffTitle=null;
		this.moneyTitle=null;
		this.moneyCountText=null;
		GuildBuffPageUI.__super.call(this);
	}

	__class(GuildBuffPageUI,'ui.guild.view.GuildBuffPageUI',_super);
	var __proto=GuildBuffPageUI.prototype;
	__proto.createChildren=function(){
		var temp=GuildBuffPageUI.uiView;
		GuildBuffPageUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.guild.item.GuildBuffListItem",GuildBuffListItem);
		View.regComponent("ui.guild.item.BuffInfoListItemUI",BuffInfoListItemUI);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(GuildBuffPageUI.uiView);
	}

	GuildBuffPageUI.uiView="eJy9VU2Pk0AY/i/jdVL5huHYPWyaeGs1GrMxFAaYLDAEhm5r02Q9GI0Xswcv3jztZQ8eN1l/jtvVf+HwKVDc+tFICAEy7/O8zzMPL2vAVjEGJnhC8BmAIE5onAJzDc6Iw3xgiqKsQeBj4vkMmKogbCCwfRI4wHy+rmsnoeXhdvEKmAIEy+LaAEkcKD0lES/wMo7wMCMv5t4ojjxempKX+DghHBZIAqxP0KXewHspZR0VpGKLVUDGLqtDGLHoLrMAFQ0KUNZavNyAfbyiXNJqLVoDNbQ2DUMa5bwRJjaOBhWLOhRRV7GsK/uYFVkpqJGiDdB5/rzgaqM8IinrgUglhqS225cgWFgJL5hnrlsVLaZ2QoNgbCXTDtUiLd5Xupr2VWMoK8f5Jowr0AnD4a9yk2QRI2FeElInC3A6KvZvRHjNaAglwZGDk1lJUz5w6Sf3i5eRXqnXG/lqnpmf6ieRS//IgTS2bPyM7051+7TMRm2MMfgNjVtMfVuGlLUNykjbmz7S40nPhhle9m1QRKOwQesonxEW5JFjeYEJ7i4vtu/Ot+c33y7f5jJZQk/xEQ1ovv4BUjVNNpr33FIIXBqxKc95GTK7XuoWB186p7kJLMnwZk9/gloGXVbrBrnveNXr8Pb11dcvH+8+Xd1ev9p++Pz9zfv/3adS5hcZcqfPI8o3q1pf9ory44DNuVaQ4r0TEkll2vm42ZmKy2xJrEjaGRmDg0c6FJB6IKBamqEP/Gb+Rtq/A6m/DXSy+QERMmm+";
	return GuildBuffPageUI;
})(View)


//class ui.guild.view.GuildMemberPageUI extends laya.ui.View
var GuildMemberPageUI=(function(_super){
	function GuildMemberPageUI(){
		this.txtGuildName=null;
		this.lab_0=null;
		this.lab_2=null;
		this.lab_4=null;
		this.lab_3=null;
		this.lab_5=null;
		this.txtTrophy=null;
		this.txtDonate=null;
		this.txtType=null;
		this.txtMember=null;
		this.txtTag=null;
		this.lab_board=null;
		this.txtBillboard=null;
		this.btnExit=null;
		this.btnSetting=null;
		this.btnEdit=null;
		this.btnJoin=null;
		this.icon=null;
		this.btnDonate=null;
		this.lab_leavel=null;
		this.progressBar_lv=null;
		this.lab_pro=null;
		this.list=null;
		this.tip=null;
		this.tipsBg=null;
		this.btnCheck=null;
		this.btnAddFriend=null;
		this.btnPromot=null;
		this.btnDemote=null;
		this.txtName=null;
		this.btnKick=null;
		this.btnTransferGuild=null;
		GuildMemberPageUI.__super.call(this);
	}

	__class(GuildMemberPageUI,'ui.guild.view.GuildMemberPageUI',_super);
	var __proto=GuildMemberPageUI.prototype;
	__proto.createChildren=function(){
		var temp=GuildMemberPageUI.uiView;
		GuildMemberPageUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.guild.item.GuildInfoListItem",GuildInfoListItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(GuildMemberPageUI.uiView);
	}

	GuildMemberPageUI.uiView="eJzdWe1v00YY/1eQ99Wk9vns2PlGeVs33qSiQTWh6BxfkhOOL7KdNAVVKtJQt7GOTWgSoGnqXpBAY+34wDbBCv9Mk7b/xe7s2L4mTuuygtQ2VVNf7uX5Pb/fPfc8l9tSuNDGUkX6jOB5SZbaPm0HUuW2NE+csClVVMVQZKmJSaMZShVoGouyVGsS15Eqn99Oxk7Tnjh0QaqwMT32t1jnk1bcWxYXzRt6AdnYHRkMzGiwCqx0OLCgLHWRz0aEvfB8h81yCbUwGxjiHkMhXaNBk7DHIPTpTXyaupT3/cjEsK7YaTubSJZatBPgq02fdhps5jpyAzxsPOsh28VO2pj4CJRlqU69cJbc4lPA+InNf8oniFtfS9arRz+sBbmk4bEWF9dDaXFRTgHPtFADjwBWjQhwBtdkHghuEj5BjbZa1JvqkKpNEL3VJHaj1PYaUmadae43f0yGoanpApD7dmyFXgd5C8hLVwgY3vM+YQ6RdE3WyjITDgTC0ircd23dysgcLtjg9PH1mrhHkBctJk6TpwlV0eN5NJAIwUV2VckUMPhqaefHpcHay82NlcMWQka+aqbkXyQ1nwa0Hp6YQx9jMiID6JhcBl6tSf05thNKevJ0PdoXEwWSh75s5oEHAvj1+/3vnw5Wvtt+uXrcwKtKjB7ybTjUr2WIjoCZI7ZevO7/dO+9BQJweO44EP/W0APmBA9omQc2X70a/PDncfNAJP1oC6gibj3D3b/7fPPfx4PV5a0/3hy3LWDFBwRQswPVsoQD8Srr21xIfaErypgDVE03dzkA/n/6gVLEGbqFHUXZ60zMg2xYY5B1U4B8hnoozBKA8jGAPGQZGlkioGqaSDMfmwp+xuuSEJ+47LkL43o/atiNYYw3zHy6L+KWjf2M7uPAtwq0WOOKQDhURcJR43hBBmqcipZhiljTFDGi2xT5TibyCxg1OvjENHHd5JNJkf3guDVQNK9HhmFAKKCtYS9ketxX1jDGy9JnaZ76zjUftaVK6Hdwht9SBMZFoMnBtvbr9tOldwJoqgcntgZM07D2IvbSdCcMqTcClZUHHKpe1rIzSk+Q2aF3tkdCKa/oYGVNrYm9RtXuhMPCw+WunJ3As/BhdIzHzzHC5PEKchzCpqpIJ4Gs8Fcy8FzsgFnSinFHjdEiQVbAyRPek/6s587SUn/5lVALQbWAj+IIr+kTfDSLw5DEpdeomxrUazTZez0Q/NQmXRrOcWZ5ehE9XedBlD8dAR9ur73Z2lib6MPccjJOAw2oZ7WsAibXstU6UxYeqZiNwmpWFWBkOxWIcnby5WyTHH54gZ+ww/9PHCCJsaiwfKAB8uXzCSVe0S2WSqecmcZP3CMgm/7Xq/27T+J8/0DiGd6zlHfds8TeIzUquA4FAQ6DKR6AWaiespHTwNyRvFdVUfe8gDkYdSQgLHKngTulMk1vxwOBj7F3dOJkeieR0qTsW+0Oo6SQCu4qdl2MutGgJEfolixrPDGwsGFD/XAL3mJH6NgtoB/NJeK+4lNGZBBMI39UpEOVinenqUzb2bCq25VGrtSST8ev71gVlfwKVAC96JWsMtkkzgjrmtEBpuCHIUMtvxMZaep2g70EJZIgHKVCH6fCyLLVeEB3li3tuoyR2V1btRtE7QkXbVTDcxFsH7cx4qEXCtFfyb0djy66Z7w65cbNhLglGuh3vJC0eLcWdTouDkqRCkqsKGyV8kZ6KOrtY88Z4pf3uMJXYXzURvlpAt/MylHSzqZkD3Y0QYoHwjw8eUF5TFomFNYIpkeyIR4Cefu4xln+DkyZVRPAGLFk3+hsDC/gxQP+dBPXbuYF4AXsunS+CnbF4LSCGImTVlk3WHk34V2Ik1vfPuuv/bX59ufBnfUC2TaAOSafcpxzPmH0fjizB3+/5sfxk43+/XsFzFZBjtksFrZobjL1nmx+dK+/slzEWjPH2jOYGZt7Mr8fa3cerWzf+WbfSjO+P9GEbSSWlbu/LOs/WN768sXW4y8GD9d3Hr7dufOg/9vvpdJh1NDaHt+Nadh28N419AF4+JR8yO25/c8vvNwrkOgNv6iyskRP1cuC3Vd95AV17EcRugCAJFE3QZaoG+DwgG083157NpZM6yA+H28s/gd8s7Px";
	return GuildMemberPageUI;
})(View)


//class ui.guild.view.GuildShopPageUI extends laya.ui.View
var GuildShopPageUI=(function(_super){
	function GuildShopPageUI(){
		this.refreshBtn=null;
		this.refreshTypeIcon=null;
		this.refreshCountText=null;
		this.moneyTitle=null;
		this.moneyText=null;
		this.timeText=null;
		this.shopList=null;
		this.refreshTipsText=null;
		GuildShopPageUI.__super.call(this);
	}

	__class(GuildShopPageUI,'ui.guild.view.GuildShopPageUI',_super);
	var __proto=GuildShopPageUI.prototype;
	__proto.createChildren=function(){
		var temp=GuildShopPageUI.uiView;
		GuildShopPageUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		View.regComponent("modules.guild.item.GuildShopListItem",GuildShopListItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(GuildShopPageUI.uiView);
	}

	GuildShopPageUI.uiView="eJytVbFu2zAQ/Rd2FWySoi1ZW5MhDVBkiVG4KIpClmmJiEwKEpU4CTx079oPyF4UHTr0h5r2M3qkLFmWlbgoahgyKfDuPb53d75H+jbjKEBvBL9BDspylRUouEc3YqETFBDijh2UcBEnGgUjjDcOihKRLlDw7r6OPV+FMW8H36IAO2htn00iComKKyEhIC4hw7AUH+bxIJMxhBbijp/lAtIiip36i/ahN04DeXFSaq1kB5SNPAtL8GgHPIZ312EOQTlf5rxITrSJ61IpkjJcC7kQh4zGDqUOPFwDJ66VfosCcxu7nqHAdweAl4ZznsLpNmnaJ9dFn16UWeYjt2GWhjIu4eDwNBGSF3zYpUq3TEMZJSoHTtjQqHYzu2sr1gfqW0yfNGK5bkerKQSfR6olWKRWKyUNjSWX8R1QkfEi3FKpL+7SNvSUr3UHeVL5RLwG2h93oE9VKfU2VJufwIVyKnSurvipSpU5+mJMGaYhqt+DjjsSFJIvldSX4CTs4LJRHba0H6NdKmIrNl9qtNm8PyIYMwKtjU5+Q5wy/7Ca4vW8r5LgvlA49tlSi/nHjCIVLNmhEuxPejyRXERc9jYVoJLJflMxPDmGzNyqSFzm9cDBNS3WEbcZo1USH9cmQwJ+OxU65Y296Pf3h1+fvv788TFATzoXjj0yMo04V6ardF7yvwRnnrcP3i6tif38V9TKMp82V9ZixfdAEaEBxv9819ei6KLSauy6tFUnHqsJFInKtkFFFkYcRoa3Xc6qGst5xkMz3pr1zK53BeP1TbQzU/aX2+znmq+e+jPIoaVBBWvBokx5MbAdMxAQM+jLknO54Pm0gqk2nTY9e8ZyiltCjA5mm8iKfT8evzw8fv4WEDokFN6K4pVepfaIFb813/CeaazaQYaXuQhT9LyHPVPnD8woV1c=";
	return GuildShopPageUI;
})(View)


//class ui.hall.item.NButtonItemUI extends laya.ui.View
var NButtonItemUI=(function(_super){
	function NButtonItemUI(){
		this.btn=null;
		this.iconBtn=null;
		this._red=null;
		NButtonItemUI.__super.call(this);
	}

	__class(NButtonItemUI,'ui.hall.item.NButtonItemUI',_super);
	var __proto=NButtonItemUI.prototype;
	__proto.createChildren=function(){
		var temp=NButtonItemUI.uiView;
		NButtonItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(NButtonItemUI.uiView);
	}

	NButtonItemUI.uiView="eJyFjz0PgjAQhv/LzVUZxGhHEgcXRxdjTIHaXuwHoUUkhP9uwUDQmJgO7eX6PvdcC74pOFA4Ia+BQFHawgFtocbcS6C7iIDkKKTv3x2BTKLKgZ7bMXhMKu+tmWcboOuYwPN9zUgPdJiqkPJlxUPJygBIfR/WtnJ8b1ho52NfsZSr8AP+Ohw0E/xLIRoMok+BYSJm1iTD1Bm2IxPuF2070OLNbIkbU27a4loGbwLujiZUmdXamlWFC2mNyJGZxbIwArruEs4LM8t1sA==";
	return NButtonItemUI;
})(View)


//class modules.battle_apple.part.npc.MapNpc extends modules.battle.part.role.Fighter
var MapNpc=(function(_super){
	function MapNpc(msg){
		this.template=0;
		this.teamType=0;
		this.groupId=0;
		this.isFalling=0;
		this.fallPosX=0;
		this.fallPosY=0;
		this.isShow=0;
		this.CallingId=null;
		this.npcNode=null;
		this.npcSkeleton=null;
		this.actConfig=null;
		MapNpc.__super.call(this);
		this.initBaseInfo(msg);
		this._type=Fighter.NPC;
	}

	__class(MapNpc,'modules.battle_apple.part.npc.MapNpc',_super);
	var __proto=MapNpc.prototype;
	__proto.initBaseInfo=function(msg){
		this.livingId=msg.livingId;
		this.template=msg.template
		this.x=msg.x;
		this.y=msg.y;
		this.teamType=msg.teamType
		this.moveDir=msg.directionType
		this.groupId=msg.groupId
		this.isFalling=msg.isFalling
		this.fallPosX=msg.fallPosX
		this.fallPosY=msg.fallPosY
		this.isShow=msg.isShow
		this.hp=msg.hp
		this.maxHp=this.hp
		this.CallingId=msg.CallingId
		this.actConfig=NPCModel.getNpcPerformanceByNpcId(this.template).ActConfig;
	}

	__proto.initNpc=function(screenwidth,screenheight){
		this.init(screenwidth,screenheight,this.moveDir);
		this.y=screenheight-this.y;
		this.npcNode=new Sprite();
		this.npcNode.mouseEnabled=true;
		this.npcNode.mouseThrough=true;
		this.npcNode.visible=this.isShow==1;
		this.addChild(this.npcNode);
		this.npcSkeleton=new AniSkeleton(this.actConfig,"npc","idle",true,Handler.create(this,this.playEnd,null,false));
		this.npcNode.addChild(this.npcSkeleton);
		this.turnRight(this.moveDir==Fighter.DIR_RIGHT);
		this.checkAngle(true);
	}

	__proto.playEnd=function(){
		console.log("npc  playEnd");
	}

	__proto.playNpcAni=function(aniName,loop){
		this.npcSkeleton.play(aniName,loop);
	}

	__proto.changeRotation=function(rotation){
		_super.prototype.changeRotation.call(this,rotation);
		this.npcNode.rotation=rotation;
	}

	__proto.turnRight=function(turnRight){
		this.npcSkeleton.scaleX=turnRight?1.0:-1.0;
	}

	__proto.show=function(x,y,handler){
		this.npcNode.visible=true;
		this.x=x;
		this.y=y;
		if(this.isFalling==1){
			this.resetPath(new Point(this.fallPosX,this.screenheight-this.fallPosY),true,handler);
			}else{
			if(handler){
				handler.run();
			}
		}
	}

	__proto.refreshNpc=function(npcMsg){
		this.initBaseInfo(npcMsg);
		this.y=this.screenheight-this.y;
	}

	__proto.destroyFighter=function(){
		if(this.isDestroy)
			return;
		this.CallingId=null;
		this.npcNode=null;
		if(this.npcSkeleton){
			this.npcSkeleton.destroy(true);
		}
		this.npcSkeleton=null;
		this.actConfig=null;
		_super.prototype.destroyFighter.call(this);
	}

	return MapNpc;
})(Fighter)


//class ui.hall.item.StartItemUI extends laya.ui.View
var StartItemUI=(function(_super){
	function StartItemUI(){
		this.mpBoxAll=null;
		this.mpBgStar=null;
		this.mpImgStar=null;
		StartItemUI.__super.call(this);
	}

	__class(StartItemUI,'ui.hall.item.StartItemUI',_super);
	var __proto=StartItemUI.prototype;
	__proto.createChildren=function(){
		var temp=StartItemUI.uiView;
		StartItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(StartItemUI.uiView);
	}

	StartItemUI.uiView="eJyNjksLwjAQhP/LnoOKbRRy05tnQRQRCW1IQvOiVq2U/HfXYqD4QgJhJtnZbzpobkEAg40WVyAQah9OwDq46rJRwLKcgBJaquahI4FCaVMC23cpuPTtMHcDNiHQ9vdzB80IXHiNszbg9MIYDJwKbsQOx0Yz+nTb5BKQTj4BV5ZL8YKc5j1zOhuQ5LpBibsr7fCl8NZ6Nz7rY+WdbLWTo+Ak/nNXKF/3VWhy2+RMUPyh5zGS3w3oW4OV/VrhL3yMBzx3uU6BMw==";
	return StartItemUI;
})(View)


//class ui.hall.HallMarqueeViewUI extends laya.ui.View
var HallMarqueeViewUI=(function(_super){
	function HallMarqueeViewUI(){
		this._bg=null;
		this.msgTxt=null;
		HallMarqueeViewUI.__super.call(this);
	}

	__class(HallMarqueeViewUI,'ui.hall.HallMarqueeViewUI',_super);
	var __proto=HallMarqueeViewUI.prototype;
	__proto.createChildren=function(){
		var temp=HallMarqueeViewUI.uiView;
		HallMarqueeViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(HallMarqueeViewUI.uiView);
	}

	HallMarqueeViewUI.uiView="eJyFj9FLwzAQxv+X8zXo0tnC8iYi4ptg8UVkpN21CUubkqRus/R/95qtc4iwHITc77jvyzdAOHQIAt417oBB52znQQyw05ugQGQ8YdDY3mOunO1rQpU0Hk/wqZWFwc0ZKtS1CiCWycigVNrQ6GOYPV4aWeOlyZd0hNdFTdBvdUuNksbc9XptZCFpwG+7Nk71Nz47TXKwYDxl00XYHe0WDAxW0+M/21fZorm0PcSNPYgVm3Omq+za73Pchz8qaVTJOD/r8Ht2StX4Oo8LPji7xUdr7IRvluVUZw4i+TVOSLCybXijtNTxY0dbD07LKUI5q1TxwDh+xvoBZfyOZA==";
	return HallMarqueeViewUI;
})(View)


//class ui.hall.MainActivityViewUI extends laya.ui.View
var MainActivityViewUI=(function(_super){
	function MainActivityViewUI(){
		MainActivityViewUI.__super.call(this);;
	}

	__class(MainActivityViewUI,'ui.hall.MainActivityViewUI',_super);
	var __proto=MainActivityViewUI.prototype;
	__proto.createChildren=function(){
		var temp=MainActivityViewUI.uiView;
		MainActivityViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MainActivityViewUI.uiView);
	}

	MainActivityViewUI.uiView="eJyrViqpLEhVslIKy0wtV9JRKijKLyhWsqpWKs9MKclQsrKw1FHKSM1MzyhRsrI0qK0FAH/UD4k=";
	return MainActivityViewUI;
})(View)


//class ui.hall.MainBoxViewUI extends laya.ui.View
var MainBoxViewUI=(function(_super){
	function MainBoxViewUI(){
		this.itemEffect1=null;
		this.itemEffect2=null;
		this.itemEffect3=null;
		this.itemEffect4=null;
		this.boxIcon1=null;
		this.boxIcon2=null;
		this.boxIcon3=null;
		this.boxIcon4=null;
		this.boxHBg1=null;
		this.boxHBg2=null;
		this.boxHBg3=null;
		this.boxHBg4=null;
		this.boxLock1=null;
		this.boxLock2=null;
		this.boxLock3=null;
		this.boxLock4=null;
		this.moneyIcon1=null;
		this.moneyIcon2=null;
		this.moneyIcon3=null;
		this.moneyIcon4=null;
		this.boxLBg1=null;
		this.boxLBg2=null;
		this.boxLBg3=null;
		this.boxLBg4=null;
		this.timeIcon1=null;
		this.timeIcon2=null;
		this.timeIcon3=null;
		this.timeIcon4=null;
		this.noBoxIcon01=null;
		this.noBoxIcon02=null;
		this.noBoxIcon03=null;
		this.noBoxIcon04=null;
		this.lockTimesBox1=null;
		this.lockTimesBox2=null;
		this.lockTimesBox3=null;
		this.lockTimesBox4=null;
		this.needMoneyBox1=null;
		this.needMoneyBox2=null;
		this.needMoneyBox3=null;
		this.needMoneyBox4=null;
		this.needTimes1=null;
		this.needTimes2=null;
		this.needTimes3=null;
		this.needTimes4=null;
		this.nameTxt2Box1=null;
		this.nameTxt2Box2=null;
		this.nameTxt2Box3=null;
		this.nameTxt2Box4=null;
		this.noBoxItem1=null;
		this.noBoxItem2=null;
		this.noBoxItem3=null;
		this.noBoxItem4=null;
		MainBoxViewUI.__super.call(this);
	}

	__class(MainBoxViewUI,'ui.hall.MainBoxViewUI',_super);
	var __proto=MainBoxViewUI.prototype;
	__proto.createChildren=function(){
		var temp=MainBoxViewUI.uiView;
		MainBoxViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MainBoxViewUI.uiView);
	}

	MainBoxViewUI.uiView="eJzVWctum0AU/ZVqukUpM8PLLBOlTSRn1ahqVFUVxmNABsYypHESeVepq6rqB1TqruomUrep+jdto/xFZ4yNMR6wSUhssogCgfPg3nNnsC9BfD4gwASvPHIGJDAY0kEEzEtw5nVjF5iKIUvAJZ7jxsCESB1LwHY9vwvMN5ezWw8DyyHZe8+BiaEERsBkN0d9L2QXuZbvPzv13nVGHQftDEIHjMdSCrFLRzmA5H4VSTMlOjvz3hqyi72YBPu9HrFjCObidFgOKE8AoaqWIqLKiEhVShFxZUS8QqNSiCiqhJ6AtmQBZoeODm0a8se4VCY4KZIEQivg0LZLopgdBvQ0Ivuh1fEJa4Ke5Uckq0YCVmi7dHgyqWDy92tmbEddUyc0WsVCUQWhNWpCZZrwZjRhwyjWpDyyJh5TntZMj6GMpINdR9Bi7lRP5F2QF0OPdROQJahK/FdGF1LWZIcqLKQXNE7d9AtzIEcv6JG66bGqFdIL2qE+ejUpvZahbFO7Lyi4x0cNXpr9JahQ1XOwgkJWh0WanIMVFKg6LNZQDlbw4CvA8oRztfO+QunjCGhIznOz26YBO81JeiR0LtxTK3S61rTQaUX1NWmhAst40UPxItUo48UPxYt1XMar1M47Da5iiHPbFg5Nv/ahiQvpBVmrm75waLaFQ7Nu+sKh2RYOzTvRL+/yNCUdmbN+S7ljLyCzWKd4KLMys9W4eG0u5IIaKiFD9ZIhDZeQ5cvKB2I+O/fXgDW1REO+tvfSIOoviCcqtHRVDOlusjWTRaHuuxZda0mY4kIRsCiuVYGRCFgUxKrAWNOXgUUREwK3rQ7x8xFOCs2ndoLrswX3mBU4YvD8IcdkFPOEyqYss8MeDeOXLLj86SVH7J9Hnj2kEe3FT06sA+Kxy2zqU4729Pnkh52xfM/hEn3Si9dVBcWy0IZlIV0TycIbloX1lkiWsilZ0x0B33xOR0imewnpHvFNwWKXaVxdFA9pn+zNyGVFtQ0tPc8ef2a8tLJm+Bbvgc1AXVnhBjXIDWrBFW5wg9wosrbCjdIEN0sTmTuYhHmLxnGqaYtmcappiwZxqmljU7iVvFXPX48gTDdy/DOs41GMFofwzfX3218fbj9++Xv19ebqpzAne4U5wQvG7pYTm4QxGa5rDSKYMacJzKHmmkPYWGEON9dc9sURQl1gTmmiuemXLsK6TXbtMQmyeftx/e/b5z+/P93HEpIfwVJR0mamUBNNLSbMWDKFm2gKZz4RgvM399SUsmWm3o7/AzIqB8o=";
	return MainBoxViewUI;
})(View)


//class ui.hall.MainModeChooseViewUI extends laya.ui.View
var MainModeChooseViewUI=(function(_super){
	function MainModeChooseViewUI(){
		this.modelList=null;
		this.btnBreak=null;
		MainModeChooseViewUI.__super.call(this);
	}

	__class(MainModeChooseViewUI,'ui.hall.MainModeChooseViewUI',_super);
	var __proto=MainModeChooseViewUI.prototype;
	__proto.createChildren=function(){
		var temp=MainModeChooseViewUI.uiView;
		MainModeChooseViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.hall.item.ModeChooseItemUI",ModeChooseItemUI);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MainModeChooseViewUI.uiView);
	}

	MainModeChooseViewUI.uiView="eJxtj8tOwzAQRf9l1lbSkCilXrarStBdERJCyCTTeFTHtvygVFH+HSeipSCW8zj36gwQzhaBwxPhCRhYZ6wHPsCJ2iCBF0VZM5BInQzA62oxMmgkqRb4y3BhH8iHW/acuHLJ4BP4XcGuUYvVisGHcInoTYvqG/NWNPg83Rk4tChCGqqf0rIu/yt9TBEbaYzHbcD+tl6LfnpwqFt06eCiDjSvImVSKJVRIrLfAfstjOPryK75u3UMweg/XtX9rLWsLybvQa8diuMkciSdNkroLooO840kjR7zSbaZi/JIbweZWd3NZV85FXsj";
	return MainModeChooseViewUI;
})(View)


//class ui.invitepay.InvitePayReceiveViewUI extends laya.ui.View
var InvitePayReceiveViewUI=(function(_super){
	function InvitePayReceiveViewUI(){
		this.maskBg=null;
		this.btnClose=null;
		this.icon=null;
		this.imgHead=null;
		this.txtInfo=null;
		this.txtCost=null;
		this.txtTitle0=null;
		this.txtName=null;
		this.txtPage=null;
		this.btnCancel=null;
		this.btnConfirm=null;
		this.btnPrev=null;
		this.btnNext=null;
		InvitePayReceiveViewUI.__super.call(this);
	}

	__class(InvitePayReceiveViewUI,'ui.invitepay.InvitePayReceiveViewUI',_super);
	var __proto=InvitePayReceiveViewUI.prototype;
	__proto.createChildren=function(){
		var temp=InvitePayReceiveViewUI.uiView;
		InvitePayReceiveViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("HTMLDivElement",HTMLDivElement);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(InvitePayReceiveViewUI.uiView);
	}

	InvitePayReceiveViewUI.uiView="eJy1Vt+r2zYU/lcu2kNh+Da2bNmO0xXWu7FbaC+FlW1ljKLYsiOuLRlZSZOFC13ftpeNPe1hj2PsZewHhdH13ylt+l9Msh3buUmuU7gLwViydL7vfOdI5yyBXOQEBOAzSp4AA+SC5wUIluAJjeQEBJZluwaYEJpMJAhcx7wwQDihaQSCL5frvXcznJDu5gUITAPMy+eGoRkWan2Gi/M7idpQnFOmxiHPMs4GOM0n+GbO9Jcu4oVxJZJloRILQrdBc9Fww/pgSh9LWkzo+RSz5BKGY/diQNOtMFyvwUCev4XBCA0Jq+0X9GvyiaBKKmD5BnQMCA3L6wBDaPU656+B/Q6wswU8p7iC7Ro8uzOVkrPLJlEVG+ihdUDGkp2kvCBgy+64tPA4UbKNae1XisckVWtAH3kH1eT9Th6YqAGhbEYlyfFCIxWLxTjZVs40VHj1o6Ob3SsbhMMS2XacNifc3cByvgsXmsb6301Htw/Ztit1kdVmo3Z/J3J+OLLfm6O2VyOjFtlrzhwNy0ToxdE7MAsnXDxSx/cmWo++KEe9uruw0t1rz4meqjlkySnB0UFCw0NpnD68f+8jOvs4JRlh8jKfOhoO1Hy4iD4XOAeBFFPS8HOshqCcy7ss5soIZYwIbVrN3ipyzI4KuUjJBzdizuSxpq9yLJ+PYhyS4ENBcToa8zQKYpwWZEQlTmlYD0KechG8F8fINs3RjAhJQ5weqxUJCzIaRSm5cXtpXtwaaJzb+9Ccd0LzQ4TgXrS3z56u/vjn9bPfXr38afX8xer5769e/Lm01hS6R03pp0l8qjgoOZ1qpEQpWaiFJZ4a14jg8NC4w3cMzQkv5IGhuVaxfn66+vWb1Xd/KaVqgXS0rgXZHcex6Y8KKfi52qz2Vq8n1Wfo+KYV7c2Zaw/YvfJmv1QubK860sP2SNsW6sTlIZUp0YdXkrlGev39D0dvfvm3W2GtLin7ClI49lR9UjOlq7oQqcwhopeljaomwDWdDrMznJGW15u/v33748v3LX3/tCprVHOIVDVv5pVue0S8T0PBCx7Lo0f4lNAuc0giHMe9RB3kV3La3dR+UF2lNVFzALc5Ys91yytyN0e4X9O4/IH9V+juPsHxqrsc6brS9gnKSOnUZu+mqhkXqrUiY5pstQk7WsazndWjkkbXjtp6qkxO1cLByYQyUpDBRv2chzXUVZXiq4Md9TYd5SymItvlaSJI0+T9/14m2TV5abbNWOPlA0FmYG9DdmBHuTZt+3bH9JlO5qtNq6/qWiPKiWNL+/AfTFsCsw==";
	return InvitePayReceiveViewUI;
})(View)


//class ui.invitepay.InvitePaySendViewUI extends laya.ui.View
var InvitePaySendViewUI=(function(_super){
	function InvitePaySendViewUI(){
		this.maskBg=null;
		this.btnClose=null;
		this.icon=null;
		this.txtBuy=null;
		this.txtTitle0=null;
		this.txtTitle1=null;
		this.btnCancel=null;
		this.btnInvite=null;
		this.btnPay=null;
		InvitePaySendViewUI.__super.call(this);
	}

	__class(InvitePaySendViewUI,'ui.invitepay.InvitePaySendViewUI',_super);
	var __proto=InvitePaySendViewUI.prototype;
	__proto.createChildren=function(){
		var temp=InvitePaySendViewUI.uiView;
		InvitePaySendViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("HTMLDivElement",HTMLDivElement);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(InvitePaySendViewUI.uiView);
	}

	InvitePaySendViewUI.uiView="eJytVclu00AYfpVqOPTiNhkvseuUSrQgqFQqJCoWoaoa22N7lMnY2JONKBJHbvQGNy6IG4IDQgLxOFB64xWYGTups9AEqBRF+eOZ/1v+xUPABykGLnhAcA9oIM2SNAfuEPRIwGPgQmg0NBBjEsUcuA2zPtKAHxMaAPfJcHx3v40iXL08AG5dA331PZWoizJxvo3y1m4kLuQtwkTsJ+12wmqIpjHaTJl8UkUcaZciQctSWLppT2WsdcgJJ3lMWh3EIpV3WSrd3CpSORfELR3OpWWY+JiVVHPyDN/OiHAEQEfTTU3XNWhXNECrsRRYL4G3rDmwPkFsjv3hbofzhM1a4Tgl/4nXHmd7NMkxmMvrqQwnkXDHI6UWijxMxZnlTjmGQjJsOHFKmlZiENYlHKdooIqQetG8V3pdG38qXjlLy23oBbIJL5DtiVziK1PG6eQDxPw4yR6LZty0xtEjFVWh7hzdPbhJurcobmPG59SaBWZDYPeSLHiYoRS4POvgCQfDcMYkeJ/vdgYiB2EMZzKz+HM7TxFby/mA4uvrYcL4hjRDtFzab4bIx+6NjCDa9BIauCGiOW4Sjijxy8BPaJK51xzfsvR6s4szTnxEN8SJiLltEgQUr++cf3r//cvHYX109vnF+fNX2zWJuTOEo6sBb3hhWHeaOc+Slrgs7hY/94rHuunUYfAnbkN9VPKp1McQLSPp3Bds5PgVkXBL8REHFbKIS+FTfXmgmnVmAmy76Es5CePKQKtSmSPCKZYtx3FfIp29PF37+fZrhZQJq6SMS0ih0IaWzKWkytkSvYOzpSwNCaH6yZxlBivMXn/4cfquqOmvb2/Af1i1eF2YZmlWQ84PyYlHxWFV8ur6ECOjFExvazHYSSYWK/ZINLs9NBCQHIlsQTEki14ah4vXiiIkx7ZEowKiIw7W9mLCcI5rU6vlab+EvmzIj1c2woTVvbmvkBYJ92gHz23Mv9XorKgxHoThlaps2FWV99BgkcQow5M33L9rtFatY7CSwuPRbzyey9E=";
	return InvitePaySendViewUI;
})(View)


//class ui.levelBox.items.LevelBoxItemUI extends laya.ui.View
var LevelBoxItemUI=(function(_super){
	function LevelBoxItemUI(){
		this.buyBtn=null;
		this.moneyTypeIcon=null;
		this.origText=null;
		this.lineText=null;
		this.notTitleText=null;
		this.nowText=null;
		this.notOpenBtnText=null;
		this.titleText_2=null;
		this.levelText=null;
		this.titleText_1=null;
		this.offText=null;
		this.hideTipsText=null;
		this.boxImg=null;
		this.list=null;
		this.isBuyFlagImg=null;
		this.lockImg=null;
		LevelBoxItemUI.__super.call(this);
	}

	__class(LevelBoxItemUI,'ui.levelBox.items.LevelBoxItemUI',_super);
	var __proto=LevelBoxItemUI.prototype;
	__proto.createChildren=function(){
		var temp=LevelBoxItemUI.uiView;
		LevelBoxItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.levelBox.items.RewardItemUI",RewardItemUI$1);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(LevelBoxItemUI.uiView);
	}

	LevelBoxItemUI.uiView="eJy1VluL00AU/isyvoZ2JmnStG928VLQFbSKi0iZppN02DRTk4ltXRYWYR8UER98WMQXYUEQRd+87OKv6Xb/hpOkubVpuxdNoGUmM9/5znfOmTM7gI8HBNTBQ0qGQAIDlw08UN8BQ9rlPVBXkCKBHqFWj4N6RdV3JWD0qN0F9cc78dZmH1sku3cs9klgBOpQyuF429QR623yjNgdNir7tN2xSgPHAlkbFbGQPic3XSqsgAqUZFlCuvgFu7vSSqOVWmgVVQtNUYM5HUsO7a1DgiGQLIwXkn56NhRZi2QQ7ItgTIsvwGw2fM6ZM+8Y1CMgVZPAM+yKhR1/3ODBugJg7NjUj6DPGC40U06N4fvMIeOW2NA0WMaKwfriS9kifW+B+m3cIfa8AmqIG8R0lghqYoK51GqRERdbePBX13RdTxNBRhIwmcPvi1wIQhGNxL5rLsWBHYPZLMC52sWaAhUxg21qRVqYfC01JC+nZlOH5KiBtngyWaro/5ecXI3igbSEXUWO2TmMtyi35xievvk+OfoRhIq7bJtsxASgoepQTuYFUMYNmHMDLnfDNE0I4bndiMKPNFjoxjAffu0y3FeEYBn3J2vYK7WofNVqwl6GMBOFuwPiiCLMx2H6/sX0w+eT473puz+L0RCY4r2sR9dR8GY8MojDibs+HnKU9KiWuoRgcqbwOKvaciavXv6aHB+cHh6fvN7PVICsL0mdO9RwmcdMfmUL3yI0SxtrVaSevxbQLIugkpKWkzQKD758CNTT35+yxZo/SbQLUT2nwpUiqqm+KCU7Odqffj2c/Nybfvko/WuB3RBrHenarNuhhHQ1SXNmmnlxa9NXB4t5bRoQVlAmr+XUEzWvv7KyUsUjZjos6Fnc9cmFIzB394i86dEuadGBl3cJBQkjKvbk7TewtBy1VbRh/oApoFrUdasoZKqnTZ2Nmn2roKl3MBtR7Fjtyuy65BnYJlvCy5I+GzwKBzl1qMfnxdHjWkqPtJqWtr1wgzfARgAXLIrF0LSiq8Q9MsRut8lJP2vHJU6XuK1oSTQQn13f4bQfTPm0FDrWYKMS5cFVIsV50Jw7mDcLL3qwmjaWiDv1Gv74ho2tvIBCM1/sL2/0REv3SDl7TRpb/Zma2DF6zA3lVONRqKe6LoQo7tRKwsRmxnZxFIVNz2czm5aLx1GKBw7/Bdf6ots=";
	return LevelBoxItemUI;
})(View)


//class ui.login.LoginViewUI extends laya.ui.View
var LoginViewUI=(function(_super){
	function LoginViewUI(){
		this.bg=null;
		this.logo=null;
		this.box=null;
		this.btn_enter=null;
		this.txt_nickName=null;
		LoginViewUI.__super.call(this);
	}

	__class(LoginViewUI,'ui.login.LoginViewUI',_super);
	var __proto=LoginViewUI.prototype;
	__proto.createChildren=function(){
		var temp=LoginViewUI.uiView;
		LoginViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(LoginViewUI.uiView);
	}

	LoginViewUI.uiView="eJyNkcFugkAQhl+l2V6JClKr3NQYY9JwadNL05gVp7AVdjcwVKzh3Tu7FKXWpIWEsJOZ7+MfjgwPGljAngXsmcN0rnTBgiPbiy0mLHCHo4HDEhBxgiyYDOgQ8SiBKTWxjcCMa1ZTLRHplgUvxxa3yngMXd6BBTRb2ecP9gfPDSqm5mInJL2nKhayP1v23rWpduR17ZwM4TWFN5pYiT9swQRTHTSXcUlj/XkiJBTQb1ylWD9QX09LI8xUWcBC8k0KlAnzErremaoupKPxuJHen7P53jmaHWhTeAP/2r7CWYmo5AXZHXqW7HVoKNcgEXITCjlCWGbU+I+EG2uwGbt5nqDCldQl/vG3OomwwrUU0S7kGZx3G6ksMx4UuvjeZCE+YZkLSsrcseP6juc6nt+IMo1zlSrDu43sdapTaWEi3shG0O7uznfYm5L4SFizlOZE3dNc8JQao19AnorYflyzs7p+pfsLeiXuMw==";
	return LoginViewUI;
})(View)


//class ui.activity.view.login.ActivityLoginViewUI extends laya.ui.View
var ActivityLoginViewUI=(function(_super){
	function ActivityLoginViewUI(){
		this._list=null;
		this._t2=null;
		this._t1=null;
		this.imgTop=null;
		ActivityLoginViewUI.__super.call(this);
	}

	__class(ActivityLoginViewUI,'ui.activity.view.login.ActivityLoginViewUI',_super);
	var __proto=ActivityLoginViewUI.prototype;
	__proto.createChildren=function(){
		var temp=ActivityLoginViewUI.uiView;
		ActivityLoginViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.activity.item.login.ActivityLogin2ItemUI",ActivityLogin2ItemUI);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ActivityLoginViewUI.uiView);
	}

	ActivityLoginViewUI.uiView="eJzVVctu00AU/ZVo2Bo/xrEdewfdEKmw4SEqhCLbmdi3dTyWPU4ToqzYVQI2QMRDYgMSrBCigooCX4NbWPELjO3YSdNIbJAsNpbveM459x7P3DtFbBIRZKFbQPaRgKKYRgmypmgf+sxHlqHKAvIJeD5DlqboMwG5PgR9ZN2ZVtDu0PbIKnaCLI4aF89kD0K+x04SwhKJkTGLUyLZLoMRsImUQm8X7NALoOd44m7kodlMqJkv0/Eab8csiHUsVBnqMl8a2THf3gsgYWiZr2qam/K9tBDfph6EuMvIcE1E0QsRzEVGkIATcFSetoDiNGQwzElSEKsiROAUYpCziee5b3bPlPR3ca0QVwyzQXVVNRpRL41vm3oT6lhpl9arjViPFbU8dmanGfmF+dq/q/7uSgLbtkOCNU1jUXHbqK+zKuP6OjPM9+ctgwcnh8fZwduTl69+zQ9Pnx1n3578OLqfvX6XPfiYPXr/8+Hn7Pv89MVR9uVx9uZpdvCBIxMW0z2yRQOas13oYNWV+/U6l112CsxrH9CQXYd7+Qe5jDjqKrgxTeiAtXbsKwQ42q34Bh2iOjpfcWjeX0qn7ND1abzDW5+oVdHtKgrAy3uhS0JG4jN/Z5M5bVyao8kr5uhLc5Rz5sw/cXN+f32OZUUXDVHRWhdbi3eM/y9Drm0aKkrZ/BVdq1yAoXeDRqgeMwEfJSkHSls+hCRZGTTFOZUYsICIUegVh/MPFJtgyQ==";
	return ActivityLoginViewUI;
})(View)


//class ui.mulitpveresult.MulitPveResultLoseViewUI extends laya.ui.View
var MulitPveResultLoseViewUI=(function(_super){
	function MulitPveResultLoseViewUI(){
		this.imgUp0=null;
		this.imgUp1=null;
		this.imgUp2=null;
		this.btnConfirm=null;
		this.txtUp0=null;
		this.txtUp1=null;
		this.txtUp2=null;
		this.btnShowAD=null;
		this.moneyIcon=null;
		this.moneyValue=null;
		this.txtReward=null;
		MulitPveResultLoseViewUI.__super.call(this);
	}

	__class(MulitPveResultLoseViewUI,'ui.mulitpveresult.MulitPveResultLoseViewUI',_super);
	var __proto=MulitPveResultLoseViewUI.prototype;
	__proto.createChildren=function(){
		var temp=MulitPveResultLoseViewUI.uiView;
		MulitPveResultLoseViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MulitPveResultLoseViewUI.uiView);
	}

	MulitPveResultLoseViewUI.uiView="eJzNVstu00AU/RU0bN10xq/Y3rWhhUrQBRVVK1RFE3tiT2PPGHvctKmyRiC6Zc8CsWbL/1T9DcavxC4OSaFCxFKia1/fc+6dc2ZyDcRVTIADjimZAgXECY9T4FyDKfVEAByENFMBAaF+IIBj6nCuADegoQect9f1uwcR9knz5SvgQAVcAscwLQWkE8pkVnxBEpJmodjO6FAGwxH1hyN/CNVezHwwnyuPW1DmuTgkJ8DZQuuKqxoqymsa7C7vYX6eDdMIh6GE2IhwXdOA9qPXNO3H5KlVvcvfC5zINBr5b2IIuiEmmMaYpgFh53SLupw9CMVAagsFrUDxCPPPqShw/OGDYUy73Yy6AsbNy6dkgrshDnczITi7B6JbegliLXoZCTbgbEyTaAnk8ijiLEfxE0JYJcoQj0gon4IuJx129mQVaP3+onKImZ/JxO1BQBlJyXarp3cZ8agcmiCXogLFzA14cipd1DPq6KSI5vOzZr9d+AhWS2egTRikAR1hOqNNE0pk1NOWjiyC35FaUnpZzKvNSNPKkWjLBRCXopRs3rWMb2++3H34dHvz/u7HN3l3zJk4ojNZUNXLSOa8om7CUz4WT07xC0JlmstDnld7Oi4+4M9oGSZq0UL/B62+3p6W+u9orfKRWhDTTSnt+sCxtIanjgI+3XnWtlQu8VGYkVpfkufzhEobAajoUMm/chx6wYXUlmrn4ioiSctGeVQfZ4a9sQeRWTC1rQ096E9mFT+GI1Kklwuzmei7KGyVLkRd+8ukDZbvZeu3yrIlBK3F8LWFQGRhcnXgFkv2C9xY7pmzIJMD8PA9l8OevXR5EdTD1tR1Oq0J5f84KkK60SJ0jOW6L1Sr5megSPiEDGohor2+tbsH6vsyp0EArhD2TkJx2JTz/mB/H+YiwiH1i7UmYwHW0reqQ6GDvfTbazLFidew3NfPtx+/g79pAT68hTN5/QRsQjFD";
	return MulitPveResultLoseViewUI;
})(View)


//class ui.mulitpveresult.MulitPveResultWinViewUI extends laya.ui.View
var MulitPveResultWinViewUI=(function(_super){
	function MulitPveResultWinViewUI(){
		this.listReward=null;
		this.imgWin=null;
		this.btnBack=null;
		MulitPveResultWinViewUI.__super.call(this);
	}

	__class(MulitPveResultWinViewUI,'ui.mulitpveresult.MulitPveResultWinViewUI',_super);
	var __proto=MulitPveResultWinViewUI.prototype;
	__proto.createChildren=function(){
		var temp=MulitPveResultWinViewUI.uiView;
		MulitPveResultWinViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.mulitpveresult.items.MulitPveResultItemUI",MulitPveResultItemUI);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MulitPveResultWinViewUI.uiView);
	}

	MulitPveResultWinViewUI.uiView="eJytkU1vgkAQhv/LnCkiChqO9mTSmsb0w6ZpyALTZeOykGXxI8b/3hFF0XLw0HCA2Z1533kfdmC2BUIA7wLXYEGh86KEYAdrkZgUgn5/4FuQouCpgcAfOnsL4lTIBIKvXTM7zRjH9vAWAseCDQSeP7agXApFXcUKNZaVNL1KhFSEkeBhxEPHtQvFYb+3/leQ+mImcQHBQ78t/iRKc6M9cPxafTgglxXT1CWpa45rppODUMHig5A/tEBjgcx8Eprmmy7cLizPlRTmZYXzesmpwaxtq1ElqF+PrceCrhXLrmpdKSPqo0rY2UHwnNoWpFjaf13epgTzu5V41sVz7J+Aek1kkfEPAnvmK5niFQ32HlOhsMTeFfAyRcWlOKFmKk5zTVQc22uqRV210c8mlTG5utnE893Lvz2uEhk1YfHyskucZ1muDr5cI6qTq2QRSrqFLvydqd1RbTUa35nyh6mUXgY35o6k3/T8AhvxFY4=";
	return MulitPveResultWinViewUI;
})(View)


//class ui.mulitpve.MulitPveSelectViewUI extends laya.ui.View
var MulitPveSelectViewUI=(function(_super){
	function MulitPveSelectViewUI(){
		this.btnMode=null;
		this.listReward=null;
		this.listStage=null;
		this.txtName=null;
		this.txtDesc=null;
		this.txtCount=null;
		this.txtTitle1=null;
		this.txtMode=null;
		this.btnCreate=null;
		this.topBar=null;
		this.boxMode=null;
		this.imgModeBg=null;
		this.listMode=null;
		this.btnBuyCount=null;
		MulitPveSelectViewUI.__super.call(this);
	}

	__class(MulitPveSelectViewUI,'ui.mulitpve.MulitPveSelectViewUI',_super);
	var __proto=MulitPveSelectViewUI.prototype;
	__proto.createChildren=function(){
		var temp=MulitPveSelectViewUI.uiView;
		MulitPveSelectViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.mulitpve.items.MulitPveItemUI",MulitPveItemUI);
		View.regComponent("ui.mulitpve.items.MulitPveStageItemUI",MulitPveStageItemUI);
		View.regComponent("modules.common.TopBar",TopBar);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MulitPveSelectViewUI.uiView);
	}

	MulitPveSelectViewUI.uiView="eJzNV01v40QY/isrc/UmHn/FyY0WBJV2K7Qt7Faoqib2xJ7E8Vj2uE1arbQ3kECshLRILCcuHBEXLoiPX9PCnvgLzIftjBPHSRcJEUWWP2bmed6Ped53bjS6TJE20j7B6ErTtTQjaa6NbrQrHNBIGwFguboWIRxGVBu5tvFc1/wIx4E2+vSmmns0hyFSJy+1kaFrC3FtLJTPcMImzIsY0/QS5ShGPu0X+GKMwwD3pmmoNdGe650oniVggFnjWG4XzPWYoaQJR8nxNfogw8wQzdAtoLOLqwMF3rG9nfCugLc8owNzvhhPL5akELi7VjQ9RyxpA6c2yeXvti6fR6RY4jazbN3Vbd1WTNptkekNBL5jK6Fj3unCL7JitokOPN00dHFVGdj7MhiaCgPT/g8ZOMAqY2CtGBhdDJJgHBpgkwGDdwUHV01rc18CDrBXBNyuHBMEzFYC8m9vJXBQUEqSdQamzGyXB+ESZmzcmCaPScCp5hRSdFzMGakOSosplRnfIhhP2Jg1xIdDAfgQGIrTHQaQoSRA2amcGGE+L8YJeloOUfYrE4EJjuNDEhNO+J3JxGA/tuXOFXMf4Xwd2nIktu2BytiYjXqCrmAWcHtT6KNnPAScTYogPRPA8p59sNpsfMw98tElOqJorgImcM4/S7PYh6xIKBavCtyr3NjDbFbeU9f4+Gi3JUMpHjx4lRxajmrTCZXZdnniZySOD2B2IuPnk/mcJP3LXLyvEkkE8/0EjmMGSLMCKUarngeDLg8I0HU3NMJaO+NtnFMvv+Gh41Z9KZ1kW2advTFMwoIN7R9GLLVy1G8RmaWfbyh4J4AHwH0Apstguh+A5XqlPnn3AZglUbAB8AiOUby2PuDllG9+ayU/plMLAV3QYx4mXaNowaKv3b76+fbrV39+9cXtd78JecjIDNW7cOCw8ojq94y2qsVsy5KEnjDFYnYZ8omnDmZ5mJMJfXAGP0SYzfZXu5r/2Jsx4ekmsxLGOBRpjBLKEmenhU7pQZPVmiuSBU8zmFZrVVWXj6ktfg/l/sriu5cv//rjp7tvPrv7/vPN+79//VJRW2BaqpHmXkYOfAuZxk47zKEtI2U4CtdDwnZNTXY43AiJYdgW8JSQmA2GXs3w3QzDWOVlGExUuSNg4kckYzJg9Jx7u98x7dL9Ku1TTGMEVk5+8/r3219+2Ewo17aCvdh3JhGy4WBvoo4JFKJlGaxy4dsf37x4vUkTWI5njP8dTWeIAqOZBsft9dqWHcNwuGobTU6+rt2HGZNtsQ0bgs90IcwQStqaYtYC8gsvuMI3I01J64HdJvmteiWr6/3U0J9OKjVUFf2UpKxmbTtqlBGqxqyKx5wERYzynjS6V67S6ILIYmNvDUqV5bHHORZFcALjHNVuJQuRC3udiaqoWINqOp6HfPpBqHW0URSneUtry44q5V+JiQka/X1LgwBkW9foCaqujnc5ZyJN6ybHVut9m5Vrbqszz9X3LPB1JXDalueHUlbe/dk2kPW4lMtL90ly3Qibca+zqVyLNxvGfiFuOfYKltt75AIm1xFJQtrRujdPL0Jt0wgK5W1ujv1sAf8jW3aer6VyDLrOGSEpOHQtFuc7NN1q2rNS8Qd7y3jpTVYKKoB6B3pvLfItVfR8zZzWZtCQ8jr0Vu0szHNE8z43jXU0fR517DOxZ5/j+CJl8ouqGPkw5pve6PFWTDw9q55kiT+rSrxS8HfXIwvI5HHtoVKDDopl1ZtsDecUwwiScVFlUV16uDv+ATk7/Yw=";
	return MulitPveSelectViewUI;
})(View)


//class ui.mysteryShop.items.MysteryShopItemUI extends laya.ui.View
var MysteryShopItemUI=(function(_super){
	function MysteryShopItemUI(){
		this.iconBg=null;
		this.icon=null;
		this.itemNameText=null;
		this.starList=null;
		this.hotImg=null;
		this.offBg=null;
		this.priceTypeIcon=null;
		this.priceText=null;
		this.offText=null;
		this.countText=null;
		this.soldOutMask=null;
		this.soldOutFlag=null;
		MysteryShopItemUI.__super.call(this);
	}

	__class(MysteryShopItemUI,'ui.mysteryShop.items.MysteryShopItemUI',_super);
	var __proto=MysteryShopItemUI.prototype;
	__proto.createChildren=function(){
		var temp=MysteryShopItemUI.uiView;
		MysteryShopItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MysteryShopItemUI.uiView);
	}

	MysteryShopItemUI.uiView="eJydVVuO0zAU3Yv5jaaO46Zp/qBiUKVh+GCEQAghN7lJTJM4Spw+1Q2wAj5ZBkhsh1kHdl5NO+20wkqbJvY99xzfc90tkusMkIs+cFgiA2W5yArkbncG8iIe+8j9vG2XTBMWQm8NWiPXNNCq+l5yX0bIJY5joGLOU7U+WRcS8nURiWxQ8q8+n5csDbF5k6WhgklEWcDrlM1iUGlkXoKBIuBhJBUg0TB8A29yriYRIUZ3mWi3M54nNa5YWbijNaIGWrBcreeeSF/p9GdIMvGtrHmShmfLaYwPKJnUaK+LhBTrihDtCNl2n1Avi0P7YHdsBvFpMLMnz6RWBychuWcJPMBKqkCpby56/Pnr75/fvTQ6OBCpfK8EKUhaP6mVL3POdEZPxELjvWD2yBxa6s1MxF2dWMxDvXsxBPJA/a1CmcQ8O+ZsV5ydTnUhWX7HC01xweJShzI1ztZlxdNQf5qaFBGAZlsFeCyGT8jFN7R5+Ng8+DwHT3Kh8RaQS64mL9YKV0yJ6bRUIyGnyXnHqOmK1LW44xZXBMEzRhxuIrgKd9TagXR20D/rHFnOPXhQwdPaZU0uTySJSHWaANJwE2m/++zI7xa55MTRsE492vf/mB6m7rvQwrqDZC7mMGndRaiDTR+175FL/8ej9iwIsHOtR09JMWspRBu1kUJpr1KH7TR8/P4DPdFiWiPs2T0tZK9FN+1eizbXOS1BNc5o8SBVJrmoxrEas3ViHNyK8USZygM5Yz2eqLEJxYSdrkxbi6Yy5Ao1rYK8Qrh4glf88eHfSnNyqG15V8q3rJifbR7VO5uIiSNDm7q4V5zg96cY2bTeUmwdEbmNWa+LY9VJpYoeTCKeQgGDI2bqXi5Zc47tdl92/wAWVFtJ";
	return MysteryShopItemUI;
})(View)


//class ui.player.widget.components.bottom.ButtonUI extends laya.ui.View
var ButtonUI=(function(_super){
	function ButtonUI(){
		this.btn=null;
		ButtonUI.__super.call(this);
	}

	__class(ButtonUI,'ui.player.widget.components.bottom.ButtonUI',_super);
	var __proto=ButtonUI.prototype;
	__proto.createChildren=function(){
		var temp=ButtonUI.uiView;
		ButtonUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ButtonUI.uiView);
	}

	ButtonUI.uiView="eJx1jzFuwkAQRe/y065I2BAitiORUtIg0UQI2bDgUYZdy14wxnJBxQ2gzgEijsBlEs7BArKEi1Sjr3nzZqaAy2MNhQHpDAJxYuMUqkBGExdBNWVLYEkpheypacCpFog0zSIH1ZKlwDginkB9FpWp97Zwzpp7WQ4lmwIrqLYUdXWQ+JHQXfD0i4wPYzufW/O4oFGumW02ko3YzHyfg1Bzn9b6ZrvGD2v8IegmFHCFvFu2id+Lh87ry/NTR/xTK96Tp93272f/e/w+bQ6oPVgOyzOhZl1Q";
	return ButtonUI;
})(View)


//class ui.player.widget.PlayerMenuViewUI extends laya.ui.View
var PlayerMenuViewUI=(function(_super){
	function PlayerMenuViewUI(){
		this.imgTop=null;
		this.imgBottom=null;
		this.imgSex=null;
		this.imgIcon=null;
		this.imgDan=null;
		this.listBtn=null;
		this.txtName=null;
		this.txtGuild=null;
		PlayerMenuViewUI.__super.call(this);
	}

	__class(PlayerMenuViewUI,'ui.player.widget.PlayerMenuViewUI',_super);
	var __proto=PlayerMenuViewUI.prototype;
	__proto.createChildren=function(){
		var temp=PlayerMenuViewUI.uiView;
		PlayerMenuViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PlayerMenuViewUI.uiView);
	}

	PlayerMenuViewUI.uiView="eJyNVEFv0zAU/ivIXKMtcZtkyY2CGJXGLpvQKoQqN3Ubi9SOHJe1VD1wmDggBBdA4saBCwJx5QDan2kn8S94Tpo0aUdTNZL91M/f+773nj1DahpT5KMnjF4iA8VSxAnyZ+iS9VWIfOx6BnrBEtaLAKXkmBoopGwYKuQ3mubcQEHIoj7yn85ypvaIDGmZagpQA02QbwIVkQBho+G5iAGTPGcc4jgiUyoPs6XNB+JwzLq94UHMhxrEXtJjySAJwtgwDdsw0VqF1TDnc2NndqtR5K/YyrW0hFJiVCuni7cFeaAHmxVBjlOvx8z17MyYyupGjNM0cR0tbqaslldrJKSkvxelc5RRWrhUrjM6qakVJ3xVKsKDUMgOeD2w8+gijWrdOGlqbBVNc8oi2oHg5aLjOj7Xzqw4a8LmUYnwASnz6b/2037CErXZ32bWX121fOBsJ88VwYGW0smSmAQU+I9WWyAHlKQxJaqTjke2v0j3xcB7zm3XriUmGzLMjaG39IBwMtJoSXmfyrJhfBvpaWsMM8g3W2OlzA6uUu+aCMIjNt6+PlCh/EOFtl5anIj0aHQG0CxfGj4UHKSie5KRKIfcF5GQoAzd9Vy7YXrGf9YcD8ibj6+XPz4trr/cvPpZLcH8GfzWvT2nk63euql3z157d4t3TU3UqfZgIKVP+mj59c/y3Zvl+7eQz138+gZLKaF+BgZgaeUSZxEce8wCKRIxUHc65BFlcCTQLrXJgUN7/aBycU9SW1WZnle8BfkENnFJ5vFYd3qt8+r74vdnP1tA7t8P19lXUovdilpzH7XUJgPHQ7qu/wD8XQ6M";
	return PlayerMenuViewUI;
})(View)


//class ui.player.widget.PlayerWidgetViewUI extends laya.ui.View
var PlayerWidgetViewUI=(function(_super){
	function PlayerWidgetViewUI(){
		this.player_info=null;
		this.btn_list=null;
		PlayerWidgetViewUI.__super.call(this);
	}

	__class(PlayerWidgetViewUI,'ui.player.widget.PlayerWidgetViewUI',_super);
	var __proto=PlayerWidgetViewUI.prototype;
	__proto.createChildren=function(){
		var temp=PlayerWidgetViewUI.uiView;
		PlayerWidgetViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.player.widget.components.TopUI",TopUI);
		View.regComponent("ui.player.widget.components.BottomUI",BottomUI);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PlayerWidgetViewUI.uiView);
	}

	PlayerWidgetViewUI.uiView="eJyNj80KgkAUhd/lrCfRpghm2a59RRARalNe0JlhvGoivntjUUSrtvf8fPcM4N5pKOxJdxBw3roaakAPNZMCd6hEJgIdXbiAmq9igZZqysoQYt/oEKHW8mHyLQUKTbeCoeQiHgXygsoL1HF4U7bWfUPa1IejK9Ne+zOZqw2ibwxTNZkbil5SFOg3zVFuK2eNNlxHoWi3wTiKT/XaMtvqZ0Iip3+flIzNuaSa/0a8Cp+U0/gA7vxigg==";
	return PlayerWidgetViewUI;
})(View)


//class ui.hall.sonView.BasicDataViewUI extends laya.ui.View
var BasicDataViewUI=(function(_super){
	function BasicDataViewUI(){
		this.lab_titleSkill=null;
		this.img_Icon=null;
		this.list_skill=null;
		this.labStart=null;
		this.progBarLadder=null;
		this.labLadderNum=null;
		this.imgRank=null;
		this.imgRankLevel=null;
		this.mpNodeStar=null;
		this.boxTop=null;
		this.labStartCount=null;
		BasicDataViewUI.__super.call(this);
	}

	__class(BasicDataViewUI,'ui.hall.sonView.BasicDataViewUI',_super);
	var __proto=BasicDataViewUI.prototype;
	__proto.createChildren=function(){
		var temp=BasicDataViewUI.uiView;
		BasicDataViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.skill.item.SkillCard",SkillCard);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BasicDataViewUI.uiView);
	}

	BasicDataViewUI.uiView="eJyVVctuEzEU/RVkNiCliT2vPHYkC6jUVogg1ApVkTPjTEw89sj2pGmrbBGfwI5ll+z5H+hvYM8jmbzadDfXc318fO69x/dA36YE9MAXSm5AA6RSpAr07sENjfQU9HzHaYApofFUmwA5ywYIp5RFoPf1vtp6muCY1Pfegh5sgAXoeUEDqBnlJill+JbIc6KUSW5ldKQw/UYj2kx5DJbLxpNoTtDJ8eBhuDHFQh+LV7JrO8fRM1khZuQS9E7QsVR9Bx1J9hD6GR4Tto3ebufoju81qhIh36g8x9JsYXg80lQzMpxRZvdqsjB1A32szeKrarWqp2NAJoLrIb0jRRQKJizQ627ouXBicjEPp0JeGc2afhVdVhGjsb1fSLgm8lnVkdstyXcqwjSJR6eh4GClFVaKaNWyxGVGWgmJMGtFGeY3hI4gdOqS5ay8zlrAIjpMeUNeqvS2ul23JLgS1+u4K3HNhpEqJZwPQykY62M5LHiHIkkEb81Vvl6xTHFoWZ60YRnYKnsmkCQlWJtfTvVt/vi10iB/36jlFRxgGdWZr7UI6lKYQGZc08RuTESUMaKaOf8m1SRp1rE4zrMk4VFeyOvn+hA6uVKo26713lBjqddd9+/nr8c/D48Pv//++A7qnYaCIjI559TopcREv7rCHwgFtRbEQRv57uEWRC9vwG5Q1Bc+NfhmRyxN3H+/4yUfq1/mxtvQnRLaqwSxOCbxDEdWU7vKMpLTfvbonYP31SDX3hzponoNiuMusmRdhzc+bCEI327WwHlZDQ4rfbHXBt1S6gDWZv0T5rODo84wjzOrxGBKOVHV7Btd7iiC5UQdN9t7GdmptnLB7hajMzLPxX3KgQwLtGM9G87TqRMYptLM2BYD1y/dZeXXSXohImLHZkPRvljsOFOx1bXOSRUdM5M3wUyRCmosFp9FCo59nx1Ytuva6daPa+ll5s4LyuPy2pUz2bwjHXafcXjF0wu3bWMgjFete3aBoJVaSzEjg1U3Ei9A0Wo9N8/a+wVXHf1OUszqfTzBExei3f4pu5qRic5d73r5H4b+3lE=";
	return BasicDataViewUI;
})(View)


//class ui.hall.sonView.MoreDataViewUI extends laya.ui.View
var MoreDataViewUI=(function(_super){
	function MoreDataViewUI(){
		this.txt_hp=null;
		this.txt_Damage=null;
		this.txt_crit=null;
		this.txt_Parry=null;
		this.txt_Critdamage=null;
		this.lab_hp=null;
		this.lab_damage=null;
		this.lab_speed=null;
		this.lab_crit=null;
		this.lab_parry=null;
		this.lab_critDamage=null;
		this.txt_Victories=null;
		this.txt_ht=null;
		this.txt_currSkill=null;
		this.txt_skillfound=null;
		this.lab_victories=null;
		this.lab_highest=null;
		this.lab_skillFound=null;
		this.lab_CurSkill=null;
		MoreDataViewUI.__super.call(this);
	}

	__class(MoreDataViewUI,'ui.hall.sonView.MoreDataViewUI',_super);
	var __proto=MoreDataViewUI.prototype;
	__proto.createChildren=function(){
		var temp=MoreDataViewUI.uiView;
		MoreDataViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MoreDataViewUI.uiView);
	}

	MoreDataViewUI.uiView="eJzNVstu00AU/ZVq2IbGM34l3qGgqkgUVSqqQAhVE2dsT+N4LM+4TagidcEGCXasEBt2fEJ/qPQ38PgR23ngRo2Il3c0c885d869MzdAzEICLHBOyTXogDBiIQfWDbimI+EBS1f0DvAIdT0BLFVV5h1ge9QfAevDTXH0zasJdkn18AxYEHXAFFhI1zqAj2mQ7PNx4MbJzu7AowHhpBv6eEaiE8K5XI3pBffiKQ0Ow8BNsuHA9lj0HljKoV5E79JoPu80gGu9HF3dDv0y3gp8HTbKoJUFsM0mE5l+SnEmrSkDNLSnplCzDGotAwuyHMGUjujjmECzyLPwA+yAK8rp0E8OOdjnpAGjtI8GG/FMuBPeSEc7yaNmdwnhIg/mnAjeFWQqoph087TUznJzjwTuhAZurpzb2CepiYw8SD1kNOGa/e1wXRa4l/SJoLlYZKJHog4xu6T+1W60prAbjPVvGklTMDdmgo7xrgq/ZQ24lyB7W0C/xkPiL0FrWctq5qLX0orgKNkvpuLCC5MDkkUSH59W2golc8JhgTijn0gZJbteRBRLFJv5TGZ5hg0T6mqyMmRygks9yWzzqZvOR+II0ESyt0ISIq3K8iXOq5ozXcT7YJuXVFV6C7r9fpWtHVFRch1k0R7rWmUK5cu73BAl9VMcRbOSexG2hbxW866s7GjJGXLtYLRXe6jZlJVNn/M2jIK2j4e1llNka4uIjcmgYIC0ngJHi/X0udlehzF0HKUHSu5RmqGx6KiB/HK92yYAIn29grWWl4p4SMiovYJyO2kIbbiR+rRpG/3cUCv0N15HWJ9ArdPzmOtYfq7aJgL2lKxJyh84VGtP2Dm1BYso4aWI6tI+5ipCaIV0v/6XqfTBcUKQcHHwNsng7ZG0AZdJI1T/LMRRdDamvl9y//Pz9v7u7uH774cfn++//Xr48nVP7KFZfN61ilH0Kn0uqTssDiojNJVzcJQv7oV4YfCN79jVqsHXdClE5rD/5C6FPQc6ztZdWhq+nDVQGqnylchc3l4NhYM2z8vUQEd1A7VNBTKKmzAqH+l+VcYgXu7ik9gX9Dn3mPjvaj7O/wI5zgyS";
	return MoreDataViewUI;
})(View)


//class ui.pve.PveRankViewUI extends laya.ui.View
var PveRankViewUI=(function(_super){
	function PveRankViewUI(){
		this.txtRank=null;
		this.txtName=null;
		this.txtStage=null;
		this.btnPrev=null;
		this.btnNext=null;
		PveRankViewUI.__super.call(this);
	}

	__class(PveRankViewUI,'ui.pve.PveRankViewUI',_super);
	var __proto=PveRankViewUI.prototype;
	__proto.createChildren=function(){
		var temp=PveRankViewUI.uiView;
		PveRankViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PveRankViewUI.uiView);
	}

	PveRankViewUI.uiView="eJzFk81q20AQx1/FTK9LrG/Je2wIaaE1pYHSUEJYSxtpsbQrpJVj1+jSawntpQ+QQ249tA/Qx0meo2NbsoRjUh9aCsuK3fn4/2Y0uwS9yDlQeCf4NRDIC5WXQJdwLSKdADVN2yOQcBEnGqjnGDWBMBFpBPTDso19mbGY94MXQF2XwHwV4ZA2lzOyCZRTITEkn/FhJS41k/G0wi0S1lEuY0xSio/8tBAoAI5BLFwO7mjIVFXyE8kmKUejLiregbmBXdfkSSDTaIhcryPy/CeIzMdEpkvaBZ264/p/Und8a6Pu2Z26a+2q59kk3qNqkNWycO+pBk5f9BWb8HRH1Dc3mgF+Z6xALz3Xb5mcop/mc8wB919vBg/fb/HiSkl9hppALWtzQvNrERaqVFd6cM5ecIFuoUrVKtMzHkZROIIDGQI36DGMWcZ7DHe/BvdfPv9zBtOw+40405vf1FL8/DR4+Pbj71CMn1daK7n7JkbeGsT3t82YaPmm4DPYDkKoskzJId5f4n0zC+m6KAqw7/WN982bZTfPb5s4xZmu0HF4nAjJSz5sRq5M0LAQC95oMRkmqjgHahy57en9+lTXFweU6De9xontahyvevz/apwLdnCFF/Vv+dCY6g==";
	return PveRankViewUI;
})(View)


//class ui.pveresult.PveResultLoseViewUI extends laya.ui.View
var PveResultLoseViewUI=(function(_super){
	function PveResultLoseViewUI(){
		this.imgUp0=null;
		this.imgUp1=null;
		this.imgUp2=null;
		this.btnConfirm=null;
		this.txtUp0=null;
		this.txtUp1=null;
		this.txtUp2=null;
		this.btnShowAD=null;
		this.moneyIcon=null;
		this.moneyValue=null;
		this.txtReward=null;
		PveResultLoseViewUI.__super.call(this);
	}

	__class(PveResultLoseViewUI,'ui.pveresult.PveResultLoseViewUI',_super);
	var __proto=PveResultLoseViewUI.prototype;
	__proto.createChildren=function(){
		var temp=PveResultLoseViewUI.uiView;
		PveResultLoseViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PveResultLoseViewUI.uiView);
	}

	PveResultLoseViewUI.uiView="eJzNVk1v00AQ/Stoubqp11+xfWtDC5WgByqqVqiKNvbG3sbeNfa6aVPljED0yp0D4syV/1P1b7Be24ldHJJChYilRGOP572ZfW8314BfJRi44JjgKVBAkrIkA+41mBKfh8CFULcUEGIShBy4lqHOFeCFJPKB+/a6fvcgRgFuvnwFXFUBl8A1LVsB2YRQkZVc4BRnecS3czIUwXBEguEoGKpaL6EBmM+Vxy0o8jwU4RPgbsF1xTUdyvK6rnaX9xE7z4dZjKJIQGxEuK5pqs6j17Scx+SpV72L3wuUijQSB28SFXRDTBBJEMlCTM/JFvEYfRCKCbUWClyB4mManBMucYLhg2Esp92MtgLGK8pneIK6IQ53c84ZvQdi2EYJYi96GXE6YHRM0ngJ5LE4ZrRACVKMaSXKCI1wJJ6CLicddvZkS7R+f1E5QjTIReL2ICQUZ3i71dO7HPtEDI3jS16BIuqFLD0VLuqZdXQio/n8rNlvFz5Uq6Uz4SYMspCMEJmRpgkFMuzpS0fK4HeklpReynm1Gel6ORJ9uQD8kpeSLboW8e3Nl7sPn25v3t/9+CbujhnlR2QmCmpGGYmcV8RLWcbG/MkpeoGJSPNYxIpqT8fyA/6MlmnBFi34f9DqG+1paf+O1iofaZKYYQlp1weOrTc8dRSy6c6ztqUKiY+iHNf6Ejyfp0TYCKiKoSrFV4FDLhgX2tKcQlwyErQcWET1cWY6G3sQWpKpY2/owWAyq/hRFGOZXi7MZqLvorBVuhB27S+TNlixl63fKsuWoGovhq8vBCIK46sDTy7ZL3BjsWfOwlwMwEf3XK72nKXLZVAPW9fW6bQmVPzjqAgZZovQMRLrvlStJo8onrIJHtRShHt9e3dvcV9UbVBQV0h7JyUoagp6f7C/rxbVUUQCudp4zMHaBuzqWOjgLxz3Gk9R6jdM9/Xz7cfvf9WC+vAWzsT1E2IWMYc=";
	return PveResultLoseViewUI;
})(View)


//class ui.pveresult.PveResultSweepViewUI extends laya.ui.View
var PveResultSweepViewUI=(function(_super){
	function PveResultSweepViewUI(){
		this.btnClose=null;
		this.txtTitle=null;
		this.txtInfo=null;
		PveResultSweepViewUI.__super.call(this);
	}

	__class(PveResultSweepViewUI,'ui.pveresult.PveResultSweepViewUI',_super);
	var __proto=PveResultSweepViewUI.prototype;
	__proto.createChildren=function(){
		var temp=PveResultSweepViewUI.uiView;
		PveResultSweepViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PveResultSweepViewUI.uiView);
	}

	PveResultSweepViewUI.uiView="eJyNkc1O4zAUhV8FXbYWJM5PQ5awYJAGNiAQGiHkJE5i4dpR4tBC1QdgwRuwGc1mJMSeBwLEY3CdFpoWxEwWV4pzfc53TiZgrioOMRwLPgICVa2rBuIJjERmSohd1wsJlFwUpYE49J0pgbQUMoP41+T97t6QFbx/+Qpih8C4m0tCzYVQeCHVw6FWm0xWJduoVAHLFlPyrbQbRZ2459EP+YAGH+rVJa9500qz2Ypzw1Rx0eLIBJ1bNeKa79YCI4AbEeqQbvYYqBf+i4EG7oxhsGDwff9rhpyrgn82d0gUEjug73aw3Rqj1WrmLW+eGVu8ZDUuJkbtSN1Ysq9MCxs6EedJazrrvsdPlnC5msgJO4eADt4dzNgcCSOtg+FjLAZeHv483/19ubl/vf399Piw0T34OdfKHGIylPFnb7i8L9JaNzo3a6fsBxe4lmqprfB6ng8ix1liOrIOK0i2XBs62MKSdZ2d1KyC2NQtX5Qe9HH3VK5RRGMRudQjPGyQQdqskrNMYA9xtPjRLnWX2Ol/sYc8yVJkP5u+ASdMB58=";
	return PveResultSweepViewUI;
})(View)


//class ui.pveresult.PveResultWinViewUI extends laya.ui.View
var PveResultWinViewUI=(function(_super){
	function PveResultWinViewUI(){
		this.fontStage=null;
		this.listReward=null;
		this.btnBack=null;
		this.btnNext=null;
		this.btnShare=null;
		this.imgStageL=null;
		this.imgStageR=null;
		this.txtDamage=null;
		PveResultWinViewUI.__super.call(this);
	}

	__class(PveResultWinViewUI,'ui.pveresult.PveResultWinViewUI',_super);
	var __proto=PveResultWinViewUI.prototype;
	__proto.createChildren=function(){
		var temp=PveResultWinViewUI.uiView;
		PveResultWinViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.pveresult.items.PveResultItemUI",PveResultItemUI);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PveResultWinViewUI.uiView);
	}

	PveResultWinViewUI.uiView="eJy1Vdlu2zAQ/JWCfXVtHZRk6zEpihpIg8JpigZFYNDyWmRNUQJF+UiQf+/qsKO4CqK0qV8sksuZnVlyeU/MPgMSku8CtmRAMp1mOQnvyVYsDSehbbv+gHAQMTck9Kn1MCARF3JJwp/3h73ThMXQ3rwnoTUgOxJ6/nhA8rVQGJVtQENeSDMqxBwH84WI54t4bjnDTMXk4WHwtoAYFzEJP0j4wX4J3HGDCt6mk274nDMVcybuOH4nTEok6pX2AXnieK9Efk3+NvUrlmBMu1mW4peIQMX/Au56Tj/wNuCnVJlzKbJTTM+r61libpjGyBVGXpmafsNkgbuf4ct5cSfmUqBxORzkcAA8ocSyHZd6fjCe4CRTEU81irSGXjupC5Gbk4RcqxZJbfeQkMSoGWyZXpb4GYtKu3w0WEMGzNygisM3LjhdN+PrBmZV2lMDSZtRg1qC/lZH1QNcVix5MtaFMqKaKsTwaMFQIFg+fIJ9PUXXb1sSL7sqOfabS/R4FiWaWGDk6JwLBTmMTpzGskrReFzbeVPZ+by5l2eFMak6ofZ8pz5E5T2o/V0YdcaiNTnmEqVJkqqSN9YAqmGVbAESV0mXwZ0ynaC5DD1Vrpji+GdgZ3oove2t1fOtltZLhP9/WoOeWneC7evL+uZyxxZtyb3iTEOX3j1ImW7/XvCkIetbXNS6K1vFa7V2tsJGKp0c25ZI4qprXZCeCS3FH03yGS63PkUBPeWa9eWqCt1ulC+yOr5ds7r9e8TjA/bymXry2lxU1T9JgDYJ0KNsszMfWZNryYBTtlX+ShuMTtdwnsq0jHzvuS616XG+ekKqh0XcQdnk6xFGfhGRTvN0Zd7dsM8gcEd0wFh54LlB1U9/A9d584Y=";
	return PveResultWinViewUI;
})(View)


//class ui.pve.PveRoomViewUI extends laya.ui.View
var PveRoomViewUI=(function(_super){
	function PveRoomViewUI(){
		this.imgBg=null;
		this.imgBgTop=null;
		this.btnBack=null;
		this.boxRight=null;
		this.listStage=null;
		this.btnEnter=null;
		this.btnSweep=null;
		this.boxTop=null;
		this.btnRank=null;
		this.txtDamageDesc=null;
		this.txtDamage=null;
		this.txtStageDesc=null;
		this.txtStage=null;
		this.txtTimeDesc=null;
		this.txtTime=null;
		this.txtTitle=null;
		this.boxLeft=null;
		this.fontStage=null;
		this.listReward=null;
		this.imgStageR=null;
		this.imgStageL=null;
		this.txtMonDesc=null;
		this.txtCardDesc=null;
		this.txtRewardDesc=null;
		this.txtMon=null;
		this.txtCard=null;
		this.txtCardTitle=null;
		this.listCard=null;
		PveRoomViewUI.__super.call(this);
	}

	__class(PveRoomViewUI,'ui.pve.PveRoomViewUI',_super);
	var __proto=PveRoomViewUI.prototype;
	__proto.createChildren=function(){
		var temp=PveRoomViewUI.uiView;
		PveRoomViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.pve.items.PveStageItemUI",PveStageItemUI);
		View.regComponent("ui.pve.items.PveRewardItemUI",PveRewardItemUI);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PveRoomViewUI.uiView);
	}

	PveRoomViewUI.uiView="eJzNWFtv3EQU/ivIvC5Zj6/rfUxaaKS0QkmARKiqZu3Z3Wm8Y8ue3WwTRYoQlAJKqSKFQl9QJRAtEoiqgATJz6kT8sRfYMa39W3X2xJCk5XlscfnfOcyZ74zuwK94yKhLbyP0bbQEFzPcX2hvbvXEMw+ti2h/eFuMmV5AHsoM0e4I7TFhjAOr9vYon2hDYCsNYQR9Nh8POgt9th8fwsTNnRHqDnEtzq9hdsuf9xHuNenQltTxL29xnQt0ySvO25JuN+HpMc0uCRUjHfQOx5mRghiA4gNdlFFIavsxuKQUocUjJL10Co11dehZBGaWyV1XUj6Qxxqy0pddMYFiboWStQVKfWUbCipeGe8GvpiLq+n34MiHMqM3xqyi4WlsgsUsSGxn8KuGe+rsjHT+ww8kEPwQJlg19QZukFZN1AbyS+jW8nrXsE+LapWI9WTBJN1KXGbzeav0QjvaM30HNtehN5aBMt0BgOHNEd++DxB5EITbQrtt7gtPrKRSa8S2LGZduoNUUPwkIsg3WAasyjlqri8O0Kh8mWKBlnUHiIW8tajSdGAvSZwkBt7Q0Jx+IjnzwgtYCbGX8gKfW+ZJdXNmthooBwbpRQb7Po7fVS1KiS+KsKE8E1oR77JmK7WLxbFiHJbaqmZ5XKV0NBOPxcNhqXnIURiJDbsIJu9rcz7G1XmStHK1I1Uss1SbsgmNpf6mCAfNWObb2PiDWM9kJh9x2O2iQtqMtoIR3kHzzYQiHLGwLVthNwqAx2PIUId3LsEI1m5cyz2bi47s5ZeK5eoaJErWivNJI3fpxUqLrd8BfF1WWlNpf+kWDIwMu5bhaRcTk1WvbcgyVnD8e/NRq4ne1AMTqnCthKGYcrmFcGiY3oF8nhcQb7JplI0ZmtAeHHyXfDz82D/5O+TRxwy9ZwttOTYDv/mTUkCHaCkz8PK0XUIXWOrjNkuRiM28zpmlch3uvSNTXgNYfaFmcjodruKxWV0HA6al6JcXSxCZ6Bbegl1ilgR2V8JqNhSLQlmgEovD1TWu6rcKZSlqREBqnoRMQkLYj4k5/uPgk+eB88+Oj365bWKilHEnWLmO9n/HhEp5Az/OiLrbOeqCsjpw9/PH/76OgXEUAuwJ5AlMbh3VxHPfjgso73gyNychTItvUDOg6V2Bm1w9/D8m6enTx4HJ18KWTCyNJ/rLE3vTnVdOV8A44l5Zq9LWb66grpz0tUxpxR6sdSPMRljC89N1Kf3HrpS4sHzCI8JzwZHV6dI1tW0IUj3Rq2o1cbQoRiSqvZDiri3mOfeoKbz4eRDNOZQ3UWMckyhd5zh5Vz5NsuWJRu7RSYZ6pG1dKGHOZbQa2gPeeZL5YZruBOaTnp+iqCPEM9HEUiyomp6yxCKbGQ26W9FuSdLIEv1V9E29KyEgzBJrYSvb4blJOXu0+h6JOCi+fpEaomwV7I7EBtn6JluNvTzqlBL+EwW6Jy392rVyUV2nqhbqVdnlXvbqvplRE2IDLKk5LpD8nvE6f6PZ589fXH8xdnxQbRHvPwGgEQDZZMJ1EEDslKBbYlFrADu/pO/Dh5cHiyjVQErSqU8sOD7r4LPn10asDSURj6UGUBHvwWHRxvyq+BBSANWbTpNYsZAbDue9YEH3aRDT7rcyWFQHM8MwvvfBj89CE7+eLWbTIFOzPoPjJT1iJLJStGQ4s7/6Z+n974ODh6fHX+c9/l8O7+GOpYp1JRcJd7uJx0fr7hL89VbIFYV3DKnKJ4VqnpjzuqbxEMH855Lympc9tIaB30fUb/JvcoSqcme2nZzgEl0d6sDyU5/mDafyWmIuMCP6RKqEI1idNgMl8WspruGVrw0Rlb4wzM2USrDVHMw1frTAP7/D4LjH5s=";
	return PveRoomViewUI;
})(View)


//class ui.pvp.item.ArenaRewardItemUI extends laya.ui.View
var ArenaRewardItemUI=(function(_super){
	function ArenaRewardItemUI(){
		this.icon=null;
		this.txt=null;
		this.txtName=null;
		ArenaRewardItemUI.__super.call(this);
	}

	__class(ArenaRewardItemUI,'ui.pvp.item.ArenaRewardItemUI',_super);
	var __proto=ArenaRewardItemUI.prototype;
	__proto.createChildren=function(){
		var temp=ArenaRewardItemUI.uiView;
		ArenaRewardItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ArenaRewardItemUI.uiView);
	}

	ArenaRewardItemUI.uiView="eJyNkb1OwzAUhV8FXdaoxGn+6pUFJGBBAiqEkOs6idU0jhz3jyoLCzMws/AAleABeBtU9S1w0iaNkChdHN/onKPz+c5BzVIGGK44m4ABqRRpBngOE95XEWDLsg2IGA8jBRiZXm4AjXjcB3w7r6ynQxKypncG2DRgWp7ZgCdak47ToxG/51QkvbCVJiHkubEzwemUEch06hAqhkORFDnpSIlkzxy7zHHaRsXU0bXGRGp9UUfLM0pi1tV1W/5muNkMFXlhIQmNhCxlTjWVOqdZ4Yz0WPyrguesUdp+3cH1qg5qqrRcMf3BMLX8oo+SYsCORSwKwSGinmva9X/AjZVY+pUCkahL/sCKba0n7TrnVIpMBOqgS04Y125a5bXdILBc+JtI32MeFi8es0DBf3gW2mxK95oI2b+WJAWs5IjVuAi5Dd4LMmRb5uXn1+rlffX6uHp6/l68LRcfsOWzUZMP+fvw+T3bRxR2Et3lPz2D8BQ=";
	return ArenaRewardItemUI;
})(View)


//class ui.pvp.ArenaInfoPageUI extends laya.ui.View
var ArenaInfoPageUI=(function(_super){
	function ArenaInfoPageUI(){
		this.list=null;
		this.title=null;
		ArenaInfoPageUI.__super.call(this);
	}

	__class(ArenaInfoPageUI,'ui.pvp.ArenaInfoPageUI',_super);
	var __proto=ArenaInfoPageUI.prototype;
	__proto.createChildren=function(){
		var temp=ArenaInfoPageUI.uiView;
		ArenaInfoPageUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.pvp.item.ArenaRewardItem",ArenaRewardItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ArenaInfoPageUI.uiView);
	}

	ArenaInfoPageUI.uiView="eJxtUbtOwzAU/RV0Wa3SpOlD2YABkGChEgIhhExyk1g4duS4LVBlYkFIMCIGVlYQA0IM/A1F/QxuU1LKY7Hso3sePncI9jRD8GFH4AAYZEZnOfhDGIjQJuB7nTqDBEWcWHq4bsEgSIQMwd8fVtRNkdt56in4zQaDE/Adl82E2k0GfW5oXk7n+93AaClXuOkeC0V4oNNUq6V+XuK1TMU0lWc8wD1S/Lrugt9iYDBDbgn2qjvh7nfSRqv9X9Jlg4pv44CbcMNi+it0vcxMp+kpK9IJIdVhT2Jey/pZTRCj9ldB8XKS8BANFMVBwWZ+GymP8V8Xh/1oOP/RQE8cKhQBqjzhKq6KEGe4ZgT9B5w2cx3mNJlbh/ntFHPWm/wI5S9rr7Ruflu3GtVOrLByktTiCUnBx8Pz+9vV6PH14+J2fP0yPr8b3d+MLp8mOazRx7iqpZ7wFjtHXscJZjhVP5eIfhlpZbsUndbjTV/E2hK04lxHdmGPr6MgdlDpRVHkhR1CuBRx2Qkq+1XsJx+k4RQ=";
	return ArenaInfoPageUI;
})(View)


//class ui.quest.Item.AchievementItemUI extends laya.ui.View
var AchievementItemUI=(function(_super){
	function AchievementItemUI(){
		this.baitiao=null;
		this.iconbg=null;
		this.icon=null;
		this.prize_box=null;
		this.box_jr=null;
		this.jr_btn=null;
		this.jr_txt=null;
		this.desc=null;
		this.title=null;
		this.box_lq=null;
		this.lq_txt=null;
		this.lq_btn=null;
		this.icon_ylq=null;
		AchievementItemUI.__super.call(this);
	}

	__class(AchievementItemUI,'ui.quest.Item.AchievementItemUI',_super);
	var __proto=AchievementItemUI.prototype;
	__proto.createChildren=function(){
		var temp=AchievementItemUI.uiView;
		AchievementItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.quest.Item.QuestItemListItemUI",QuestItemListItemUI);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(AchievementItemUI.uiView);
	}

	AchievementItemUI.uiView="eJy9lduq00AUhl9Fxtu0TdIkbXPnFtSCCuKBvREJk3SaTHeaaZPpyZIrQTyAPsDupYgggjeiFMGX2dU+hjNp007bNK2CQkmZlXX48s9aM2NARx0ETPAIowGQQCcknQiYYzDADeoBsyrLEvAQdj3KFrVYAo6H/QYwH4/TyHobumhfaB+GzMWGmGJImFN0jgNmcEi7TYJSD1vLVwXLbhU7gctd8FN0M8SsBpAlVZP4g5kD2ObVbO7yh0AjYOoSGAJTqUopXcVI4bBDgiTrkq3bQxEtcatFYXRu2e4umMqglj8Bp2Ici6MmONqaRhZptlmYTKPREmJVS47jJ7GUW8VIqug1fStfA0bedrpaLCQ7IcPsVFVjhaypesrcCZkylp0ERQ700SkwC8ohXe5xljpF7dt48S+WDHsBxcmG93AxoS5yl+JO0MM62BRil52jMHijzPTu4wjbPvNrQj9Cq/4kQ6sVgizKuyc9SpMt2WinRT/p6koOZS1HK7RsurOJzGS5JKvHy7LEH8zsQxv5zCZsjMZaFgaOR8IzYMpFPV2dJqtM4syGU5carKh8GLg95li67uEARai0wFwh5hTd0PsBGtLMYSsogjplRVCHJhGUB5pg/uNiNn2vllThozltkwT0PpNpMbV8xZzvYCckEWnSK2fwFsIsxCE+4WmvNps1WYUc3MducsaggKIQHKTVyouzQa6miA0UOWvA2eTD7O3r+edX8y8Xl98+zd98nT+bKPJsMgUiZcqcTwmbFahVQJyPpChLpPW4KXolxaOY+kjge/H8cvrx5+Tlr3ffRQ3lDTrtOA0r7NQG+UfBcePkdzPHKadbylnd4nf/TbcY2rWyciOrW6S/GH1DwN0z+iHqZ95vCp995b/MvnZo9teM+cMvDlRmRU1bVKwK921tX7ckN+2I9cshPH4N4gGHQYG7c38dhv4N9+HW1Q==";
	return AchievementItemUI;
})(View)


//class ui.quest.Item.QuestItemUI extends laya.ui.View
var QuestItemUI=(function(_super){
	function QuestItemUI(){
		this.baitiao=null;
		this.iconbg=null;
		this.icon=null;
		this.prize_box=null;
		this.box_jr=null;
		this.jr_btn=null;
		this.jr_txt=null;
		this.desc=null;
		this.title=null;
		this.box_lq=null;
		this.lq_txt=null;
		this.lq_btn=null;
		this.icon_ylq=null;
		QuestItemUI.__super.call(this);
	}

	__class(QuestItemUI,'ui.quest.Item.QuestItemUI',_super);
	var __proto=QuestItemUI.prototype;
	__proto.createChildren=function(){
		var temp=QuestItemUI.uiView;
		QuestItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.quest.Item.QuestItemListItemUI",QuestItemListItemUI);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(QuestItemUI.uiView);
	}

	QuestItemUI.uiView="eJy9lduK00AYx19FxttsOzk0aXPnCuqCCuKBXUTCJJ0ms5tm2mTabS29EsQD6ANsL0UEEbwRZRF8ma32MZxJm2baZtMqKJSUmX6HX//5fzMjwIYdDGzwiOBToIBOTDsJsEfglDRZAOy6riogwMQPGF80xgrwAhI2gf14lGUetJGP5dQhsHmSXKCPYh7oIsIIojw0OSER3/Bou02jao84i5/2HPe40ol8EUKe4psx4Z0AVDRDEQ++HaG26OmKkD/HqilgwOHqSzrLzOCIR6O06oKt28MJq4pdh6HkxHH9TTCNQy0+Eo5l7oqjpThGTgNlmnUWLtNwuIBY9oLj8ZOxUtrFTLuYqr5Wr4mSYL1cYywV26eD4lJQXyIbWi1j7sRcGcdNkxIPhfgQ2HvqNl3uCZYDhtu3yfxbbhn3IkbSF94jlZS6IkIqG0kPD8CqEJvsAkXA17jefZIQN+RxLRQmeOlPOnCOY1BEeXe/x1j6SlbsNPdTTVvKoeZyHMeOyzZeIt9yfFrkcR0q4sG3Q+TikO9JL8bglkWRF9D4CNiwUstWh+mqkLjQcHPHmbkVQhT5PR5YvR6QCCe4OsdcIpY0XdH7AR6wwmHbUyV18rOAq8PSDCYSbTD7cTY9f69VNelPC9oWjdh9LtN8asWKB98hXkwT2mJXjtAtTHiKR0Mqyl5ttRpQQwI8JH56xuCI4RhspTX0+dkA6xliEydeDjidfJi+fT37/Gr25ezi26fZm6+zZxMVTifnQKbMmMspUctChgXG5UiqukAycwVrVobHCAuxxPfi+cX5x5+Tl7/efZc1hCt0xm4aWnUIQflRsNs4hd3CcSpxi17klrD7b9xiGtd09UaRW5S/GH1Twr1k9GPcL7zfVDH76n+ZfWPb7OeM5cMvD1RhR8NIO1oqzG+4xmVuSW/aIffLNjxxDZJTAYMjf+P+2g79G9Q22BQ=";
	return QuestItemUI;
})(View)


//class ui.quest.Item.QuestItemListItemUI extends laya.ui.View
var QuestItemListItemUI=(function(_super){
	function QuestItemListItemUI(){
		this.itembg=null;
		this.icon=null;
		this.count=null;
		QuestItemListItemUI.__super.call(this);
	}

	__class(QuestItemListItemUI,'ui.quest.Item.QuestItemListItemUI',_super);
	var __proto=QuestItemListItemUI.prototype;
	__proto.createChildren=function(){
		var temp=QuestItemListItemUI.uiView;
		QuestItemListItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(QuestItemListItemUI.uiView);
	}

	QuestItemListItemUI.uiView="eJydkE9PgzAYh7/L67UKZQy0Vw/Gs8aYGEM69lIaOoptcZuE727LhC07ml765/f0+bUDuGOHwOBN4h4IdEZ3FtgAe7l1NbA8I1CjFLUL85FAWUu1BfYxzODzjgu8JI/AKIHDib245psbH5cOdxvh87aRrV9/9WhdtBGF47YpwmmhpHV3XTuF5A8+GemFkMSEZoSmhObhoOQK34Hd0v/0y6Z+66Veli71St2ey3Fr0dnI4cGZHqPQLgQiodX2r+Esz9JxJIv01RNXzvQkTR4Wa5rM1lL3bcgHkf+9OPYNnNENPmqlQ+CG5vk6nh4+7QNbndX0nkClW/fiP8sLPFzO2IpWVRIwrqQILzITMo6ffvwCMIOdRQ==";
	return QuestItemListItemUI;
})(View)


//class ui.quest.Item.QuestTipUI extends laya.ui.View
var QuestTipUI=(function(_super){
	function QuestTipUI(){
		this.quest_title=null;
		this.quest_txt=null;
		QuestTipUI.__super.call(this);
	}

	__class(QuestTipUI,'ui.quest.Item.QuestTipUI',_super);
	var __proto=QuestTipUI.prototype;
	__proto.createChildren=function(){
		var temp=QuestTipUI.uiView;
		QuestTipUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(QuestTipUI.uiView);
	}

	QuestTipUI.uiView="eJylkLFOwzAURX8FPdaouGlDwSsLSDAhISqEKje1k0dNHBKHtlRdQKqYEBsDfABjYWkn/iZVPwMnkIBAiCLkxffJ97x7PQQ9CDlQOEDeAwvCSIUx0CH0sKN9oDVCLPA5er4G2qiPLHB9lB2gR8PCuXPKPP6TNe5iYN74TMq1BFuaBa6fVMLAg6VQA6CbFvQNzP7GOkEWeG2OrbOExzpnfkR16qORVXJ3WZvLL1y7kYPtLOV74vx+ziLjyJktjVpmeTTvGybMLx/T6fPiZpq+3M2vb9PJ06eNtXULhAr0Pl6YldWNN2Vce+hGKlZCrzTZNkdjcZVU2ZJVIYSR2Z+oqAmUVJxCHRZKopeVdnmgeQS/lXJqS5QyXcpK6Wy2uHpIJ+N0fG+msY5Ul28V+Qhx6oSUcwP7X19WFcJx/lr52JxX843f0A==";
	return QuestTipUI;
})(View)


//class ui.quest.view.AchievementViewUI extends laya.ui.View
var AchievementViewUI=(function(_super){
	function AchievementViewUI(){
		this._list=null;
		AchievementViewUI.__super.call(this);
	}

	__class(AchievementViewUI,'ui.quest.view.AchievementViewUI',_super);
	var __proto=AchievementViewUI.prototype;
	__proto.createChildren=function(){
		var temp=AchievementViewUI.uiView;
		AchievementViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.quest.item.AchievementItem",AchievementItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(AchievementViewUI.uiView);
	}

	AchievementViewUI.uiView="eJx1UdtqwkAQ/Zd5XmKqscq+tVCK0DelFEqRmAzZpXtJ9xKrwX/vmFTRxr7s5XDOnJkzLYRdjcDhVeIWGNTO1h54C1tZBgF8nqUMBMpKBODT6fzAoBBSlcDf25N0ofMK/9P6T2mI8xXRh1GUa7HbVOOkNhVc1SWi3OOzk1QZSDdJWXfC4cDORi/Sh0ufHfC7ewbfdM3Y2TUl1yZ3xF+rXtAsC2eVeszdsu+msFpbM2p8h/924+u8wDfgGT1RYRGeTL5R5BtcRAbaRo8r4WysxBXW08oTdh5qPLkV1gMh2KBGExYB9eU4Lpog9ZGkbRkV+qRLLZHES4Y6h6ZEt+rL9h9K6+Mir8FiKLBsPruZ2N897QXuRW4Hm7paVMoo/+PRGf8Axy2/AQ==";
	return AchievementViewUI;
})(View)


//class ui.quest.view.TaskViewUI extends laya.ui.View
var TaskViewUI=(function(_super){
	function TaskViewUI(){
		this._list=null;
		this.txtDay=null;
		this.progress_main=null;
		this._25=null;
		this._50=null;
		this._75=null;
		this._100=null;
		this.progress_txt=null;
		this.week_txt_2=null;
		this.week_txt_1=null;
		this.week_txt=null;
		this.week_left=null;
		this.week_right=null;
		this.additionBarText=null;
		TaskViewUI.__super.call(this);
	}

	__class(TaskViewUI,'ui.quest.view.TaskViewUI',_super);
	var __proto=TaskViewUI.prototype;
	__proto.createChildren=function(){
		var temp=TaskViewUI.uiView;
		TaskViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.quest.item.QuestItem",QuestItem);
		View.regComponent("Text",Text);
		View.regComponent("ui.quest.Item.LibaoUI",LibaoUI);
		View.regComponent("ui.quest.Item.LibaoDownUI",LibaoDownUI);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(TaskViewUI.uiView);
	}

	TaskViewUI.uiView="eJzNVkuP40QQ/iuj5urJtrv9yOTGsghGWg5oFqQVGkWduOM0Y7uD3Z5JGI2EtBICLgsHQALmABKIAyxCQuKxSPNnNtndE3+BdttuP+JJAprDJlIit7uqvuqv6qs+B2Ixo2AA3mb0DBhgFvNZAgbn4Ix5YgoGfRsZYEqZPxVgYPetCwOMpyzwwOCd89L0LktE3XQBBqYlzeby3zS0JyyXTkksDYZBbnF6NI55ENwm8dEJi+SLMQ9DHt06TdR6bxb5clcyI2N6HwykeUIDOhavRmQUyMAiTqkBQp4m9N405qk/bazl27xyrUwCI9iVxJspTcShoGE9kziNBAuz1yH30oAmvfeybT0m9/XqFhFRu2IaeTQGFxfHF4b2fJvP26ejzsbVZk8ef7L68vvVb4+f/f5g+dcPoAvfuheovEDtZeR3Gh6GxKct0/0cQZ2cA3m6OQkqxVspG04XIx8VJJSnp4hN2Pv0tZjJMMCCBoaG+pVpGxujYhUUI9QdqvfuzG/4uEfn7bqychcW1shNG5ZlJebiDllIC5EZrh9rlQVyDDDhkTiSicgnmD9JkzeYrLyET8TeffI6ZdJkzAOeOX9poj5yhQTMV8VKI6HI3kh1zhLqa5qeXX0twawuv92ZrYybnOkiZ9d1Wkc48ofSwo9pkhSEVUVRpe1YDe6ggSwDGg7aseBsBcP+v5kU4DVdJeBhSGQm6zWh349IXEpBHbwpeYOGjapkn39+1TdRLWHb3taK+6VQ4Sqv5aPLp49+7UzqLhsR3tmH+9jR8oZsuaXSjpQVspGJRU+5eOuwUTfXuzVtV7u14Y25xVbl1r05tDbG2q0Jd4N7vLnjzb7yfKCL3zbXCkgoq7zrMzlIRMxP6Ctl52LsIuSCcl2piJ4GsK4EuFKCl2NGgs7+H/FAD5U1LTguvptqzrKcvKF3FQDY6n81lNv9P035IqVe2hZs02n1DYZZ35iutV2wC8V215vTYxN/rkJtc1IQqGS/wI9gx7TxWBL7LfAqckOwkJH9bBsTdj4nbKc2J7Cu+DNKT7KaGaJqVhxAuLe3fPjL8+8+XD78og7BbIwKdFOj4nrUGG4EbVag8QsAGqECdNWhCDlt1BXm1Tc/LT/7UQ/lf/7+qq90rbshb240K8G5w8+i9gDIe9G0cANzQCdim3xl3rqk8foojms1osQq5/8epvNOh2ohWMLUFXlCgoS2es0PKAmL1t0mvvk90UY1cg/0QRHPY4LxSN7fC9uS448+laP46cd/ri4frK4+kGQ/+ePn+vWrwbHp7MYxQdZ18pufY5bOv649KwY=";
	return TaskViewUI;
})(View)


//class ui.ranking.item.RankingItemUI extends laya.ui.View
var RankingItemUI=(function(_super){
	function RankingItemUI(){
		this.ranking_item_bt_bg=null;
		this.ranking_item_ht_bg=null;
		this.ranking_item_bot_bg=null;
		this.fgx_1=null;
		this.place=null;
		this.trend=null;
		this.fall=null;
		this.flat=null;
		this.rise=null;
		this.pm=null;
		this.clipRanking=null;
		this.place_3=null;
		this.place_2=null;
		this.place_1=null;
		this.wdpm=null;
		this.wsb=null;
		this.content=null;
		this.vipIcon=null;
		this.lab_name=null;
		this.rank_icon=null;
		this.lab_rankCount=null;
		this.guild_icon=null;
		this.lab_guild=null;
		this.player_head=null;
		this.img_player=null;
		this.onlineState=null;
		this.fgx_2=null;
		this.iconBg=null;
		this.startCount=null;
		RankingItemUI.__super.call(this);
	}

	__class(RankingItemUI,'ui.ranking.item.RankingItemUI',_super);
	var __proto=RankingItemUI.prototype;
	__proto.createChildren=function(){
		var temp=RankingItemUI.uiView;
		RankingItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.ranking.components.trend.fallUI",fallUI);
		View.regComponent("ui.ranking.components.trend.flatUI",flatUI);
		View.regComponent("ui.ranking.components.trend.riseUI",riseUI);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(RankingItemUI.uiView);
	}

	RankingItemUI.uiView="eJydV02P20QY/itouDrB9vgzt3YlYCW4UECtUGWNk7E9W8e27Ek3u6tIPXCoKkCAuEArceMAB64Vv6ds+zOYD3/MJpPYVLvajZOZ93ne533edyY3gF5VGCzA1wRfAgNUdVk1YHEDLsmKZmBhmYFpgOYJKdiaGhXsRfrRhkQXCY3nVZGyLRkmaUbBIvB3BlhmJF+BxTc3Xdz75VYNewUWLN5W/G0hQpu9LtCar47VgJbl6CKer1GK92JalgjqGQNv3zXAU1QPtCNC8TqKaSRA2pSW5XpdFjyjGBFKUDmL4os2sYZc409qwsCBaVihYRo2BD1VbdRei3C3M96LMWlInLNNCcobrM0gO5ZBVhbptBSm05zZe9VihphGMy7v8lTMc7mq1nGqo+jaBv+zZ4IxKX3B0QqDjkiSbiNLJ1GCixSzSgvs3e6xEvnQqLbM3YNd2CpHSwymuVyW1+8p0RoXK+1eJmGubtZr266qNwUlwn8bMm8lnbP8qrLABW3mAmbOF391DlThkhzRCShy1UQUtngPpSYNHkdpV01D4YsFyulizRwh+Mz2+2qth2Zlr3XSf1wW9Cwnlb43Z5Y5dwfj2/CY75csxBeSP+Dv5Ru2wuVzs2KGecgiBbo2aK67Fsgwptz/DMNxPT8IlQZw2V6Uk1QYmemCazDWEHLCCiW0fIWPI3i3QTijNSY5iUzYtsdI20kU7zSKfRTFnoQCAwHDVTgFYx2FsTqRlyjHj5g4c96U4ukhf+LyFsusrMVnbvckPnO561TffYZinO8x9OSYCAenhOYxsnzyse0Ub3m9b5//9Pa3b29/+PnfH79XKs7Pw4Q58wGbjHIK8Se2/nOyrMumTOgHj9CnmLAtyzIvedwPkyQBJ33yJYfcm29Qzk1rYB4c9cxlEyvEX/355vWL2z9ecV1pXT7BZx2REHux4/bvM5QhMcdXE4PmxMScVcDeiUveuy2nE4lqRrEnncr/tw3LYNlO7UzQWl2WOLB7pTh5Gespqc5ZPKV+0NyNWKaNZ1nDeLFhf1/JURyJuTXo/fdL9vvu179Ulzj/3yVh4oaWqxglxwkdb3TZ6a4JB7ampx76EZEKDD0G1RaDqre9MVfKarn+IHboqdJwwLOSnR2q5HfFcCaJ4QoxxrJ3XNneyhWoY5NumHem526N2cKxDm1hB2ruAnHwxZvX/7AZ8u7Zd29/+V21hv0+A8T3TfOUNTQXJEnXVEbxFa6jDCP9TUcrb3e/PDwfVxerSUdE295DfaDdMSLrNJKs7lTIVSvkKhWC9kkwfhs8OtvLIicFfkARxdpb7zUiW4IKzdVTe+7Ju+fwLYbfafcOU+2d9uQkbIMGg1Z+OKTv2VOrBmVT+E4vNGuC+/rbvvJV8chBO9oYtnRJMPSg35uuoaim3TyQfQFN8+BcCnwXCn9rziU+crTT415NUL53GpkmPOySx+LnP8dN1ro=";
	return RankingItemUI;
})(View)


//class ui.room.CommonCoinUI extends laya.ui.View
var CommonCoinUI=(function(_super){
	function CommonCoinUI(){
		this.mpImgBg=null;
		this.mpIconCoin=null;
		this.mpNumFont=null;
		CommonCoinUI.__super.call(this);
	}

	__class(CommonCoinUI,'ui.room.CommonCoinUI',_super);
	var __proto=CommonCoinUI.prototype;
	__proto.createChildren=function(){
		var temp=CommonCoinUI.uiView;
		CommonCoinUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(CommonCoinUI.uiView);
	}

	CommonCoinUI.uiView="eJyNkU1PwzAMhv8K8jms7dZuLEcmMe3CEYEQQllrUkO+lKZsY+p/Jy10k5BAJIfIH6/9xD5CODgEDneEO2DgvHUN8CPsqAo18KxIGdRIsg7A87RjUNakKuCPx1G50ULib9J34WOKdhstr2VMat7IRIdwTuFaaEy8tTp58S2FpKXnVxJGbpEuKpo4MwjoA9eeYkfICpbPWbZg+RL+BXIAPo0M+6/nhFJas7IR40zTNBiaJOA++BYTCqgpJiXSqmrEKIXCB+DpJC++rfvREqasrR+CJ2sIFl3HTnQ31oSVIvcDcDnw5Qs2ju2qOKPetrqXQe9RbV9lPpweyImyR7ic/T1U0+ot+vEXNWLcI6TZdJYX88XVEs7bncZKQpHsS/nB1XVP8X4Cgl2rRQ==";
	return CommonCoinUI;
})(View)


//class ui.vs.MatchRoleUI extends laya.ui.View
var MatchRoleUI=(function(_super){
	function MatchRoleUI(){
		this.bg=null;
		this.wenhao=null;
		this.head=null;
		this.ok=null;
		this.hongdi=null;
		this.landi=null;
		this.level=null;
		this.nickName=null;
		this.gulid=null;
		this.guildicon=null;
		this.jiangbeishu=null;
		this.jiangbei=null;
		this.loadnum=null;
		MatchRoleUI.__super.call(this);
	}

	__class(MatchRoleUI,'ui.vs.MatchRoleUI',_super);
	var __proto=MatchRoleUI.prototype;
	__proto.createChildren=function(){
		var temp=MatchRoleUI.uiView;
		MatchRoleUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MatchRoleUI.uiView);
	}

	MatchRoleUI.uiView="eJy1lVtvmzAUx7/K5KlvpMEGh8BrpV2028OkqdU0VQYO4IVgBM6lrfLdaxMMhERN2ml9iHqMz//8/se3JyQfSkAB+sVhgyxUVqKsUfCENjyWGQoIoRbKgKeZVAG1dxaKMp7HKPj9ZFI/L1kKw9wHFGALbVHgqeRWCGPHQmtWqflhqibXC16o/9f1dMXv5XZxXRbNMH+EjxVX+gh7Fp5ZmKpf9aFgSzC5hgdjcikP2QM5noHYQJExMQbZj7Ysbcl25m5nvezYbipg3Fn2iSmWAYt7wTYyLnyy2/05I+7t8fHcNZJiccD+48shtPp8Flg1eC/aL5Lvd8iiSGM+7o8eDWV8crEc21JSlAyMGg1j1aX/BpWz4pipYq9hMhKnkb6yEPIxEtkjkX5lHdoRwbpJkLBVYogMK7WfutOjNkgiCvlTEfaRmviNR5WoRSLf3bFPoOEikQut/j5JkjAJ1QjLeaotR1BIqNBZZqdto9OduoJHi++arIPFul2yEgu4MfVs2/V92o0rzM7OIP8NLtSfdlFEmajuUGBfUxPdmuiVDj0ydpiuch6/1Z5J7r3pLXjeG0viENwLveWQSHTplTWhjcGJS3uDKo1HouiPAKtrkPVUW65WMA1ZnII+FHrWvY3NoYhYDg2a2wa3bdC5N8qHd9GpzhOMx53/y/UZBF5nqxf7TyPi2eHJ/h9KDHaYe+EOc534v6yCeoOaZaB47HZ8EZnxo6bPhk2fHVke9fyDcnuT83L8BLT7fd69KrlgcbFaIh3nK506s6904ZJFutZEP0kHhCUvmw4/dowZgG6tjYnj0pk3968GF1irr/GeAWoEe9w=";
	return MatchRoleUI;
})(View)


//class ui.room.MiniRankItemUI extends laya.ui.View
var MiniRankItemUI=(function(_super){
	function MiniRankItemUI(){
		this.mpImgBg=null;
		this.mpImgHead=null;
		this.mpTextName=null;
		this.mpTextScore=null;
		MiniRankItemUI.__super.call(this);
	}

	__class(MiniRankItemUI,'ui.room.MiniRankItemUI',_super);
	var __proto=MiniRankItemUI.prototype;
	__proto.createChildren=function(){
		var temp=MiniRankItemUI.uiView;
		MiniRankItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MiniRankItemUI.uiView);
	}

	MiniRankItemUI.uiView="eJyN0V1Og0AQB/C7jK8E0EJD99GX2sT4UmM0xpgtDLApsJtlsa1Nj2Dim17CqIeq53AopaKJVdgE9uPP/DIswSwUAoMLgTOwQGmpSmBLmInIpMAOA9eCFEWSGmCBu7IgTEUWAbtetslRzhPsRhfAPErNm8f2Q0FgwR3XdD5Xozw5TihRTkVBC1ypDIc8R0dLmTuxroRxKnFrZDUXvEimtio2x8U9DrWg4nDkWvXwaEDHRzV4EaZSXwFzbb+dXW5m/7Z7jd3b2fvf7SfIo46+LNGUjsG50RU6XKS07fS25pbW309bWTvSKZ9g9oPUa9o5+Gpn/dqSzqn0GbWPQrWC1taPD+uXp/Xb+8fzq23btBHLwoypf/UfpT7ITNbZg7iPkyiE321/yXx/J+tyxqHUHY/n1tceRozuAPcybuj+BOPE1ns=";
	return MiniRankItemUI;
})(View)


//class ui.mulitpve.MulitPveRoomViewUI extends laya.ui.View
var MulitPveRoomViewUI=(function(_super){
	function MulitPveRoomViewUI(){
		this.listPlayer=null;
		this.btnBack=null;
		this.taskBtn=null;
		this.skillCardBtn=null;
		this.startGameBtn=null;
		this.btnIcon=null;
		this.listReward=null;
		this.txtName=null;
		this.txtTitle1=null;
		this.txtTitle2=null;
		this.txtTitle3=null;
		this.txtMode=null;
		this.txtCount=null;
		this.btnBuyCount=null;
		this.txtTitle=null;
		this.chat_bg=null;
		this.box=null;
		MulitPveRoomViewUI.__super.call(this);
	}

	__class(MulitPveRoomViewUI,'ui.mulitpve.MulitPveRoomViewUI',_super);
	var __proto=MulitPveRoomViewUI.prototype;
	__proto.createChildren=function(){
		var temp=MulitPveRoomViewUI.uiView;
		MulitPveRoomViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.room.view.render.MulitPveRoleItem",MulitPveRoleItem);
		View.regComponent("modules.battle.view.menu.ChatBriefBattleView",ChatBriefBattleView);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MulitPveRoomViewUI.uiView);
	}

	MulitPveRoomViewUI.uiView="eJzNWFtr40YU/ivL9FXraEZ3P9oPaaAbwnYJuyxhGckje9ayZKRRLhvyUNpCuy0ttPS6Ty20UChs96m0kP01dZr8i440uowtOXJKutQERbJmznfOd858Z8angJ3MCeiDfUqOgALmcTRPQP8UHNERm4A+hJqpgAmh4wkDfVNXzxTgTWgwAv3Hp+XcnRkeE3nyCeirCjjOr8mUhnzMLA0omx+SLXfcezofg7MzZYP5An6NCf7CwwF5CPp3YZc53TFyg44Gm/ZS+mSKaTKhI9qbh5v6xq9LJLVYdXGcG+Qv6TOyHVNOG1AVVUGmAnUbSMwaXaDQEoxoeivUs6Th+js0YStGDMGCrvH/hzjmgwI+aC/AJyTmQ2MyJ5g94gPKe04ubEv5vQx675DcjwKyw8islaG70Oa8xGnI6CybNItGaUCSXhxFs94hL7heTMIRiXst1kKcT6H8SVuKaiNkBNEtAKObAEMkoHXVugVoeCNo6Ija0G8BWeXIB121qIo6QtUSQCZqLUs2HVEVNheBriqWqmjZVVoFmta9DJxKGSpwy1mPrTexoaHwXOVXCRuZXdDI0AS0UYe9ZuHn0KgJzXHLPwkaWkjG3h2kjEXhCnomXBzcsMqV67JwgL0paHXAx+EkbapZu2nDtgtxNEvjDCfTAQvbjT+lIQnHg21hvkUddtvos4v1YVfs6TV5AQ7HKZ+zNZxw4wnZkvHio4LJug8pAIfeJIq5VsHynmuV2jOWq/f6gO1MTEXA3I8gGOJ49L+Jejq/7agtUUJQNeu1A5FdUcBwzLa5EggKqupEdlu0g+i4PVTTqfSE+D7xmBhZec69XfVd6eDQFGpjSKW/40VSnq4nMu/txVo4uL5BooIjBOUGeZ8c8crI4ObYI6I/5rcP80RUbRNJbVPbgLRSv/J2m2nzAzFMPNS6XD2XObFarTe4k+yvEyltU5HikB36qIk0aVYtzOgaw2XPEYmsYND1pXKwnEHskqDRnJy25lTo2jHbzXAVwMgxhwNXX/x49eV7f3/6YvHheUYDi6MpGUZBlI1+S8W6b+rV97nRqllx3/woZO/yAPkLJJ6ybk29OEoin915hN8mlM/2Snu661u+wb9xoyx1LE4JDzCg4yw3HgkZz/JZV3y62AkiXQrqAWUBgVJY37++Iz6LP38GsqPQ3sRRrLue7y852ulX0ZmbfqHar8XHv/x1/t3Frz9cfPXbm3ELac4atzTJrc9fXr5/fvnZ74vX3yx++nrx/NUb4kwvd/VQ8u5eNJIq9PKTV1cvPmjWpquhETGWa/OmLvv5p7vknKJzGKrk5jDie83aT+1fUOb7lq2qq+thXW9o7WpI1YVvdrbIaULdgJSW6o1SelJ629rZ8QRHbspKLcyOlbn8WPUZkz900WQXJNXd1TTV1aqrCdvb31u8/OPio2//e90p8lxrTUB8tpT2Zjs3tILY1qOUixkPRpwrZiRMe8MJZoOYEn+Qv8l/T7jxjwWlYDsVbR43+8QdtyeO0XnijluOFxBmZ4v8Ku9kVFUOeb8Zs9jgO7UjVtU53Hxw3vXzdDRUO+tM/wDXhoYA";
	return MulitPveRoomViewUI;
})(View)


//class ui.room.PVPRoomInviteViewUI extends laya.ui.View
var PVPRoomInviteViewUI=(function(_super){
	function PVPRoomInviteViewUI(){
		this.tab=null;
		this.closeInviteBoxBtn=null;
		this.box0=null;
		this.inviteBtn=null;
		this.roomIDInviteBtn=null;
		this.txtWorldInvite=null;
		this.laba=null;
		this.countTxt=null;
		this.box1=null;
		this.boxTips=null;
		this.joinBtn=null;
		this.boxTipsTitle=null;
		this.boxTipsContent=null;
		this.friendsList=null;
		PVPRoomInviteViewUI.__super.call(this);
	}

	__class(PVPRoomInviteViewUI,'ui.room.PVPRoomInviteViewUI',_super);
	var __proto=PVPRoomInviteViewUI.prototype;
	__proto.createChildren=function(){
		var temp=PVPRoomInviteViewUI.uiView;
		PVPRoomInviteViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		View.regComponent("modules.room.view.render.RoomInviteFriendItem",RoomInviteFriendItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PVPRoomInviteViewUI.uiView);
	}

	PVPRoomInviteViewUI.uiView="eJyVVstu00AU/Zdh66axHTtuli0CRapY0IiHUIUcZ5JMmXjCePKiilSKkKpCKSCBEGxYwAIJqSCEqEr5GuoSVvwC83AS153QokRJxp6595x7z7nOOmCDNgQlcA3BHjBAm5J2BErrYABKeQP0+efQAEET4Roo3Vof7y63/AbMbDfl9kLRAD1UY01Qsl3bANEdFPIDlJDWfAfdZqgdmbl22OCHI3QPXqaIBwaWa1iefLv8RhOiRpOBklOwh0NjkrTiV7MpFUTPm+S0PJ6/61O+ncntEfMZvNJpcTh80fYDHsnOa3FZY1wQw4DBWjmswb4sA/arEPOkIH7/I959ZMQPPx4dvgbJjRXOQ2ROlksEEyo2Xyj4lpl3jMx3mqCT5ndlscMYCTMcLdeTJK2FCcnChGOASQTLYRcxuEj6i0wczjBbY9VGQqyNuoTd5Oft5PcNHtbOOVNAnnvubruq3Zp8MttwuJqipovgOjKCEMmkefrG1BtJyGlAzjYLaMGS8UzHnAa07XGlqqSfT1XeFLx1XGc0YSGn0BYnpUeq6umSB6QlMTcohKGCrMugK4alyll0J8GwHzY6fOP8UhOFMILz44oM7jYHSUP9MGgSyjuaF/DU6oZcnSy/ntSCEpYouqIkMpQvlk8Tm4mld+8cSFIOhn2WAWGbqm1zKeP22XVCcU0B4fs73IgU88ygxGgHGoCJOCVwtP/y14vHvzc3Rnvf+LY6CVniRU4pEDYULoSOeJ1Qj64DtqkG2Jw1xsHd7J/2k7g6s7fLYgBkAs8lg3EqS+HoxL+kE7KKLErCyUqJVFg+RaqgI7V6otGnbeEWZXbHmo5lR5gCRaiK+ZG6jyOYMomZyl8oWjqSmiQFZT33H4Er3Mh6P2jFaSaz3XQn8lwjKNT6bQAxJr3/NJwSf9E7W+R4bY3+p+E0Qld0RKVOlKSCGIbT9sdbb+LvB8dbL+Ptt/HD9+pBE+98iXf3/sgnzgyR1wuB5wq1+hg1ZG1gyCAFZ7mPd6xHaO069dtjc41lYlkZqEs8NY8KUv57ogAebz2Nn70a3d+O3334c/j415v9o4PnxztPR1/fHm9vjB784Bfjzy/iww3+9Bx92v65sZmexV6alhDROWilq72MIn218xnRSzZ1imBYi5JD3ZWAEowXfboyFRUJ57uRvJ70/QxHXBWDU06rSzJ4mcHWLECUOx61xKkWqXUwjHJCZ7ku//+Vo1BMutyMcOpuRaVUi2QArA7/Ajv8PTU=";
	return PVPRoomInviteViewUI;
})(View)


//class ui.mulitpve.items.MulitPveRoleItemUI extends laya.ui.View
var MulitPveRoleItemUI=(function(_super){
	function MulitPveRoleItemUI(){
		this.platformImg=null;
		this.outBtn=null;
		this.closeBtn=null;
		this.okFlag=null;
		this.roleAvartBox=null;
		this.openBtn=null;
		this.inviteBtn=null;
		this.roomMasterFlag=null;
		this.nickNameText=null;
		this.guildNameText=null;
		this.vipIcon=null;
		MulitPveRoleItemUI.__super.call(this);
	}

	__class(MulitPveRoleItemUI,'ui.mulitpve.items.MulitPveRoleItemUI',_super);
	var __proto=MulitPveRoleItemUI.prototype;
	__proto.createChildren=function(){
		var temp=MulitPveRoleItemUI.uiView;
		MulitPveRoleItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MulitPveRoleItemUI.uiView);
	}

	MulitPveRoleItemUI.uiView="eJytVE9v0zAc/SrIXMOaf03aCCHRSYgKNg5DiAkh5KVO4sWxM8fp+keROHBHHNkOCBAXuEwCTnwdysa3wEmTbk3adQdySez4/Z7fez97CsQ4RsABzzA6BgqIOYsT4EzBMR6IADh6V1VAgLAfCOAYtp4pwA0wGQDnxbSC9iPoo6vYscR1dAWMgKOZEj+EXC6LCRQe41E/8uXiJMRUTkYpwSIeolaKXw3wJGVbMc1/Q+oGjO8DR91qV6PnxSjLlAXzbi8VgtEat2UV1LrWqahZKnqCrmYVmCNasG6ubGtzUZZdVXYJS9Da2n4KqX+AG9VXOVYapsvSpfe2vth/+IDANa49eVRaVqVka1epemxUj8Y2ymi6VX3OCLovP0W+erMNertbD5fFiC7ZQKTyVKpsbQeYogS1lpI+DI9uaLnWKbmMxW4xHWKBbs42PjrkTbZVGZjzDAzz0hgW7cBEIL4cwLV8HqTBJEgblI/hASI1RrUgVJWl8zbnptgNd2GEnqKRkCiRvxzw5+THxc+z85M3s7O3v3+9n335nu9KcBaibUZYDrytQtOzzMW81HXZHXl/eYyKPTxBubvzkUTtYJezhHni1j58iLBEu1U9r3jyU0mwn8t3EZWWbBSnW+vV+am8RZry7l58fH1++uHv13ezz99mp5/uNdVpA6OtGv9PnWV5Hdu+Xt2qZrmjabVuGeK478oOzrKX2T/gicAU";
	return MulitPveRoleItemUI;
})(View)


//class ui.room.items.RoomRoleItemUI extends laya.ui.View
var RoomRoleItemUI=(function(_super){
	function RoomRoleItemUI(){
		this.platformImg=null;
		this.outBtn=null;
		this.closeBtn=null;
		this.meiliBtn=null;
		this.meiliLevelTxt=null;
		this.okFlag=null;
		this.roleAvartBox=null;
		this.openBtn=null;
		this.inviteBtn=null;
		this.rankingIcon=null;
		this.nickNameText=null;
		this.guildNameText=null;
		this.roomMasterFlag=null;
		this.vipIcon=null;
		RoomRoleItemUI.__super.call(this);
	}

	__class(RoomRoleItemUI,'ui.room.items.RoomRoleItemUI',_super);
	var __proto=RoomRoleItemUI.prototype;
	__proto.createChildren=function(){
		var temp=RoomRoleItemUI.uiView;
		RoomRoleItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(RoomRoleItemUI.uiView);
	}

	RoomRoleItemUI.uiView="eJytVF2L00AU/SvL+Jq1zSRN0iCCXRCLu/XBRVxkWWbTSTJtMhOTSbcf9MlnpeKLoCCoIOiT4MOC+G82LPsvnCZNmrbZ3QrmJTPJnHPPvffcmQA+CjAwwTOCz4AEgpAFETAn4Ix0uQtM2IQScDFxXA5MRYdTCVgu8brAfDHJoW0fObiMHQlcQ+CGwKxLYIBCcSjwELdZ6Ld9RxyN+oSKjyFjfi0mJ+NRr3fSJfLdgDpgOpUK6k4r5pzRNXJZ1VJy2NBzehbzFqebzJyEmG5Nq6/TWh6LcCWxEyPqnJIN6spiyOqCuCnlhVWNPIaPiUcqY6R/0giCjwwYPxIc6mL9PFvnvVGNqtbso1PsrasxUjFaIUVprkjZxwPsHQ65gHEsXoJlsAPn6njI+niPeWx+9k5dgzLUi++CeKlGViRgM8qfkjHOdlYOs9NHwJBHnHm2FqYch6KIx7eU0cgsBfVCuQ6L/vcfeqjCWU8eL+qXK9PlcrdabLheHV1Jo8hqUZWQefiBWPL56dttBDW4YFi6M8B0pcOeME8sMqztuYTiCNfWJkHZ1rJGM4u17CGhA8LxdtFGL3vhVg7ezR0sF0VBVJA7bUtoKqOrHFfPr4LiUimuBUqsfgf5+BCXDZfMXl2++3jx+83F+etkNrv8+afCfki1NbVkv9IwzC2ytB+sZzuBOiBWyCJm850j9AgTsJUvb04Oatdn58RiHjfTu5d8/Za8/3V1/unq+9vky4/kw+f7mwnKXaVRV/5fgppmG7p+c4KdquY3sv4p6nIgmH+AIgFeHbprfWYj6o7d+J+stqsUwz0gwcJnx9O/KY8oLA==";
	return RoomRoleItemUI;
})(View)


//class ui.pvp.item.ItemCellUI extends laya.ui.View
var ItemCellUI=(function(_super){
	function ItemCellUI(){
		this.icon=null;
		this.txt=null;
		ItemCellUI.__super.call(this);
	}

	__class(ItemCellUI,'ui.pvp.item.ItemCellUI',_super);
	var __proto=ItemCellUI.prototype;
	__proto.createChildren=function(){
		var temp=ItemCellUI.uiView;
		ItemCellUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ItemCellUI.uiView);
	}

	ItemCellUI.uiView="eJx9kEFPwzAMhf8KMtdqtN3WQa5cQIITEmJCCGVZmlpt45JmbKPqf8fp6DbtwCWOnfdevqQDv280CHhFvYUIGkdNC6KDLa59AWKRRVBoNIUP+z4CVWC1BvHejcbHWhp97tyDiCPYDWtbomWNorome7PBzxVK+kJryo20ZtJYA30f/Zs1XQxhofwxZRz8LR3rUZGFy1uMrtsh+UQeHNKqgtySsSbzsXsbunOCJ7nS1QXB/PCcND0SzO5GAr/zrPaai4AkjuOA4x2V+p4qCorrRC2yeHacs/sEFjJzsv4Ff/gguT107HpG5ail3F8t5YNGdqsxb5rleZrxRFZohndr67Xjj/zofwEcO48N";
	return ItemCellUI;
})(View)


//class ui.pvp.item.SeasonListItemUI extends laya.ui.View
var SeasonListItemUI=(function(_super){
	function SeasonListItemUI(){
		this.bg=null;
		this.divIcon=null;
		this.txtDiv=null;
		this.list=null;
		SeasonListItemUI.__super.call(this);
	}

	__class(SeasonListItemUI,'ui.pvp.item.SeasonListItemUI',_super);
	var __proto=SeasonListItemUI.prototype;
	__proto.createChildren=function(){
		var temp=SeasonListItemUI.uiView;
		SeasonListItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.season.item.ItemCell",ItemCell);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(SeasonListItemUI.uiView);
	}

	SeasonListItemUI.uiView="eJyFUstKw0AU/RW5bkM0aatttipY0JVFLCIySW6Si5OZMDNpo0XoQnDlwm/wM/wh/QsniSmxiBIYcl/nnDl3VmDuC4QALgmX4EChZKEhWMGSYpNBcDAaO5AhpZmBYDx8dCDKiMcQXK+6yWnOUuyP3kOw70DVnH2YBVO2PUxtr74jYf81Mi3FXkm3DxR7biHqWo/t0fmTZdjSHPZ49juamBbTSIoeXl1jIsqkmltp7qiLrpqoz3XGQuRbXP6k4fK8yYbMG2wuZSpzTAs7YrCyVPDx8vaxXn++P30+v9psLkuNs0zJMrVzCeMav5MngoUc402yEzvwHUikMBf0YBX5wzayyOcUKallYnbm7BTJgkeSy1rDbnKAYRzZDOOU1vZyTAz8Z+LY396VN/hlQSExaShBkWJFTDS7+uEZabO9ngZ44A07l3jbo7BAZqztvz8ng/kR8h/+q1IYyutqLuOSo3ZbYS7ZZrc3oVDEqGYtUhtYlTf2+wKQvPCn";
	return SeasonListItemUI;
})(View)


//class ui.pvp.item.SeasonRewardItemUI extends laya.ui.View
var SeasonRewardItemUI=(function(_super){
	function SeasonRewardItemUI(){
		this.txtName=null;
		this.txtGuild=null;
		this.txtStar=null;
		this.num=null;
		this.headImg=null;
		this.guildIcon=null;
		this.divIcon=null;
		this.txtDiv=null;
		SeasonRewardItemUI.__super.call(this);
	}

	__class(SeasonRewardItemUI,'ui.pvp.item.SeasonRewardItemUI',_super);
	var __proto=SeasonRewardItemUI.prototype;
	__proto.createChildren=function(){
		var temp=SeasonRewardItemUI.uiView;
		SeasonRewardItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(SeasonRewardItemUI.uiView);
	}

	SeasonRewardItemUI.uiView="eJy9VMtu1DAU/RVktqE4cd5bQGUkYFOEWiE08iR24jaxR4lnOmU0UhdFrCrBli0LNizYw+dQ0f4FdjJ5MIQOL3WRKL6Oz/E597EE8mRKQAieMXIMDDAtxLQE4RIcs1imIAxMxwApYUkqQegHKwNEKctiED5fNidHOU5I/+gJCKEBFtW7D1MeMa7+j0SeC353xsYTzCTD4s54crgz5YnCKNlLslswhQ+gYdkGNJAFVivjWjK3IjM9f4CCEp4QxVPhbwMKaqBg6K7xYfwTxiM8IdkGhmlWIJZnteItRwHOcaFOyIV8gnPNm4tZSZ6mhZgl6heKs5Ksgw84nmQkboON+0ghUsHlnvJIgdr1SoE+ZlEhSkHlrQP8kDAFHolMaLrbgeMo61UEZyzRgjJC5VYNTp0+ZKJWgxnYPQ27M10DBpBkoS9w8erj1y/vLt6cf/vw6X9Ig78jjVLPg/A6aUMpdiplnjuU4l/WypBHCFVIPnJaj2y/Z9GeVF+tQ/tI37SUhTgi9xoFvucg2MWV8JsqC0ophOhPvbMqxU7QCnZQI5jPcvCDo9rPnLCMjaG57u12injbiGy77iHUDRC3Lb+U4HiU9wH1HuZRKooDNXN2nGa1X622To81WdA1rA0bskQX+igSvEend/+ezq4r0IUdndvSxWy+Qeb+E5lVp8zze0WK2jyVBJeCmzpVC8YT/Wykykbb2sCqZ6aL/G7W99vgPpt3XXB5/v7y9PTq89nV67c3NwLp8Ah8sfoOYGY1EA==";
	return SeasonRewardItemUI;
})(View)


//class ui.sevenDayTarget.items.dayListItemUI extends laya.ui.View
var dayListItemUI=(function(_super){
	function dayListItemUI(){
		this.activeBg=null;
		this.greyBg=null;
		this.redPoint=null;
		this.greyTxet=null;
		this.activeText=null;
		this.allGetImg=null;
		dayListItemUI.__super.call(this);
	}

	__class(dayListItemUI,'ui.sevenDayTarget.items.dayListItemUI',_super);
	var __proto=dayListItemUI.prototype;
	__proto.createChildren=function(){
		var temp=dayListItemUI.uiView;
		dayListItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(dayListItemUI.uiView);
	}

	dayListItemUI.uiView="eJylk19Kw0AQxq8i4+vS5k/T1jxaoRZUBItYRGSbTpK16W7ZbJvGUvAwvgg9gAdSvIabxLSllgo2sIEZduY3X+bLHFQ6RnDhlmECBMZSjGNw55CCW7MJzMA1zTqBhA1UCK5VMwhI5AOU3aKuCHRliCwIFbgnuopyLxSyB65RccroLo8WBLyQRQNw7+clujOiAW6xTSNnN9Zk2yIwpVLfp55iUzwNdEk8ZFxnYpwiP6Npl8oAVXXCHmVCI7My5vkl9oxtyTQTDGI2SfaCxYL8e4BAYvo33joEX8vpltkomRIH14JxtY/KMcmZm80vaB+jreaWk3e3mytxZsPYFNedYQZSONMLha/l8uP95fP1bWPLjvaEL7i60eKKTlmkL18yT4pY+OqoR8+R6RJPRCJrfExtxzN8naERCzIFHnKlvXPQuIUZutmkOweOlRRDbJUz9JsN36mv8vmHPkSTnz/7NV3t9JdZ/Fz1ta2jqI2qM9owVkR5MNG11VbIOMZY/b3zJ0ZFX5+fxT8svgF3HziZ";
	return dayListItemUI;
})(View)


//class ui.sevenDayTarget.items.rewarListItemUI extends laya.ui.View
var rewarListItemUI=(function(_super){
	function rewarListItemUI(){
		this.icon=null;
		this.countText=null;
		rewarListItemUI.__super.call(this);
	}

	__class(rewarListItemUI,'ui.sevenDayTarget.items.rewarListItemUI',_super);
	var __proto=rewarListItemUI.prototype;
	__proto.createChildren=function(){
		var temp=rewarListItemUI.uiView;
		rewarListItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(rewarListItemUI.uiView);
	}

	rewarListItemUI.uiView="eJx9kF1LwzAUhv+KHG+D7dpthdzqhV545RBERGJ32h7aJSU53VZH/rtJcR+I7CaQw/s+T3IOwGOPIOGVcAcCemt6B/LgBZQNdWuQ74dj5GmjarzIwAgyFbCfTteSDhmHW9QPalwpWyMnA31SaXR+1+savBdXWYuJVQjY0ZobkMu5gK2yIR0ZcHIo55BdwrhnO2BCjJsYSHrS7SQS0CDVDUfEpXQVGn+c8+Ukzf6RlmbQ/FuJrjDK0zQ+g61p8d50JsZuZ0WxSIvTHGR+9mdhM5XR/ELfeL6F1jOV1jhT8c2bekQK7fLIy2dVlUXel4n7r1TnUIDqqI6ftxPY+w//A4V6i/E=";
	return rewarListItemUI;
})(View)


//class ui.sevenDayTarget.items.targetListItemUI extends laya.ui.View
var targetListItemUI=(function(_super){
	function targetListItemUI(){
		this.greyBg=null;
		this.greyLine=null;
		this.activeBg=null;
		this.activeLine=null;
		this.jumpViewBtn=null;
		this.getRewardBtn=null;
		this.targetDescribeText=null;
		this.targetCompleteText=null;
		this.rewardList=null;
		this.unopenImg=null;
		this.hadGetImg=null;
		targetListItemUI.__super.call(this);
	}

	__class(targetListItemUI,'ui.sevenDayTarget.items.targetListItemUI',_super);
	var __proto=targetListItemUI.prototype;
	__proto.createChildren=function(){
		var temp=targetListItemUI.uiView;
		targetListItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.sevenDayTarget.items.RewardListItem",RewardListItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(targetListItemUI.uiView);
	}

	targetListItemUI.uiView="eJzNlMtu00AUhl8FDVsrsR07Fy/TSiVS6aKJUCuEqol9Yg+1Z5zx2EmIsqcLVjwEKyTWSPRtovIYjK84tyYIIbFxfCZn5vzf73NmicQiBGShNwRmSEEhZ2GErOVKQbZHfAdZb5dlyiDALtRy0AJZqoLm2XNGHOEhq6tqCkowl+kuh0XflfnRPaEyjiABeo4XI8xdEM2Y3AmCmd4IaZZEPsAFJ7IgUpWWqaQPuewBcT2BLM1QVyvlWSlGK9Ni9tp1BZeEwlEN80zEsQLPsGJbkASO02r/kDbXcAqvtst71Y+FYHSrSLeTFWn3OhW0pnfKgu/jIEzbpi/owYpjQe9cVlCHJGHiFlm6VrzfyLOlfh+PwZd7aw6Y6r4OvNpxoqjqY+rG8q/mmSf5I2jugk9nhQobqAAuZagNs4xusmi1eveXlsha1zDD3DnmCYfkfzDFn+6YUrdk05DLTNGmHbkbulGZYba7pRkiK3MOkc3JGEYwF3KzSH8s9PT14en7l5+Pj+uP3zRVvtYwW7K1J4yKoRwSebaeR3LTa2JzFrGJeHGLXwFJZTOfpaVe4kkHGx25MmapO4LHoCDsEzczAiZio9v3kfTyeer2KhRd0zdRzlgQ+iC2UNY/Pq8fPuVAvaamHiZRTyGZTDpdVT1Akn+aTRYSie27wci/il6hGLpZovCsP4tdyVDq8P0+5sO8Z2wWBIw2kyhbL2+rENsg+0FTf6N1tX29mB2enj0QENRV8ZgKEqQpAXNiH6LGZjM2iNwQNa4rccUBHKgDfFSengZoa0z33Y71Kc2xY8pCoIOgdkWfMB8zIPeYTElhBKa2x6qrI4/Kq+OIIqNQZFYfwsPOBYg/VbQoRjY14RcN/IhM";
	return targetListItemUI;
})(View)


//class ui.sevenDayTarget.sevenDayTargetMainViewUI extends laya.ui.View
var sevenDayTargetMainViewUI=(function(_super){
	function sevenDayTargetMainViewUI(){
		this.timeBg=null;
		this.topBar=null;
		this.dayList=null;
		this.targetList=null;
		this.targetTypeTab=null;
		this.timeText=null;
		sevenDayTargetMainViewUI.__super.call(this);
	}

	__class(sevenDayTargetMainViewUI,'ui.sevenDayTarget.sevenDayTargetMainViewUI',_super);
	var __proto=sevenDayTargetMainViewUI.prototype;
	__proto.createChildren=function(){
		var temp=sevenDayTargetMainViewUI.uiView;
		sevenDayTargetMainViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.common.TopBar",TopBar);
		View.regComponent("modules.sevenDayTarget.items.DayListItem",DayListItem);
		View.regComponent("modules.sevenDayTarget.items.TargetListItem",TargetListItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(sevenDayTargetMainViewUI.uiView);
	}

	sevenDayTargetMainViewUI.uiView="eJydVMuO0zAU/RVktp6QxHk0WZYRMBJISK0QI4RGebiJhzSOErczZdQt8AWAxIYdOxYsu5ivgQ6fwXUeTVJSFaFWcePee865x9f3BolVRpGLXjB6hTDKcp4VyL1BVywUMXI1jVgYxZRFsUCuZahrjIKYJSFyX900uWdzL6IHk4s3LIWggM/nPH2wYBehHymXWYR6uBDH3tLHOQNkRAzcfNF6jQ8TrZBr2xhdAxduWPWRM0DqRxeakqVdVtPSe6ymjk2C5dPA2lFeTR+VxLpDdtQjou2oC7qk6am3mnp5RIWUEK/8SK81dGh1R1Yqn6QrTjWPKZB1ggBHNdvaVRCw9HLIEGxOxyXVIT2hxy9ZEUtv/lZ1YmJNxycEa1pHFVG7oqY8GwNXR1VN3ezni1TKgK05DxcJLZTqQJQ6swv2lBVi32JZTWlxW6ChNwWG3qrOWU6CnCcJIE56x74syv2muMwL6Dmgko7LujnU0DX0maDzPUkGqbpNszqS1KFK+34rDLAK5bQHnNM0pPm04qxeJB1bcgE6Dbv+/VI2m9qKdsh6/fqIc0blHFFbnSPV3vVGqem/3DNbHYY9aF4Lvu/fP5o03QcY8qlvwdTz98eCVRtg7wwgI6NvgESsMsvqkKsODA4IGC+EgKatjEg8nybAgn69+3G3+Xb35fv263u8/fB5+/HT79vbn5tNEzSB2yTHUf363AtDBhAuUnH5aeIe8RTcRM8Y+F3wmbh37j2hrPn3IU94LvnuO47hQ/Pu1sC0Z0bYrP3LJDP3x0U1KEeO0bauFNeOiym9lg0h5AJzSXc1Exq+e/0hfAZq68qs6m1QeyBll6pnpqOZsONz2SciX1CMvIRFpc00FfVh/gEpdRe4";
	return sevenDayTargetMainViewUI;
})(View)


//class ui.shareGift.ShareCardItemUI extends laya.ui.View
var ShareCardItemUI=(function(_super){
	function ShareCardItemUI(){
		this.lab_have=null;
		this.lab_share=null;
		this.card=null;
		ShareCardItemUI.__super.call(this);
	}

	__class(ShareCardItemUI,'ui.shareGift.ShareCardItemUI',_super);
	var __proto=ShareCardItemUI.prototype;
	__proto.createChildren=function(){
		var temp=ShareCardItemUI.uiView;
		ShareCardItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.skill.item.SkillCard",SkillCard);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ShareCardItemUI.uiView);
	}

	ShareCardItemUI.uiView="eJylkD1OAzEQha8SDa217CZZErlNQwFVJEiEEDLeSWzFWa9s549oWwRC1DQ0FFTcgILTkJwD52eTCAgN7t5o3vN8bwpukiFQOJM4AgKZ0ZkFOoWRTJwAGkVlAgJlVzig5SjMCXAhVQL0YlpYT9g1ql3vxPviCoEx0PiIbKLCOoEhM96h2PWVYEP0Jodjnwzzh9f5832pelj1M+uM7mFDK71YPqjV43Kltpn7O7YnRT6/o1PXlDe4Vd51KrnRVndcqc2OUXo3L/I6y+cnLOVCmzbQMIgL1SqUkt3Ub3NMHRrIc/I3by1c8vrTRtok54ZlQJ0Z4D58K5jZ4Z/d3X6+v80+nmaPL6X4ZwcJi3lY+b2DavSfDvZzNntSqQYzyTfWFWlY0PDVhuVM4bLL+lq01sIMUif7i8S+TgYKbWAXyYF02A+2n+T5Zf4FV9rR0A==";
	return ShareCardItemUI;
})(View)


//class ui.shareNewCard.NewCardItemUI extends laya.ui.View
var NewCardItemUI=(function(_super){
	function NewCardItemUI(){
		this.imgBG=null;
		this.imgIcon=null;
		this.img_weapon=null;
		this.imgNew=null;
		NewCardItemUI.__super.call(this);
	}

	__class(NewCardItemUI,'ui.shareNewCard.NewCardItemUI',_super);
	var __proto=NewCardItemUI.prototype;
	__proto.createChildren=function(){
		var temp=NewCardItemUI.uiView;
		NewCardItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(NewCardItemUI.uiView);
	}

	NewCardItemUI.uiView="eJyN0k1rwzAMBuD/orNpPtpuq48rrPTS49gYI5hExGKJk9rO0q7kv09NP8hhXQO+CPuVH2QfwO9rBAmvhC0IqG1VO5AHaCnzGmQ0DwVopFx7Lp7CTkCqqchAfhwu0XWpchxm9yAX4WQuYAfycSauvWLu9a0sR6jMn1cccV9kuFTOoXeBx523DQZpVZaVCXizKF6sKjFoKEmVzZJwUpv8mKMfXFliBkQPIo5PCwbUGV+vTKor+w6yx5yqt77qOjGefyWv08rcRJPHktILO8kasyVl8jN4HGXzl2W66CVRPB9QkhZVPdQUfFfD4WCpyaC7DpEn1zZb+p8R3UdEZ8R0gNj0X+YWwGllkY8s+eGODIPtiGF8dr/Yk9F4";
	return NewCardItemUI;
})(View)


//class ui.shop.ChestListItemUI extends laya.ui.View
var ChestListItemUI=(function(_super){
	function ChestListItemUI(){
		this.coinImg=null;
		this.txtCoin=null;
		this.txtDmd=null;
		this.chestIcon=null;
		this.sendImg=null;
		ChestListItemUI.__super.call(this);
	}

	__class(ChestListItemUI,'ui.shop.ChestListItemUI',_super);
	var __proto=ChestListItemUI.prototype;
	__proto.createChildren=function(){
		var temp=ChestListItemUI.uiView;
		ChestListItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChestListItemUI.uiView);
	}

	ChestListItemUI.uiView="eJyNUl2PmzAQ/C/bV3p8E+CtTYUUqbqXStVVVXVyYIPdgI2waXKJ7r/X5iskSu9qHtAadmZ2ds6gXhqEFL4zPIAFTSsaCekZDqxQFFLPCSygyEqqIPX95NWCnLKqgPTneWp9/NwpJfiy+wVSN0osOOq341gzmhcv0ILoHtqmJiXeYjkj1DWS3DOuOyQVjd2x5y0RR0Z4WTD3oeElXFO9Wm9SxMFA4V04XNez4A9pdUcuGN/UBvKG8zfjWzayyT0efkD60Y2dC/VqZQHhORWt/uQ8hFP11FdLVV/JFqsbVd7goe9dRBmhgyh1VGutS7coPKreaeO1VK3Y41pUwvz0IQlD4gUw3UO6WKgxcSe4+sZOaDwdKt31qWXEaMknlCzL1lmmb0jFSmNAjlxhC+8N4DvxuLpkHiFZTvClLuYBYn0W4lZX4oJ/i9v1ZyGuwp2C9zbuJmNA3dW8ZopSbfI+y+OiiZSopG0Eth3aTGHN9A/2FLbnaNp+TirsdxyPxdNY/N/670n0Ha+XGIWzef4l97moa61Ep3CHvDzRzmSf3EY/XpI83mNZhYMP0eyDRF5cxb3S0J3utNeUcZRoT/k/UU2tC16OvG8N+0s/fwGsy17S";
	return ChestListItemUI;
})(View)


//class ui.shop.DiamondListItemUI extends laya.ui.View
var DiamondListItemUI=(function(_super){
	function DiamondListItemUI(){
		this.icon=null;
		this.monthCardTips=null;
		this.monthCardText_1=null;
		this.monthCardText_2=null;
		this.monthCardText_3=null;
		this.txtName=null;
		this.txtMoney=null;
		this.txtCnt=null;
		this.txtDmd=null;
		this.doubleImg=null;
		this.diaIcon=null;
		this.giftIcon=null;
		this.sendBox=null;
		this.sendIcon=null;
		this.txtSend=null;
		this.labTxtSend=null;
		this.monthCardTipsText=null;
		DiamondListItemUI.__super.call(this);
	}

	__class(DiamondListItemUI,'ui.shop.DiamondListItemUI',_super);
	var __proto=DiamondListItemUI.prototype;
	__proto.createChildren=function(){
		var temp=DiamondListItemUI.uiView;
		DiamondListItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(DiamondListItemUI.uiView);
	}

	DiamondListItemUI.uiView="eJzFVk1PE0EY/itmvBY6O/tJb1AlkggXjIEYQra7092R7U6zO4UCIcGDiYkhejDhqgdjjIkfB6/6awr4L5zZz2l3sS1ihAMdOvM+z/PO+z7vHAN22MegBR4TfAAaoB/Rfgxax+CAuMwHLQT1BvAx8XwGWqpmnDSA45PABa0nx/nRjZUBYzSUTx+ClqItNcCQ/1VQYyxan+xTts2/MGG22OILiBanI631bA9P4qQwC4pawiCrAeI9EvIjsU/7zQHZfUrCDnHJYj/0wDjOSaNUUgtgWakQyPnu2xHfR5xErh06Po24FCi4p6utZCUHXaHDiYjIQklE1TDyiD0aMr9tR+4jwrfNqn0BKUqqXjWNUr7I/IR83+14E9p1RWZZHx5qWXjVqIQUSUhCymEe2h0cVMOgnCUsWKpaVTsesl2Fn2b8A//i8tPL0Y9ziTLicbp89yY5wqLC0hXfuU6ciMa0y+5s2w8w4UccGlAR/G43+RG3FRBP8I+SWHOQFjgZae0a0qgkregQ3jblAHfnYYxMq2AsSq2OsVoyvvjy6uL8/dXPN6MXH9Htk8/zvTOFv2pmjVwWslJ0HBuyDbuHS9Kj12eXH75CUS0xi+gebucE7qNlwyj/zy9NEmTJgnJ5fxa0CleXV01JkINDhqOp96EK9sl1SIJ0SdA6DfFhoQgJeyl8CY7xvFniZ+Rppj2OyrwrhiXRbHPgnCT3QFhJuIU1IymbmoSraP6E31RInvClMuEKNCQl93ruhJJbzXelS2vHCVKzMi9q26WDToDXesKcM48N7NAb8LPNtk9CHONmbroxHfApE3oV462DUoV6jqXppesWN+sSey0dYxmmQ3vcIgRIF4fekT/gHFx7cmBa00DN9BJUWIPpkS77a9CaeWqkxld2V4xDV+ybeZDm3mNJb5XqI+LI5yRjkf/KS0LTp0/TBMNQZZLj2bDjGLO4KSo0GuAmYbgnpmzTo4Gb4cWOHeDkyaFli+TFoU1rjixDsOxySzbXTc5FtqJqlyuqbsHONV0O5+9yfQm7iWvMNeRSGWVtGcV4C+zOowkd4Or721+nz6oj4p9rme2NkY1rs7QrS699EIqJLY2+59+uPr9T4Oj0LB3a/0FgYck7ye9v6TfYLQ==";
	return DiamondListItemUI;
})(View)


//class ui.activity.item.GoodItemUI extends laya.ui.View
var GoodItemUI=(function(_super){
	function GoodItemUI(){
		this.labName=null;
		this.imgIcon=null;
		this.labCount=null;
		GoodItemUI.__super.call(this);
	}

	__class(GoodItemUI,'ui.activity.item.GoodItemUI',_super);
	var __proto=GoodItemUI.prototype;
	__proto.createChildren=function(){
		var temp=GoodItemUI.uiView;
		GoodItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(GoodItemUI.uiView);
	}

	GoodItemUI.uiView="eJyFkU1OwzAQha+Chq0p+SFN8A51AZWADRJQIRZu4iSmrh056R9VFqxYcxsuxIJbMGlJYxAVWUR6Y795M5/XUK0KDhRuBV8AgcLoogS6hoVIqhyo63oEci6yvGpEVBOIcyEToA/r1jqcsozb3hXQEwJLoBFp+5yGBMqJUHjd8AUzyfFMHD0JNZkxlfUKlaG/FM/83AjsDQ7xfNL8oEuPoromu9BLNubyV6jrbGODPuZqk9wZVgBNmSw5+bHQnBlsIdn4mk2bySu+xAD4fH37eH9BrefcpFIvsJaLJOHKGsNDf6pVdYPTYrv+VuHNKxEbXeq0OhixCy7QEmupm6DDdPNhhak412YE1OkFrbpvlRRZwyfmquIG7GX/JBx1u25X64ftZmKaDWNtT92c7Q//D2z4/ZzdewaRRXGgZ0hgh9F3nOY1K6MnfNAicMMwcMJdHahvIXVspK1C15kRTNogfTdNvXA/SLfDaDa96/qx/gKefeN6";
	return GoodItemUI;
})(View)


//class ui.skill.item.AttributeItemUI extends laya.ui.View
var AttributeItemUI=(function(_super){
	function AttributeItemUI(){
		this.img_icon1=null;
		this.lab_content1=null;
		this.lab_arr1=null;
		this.lab_add1=null;
		AttributeItemUI.__super.call(this);
	}

	__class(AttributeItemUI,'ui.skill.item.AttributeItemUI',_super);
	var __proto=AttributeItemUI.prototype;
	__proto.createChildren=function(){
		var temp=AttributeItemUI.uiView;
		AttributeItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(AttributeItemUI.uiView);
	}

	AttributeItemUI.uiView="eJyVks1Kw0AQx99lxJOhzWcbc1MvCt4UUUTKJtkka5PdsNl+WfoEngRvHsS38OLjiPoWzrakXaoHTQJhZuc/85t/Mgc1qylEcMHoBCyopagbiOYwYakqIHJ9z4KCsrxQEPnewoKkYGUK0fW8VZ5UJKemdIYy24IpvlyrbeRjZkwk1rMqH7BEcAc1zZBxTJGmoarpKjpVckS7iagqwbu6qDtig1zw/JZ1ap6DwYL9CE8KIa8gsjtBG10uo8XCWvOdY9ctPGeF5/trPGe/3/KVJB7gZEW50ogaCrOfT/f4fL2+fDw+vz+84YEYU5mVYoKHBUtTyg06F3ky7HHG7ujKDR1h5YFkpMTCRJRCD9shvb4TeJiJhbZV72/CHx+K6Ta8s4RHFfpXkwTLwt++yymJaWlqN+sRKTerhXj9k9Yk/DEG2YIemskaFpdYkZGyoaa5JE0NY/eCXf0jKCmG9Kid4/qh7aTrPETeXwl7cZbZIRLe4P0N0YDoPw==";
	return AttributeItemUI;
})(View)


//class ui.skill.item.SkillCardUI extends laya.ui.View
var SkillCardUI=(function(_super){
	function SkillCardUI(){
		this.icon=null;
		this.box=null;
		this.waterBg=null;
		this.waterNum=null;
		this.numBg=null;
		this.iconNum=null;
		this.nameBg=null;
		this.skillName=null;
		this.level=null;
		this.numTxt=null;
		this.starList=null;
		SkillCardUI.__super.call(this);
	}

	__class(SkillCardUI,'ui.skill.item.SkillCardUI',_super);
	var __proto=SkillCardUI.prototype;
	__proto.createChildren=function(){
		var temp=SkillCardUI.uiView;
		SkillCardUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(SkillCardUI.uiView);
	}

	SkillCardUI.uiView="eJy1VNuO0zAQ/RVkXkNpkqab5o1dCVip7AsIsUKochM3Ga1jR47Tdqn6L3zGIvE78B2Mc1tvaGl5IFbVjj1nzjmeSXdE3xeMROQjsA1xSKFkUZJoRzaQ6IxErj9zSMYgzTQGF+HeIXEGPCHR510Hvc5pymzsPYlCh2xJNHae1FlThekQS4HZ5R0IjPCL82vN8pf1r8WGiYzKUSFS8pR47/SEl3I7oBvXdC+mHccSM86S2qRvqGbqMj2kqoJFmVWQQC3JVnHItu/WQrygN252LJKbKj/EIqo8HHg2QCriTKpb9DcKuuhTHZ0S4k6aDoRhR48Uhx2agzfuWfbcqV9XnY3tZh7x1B55ra9jXk5yBg2naw2T1w+ToDk72rgcRBpnTKSLZTq4XW9i887pkvE/eJteur7FG3S8Nc8NkiNKsy1WJL++Pfz88d1I0UresSvJpcl87sVm9fvIbctwyEoK/R6+4oE7ayJEvYNYyVKu9LNb+pYBouOuXnJhlrlRDqnxzNlKk5N2/PHQTtB3kbN1DWidzNej8N98dMpbH9P/6KMfh9njOzaxhvwDWuideMH0LMGPF/9KAeW2zFX94M5Smv8SrSr2F8mvscoVh2Ko2mtEm9tvB0hTNYfSaF1TXhksxefIJG9xks2nneIyY8yINekJKBZrkAazZkpDjPr3+y+4fgNV89ZM";
	return SkillCardUI;
})(View)


//class ui.skill.item.SkillCardMinUI extends laya.ui.View
var SkillCardMinUI=(function(_super){
	function SkillCardMinUI(){
		this.bg=null;
		this.icon=null;
		SkillCardMinUI.__super.call(this);
	}

	__class(SkillCardMinUI,'ui.skill.item.SkillCardMinUI',_super);
	var __proto=SkillCardMinUI.prototype;
	__proto.createChildren=function(){
		var temp=SkillCardMinUI.uiView;
		SkillCardMinUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(SkillCardMinUI.uiView);
	}

	SkillCardMinUI.uiView="eJyNjU0KwjAUhO8y62BLQZHcwAu4EZG0fSSPtmlo0j9K7m6wCm4EN8Pwwcy3IayOIHFlmiHght55yA0z18FAno4ChlibAHnOo0BluK0hb9tneOmUpu/lpIaES52Yb9imrryn4LNASxhGyhJt26xju7dHyco2o7I6Lw7OasQofr+vkIXA8srdxFVv/3YZqpV9W+7xCZ3ZVW8=";
	return SkillCardMinUI;
})(View)


//class ui.skill.item.SkillGuildItemUI extends laya.ui.View
var SkillGuildItemUI=(function(_super){
	function SkillGuildItemUI(){
		this.henIcon=null;
		this.isTuijian=null;
		this.list=null;
		this.guildName=null;
		this.guildMsg=null;
		this.isUse=null;
		SkillGuildItemUI.__super.call(this);
	}

	__class(SkillGuildItemUI,'ui.skill.item.SkillGuildItemUI',_super);
	var __proto=SkillGuildItemUI.prototype;
	__proto.createChildren=function(){
		var temp=SkillGuildItemUI.uiView;
		SkillGuildItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.skill.item.SkillCard",SkillCard);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(SkillGuildItemUI.uiView);
	}

	SkillGuildItemUI.uiView="eJyNVM2O2jAQfhf36gVsIEtyq/awXandy27/VK0qbzIk3ho7sp0FFnHuC+y5D9B7T32etq/RyQ8kFCoAKZHNzPcz34gV8cscSETeSZgTSnJrckeiFZnLxGckOh9ySjKQaeZJxNhkTUmcSZWQ6NNq03o1Eyl0e5ckGlCyqJ5dHPdFaqzHl1L9Qn5+kBp0+lRkkMherlPEcPIJLq1EfMJHlDPKOWUh2dWwpidw8wnbZ7yXwnjZsJ2GMwqCIzj4cywUfCDRGTuGOWq04TQehcWiDPRVbDTZ51gUCyn0/lwGtP6ynakMuszXh6h5RR0MzzfU0t0W8gE5WnIldFpga/8iw2wc9LdqfF26N7jX0vmDRIxtw+flCGtOVZe7XMTVwMY4ZAs5CI+nYdcQP7RqN6WcC2GTLmU1/Y+YVy9oo6gOttBezsrGmUkKBa5X+elJD7NeF0uLqsqCTsCiv7uOw1tY/OuwSTGcbC2y8TbRtEDR1yUgJb7sjepXa46HlEyN9jcYKp54fcK6l1YKhYWxUaaEejGtPngjlEzLgGLQvlLY6rs8JHDSKMSw58Ym763ISeRtAVvFIxbsKH7j0lbwn+cfv77+/P3tO16ZR7BTZeblbsbWqFKgdK/8TFXEDerG2zjY8Tb4v7dwOg7ZGG/uTRlyDbPxqWDqydGVPmP1TgeDdqffOjhln10mlwb/fDJ8NEt9t/4LFOebpQ==";
	return SkillGuildItemUI;
})(View)


//class ui.skill.item.SkillItemUI extends laya.ui.View
var SkillItemUI=(function(_super){
	function SkillItemUI(){
		this.card=null;
		this.bar=null;
		this.zhezao=null;
		this.isUse=null;
		this.barText=null;
		SkillItemUI.__super.call(this);
	}

	__class(SkillItemUI,'ui.skill.item.SkillItemUI',_super);
	var __proto=SkillItemUI.prototype;
	__proto.createChildren=function(){
		var temp=SkillItemUI.uiView;
		SkillItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.skill.item.SkillCard",SkillCard);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(SkillItemUI.uiView);
	}

	SkillItemUI.uiView="eJyNUVtLwzAU/ityfK213brN9VHBCygIU0FERtZm7WFpU5LsTv+7p5nd4iZoKQkt57ueLZh1xSGGN+RL8KBSstIQb2GJqckhDvs9D3KOWW4g7nSC2oMkR5FC/LFtoQ8Fy7iLXUMceLCyZ8vTG3qgZ1jSPF1CXM5xPGMVw0nmV2VGcI0bfqeQqCEMvPYFRz4c1LW3lx01NDdMpUfSoZUmuQVTNJbsJtS8NFg0uEKmc8G1b234aHjhH6hcgWclM8W1viaeI4nhLt/VIV8UtIITO/4ja/XNNA5Ps1LIyGsON2ng+vit34uuNdBc7qYWqHEiCDRlQvPW0SbnGyYPphJZFLJsNpCuEvHv+jvdv1z1I+sq2peP+lXz4zZIN5PzldV1GR/ZhIuTpvfrbHN2B07TL3xlCGKaK4bOpdtiSKCpLM2IkjUb2n3R2BMmSmo5NWfv7J4jQRIpZMN4fmsf+sMEZrYrXhquyOdn/QXwQ/pn";
	return SkillItemUI;
})(View)


//class ui.skill.item.SkillUserItemUI extends laya.ui.View
var SkillUserItemUI=(function(_super){
	function SkillUserItemUI(){
		this.bg=null;
		this.btnRemove=null;
		this.noOpenBg=null;
		this.noOpenLock=null;
		this.startList=null;
		this.skillName=null;
		this.skillLevel=null;
		this.noOpenMsg=null;
		this.card=null;
		this.noCard=null;
		SkillUserItemUI.__super.call(this);
	}

	__class(SkillUserItemUI,'ui.skill.item.SkillUserItemUI',_super);
	var __proto=SkillUserItemUI.prototype;
	__proto.createChildren=function(){
		var temp=SkillUserItemUI.uiView;
		SkillUserItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		View.regComponent("modules.skill.item.SkillCard",SkillCard);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(SkillUserItemUI.uiView);
	}

	SkillUserItemUI.uiView="eJyNlN9u0zAUxt/F3EZpnP/N5SqBJpUhMYSGEJrcxE1MnThKnK5bVYk7bibEBdfc7h0GgpehwGNgu23qdG1HpKSx43O+3/l83Dng1yUGEXhN8BUwQFmxsgbRHFyRhGcgcmDfABkmacZBBKGzMECcEZqA6O18E3qaoxTrsdcgsgwwU089zxRVYvkoFWvrCSnEu/ihtNeQy/hmkhDLNstCfSU3+FlFhAqArgF9AzoGDECXZGG0BGcnDees2GEIfQVhh1Ka1GRExdoxojVuUXjxEudsineJKjWraHSdfZW6R0ot2IsSFyf7Cq6zhiWkSOGekg3LELdWrtN/lMJRFL7VlR6yeHJE3H5Q4VNW8AEl5U56aKv00A82+WuOKj4kNQdyhjYyGIlLqpUoxhcg8rrCpxznUnwmhOW9KTzDmMtg+R4jit8IM81gPbhQA53wFZ7x/XR9r90DaNuH9lyxnKFcOshlrgj8ur/9+/Pr8uM3zXJbEIyFGediX8RIpIsZZTLBE+R7gehGHWqIRpjuUPmrxugHLVXoHoUa4qlKsqYaTk1oS1N4xSZ4sFG33dCCSTsv2A5CWxq0PxqPrfBRaDdU0PLIbKz0/G5PPa/TLSS0/tzfLT9/Wn7/8PvLj4e0LnRix/kvWt3ixEusuGvxubRogKpkh9hbAR9yNl5FbDvL8/TWkqOqKTjJpUbOkobi2lTbYRLRsOZWtvOHs+8MOoFCCTS/1rzrY0BRkTYirjfISIFr3GsP5HuCqmaCSkTWJ/Ld4h95ssW+";
	return SkillUserItemUI;
})(View)


//class ui.skill.view.SkillViewUI extends laya.ui.View
var SkillViewUI=(function(_super){
	function SkillViewUI(){
		this.btnBreak=null;
		this.tab=null;
		this.btn_rare=null;
		this.btnRareTxt=null;
		this.btnSave=null;
		this.allList=null;
		this.userList=null;
		this.guildList=null;
		this.allTxt=null;
		this.tipsTitle=null;
		this.boxGlod=null;
		this.goldBack1=null;
		this.goldBtn1=null;
		this.goldIcon1=null;
		this.goldTxt1=null;
		this.bxoFenzuan=null;
		this.goldBack2=null;
		this.goldBtn2=null;
		this.goldIcon2=null;
		this.goldTxt2=null;
		this.boxCo=null;
		this.goldBack3=null;
		this.goldBtn3=null;
		this.goldIcon3=null;
		this.goldTxt3=null;
		this.tipsBtn=null;
		SkillViewUI.__super.call(this);
	}

	__class(SkillViewUI,'ui.skill.view.SkillViewUI',_super);
	var __proto=SkillViewUI.prototype;
	__proto.createChildren=function(){
		var temp=SkillViewUI.uiView;
		SkillViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.skill.item.SkillItem",SkillItem);
		View.regComponent("modules.skill.item.SkillUserItem",SkillUserItem);
		View.regComponent("modules.skill.item.SkillGuildItem",SkillGuildItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(SkillViewUI.uiView);
	}

	SkillViewUI.uiView="eJzNV8Fu4zYQ/ZWFehUckRJFybc6wGYDbBdFky2yKIKAkmmLsSwZEuV1EuRWoL303mt/o/2ebX+jQ0qyKFsbJ0EaNAkiiSI582Ye34zuLHmz4tbY+lHwz5ZtrYp8VVrjO+uzmMrEGiPk+raVcDFPpDX2PefetuJEpFNr/NNdu/Z0yebcXHxjjR3b2uj/vY3KhchgAStLLssjyTeyqPhRnC+XeXZUiatIzKdidL2aW32j9/bzjcElTdXmMoK9V5nauxS3/KQQgMJybDew4R+2kWGUUtPmh0klZZ7tWHVdbdb3bGvNCpgWyWxScLaw9m3PWJZUtfVDYJBbwwm2cCjF+ztei4xn89sq4UOoMLLVH7ExNlB5YXDIOiXaOA3Q1rzrhfvmF+w2qYYsU9dGyLeRQ9TVME4IPQjdw9o67lJJPbo13vEk4yLm2QBsx0bURqGNHRM2Jablcxbt2A3qiGMDc5dVqafvuQC71KxovEhZxFPYsL5Btr7g9sUZ+AgGgubxezadClg2tnzgHvy2897mGThsfVsIlrZjx3maF2rnb8LQi5Brb68xoTNv2l57sT5MX+TQmr9OF20MZ6Ej81XBCj6E/Yanaf75Kk5YNt9PAsIqAwjyT5RJsc7lpzq4+v5Cnc+wwQbTzUThx8oLaogywEwRNzkxQ/BeG9uhut6ChJ1s+MRA/wOAP99IWKR0CsYmN29gTMgbGMrXvJhBDGA4EdMpzwwUGHybQR6bnDdPRlZjlVCdT0pcJwRHLw9mi4Q1R5Hjks5hYmrPGVvvZ0unka+HdA+Cp3TPyJFSnjZHlBoSPCj7H4YSozKyqVc3jqRAkgomHh0nIFklP9pmKooXt41jLIuTvAAXnBFpny70Uz8470Upd6lA6sh4XicaCLVxYWnarFmfxUWephNWnPUitC71eBuhFYu5omtzq9gKtaTgK850iNp7eOEZzPX9oRCdKainki9Nn4sqk2KpXi/zaZXycqQjMhIwb2SuyJieVfBsygvrcCC8oI596Hc6pqS0jkRV8uJZoSAdTDdEX4X5EfZ/OlRj1TPhYtrlHaq4tRaliFJYNGNpyVv08wp8fhL8LrWDqqS9P1G7Ph20uewh1IMnjNBa+4LAfcQZW7AVE2VS9c6ZIrWpjifnfLMbXkJRY6ZrRELPOFY9bfSPkKphpSzyBT9u9S1wPKIbkHpcnypRvpPLVBscq+7PIJfb003fEMrZbAYVU/mfirkGzGfyoMAjp4FAugOBwu2BkGJVnguZ8g7Gl1/+/PvX37/89sc/f/28Dyd0SOAGfThfcd7biv53AkhV5jP55hN7x4XVRwU/BiroaaQmQYdrkm92UHkaE9SNrmo7/rYM5JuTNO+1AvSxNbUpqXhEjQpDtymf5+l0wuIFGmhvkyqPRDTQC0CVUd01DkyP0OHmBNfFGcxrbwwPZDbkwLVgCcujSj6qxcatcuxsfgqtg7F7IwvqTYssZqmSRKSqlH64aB4eKmAHWFonlLhm3IPQ9AuOGtqSFGHXU4T+r0jYHK3LR5CQYDJIwk3+lme3FTO7IuK+MA/xq/JwlyrAwyEHXo6HeI+H6jNSffIlENj5lL02JdUXXZ+T2OSk6sj/B5SknvE1o75wtrp4nJu5916Yje5rsjFA+2wccuDl2OjuqyJflq9AQd+MexjsMNDtqeKrEvDhj2rqBWabAfkZOs4R08e5yc7l/b9hrxTM";
	return SkillViewUI;
})(View)


//class ui.test.AnimationTestUI extends laya.ui.View
var AnimationTestUI=(function(_super){
	function AnimationTestUI(){
		this.bg=null;
		this.tileGridBg=null;
		this.showBox=null;
		this.editBg=null;
		this.uiBox=null;
		this.roleComboBox=null;
		this.handComboBox=null;
		this.equipComboBox=null;
		this.createRoleBtn=null;
		this.clearBtn=null;
		this.typeComboBox=null;
		this.idTxt=null;
		this.idComboBox=null;
		this.createBtn=null;
		this.stateBtn=null;
		this.closeBtn=null;
		this.createEffectsBtn=null;
		this.otherTxt=null;
		this.createOtherBtn=null;
		this.infoTxt=null;
		this.clearInfoBtn=null;
		this.actionList=null;
		this.playRateHS=null;
		this.playRateLab=null;
		this.aniNum=null;
		this.createEffectsBtn2=null;
		this.scaleRateHS=null;
		this.scaleRateLab=null;
		this.bgAlphaChk=null;
		this.tileGridChk=null;
		AnimationTestUI.__super.call(this);
	}

	__class(AnimationTestUI,'ui.test.AnimationTestUI',_super);
	var __proto=AnimationTestUI.prototype;
	__proto.createChildren=function(){
		var temp=AnimationTestUI.uiView;
		AnimationTestUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(AnimationTestUI.uiView);
	}

	AnimationTestUI.uiView="eJzVWH9v20QY/i7m32P1nZ3EyX9ttbFKCKR1mjah/mE7l/qoYwfboS1TpY5pYr+gY9pgE4wfE9o6pGowpKm0Y/syTdJ8C+7OP2O7jp2BEE3d1Oe7e5/3ufd97j1fFrzNHhZawgWC1wUg9By75wqty8I6aXuG0IJQqgPBwGTV8IRWXRa3gKAbxGwLrY8uh2OXuuoqTg7eFFoiEDb433AiqU5vPlUd2l9bpZ3dNWLR/3W727WtuVUHb57qWfwB+Qy/5xBqQZAA/wgxgqZIZ9FV3cDzLpuJeF21R5+rZs9Qqb1T9a0tMAsw4hLNpGM6quniEKhHTA5lIQFYdV3suXMe3vCcPqbfrjcX9st6IAL/A6v4AJM+LNgb0zzga+Qjdg173R8xw5pJyJ+6VlfC+XCbeNO8P837BL6rlm7YziXmRi28u8jvtrZWCt2CEjceme4T1icP+/uqhs3U6BofDBtAYNhop+Ond49vvCDtFgPvOfYaHQmB0LEtb5muj9BClDTdNm1m650O/RFFIUn8ot3V7BRMZkJEMfNiHDof9LuUwSjGHdvEiRniaO/N6axZszey0YIA/7BGbGLdw+0lq439xTaZ0yxeoAgBAwFFiV4yvWr0qgNE2xFtR7Qd0XZE2xFvb9BLoVcTICgmQkNSkv6ezCodlc2QgObhjVvjq7v/PM2oKU2hOTdjDdVql6S9MsMzMCcz5CFTe08GD/8FpmSlWSYg8Sd90nt7amh8SkAGNVAHDaCAJiiIqIW+59lWCm4dxgurROh0B6sePkeTZsGzUug0Pk2AjSNZ5vQthlzJHbEmypMPKZ3hPScXKsEtH+XGFIOQ6uA5fTK4/t3g8MAXkGrONZgAZZ0zseqU8msSKgua/WujZweDm7uje4eV4k/OCKI/yej3w8EPt8rFoCiWikFmDfrW5AJtRBEfbK63jkSrpwNb+xhodATQTNX1gNbvdECfANzp0FGASTDbD8Fqn7QxGL24O9i7MwuJqFmPWdz5fHj/t7JZnMPgeTrPktXre/kUSoqcopBTRtrnN7wUVwwRYTMFZOX7VbxisqKUEQ9SUlQLdYL+wgrpFIMskowZ5AI2oQKVynLhryUI1zQtF1NytMi/fNVwvbLuZVRjsP90/Pjr0c2Xw+0r1QSMbnkoV8FstwLVPCWK2TxzRhRjFhdsVuGxkjLhxLU/xt/uzUSoghI6hFIRc5qrg1uBWTm91qh2tP/r6Mafw/vXK+mJ0siI8rWXR4ffVBXlTqeUpChSVpVhxIbtGdjxVSUAQ/NYUZQpKpNbrlZYogAUqjfydM5fog8ZtCrhlkreWm7y0s0hZC+TvHwZpqQwo3me4sucW8RoVQOHUJw5xOrYWemm+5W1VoZQXkBOFIWptS/iOKkrSY5ZObJEcVVIgXq6JDl68/PwyvPxo8fDR29OzgHipmOyxoJ58vgqNuQQmqp7xLaCYW5P1fElngv834u8qg4tQYTyzoYFx2UH0yrCOe/382+SyGu502XoTcrKidRZapeN1jjBUajd3D3663s4aTO5UxtYX8viR/6ZPLXvsr7ZOinU0MC+brA+Ajt5J8/eZ5dN4juftNNU/IoAiXlB0zPVzXM0Nc8uC6zJ7Psi5RF9jb+ymIRnuNxCiI4WYb4cBvC6rCeduqtucP+iNZXZWxDTXl806bwLKpubjSj7EuDdoOgV46KmkXaAjosVD05KbhxbSfmFSfnFqqRK7CioRVvW5IuNPFxN2a/tGkpkebz94+DgyYmSD9NnwVTaF1hR5Mhn1SKskIuPoNuHtHgdf7HTEk80rEwYFmW+SSednVJBlNx70dttvkf7Xw7u3J6yBRfGeU3JFUdXV038vwl0KGYDPfLgP4z0Gjs5BZZHr54N772uGOkr03Wx4ZtqNuMDkxK9B9VW59nb1EVjLX1gKRbOoqqinvsGgVUVk98JyT++env48Pl4e2f44KtkmKISus/ePJ3sYPjKeaqHs3iU8GD44PXol4PhT6/o2dn3JuXHytbfFPnZEA==";
	return AnimationTestUI;
})(View)


//class ui.tips.HtmlShareTipsUI extends laya.ui.View
var HtmlShareTipsUI=(function(_super){
	function HtmlShareTipsUI(){
		this.imgBG=null;
		this.img0=null;
		this.txt_dec=null;
		HtmlShareTipsUI.__super.call(this);
	}

	__class(HtmlShareTipsUI,'ui.tips.HtmlShareTipsUI',_super);
	var __proto=HtmlShareTipsUI.prototype;
	__proto.createChildren=function(){
		var temp=HtmlShareTipsUI.uiView;
		HtmlShareTipsUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(HtmlShareTipsUI.uiView);
	}

	HtmlShareTipsUI.uiView="eJx9kNFKwzAUht/leBtn0q7ocqdeVK8VRURGabI2rG1KlrnN0VvRGwVfwwthN4K+jkN9C08664qgIQTOCf//f+fMwc5KCRxOlJwAgdLocgR8DhMlbArcCxiBVKoktcADWhGIU5UJ4OfzRnmYR4lsS2fAWY/AFPgmittGl5FBgcqTvRAFo6EqsIx1nm+NVb+MNN5OWSTuT13J0CgMArZNfEY8hi+sWXxMiIo41eYMOO0EVUX+JfKDmoh5XguD/kXBaoy2Z3gsp/aX58rSxxm1EacmKoFbM5brmbt+E2anti9kDK7OVOIScyVE5jCtc+awvLl+e3lc3j993D0HlL4vbj8fXh2gNXoo93WmndFGTzCP0p9+na9GBzbPasJvgmZNXpfAQBf2CPeJ0++sKvTZNSrK0CVufAf1wU7DF8vCSoNLuKi+AN43sNY=";
	return HtmlShareTipsUI;
})(View)


//class ui.tips.itemTips.item.SkillListItemUI extends laya.ui.View
var SkillListItemUI=(function(_super){
	function SkillListItemUI(){
		this._icon=null;
		this.lab_content1=null;
		this.lab_arr1=null;
		SkillListItemUI.__super.call(this);
	}

	__class(SkillListItemUI,'ui.tips.itemTips.item.SkillListItemUI',_super);
	var __proto=SkillListItemUI.prototype;
	__proto.createChildren=function(){
		var temp=SkillListItemUI.uiView;
		SkillListItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(SkillListItemUI.uiView);
	}

	SkillListItemUI.uiView="eJyNkE1KAzEUx68iz210GpxiyQl04UoRRGRIp0nm6UwyTFLbOswFPISIuHbj1uM49/CltdIWQTch7/H/+CUthEWtQMAlqhkwqBtXexAtzHASChD8aMSgUGiKACIddAzyAssJiOt27TytpFGb1gWIAYP58vyOSel6LxtSZ5g7S2p/h5ZG6b0KPglqHpqpSnJXVc4mUZNMMTPOmls8rK2BLYqO/bRfkHOn/IAv21O+7izlOKPEoGzgpI1ltO1fnvrH58+P1/7tnbaaBOf4QJl8uJpIc4Z547zTYe9KnigkWe5KFzP3tdY0jl38jMjOQJZo4ptKpQP8wciPf2GUTbPBx4fbVKP/U+2Q3HRfUZ6eTA==";
	return SkillListItemUI;
})(View)


//class ui.treasureBox.item.OpenBoxItemUI extends laya.ui.View
var OpenBoxItemUI=(function(_super){
	function OpenBoxItemUI(){
		this.bgEffectBox=null;
		this.cardBox=null;
		this.openEffectBox=null;
		this.newImg=null;
		this.upImg=null;
		this.questionImg=null;
		this.cardNumBg=null;
		this.cardNumText=null;
		OpenBoxItemUI.__super.call(this);
	}

	__class(OpenBoxItemUI,'ui.treasureBox.item.OpenBoxItemUI',_super);
	var __proto=OpenBoxItemUI.prototype;
	__proto.createChildren=function(){
		var temp=OpenBoxItemUI.uiView;
		OpenBoxItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(OpenBoxItemUI.uiView);
	}

	OpenBoxItemUI.uiView="eJyNkltPwkAQhf+KGV8X2FaufcR4IVFeNAZijFnK0F0su7XdCkj63x0KVGgQbNI0JzlzvrM7XYFdRggevCicA4MoNlEC3gqW4LUcBgvwGk0GczW2EjzHcRlIVIG0JOokhPaliYfg8Wpjpwa5yhj4UoVj8F5XO0jXLP5gNH4ZnDP4EjHZR8HNZIK+3YwVXM6zjJ3I5HkkP2y9SfRFPC6l1d3TaScbmgj1Pzr2ezMR4NGajlOEaZz3ZgG5kg+lSYdCBynN1a6l0phgzZeY2Fqq3hdKVyO9thY37uzzjuHy1gSsuM4OmEYHvCJ+qoS2Jt0iEl+EmG+4uRX5gpvngJV2eQ9ucdTPlFDK6OP8OWopTCTUaFuhuNY2P0dtuae3309n3WNMOZqWYG6LXOob72JFPzG4jDN6Yb/AgxhhWC5wlRfoFAU69RL/GReWhuz648GAFrNPJffEaPtEZFJ8o8j3qPzYJGZiL4biHhWN+CY069jL2/xZ/w2hCvJTobYYU9W37AfJWzAR";
	return OpenBoxItemUI;
})(View)


//class ui.vip.item.PreviewItemUI extends laya.ui.View
var PreviewItemUI=(function(_super){
	function PreviewItemUI(){
		this.img_itemBg=null;
		this.img_itemIcon=null;
		this.txt_itemNum=null;
		PreviewItemUI.__super.call(this);
	}

	__class(PreviewItemUI,'ui.vip.item.PreviewItemUI',_super);
	var __proto=PreviewItemUI.prototype;
	__proto.createChildren=function(){
		var temp=PreviewItemUI.uiView;
		PreviewItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PreviewItemUI.uiView);
	}

	PreviewItemUI.uiView="eJylkE1LAzEQhv/LeF10t0VWcrOeCuJFEKVIidlsMuwmWdJZ+7Hkv5uk1IpQL16GdybvPDOZCWg/SGDwgnILBQzeDRtgUyhAaOwbYKvpZFkaruQPD+yBlQXsctxiQxpYVUb9yX20o1FrJGkWKvZsOrSxJpwxNyOuiVvVjTE0WF0PNjm0RKUpE0Io/jt0KZy9DH3kH7L/Bb37g0o7ytSn0aS/kHedfHC9S29XVV3flvV3Hdj8PHcWEa2z9IwHec5i171HnjYQJ8q8attZonArtPNveZOjfj3qHlU6oc/kEN7DF3IciV8=";
	return PreviewItemUI;
})(View)


//class ui.vip.item.RewardItemUI extends laya.ui.View
var RewardItemUI=(function(_super){
	function RewardItemUI(){
		this.labName=null;
		this.imgIcon=null;
		this.labCount=null;
		RewardItemUI.__super.call(this);
	}

	__class(RewardItemUI,'ui.vip.item.RewardItemUI',_super);
	var __proto=RewardItemUI.prototype;
	__proto.createChildren=function(){
		var temp=RewardItemUI.uiView;
		RewardItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(RewardItemUI.uiView);
	}

	RewardItemUI.uiView="eJyFkU1OwzAQha+Chq0p+SFN8A51AZWADRJQIRZu4iSmrh056R9VFqxYcxsuxIJbMGlJYxAVWUR6Y795M5/XUK0KDhRuBV8AgcLoogS6hoVIqhyo63oEci6yvGpEVBOIcyEToA/r1jqcsozb3hXQEwJLoBFp+5yGBMqJUHjd8AUzyfFMHD0JNZkxlfUKlaG/FM/83AjsDQ7xfNL8oEuPoromu9BLNubyV6jrbGODPuZqk9wZVgBNmSw5+bHQnBlsIdn4mk2bySu+xAD4fH37eH9BrefcpFIvsJaLJOHKGsNDf6pVdYPTYrv+VuHNKxEbXeq0OhixCy7QEmupm6DDdPNhhak412YE1OkFrbpvlRRZwyfmquIG7GX/JBx1u25X64ftZmKaDWNtT92c7Q//D2z4/ZzdewaRRXGgZ0hgh9F3nOY1K6MnfNAicMMwcMJdHahvIXVspK1C15kRTNogfTdNvXA/SLfDaDa96/qx/gKefeN6";
	return RewardItemUI;
})(View)


//class ui.vip.VipViewUI extends laya.ui.View
var VipViewUI=(function(_super){
	function VipViewUI(){
		this.box_bg=null;
		this.bg=null;
		this.detal_bg=null;
		this.topbar=null;
		this.box_vipinfo=null;
		this.vipIcon=null;
		this.btn_recharge=null;
		this.txt_recharge=null;
		this.txt_part1=null;
		this.txt_part2=null;
		this.txt_num=null;
		this.processbar=null;
		this.txt_exp=null;
		this.list_vip=null;
		this.box_viplv=null;
		this.txt_title_detail=null;
		this.txt_detail=null;
		this.box_gift=null;
		this.gift_bg=null;
		this.btn_buyGift=null;
		this.txt_buy=null;
		this.img_discount=null;
		this.txt_discount=null;
		this.txt_gift=null;
		this.btn_gift_preview=null;
		this.img_gift_icon=null;
		this.img_gift_gem=null;
		this.img_viplv_left=null;
		this.txt_gift_price=null;
		this.txt_gift_intro=null;
		this.box_welfare=null;
		this.welfare_bg=null;
		this.btn_getWeekly=null;
		this.txt_get=null;
		this.btn_welfare_preview=null;
		this.img_welfare_icon=null;
		this.txt_welfare=null;
		this.img_viplv_right=null;
		this.txt_welfare_intro=null;
		VipViewUI.__super.call(this);
	}

	__class(VipViewUI,'ui.vip.VipViewUI',_super);
	var __proto=VipViewUI.prototype;
	__proto.createChildren=function(){
		var temp=VipViewUI.uiView;
		VipViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.common.TopBar",TopBar);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(VipViewUI.uiView);
	}

	VipViewUI.uiView="eJy9WEtv20YQ/isFe1VtLt/Sre4hCdAWBWwkNgpDWFErausVyZIrWY5hoIc6NYqm9ilIDr0UQY0eivRgBE2QnxMp7r/oPihxKVKv2LUOtvjY2flmvvlmVscaPYqR1tAeYnSo1bQ4ieJUaxxrh7hNu1oDANOpaV2Egy7VGo6ln9Q0v4tJW2t8ezxZuxUN1aVHWkOvaUPxdwAT9kIrGjZbgVa19kEPBmje6oITmamAvZwe4JB9h2mKaLpJ0ZAmfbTpR71eFG72cbOFgzbe+C7m76q+n9QW7msYrtgZuJPd2ohC0lT3HOCY7+B3URg87sIwaLKd4pCBO9lXzO9E8RazsDAqNIpb4p2kH1Lc48t6UbtPULohoWxkVlS/y7H2LGHWKESbuYnDTrRayIvQ2D+GOMO0OGCuLbY2jdnwsH9t/Ljbj4QZ9tSHBO0x7BtedrErLpZmxJQJMSs2IDyv4KYbODJ4czcwbrhBXdq3cjLr00SxPR74UaiQlD1cZhBIixZwCi4HqJeWXK2rrtZVy19v9SkVW6u2HWm77nq5uwqvaNhMkN+FiXAq2zyvuiNESHSYOUFgCxH2WAFXLR5fihdnsiLccJSYTSuSDqnqBK99dnd0ejr64R13iibRAfoiIhF/+VPke8jwpveF5Yk7JqhpnSik2/gxkhniV2zVV9hPojTq0E/24H2E2Wp/Yq8jPuxOK+IouOzUNMiIIiKBQoqSGSGogmdKVpsgR+jVVYAxTChQ0D15On59dn31pgzQ860W8BWAlgLQnANwG/dKuNp1z5iDKxHmTlYDZTuKbnNhKKIyFFTnr0ZPf/rw9vL9P28f7q4JTb8daAR1VkAGZMW5ebpsWwUW9ns5LE9nnzIao+3oYB4Ti4lyFO/rsNMxzIKL3yRRkKA0LfcXV4oZ8Kbdkj312auyzShqkd8v6XxVBLge8Ahw2FkE6oWKRMM4j4DBArBpVEbBansty6rOqVGIAq+NteuxA0mKZuoPp7TUVGTbUpmq8xYj8RC2gss/9zKGPhdPTrcExQhSduEV5JpdbDP3CGHp2C4oYjcV92WAl09Nhd5NBnwsQGEbJTvybXnxkf2coAEik0GlpoVQDBu4FzRTRJBPUVuMZ4s6j9q9lPXC1yau6GL7y2XQkYVlmzmrTJVVFFOCmnwGwySn1/Xlj6OzF9evrsbPf11BNebXmbEawxCXDzU293a4I0Usli6HO8tSNEJXwUxh4PQ+7RFhI1OjaQXo9hxZ+zzBkKhuQccFtrmqqpWHRtOSJe0AoI6NAeYrV+GYXMPfrxqPCW7BqGqKrJ47DEt2fKDOScXBo9U/usedq5g7mBqiMKN2jAcR3ZPJFd93ZZ3fwjgCFJoW5J+5prDz6q/3b/4u89J2IVAUcbVudquTSNUw+RnIOsaUBbyo2zj1I3YmKaW1hWH0PYZhVWYr+4a0Xs+zalqFmsg3ysJnj39+Xg5ex9d1C8xpG0ahbXgf3zYWYwF2RtG8B1oFtQokPTMgH16+G/1yut5UM8l8rk+L0r28rIApixzwqOSlJIo2TtBAHvkrzj2seGfH+FXP7rZklJsXi+Wo3BKbz/QLy1nOVJANNw4oWWNHH235WchVz0Lu0lOWpK5jV4x8ed8TQpuLDsg1B6hzzVJqedkxV6/PEorlCfvKQccRGqKQxCuQxPXE82qSVG1tW7PaZgC75AQOGVkVjXt9ysb20cvLKcmri7HAYNhxoeWuI1hVXUseUD2n8GPHISIdmKB1Gle25G56V4DoI4QOyNFdnJqBNadNMS/yFP77+5PR+bM1D8x30qbmSVkmv6CuRnaSxnlq1ukTfDM5k6qjHP2KcjZxYImiVVZ9dlozc9tuYWKc0DrvKX+cj87+/D97yoIZslIlZX9xF6uk/P3g5jJpZwTPj22GYVQEbFauRhdn47OL8W8X42cvbler9k/+AxGTago=";
	return VipViewUI;
})(View)


//class ui.activity.item.login.ActivityLogin2ItemBxUI extends laya.ui.View
var ActivityLogin2ItemBxUI=(function(_super){
	function ActivityLogin2ItemBxUI(){
		this._bg=null;
		this._btn=null;
		this._btn_txt=null;
		this._lq=null;
		this._day=null;
		this._icon=null;
		this._count=null;
		this._ylq=null;
		ActivityLogin2ItemBxUI.__super.call(this);
	}

	__class(ActivityLogin2ItemBxUI,'ui.activity.item.login.ActivityLogin2ItemBxUI',_super);
	var __proto=ActivityLogin2ItemBxUI.prototype;
	__proto.createChildren=function(){
		var temp=ActivityLogin2ItemBxUI.uiView;
		ActivityLogin2ItemBxUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ActivityLogin2ItemBxUI.uiView);
	}

	ActivityLogin2ItemBxUI.uiView="eJytVMtu1DAU/RVktqPJY+K8lnQDC7oBoVYIRR6Pk1iT2CFxpg2jkVixhB2wRrBA6gf0g9oi/gLnMbE7RIOQuol043t97znnHm+BaAoCQvCKkgswA0XJiwqEW3BBVyIFoQXNGUgJTVIhg8DZzQBOabYC4evtvvRZjhKi1zYglFWX3Ve/Z4NKmR4tE5lcrSmTAcKCbqhojIwnlBk1jdaoQDRDTKZFpjUvWJutT7CbHe1sOXbX2w5UQ8GOdVzWQnAWMR5VdtdvCuRLcikOOrldH2vEGDh6x0h0BaKtC8Hd1493X378/vbh9tPndhZR8jU54Rlv0x8vXNdD3vhfDq8g2/LWmDPxgr6TB5bfR7LqOcUlr3gsHp2jp4TKary/L45jGaKMJi1iTJggJdjt3mjUnT7pUB+S51odKM9VypnuCCt7q3jEPM85M1qkJdkMOhV0w8V5q9McDtEZCKHdRhlakkwWanI65hTVp1Oy2v1GwcU4gNyRpJaJxklKGamIcaCsmqrCKCNyKnMeDMHZECCGU152R3AfdWfwPlsT6sN+yzwlvzfytEKNkv7X1dXN9fvb7z//1h1avo9jTffFg2l93CSO10/vazIrg1LMdcNUFRGV0aIpa2JQQfI2wUhIXh3a05wUdMo7fi+ncg+EY3/Ma6Z5R74dpvmfpnk4Iu+ZZorLoH8HPOX+RvfJv9ZUPUAoKwlaNQOnx1fzDykc0tw=";
	return ActivityLogin2ItemBxUI;
})(View)


//class ui.activity.item.login.ActivityLogin2ItemPtUI extends laya.ui.View
var ActivityLogin2ItemPtUI=(function(_super){
	function ActivityLogin2ItemPtUI(){
		this._bg=null;
		this._btn=null;
		this._btn_txt=null;
		this._lq=null;
		this._day=null;
		this._icon=null;
		this._count=null;
		this._ylq=null;
		ActivityLogin2ItemPtUI.__super.call(this);
	}

	__class(ActivityLogin2ItemPtUI,'ui.activity.item.login.ActivityLogin2ItemPtUI',_super);
	var __proto=ActivityLogin2ItemPtUI.prototype;
	__proto.createChildren=function(){
		var temp=ActivityLogin2ItemPtUI.uiView;
		ActivityLogin2ItemPtUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ActivityLogin2ItemPtUI.uiView);
	}

	ActivityLogin2ItemPtUI.uiView="eJytVMuO0zAU/RVktlXzaNw0WTIbWDAbEJoRQpHruIlVxw6J05lQVWLFEnbAGsECaT6AD2IG8Rc4j8ZuiYpAdFHpxvf63HPPPd4CWecEhOAZJVdgAvJC5CUIt+CKxjIFoQPtCUgJTVKpgsDbTQBOKYtB+Hy7L32UoYSYtTUIVdV1+2/es0GFSo+WiUou15SrAGFJN1TWFhMJ5VZFozXKEVU5ke1Mc96kmvC7yUlYx3NbYDfQaJKfgltWUgoecRGVLdwYwafkWh4BzVsYZ+AXeCZgJNsC2dSF4O7j27sPX35+enP77n3TiizEmpwJJpr0+4HrO148fFe9a8auunUluHxCX6kDZ9FFquoxxYUoxUreu0QPCVXVeH/fqv2pL4jRpOGMCZekALvdC2N45w9a3sfjmzstL3+uhbPnAzP2Uk8SiywT3GrIFmTTK5XTjZCXjVJT2EcXIIRuEzG0JEwVGoJ69ti0z8eEdbuFgrOhAYZ4UqlE6yylnJTEOtJWd1VixIjqyp4GfXDRB4jjVBTtEdxH7Rk8nNbIAsBuz3y9Af4wpxjVWv0fNzffv72+/fz1d+kR9uGB9DNj2Rf/JP2Y7qct4/kdk4UhufYqxcK0T1kSWVoNs6IiFpUkaxKshGTlsVntUXHHrLTopNVmgnDAx6LihpXUM2Lbf+mh2X8b5IGBxmYZdM+Crx+D2vTMn1ZWP0eIFQTFdT/T02v6CzBm1lA=";
	return ActivityLogin2ItemPtUI;
})(View)


//class ui.activity.item.login.ActivityLogin2ItemUI extends laya.ui.View
var ActivityLogin2ItemUI=(function(_super){
	function ActivityLogin2ItemUI(){
		this._treasure=null;
		this._normal=null;
		this._last=null;
		ActivityLogin2ItemUI.__super.call(this);
	}

	__class(ActivityLogin2ItemUI,'ui.activity.item.login.ActivityLogin2ItemUI',_super);
	var __proto=ActivityLogin2ItemUI.prototype;
	__proto.createChildren=function(){
		var temp=ActivityLogin2ItemUI.uiView;
		ActivityLogin2ItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.activity.item.login.ActivityLogin2ItemBxUI",ActivityLogin2ItemBxUI);
		View.regComponent("ui.activity.item.login.ActivityLogin2ItemPtUI",ActivityLogin2ItemPtUI);
		View.regComponent("ui.activity.item.login.ActivityLogin2ItemZhUI",ActivityLogin2ItemZhUI);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ActivityLogin2ItemUI.uiView);
	}

	ActivityLogin2ItemUI.uiView="eJyd0DsLwjAUBeD/cuZQVHQwm26Cg4sOFZGo0VxIHyS3raX0vxulgooPcMly7z3fIQ24zjUkVqQrCOQuyz1kg4oObCD7o55ASZ52NmwdlfVawGg6GQ7D8bAV2BuyB8h1c4+a7JlK4nqenSgdzFgn0/NjdA0ZQs+394lRLlxv2WnlC6fxBAm4ImVKrkBBkeqMiEJ8ZK9S9M5dztC24ku1Bb9U69+rdXXSzCXK4i9/wT/92Hz6ms63yvN/emxu+qa9AMWgo+w=";
	return ActivityLogin2ItemUI;
})(View)


//class ui.activity.item.login.ActivityLogin2ItemZhUI extends laya.ui.View
var ActivityLogin2ItemZhUI=(function(_super){
	function ActivityLogin2ItemZhUI(){
		this._bg=null;
		this._btn=null;
		this._btn_txt=null;
		this._day=null;
		this._icon=null;
		this._count=null;
		this._ylq=null;
		this._lq=null;
		ActivityLogin2ItemZhUI.__super.call(this);
	}

	__class(ActivityLogin2ItemZhUI,'ui.activity.item.login.ActivityLogin2ItemZhUI',_super);
	var __proto=ActivityLogin2ItemZhUI.prototype;
	__proto.createChildren=function(){
		var temp=ActivityLogin2ItemZhUI.uiView;
		ActivityLogin2ItemZhUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ActivityLogin2ItemZhUI.uiView);
	}

	ActivityLogin2ItemZhUI.uiView="eJy1VMtu1DAU/RVktlHzHiZZ0g0s6AaEOkJV5DhOYo1jh8SZNh2NxIol7ChrBItK/YB+EC3iL7CTmcQawqhIoJFGOtG9Pvece+w1EG2JQQheE3wODFBWvKxBuAbnJBE5CO15YIAckywXEgTexgAoJzQB4Zv1rvV5ATOs97YgtAxw0f3r56xgJcujOJPF9ZIwCSASZEVEa1KeEWY2JFrCEpJLIqsiyzkqmSrWB9gYB4ltz+movdnIJ9ghwrgRgrOI8ah2O74pja/whdhjmnU89iAx8HTGSHQNQvWF4P7zh/urbz+/vL/7+EnNIiq+xMecclX+OIjdBDnDdxA6o2RHnppyJl6SS6xs7JHsekFQxWueikcL+AwT2Y1256VpKiGkJFOKEWYCV2CzOdOsm9Dj9745484sd1CUwHZU8+Pm5vvtu7uv179LiV0/SAJNiqttb/7PpBzOgPekl+JpUqxBCkFcz0NdY1GbSlnVYJMIXKgCM8NFvZ8+y3poNObdAP4YDt8f+BFvmBYN27cs6y8z4f6XTJxMeRn0MdfC3dK3o30UsqyRXeZxThiusfnH+wVphWHSbj2FDOW8Wsgn4sjfodMO6cs9edr17l/xmT3MNOx3vO76eIgXhVymuo8VXm25S7LiYqFeE8XdIUntOwpRGGMqG7W1e5NbnzTL6Z89332wP+NUNYIUd4YEW3C6BYe8OpO/XypQ1v0=";
	return ActivityLogin2ItemZhUI;
})(View)


//class ui.activity.item.LuckyWheelBoxUI extends laya.ui.View
var LuckyWheelBoxUI=(function(_super){
	function LuckyWheelBoxUI(){
		this.img_box_light01=null;
		this.img_box=null;
		this.img_box_hasget=null;
		this.label_box_desc4=null;
		this.fontClip_number=null;
		LuckyWheelBoxUI.__super.call(this);
	}

	__class(LuckyWheelBoxUI,'ui.activity.item.LuckyWheelBoxUI',_super);
	var __proto=LuckyWheelBoxUI.prototype;
	__proto.createChildren=function(){
		var temp=LuckyWheelBoxUI.uiView;
		LuckyWheelBoxUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(LuckyWheelBoxUI.uiView);
	}

	LuckyWheelBoxUI.uiView="eJyNUttuwjAM/ZfstaMXeoG+Ik2aNO1l0i6aJpQW03iEpmtToEX99zllMMY0xkvTOOfY59jeMt0UwGL2iLBmFitKVVQs3rI1zrRgsev4FhOAmdD9pbNYKlDOWPy63VNvlzyDY25D0LHFNrujWmBOKJ5qXKFubFmni+ZJAEi7xuk78jyTuKjpGBR5xrrOOpvZ6RPTd8VLguAymyZqM5VGouOyC+tlF9eLdk6C4KQiwXieClW+kM39/zMpGwTHKe//6c5PF4JXGehvE5JU1sS3JwJzqMD+w1WDEvPso/7l6I4nIE8deX31MLIOUw73QqTB91JmUKW+UaJLtYCJksq8X0WBH3nuIc5i72g/KM1c5foBW3pwaXPSPW0+B2ccEC1RZnl0WcOxzBtiTSQWJ0rDUa/U8w9K/cPg51+UaV4vEyiNooKnQBO4Hp5dgkrULZqmVa3f94vQ9ED6meN6Qz8Io9GYgjMsgejK5KHRYksFueklp/UxwbJ33XVv3ScVVg+o";
	return LuckyWheelBoxUI;
})(View)


//class ui.activity.item.LuckyWheelItemUI extends laya.ui.View
var LuckyWheelItemUI=(function(_super){
	function LuckyWheelItemUI(){
		this.item_rare=null;
		this.item_rare_tie=null;
		this.item_normal=null;
		this.item_icon=null;
		this.item_number=null;
		this.item_name=null;
		this.item_select=null;
		LuckyWheelItemUI.__super.call(this);
	}

	__class(LuckyWheelItemUI,'ui.activity.item.LuckyWheelItemUI',_super);
	var __proto=LuckyWheelItemUI.prototype;
	__proto.createChildren=function(){
		var temp=LuckyWheelItemUI.uiView;
		LuckyWheelItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(LuckyWheelItemUI.uiView);
	}

	LuckyWheelItemUI.uiView="eJyVkl9vgjAUxb/L3SsqIjrl1acly1627E+WxRS80MbSklJUNHz3lRIZzBkdDyS37e3v3J5zBF1mCAG8MtyBA5mSWQ7BEXZsrSkE4/nMAYosodoUY69yIKKMryH4PJ5aH1KSYLe3hMB1YG//W6LMEaYxXSmi6mP5hgmzRCLNtkyXI15Em/KNIvJRwVabgohkPMxEAlXltIynvyCDiaUM/DPMSrMOipsrC9M+WlImMMfRBfaelbI4Q986npAqJfy2Ab2bKP7cYhaec7LjftpDskgK+PGn3iUiolJ9GHHDtnq3VZf2SELkv2izZihjcovzZ/0JizREVU+oldzgUnJZ7925ZB66brsOgdfJjLkilkI/swM2VXRq8zGObVso60BpVaBRzFliPcNYwzXJ9wsr2XdbxWO3HwZBUjwXvCDTibv+t+DYfhcERyi0eZxrng5mTWb7L5sjx0hfzc7+YHPjgEKxRvXSYJoCaikZJcbrqvqqvgHcUjtO";
	return LuckyWheelItemUI;
})(View)


//class ui.activity.item.ShareFriendGoodItemUI extends laya.ui.View
var ShareFriendGoodItemUI=(function(_super){
	function ShareFriendGoodItemUI(){
		this.itemIcon=null;
		this.countTxt=null;
		ShareFriendGoodItemUI.__super.call(this);
	}

	__class(ShareFriendGoodItemUI,'ui.activity.item.ShareFriendGoodItemUI',_super);
	var __proto=ShareFriendGoodItemUI.prototype;
	__proto.createChildren=function(){
		var temp=ShareFriendGoodItemUI.uiView;
		ShareFriendGoodItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ShareFriendGoodItemUI.uiView);
	}

	ShareFriendGoodItemUI.uiView="eJx9kE9LxDAQxb/LeI27abUt5CaCsLC3FVFEJJumzbDdpKTZP7Xku5tUu108eJp5mXm/N2QA17cSGLygPAGB1pq2AzbACUungCWUElASa+VG4QkIhU0J7H2YrKs9r+W1twd2e0/g/FO6HeqwxYXDI7p+2Slu5ZNFqcvlAT9RGL2tF62uwXvyLzSjIzSW3/OK0B65Dfvo5H4VUDCfG4dcC2XsGzC6yCb1OqrrsDXfyuZPWJ6MYUl+CcuLKUyYg3bPZxcsnbNmJx9NY+LgJimKjBaXd2DpfE8a+spot8EvOavgerDIY7yYKHdJVaWRwhus4+fZkeD9h/8GfHCFmQ==";
	return ShareFriendGoodItemUI;
})(View)


//class ui.battleRecord.item.BattleRecordPlayerInfoLeftUI extends laya.ui.View
var BattleRecordPlayerInfoLeftUI=(function(_super){
	function BattleRecordPlayerInfoLeftUI(){
		this.img_bg=null;
		this.img_head_icon=null;
		this.label_player_nickname=null;
		this.list_cards=null;
		BattleRecordPlayerInfoLeftUI.__super.call(this);
	}

	__class(BattleRecordPlayerInfoLeftUI,'ui.battleRecord.item.BattleRecordPlayerInfoLeftUI',_super);
	var __proto=BattleRecordPlayerInfoLeftUI.prototype;
	__proto.createChildren=function(){
		var temp=BattleRecordPlayerInfoLeftUI.uiView;
		BattleRecordPlayerInfoLeftUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleRecordPlayerInfoLeftUI.uiView);
	}

	BattleRecordPlayerInfoLeftUI.uiView="eJyNkttOwzAMht/F3HbQAyuQF0BIXIGEQAhFaeu1ZmkaJYExpr47acu6UnGSemFH9tf/t70Dt9UIDO4INxCANo22wHbwBiwJYEOFq4DFSRpAhVRWDlh0nrQB5BXJAtjjbg+4qkWJU8IWWOrbPGgxI72SpUz6ppWQFn0ujAdQXfKs9AS7JuXzTDgn8QZ1Y9zJC/FnUqhKbmshZVYea9XX0jteGvJKIAqD/QcTtdFZ2wa/qgx7keGoMQ2nkioUBae8URNoGk6Z1yJD+S0zXY7QqIsHquzquZZii4YrytdK1Dihx3EAq0a5W+9tyPJGNl3nUZKliJ09IanshiRx5eCLGLJuvoWLmcE4GR1KX85zYQrbDVOLHB+ALT/D+z40qFE4/xzv4+H9MOHov/cwn/SpR/bmmSerAs1kCsukbZ/+2NwiGu4rOuwu/vF+smGXn4czrjLufvMBo5vwiA==";
	return BattleRecordPlayerInfoLeftUI;
})(View)


//class ui.battleRecord.item.BattleRecordPlayerInfoRightUI extends laya.ui.View
var BattleRecordPlayerInfoRightUI=(function(_super){
	function BattleRecordPlayerInfoRightUI(){
		this.img_bg=null;
		this.img_head_icon=null;
		this.label_player_nickname=null;
		this.list_cards=null;
		BattleRecordPlayerInfoRightUI.__super.call(this);
	}

	__class(BattleRecordPlayerInfoRightUI,'ui.battleRecord.item.BattleRecordPlayerInfoRightUI',_super);
	var __proto=BattleRecordPlayerInfoRightUI.prototype;
	__proto.createChildren=function(){
		var temp=BattleRecordPlayerInfoRightUI.uiView;
		BattleRecordPlayerInfoRightUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleRecordPlayerInfoRightUI.uiView);
	}

	BattleRecordPlayerInfoRightUI.uiView="eJydlN1OhDAQhd9lvEWl5Xd5AWPilSbeGEMKFKhbCoHqum723S0si0BYYUm4mWTOx5k5zRxA7gsKHrwyugMNijIvKvAOsGORTMHDhq1BSlmSSvCQaxw1CFPGI/DeDmfpY0YS2tfuwbOV7Bs8XRuAvljFAq40MeEVVTUplZ5liR8kClBtmVB1QKTk9JkWeSnvP5n/wQQViV9lhPMguStE08t+6EPJlBFAunb+oGcWOcej9q9JvfGIHKNzaet9Uyklkc/CXPSwtt6nPpGA8knqHxPZ1hnK63a/4GRPS1+wcCtIRntwjDWIcyFf1HCnKsx5Xitv4hhRvZ6PcJbUWyobycAMq+Q4hs3IDDa6Cblq90NSRtVga2hpxO32XLeDm8pwM5Fan6RZPw3LWBiGiS7h0ArcxhzQ2gcGAy5ewTWdea6xnDuHMq+yaLmTyUySrVXkUUiTZHsNeUlezhrwksDcq8FzxM2I+D7DvEXtRcJ/FwlfvIvB6UK1B7E7ULj+zy/SAMWW";
	return BattleRecordPlayerInfoRightUI;
})(View)


//class ui.battlescene.BattleScene1001UI extends laya.ui.View
var BattleScene1001UI=(function(_super){
	function BattleScene1001UI(){
		this.renderlayer=null;
		this.camerapoint=null;
		BattleScene1001UI.__super.call(this);
	}

	__class(BattleScene1001UI,'ui.battlescene.BattleScene1001UI',_super);
	var __proto=BattleScene1001UI.prototype;
	__proto.createChildren=function(){
		var temp=BattleScene1001UI.uiView;
		BattleScene1001UI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleScene1001UI.uiView);
	}

	BattleScene1001UI.uiView="eJyNj8FKAzEQht9lzms3u2hhc/PouSCKeJgmQxLtZkMSbZcl7+60ZWullHoJyZD/m/+bII+BQMKzoy1UEOIQEsgJRpCigt3h3DqdLchWCH5YcsZmkM2DEKUCZd1Gg3ybZtBTj4aukdKn8/wHU6Kc6ky7HL+o7jGsTd0I0Sw+goFSqhNtFaLLV3F/in1j5EAkrylucKTIKY89XQzPDVgAlaVHRsPaZW4C/5U6xrlI2yxPZkmRp4NKrQn1XbsI3nAQvbJDfOXUfH9hg1Leb7l298clXdfOioqlIobB+fyreD7cY38AhPCSzQ==";
	return BattleScene1001UI;
})(View)


//class ui.battlescene.BattleScene1003UI extends laya.ui.View
var BattleScene1003UI=(function(_super){
	function BattleScene1003UI(){
		this.renderlayer=null;
		this.camerapoint=null;
		BattleScene1003UI.__super.call(this);
	}

	__class(BattleScene1003UI,'ui.battlescene.BattleScene1003UI',_super);
	var __proto=BattleScene1003UI.prototype;
	__proto.createChildren=function(){
		var temp=BattleScene1003UI.uiView;
		BattleScene1003UI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleScene1003UI.uiView);
	}

	BattleScene1003UI.uiView="eJyNkU9PwzAMxb+Lz9WatONPc+PIGQmBEIcstZrAmkZJYK2qfndMUKGwVeMSOZbfz356I8TBIQi4N3iADJzvXAAxwgCCZdCn92DqqEEUjNFHo2l0BMEvGJsyUNrsaxBP4wy6bWWDa6TwaizNyBAwhjxiH/0b5q10uybnjJWbF9fANGXftDvnTVzF/TrsXXoSeLQ1+r0c0JPKyhaPmksHZEAqjTeEhp2JdAn81xTfVtUfX0GhxWQkr1HWjG+cbUgmrdKdfyTNXD+QbOnz1ILqqkx8Xlzy1RXF0YrzWJ6w2+tVaHkC+nwuFZ5S6OfiKw5FAXjpOmPjTxzL5if4AwTgxfU=";
	return BattleScene1003UI;
})(View)


//class ui.battlescene.BattleScene1103UI extends laya.ui.View
var BattleScene1103UI=(function(_super){
	function BattleScene1103UI(){
		this.renderlayer=null;
		this.camerapoint=null;
		BattleScene1103UI.__super.call(this);
	}

	__class(BattleScene1103UI,'ui.battlescene.BattleScene1103UI',_super);
	var __proto=BattleScene1103UI.prototype;
	__proto.createChildren=function(){
		var temp=BattleScene1103UI.uiView;
		BattleScene1103UI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleScene1103UI.uiView);
	}

	BattleScene1103UI.uiView="eJyV0kFPwyAUB/Dv8s7NCtROy82jZxOjMcaw9qWgKyWAbk3T7y5Wp7UT7S4NJbwf/OH14DuDwOFG4Q4SMLY1DngPHXCSwH787lTlJXBGSPiRqGrpgdOckCGBUqptBfy+P0BXjagxJrlnpcMa4Rx6l3rce/uCaSPMpk4pJdnqydQwDMmXdm2s8lHux8FehQ0FFnWFdis6tKFKiwaPJqcJQgBRSrwMNGyUDyeBpaHoWVHMcrkSNY5BUkIf6croOhQJXcrW3oWKw/g2FE1T/slTul5HdmBHOyxX84xF1Oxkdf6+U4/N7mFJ9g+PsjxGspPJ8a0Del5cRMzsF/Phv1ak5NOlkx4sQ9dZYVql/XcPTiff4TdIaQyT";
	return BattleScene1103UI;
})(View)


//class ui.battlescene.BattleScene1UI extends laya.ui.View
var BattleScene1UI=(function(_super){
	function BattleScene1UI(){
		this.renderlayer=null;
		this.camerapoint=null;
		BattleScene1UI.__super.call(this);
	}

	__class(BattleScene1UI,'ui.battlescene.BattleScene1UI',_super);
	var __proto=BattleScene1UI.prototype;
	__proto.createChildren=function(){
		var temp=BattleScene1UI.uiView;
		BattleScene1UI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleScene1UI.uiView);
	}

	BattleScene1UI.uiView="eJytkstOwzAQRf9l1qaJ8wJ5x5I1EgIhFm4yig2NY9mGJor670wTSgOpVCS6s0Y+Z+ZKd4DQWwQBDxq3wMC61noQA2x1FRSIJI5jBgp1rQIIfl3c7BiUSm8qEM/DAb5rZI1zugdBWAfiKmdHFaeZf9OGCOk9Bh8F7IJ7x6iRdl1HfPVqa/i1bse+19xbp8PpPTH7efGHdAQ4NBW6jezREWVkg4vhfBclk6XCW1LDWgc6Cv6adsKnQ74i+hINRjyqUFYra/bBpClV657o++H9SMQ84kl3lqajuygWcn4hc5Is1Ml/1dmo5nHOF+70Qu68SBfu7Iz75Vyj+Nig7vCYqlRSeZy0rTbhWKX5cC/+BMMnAy4=";
	return BattleScene1UI;
})(View)


//class ui.battlescene.BattleScene201UI extends laya.ui.View
var BattleScene201UI=(function(_super){
	function BattleScene201UI(){
		this.renderlayer=null;
		this.camerapoint=null;
		BattleScene201UI.__super.call(this);
	}

	__class(BattleScene201UI,'ui.battlescene.BattleScene201UI',_super);
	var __proto=BattleScene201UI.prototype;
	__proto.createChildren=function(){
		var temp=BattleScene201UI.uiView;
		BattleScene201UI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleScene201UI.uiView);
	}

	BattleScene201UI.uiView="eJyNjz1Pw0AMhv+L56i5dGC4rWPnSgiEGNyLmztoLiefaRtF+e849IMAA10sy9Lzvn4GkD4RWHgMdIQCEncpgx3gGGrxYJfGmAI8hcYL2OrBmLEA58O+BvsyXOF1iw3N6R6sYqev+SMpv4eoAOZMkkuhk/AHlS2mbVMuTbV4Sw386huLW88mcZD7ig7ICjDFmniPPbFSEVv6c5x3qRo6TyuNhm0QfQvu1T3j50cuktlRpMmq3HVMixQnNYzOd/yswHV/UmYcX//TrMyloJr5OTViTF2I8u03P07Bn/DZlto=";
	return BattleScene201UI;
})(View)


//class ui.battlescene.BattleScene202UI extends laya.ui.View
var BattleScene202UI=(function(_super){
	function BattleScene202UI(){
		this.renderlayer=null;
		this.camerapoint=null;
		BattleScene202UI.__super.call(this);
	}

	__class(BattleScene202UI,'ui.battlescene.BattleScene202UI',_super);
	var __proto=BattleScene202UI.prototype;
	__proto.createChildren=function(){
		var temp=BattleScene202UI.uiView;
		BattleScene202UI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleScene202UI.uiView);
	}

	BattleScene202UI.uiView="eJyNkEFrwzAMhf+LzqF2QruCbzvuPBgrYwfXEbG3xjGytyaE/PepTdOlHXS9CCH43tN7PaQuICh4cbiHDAI1IYLqYe/KZEEVUsoMLLrKJlD5Si6HDIx1uxLUWz/BT7WucE53oBhrj/NCKX46z4COEVMUCdtEXyhqHbaVKBYfoYIrtyE7uzwHcuk+m29NDBD6EmmnOySmvK7xz3HuxcG0sfjI0rB1iZ+Ce8OO+PjIKWI06FEUshC5lKv1wyL4QzjtjW1ow8i0vzI1j3lT/6LFK4v1LYt8GN7/6zI/irfTMpZouDbSoXE+/ZY4Px6EfwBFnbK6";
	return BattleScene202UI;
})(View)


//class ui.battlescene.BattleScene204UI extends laya.ui.View
var BattleScene204UI=(function(_super){
	function BattleScene204UI(){
		this.renderlayer=null;
		this.camerapoint=null;
		BattleScene204UI.__super.call(this);
	}

	__class(BattleScene204UI,'ui.battlescene.BattleScene204UI',_super);
	var __proto=BattleScene204UI.prototype;
	__proto.createChildren=function(){
		var temp=BattleScene204UI.uiView;
		BattleScene204UI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleScene204UI.uiView);
	}

	BattleScene204UI.uiView="eJyNjzFPwzAQhf/LzVZjV0RC3hiZkZAqxHB1jtjQONb5oI2i/HccQksEA11ueNL33n0jyJAILDwGOoKCxH3KYEc4hkY82K3WWoGn0HoBa2pTTwqcD4cG7NN4hu87bGlND2ALdvq6lyZTK8hvIRYAcybJldBJ+J2qDtO+rbb6ZvOaWvi1N6nLzkPiINcNfSAXgCk2xAcciAsVsaM/4XqrqKHzdFeqYR+kvAXX6i748si3ZHYUabaqXnqmTYqzGkbne94VYJqe/1O7rRc5o40+K7kiwZj6EOVHaR3OvZ+l7JMw";
	return BattleScene204UI;
})(View)


//class ui.battlescene.BattleScene302UI extends laya.ui.View
var BattleScene302UI=(function(_super){
	function BattleScene302UI(){
		this.renderlayer=null;
		this.stonelayer=null;
		this.camerapoint=null;
		BattleScene302UI.__super.call(this);
	}

	__class(BattleScene302UI,'ui.battlescene.BattleScene302UI',_super);
	var __proto=BattleScene302UI.prototype;
	__proto.createChildren=function(){
		var temp=BattleScene302UI.uiView;
		BattleScene302UI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleScene302UI.uiView);
	}

	BattleScene302UI.uiView="eJytlMtugzAQRf9l1iRg3mHXZdeVqlZVFw5MwW1iLNttEkX59xoREpJCggo7a6S5x3dee9A7gZDAM8MNWCBkKRQke9iwTBeQuA4JLCiQ5YWGhAQkOFiQFmyVQfK2b5If1zTHdvYOEseCLSSz2DpLeSamvhg3GVQp1MrWuNXyG+01Fcvc9hx3/ilyuAIerBPoSUimu0mOdfnnHypNgkSeoVzRHUqTxeka/wTbLOONpgU+GGlYMm2+BUP9xlV2/Y+jR5Uix8qUnSHN3LnglTXK06KUr4bXvF9MUtvkLXUSRIs7AJXSFRrNGemBkaGwOPZ7WKO8BGEtH0R9tRol70f1QBC3sjG9PnGj/k5/lBLHdZp47qIuTxj3AMhIgEfqAjlhV3/bhPGzdKoW8Tsnt12wIbT3MddA6ZLj1TG4iP3n0NV348bme+PaFZxWv3Mg2oQJ2tXQQr9v9/2J7JC7hEnmIQqP58BxnWYOUtN6SUXJuD4PQjtY6f4CV6kpPA==";
	return BattleScene302UI;
})(View)


//class ui.battlescene.BattleScene303UI extends laya.ui.View
var BattleScene303UI=(function(_super){
	function BattleScene303UI(){
		this.renderlayer=null;
		this.stonelayer=null;
		this.camerapoint=null;
		BattleScene303UI.__super.call(this);
	}

	__class(BattleScene303UI,'ui.battlescene.BattleScene303UI',_super);
	var __proto=BattleScene303UI.prototype;
	__proto.createChildren=function(){
		var temp=BattleScene303UI.uiView;
		BattleScene303UI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleScene303UI.uiView);
	}

	BattleScene303UI.uiView="eJylkstOwzAQRf9l1qbJJJhW3rFkjYRAiIWbDImhcSzb0EZR/x1Hbdq09IHIzrrSfRx5WvCNIRDwpGgJDIytjQPRwlLlvgSRxMgZlKSK0oNAjnzNICvVIgfx2vbmh0oWNHQ3IGIGKxA3M7aPSoPmPpUODukceRd5Wnn7RVElzbyI0jidfJgCjgrXbFf0aKzyp5tidrj5W9pgsKRzsgvZkA0uLSv6JQ67ApvMSroP0TBXPsyCv/Jicsf7IVtIl5GmjirKSeY4Mbpjkzora/sSHP37OZiGlKfip3g5PRmVvhuPiOcabkc18O1+TJPZmYL0SsHbmENwvtZ0dAcH2n9uHPmFX3mvLY0lmvINE8bdt2xIsjDeSlMr7fcoQ7HL/QEsCS8d";
	return BattleScene303UI;
})(View)


//class ui.battlescene.BattleScene304UI extends laya.ui.View
var BattleScene304UI=(function(_super){
	function BattleScene304UI(){
		this.renderlayer=null;
		this.stonelayer=null;
		this.camerapoint=null;
		BattleScene304UI.__super.call(this);
	}

	__class(BattleScene304UI,'ui.battlescene.BattleScene304UI',_super);
	var __proto=BattleScene304UI.prototype;
	__proto.createChildren=function(){
		var temp=BattleScene304UI.uiView;
		BattleScene304UI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleScene304UI.uiView);
	}

	BattleScene304UI.uiView="eJytk1FvgjAUhf/LfUZprQXlbY97XrJsWfZQ4Q66aWnabkqM/30Fh6KTOMNeGnLD/c49vadbcJVGSOBR4hoC0KbUFpItrGXmCkgmhPIACpR54SChnPJdAGkhlxkkL9u2+X4lcux2byAZzYIjhJEA7IdU/l9hLTobOtw484nhSuhFHjIyHb/rHM6kdsFB4kEb6U40Kkg8ddOcJ9N+CeMbDKoMzVJUaHyXEiv8VexqeVciLfDOo2EhnR8L/uTUT0HJNGoGmU9mB5s2RYW1rzBDkY21qs0JlRalefYt7feTH79r8xJ/HtEGz6akBz8ZyN/fIyWcXxGwqViiZ45ojxi9JhYR3ohFcdyjxQaZiQj9McP6lsFuMPM6JILWlQrPEnhSu/ldVW1YveZszi4YfCsNDrrAA59eSluNH5a2Dj++pvAvG4p5G+/a0X4zqV+GEbqUyh1X0y3W3G/VjpBD";
	return BattleScene304UI;
})(View)


//class ui.battlescene.BattleScene305UI extends laya.ui.View
var BattleScene305UI=(function(_super){
	function BattleScene305UI(){
		this.renderlayer=null;
		this.stonelayer=null;
		this.camerapoint=null;
		BattleScene305UI.__super.call(this);
	}

	__class(BattleScene305UI,'ui.battlescene.BattleScene305UI',_super);
	var __proto=BattleScene305UI.prototype;
	__proto.createChildren=function(){
		var temp=BattleScene305UI.uiView;
		BattleScene305UI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleScene305UI.uiView);
	}

	BattleScene305UI.uiView="eJy1k19PgzAUxb/Lfa6DTiDAm48+mxiN8aErV6hCadrqRgjf3eIGjv0JJnNv9Kbnd865KS3YRiGk8ChwDQSUrpWBtIW1yGwBKU3iiECBIi+sOwVx1BHghSgzSF/aQXxfsRz31c32LoENpD6ZwsyHkE7DjEFrPIsbqz/Rq5ha5d6tHy7eVQ5TSwJM8qLWz+44fD85cNeRMcKD0sIeZvBPBvhi2gk0ygx1yRrUTiVZhUfDaQbOeIF3Dg0rYV1c+Osmot0iaOyP7Q1HiX1dL0OWLRdK9qXna57ixzt+uLwun9JgzsBwVqJj3tAzZnTObFxW6F/fLIi2ZtGVNjfwqR/+R5nXS967sbXEg+c+mV36kx/Ve6s1zqxvtlFA4x9+kgRDEe6ya6ZqIe1vk/1hj/0GYT98AA==";
	return BattleScene305UI;
})(View)


//class ui.battlescene.BattleScene601UI extends laya.ui.View
var BattleScene601UI=(function(_super){
	function BattleScene601UI(){
		this.renderlayer=null;
		this.camerapoint=null;
		BattleScene601UI.__super.call(this);
	}

	__class(BattleScene601UI,'ui.battlescene.BattleScene601UI',_super);
	var __proto=BattleScene601UI.prototype;
	__proto.createChildren=function(){
		var temp=BattleScene601UI.uiView;
		BattleScene601UI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleScene601UI.uiView);
	}

	BattleScene601UI.uiView="eJyNkEFrAjEQhf/LnBeTSNeF3Dz2XCgt0kPMDpu0bjYksbos+98d3VqjBetlGAa+9+a9AVLvESS8WtxBAT50PoIcYGfrZEDOOecFGLSNSSBFyZ/GArSxmxrkajjDz61qMKd7kITtT/NKKX5ZR4CKEVNkCfcpbJG1yq8bNp99+gZu3Mbi1+XFB5ses/lWgYCArsawUT0Gopxq8c8x96JgShtckjSsbaKn4NGwEz498hMxanTIFlwwwXlZLWbeHcMpp00X3gk5729E5THv6l+1eGNR3bMQ4/jxX5dVObUpsg41tRaU76xLlw7z41H3AKEEsps=";
	return BattleScene601UI;
})(View)


//class ui.battlescene.BattleScene6022UI extends laya.ui.View
var BattleScene6022UI=(function(_super){
	function BattleScene6022UI(){
		this.renderlayer=null;
		this.camerapoint=null;
		BattleScene6022UI.__super.call(this);
	}

	__class(BattleScene6022UI,'ui.battlescene.BattleScene6022UI',_super);
	var __proto=BattleScene6022UI.prototype;
	__proto.createChildren=function(){
		var temp=BattleScene6022UI.uiView;
		BattleScene6022UI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleScene6022UI.uiView);
	}

	BattleScene6022UI.uiView="eJyNj8FuwjAMht/F54qGaoCU2447T5o2oR1M6jXZaBo5YVBVeXcMha1oh3GxLEvf//sbIPWBQMOLoz0UELgLEfQAe1cnC7pSShVgyTU2gZ4v1EMuwFi3rUGvhyv81GJDU7oHLdjhPG+S4pfzAmCMlGKZ6JB4R2WLYdOUS1VVs8/QwE2hyrn4KXoO7NJ9Td/IAjD5mniLPbFQHlv6c5x2iRsaS48SDRuX5C+413fEx0cultGQp7NW+dExzYI/uaE3tuM3Ia77q0A5v//nuVqMBfOJnxEjxtA5n379psdT7hFlcpcj";
	return BattleScene6022UI;
})(View)


//class ui.battlescene.BattleScene602UI extends laya.ui.View
var BattleScene602UI=(function(_super){
	function BattleScene602UI(){
		this.renderlayer=null;
		this.camerapoint=null;
		BattleScene602UI.__super.call(this);
	}

	__class(BattleScene602UI,'ui.battlescene.BattleScene602UI',_super);
	var __proto=BattleScene602UI.prototype;
	__proto.createChildren=function(){
		var temp=BattleScene602UI.uiView;
		BattleScene602UI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleScene602UI.uiView);
	}

	BattleScene602UI.uiView="eJyNj8FuwjAMht/F54oGNIaU2447T0JDaIeQek02mkaON6iqvDsuha1oh3GxLEvf//vrgbuIoGHt8QAFRGpjAt3DwVfsQC+UUgU49LVj0POlesgFWOf3Fehtf4WfG1PjlO5AC3Y8z5uk9OmDACYl5FQyHpm+sGxM3NXlo1rMPmINN30q5+Kn5yWS5/uKvg0JQBgqpL3pkIQKpsE/x2mXqBnr8EmiYedZ3oJ7dUd8fOQimSwGHKzK95ZwFsOgZoJ1LW0EuO6vwuT89p/majnmzyd6VoTIxNYH/tWbHofcE2+Dlr8=";
	return BattleScene602UI;
})(View)


//class ui.battlescene.BattleScene6UI extends laya.ui.View
var BattleScene6UI=(function(_super){
	function BattleScene6UI(){
		this.renderlayer=null;
		this.stonelayer=null;
		this.camerapoint=null;
		BattleScene6UI.__super.call(this);
	}

	__class(BattleScene6UI,'ui.battlescene.BattleScene6UI',_super);
	var __proto=BattleScene6UI.prototype;
	__proto.createChildren=function(){
		var temp=BattleScene6UI.uiView;
		BattleScene6UI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleScene6UI.uiView);
	}

	BattleScene6UI.uiView="eJzFWMuO2jAU/Revefj67ey67LpS1arqIgMWpIUQJWlnEJp/ryE2pWAPyG40GxQico7v65wbDqjfNwYV6HNlntEENe2u6VBxQHtU4Al6OX0+V8t+jQqCsf2yNtVq3aMCOGavE7RYV5slKr4dPNDHbbkyQaQpv4ACe6/7WdX2ibLrTN/Ne/PSt7/MfFs2T6u5mP1oVuiK7nVypvnUtFUf5rk+8e+ytQ+0pl6adlPuTWufqsutubl5yWUjKxdr88FCo6eqt4dCj0arNDmdAzCj5yC7hanNXMwBUybprKmPwZX1Yr1rv9qf+usv9viXYYbwJdMDvhT6bfxuUW7MAH+6tOhTmEGEGO4RAxDtI8NjRAaUMUdAxRgEWgmXOskTUpecOIK5L9mduP5zyZTGLqFaBomFHiVgIPRdeC3wu/BycHlWioV5IXMypJuMk7qECEgeAdbgCSBMkDd6Sg8doXi4MONMnhRu8HA4a7mChbHv8zt6kohPwJ9/FCsBoEPVlQgXfSQ99GOqkuQwmVbAUC3N1ShDyvHgj2FbzkTX2ElMxPXPypbaCgy8R42CT7n33nHOz5UrrgzvJkLl4TO3dmkdUXiZOepUDvgq0pwiU6qEy39YqQTPTI9wW29YqAS7A/89Z7nv+l1trnb7f+6lvLVo4iIiEK649APd7vqyr3b1UZxwhgMPDUZJRIvJDR1Pn3Y5BMd1ZJO/JcuJDXx3EPU4H8ngA9/sKrJuBPhocjqVm91odLedAiTZCOiwCopY6UJtmcwGVAy+wFTEq/NsTXHXGUJEKhUI55ju1HDcxkYii7rEN3TJbajdWxDTYUkPcE2P+pkqwXhIpYwJSICOJPf8WR6ZiPRhgO74Wp9aOOX+fCDk4crlSAgl58aMvDsE+FhGY0q33zH2uN28Vb67jqr8RnnhpAtrnm3Z7Kq6/2ullzePuH8AINX7GA==";
	return BattleScene6UI;
})(View)


//class ui.battlescene.BattleScene7UI extends laya.ui.View
var BattleScene7UI=(function(_super){
	function BattleScene7UI(){
		this.renderlayer=null;
		this.camerapoint=null;
		BattleScene7UI.__super.call(this);
	}

	__class(BattleScene7UI,'ui.battlescene.BattleScene7UI',_super);
	var __proto=BattleScene7UI.prototype;
	__proto.createChildren=function(){
		var temp=BattleScene7UI.uiView;
		BattleScene7UI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleScene7UI.uiView);
	}

	BattleScene7UI.uiView="eJy1k8tOwzAQRf9l1qGxk6ZOvWPJGgmBEAs3GSWG1rFsQ1tV/Xem6Ss8okCl7kZj3XvmjjUbCGuLIOFB4xIisK6xHuQGlroMNciEMRZBjbqqA0guJvk2gqLW8xLk8+YovluoCrvqNUiSrUDeZNHZilPPv2lDCuU9Bh8HXAX3jvFC2VkVi9GrreAbbhudMPfW6fA7h0VfJ/5QjgQOTYlurtboSGXUAn80uyxKpooab8kaZjrQUPDXtFxkvB1kmkxPIX2BBmMRcxpJsPHIml06X6g5PpHkUD7SlqhWpqgbt+/va3rg3fg93OS06P9i+6hsiComWQvljCc92OQqaXnKDuCU94DTq4KTPB/gXrjRLG/9x1MxsNDL/LkQaQvIs0kPgA8AXoYuMWfHzzlfYEE355RttAnnC+w2d76fhqZatw==";
	return BattleScene7UI;
})(View)


//class ui.battlescene.BattleScene9UI extends laya.ui.View
var BattleScene9UI=(function(_super){
	function BattleScene9UI(){
		this.renderlayer=null;
		this.camerapoint=null;
		BattleScene9UI.__super.call(this);
	}

	__class(BattleScene9UI,'ui.battlescene.BattleScene9UI',_super);
	var __proto=BattleScene9UI.prototype;
	__proto.createChildren=function(){
		var temp=BattleScene9UI.uiView;
		BattleScene9UI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleScene9UI.uiView);
	}

	BattleScene9UI.uiView="eJytkcFOwzAQRP9lz6GxKxCNbxw5IyEQQmgbr2KXxrFsQxui/jtbIGCVVOXAxbJXnjc7mgFS7wkU3FraQAE+dD6CGqAHJQrYfpwbq5MBNReCH4ZsY9Lna1dAbexag3oYRtB1iw1Nks4uMpTkWXy2jhUYI6VYJtqm8EJli37ZlNVs5Rs4sNsV3zY3Ptg07XO48SsGFgRymsIaewqsctjSr2HuxcmwNnTFaFjaxEvBX9PKhbwcF/mKGGtyVFalJtQz7/bB0NWmC/f8fbzfsSKPOMWuhDiCXll8s0/yX+jyfCGPGMxPGDye6kiK0SQrp+Y6AvrOuvRTTj7cg98BiXnTfA==";
	return BattleScene9UI;
})(View)


//class ui.chat.ChatFullView.ChatBoxItemUI extends laya.ui.View
var ChatBoxItemUI=(function(_super){
	function ChatBoxItemUI(){
		this._panel=null;
		this._vbox=null;
		this.to_top=null;
		ChatBoxItemUI.__super.call(this);
	}

	__class(ChatBoxItemUI,'ui.chat.ChatFullView.ChatBoxItemUI',_super);
	var __proto=ChatBoxItemUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatBoxItemUI.uiView;
		ChatBoxItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatBoxItemUI.uiView);
	}

	ChatBoxItemUI.uiView="eJx1kVFrgzAUhf/LfQ5VV5WRx+5h7GUMCmVjFIk2mrCYhCTVduJ/XxTtXHEvF25yz/3OSTpwV00Bw4HTFhBoo7QF3EHLT44BjsMUAaO8Yg5wksY9goJxcQL82c3SNyKpWGqvgKMYwQVwiP4saojx85meBM2+MEqIHTH7Ly79TaHqWsmgseP5RssKFvQ4XKMfduryn/GJ1+TjiNWk8IooQUAEr0YglY4a6Ptjj24bX2pS0fs80Zjn4TfQNh0A3PJceFFJhKUz0KnMKT0Qp1iMuIARIYLy7EteZa1lpyme5d/02XCfCUIUhWgoi9TroV/XPA7mvMfocXsjCyKrs58MnhiX1NLgzkqppFuaIbJgynz4j9skc/c+dsMTHfsfKtmw1w==";
	return ChatBoxItemUI;
})(View)


//class ui.chat.ChatFullView.ChatRoomUI extends laya.ui.View
var ChatRoomUI=(function(_super){
	function ChatRoomUI(){
		this.bg=null;
		this._panel=null;
		this._list=null;
		ChatRoomUI.__super.call(this);
	}

	__class(ChatRoomUI,'ui.chat.ChatFullView.ChatRoomUI',_super);
	var __proto=ChatRoomUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatRoomUI.uiView;
		ChatRoomUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.chat.item.ChatRoomListItem",ChatRoomListItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatRoomUI.uiView);
	}

	ChatRoomUI.uiView="eJydUl1rgzAU/S/3OaixVjtf+zAKY4w9jI0xJNXUhMUkxDjXlf73pbG2MhyMIQQj556PezyA3WsKOTxx2gMCbZRuIT9AzyvLIF9kCwSM8ppZyFfpEUHJuKggfz2Mk5uG1HQ6uoc8QvDpzynNBzEOvq0dtn3n0r2XjNiQESHCXeeObV0YpZpAS4/hX/TWcKcFS4witIhRBFczOEuOR3RxcT9nI069D7xKL5KCyLpzyHDNuKQtDX942Clpi14ZUZ1tEFkyZV5cmmA53p79bSo/qz5sAeP0t8Ad94ELrbi0Xu+PnHGy/B/nA5FUTDmHUgp9/u4k0niQuLm2h5O54u94a+d+GZyMXRdigLSalNStMJvUF8VznGsX5tHZ31jaTLlNJy1vTohGVZ2gbXCKHXAHC8aZk5/znCQea6isqHELePPPN5DA8CA=";
	return ChatRoomUI;
})(View)


//class ui.chat.ChatSetView.ChatSetCheckBoxUI extends laya.ui.View
var ChatSetCheckBoxUI=(function(_super){
	function ChatSetCheckBoxUI(){
		this.gouxuan=null;
		this.desc=null;
		ChatSetCheckBoxUI.__super.call(this);
	}

	__class(ChatSetCheckBoxUI,'ui.chat.ChatSetView.ChatSetCheckBoxUI',_super);
	var __proto=ChatSetCheckBoxUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatSetCheckBoxUI.uiView;
		ChatSetCheckBoxUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatSetCheckBoxUI.uiView);
	}

	ChatSetCheckBoxUI.uiView="eJyNj8FKAzEQhl9Fxmu03dJVmmNPevCkFESKhGw2GVqTZTPbbl324COIDyD4Ch77QKVv4bS10kORHjKQ4Zvvn2mAFoUBCSM0cxBQlKGIIBuYY0YOZNLvCnAGrSOQ/etWgHY4zUA+NfvJYagPBxcgUwE1yO4x+PZFWXOIxwl67munqBMNEXrbqfDZhqqulJ/ws5eFt3CSjLMvrrbhXGeqZOZXxNT/SbuQdtyKP/2DqenoZWmyt2cmakZoQ0pYfS9Xy8/11/v67YO7efB0j6+s6vV2P2buUJchhpzOHtWNQcZ0mIaN63yQp4Mk3S4xbn8A6oqIJw==";
	return ChatSetCheckBoxUI;
})(View)


//class ui.friends.items.ChatLeftItemUI extends laya.ui.View
var ChatLeftItemUI=(function(_super){
	function ChatLeftItemUI(){
		this.bubbleImg=null;
		this.playerNameText=null;
		this.headImg=null;
		ChatLeftItemUI.__super.call(this);
	}

	__class(ChatLeftItemUI,'ui.friends.items.ChatLeftItemUI',_super);
	var __proto=ChatLeftItemUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatLeftItemUI.uiView;
		ChatLeftItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatLeftItemUI.uiView);
	}

	ChatLeftItemUI.uiView="eJyFkVFLwzAQx7+KnK9R27J1tW8+iAzEF4coIuO6XpNompQ0detGv7vptm5OQSFw5J+7//3usgHXVgQpPElaAoPKmqqGdANLmTsB6WgSdAwWQqoc0tfNkD0tkdP39BbSMYMVpAGD+kNqn1NYSTqvrxo5F2ha08ydaVYSNZ/XJSp1WWnuLWq5pjsrvT2EERsOdB37s1sUbNvFCRtQoyRm8InWF2RNlimallv/XzTcaC58XL8H4wFigYqeIb0IGQiSXDg/+ogB6oUw1j+EJ6BRxKKEhWMWJieg95iR+gG645zER874wFkpbMk+YEkzWjlf6PqQwotp7Jn2spdK09Q0E9Y03BcXqGrai7ca/ZT5QRzA+9UURrtHD3y8edsbK7HHWxhl+vbniHERXXsFleT9lhQV7t/VHz56P1AcDPMIwny39YElDrrurfsCho/Ajw==";
	return ChatLeftItemUI;
})(View)


//class ui.friends.items.ChatRightItemUI extends laya.ui.View
var ChatRightItemUI=(function(_super){
	function ChatRightItemUI(){
		this.bubbleImg=null;
		this.playerNameText=null;
		this.headImg=null;
		ChatRightItemUI.__super.call(this);
	}

	__class(ChatRightItemUI,'ui.friends.items.ChatRightItemUI',_super);
	var __proto=ChatRightItemUI.prototype;
	__proto.createChildren=function(){
		var temp=ChatRightItemUI.uiView;
		ChatRightItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ChatRightItemUI.uiView);
	}

	ChatRightItemUI.uiView="eJyFkV9LwzAUxb+KXF+DtnHrtr75IDIQXxyiiIzbNU2iaVLS1q0b/e7ebuv+KCgEQg733vO7JxuomkJADM9aLIFB4V1RQryBpU4rBfFgFLQMFkqbFOK3TV89zVGK0/IG4hsGK2oIAwblp7ZUlXktbFpe13qu0DWunleuXmm0cl7maMxVYSUNKfVa3HtNBhBy1h9oW/anHw92hgFnPS0fRwy+0FNHUieJEdN8a/ALRzorFd3rj2C4p1BCS1XRvAEDtAvl/AvE4Rkd54yPWThk4fiM7gETYX7Q7eBCPjrCRQe4wmAj/CPmYiZWFXVW3RXDq6v9hSWZpNzVpZgp72pJzRmaUuzFO4u0WnoQe/IukMzZ6omIjy8ae+s1dnwLZ1xnf4kYZXxCChotu2j8dsJ/iZ/88H6nKOhXUgLTXdo9ThS07Xv7DU1/vrU=";
	return ChatRightItemUI;
})(View)


//class ui.friends.views.BattleReportViewUI extends laya.ui.View
var BattleReportViewUI=(function(_super){
	function BattleReportViewUI(){
		this.list=null;
		BattleReportViewUI.__super.call(this);
	}

	__class(BattleReportViewUI,'ui.friends.views.BattleReportViewUI',_super);
	var __proto=BattleReportViewUI.prototype;
	__proto.createChildren=function(){
		var temp=BattleReportViewUI.uiView;
		BattleReportViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.friends.items.BattleReportItem",BattleReportItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleReportViewUI.uiView);
	}

	BattleReportViewUI.uiView="eJxtj09PhEAMxb9LzxMWkLhkjnsxm3hyjRdjDIEKjfMvnYF1JfPdHUWRw6antr++9zpDuDgECU+EZxDg2DoPco4C2oFUB/J5/kOOuulxw8CZujCArOpcgH8nk5jWar0b6dUgtWgyZ/p04OkT75iSGBS1KCtRlqLYp8WA1A8hKRQ3MYrV6J582PpcQO4FfICsxep5WwmYGk60Wujp1LJV6tDw6T+KNbvJ/8x/o6yOeX7txUMTgsIHdJbDMaDepuDRBNLflLbdqNBnb0xoOp9RIn125ZbTGvlx0V4aiPEl1Rd3O3w5";
	return BattleReportViewUI;
})(View)


//class ui.friends.views.FacebookFriendViewUI extends laya.ui.View
var FacebookFriendViewUI=(function(_super){
	function FacebookFriendViewUI(){
		this.list=null;
		this.inviteBtn=null;
		this.titleText=null;
		FacebookFriendViewUI.__super.call(this);
	}

	__class(FacebookFriendViewUI,'ui.friends.views.FacebookFriendViewUI',_super);
	var __proto=FacebookFriendViewUI.prototype;
	__proto.createChildren=function(){
		var temp=FacebookFriendViewUI.uiView;
		FacebookFriendViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.friends.items.FacebookFriendItem",FacebookFriendItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(FacebookFriendViewUI.uiView);
	}

	FacebookFriendViewUI.uiView="eJx9UlFu2kAQvUo1/bWMjU1c/FcqpYoU5YeoStRWaDGLPc16191dQ1zECfqRU/QYPU7u0VnbgJOiyBiY1Zv33s6bHdim4pDCF+Rb8KDSqjKQ7vYeZAWKFaRfdwfINRo7gEADaRJ48Ajp2IMtrmwBaTS98GDDNMFFB9/MM62EmDE9f0BJ59/ooXNTsYzfQxp7oHnFmb2DNPSg4JgXloii6JyHS2paKvVwqZHL1ZXl5dCRrqXF0uFKtaoFN/66xRkfCWn8s92a/nJ92/F3Bez33/feUfSqZDl/dfPu4vRtulv1QqMaFwVTjapDv5I5Eb1NE32ID0T9BOPgDdLFD2RySa9Fpv4TuJnV1ir5SiKOky6k4CQSToJDTCg3NJyZdW29bKbKUkmn2nAh1HaRBK0W8eJG2XvH5U/6imKbjF0l2JIL6oZTiDEtg8Ff/LNGShHC2Dt84Fy4N+cmNB637pPkaE8wmdcEHH0qUHLDR4MxrfuEm59F03tmMiuUJtOt5666a6uXKV+3/l+Kh534xWC/j4OzaAW/5Y9uya37OW3nu+c/f5+ffg8nQau9VtLOaRrEEnQVtXzUyJxqpoRyrO+nySQKps63wLxNg0vbr+Q/rP8t/g==";
	return FacebookFriendViewUI;
})(View)


//class ui.friends.views.GuildFriendViewUI extends laya.ui.View
var GuildFriendViewUI=(function(_super){
	function GuildFriendViewUI(){
		this.list=null;
		this.addGuild=null;
		this.tipsText=null;
		GuildFriendViewUI.__super.call(this);
	}

	__class(GuildFriendViewUI,'ui.friends.views.GuildFriendViewUI',_super);
	var __proto=GuildFriendViewUI.prototype;
	__proto.createChildren=function(){
		var temp=GuildFriendViewUI.uiView;
		GuildFriendViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.friends.items.GuildFriendItem",GuildFriendItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(GuildFriendViewUI.uiView);
	}

	GuildFriendViewUI.uiView="eJxtk1FrE0EQx7/L+Hokd8klaffNFiyF0pcUbbESNneb3LZ7u8feXtJYAhUphEhtFRSxL33QB0FQEaHU+m1yMR/DvbtcktZAQjLD/+Y/85u5Y1C9gACCx5R0wYBAiiAEdNw3wPEocwE9Pc4lWzRUCxLoATINOAJUMqBLXeUBKq9WDehgqdUsU3fqjhSMrWFZP6Rc5x3h+4IXO2GaLwS8rVVhgB2yB8g2QJKAYLULyDLAI7TtKZ02y8sa2oh04pGkhLubiviLvcmIK+onIl+4ESNhoZXqwgLVyrDw/6NS/yVyJ6ucBdDvP+sbM7tNH7fJPQDlFXs2vG1qHGE25dStGNGGh0VPRI0DinlTfxXFIp26v1B6ey1SSvB7xUuVcsbXtGYmlm3mhLHrpmPAzHXKVpv2CGOi26iZU8AB7Qi1l5QqVKaRRlwpJRHDTcL007AAXK80pM/JhqSaOFi2kX9g2SK2l6EpZcdRm0NhmLcjLSyue5STkBQXKDF6QKe9Yu54Qupm016zaDeN7u5jK+37rqllW6mrpe+wK6T7ROIAkJIRmd9otZYTVDQId8hRcqcq+UEQDy7j3zfjwft4eBWffo5Pv45uP8ZnP+Pzb2h/n4+uX2ep8eAifvNh8mIYf/pi/L28Ht28HZ9dTH5djYcnk5d/jPjHu/j2JD5/Nfk+TPajpDgk64KJxPbBarliaZR5Pn2DGMEu1fMjy5zvYUW32hJc1fUuMqJJpEs8lBQnszt5yVbLrdZaOtMUyW6yiTGj7fQuCFfTc/4HvoRfSA==";
	return GuildFriendViewUI;
})(View)


//class ui.friends.views.MyFriendsMenuViewUI extends laya.ui.View
var MyFriendsMenuViewUI=(function(_super){
	function MyFriendsMenuViewUI(){
		this.bgImgDown=null;
		this.sexImg=null;
		this.detailsBtn=null;
		this.delFriendBtn=null;
		this.inviteGuildBtn=null;
		this.headImg=null;
		this.segmentImg=null;
		this.nameText=null;
		this.guildNamaText=null;
		MyFriendsMenuViewUI.__super.call(this);
	}

	__class(MyFriendsMenuViewUI,'ui.friends.views.MyFriendsMenuViewUI',_super);
	var __proto=MyFriendsMenuViewUI.prototype;
	__proto.createChildren=function(){
		var temp=MyFriendsMenuViewUI.uiView;
		MyFriendsMenuViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MyFriendsMenuViewUI.uiView);
	}

	MyFriendsMenuViewUI.uiView="eJzdlVuL00AUx7+KjK/jmkybpMnbVtl1QRdBEReRMm2m6WA6Ccn0spbCKqwIIvoiok8Krg+i9FFBZb9Mo9tv4Uma6W1r7YJPS0OHmZzLf37n9LSH5H7IkIPucNZBGIVREMbI6fUxqjW47yLnXk+Z7DSpx2Zs0D5yChh1kaNh1OGubCCHWDZG8QMuwL4ecSbc+HKLVyQP40rVq+gbofAgRINxryGRoxfANeYP2XbEIRciGiYmNuAL9ft4ZWa9sDR3m0bgUPV2mt7VoCPQKjVkUQ3knlWT6sCZpDXUaErN6XzVQMqgWfG5YFnGfwUjxSyWvhQl6G4w6q4VyNCzQLahuMSsC2CWQhFUnIq5W26BcrF4V3NM3tIn6HW9pFK4TFLux2W5nD0VPm/l3EPeDuQe3LewYeS7uyAaru3TKvNvQSXgpZ5vb1LX5eDnoEsEa+kH5W+2AgHVQ5sRp746uxL4QQSK0UXbMgqajf+yKvtykDa7jFosP9j0uZdqrzEhWaTM4OBk8PH39yfD4/e/Hg1mmqdozfWOTrB6zoCUaNZypv5WhvD8Uk2evhu9+ZAc/UxePPtfVAlZ1ahctLlk2y2YcucX6+jxwcnga3J4NPzx9uxYlw4nc9ypU6YmUUjTwTSeLyqRSdacUXph2vnF0nReeU240nzMYmk25m3WlYu/Jmsy9lTZLU2FFLTJch+ZLtB6WdMlL58nX15bw2+fYJnJlg72OtQsLzAZ78DtBq9FQRzU5YU9eo1xcKmlZUyrWDdZ1a3NobyeFWRep21P5rz6CytOWHppY+7SJl0Qe/gZSumMF9A8enU8fmYkE2tOsraOZGbQummD5Pv9P7N+kqQ=";
	return MyFriendsMenuViewUI;
})(View)


//class ui.friends.views.MyFriendViewUI extends laya.ui.View
var MyFriendViewUI=(function(_super){
	function MyFriendViewUI(){
		this.list=null;
		this.addFriendBtn=null;
		this.sendOutBtn=null;
		this.receiveBtn=null;
		this.titleText=null;
		this.cdCardNumText=null;
		this.inviteFriendBtn=null;
		MyFriendViewUI.__super.call(this);
	}

	__class(MyFriendViewUI,'ui.friends.views.MyFriendViewUI',_super);
	var __proto=MyFriendViewUI.prototype;
	__proto.createChildren=function(){
		var temp=MyFriendViewUI.uiView;
		MyFriendViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.friends.items.MyFriendItem",MyFriendItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MyFriendViewUI.uiView);
	}

	MyFriendViewUI.uiView="eJzNVctu00AU/ZdhA5KV+Bkn3pFKoEqlLFKhIlRFE3saTzqecWfGSd0qEgsWFSwQWzaw4R/Y8DkB8RfM+NE4qRuKxKKS7eRad+4599yHr4DMUwQC8AqjBTBAylkqQHC1NEAYYxKB4M1V7XKAhWy4gBwEvmmACxDYBljgSMYgcAY9A8whV+6kdJ+PQs4IGUI+OsNUvQ9ZkjDanYvifSelU+UlUhii1yBwDcBRiqA8BoFlgBjhaSxVWMdpY/Qif8YxotG+REmTGc+oxIn2SFiUESQ6p4Wf6GDlKTpb57j6i/hRGbM0wHJ5sjRugPYTOEVbuZepq6co86oguhkex5DlLLOK3JZ/CeP03TpQpaFr7gg6nmFIJ+qWGLJbAIfDTEpGtyBc1ysgrP4apH9TJxhFpRpDqQ/eBoaU4KyqU10QV5Vc4Ev0nGNVEWDZRn2BtkIdtmVuWwUr17kBJZBOM+XY3YsxRQJ1GyzkLM4rEpCGMeOqW8yOV1vHhbVZtd1q2H6bGkLhvczkw9Yin12K/6qF4w1atOAoRHiOHroW4vwftWgfw145I9ZaCatnteU9m0y3srb9jaxNw+4b+rExmwdwgsgWqlJGg/Ya+9Os1ZdYEnSELvQSlfonAD+vP/36/G717cfq44fHZtd80lRecT1lVI4UDxXHLC116CnHUOOGjDAd99HA9xxzoPUieFpsZERlsfJ2k3UGTiWRs5bId2q+YbQHeXSYJZucV++//n77ZXX93TLNrroblC2/Sdnq3005tHzXhrsp39XhfkHa89acteolZ0zn6ovQsv6qj5TuL0QIW4x9s6p5iudMqh6ziyYrLNVjnq0tUqgWgK2yNAfCNerr/gOhW1Kn4N9rIE7Vl3TC2Fl+fs+FebL8Ay7Niy8=";
	return MyFriendViewUI;
})(View)


//class ui.friends.views.PhizViewUI extends laya.ui.View
var PhizViewUI=(function(_super){
	function PhizViewUI(){
		this.list=null;
		PhizViewUI.__super.call(this);
	}

	__class(PhizViewUI,'ui.friends.views.PhizViewUI',_super);
	var __proto=PhizViewUI.prototype;
	__proto.createChildren=function(){
		var temp=PhizViewUI.uiView;
		PhizViewUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.friends.items.PhizItem",PhizItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PhizViewUI.uiView);
	}

	PhizViewUI.uiView="eJxtj81qwzAQhN9lz8KN07RNdMzFBHrooYSG0oOxN9ZSSxaS0vwYv3s3FkmUUiTErvTNjLaHcLQIEtaEexBgXWc9yB72VAcF8nExE6CQGhW4yWeDgEpRW4P87C/SlS4bTLVHkBMBh/FMffw3GearTuvOPCyLzJoG7uyZoRMWjjgA8mdx2TAM4pr3Sj78iZuPcXmS98JeP6VjvI24t2WFmwiN9UesHVosAzdPt59MF/P/Bn1TdFoF1Gm425lA+vyqu3rXos+2jtDUPiMmfZZoHF+je49eseG5vnj9AnDqejw=";
	return PhizViewUI;
})(View)


//class ui.friends.views.PrivateChatViewUI extends laya.ui.View
var PrivateChatViewUI=(function(_super){
	function PrivateChatViewUI(){
		this.chatInputText=null;
		this.phizBtn=null;
		this.sendBtn=null;
		this.itemPanel=null;
		this.itemVBox=null;
		PrivateChatViewUI.__super.call(this);
	}

	__class(PrivateChatViewUI,'ui.friends.views.PrivateChatViewUI',_super);
	var __proto=PrivateChatViewUI.prototype;
	__proto.createChildren=function(){
		var temp=PrivateChatViewUI.uiView;
		PrivateChatViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PrivateChatViewUI.uiView);
	}

	PrivateChatViewUI.uiView="eJyFU91q2zAUfhf1VjSRLSee75ZelN6UQkbZGKNojmJrtSUjy2nS4JvB6M3udrUH2EOMwfo0pd1b7PhfyQwDG0sHfef7kc8emV3GUYCuBb9DGGVaZTkK9uhOrEyMgilGMRdRbGBZYhTGIlmh4P2+g73hW3Mhs8LY2F2N26KAwKdt5PguRhumARPGrMFUYMDlt0JCea0Fl6t8UoibRDBlBJOnmYyaxmlmzlSiKvjJK9cjhPZ1KD1//vn08Ovl8fufh68vv789ffmBBt0URKyVNEtxD4odp9kB6rUWLIGD4T+NWSKiSlLIpeG6kgjYcy3AOiIUdw8qS9wncbkojFHyKAcyr4NwnVnnPovF/cLIUd9b8E1a05Kl3DpuU12kLOJHRJ5bEw2BU3/aU4QqTav+kguw1BLYnnzsUAzRkLkVnOv7/zfoNDdNrasm1boxm4OzA7OdkkjzMSHQjRLseJhOLSEeHfv1LsdiAGglx6M9Y8JkVMDByVksJM/5xMp7zXIlo1YGk2Gs9DvI8NTrdm/rXVl+sHK4YpInR7SzJgVvSH/eZyAMTzvMZhlqlSQLppdDHkpONnldb5X0FzAfNX69UNvRcRuu4IC8PZ9nLAQ4tSf6wNhYnpQ0gTqWM3/s142Z2qni5hNM7Ud4YXrVkRtnVtH9BQ1uadM=";
	return PrivateChatViewUI;
})(View)


//class ui.friends.views.SystemInfoDisplayViewUI extends laya.ui.View
var SystemInfoDisplayViewUI=(function(_super){
	function SystemInfoDisplayViewUI(){
		this.itemPanel=null;
		this.itemVBox=null;
		SystemInfoDisplayViewUI.__super.call(this);
	}

	__class(SystemInfoDisplayViewUI,'ui.friends.views.SystemInfoDisplayViewUI',_super);
	var __proto=SystemInfoDisplayViewUI.prototype;
	__proto.createChildren=function(){
		var temp=SystemInfoDisplayViewUI.uiView;
		SystemInfoDisplayViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(SystemInfoDisplayViewUI.uiView);
	}

	SystemInfoDisplayViewUI.uiView="eJyFkEFvgzAMhf+Lz9EKKRsox16m3SpV6qWaqgw88AYJSigtQ/nvS1kLrKrUQ6LIeX6fn3touhpBwJbwCAxqo2sLoncM0oLKDMSuv0reKpnjTAMdiIDBabiPlDUFiCjxb/tNyutTXVWLA+0VUorqqVa5b7b0g6+GvDGECeMR45yFsf8okPKi8Q7h0jk2QtdSYXkDjQfo8wSNPbSVxsupwera0m5So8tyJc1mGkirRWuH+mWgkRsE90JvV/r0IPM/+EVva5n69mjyD5x7n+W6t8xl8peMz5Il4zo/DaHK7HmjhdSdPuy/SKoPfxqS+iYNfznjfgHlwJZ/";
	return SystemInfoDisplayViewUI;
})(View)


//class ui.friends.views.SystemInfoViewUI extends laya.ui.View
var SystemInfoViewUI=(function(_super){
	function SystemInfoViewUI(){
		this.systemBtn=null;
		this.battleBtn=null;
		this.systemInfoPoint=null;
		this.friendsBattlePoint=null;
		SystemInfoViewUI.__super.call(this);
	}

	__class(SystemInfoViewUI,'ui.friends.views.SystemInfoViewUI',_super);
	var __proto=SystemInfoViewUI.prototype;
	__proto.createChildren=function(){
		var temp=SystemInfoViewUI.uiView;
		SystemInfoViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(SystemInfoViewUI.uiView);
	}

	SystemInfoViewUI.uiView="eJzFU7FOwzAU/JfHarVJoNBko0yVEEICIRCqKqd1EovUjhKHJq0ysKEysLIhBmaQGDvwM9DyGdhJW9oqEiyA5OU9n+/uvZOHINKAgAUnlPQBQRDyIAJrmCHoeNTvgnU+nEMOGrEQnC2hIAVr00SQgKWbOwgucShxURoJ0msIhYwuKJMtJ6SEdaNqTNsJZQltDzzO3LamVwLmQqlYs4ddsqZVz6WMrQWvj5kbS1x1z6OMRKS6IiTNurmAxHewT87A0irmrDjNiyxDC8l9bBN/TdHYLqbTpGafdoUnW3U5qSCJkE+mL+Pp+P7t9WFy9SRfMtxTRLZgx+oegUeo60mgYSBwOBNHdCABhlZUErobUqw0O9znancbplMz9Zrs2FwtRIQxybLWksvyFPS50a8YbCyET/49hjSNfjeD99ubj+fR5PpOndHjH8VQthet8GmsfoQmc/ghp0yU5sBIv1j+N9xq4BXyGUcjT/kn/K3sExwwSYQ=";
	return SystemInfoViewUI;
})(View)


//class ui.friends.views.TipsViewUI extends laya.ui.View
var TipsViewUI=(function(_super){
	function TipsViewUI(){
		this.tipsText=null;
		TipsViewUI.__super.call(this);
	}

	__class(TipsViewUI,'ui.friends.views.TipsViewUI',_super);
	var __proto=TipsViewUI.prototype;
	__proto.createChildren=function(){
		var temp=TipsViewUI.uiView;
		TipsViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(TipsViewUI.uiView);
	}

	TipsViewUI.uiView="eJxNj89Kw0AQxt9lvC5q+g/cm0fBm6IHK7I2m2Ro3F02W9saAoknqYcevHqooIJHkdZg8Wk0IX0LN4jS08fMfN9vZmIwY8WBwhHyIRBQWqoIaJwQ6AUYukBP4j/L3gXz+ZoHoj4K2/c0cuFGWwM860vhbyrhQ5KQ/9w+O+fhem4MtNHoEBhZbbUJDKV2jzVTQI0ecFujawI723YIXDJtEQZVdMhHxlJMLRTK92UxmX3nH2WelzfT4umzmN52u6JcPlSLtyqbFI8vX2lWzWerNFvdp+XrdXH3bPMBRz+whE6TgCeFOcArXu/6rSx5VyOrz+3JUNa7N3aabcdp2Q4L0a8fDrln7IenyQ9Q0XiP";
	return TipsViewUI;
})(View)


//class ui.guild.item.BuffInfoListItemUI extends laya.ui.View
var BuffInfoListItemUI=(function(_super){
	function BuffInfoListItemUI(){
		this.infoText=null;
		BuffInfoListItemUI.__super.call(this);
	}

	__class(BuffInfoListItemUI,'ui.guild.item.BuffInfoListItemUI',_super);
	var __proto=BuffInfoListItemUI.prototype;
	__proto.createChildren=function(){
		var temp=BuffInfoListItemUI.uiView;
		BuffInfoListItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BuffInfoListItemUI.uiView);
	}

	BuffInfoListItemUI.uiView="eJxdj0tqwzAQhq9S/m5FGicBU12gBLprySaEYBxZHuJKRlaeRhcI2RW66U1Ke5v4Hhm7rxAtRgz65v9GNfyuVJCYkNpAoHS2rCDrIJDmVCwgp/UvMn5JtLpgsIPsC2y7uqGFzyGj+F6gWpJhXq844G5F88ote6XRPFrRXj044lhEfRGNRFf5IVekcw85jEMQf8ZntfVXwrgTRsN/44iN68QxTiazPyO+vSROX6/N4b35/GiObzePk8GFacBLZ9b4J17pu0ttYduY26w7zCYF6fYnqTJeOYQwC2c/0GIf";
	return BuffInfoListItemUI;
})(View)


//class ui.guild.item.GuildDonateRewardItemUI extends laya.ui.View
var GuildDonateRewardItemUI=(function(_super){
	function GuildDonateRewardItemUI(){
		this.icon=null;
		this.nameText=null;
		this.countText=null;
		GuildDonateRewardItemUI.__super.call(this);
	}

	__class(GuildDonateRewardItemUI,'ui.guild.item.GuildDonateRewardItemUI',_super);
	var __proto=GuildDonateRewardItemUI.prototype;
	__proto.createChildren=function(){
		var temp=GuildDonateRewardItemUI.uiView;
		GuildDonateRewardItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(GuildDonateRewardItemUI.uiView);
	}

	GuildDonateRewardItemUI.uiView="eJyFkb1OwzAUhV8FXVZT0vzV9YYYAAkmED9CDCZxEtPUjhy3aakyMDHzNrwQA2/BTaq0KRIlg6Nj33vO/ewV2GUhgMGtFBUQKIwuSmArqGRsM2DDoUsgEzLNbCNoTSDKZB4De1x1rRdTnop+7xKYQ2ABbEw6H0oJlBOpsNyIipv4eCaPXqSazLhKB4VKsb+Ur+LMSPQGh7geaRbYplNa12RvqO+3qYG3iQ1HBObcYL2MtOqZNQdcRZk2DzjsIOjUfav6QZf8WeS/gsbjdVCIQdrEd4YXwBKel4LsXNw6WvGpuBELiya2+TH4fv/4+nxDrefCJLmucC+TcSz6I7pokGhlr/Fa0I+uFVZeycjoUif24IGfC4ktkc51k3SYtB/sY0OVy7R5iEgoKwz8BxuGLSz1N2wB7dAiPVN2h81z8OlLa/REnHZT+dwNHB+6fUTrUTp9yk5h14mRPO+zDUdJEnt/sw23ZKb1ruun+gefhONt";
	return GuildDonateRewardItemUI;
})(View)


//class ui.hall.AuthorizationViewUI extends laya.ui.View
var AuthorizationViewUI=(function(_super){
	function AuthorizationViewUI(){
		AuthorizationViewUI.__super.call(this);;
	}

	__class(AuthorizationViewUI,'ui.hall.AuthorizationViewUI',_super);
	var __proto=AuthorizationViewUI.prototype;
	__proto.createChildren=function(){
		var temp=AuthorizationViewUI.uiView;
		AuthorizationViewUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(AuthorizationViewUI.uiView);
	}

	AuthorizationViewUI.uiView="eJxNy00OgjAQhuG7fOtGIBoWcwMvwIawqNJ0Rn7awBjEpneXmJi4eVfvk6B7dCA04jYYxCXEFZSwSa8MqqpzbcBOPCuovpTZ4M4y9qA2/ex1st794x1UGry+XQeZj8c+lcMib6sS5uLmT4/okXOXP28HKcM=";
	return AuthorizationViewUI;
})(View)


//class ui.hall.item.ModeChooseItemUI extends laya.ui.View
var ModeChooseItemUI=(function(_super){
	function ModeChooseItemUI(){
		this.btn=null;
		this.msgBg=null;
		this.msgNun=null;
		this.msgValue=null;
		this.openBox=null;
		this.openLevel=null;
		ModeChooseItemUI.__super.call(this);
	}

	__class(ModeChooseItemUI,'ui.hall.item.ModeChooseItemUI',_super);
	var __proto=ModeChooseItemUI.prototype;
	__proto.createChildren=function(){
		var temp=ModeChooseItemUI.uiView;
		ModeChooseItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(ModeChooseItemUI.uiView);
	}

	ModeChooseItemUI.uiView="eJyVk99u2jAUxt/FuzXDdkiAXMJVpaqatKq7mKbKgZPEqrGjxKEwhLSH6Dv0HaZqb7PtNXpMUqCkVVvnwn9y7PP7vmNviFsXQGJypeCWUFKUtqhIvCG3au5yEosooiQHleWOxEEUbCmZ5UrPSfx987T1YlI7Z83x7jWJ+YhTssI+CChZyhIDE+eDqhtlcKKlyWqZQX+aKwMV9Bd2DrPcWhwWS2D8c2Eyst3SfZ4vVq9PkwTRLkmIXQlmDuVlE5sr50OtMg5jSW9EezwYUsHaAY8YFYLRXjjCfoCxGim+NaJ5M5tabT32pzRl2DAmVVrvVxlLsT0jPFugoBPE8Q5wMHgyYVFlk+xgQy617tfqOsk6ei9h5U71ikYuErYFGvuDVaUSjVtSqSs4SnRRe8OdP8cbnoD2iV1pbw7ihBhJOduvY8kPBRc4Tq1xX9VP/4Nh8Q+edNSftwleAObBO4mvpK7hTWYmw1AEH2YeRmnKk2fME7s6JebDBnn8GqYtwPh9L72Fzg3Ak4ZRp9pVbd9T7nHzhMK9d4KzY4pzWO7sad0K//++//vw69/dn65l00l7h9+2bNAtMyVSq8wrmIFxUCL4D/weAb5YUPA=";
	return ModeChooseItemUI;
})(View)


//class ui.hall.tips.PrivilegeTipsUI extends laya.ui.View
var PrivilegeTipsUI=(function(_super){
	function PrivilegeTipsUI(){
		this.bg=null;
		this.txt=null;
		PrivilegeTipsUI.__super.call(this);
	}

	__class(PrivilegeTipsUI,'ui.hall.tips.PrivilegeTipsUI',_super);
	var __proto=PrivilegeTipsUI.prototype;
	__proto.createChildren=function(){
		var temp=PrivilegeTipsUI.uiView;
		PrivilegeTipsUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PrivilegeTipsUI.uiView);
	}

	PrivilegeTipsUI.uiView="eJxdjj1OxDAUhO8ytBYkBi3IHdVCDYICIRQSJ3kiiS3HS3aJLEHLETgIFeeBkivw4iWAkCz/vZn5ZoTfWA2FC9IDBKwztocag0BeU1NAXY2z5LTNKv1Hgw1UIrCO+0CFr6HkYl/gPnMsv61Y299Rx/fctO3eim482X7XdnFCD3rpiAmQiZgXD2pNVe2hUilDED/05ble+3/0NI346RiMKy5dZqG8W+nfPgfJ3MdHu59SFD6eX98fnz7fXviL+hPfNjH+2zxXkFKgNJ0/466MOdq+2H7sKGvYmpvGTNk7ZVksDkuEcB2+AAwDa3k=";
	return PrivilegeTipsUI;
})(View)


//class ui.levelBox.items.LevelBoxRewardItemUI extends laya.ui.View
var LevelBoxRewardItemUI=(function(_super){
	function LevelBoxRewardItemUI(){
		this.nameText=null;
		this.icon=null;
		this.countText=null;
		LevelBoxRewardItemUI.__super.call(this);
	}

	__class(LevelBoxRewardItemUI,'ui.levelBox.items.LevelBoxRewardItemUI',_super);
	var __proto=LevelBoxRewardItemUI.prototype;
	__proto.createChildren=function(){
		var temp=LevelBoxRewardItemUI.uiView;
		LevelBoxRewardItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(LevelBoxRewardItemUI.uiView);
	}

	LevelBoxRewardItemUI.uiView="eJyFUU1Pg0AQ/StmvK4VWim4N+NBTfSk8SPGwwoDrKW7ZNmW1oaDJ8/+G/+QB/+FQ+taamzkAHnDzHvz3izAzksEDtcSa2BQGl1WwBdQy8TmwH2/zyBHmeW2BVHDIM5lkQC/X7jRs7HIsDs7B37AYAY8Yo7nMGRQjaSidoO1MMn+RO49STWaCJX1SpXRfCWf8cRI4gaP9QesfcFaPYqahv2InotHLH6J+t5KNhiSrjbJjREl8FQUFbINQ1NhiEKJMV7hzBKLbT8cPl/fPt5fCOspmrTQNdVymSSoOnv0iSDVyl7SusQ3XCHqvJCx0ZVO7c6dOEVJI7EudKu0my4fqggV59rcAfd6gUO3DhUyawOKUVk00HX7Z8TR2uzK2zB01mSsuyu3P7Yr/xdr+H3M9TWDyAnFeqLsRogDz6NTWqNHeOzs+2EYeCG4OjV14vS6cTpEU0dGiqIb4sBP0364PUR/HaFZcjfNQ/MFnebjRQ==";
	return LevelBoxRewardItemUI;
})(View)


//class ui.levelBox.items.RewardItemUI extends laya.ui.View
var RewardItemUI$1=(function(_super){
	function RewardItemUI(){
		this.icon=null;
		this.numText=null;
		RewardItemUI.__super.call(this);
	}

	__class(RewardItemUI,'ui.levelBox.items.RewardItemUI',_super,'RewardItemUI$1');
	var __proto=RewardItemUI.prototype;
	__proto.createChildren=function(){
		var temp=RewardItemUI.uiView;
		RewardItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(RewardItemUI.uiView);
	}

	RewardItemUI.uiView="eJx9kEFLxDAQhf+KjNeg2XRbSm7iQQRvihcRSdu0HTbblDS727XkvzupdLd4EEKSGd573yQT+HOvQcI76hMw6J3tB5ATnLDyLcgsY9BqbFof74FB2aKpQH5Mi/F5rxq9dp5BcgbjvK9Shh12JDf6qE1hx/sDfmFpu6K567sG1hTS4rd+ckgcEIItC0Jg/2KzGZtfsClNcFSO1JG0YqR8HfWiCm3+RG2TOSu5ZqVLVnfYv+nRk8HHQ0LCOadq8M7u9KM1NqpuxTbnm+rSBymufLFhUNvOv9I7qeK/FbkeHKo4SrmkZEVd8/yGWspgEz/QzREhfIYfDoSGgg==";
	return RewardItemUI;
})(View)


//class ui.menu.battle.AngleUI extends laya.ui.View
var AngleUI=(function(_super){
	function AngleUI(){
		this.angle=null;
		this.labAngle=null;
		this.power=null;
		this.labPower=null;
		AngleUI.__super.call(this);
	}

	__class(AngleUI,'ui.menu.battle.AngleUI',_super);
	var __proto=AngleUI.prototype;
	__proto.createChildren=function(){
		var temp=AngleUI.uiView;
		AngleUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(AngleUI.uiView);
	}

	AngleUI.uiView="eJzNkcFKw0AQhl9FxuvSJmlX2tyqBxUUBEEsImWTTpLV7W7YbGxr6Qt49Opdr549+i4FH8NN29RUBOtFTSAwm53/n2/+CZhxiuDDGcchEEi1SjPwJzDkfZOA7zkNAgnyODHgtxpTAmHCRR/8i0nZuatG1cYx+A6B0fy7ucjhgMW4iUx2zaW9HzBjBNYHKPN6zntXnKl+3gviWipjK5PxW9zX3FqA2yaUEs8h1IO1KaZk5X7EAhSf3BsLe5e6BG6YtreYjEUxo8GRKYQd5/W58DJaXeOeEqq4tO1ElAa4OrdjE5BsgBWBSElzaie0Jq1FZX92NGfFDGEpFM0fexKoYldG50isRJgo3bVrqdGyOi8rweNiNyFKgxq+A6TtJaBXAgoWdNYZ357uZy+Pm0F+ULk7K6pjHmqVqchsddkB8t/k85pzvma7xEvV0LZV8/tRemX7l+n9IecyR9qsxHiyjjq7e/jHMV7a9x30h2qi";
	return AngleUI;
})(View)


//class ui.menu.battle.AppleModelUI extends laya.ui.View
var AppleModelUI=(function(_super){
	function AppleModelUI(){
		this.mpImgBg=null;
		this.mpImgExtra=null;
		this.mpBoxFragment=null;
		this.mpFragment5=null;
		this.mpFragment4=null;
		this.mpFragment3=null;
		this.mpFragment2=null;
		this.mpFragment1=null;
		AppleModelUI.__super.call(this);
	}

	__class(AppleModelUI,'ui.menu.battle.AppleModelUI',_super);
	var __proto=AppleModelUI.prototype;
	__proto.createChildren=function(){
		var temp=AppleModelUI.uiView;
		AppleModelUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(AppleModelUI.uiView);
	}

	AppleModelUI.uiView="eJyV00FvwiAUB/Dv8s7EjhbUcHTZFi87LlsWs6AyYGuRtHRqTL/7UNdZbYn1RijvvR//tjtwWyuAwYsWa0Bg85UtgO1grZdOARsPESihpXJ+Pa4QLJROl8Ded3XhNONSNCt/eO63MzvN5ET6B8W3Nn6DW5uKJ56J6DMvtYtK/VGU2mpu5nJgjYSu5s+t7ltgoxGCDTBKUXPWw8bl/DQu5UaWvja6V9qIQkRz7lwqokyY8iQQ6y91GI7AeNplL24WapW/Abur169+PaBVNavQP3Ky2gSSq3n+xGPOpZ/tmpPOt2+M2QdByCEIgk+T6n60T/D08urN6u67V417d5GG8fHdxG0S6UMiIRIJkfBV0vCYUtImJX1ISYiUNEn4ppT+SLRNivuQ4hApDpL2H+0VFD2iSBuF+6BwCIVDKLz/j2bVLxifeHk=";
	return AppleModelUI;
})(View)


//class ui.menu.battle.CommonHeadUI extends laya.ui.View
var CommonHeadUI=(function(_super){
	function CommonHeadUI(){
		this.headBg=null;
		this.headIcon=null;
		this.maskImage=null;
		this.mpTextFight=null;
		this.mpTextName=null;
		CommonHeadUI.__super.call(this);
	}

	__class(CommonHeadUI,'ui.menu.battle.CommonHeadUI',_super);
	var __proto=CommonHeadUI.prototype;
	__proto.createChildren=function(){
		var temp=CommonHeadUI.uiView;
		CommonHeadUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(CommonHeadUI.uiView);
	}

	CommonHeadUI.uiView="eJyNktFKwzAUht/leFvW6NapvZwgDMQbhygikrWna2iXlDZ1naPgnYggiM/hvfg8zucwade1bHOuLaQn+f+T75xkBnIaIdhwyXACBkSxiBKwZzBhrvTB7hIDfGQjX+r/3ADHZ6EL9s2sMvbHdIRN5xTstnJl5dDIc09jpfeRur2RMiQB4yoeUilDNMfIU1Ov+ZGZsjsp0ixoRVwLOR1j01jzGEC544v4GmzSsqroqog2sfZEtkJagu5cmFXK/yir7wheF0aTBGViSsxknKJJmZaY7fWiFrZGm3NjK8VhQXG0pOhYFcWYJkHl2NBfvbzYP0buYjwoN9HzNVMzSQXVsfL8Vr012BkdYrjanvrcFzzRQJV/WuQwQLdCTc6fvn6eX74/PzSkjEWAJyIUWr7nHBP1LOfBPjDAE1xesAcV7HfUMVVSz/G8QrrlCvyD27U24p7rNtS076/zt0f1rdMSsjMtIR7xPCUdCn3L9I3YTn6b/wLFfCRr";
	return CommonHeadUI;
})(View)


//class ui.menu.battle.DistanceUI extends laya.ui.View
var DistanceUI=(function(_super){
	function DistanceUI(){
		this.bg=null;
		this.vx=null;
		this.headbox=null;
		this.enemyhead=null;
		this.headmask=null;
		DistanceUI.__super.call(this);
	}

	__class(DistanceUI,'ui.menu.battle.DistanceUI',_super);
	var __proto=DistanceUI.prototype;
	__proto.createChildren=function(){
		var temp=DistanceUI.uiView;
		DistanceUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(DistanceUI.uiView);
	}

	DistanceUI.uiView="eJyVUstugzAQ/JVqe0WBJJCHj+2llZpTq6pRVUUGNuACNjImIY3y77UJTkiUQwsXdj2zM7NmD2pXIhB4Z7gFB0opygrIHrYsVimQWeBAiixJFZDp7OBAlLI8BvK5t8TngibYZ+6AjOcONED8kQMbKjUoTDSiyhg331SpHN0Cee3WbPVd52wVJoOSGwynBVo85VEq5BKINwhs9dFWh4Nz0n+hIeZX+oHX6mv5LsbEt042jcYqbHQeCLyFsaWkyPBR5MKc3w8n8yniqd9O6Vy1XLuN0dSBteDqlf0Y0OhYadSCRVJUYq3ulvQJmaZEdva6fUy0nCVmFxFyhRL6eR5Ec52mDTM8p/HHNk2KNA5bQmfx3LA+/fFfb+24NO+GDHIsdmb0+RZpVaGqXLNJWaMbiaIQ3A1zyrPLq+xze556if/nxYwqaJXd/qHMSacvkcco344aHaO3pa7Tt/Sl319kM/XT";
	return DistanceUI;
})(View)


//class ui.menu.battle.items.MulitBattleOpenCardItemUI extends laya.ui.View
var MulitBattleOpenCardItemUI=(function(_super){
	function MulitBattleOpenCardItemUI(){
		this.imgBack=null;
		this.imgFront=null;
		this.imgIcon=null;
		this.txtTips=null;
		this.txtName=null;
		this.imgGet=null;
		MulitBattleOpenCardItemUI.__super.call(this);
	}

	__class(MulitBattleOpenCardItemUI,'ui.menu.battle.items.MulitBattleOpenCardItemUI',_super);
	var __proto=MulitBattleOpenCardItemUI.prototype;
	__proto.createChildren=function(){
		var temp=MulitBattleOpenCardItemUI.uiView;
		MulitBattleOpenCardItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MulitBattleOpenCardItemUI.uiView);
	}

	MulitBattleOpenCardItemUI.uiView="eJydUk1r20AQ/S+Tq4i8siUbHRNoCRRfWpqEEsJ6PZUWS7vqah3bMb4ESlpoTz31kHNugUAIpKH01xi1/6Ij/KXUNQk5zuybee/NvjHYUYYQwluJA3AgMzrLIRzDQHZtDCFrMgdilFFsIfRYMHFAxDLpQvhuvBjdS3mE1dkRhDUHhhC2fAdOuCGMTKMdLnqEyntSUaPDrU3QTVH1XZ2hEtx03b487mVsO1MRAbkSsTYHtGvbn0ycp9AFFboXRiv7FD7vGXys0Vpn3BNarQh5nqPNXYtDa/roSoupJIDb4XoouYqOWW1OnAue4GHJG8yLg3kxk0RPbLO8V7yDyb/ymvXl/QfadPcNzyAsdTjLj/W9hXQ7tG8kzTpQiqVGcXY3Pb+ffvz6++au+HVffP4CqxDUafV7Ou1reUr0jO4gdKLLPVu1hi9aAWE7ukzIjK+qm6pERuV1BCqLBh434i3vvMlIo1kx0uYproxMP10UPy6L7z//fLudXl0UV9frnao1ttFay68HNe+51tr/zRDz1jP0EiuZTSgmfRp0d2OpMEd3U4hHyYcHIT5cSHqQmaPJX1HeUcg=";
	return MulitBattleOpenCardItemUI;
})(View)


//class ui.menu.battle.KillReportDescUI extends laya.ui.View
var KillReportDescUI=(function(_super){
	function KillReportDescUI(){
		this.mpTextLeft=null;
		KillReportDescUI.__super.call(this);
	}

	__class(KillReportDescUI,'ui.menu.battle.KillReportDescUI',_super);
	var __proto=KillReportDescUI.prototype;
	__proto.createChildren=function(){
		var temp=KillReportDescUI.uiView;
		KillReportDescUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(KillReportDescUI.uiView);
	}

	KillReportDescUI.uiView="eJxtjs1Kw0AUhd/luB2aSUSo8wJVcKeIIiJpM8kMJpmQ3NjUkJVrwZ0+gyDqrg/U9Dm8oxRclLs63O/89KBVpaFwafUSAlXtqgaqx9ImZKDCqRQw2maGoA7lILAwNk+gbvqd87SIM73HGnlrc29LZuYxUa6DQpdtkCdBa++o6brETqoyY2tjH/WsthyLMBJShKGQ2Nc1u9Ad/e9aQU0FOqhjgYe4ZqSoPHOmU8+RxxXGl+fx43X8+t6+fW7WT5v1O0t+2+aEivw3U1HdaoHUlXTOa3h+xP0udz7zQMpUpik75s4P+mPjcmFcfQ0lJ0c7dcVqGG75fgCs7nXH";
	return KillReportDescUI;
})(View)


//class ui.menu.battle.LocalBattleMenuUI extends laya.ui.View
var LocalBattleMenuUI=(function(_super){
	function LocalBattleMenuUI(){
		this.mpBgScore=null;
		this.mpIconScore=null;
		this.mpNumScore=null;
		this.mpImgArrow4=null;
		this.mpImgArrow3=null;
		this.mpImgArrow2=null;
		this.mpImgArrow1=null;
		this.mpImgApple=null;
		LocalBattleMenuUI.__super.call(this);
	}

	__class(LocalBattleMenuUI,'ui.menu.battle.LocalBattleMenuUI',_super);
	var __proto=LocalBattleMenuUI.prototype;
	__proto.createChildren=function(){
		var temp=LocalBattleMenuUI.uiView;
		LocalBattleMenuUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.menu.battle.AppleModelUI",AppleModelUI);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(LocalBattleMenuUI.uiView);
	}

	LocalBattleMenuUI.uiView="eJytkl9PwjAUxb/L9XWMdWMIfUMfDIn6QjQaQ0wZZats7VI6B5J9dztg7A8YRmKfmttz7v3l9G5BbWIKGF4ZTcGAWIp4BXgLKZurALBrWQYElPmBAmxbVmaAF7BwDvhjW1jHEfFp1bsBjLRtrR2uY8A3kVoVxXf+xBMyV66WjOsSieOQPpCIdhcyYaqbsM8vtqB85iMz5r4Wcv3Y8BLuBUK+A7aK+5u+m25bsj0Ycvol2NgTvDWa3UQr3ecQHsmMhg0Et79j6LslwnMSFQSKrnXWYOUwSoolvRehyFU3iLg9MjjWATsVjEqHheBqwn50vacneYV9sTu1CE23EWI2zYwW8dkDVIkv8kdSirR3IT7CD9GtljTV8zpuNcVjk+wCQQftEYa3pwjOlQjWGQLnIsE+AwcNTwHsfwCw2wLUdvhgRlcCnPsDVAMY5W2exPxkjfP91RgDp06Ry6HR9VD7e/EMkAlXbGdJmBlRnpgzolRIzXL+yxjyBZ1mv5XdgFM=";
	return LocalBattleMenuUI;
})(View)


//class ui.menu.battle.over.BattleOverFourItemUI extends laya.ui.View
var BattleOverFourItemUI=(function(_super){
	function BattleOverFourItemUI(){
		this.imgSelected=null;
		this.imgRank=null;
		this.imgHead=null;
		this.imgMvp=null;
		this.listCard=null;
		this.listTop=null;
		this.txtName=null;
		this.txtKill=null;
		this.txtScore=null;
		this.txtDamage=null;
		this.txtAddMedal=null;
		this.txtAddExp=null;
		BattleOverFourItemUI.__super.call(this);
	}

	__class(BattleOverFourItemUI,'ui.menu.battle.over.BattleOverFourItemUI',_super);
	var __proto=BattleOverFourItemUI.prototype;
	__proto.createChildren=function(){
		var temp=BattleOverFourItemUI.uiView;
		BattleOverFourItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleOverFourItemUI.uiView);
	}

	BattleOverFourItemUI.uiView="eJzNVd1u2jAUfpXJu42KHSfk527rprXa2MWYplZTNZnkABYhjoxLUxB3e4q9xbSH6mvMSUgwFAKVJo0kF3ZyfL4fn+MskXrMAIXoG4cHZKFMimyGwiV64LEao5AQElhoDHw0VnqGg5WFojFPYhR+X9Zrr6dsBAcXzyY81UEDplQCnSmk9x0xB9m55z+UfZGlI71yxhfwQXKdFRFs1Q/aRl5ZJyLOmdQxfDrqQwKRghi1syD/isWjDulaKEdh4Fk1Jx+3o+fxc3jfKm8D2sfHkP2gRHZ8w4AvLJ20i6+1szQaC3mrBdTjGxTiC/cYqlvpJXQj2LMNBlfA4mPaigUNvsZ8GQNcEvAcA7Q3z9pV80ikfqnczP6Jz9SuPLeS5zdlleigSyZLURmLQJPU0BIyYKqyrxrfFOWyr1veinxP5VJqoZRNiwAJaQzS8MchJ3Vdi95Jtlg8k7vPTLuUazd7aQcNLe3rWnfNi3qr1Z2+Wx0ktExJHc908KvIDAPpAQPpC/zDh/2je/fh0BlC2/u1KB1v3TQbZ671223EXWfYAJJda8i6uBprVK4+FzktpCDXedDT7z9Pv37q+VCkqq+bSG+JXc301x6PpJiJoXp1y66A67BIJKJI9Bo7buR3t8t7DwVaHRqejQ0KH3mSbCjYHVpslZJiApd1etv36MBp3pclY1B0TqE4LC90uNtbCHdtYhDuR0JuTHMxxmdH2C9+DA3hd2xdfGfMOCiOpIbxmzjuQczOvS4IdoNt1u/z7L/5fLf6C4P36Ng=";
	return BattleOverFourItemUI;
})(View)


//class ui.menu.battle.over.BattleOverNormalItemUI extends laya.ui.View
var BattleOverNormalItemUI=(function(_super){
	function BattleOverNormalItemUI(){
		this.imgBg=null;
		this.imgSelected=null;
		this.imgHead=null;
		this.imgAddFriend=null;
		this.imgMvp=null;
		this.txtName=null;
		this.txtAddExp=null;
		this.txtDamage=null;
		this.txtKill=null;
		BattleOverNormalItemUI.__super.call(this);
	}

	__class(BattleOverNormalItemUI,'ui.menu.battle.over.BattleOverNormalItemUI',_super);
	var __proto=BattleOverNormalItemUI.prototype;
	__proto.createChildren=function(){
		var temp=BattleOverNormalItemUI.uiView;
		BattleOverNormalItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BattleOverNormalItemUI.uiView);
	}

	BattleOverNormalItemUI.uiView="eJzNlN1um0AQhV+lml6WxgteyJq7/qdq05tIVaKqqtbsYLYBFuGNg2v5rk/Rt6jyUHmNDrjYm1o1UdSLAhIamDnn4+yKFdhlhRDDR43X4EFVm2oO8QqutbIZxGHIPMhQzzILseBrD5JM5wriT6t+8m0hZ+iOLiGmIVdgIWtq1MXs+Ywa55e6pHIqrc1xVGB5NTILrEdX+osNjqqy69Hf8E2tyQh85vUX3GFZew9iOMMcE4tqgMT/dyQ0AQ3d/C1RxA+bN2rfXXjd6ThHg8486Jz5eJdF5ERxglINmbQDskwyU19QpkdhX5131eCn8w2A4I7tM6Ve1xrLgSX4mi27FIY8nvrRxsQPHZPTRXVYvlhUe/Lv5RTzP+QD0amL417cNvaDLFoKiw0lBLc/b25/fKc6NaU9ozBpiG0qenuqk9rMTWofXcgT1NSWmNy0Qo8ZDxMR3ZdgHE0cBArxVVPtIJ74rN2Vc1ubS3zROwTieDzl2+ekdYcyuA9l2h3w94U/wBwI4TC/lL+Xb8McMsb+H+J297S7aPezIOJ3Os+3vHwPdqKYdGJ/GKxK03CyB/t5/QtuL7un";
	return BattleOverNormalItemUI;
})(View)


//class ui.menu.battle.PveBattleMelleMenuUI extends laya.ui.View
var PveBattleMelleMenuUI=(function(_super){
	function PveBattleMelleMenuUI(){
		this.boxFengli=null;
		this.txtFengli=null;
		this.monster=null;
		this.roleHeadNode0=null;
		this.roleHeadNode1=null;
		this.roleHeadNode2=null;
		this.roleHeadNode3=null;
		this.mpBoxScore=null;
		this.battletimeTexeImg=null;
		this.battletime=null;
		PveBattleMelleMenuUI.__super.call(this);
	}

	__class(PveBattleMelleMenuUI,'ui.menu.battle.PveBattleMelleMenuUI',_super);
	var __proto=PveBattleMelleMenuUI.prototype;
	__proto.createChildren=function(){
		var temp=PveBattleMelleMenuUI.uiView;
		PveBattleMelleMenuUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PveBattleMelleMenuUI.uiView);
	}

	PveBattleMelleMenuUI.uiView="eJztV01v4jAQ/S/ea0rsfJPbLlJ3K616abXqqqoqk0wTi8SOEqcNVPz3tckHWQhaDnvgAAfETDyeN+/Z8PhEcl0ACtEvBh/IQEUpigqFn+iDxTJFISG2Z6AUWJJKFFoYbw0UpSyLUfj82dd+E824dI1CBxuoQaFn+QZ6p6VasxTNLfAkY2hqh590CdnBHjdWXysb2dXqTMYSrpI5i+MMVEZCo6CRWWCgSpZiBQuRCV32xSEOmVPU5xV+A70JLh/YRge4jdTKryWjun3UV77tXiqzFBqoLGswEOVRKsrfKMQzt4+e+qhDFQGXUKLt9mVrDNPd5TSBg+ncliCf9EPmgle6VKFdMb3VkkqZgZkDr82avUpRN2w1K3gyyeCxBtaug3rvpPTVvJzmenEKNOYi1ph6af1JZU8jd4d9PTxAplUFsjK1IooxMxK5mspcZpS3wP8CMGru4e1ZdE02HfOU06rvVAKPoXxst9T5ffcuGnd/OVMwlwyClSKDH2qOe0Ukvsp20bI5jjUlG7nKdtGy2f6kbNZVtsuWDdtTstlX2S5AtmMyg11/Qqz5AMHy3cGXFKriIRLlmFHi+GM/NHJD5Fyqb/QvqT4s+6aBOzl4Fusz0jCeNCxmVsdBpUzc95KpPohggzgGsQ0SjDF6+ARG/G971vpX39mrQlSL/4gucE+D20O7n8JG2tMfYDyY6x0eyXJ4hAbu8mR/09T5TGq1h7lIGYcKzIOrV6XKWa/rtGYpdNjHznYM5laZ5UXGisPj63dw9tdxPoGs9e417Bg5+iao0nrDNJ5N/MrrvGcxBdD+HBPLdlzPD+Y6GdEMdi7c64KnLijYu5DqiUW6z+qBM/r74tiTRv0PV8YZ9A==";
	return PveBattleMelleMenuUI;
})(View)


//class ui.menu.battle.PvpRoleHpUI extends laya.ui.View
var PvpRoleHpUI=(function(_super){
	function PvpRoleHpUI(){
		this.roleHeadNode0=null;
		this.roleHeadNode1=null;
		this.roleHeadNode2=null;
		this.roleHeadNode3=null;
		PvpRoleHpUI.__super.call(this);
	}

	__class(PvpRoleHpUI,'ui.menu.battle.PvpRoleHpUI',_super);
	var __proto=PvpRoleHpUI.prototype;
	__proto.createChildren=function(){
		var temp=PvpRoleHpUI.uiView;
		PvpRoleHpUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PvpRoleHpUI.uiView);
	}

	PvpRoleHpUI.uiView="eJztk01Pg0AQQP/LnFdhq9DK0ZNePDVeTGO2ZQKbsrtkPywN4b+7tLRFQ0yrNXpoSNgwmZ03My/UYNclQgLPHFdAoNSqNJDUsOKpzSGZRCEBoZzBaa6Vy3zIaocEcuRZbiGhcdgQWOS8SCF5qXflHgXLsF9vDckVJVD5GxN/vjHts7Qq8AFZ+qRSDH22WXLpw3NmbYGBQOkCx1+tchVfXpcygyHUvao+gUYbjn93Q4z9DJKJNjn3NOlpcJhgfPQA0aZutK8bh/uWmTFoTWCxatcTLJQQSgbzgslt4x8a6MH99hryXWh/T4KZHUmjTFFPtyXb+IHeffXpM/983UHnbRQPeqMXb//bW0Rvh7yNzuet+69/3xv9uTd6sjd6Rm/0FG93g95uLt7+zNuseQcyPEk4";
	return PvpRoleHpUI;
})(View)


//class ui.menu.battle.RoleHongTiaoUI extends laya.ui.View
var RoleHongTiaoUI=(function(_super){
	function RoleHongTiaoUI(){
		this.nickname=null;
		this.level=null;
		this.hp=null;
		this.bg=null;
		this.hpmask=null;
		this.mpTextHp=null;
		RoleHongTiaoUI.__super.call(this);
	}

	__class(RoleHongTiaoUI,'ui.menu.battle.RoleHongTiaoUI',_super);
	var __proto=RoleHongTiaoUI.prototype;
	__proto.createChildren=function(){
		var temp=RoleHongTiaoUI.uiView;
		RoleHongTiaoUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(RoleHongTiaoUI.uiView);
	}

	RoleHongTiaoUI.uiView="eJydlGFvmzAQhv/KdPvqNQbC2vhjK1WttH1aNa2aqsqBA1sxNjJOmi7Kf58hmEITbW2JFHLo3rvzcy/ZgXuuERj8lPgEBGpr6gbYDp5k7gSw6CIlIFCWwgE7T/cEMiFVDuz3Lii/8SWqsfQZWPqVwBbYIiEvheYENtx6gZbZSvMKvcbh1teF6+7yceOsWeGVUaZN/Ey7a3gOLCbQKSdFwnjJBYHCaPdD/vEZCT1EPve7zKxpTOE+3fMblF6ShQ6YpcU89U+Wpj1VwVWDBLjOhLH3wOhZGqJfIVKy1F6aoXZoYb8nA4nbipf4igTtQPjvZiVb2ZI7p3BWoV7PrFEo6tlaPm4lOslNLs9qXU5qnqIbx13R9tbTTeIAV+Gmy+/JJvRdVIM6II0nSOPoLUgpLQpaDEidXX+c6KXZvjp7dHDWfDiwqGEY3/8+5dBplVMZR5sLrk3S0GdZwn+WKIwu+0V2axzG6qQBaRT/0zLHjUVd8Wb1/uYWdY727tCnLzFw6uPxUA+jse5a90zBf4kOVm5vYcjoPAxZ1a3kpt3FJuyzknmuXt7yxeKU40bC4T2mE9PFI28NfxRHnnnwn78Ez4Ba";
	return RoleHongTiaoUI;
})(View)


//class ui.menu.battle.RoleLanTiaoUI extends laya.ui.View
var RoleLanTiaoUI=(function(_super){
	function RoleLanTiaoUI(){
		this.nickname=null;
		this.level=null;
		this.hp=null;
		this.bg=null;
		this.hpmask=null;
		this.mpTextHp=null;
		RoleLanTiaoUI.__super.call(this);
	}

	__class(RoleLanTiaoUI,'ui.menu.battle.RoleLanTiaoUI',_super);
	var __proto=RoleLanTiaoUI.prototype;
	__proto.createChildren=function(){
		var temp=RoleLanTiaoUI.uiView;
		RoleLanTiaoUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(RoleLanTiaoUI.uiView);
	}

	RoleLanTiaoUI.uiView="eJydlFFvmzAQx7/KdHv1GgOhbfy4SVMnrU+tplZTNRk4wIqxkXHSdFG++2yCKSxRtY48kEP3vzv/7g97sC8tAoMfAp+BQGt02wHbw7MobA0suk4J1Ciq2gK7Sg8E8lrIAtjPfVB+5xnKqfQFWHpJYAdslZDXQksCW26cQIl8rXiDTmNx5+rC1/5ycWeNXuMXLbVP/Ej7a3wOLCbQK2dFwnjJNYFSK3snfruMhB4jl3srcqM7XdoPj/wGhZPkocMyzSjm7kmm/alKLjskwFVea/MIjF6kIXoIkRSVctIclUUDhwMZSXxreIVTEt1a+NSMWytx0aDaLIyWWLeLjfi1E2gF14W4aFU1q3OOaBz3RP1tIJrEAajEbZ8/0Ezou0gGdcAYzzDG0b9gpLQsaTlitGbz/xQ/691fZ4+OblqOB65bGMd3/8+5cl7lXMbJtoJTkzT0ySpP7K0lSq6GPfZbHKfqlYFoFL/pktO+ddvwbv3u3gZVgeb+2GaoMFIa4ulMT5Op7r135tg/RbTn7m9hxugqzNi0XnLjN7EN22xEUcjX93q1Oue3iXB8c+nMcvHEWeOn4cQxT+73B4cWfMo=";
	return RoleLanTiaoUI;
})(View)


//class ui.menu.battle.TwoRoleHpUI extends laya.ui.View
var TwoRoleHpUI=(function(_super){
	function TwoRoleHpUI(){
		this.lan=null;
		this.left_headnode=null;
		this.left_head=null;
		this.left_mask=null;
		this.hong=null;
		this.right_headnode=null;
		this.right_head=null;
		this.right_mask=null;
		TwoRoleHpUI.__super.call(this);
	}

	__class(TwoRoleHpUI,'ui.menu.battle.TwoRoleHpUI',_super);
	var __proto=TwoRoleHpUI.prototype;
	__proto.createChildren=function(){
		var temp=TwoRoleHpUI.uiView;
		TwoRoleHpUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(TwoRoleHpUI.uiView);
	}

	TwoRoleHpUI.uiView="eJytklFPgzAUhf/Lfa4ylsC0j775vhgTsyzduNIG2pK2OBay/24ZDNkgOp3pA+G2Pee7t6cGty8QKLwI3AGBwujCAq1hJxLHgT5EMwJSlxaX3Ogy9SVnSiTAUaTcAQ3j2YHAlos8AfpWn+SeJUtxqLcHehcSqIDOY//9YMafypnyZ2wmlP/ZMOdyDCSqMijF2umyEtl9oVKYMnjS1YX8vFUnJ/TFrLfBd7fmyBKlkwZKMYkT5VNLi6s7io6WUW8Zjy2/+mPWorOBw6qZYLDVUmoVbPwM2i7HXAMmP+UDuYVFMptNz7rZ6QAMqgTNsjXpbgyhutIQauXX92Dds0ePPRDXR7cf390f2bIcXxuN6zLQWoUTGTAN8kQIRvV/SEE4Nv1DDM4u9yMPf52DC5pbg3CmMsRaHdcnXPhj3A==";
	return TwoRoleHpUI;
})(View)


//class ui.menu.battle.XingDongLiUI extends laya.ui.View
var XingDongLiUI=(function(_super){
	function XingDongLiUI(){
		this.boxnode=null;
		XingDongLiUI.__super.call(this);
	}

	__class(XingDongLiUI,'ui.menu.battle.XingDongLiUI',_super);
	var __proto=XingDongLiUI.prototype;
	__proto.createChildren=function(){
		var temp=XingDongLiUI.uiView;
		XingDongLiUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(XingDongLiUI.uiView);
	}

	XingDongLiUI.uiView="eJyVUcFOxCAQ/Zfxyrq0cTeRm3ry5sHowZiGXSglS4EAtd00/Lu0yxo16q6QMGHmzXuPYYSwtxwIPEneAwLrjPVARuglCw2QAq8RNFyKJqTL6ioi2DZSMSAv47H11gyfO/dAMIJhPv/Bct9SwX/j8TupE2ZDQ1B82XLdLTtZNbbaOtqraiMurRYQIzpt6iztv/XOEFvPYosClx9DKHFy8EbdxGsGbdik6Lhm3D0eaFrqdymnacu/gI6TSww/uX+Q3+dW4MNj5+gDdeFGC5Wwi+uUcJTJzudqFqNzHYGSmj/nT0NQS6XujDKT54u6xmklTLKc6cpVjK95vwN+dbdi";
	return XingDongLiUI;
})(View)


//class ui.mulitpve.items.MulitPveItemUI extends laya.ui.View
var MulitPveItemUI=(function(_super){
	function MulitPveItemUI(){
		this.icon=null;
		this.txtCount=null;
		this.start=null;
		MulitPveItemUI.__super.call(this);
	}

	__class(MulitPveItemUI,'ui.mulitpve.items.MulitPveItemUI',_super);
	var __proto=MulitPveItemUI.prototype;
	__proto.createChildren=function(){
		var temp=MulitPveItemUI.uiView;
		MulitPveItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MulitPveItemUI.uiView);
	}

	MulitPveItemUI.uiView="eJx9kV9LwzAUxb/L9bXMTts5+yYDRfBNkImIxOyuvSxLQpp2nWPf3Zu4QN3DSv/kJPee82tyAL+3CBW8Ee4gA+uMbaE6wI5WvoFqXmTQINWND+NjBrIhtYLq45Aan7eixnHnHqo8gyG+Ry7thjSXbztF3vbYokLprzv62nWWdL3phK4nVtds1dIPPjniGJiWWbrhH8kxu0hQ3ESE8EkMjNMLx/UkjR6b8YLQsjHunZknZVLLqMZBL+Ib1VlQWcagu/vk7ge/MJ32XOdxYP/7nANa78wGF0aZUHM1K6YyzyHNQ8Wca6P9K/85i9mf4soHRyJEytS5jheMIKc8VlSHzZWoPToYMz+yz0KRPcO+jdSzeaJuvXABuReqC21CCLhwZgOfWHjSgTWIgTb2SKEw7mRxEsuTWJHjdjLBskfniReZ9fP4C1QfyXA=";
	return MulitPveItemUI;
})(View)


//class ui.mulitpve.items.MulitPveStageItemUI extends laya.ui.View
var MulitPveStageItemUI=(function(_super){
	function MulitPveStageItemUI(){
		this.boxChapter=null;
		this.icon=null;
		this.boxBottom=null;
		this.txtTitle1=null;
		this.txtCount=null;
		this.txtName=null;
		this.txtLimit=null;
		MulitPveStageItemUI.__super.call(this);
	}

	__class(MulitPveStageItemUI,'ui.mulitpve.items.MulitPveStageItemUI',_super);
	var __proto=MulitPveStageItemUI.prototype;
	__proto.createChildren=function(){
		var temp=MulitPveStageItemUI.uiView;
		MulitPveStageItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MulitPveStageItemUI.uiView);
	}

	MulitPveStageItemUI.uiView="eJytlEFv0zAYhv8K+rgGsJO0zXJjPQDS4LIJCSGE3NRJrCZxSNwuW9UDQkLAeTv1BBx2AbETB5D2b9qOf4GdNF3SNlAk0ihtI7/+nu+1/Y5BnMQUbHjK6DFoECc8TsEewzHrCx9sw2hp4FPm+QJs3G5PNHB8FvTBfj4upfs8qypPwEYaZPlzRBI5oMezrk9iQRPYpn8UEo821U4HLJJjwmHARDyiKQ2oI+4N2UtvSKJXjPTZ3TjypDplp/RBwuTMYCCtvKFOP9Gaq0ruvZzbKrmZwyPYWVNStzp/p+6JJXUJZ5qTyYtKpU1PsW7W6aSr+1wIHu5maiOSRFiaWG31iGZijcDI6++tOsUIlywiE0dMBBRLiVBKG+Zn3xfTD/MvH+fnl3alU9WGyyNxKNdLzmEV/6TgMXMSnnJX3HpGHlImJQ4PuJr9tptfNb4D0qPBGmCrADQrVF0+jMQKSu0nkfAB7ZYzI2Qa2ILyvcSr0uloRXc/YSSoMiHkusiB+rJto8J6jqV3VsbpLVRBfEJCemPb7O10Nv10/e188fMNbOB2DNPBbh23NNZANfT2fzQWo2KX69UFP2Ahu7EWFl/fL35cXF9dzd5dWurXxedfZ683W1iWbHJ8x/2A5FXDVvl1KIgzWEO/g4swyr9HLGW9QA53SZBSDSJlvQ3FWVBHbod4W2qYoGGdoHkc/rfYa/0p9jIZIKc+jzyVJN6W7Gtr5V3NPstQG1V9fgM3ZvGw";
	return MulitPveStageItemUI;
})(View)


//class ui.mulitpveresult.items.MulitPveResultItemUI extends laya.ui.View
var MulitPveResultItemUI=(function(_super){
	function MulitPveResultItemUI(){
		this.imgIcon=null;
		this.txtName=null;
		MulitPveResultItemUI.__super.call(this);
	}

	__class(MulitPveResultItemUI,'ui.mulitpveresult.items.MulitPveResultItemUI',_super);
	var __proto=MulitPveResultItemUI.prototype;
	__proto.createChildren=function(){
		var temp=MulitPveResultItemUI.uiView;
		MulitPveResultItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MulitPveResultItemUI.uiView);
	}

	MulitPveResultItemUI.uiView="eJx1kEFOwzAQRa+Chq0pSUuz8AVoF7ABISqEIuNMbKuOHTlOmxJlwYo1t+FCLLgFTqqGCInZWH88f97XtOAPJQKFB4V7IFA6W1ZAW9irzEugcZQQkKiE9IPoCHCpdAb0qT1Z1wUTOPVWW2VCv9yhw6rW/rJWqaxthmlVMK3TFzErjYCuI//vOABdLgg0x2dMExHYMRcMqhBrbg1M04VPZri0bgM0mi1P6nFQU9r1PTb+Dy2Oj7iLJBl588XI842/ZUUf0fdeCt/vH1+fbxP+/IpAbo2/U6/4q8LkjeLOVjb3Zxu2QhUs3GrbLz3PhwodppXob8bReHThNM/dD36JgyI=";
	return MulitPveResultItemUI;
})(View)


//class ui.mysteryShop.items.CardProItemUI extends laya.ui.View
var CardProItemUI=(function(_super){
	function CardProItemUI(){
		this.icon=null;
		this.contentText=null;
		this.proCountText=null;
		CardProItemUI.__super.call(this);
	}

	__class(CardProItemUI,'ui.mysteryShop.items.CardProItemUI',_super);
	var __proto=CardProItemUI.prototype;
	__proto.createChildren=function(){
		var temp=CardProItemUI.uiView;
		CardProItemUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(CardProItemUI.uiView);
	}

	CardProItemUI.uiView="eJyVkc1OhDAQx99lvJLlQ9jdcDOeTLxpjMYY04VuqUJLSll2JTyBJxNvHoxv4cXHMepbOIUFCTebJu3M/Gfm12kNepdTCOGC0wosyJXMCwhrqHisEwg9b2lBQjlLNIS+01gQJTyNIbyu+8yTjDA6Tt1hmmPBtjv2hXy8bohCPY+kQHlxzwVapCioLmxNt1qV1I5klklhG41d8lsmBbvjs1wwGGNYQESUSHUFoTMLeuuytZrGGtDOseqEzO3IfG8gc+fLHg27air0Ps0wofP75RH3z/vb1/Pr59MHBuSGqnUqKwwmPI6pGMF5iLPGMmf8gXYDMBYqjxQnKQojmUrT64DMF25wiJ6VNAM1zx+zn5IVTafwbgvvBn9zXQzwKDyW5YR+iWsE5/wbjqScmX9SbYWmuWl+AdT9tBM=";
	return CardProItemUI;
})(View)


//class ui.newguide.GuideSkillUI extends laya.ui.View
var GuideSkillUI=(function(_super){
	function GuideSkillUI(){
		this.box2=null;
		this.box2_1=null;
		this.box2_0=null;
		this.box2_2=null;
		this.box2_3=null;
		this.box2_4=null;
		GuideSkillUI.__super.call(this);
	}

	__class(GuideSkillUI,'ui.newguide.GuideSkillUI',_super);
	var __proto=GuideSkillUI.prototype;
	__proto.createChildren=function(){
		var temp=GuideSkillUI.uiView;
		GuideSkillUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(GuideSkillUI.uiView);
	}

	GuideSkillUI.uiView="eJzVlk9v0zAYxr+KMdeKxk6adLmNHQAJuIBACKHKSd401pI4sl3aMe2AuE18ArhyhQtHxrdhwI2vwJv+S8vWtaw9gNpGjfv65/d5/MTqMbVHFdCQPpEwpC1aaVUZGh7ToUxsRkOPOS2agexnloac8ZMWjTOZJzR8fjybeluNFmce0RDnjMbXl0JjQaRGHCtiEWewb+oBaQtR0ctg9wrRh1W4xabMoSyxPlZF0R7InpWVuVWVfZxq5Cu4oyViKWct7o/fHl3WcdKaL3lfRJD/saTbHa/JWAdXVTp5qrHf0OoBzLvge/6iwB5DhIUR8unjDEhfg7Akrq9SlUSlxMQSSiuNNUSWxGINZwZLcHCgj0gmDIkASjIwkBC8qSsKhRWVGoJOBzkZgqgmrAQMNhPX6Bu1ZKvVIRyoXNXt3PQ8zh13Po5yGvEBfk9VaR+hSyiwO7nDWQ9krJVRqSXPxF2Q9YbNeGma+EGKIyKX/dr1HFJL13kYTC0MVlvYWbbQaSx8OIhzEJpEqog2E4jlicQAhJ1GrOsviuWN2H0tRb4k0Ycoia+SeFkypzHpzuMojAFr2rUIFNqWFgoZq7KNP+d5LxtF44yuc44xf+rd3krvGGZ70TveePft7MP5p88/33w9P33/6+zdFvY518jKtYxkzt5YMXc7Fx7tEbZVfy5YdyXI7+4G5Dp8R6CtpTF3Aqof4RWgRG4WMG+TgC0d4D23CdiBlpYkYtrjvx8uj03D5W25AzOQH+wG5DpsW1BnbbguycSVqGB14DeNV9D96/PLa+L1/e3rH18+Tk6x/+X8CtxpxFY/m5vtwgzk+7sBuc7FP0vXA+1Kmhus7egFvn4DNYliWA==";
	return GuideSkillUI;
})(View)


//class ui.player.widget.components.BottomUI extends laya.ui.View
var BottomUI=(function(_super){
	function BottomUI(){
		this.bg=null;
		this._panel=null;
		this._list=null;
		BottomUI.__super.call(this);
	}

	__class(BottomUI,'ui.player.widget.components.BottomUI',_super);
	var __proto=BottomUI.prototype;
	__proto.createChildren=function(){
		var temp=BottomUI.uiView;
		BottomUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.player.item.PlayerWidgetButton",PlayerWidgetButton);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(BottomUI.uiView);
	}

	BottomUI.uiView="eJyFkFFLwzAUhf/LfQ5dVlld8+iLDHzYk26IlGy9Sy+2aUhTZy3579bUdUWEEUgO5Jyb76QH1xkEAc+EZ2BgbG0aED2cKXcFiPg+ZVAgqcKBWN5xz+BYUJmDeO0v0U0lFc6zHQjO4DPs8zkf0g72gxq8zTvpQZtSdmgX47HRp3rRUnZQWRwZHWz0hY+WhucgZZzFnHG48iSJ92zC2EqN5R+MdcBYxleO1frCkZnfwFQvTf6r90SNu9VulUxTy9HeGHnEfSAIcjfgMrBoULp9yI56F/QNhIfWuVrPIWyrHVU/d1WdtyU20fiHETmsom3QL5QrdFNWy+C3qHO04P1bWN8wXKGX";
	return BottomUI;
})(View)


//class ui.player.widget.components.TopUI extends laya.ui.View
var TopUI=(function(_super){
	function TopUI(){
		this._name=null;
		this._dan=null;
		this._guild=null;
		this.guild_name=null;
		this.icon_trophy=null;
		this.trophy=null;
		TopUI.__super.call(this);
	}

	__class(TopUI,'ui.player.widget.components.TopUI',_super);
	var __proto=TopUI.prototype;
	__proto.createChildren=function(){
		var temp=TopUI.uiView;
		TopUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(TopUI.uiView);
	}

	TopUI.uiView="eJy9k79O40AQxl/lNNeu8J/YCfELcEhQ3el0CKFoY6/tFc6uZW8OQhSJhgYdBQVNRJGGBiFEQ4PgbZK0vMLNxtgYhDhOAiprRzP7/fb7xkNQg5SBBz852wECaSbTHLwh7PBAxeDZrTaBmPEoVuBZDXNEwI95EoC3OSxHV3s0YvXZfJsLrKcJHbDMKD6rIpRGn3e60VIqIuzO+R5byTjeBLZNTOISE55KjUgl8YPtqrrCADtaBHYRsEFKVstxCPymGfZ3BO1pJKXnPLBqNzdMAqEU6jvq47hdnLBpnfuZzGWovmzQb4zjiC8TqW/7GjZZN/ChTrRGuyx5htSyFkjNZoXkmBVRQMUj0Pzyenp3dH87roHZy0/AzLeAMZeGzTZWqPBjmW2AZy655ekXWlJH/r+cpFKy10m4YA+BFRVU+JcNlum+4kPU1+tTOTE7uJjejj/DiRc292X6At4tiRfAzxZqdjWen57PDiezg7PiBfD+yGj01mvxIazTWMAutyunXbvk5r4UHYXN8UD/bkXWNM+Zyg39jKzPjB4LaGLoTuch5TID136rYTotZHDbpXClWZr1ZzK9uZnvn81Pjj8iZW3T1ugv86+QaQ==";
	return TopUI;
})(View)


//class ui.pve.items.PveRewardItemUI extends laya.ui.View
var PveRewardItemUI=(function(_super){
	function PveRewardItemUI(){
		this.imgIcon=null;
		this.viewMark=null;
		this.txtCount=null;
		PveRewardItemUI.__super.call(this);
	}

	__class(PveRewardItemUI,'ui.pve.items.PveRewardItemUI',_super);
	var __proto=PveRewardItemUI.prototype;
	__proto.createChildren=function(){
		var temp=PveRewardItemUI.uiView;
		PveRewardItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PveRewardItemUI.uiView);
	}

	PveRewardItemUI.uiView="eJzFklFrgzAUhf/KuHvNnIlGra99WWF9KoyOMUaqqaZqIpq2dqX/fVHnkLKxQgd70pPce893wj2CPpQcQngSfA8IykqVNYRH2ItYpxB6NoKUiyTV7f8JQZSKPIbw5Tg0zgqW8HFnnQlpzssdv9+Kt41gMslFzNRmGwurlAmcTujn7gOEjvFs+s+IYscqUy+KZBYpCWMqBExGqaqeIbQtOqhlp8ZebcSFZlF25ndHaG+IB5edqZyzKoOLApsRxLZcQnwPBxPbcf2JS7qJhFgUux6mNAiwb5PAR988T5p0z2KuIpbzIUUnlp+iUpppYXIbJwSSFS2I0Lyw4dL0f4p9uI4a/w+1VjK5Bpv8gv06An9kK56fgdN+z6g/7Jlu9FRtpTZ1mjdmmaEhrUmtK5XxqcpVW3VrBzQm7OvccCFYK6kX4t0I7PXKVM5FVKlarfXNM3vgwnREwwzHX1NnNQ6AR/i4hf8ABFQ1Cg==";
	return PveRewardItemUI;
})(View)


//class ui.pve.items.PveStageItemUI extends laya.ui.View
var PveStageItemUI=(function(_super){
	function PveStageItemUI(){
		this.imgOpen=null;
		this.imgLock=null;
		this.fontStageLock=null;
		this.fontStage=null;
		this.viewMark=null;
		this.imgStageLock=null;
		this.imgStage=null;
		this.txtState=null;
		PveStageItemUI.__super.call(this);
	}

	__class(PveStageItemUI,'ui.pve.items.PveStageItemUI',_super);
	var __proto=PveStageItemUI.prototype;
	__proto.createChildren=function(){
		var temp=PveStageItemUI.uiView;
		PveStageItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PveStageItemUI.uiView);
	}

	PveStageItemUI.uiView="eJyllFuPmzAQhf9KNX1lGzAJITx2pV6k3fahUtWoWkUOMXgaYlMwuSr/vQOELSHsbrpV8pAY+5zPM2c4gNmlAgL4jmIDFqSZTnMIDrDBhZEQuGNmgRQYSwOBY3tHC0KJyQKCn4fm6OcVj0X77A6CiQXb8oD1KDQioXyJig6kazEocBYKFeeyWOBsI3DJ8Te+S1VMQjnuxccMyQR8q/rAXwh/eDxar/Be84z24yr+mgoFT7O8EuQ2wbTDYVccLYzxMyXYFlztpVbxpTWzreZLDxRflX65SERo3ustnPWH2kMgUwhY/esHrb5UL3dUgTJn0qrSnQ6XF1VKaLHia0t+0Mr03J6d2uD4jWpEG78Z8j9pr3lSlAKOe2FENdnjjKtcNOWQQtANwXaYOxx5Y3/yDwzMu0Bo2bMn3BPk1JwrAcrxIeHqXmcEXk0wcRuENe2859kSrh2lG6cO0o0z6oL+IkTZJOYUDDRiZcNLPX9GdNev6fyPpqFg94kyEn1oyX7p0x07dZJ8t5XPdpBOXgn1q6DVwa1EJXIxaA1ZO0tchVJn085k9Fuzytqzu85Xup5nqN/4js9F0h3JOrju8HF4zLYMrimNqxDT64FiNaz/0fN7DDOd68i8mfJPAmlbqBNdnnwbRdE85LQy12XaTFaIhqV+PTwc/wB77OQ9";
	return PveStageItemUI;
})(View)


//class ui.pveresult.items.PveResultItemUI extends laya.ui.View
var PveResultItemUI=(function(_super){
	function PveResultItemUI(){
		this.imgIcon=null;
		this.txtName=null;
		PveResultItemUI.__super.call(this);
	}

	__class(PveResultItemUI,'ui.pveresult.items.PveResultItemUI',_super);
	var __proto=PveResultItemUI.prototype;
	__proto.createChildren=function(){
		var temp=PveResultItemUI.uiView;
		PveResultItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PveResultItemUI.uiView);
	}

	PveResultItemUI.uiView="eJx1kEFOwzAQRa+Chq0pSUuz8AVoF7ABISqEIuNMbKuOHTlOmxJlwYo1t+FCLLgFTqqGCInZWH88f97XtOAPJQKFB4V7IFA6W1ZAW9irzEugcZQQkKiE9IPoCHCpdAb0qT1Z1wUTOPVWW2VCv9yhw6rW/rJWqaxthmlVMK3TFzErjYCuI//vOABdLgg0x2dMExHYMRcMqhBrbg1M04VPZri0bgM0mi1P6nFQU9r1PTb+Dy2Oj7iLJBl588XI842/ZUUf0fdeCt/vH1+fbxP+/IpAbo2/U6/4q8LkjeLOVjb3Zxu2QhUs3GrbLz3PhwodppXob8bReHThNM/dD36JgyI=";
	return PveResultItemUI;
})(View)


//class ui.quest.Item.AchievementTabUI extends laya.ui.View
var AchievementTabUI=(function(_super){
	function AchievementTabUI(){
		this.gl=null;
		this.glText=null;
		this.gr=null;
		this.grText=null;
		this.xiao_hong_dian=null;
		this.quest_msg_text=null;
		AchievementTabUI.__super.call(this);
	}

	__class(AchievementTabUI,'ui.quest.Item.AchievementTabUI',_super);
	var __proto=AchievementTabUI.prototype;
	__proto.createChildren=function(){
		var temp=AchievementTabUI.uiView;
		AchievementTabUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(AchievementTabUI.uiView);
	}

	AchievementTabUI.uiView="eJy1kk1OwzAQha+Chq0L+Wna4CUsAAlWICSEqshJHccijYvj0pYqe5YcBQ4F52BcmhJKK1QBWSSy/Wbem8+ZgZkOOVC4knwMBIZaDUugs4pAksm8D/RmVksO1aShgClQh8AEqEvgXpYyzlGUsrzkuGYaC0QO6/qcDpjgzU5j2TcZUM/3CJS3skDN3YiXZj8Wkcj3hoVAdSkf+LGW2Akc4obEvqCqyLLtGYt5vhIQdTahjxEXJm7X+Yx3yScGK4z9UHh7fHp9frFWRqtbfqRyZWW7cdhNg85yH2ibQMalyLAo6BBIVWEuMB36hB8rrDqXiValSs3ONTvhEquTul86f3CH5VLYYRNeGK5xmF5jnO1p6z+grfl0wTtWxqjB3PUf0OsN6H/DlflB4vzI9RsPzNoK5lk9x1+G9dubOE8kU1GmChH1JStgBeJItuyZPWqt/XNdxHfQmNQL1t3aAk8zpF9ff53QrxPNnaNBKSLzharTsHHDJlC3vdWPGiubzugRXwu3V70DMjZZpQ==";
	return AchievementTabUI;
})(View)


//class ui.quest.Item.LibaoDescZDownUI extends laya.ui.View
var LibaoDescZDownUI=(function(_super){
	function LibaoDescZDownUI(){
		this.bg_content=null;
		LibaoDescZDownUI.__super.call(this);
	}

	__class(LibaoDescZDownUI,'ui.quest.Item.LibaoDescZDownUI',_super);
	var __proto=LibaoDescZDownUI.prototype;
	__proto.createChildren=function(){
		var temp=LibaoDescZDownUI.uiView;
		LibaoDescZDownUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(LibaoDescZDownUI.uiView);
	}

	LibaoDescZDownUI.uiView="eJx9jluKwkAQRfdyvwuN8YH2BsQNCINIiKZJl49OT7qixtB7t6MIMwj+Vt17z+kgrdNQWLO+guDqynmoDlcuxEAtUsKFPe9OMSR1owlGc2kEajSaBcLe8KmA2nTvodU5L/XfpRZqMiPcoBL6N5vXMb4rs31lRVuJHX9kG2+/jfYybDgTdn7gbNm/+K6XNUcUEhpPKaF03lP4UsnPi/AWW6Qh0FefHh990vkn0rRF5nN7yLl6kkPYhgcI3Fz5";
	return LibaoDescZDownUI;
})(View)


//class ui.quest.Item.LibaoDescZUI extends laya.ui.View
var LibaoDescZUI=(function(_super){
	function LibaoDescZUI(){
		this.bg_content=null;
		LibaoDescZUI.__super.call(this);
	}

	__class(LibaoDescZUI,'ui.quest.Item.LibaoDescZUI',_super);
	var __proto=LibaoDescZUI.prototype;
	__proto.createChildren=function(){
		var temp=LibaoDescZUI.uiView;
		LibaoDescZUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(LibaoDescZUI.uiView);
	}

	LibaoDescZUI.uiView="eJx9jkFOwzAQRe/y14YmhpbWF0BcAAkhFLnJKJ42dUw8aRsi3x0XqaISEptZzPx578+QKRAMXplOUAhDHyLMjBM34mA2WuHIkbddDskwkoIjbp3AlOUqKdSOuwbmfb6CXg62pVvSBPNUKJxh8rzF2iHHt21V917IS/6Je/Z59zlSlMXIlXCI98G3lxN/0fPAWYVCPSxVofT6YuFjL28wj6vfYhudkvq3j17+9NHrv0o3NVW0fme5v5pr21FW3JUpfaRvcIVgWw==";
	return LibaoDescZUI;
})(View)


//class ui.quest.Item.LibaoDownUI extends laya.ui.View
var LibaoDownUI=(function(_super){
	function LibaoDownUI(){
		this.gleam=null;
		this.libao=null;
		this.icon_libao=null;
		this.libao_num=null;
		this.txt_libao=null;
		this.yilingqu=null;
		this.libao_desc_x=null;
		LibaoDownUI.__super.call(this);
	}

	__class(LibaoDownUI,'ui.quest.Item.LibaoDownUI',_super);
	var __proto=LibaoDownUI.prototype;
	__proto.createChildren=function(){
		var temp=LibaoDownUI.uiView;
		LibaoDownUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		View.regComponent("ui.quest.Item.LibaoDescZDownUI",LibaoDescZDownUI);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(LibaoDownUI.uiView);
	}

	LibaoDownUI.uiView="eJyNUttugkAQ/ZVm+4ooIl54rQ81afvSS3pJY1YcYOK6q7B4qfHfOyyiaGttSICzO3PmnJnZML2eAfPZC8KSWWyWqFnK/A1b4ljHzHdaDYvFgFGsDdhaLIhRjJn/sSlTB1MeQTV3zXzKWpn3AlMcCQoLuUiBME8oJRLAp5SSTlASnGeQ6ro5tGcyYtut9Se72zT0+afgEzji6pQvw6E5n2RcRgXvP9W7bsHfLfkxUHJ4rsjuMgbPFKGAgAt4I/t2dwded4DLIFaJufJKZO68S5Y9z0iqHVseyuxHG0vbo/Oen2Clfxl2p1eS65Xe29V5sO80KovgtiwWKqkf8YvonE6BKO8eg0SlKtRXb/wWkLIDJVTOeB2GIUEuMMqlBiA1JDToT3oOzh8uTLsU2j63WGsUKKN5dmiKoOFnRFq/iVFCCvV9l8rY3dRKc512dRZ3eRf6kAbvfbWUJ8pqTrNntDVb5wQVYxoTwXBVWQ2HiHChNP3WXOJIMqlxmhfM0DYK7YGGqX1c/nlgOvYNBiQwuA==";
	return LibaoDownUI;
})(View)


//class ui.quest.Item.LibaoUI extends laya.ui.View
var LibaoUI=(function(_super){
	function LibaoUI(){
		this.gleam=null;
		this.libao=null;
		this.icon_libao=null;
		this.libao_num=null;
		this.txt_libao=null;
		this.yilingqu=null;
		this.libao_desc_x=null;
		LibaoUI.__super.call(this);
	}

	__class(LibaoUI,'ui.quest.Item.LibaoUI',_super);
	var __proto=LibaoUI.prototype;
	__proto.createChildren=function(){
		var temp=LibaoUI.uiView;
		LibaoUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		View.regComponent("ui.quest.Item.LibaoDescZUI",LibaoDescZUI);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(LibaoUI.uiView);
	}

	LibaoUI.uiView="eJyNU9tugkAQ/ZVm+4ooIlZ5bR9q0vall9Q2DVlxhInrrsLipcZ/77CAUltrIQFmd8+Zc2aGLdObOTCfvSCsmMXmiZqnzN+yFY51zHyn07JYDBjF2gQ7i4UxijHz37cVdDDjEdSxG+YTam2eS0xxJOjYhIsUKOYJQSIBfEaQdIqSwkUGqW6aRXsuI7bbWX+yu21Dn78KPoEjro75MgzM+jTjMip4/6nedQv+XsWPoZLBqSTlZgyeSUIHQi5gSPbtXhm8lgGXYawSs+VVkdnzzln2PCOp8d1yILMfZaxsj057foK1/rVhOX3Z+at+lUmv9d67zpG+06pNhdux2ERJ/YifxO30iohw9xgmKlUTfTHkt4CEDpVQOePlxFy0wgVGufQQpIaEGv9B96ESD2e6X2ntnhq0DQqU0SI7FEnQMGRE2ryOUUIKzX3VqrNlFyt/V916b+7yQtxAGr4dqer2jap255SUomFjggbr2pA4RINLpemz4fZrP5tDppJMapzleTO0jVB7oGFmH1Q8D0zRvgCGtTTw";
	return LibaoUI;
})(View)


//class ui.quest.Item.TaskTabUI extends laya.ui.View
var TaskTabUI=(function(_super){
	function TaskTabUI(){
		this.gl=null;
		this.glText=null;
		this.gr=null;
		this.grText=null;
		this.xiao_hong_dian=null;
		this.quest_msg_text=null;
		TaskTabUI.__super.call(this);
	}

	__class(TaskTabUI,'ui.quest.Item.TaskTabUI',_super);
	var __proto=TaskTabUI.prototype;
	__proto.createChildren=function(){
		var temp=TaskTabUI.uiView;
		TaskTabUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(TaskTabUI.uiView);
	}

	TaskTabUI.uiView="eJy1kk1OwzAQha+Chq0LSZO0UZawACRYgZAQqiIndRyraRwclzZUvQC34By9DtyDcfoXlRaoEFk4sv1m5s03noKuCgYB3As2BgKFkkUJwXRGIE5F1ofgcbqSnMlJQwEVBC6BCQQWgWdRiihDUUKzkuGeKgzgGezKczWknDUzjUVfpxC0nTaBciBy1DyNWKlPIx7y7KTIOapL8cIulMBMYBHbJ2aB2Yys017TiGVbBlFnHDo2WRWxu9bG3h2baIzQ5hfA+3z+8fpmSmklB+xcZtLIjiO/m3id9XnddsoETzHI6xBIZK5v0R3W8Rc7jLoRsZKlTPTRA71kAqPjVb6k/vCEZoKbZmOWa6awmV6jncNpq9/RXuT4lrli1ZJ6JLWWwzriHwag9gzgL3Sp48XWj3S/UKnqHtFq23LXXh13H+yJoDJMZc7DvqA5bDEciZa5M1etnc/XQnp+o9G2t2t0SzpNj07tcUPTcVaO6srhsOShbkK1NkVsv0nTdg96q5E03rQasZ1ke7NPC1xa0g==";
	return TaskTabUI;
})(View)


//class ui.ranking.components.trend.fallUI extends laya.ui.View
var fallUI=(function(_super){
	function fallUI(){
		this.fall=null;
		this.txt=null;
		fallUI.__super.call(this);
	}

	__class(fallUI,'ui.ranking.components.trend.fallUI',_super);
	var __proto=fallUI.prototype;
	__proto.createChildren=function(){
		var temp=fallUI.uiView;
		fallUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(fallUI.uiView);
	}

	fallUI.uiView="eJyFjstqwzAQRf/lZisa4RgM2rW7QneFbkIIiiPL0yqSUNTEifG/d+ziYLopAj2Ge49Oj3yLBgofZK4QiCnEM1SPKx1zC1WWAq0h22aoSg4CdUvuCLXt5+JL6Ja9G5QU6KZ9wbjoxNlGO4f/gK8nbc0Sef4iz/OkPV/s+pv2n0/RWwyDeJTe9MG4Px7lZhKpHiIbOYvkLnM4Gz4UioVSwa5N8Pmd7owt5O+LQ8+J9PhBHVwYCaumqSopeaId2dGvNj6bxFY7Xj/MG2om";
	return fallUI;
})(View)


//class ui.ranking.components.trend.flatUI extends laya.ui.View
var flatUI=(function(_super){
	function flatUI(){
		this.flat=null;
		flatUI.__super.call(this);
	}

	__class(flatUI,'ui.ranking.components.trend.flatUI',_super);
	var __proto=flatUI.prototype;
	__proto.createChildren=function(){
		var temp=flatUI.uiView;
		flatUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(flatUI.uiView);
	}

	flatUI.uiView="eJxNjc0KwjAQhN9lzou/xcq+gS/gRUSCjclijSGN1hLy7u6l6GlmYL6ZgjxFC8ZR7AhCTM84gAtG6bIHNw3BW3E+g9tVJVy99B34VGbw8DDO/pMTeLMnfBSmeWbbEt4maf3Wm6zt4S5BUzJBjVu+5BJVFzE4/A7Xu1rP9QtWNTOG";
	return flatUI;
})(View)


//class ui.ranking.components.trend.riseUI extends laya.ui.View
var riseUI=(function(_super){
	function riseUI(){
		this.rise=null;
		this.txt=null;
		riseUI.__super.call(this);
	}

	__class(riseUI,'ui.ranking.components.trend.riseUI',_super);
	var __proto=riseUI.prototype;
	__proto.createChildren=function(){
		var temp=riseUI.uiView;
		riseUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(riseUI.uiView);
	}

	riseUI.uiView="eJyFjsGKwjAURf/lug0aaqGQnbMbmJ0wm2GQWF/Tx9SkpBmtlv67r4pSZjMEkpdw78kZkC4tweCT6QyFNoa2gxlw5kOqYfJcoSZ2dYIp9KhQ1twcYL6GZ/Et9PPeBUYr9Pd9xjjZKNnIHeE/4PvROpojux/2U9l6Gdzql3fdsvUO46hepQ+7p+aPR76+ixQvkbV+iqQ+STiRHAbZTCkT1yr4tOWrYDP9uEloE9lOH5ShCRNhUVVFobW82Ibd5FeSTxTF6lvWDeQUakM=";
	return riseUI;
})(View)


//class ui.ranking.item.RankingRocketUI extends laya.ui.View
var RankingRocketUI=(function(_super){
	function RankingRocketUI(){
		this.ranking_item_bt_bg=null;
		this.ranking_item_ht_bg=null;
		this.ranking_item_bot_bg=null;
		this.fgx_1=null;
		this.place=null;
		this.trend=null;
		this.fall=null;
		this.flat=null;
		this.rise=null;
		this.pm=null;
		this.clipRanking=null;
		this.place_3=null;
		this.place_2=null;
		this.place_1=null;
		this.wdpm=null;
		this.wsb=null;
		this.content=null;
		this.lab_name=null;
		this.guild_icon=null;
		this.lab_guild=null;
		this.player_head=null;
		this.img_player=null;
		this.onlineState=null;
		this.fgx_2=null;
		this.startCount=null;
		RankingRocketUI.__super.call(this);
	}

	__class(RankingRocketUI,'ui.ranking.item.RankingRocketUI',_super);
	var __proto=RankingRocketUI.prototype;
	__proto.createChildren=function(){
		var temp=RankingRocketUI.uiView;
		RankingRocketUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.ranking.components.trend.fallUI",fallUI);
		View.regComponent("ui.ranking.components.trend.flatUI",flatUI);
		View.regComponent("ui.ranking.components.trend.riseUI",riseUI);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(RankingRocketUI.uiView);
	}

	RankingRocketUI.uiView="eJydV89v40QU/lfQcHWCf8Z2blAJWAkuLKBWaGWNk7E9Xdtj2ZNt2ioSBw4IAQLEBViJGwc4cF3x9yzd/TN4M7bjaTpxzKpVGycz7/ve9773ZnKL+HVF0BJ9TskVMlBVs6pBy1t0Rdc8Q0vLDEwDNU9pCWtqXMKL9J0NjS4THs+rMoUtGaFpxtEy8HcGWmU0X6PlF7d93PfYVg17jZYQbyv/dhChDa9LXIjVsRrQslxdxEcFTslBTMuSQRfGwNv3DPQM1wPtiHJSRDGPJEiX0ooVBStFRjGmnGI2i+LLLrGG3pAPagrgyDSs0DAN20F7qtqoey3C3c54I8a0oXEOmxKcN0SbQXYsg4yV6bQUptOc2QfVAkNMoxmz+zwV81ytqyJOdRQ92xB/DkxwSkpfcrTCoCeSpNvI0kmUkDIlUGmJvds9USI/NKrd5r5w+rBVjlcETXN5W15/T4nXpFxr94KEubpZr223qt6UnEr/bei8k3QO+VWsJCVv5hJmLhZ/9gipwiU55hNQ2lUTUWDxAUpNG3IapVs1DUUslijjxZq5UvCZ7e+rVQzNCq910r/PSn6W00rfmzPLnHuD8W3nmO9XEOKTlj8S7+UbWOGJuVmBYc4hUqBrg+amb4GMEC78Dxiut/CDUGkAD/binKbSyKALqdGphmgnrFRCy1f6OHLuN4hgVBCa08h0uvY40XYtymIcxT6KYk9CcQIJI1QYg7GOwli9yCuckwsQZy6aUj6diychb7nKWC0/8/on+ZknXKf67iMck/yA4aIdE+HglNA8RlZMPtjOyVbU++7rH1/9+tXd9z/9+8N3SsXFeZiAMx/DZGynkHiC9R/TVc0alvC3LvCHhMKWFcuZiPt2kiRo1CefCsiD+ea0c9MamAdHPXPVxArx53++fPHN3R/Pha68Zk/JWU8kJIvY9fbvA8qQmOuriTnmxMTcdQDvxEz0bsdpJFHNKF60ThX/u4YFWNipnQm6EltdiYdj0Hb214scx5EcM4M8f/8Gv69/+Ustqvv/ixomXmh5Sl1zkvCTHeO2kzB0hrL2VNMNJBtRSP9eQzhqP8BDRZ8xfiEGoHIO7060gWt1bhpGpm0HqkgSfVDp5Yt/oAFef/ntq59/V4Wy38T9vm+aY0JpTveWrqnMkWtSRxnB+mNaK3V/OXo43NeX60nzrfPmUCvH7hnRIo1aVveq5anV8pQKOfYomLjKHB1MrMxpSR5zzIn2ynaD6ZbiUnNv0g7t9uI0XMHFhezgJNBeyEbbuAsaDFr54ZD+wp78ZaE7H93RLzan/G63xQ+GmeDvvdRwXPMzBvebwe7njvlwWga+55imflqKk1VpBHffCO/WFOcHM9I0nYf2fyJ//gNUuGnf";
	return RankingRocketUI;
})(View)


//class ui.ranking.item.RankingSuperscriptUI extends laya.ui.View
var RankingSuperscriptUI=(function(_super){
	function RankingSuperscriptUI(){
		this._desc=null;
		this._seasontime=null;
		this.txt=null;
		RankingSuperscriptUI.__super.call(this);
	}

	__class(RankingSuperscriptUI,'ui.ranking.item.RankingSuperscriptUI',_super);
	var __proto=RankingSuperscriptUI.prototype;
	__proto.createChildren=function(){
		var temp=RankingSuperscriptUI.uiView;
		RankingSuperscriptUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(RankingSuperscriptUI.uiView);
	}

	RankingSuperscriptUI.uiView="eJyNkU1LwzAYx7+KPF4UoqaZtTZfQAU9KYKIjKxL22DXlja6NwbiQXaTKejBg1dP6skX/DpuY9/Cp5urdXiQXJIn+b/wSxt0M5bAYV/JOhCIkyhOgbehrqraB26WTAK+VJ6vga/SDgHHV0EV+GF7qtyTDV1UNoEvMUagAZyS3Iehz6lI8H25KlMHBTrTcVgYPF0aZr97Mbq673dfBzfPi/ATyWwCbhTqXdXCrMw2O6FsRzlJlEaunjsQm1KhxImCKPOfd13LohQnIlBeiJNk7NXpkLzzVk14cqb0el62RGleNpUixURVy56nx2rsJ0LceCsnqlyXqqUq3nIcetk9ttxIFOIBSgybUMIMHE/yeYEks/4iuS0qMphpNQFpmHk5Zq1Ny+kx+G+OiLHfe/h8OxvdvQzP34cf18PHWyh+3i+S9D8kbde0DbNA0pGhlgmiPML1BbmmvWw=";
	return RankingSuperscriptUI;
})(View)


//class ui.ranking.item.trend.flatUI extends laya.ui.View
var flatUI$1=(function(_super){
	function flatUI(){
		this.flat=null;
		flatUI.__super.call(this);
	}

	__class(flatUI,'ui.ranking.item.trend.flatUI',_super,'flatUI$1');
	var __proto=flatUI.prototype;
	__proto.createChildren=function(){
		var temp=flatUI.uiView;
		flatUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(flatUI.uiView);
	}

	flatUI.uiView="eJxNjc0KwjAQhN9lzou/xcq+gS/gRUSCjclijSGN1hLy7u6l6GlmYL6ZgjxFC8ZR7AhCTM84gAtG6bIHNw3BW3E+g9tVJVy99B34VGbw8DDO/pMTeLMnfBSmeWbbEt4maf3Wm6zt4S5BUzJBjVu+5BJVFzE4/A7Xu1rP9QtWNTOG";
	return flatUI;
})(View)


//class ui.room.AppleRewardUI extends laya.ui.View
var AppleRewardUI=(function(_super){
	function AppleRewardUI(){
		this.mpListView=null;
		AppleRewardUI.__super.call(this);
	}

	__class(AppleRewardUI,'ui.room.AppleRewardUI',_super);
	var __proto=AppleRewardUI.prototype;
	__proto.createChildren=function(){
		var temp=AppleRewardUI.uiView;
		AppleRewardUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("modules.battle_apple.view.room.AppleRewardItem",AppleRewardItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(AppleRewardUI.uiView);
	}

	AppleRewardUI.uiView="eJyFjs0KwjAQhN9lzyUWRJDc9CZ4UvAiIrFZ2mD+2KQpUvruplpBFJE97e58M9NDvHkEDgeFHRTgyfkAvIdOydgAXyznBTSo6ibmpSyHAqpGaQn82L/QrQrxF5oEZYXxo2aKSPuKnNZrQfursvlbOWOcnaXwuDNv66yywuAn+afHynuNO+wEyU1E816JWhvV09DJVmNgFxGjxrMYGZayPyPnDPv2mIoQWokEw3DKcwf9mWk4";
	return AppleRewardUI;
})(View)


//class ui.shop.PrivilegeItemUI extends laya.ui.View
var PrivilegeItemUI=(function(_super){
	function PrivilegeItemUI(){
		this.priceIcon=null;
		this.privilegeImg=null;
		this.nameImg=null;
		this.periodText=null;
		this.priceText=null;
		PrivilegeItemUI.__super.call(this);
	}

	__class(PrivilegeItemUI,'ui.shop.PrivilegeItemUI',_super);
	var __proto=PrivilegeItemUI.prototype;
	__proto.createChildren=function(){
		var temp=PrivilegeItemUI.uiView;
		PrivilegeItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PrivilegeItemUI.uiView);
	}

	PrivilegeItemUI.uiView="eJylkk1OwzAQha+Chq1FnbiB1EtYQCVgA0IghCqTTByriR0cl7+qt2HDwbgHTknatEKARLKIbM2b783kzcG9VAgcrhQ+AYHKmqoGPocnlbocOGMBgRyVzB3wYRgvCCS5KlLgt/NOen44c87ovvoFeBjGBJ6BBzEjG93qqdJeVeemGszU5F7uVVrCBsUXqVc8tspzIGIkDEg0JEEM3+LHpZC4RWdx9EWndE33fR+F9ZLKqgTHydJzaycxZWl0YyhDLV/zmdAyFVvWWLxYkJ/BUcuNeqxHVaDEcSnXuMK3n3n14ChXGmscdOtYlU+m1ZL+KzFk7Z6DDqlF+UfatHIP7YxCJ7mxN8DpXtSdrn3bPv9U3GOxhQ9oix+tFh2w9fRolUkv8dl5mWs+HBj9eHtvzDlrpnhkCtNU7gY0ogfD1b0PwnrxTSQyo92Fj0UTra+TV52pxJraZG7nRpyg8uqk6xeO0jRrliUKJZdbwMzBb+OwEV39wC43TYZ6wdmcZj+m8D+j2fLpGU1QO7Te6p1/PwFcpiNl";
	return PrivilegeItemUI;
})(View)


//class ui.tips.itemTips.item.TreasureTipsHeadUI extends laya.ui.View
var TreasureTipsHeadUI=(function(_super){
	function TreasureTipsHeadUI(){
		this._box=null;
		this.baoxiang=null;
		TreasureTipsHeadUI.__super.call(this);
	}

	__class(TreasureTipsHeadUI,'ui.tips.itemTips.item.TreasureTipsHeadUI',_super);
	var __proto=TreasureTipsHeadUI.prototype;
	__proto.createChildren=function(){
		var temp=TreasureTipsHeadUI.uiView;
		TreasureTipsHeadUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(TreasureTipsHeadUI.uiView);
	}

	TreasureTipsHeadUI.uiView="eJyFkEFOwzAQRa+Chq1pGydqgy8ALFiBEBVCkZO6yYgkjmJDU6LsuUTX7Cqx5T5Vr8GkaaAIEBrJ0re/Z/68GuyyUCDgBtUCGBSlLgyIGhY4swkIz+MMcpm1FtdnY588icI4sSBcv2EQJZjOQNzVfaOLTMbqsFMFYsS+9XuSJRmDUFfkMw+Yk4p0lul8iFZlgcXCBFYXQRgPijxuTfiszkqkQeBw5njMoePfKNeqsodJljSf/ZYHDYYp/ZjL1CgGtv0nYPOy2r6/btar7foNPil4zOWk5jq3V5QKBOedordLjEpt9NweTeW5QrJFOtXtsseh1xbdyBTj3cIqt6qEpmF/o6PAJxO+i+zyr9B8NP4ZuoMaSl2h7Jh1YKUxypphu1P5qHaAMSLSvTOY9IwjmaopwRlM9uJ2L3rKzum4ae6pPgDMHrTS";
	return TreasureTipsHeadUI;
})(View)


//class ui.tips.itemTips.NormalTipsUI extends laya.ui.View
var NormalTipsUI=(function(_super){
	function NormalTipsUI(){
		this.bg=null;
		this.item_name=null;
		this.item_desc=null;
		NormalTipsUI.__super.call(this);
	}

	__class(NormalTipsUI,'ui.tips.itemTips.NormalTipsUI',_super);
	var __proto=NormalTipsUI.prototype;
	__proto.createChildren=function(){
		var temp=NormalTipsUI.uiView;
		NormalTipsUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("Text",Text);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(NormalTipsUI.uiView);
	}

	NormalTipsUI.uiView="eJyVkctOwkAUhl/FHLcTpOWm8wLqwpVGIcaQ0g50Yttp2uEmYcHKhYrRsDUuXGhiRA0u8PI4NIWVr+AB5GaMiWmTzj/n/H+/M1MDWXUZUNjlrAwEXE+4PtAaVIAqMZVAmRvSBKomce3ykpDp74LJeMGUKJRYnYBucssAul+b5G3aWoHNB1aBJpJknKss5pY0Dx25ArZL4QKNEvAPuYN7urBt4awUeVZy18+qEdcZdvn8iK17HH8ISopMXixYLC9H/jk6Apqjm8LLYCGSmKj0SP1GvsMq8ge4oo7Bk1PueHSCzSWzs45mD4eVQyuFwfFF0G3AjEJFY144chu5UUXHCju3uO4JX+TlUkbbYBwturDEMHY5n2Q5Q4d6nfxFFk+MyFT8lIVn7Hkanp/0imx2wmpqAdVgvj6HevkeXneC88ewddd7a4b3J8FZp397M2g1gvZV2H7+/Djtvzz0Xp/GstdtTqezmGZwvA+a+v90BtPjq2s43QE+XyXN3eI=";
	return NormalTipsUI;
})(View)


//class ui.tips.itemTips.SkillTipsUI extends laya.ui.View
var SkillTipsUI=(function(_super){
	function SkillTipsUI(){
		this._bg=null;
		this._head=null;
		this._cardbox=null;
		this._card_kuang=null;
		this._card_icon=null;
		this._cost=null;
		this._rare=null;
		this._rare_txt=null;
		this._type=null;
		this._type_txt=null;
		this._list=null;
		this.labGroup=null;
		SkillTipsUI.__super.call(this);
	}

	__class(SkillTipsUI,'ui.tips.itemTips.SkillTipsUI',_super);
	var __proto=SkillTipsUI.prototype;
	__proto.createChildren=function(){
		var temp=SkillTipsUI.uiView;
		SkillTipsUI.uiView=manager.JSMgr.convertUI(temp);
		View.regComponent("ui.tips.itemTips.item.TreasureTipsHeadUI",TreasureTipsHeadUI);
		View.regComponent("Text",Text);
		View.regComponent("modules.tips.itemTip.SkillListItem",SkillListItem);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(SkillTipsUI.uiView);
	}

	SkillTipsUI.uiView="eJzNld1qE0EUx1+ljIg3MdndJJtkUUEF20K9Mn4UkTDZnSRDNzvLzGybWgJKaStqq6DUK0WkF72qn6Biqw+ja+OVr+DMbLLZpFuIN2IIyezMmTO/8z9nz6wAvuwjYIFrGC2BDPAp8RmwVkAHWIauZcASdngLWAVDjH28SPgNtdDNALuFXQdYN1cGLmbbsImSPpaBJV10or+kp0VIxYZavSnMOfGBJebYAvbEpE3abeLlAlzj2Gc1I+t70orh22iaYnEg0EuZwVcsuKjBxf5uNxODVCmCLKCoKhzMIOiMMRkKyYgpWpEJxc0WVyR9l2Iq8DhuS5cBzkqcLOaoXR0MsuMHXZ0FSY4LpDN2dDGSw6jEcuhaOQaxIXXqak8LRTB6IT+p0kXl+XR56Fk3RzzXFgIYSRkJDRlDnOU46nAaoFxfd7HoupcobCOZArVPO5oCQ88YxYz81ZK0+fKktCVFW0rIYIzCYpt4x7JK8aVBRFuzW8Rreshr9kFjHqPY7d5KJCSN5LQZCadXUkvQxcppWlxzsI7c8XqP0qAXhtEQxmWVC3SVJMYpWUAXiUvk8glNK5kVWX7RPLDyGdAgHr8ixBaFUoiehOV5iqE8zR7sbKgPkBEmY6zKg8ZKI1JbN/VYb3NYGxRSFAOC8Mnd3ofdpIhmEmjwJCwvY5sSRhp8ah7OIDyGJh6hi5tKTuRxRFMlTIEVRSVhteNQa7zDE7iP3vVePwMjiOVJEKFZsKGdQjmhmEalkkao9sV0h2+/hC8e/Kdiyl3/VMw5zI7yRe9L3owJ88UhohvtYD600Tywyv2huIJM8WJQ5CPI51Urj8bybkpT5opsE/L4WdE4Um+DkWbfJk7gIjbS8bPjPjyobCnynCORTqekQjV61RpkNgh1rlMoLj7Zz+LYjVJxELsL69OUBP4wO782NsONL1a4ttZbPQgfb4Xrmz8Ovh0+3f358lO4//n7nbu9j+/F9/DrfTk+2Outbv28tx2uvznce/t7/2Fv62P49dmvV8/Dne0zQkdvivFlF509pdJonUCNkoacU+cM7eSP/Z1w7/2ZnLQ6JwjIIqINlywJCiaKwHXVvQsdLDqjbFiYzfC2q4LuB/S3FWQb5bJZETN1IlMXORlUk7qPpcJ/AIMy4e0=";
	return SkillTipsUI;
})(View)


//class ui.tips.MessageTipUI extends laya.ui.View
var MessageTipUI=(function(_super){
	function MessageTipUI(){
		this.img_tipsBg=null;
		this.lab_content=null;
		MessageTipUI.__super.call(this);
	}

	__class(MessageTipUI,'ui.tips.MessageTipUI',_super);
	var __proto=MessageTipUI.prototype;
	__proto.createChildren=function(){
		var temp=MessageTipUI.uiView;
		MessageTipUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MessageTipUI.uiView);
	}

	MessageTipUI.uiView="eJxtkE1OwzAQhe8ybE3JT9Oo3lFWSOyQEAihyHVcx6pjR46hKVXOAIfgFBwIrsEkVZq2whvPjPy+N8878NtKAIUHJTZAoHK2qoHuYKNyXwCdpTMChVCy8ECn85YAL5TOgT7vBuXCNsfCLdDLOCbQdHdCBlAaIeiNORSoUmZeVfVCwsgOw+Q/+G3JpDjDJ/OeHqdTMq6Jdb1WBiXcluXVq8o0M7IWuZpU5sQoCAgwwwvrnoAGk2ToHvuubV9acrC/Y0uhz+zDfbiAnPzRPppmy4xb44XxqPKiQUP4+fj8/frGvvbOrsWN1bZ7exGHEY/4YY6Jxi0jrFcIulfvYuxQde0U6zbiA2XVH5wwrWSfH82Fgy7IH79ZlRo=";
	return MessageTipUI;
})(View)


//class ui.treasureBox.item.MoneyCardItemUI extends laya.ui.View
var MoneyCardItemUI=(function(_super){
	function MoneyCardItemUI(){
		this.icon=null;
		this.numText=null;
		MoneyCardItemUI.__super.call(this);
	}

	__class(MoneyCardItemUI,'ui.treasureBox.item.MoneyCardItemUI',_super);
	var __proto=MoneyCardItemUI.prototype;
	__proto.createChildren=function(){
		var temp=MoneyCardItemUI.uiView;
		MoneyCardItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(MoneyCardItemUI.uiView);
	}

	MoneyCardItemUI.uiView="eJx1jVFLwzAURv/L91xn262z5lUQ9i4yEZGQXZvLsjQ0qess+e8mYxN98PHcfOdkRjg5gsAz0xEF3NA7DzHjyLugIaqqLqCJOx0SrOpYQGk2O4jX+apuDrKj/9xPOaQJq97ibygWP4HH3oYHw+5345RWZVtggmjW14wdD080BWQ2Y1anql6umnTwTiraQtykP/2ebXpTmny4Hfnd6/GLF852eaeJQhbLs7m+a+/zVUlDLxDlor3A9gLSKt0PZ2oSGe5y2tBHQIxv8RvF0mFj";
	return MoneyCardItemUI;
})(View)


//class ui.treasureBox.item.PrizeItemUI extends laya.ui.View
var PrizeItemUI=(function(_super){
	function PrizeItemUI(){
		this.icon=null;
		this.countText=null;
		PrizeItemUI.__super.call(this);
	}

	__class(PrizeItemUI,'ui.treasureBox.item.PrizeItemUI',_super);
	var __proto=PrizeItemUI.prototype;
	__proto.createChildren=function(){
		var temp=PrizeItemUI.uiView;
		PrizeItemUI.uiView=manager.JSMgr.convertUI(temp);
		laya.ui.Component.prototype.createChildren.call(this);
		this.createView(PrizeItemUI.uiView);
	}

	PrizeItemUI.uiView="eJxdj0FPwzAMhf+LuZa16zZNzW1HJG4gBEIcQpolFllSJR7bqPLfcQYbFTkktvXe85cR6DRoEPCE+gAVDDEMCcQIB+zJgpivmwqsRmMJxLLNFSiLrgfxOl6cdztp9NR6YiW7jiBafn6DyuRTRtajCp7l6QM9dzIlTakmfaS41zWS3hVBbYLrZ4M3MFnPEdIrG+ILg13qZxDNbJVzdQW6l+/a/QPqzjzLP5754gqkwt7TIwOwp3DwqCvn9nxPAIplGzw94BfvadufjuWbiLJsVMGFknjTrVeLplilQ1O+6fSWIOe3/A3V4HDa";
	return PrizeItemUI;
})(View)


//class modules.room.view.render.InviteDialogItem extends ui.room.items.InviteDialogItemUI
var InviteDialogItem=(function(_super){
	function InviteDialogItem(){
		this.index=0;
		this.msg=null;
		InviteDialogItem.__super.call(this);
	}

	__class(InviteDialogItem,'modules.room.view.render.InviteDialogItem',_super);
	var __proto=InviteDialogItem.prototype;
	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(data){
		Laya.superSet(InviteDialogItemUI,this,'dataSource',data);
		this.index=-1;
		var list=this.parent ? (this.parent).parent:null;
		if(list !=null){
			var dataSources=list.dataSource;
			this.index=dataSources.indexOf(data);
		}
		this.msg=data;
		if(this.msg){
			this.headImg.skin=this.msg.headUrl;
			this.typeName.text=this.msg.type==0 ? LanguageMgr.Ins.GetLan("9004140"):LanguageMgr.Ins.GetLan("14300014");
			this.battleName.text=this.msg.nickName;
		}
		else{
			this.headImg.skin="";
			this.typeName.text="";
			this.battleName.text="";
		}
		if(list.selectedIndex==this.index){
			this.bg1.visible=true;
			this.bg2.visible=false;
			this.contentBox.x=-20;
		}
		else{
			this.bg1.visible=false;
			this.bg2.visible=true;
			this.contentBox.x=0;
		}
	});

	return InviteDialogItem;
})(InviteDialogItemUI)


//class modules.room.view.render.RoomInviteFriendItem extends ui.room.items.RoomInviteFriendItemUI
var RoomInviteFriendItem=(function(_super){
	function RoomInviteFriendItem(){
		//30秒
		this.index=0;
		this.guildMemberMsg=null;
		RoomInviteFriendItem.__super.call(this);
		this.inviteBtn.on("click",this,this.inviteHandler);
	}

	__class(RoomInviteFriendItem,'modules.room.view.render.RoomInviteFriendItem',_super);
	var __proto=RoomInviteFriendItem.prototype;
	__proto.setOnlineText=function(state){
		if(state==3){
			this.onlineTxt.text="在线中";
			this.onlineTxt.color="#59ED00";
		}
		else if(state==2){
			this.onlineTxt.text="房间中";
			this.onlineTxt.color="#20AAF2";
		}
		else if(state==1){
			this.onlineTxt.text="战斗中";
			this.onlineTxt.color="#FF0000";
		}
		else{
			this.onlineTxt.text="离线";
			this.onlineTxt.color="#FFFFFF";
		}
	}

	__proto.inviteHandler=function(){
		var msg=new com.road.ddt.proto.battle.BattleInviteOpMsg();
		msg.roomId=RoomMgr.ins.roomId;
		msg.guildPlayer.push(this.guildMemberMsg.playerId.toString());
		msg.campaignId=RoomMgr.ins.campaignId;
		msg.battleType=RoomMgr.ins.battleType;
		SocketManager.Instance.sendSocketData(0x274D,msg);
		this.guildMemberMsg["sendTime"]=Browser.now();
		this.checkInviteBtnGray();
		Laya.timer.once(RoomInviteFriendItem.CDTIME*1000,this,this.checkInviteBtnGray);
	}

	__proto.checkInviteBtnGray=function(){
		this.inviteBtnNameTxt.text=this.isSendInvate ? LanguageMgr.Ins.GetLan("9002335"):LanguageMgr.Ins.GetLan("14300091");
		this.inviteBtn.gray=this.isCanInvite ? false :true;
		this.inviteBtn.mouseEnabled=this.isCanInvite ? true :false;
	}

	__getset(0,__proto,'isCanInvite',function(){
		console.log("guildMemberMsg.playerState:"+this.guildMemberMsg.playerState);
		var bool=this.guildMemberMsg.playerState==3 && this.guildMemberMsg.playerId.toString()!=(PlayerInfo.instance.userId+"")? true :false;
		return bool && !this.isSendInvate;
	});

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(data){
		Laya.superSet(RoomInviteFriendItemUI,this,'dataSource',data);
		this.index=-1;
		if(data){
			var list=this.parent ? (this.parent).parent:null;
			if(list !=null){
				var dataSources=list.dataSource;
				this.index=dataSources.indexOf(data);
			}
			this.guildMemberMsg=data;
			this.bg.visible=this.index%2==1 ? true :false;
			this.nameTxt.text=this.guildMemberMsg.nickName;
			this.headIcon.skin=this.guildMemberMsg.avatar;
			this.onlineIcon.visible=this.guildMemberMsg.playerState==-1 ? false :true;
			this.setOnlineText(this.guildMemberMsg.playerState);
			this.inviteBtnNameTxt.text=this.isSendInvate ? LanguageMgr.Ins.GetLan("9002335"):LanguageMgr.Ins.GetLan("14300091");
			var _isCanInvite=this.isCanInvite;
			this.inviteBtn.gray=_isCanInvite ? false :true;
			this.inviteBtn.mouseEnabled=_isCanInvite ? true :false;
			this.meiliTxt.text="Lv "+this.guildMemberMsg.usercpLevel;
			var rankVO=RankModel.getDivison(this.guildMemberMsg.trophy);
			var medalRes=PathMgr.getMedalRes(rankVO);
			this.rankingIcon.skin=medalRes.iconRes;
			this.rankingIcon.scaleX=this.rankingIcon.scaleY=0.18;
			var remainderTime=RoomInviteFriendItem.CDTIME-Math.round((Browser.now()-this.guildMemberMsg["sendTime"])/1000);
			if(remainderTime > 0){
				Laya.timer.once(RoomInviteFriendItem.CDTIME*1000,this,this.checkInviteBtnGray);
			}
		}
		else{
			this.guildMemberMsg=null;
		}
	});

	__getset(0,__proto,'isInRoom',function(){
		var info;
		for(var $each_info in RoomMgr.ins.roomPlayerList){
			info=RoomMgr.ins.roomPlayerList[$each_info];
			if(this.guildMemberMsg && this.guildMemberMsg.playerId.toString()==info.userId){
				return true;
			}
		}
		return false;
	});

	//return guildMemberMsg.isOnline && guildMemberMsg.battleServerId < 0 && !isInRoom? true :false;
	__getset(0,__proto,'isSendInvate',function(){
		return this.guildMemberMsg["sendTime"] ? (RoomInviteFriendItem.CDTIME-Math.round((Browser.now()-this.guildMemberMsg["sendTime"])/1000)<=0 ? false :true):false;
	});

	RoomInviteFriendItem.CDTIME=30;
	return RoomInviteFriendItem;
})(RoomInviteFriendItemUI)


/**
*描述点击指引 指引点击按钮,同时加描述说明
*@author chengwen.yi
*
*/
//class modules.newguide.view.ChickenClickMaskView extends modules.newguide.view.ClickMaskView
var ChickenClickMaskView=(function(_super){
	function ChickenClickMaskView(target,info,isMask,maskAlpha){
		this.chickenLeftUI=null;
		this.xiaojixiaL=null;
		this.npc_xiaoxiaojiL=null;
		this.chickenRightUI=null;
		this.xiaojixiaR=null;
		this.npc_xiaoxiaojiR=null;
		(isMask===void 0)&& (isMask=true);
		(maskAlpha===void 0)&& (maskAlpha=0.6);
		ChickenClickMaskView.__super.call(this,target,info,isMask,maskAlpha);
	}

	__class(ChickenClickMaskView,'modules.newguide.view.ChickenClickMaskView',_super);
	var __proto=ChickenClickMaskView.prototype;
	__proto.setDesc=function(desc,isLeft,descOffX,descOffY){
		(isLeft===void 0)&& (isLeft=false);
		(descOffX===void 0)&& (descOffX=0);
		(descOffY===void 0)&& (descOffY=0);
		if(isLeft){
			if(this.chickenLeftUI==null){
				this.chickenLeftUI=new ChickenLeftUI();
				this.xiaojixiaL=new AniSkeleton("xiaojixia","guide");
				this.xiaojixiaL.pos(29,61);
				this.chickenLeftUI.addChildAt(this.xiaojixiaL,0);
				this.npc_xiaoxiaojiL=new AniSkeleton("npc_xiaoxiaoji","guide");
				this.npc_xiaoxiaojiL.pos(31,63);
				this.chickenLeftUI.addChild(this.npc_xiaoxiaojiL);
			}
			this.addChild(this.chickenLeftUI);
			this.chickenLeftUI.content.text=desc;
			this.chickenLeftUI.textBg.width=this.chickenLeftUI.content.width+50;
			this.chickenLeftUI.x=this.rect.x+this.rect.width*0.5-314+descOffX;
			this.chickenLeftUI.y=this.rect.y+this.rect.height*0.5-200+descOffY;
		}
		else{
			if(this.chickenRightUI==null){
				this.chickenRightUI=new ChickenRightUI();
				this.xiaojixiaR=new AniSkeleton("xiaojixia","guide");
				this.xiaojixiaR.pos(203,60);
				this.chickenRightUI.addChildAt(this.xiaojixiaR,0);
				this.npc_xiaoxiaojiR=new AniSkeleton("npc_xiaoxiaoji","guide");
				this.npc_xiaoxiaojiR.pos(203,63);
				this.npc_xiaoxiaojiR.scaleX=-1;
				this.chickenRightUI.addChild(this.npc_xiaoxiaojiR);
			}
			this.addChild(this.chickenRightUI);
			this.chickenRightUI.content.text=desc;
			this.chickenRightUI.textBg.width=this.chickenRightUI.content.width+50;
			this.chickenRightUI.x=this.rect.x+this.rect.width*0.5+descOffX;
			this.chickenRightUI.y=this.rect.y+this.rect.height*0.5-200+descOffY;
		}
	}

	return ChickenClickMaskView;
})(ClickMaskView)


//class modules.newguide.view.SkillClickMaskView extends modules.newguide.view.ClickMaskView
var SkillClickMaskView=(function(_super){
	function SkillClickMaskView(target,info,isMask,maskAlpha){
		this.skillbox=null;
		(isMask===void 0)&& (isMask=true);
		(maskAlpha===void 0)&& (maskAlpha=0.6);
		SkillClickMaskView.__super.call(this,target,info,isMask,maskAlpha);
	}

	__class(SkillClickMaskView,'modules.newguide.view.SkillClickMaskView',_super);
	var __proto=SkillClickMaskView.prototype;
	__proto.createGuideSkeleton=function(){
		var aniSkeleton=new AniSkeleton("effect_skill","guide",0,false);
		aniSkeleton.mouseEnabled=false;
		Laya.timer.once(500,this,this.showSkillbox);
		return aniSkeleton;
	}

	__proto.showSkillbox=function(){
		this.skillbox=new GuideSkillUI();
		this.aniFinge.addChildAt(this.skillbox,0);
		this.skillbox.x=-491;
		this.skillbox.y=-272;
		this.initSkillLan();
	}

	__proto.initSkillLan=function(){
		this.skillbox.box2_0.text=LanguageMgr.Ins.GetLan("9001043");
		this.skillbox.box2_1.text=LanguageMgr.Ins.GetLan("9002333");
		this.skillbox.box2_2.text=LanguageMgr.Ins.GetLan("9007334");
		this.skillbox.box2_3.text=LanguageMgr.Ins.GetLan("9007337");
		this.skillbox.box2_4.text=LanguageMgr.Ins.GetLan("9007419");
	}

	return SkillClickMaskView;
})(ClickMaskView)


//class ui2.assets.uianimation.DamageUI extends laya.display.EffectAnimation
var DamageUI=(function(_super){
	function DamageUI(){
		DamageUI.__super.call(this);
		this.effectData=DamageUI.uiView;;
	}

	__class(DamageUI,'ui2.assets.uianimation.DamageUI',_super);
	__static(DamageUI,
	['uiView',function(){return this.uiView={"type":"View","props":{},"child":[{"type":"FontClip","props":{"y":0,"x":0,"var":"number","value":"123","skin":"battle/shuzi/ui_zd_num.png","sheet":"0123456789","scaleY":0.5,"scaleX":0.5,"name":"number","anchorY":0.5,"anchorX":0.5,"alpha":0},"compId":2}],"animations":[{"nodes":[{"target":2,"keyframes":{"y":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":2,"key":"y","index":0},{"value":-67,"tweenMethod":"linearNone","tween":true,"target":2,"key":"y","index":5},{"value":-67,"tweenMethod":"linearNone","tween":true,"target":2,"label":null,"key":"y","index":15},{"value":-222,"tweenMethod":"linearNone","tween":true,"target":2,"key":"y","index":25}],"x":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":2,"key":"x","index":0},{"value":0,"tweenMethod":"linearNone","tween":true,"target":2,"key":"x","index":5},{"value":0,"tweenMethod":"linearNone","tween":true,"target":2,"label":null,"key":"x","index":15},{"value":0,"tweenMethod":"linearNone","tween":true,"target":2,"key":"x","index":25}],"var":[{"value":"number","tweenMethod":"linearNone","tween":false,"target":2,"key":"var","index":0}],"scaleY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":2,"key":"scaleY","index":0},{"value":1,"tweenMethod":"linearNone","tween":true,"target":2,"key":"scaleY","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":2,"label":null,"key":"scaleY","index":15}],"scaleX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":2,"key":"scaleX","index":0},{"value":1,"tweenMethod":"linearNone","tween":true,"target":2,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":2,"label":null,"key":"scaleX","index":15}],"name":[{"value":"number","tweenMethod":"linearNone","tween":false,"target":2,"key":"name","index":0}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":2,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":2,"key":"anchorX","index":0}],"alpha":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":2,"key":"alpha","index":0},{"value":1,"tweenMethod":"linearNone","tween":true,"target":2,"key":"alpha","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":2,"label":null,"key":"alpha","index":15},{"value":0,"tweenMethod":"linearNone","tween":true,"target":2,"key":"alpha","index":25}]}}],"name":"ani1","id":1,"frameRate":24,"action":0}]};}
	]);
	return DamageUI;
})(EffectAnimation)


/**
*供编LAYA IDE辑器使用 为了桥接GAnimation做特殊处理
*@author chengwen.yi
*
*/
//class laya.ui.GAnimationPlayer extends laya.display.GAnimation
var GAnimationPlayer=(function(_super){
	function GAnimationPlayer(){
		this.pic=null;
		this._mMBounds=null;
		GAnimationPlayer.__super.call(this);
		this.checkEmpty();
	}

	__class(GAnimationPlayer,'laya.ui.GAnimationPlayer',_super);
	var __proto=GAnimationPlayer.prototype;
	__proto.checkEmpty=function(){
		if (this.numChildren < 1){
			if (!this.pic){
				this.pic=new Image();
				this.pic.skin="spriteSkin.png";
				this.pic.size(100,100);
				this.addChild(this.pic);
			}
		}
	}

	__proto.loadAtlas=function(url,loaded,cacheName){
		(cacheName===void 0)&& (cacheName="");
		url=laya.ide.managers.ResFileManager.getIDEResPath(url);
		return _super.prototype.loadAtlas.call(this,url,loaded,cacheName);;
	}

	//super.loadAtlas(this,url,loaded,cacheName);
	__proto.loadImages=function(urls,cacheName){
		(cacheName===void 0)&& (cacheName="");
		if (!urls)return null;
		var i=0,len=0;
		len=urls.length;
		for (i=0;i < len;i++){
			urls[i]=laya.ide.managers.ResFileManager.getIDEResPath(urls[i]);
		}
		return _super.prototype.loadImages.call(this,urls,cacheName);
	}

	/**@private */
	__proto._$6__parseGraphicAnimationByData=function(animationObject){
		return laya.editorUI.GraphicParser.GraphicParser.parseAnimationByData(animationObject);
	}

	__proto.loadAnimation=function(url,loaded,atlas){
		url=laya.ide.managers.ResFileManager.getIDEPagePath(url);
		Loader.clearRes(url);
		delete Animation.framesMap[url];
		Animation.clearCache(url);
		return _super.prototype.loadAnimation.call(this,url,loaded,atlas);
	}

	//super.loadAnimation(this,url,loaded,atlas);
	__proto._getBoundPointsM=function(ifRotate){
		(ifRotate===void 0)&& (ifRotate=false);
		if (this._width > 0 && this._height > 0 && !this.autoSize){
			if (!this._mMBounds){
				this._mMBounds=new Rectangle();
			}
			this._mMBounds.setTo(0,0,this._width,this._height);
			return this._mMBounds._getBoundPoints();
		}
		return laya.display.Sprite.prototype._getBoundPointsM.call(this,ifRotate);
	}

	// }
	__getset(0,__proto,'source',null,function(value){
		if (value && value !=""){
			if (this.pic){
				this.pic.removeSelf();
			}
		}
		_super.prototype._$set_source.call(this,value);
	});

	//super.source(this,value);
	__getset(0,__proto,'autoAnimation',null,function(value){
		this._actionName=value;
	});

	return GAnimationPlayer;
})(GAnimation)


/**
*
*窗口基类 适合窗口界面继承
*默认打开居中显示 默认开启屏幕缩放监听
*@author chengwen.yi
*
*/
//class laya.ui.Window extends laya.ui.BaseView
var Window$2=(function(_super){
	function Window($layer){
		this._layer=null;
		this._maskBg=null;
		this.isOpenBlur=false;
		this._alignViewObject=null;
		this._layer=$layer ? $layer :LayerMgr.ins.windowLayer;
		Window.__super.call(this);
		this.isOpenResize=true;
	}

	__class(Window,'laya.ui.Window',_super,'Window$2');
	var __proto=Window.prototype;
	/**
	*仅通过UIMgr.openView 打开才会执行到该方法
	*@param $x
	*@param $y
	*@param $isCheckAutoCenter
	*@param $isPopUp
	*@param $maskAlpha
	*
	*/
	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		if(this._layer){
			this.alignView(false,$hAlign,$vAlign,$x,$y);
			if(!$isPopUp){
				if($isShowMash){
					if(this._maskBg==null){
						this._maskBg=new Image("assets/textrue/common/blank.png");
						this._maskBg.sizeGrid="2,2,2,2,1";
						this._maskBg.on("click",this,this.closeHandler);
					}
					this._maskBg.alpha=$maskAlpha;
					this._maskBg.width=ResizeMgr.bestFitWidth;
					this._maskBg.height=ResizeMgr.bestFitHeight;
					this._layer.addChild(this._maskBg);
				}
				this._isShow=true;
				this._layer.addChild(this);
			}
			else{
				this._isShow=true;
				this._layer.addChild(this);
			}
			if(this.isOpenBlur && $blurDisplayName){
				var lastCurBlurObject=Window.curBlurObject;
				if((typeof $blurDisplayName=='string')){
					Window.curBlurObject=SceneMgr.ins.curScene;
				}
				else if(($blurDisplayName instanceof laya.ui.View )){
					Window.curBlurObject=$blurDisplayName;
				}
				if(Window.curBlurObject){
					if(lastCurBlurObject && lastCurBlurObject==Window.curBlurObject){
						if(Window.blurNum <=0){
							Laya.timer.clear(Window,Window.lazyClearFilter);
						}
					}
					else{
						if((Window.curBlurObject instanceof modules.scene.BaseScene )){
							var curBaseScene=Window.curBlurObject;
							if(!curBaseScene.isStaticBlur)curBaseScene.isStaticBlur=true;
						}
						else{
							if(!Window.curBlurObject.filters)Window.curBlurObject.filters=[new BlurFilter(8)];
						}
						Window.blurNum++;
					}
				}
			}
			NewGuideMgr.ins.checkAllGuide(this,true);
		}
		else{
			if(Browser.onPC)throw Error("window._layer未定义");
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		_super.prototype.destroy.call(this,destroyChild);
		if(this._maskBg)this._maskBg.off("click",this,this.closeHandler);
	}

	/**
	*仅通过UIMgr.closeView 关闭才会执行到该方法
	*@param isPlaySound
	*
	*/
	__proto.hideView=function(isPlaySound){
		(isPlaySound===void 0)&& (isPlaySound=false);
		if(this.parent){
			this._isShow=false;
			this.parent.removeChild(this);
		}
		else if(this._layer && this._layer.contains(this)){
			this._isShow=false;
			this._layer.removeChild(this);
		}
		if(this._maskBg){
			this._maskBg.off("click",this,this.closeHandler);
			this._layer.removeChild(this._maskBg);
		}
		if(this.isOpenBlur && Window.curBlurObject && !Window.curBlurObject.destroyed){
			Window.blurNum--;
			if(Window.blurNum <=0){
				Laya.timer.once(50,Window,Window.lazyClearFilter);
			}
		}
		NewGuideMgr.ins.checkAllGuide(this,false);
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		if(this._maskBg){
			this._maskBg.width=ResizeMgr.bestFitWidth;
			this._maskBg.height=ResizeMgr.bestFitHeight;
		}
		if(this._alignViewObject){
			this.alignView(false,this._alignViewObject.hAlign,this._alignViewObject.vAlign,this._alignViewObject.offsetX,this._alignViewObject.offsetY,this._alignViewObject.containerRect);
		}
		else{
			this.alignView();
		}
	}

	__proto.closeHandler=function(e){
		UIMgr.ins.closeView(this.viewType);
	}

	__proto.alignView=function(isEase,hAlign,vAlign,offsetX,offsetY,containerRect){
		(isEase===void 0)&& (isEase=false);
		(hAlign===void 0)&& (hAlign="center");
		(vAlign===void 0)&& (vAlign="center");
		(offsetX===void 0)&& (offsetX=0);
		(offsetY===void 0)&& (offsetY=0);
		if(!this._alignViewObject)this._alignViewObject={};
		this._alignViewObject.isEase=isEase;
		this._alignViewObject.hAlign=hAlign;
		this._alignViewObject.vAlign=vAlign;
		this._alignViewObject.offsetX=offsetX;
		this._alignViewObject.offsetY=offsetY;
		this._alignViewObject.containerRect=containerRect;
		Align.singleViewAlign(this,isEase,hAlign,vAlign,offsetX,offsetY,null);
	}

	__getset(0,__proto,'layer',function(){
		return this._layer;
		},function(value){
		this._layer=value;
	});

	Window.lazyClearFilter=function(){
		if(Window.curBlurObject && !Window.curBlurObject.destroyed){
			if((Window.curBlurObject instanceof modules.scene.BaseScene )){
				var curBaseScene=Window.curBlurObject;
				if(curBaseScene.isStaticBlur)curBaseScene.isStaticBlur=false;
			}
			else{
				if(Window.curBlurObject.filters)Window.curBlurObject.filters=null;
			}
			Window.curBlurObject=null;
		}
	}

	Window.curBlurObject=null;
	Window.blurNum=0;
	return Window;
})(BaseView)


//class modules.activity.view.CommonActivityView extends ui.activity.view.commonActivity.CommonActivityUI
var CommonActivityView=(function(_super){
	function CommonActivityView(activityType){
		this._activityData=null;
		this._userData=null;
		this._canGetCount=0;
		this._activityType=null;
		CommonActivityView.__super.call(this);
		this.initView(activityType);
		this.addEvent(activityType);
		this._canGetCount=0;
	}

	__class(CommonActivityView,'modules.activity.view.CommonActivityView',_super);
	var __proto=CommonActivityView.prototype;
	__proto.initView=function(activityType){
		this.btnMoreInfo.visible=false;
		this.btnMoreInfo.disabled=true;
		this.txtRemainTime.text=LanguageMgr.Ins.GetLan("9002253");
		this.txtTimeHour.text=LanguageMgr.Ins.GetLan("9002273");
		this._activityData=GmActiveDataMgr.ins.getActivityDataByType(activityType);
		this._userData=GmActiveDataMgr.ins.getActivityUserDataByType(activityType);
		this.updateRedDot();
		this.setData(this._activityData,this._userData);
	}

	//3 充值 4 消费
	__proto.addEvent=function(activityType){
		EventMgr.ins.on("gm_active_user_data_update_by_commonactivity",this,this.initView);
		this.list.renderHandler=Handler.create(this,this.tabRendHander,null,false);
	}

	__proto.tabRendHander=function(item,index){
		var data=item.dataSource;
		item.setData(data,this._userData ? this._userData.packageInfo[data.packageId] :null);
	}

	__proto.setData=function(activityData,userData){
		var dateformat=LanguageMgr.Ins.GetLan(14300355);
		var startDate=TimeManager.Instance.getServerDate(activityData.openTime);
		var endDate=TimeManager.Instance.getServerDate(activityData.stopTime);
		var startStr=DateTimeUtils.getDateString(startDate,dateformat);
		var endStr=DateTimeUtils.getDateString(endDate,dateformat);
		var now=TimeManager.Instance.synTime;
		var remindTime=Math.floor((activityData.stopTime-now)/1000/60/60);
		if(remindTime < 0){
			remindTime=0;
		}
		this.txtTimeCount.text=remindTime.toString();
		this.txtTime.text=startStr+"-"+endStr;
		this.txtActivityInc.text=activityData.desc;
		var listData=activityData.packages.sort(function(a,b){
			if (userData){
				var aP=userData.packageInfo[a.packageId];
				var bP=userData.packageInfo[b.packageId];
				if (aP && bP){
					if (aP.canCollect && bP.canCollect){
						}else if (aP.canCollect){
						return-1;
						}else if (bP.canCollect){
						return 1;
						}else if (!aP.isFinish && !bP.isFinish){
						}else if (!aP.isFinish){
						return-1;
						}else if (!bP.isFinish){
						return 1;
					}
				}
			}
			if(a.sort > b.sort)return 1;
			if(a.sort < b.sort)return-1;
			return 0;
		});
		this.list.array=listData;
	}

	__proto.updateRedDot=function(){
		this._canGetCount=0;
		if (this._userData){
			var i;
			for(var $each_i in this._userData.packageInfo){
				i=this._userData.packageInfo[$each_i];
				if(i.canCollect)this._canGetCount++;
			}
		}
		if(this._activityData){
			if(this._canGetCount){
				RedDotMgr.ins.updateRedDotStatus(this.activityType,true);
				EventMgr.ins.event("ACTIVITY_REDDOT_UPDATE",this.activityType);
				}else{
				RedDotMgr.ins.updateRedDotStatus(this.activityType,false);
				EventMgr.ins.event("ACTIVITY_REDDOT_UPDATE",this.activityType);
			}
		}
	}

	__proto.removeEvent=function(){
		EventMgr.ins.off("gm_active_user_data_update_by_commonactivity",this,this.initView);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		ActivityInfoMgr.ins.titleTab=0;
		this.removeEvent();
		this._activityData=null;
		this._userData=null;
		laya.ui.View.prototype.destroy.call(this,destroyChild);
		EventMgr.ins.event("Close_All_Tips");
	}

	__getset(0,__proto,'activityType',function(){
		switch(this._activityData.activeType){
			case 3:{
					this._activityType="SUM_RECHARGE";
					break ;
				}
			case 4:{
					this._activityType="SUM_CONSUME";
					break ;
				}
			default :{
					break ;
				}
			}
		return this._activityType;
	});

	return CommonActivityView;
})(CommonActivityUI)


/**
*意见和反馈界面
*@author baohua.chen
*
*/
//class modules.activity.view.IdeaView extends ui.activity.view.idea.IdeaViewUI
var IdeaView=(function(_super){
	function IdeaView(){
		IdeaView.__super.call(this);
		var info=ActivityInfoMgr.ins.currentTabInfo;
		this.msgTxt.text=info.msg;
	}

	__class(IdeaView,'modules.activity.view.IdeaView',_super);
	var __proto=IdeaView.prototype;
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return IdeaView;
})(IdeaViewUI)


//class modules.activity.view.item.CommonActivityItem extends ui.activity.view.commonActivity.items.CommonActivityItemUI
var CommonActivityItem=(function(_super){
	function CommonActivityItem(){
		this._moneyType=null;
		this._data=null;
		this._user=null;
		this._hasGotten=0;
		this._target=0;
		CommonActivityItem.__super.call(this);
		this.initView();
		this.addEvents();
	}

	__class(CommonActivityItem,'modules.activity.view.item.CommonActivityItem',_super);
	var __proto=CommonActivityItem.prototype;
	__proto.initView=function(){
		this.list.array=[];
	}

	__proto.initProgress=function(){
		var money=ItemModel.getItemName(this._data.conditions[0].target1);
		switch(ActivityViewControl.ins.curView){
			case 4:
				this.containerMoney.visible=true;
				this.containerDiamond.visible=false;
				this.txtAccuConsume.text=LanguageMgr.Ins.GetLan("14300322");
				this.txtMoneyProgress.text=""+this._hasGotten;
				this.txtMoneyTarget.text="/"+this._target+money;
				break ;
			case 3:
				this.containerMoney.visible=false;
				this.containerDiamond.visible=true;
				this.txtAccuRecharge.text=LanguageMgr.Ins.GetLan("14300319");
				this.txtDiamondProgress.text=""+this._hasGotten;
				this.txtDiamondTarget.text="/"+this._target+money;
				break ;
			default :
			}
	}

	__proto.setData=function($info,$user){
		this._data=$info;
		this._user=$user;
		this._hasGotten=this._user ? this._user.conditions[0].value1 :0;
		this._target=this._data.conditions[0].target2;
		if (this._user){
			if(this._user.canCollect){
				this.btnGoFinish.disabled=true;
				this.btnGoFinish.visible=false;
				this.btnRec.visible=true;
				this.btnRec.disabled=false;
				this.imgHadGot.visible=false;
				this.containerMoney.visible=false;
				this.containerDiamond.visible=false;
				this.imgBgHigh.visible=false;
				this.imgBgLight.visible=true;
				}else if(this._user.collectCount){
				this.btnRec.visible=false;
				this.btnRec.disabled=true;
				this.btnGoFinish.visible=false;
				this.btnGoFinish.disabled=true;
				this.imgHadGot.visible=true;
				this.containerMoney.visible=false;
				this.containerDiamond.visible=false;
				this.imgBgHigh.visible=true;
				this.imgBgLight.visible=false;
				}else{
				this.btnRec.visible=false;
				this.btnRec.disabled=true;
				this.btnGoFinish.visible=true;
				this.btnGoFinish.disabled=false;
				this.imgHadGot.visible=false;
				this.imgBgHigh.visible=false;
				this.imgBgLight.visible=true;
				this.initProgress();
			}
			}else {
			this.btnRec.visible=false;
			this.btnRec.disabled=true;
			this.btnGoFinish.visible=true;
			this.btnGoFinish.disabled=true;
			this.imgHadGot.visible=false;
			this.imgBgHigh.visible=false;
			this.imgBgLight.visible=true;
			this.initProgress();
		}
		this.list.dataSource=this._data.items;
	}

	__proto.addEvents=function(){
		EventMgr.ins.on("gm_active_op_result_by_commonactivity",this,this.callRecBack);
		this.btnGoFinish.on("click",this,this.clickGoFinish);
		this.btnRec.on("click",this,this.clickRecReward);
		this.list.mouseHandler=Handler.create(this,this.onRenderClick,null,false);
		this.list.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
	}

	__proto.callRecBack=function(res){
		console.log("领取成功");
		if(res.result){
			UIMgr.ins.openView("CommonRewardWindow",Handler.create(this,function(view){
				view.setItems(res.param3);
			}));
		}
	}

	__proto.onRenderClick=function(e,$index){
		if(e.type !="click")return;
		var data=this.list.array[$index];
		if(!data)return;
		var itemVO=ItemModel.getItemConfigData(data.itemId);
		TipsManager.Instance().addItemTip(itemVO,e);
	}

	__proto.onRenderHandler=function($item,$index){
		var data=this.list.array[$index];
		if(!data){
			$item.imgIcon.skin="";
			$item.txtCount.text="";
			return;
		};
		var itemV0=ItemModel.getItemConfigData(data.itemId);
		$item.setData(itemV0);
		$item.imgIcon.skin="assets/textrue/itemicon/"+itemV0.Icon+".png";
		$item.txtCount.text=""+data.itemCount;
		if(this._user && this._user.collectCount){
			$item.imgBgHigh.visible=true;
			$item.imgBgLight.visible=false;
			}else{
			$item.imgBgHigh.visible=false;
			$item.imgBgLight.visible=true;
		}
	}

	// EventMgr.ins.event(ActivityEvents.ACTIVITY_REWARDITEM_UPDATE);
	__proto.clickRecReward=function(){
		SocketManager.Instance.out.sendGmActiveOpMsg(
		ActivityViewControl.ins.curView
		,this._user.packageId
		,1
		,1);
	}

	__proto.clickGoFinish=function(){
		switch(ActivityViewControl.ins.curView){
			case 4:
				ShopMgr.ins.selectedIndex=0;
				break ;
			case 3:
				ShopMgr.ins.selectedIndex=4;
				break ;
			default :
			}
		UIMgr.ins.openView("ShopView");
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		ActivityViewControl.ins.closeView();
		ActivityInfoMgr.ins.titleTab=0;
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__proto.removeEvent=function(){
		this.btnGoFinish.off("click",this,this.clickGoFinish);
		this.btnRec.off("click",this,this.clickRecReward);
		EventMgr.ins.off("gm_active_op_result_by_commonactivity",this,this.callRecBack);
	}

	return CommonActivityItem;
})(CommonActivityItemUI)


//class modules.activity.view.item.CommonActivityReward extends ui.activity.view.commonActivity.items.CommonActivityRewardUI
var CommonActivityReward=(function(_super){
	function CommonActivityReward(){
		this._item=null;
		this.addEvent();
		CommonActivityReward.__super.call(this);
	}

	__class(CommonActivityReward,'modules.activity.view.item.CommonActivityReward',_super);
	var __proto=CommonActivityReward.prototype;
	__proto.addEvent=function(){
		EventMgr.ins.on("ACTIVITY_REWARDITEM_UPDATE",this,this.updateBg);
	}

	// this.on(Event.CLICK,this,this.onClickHandler);
	__proto.setData=function(item){
		this._item=item;
	}

	__proto.onClickHandler=function(e){
		TipsManager.Instance().addItemTip(this._item,e);
		console.log('fsdaf    ');
	}

	__proto.updateBg=function(){
		this.imgBgLight.visible=false;
		this.imgBgHigh.visible=true;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvents();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__proto.removeEvents=function(){
		EventMgr.ins.off("ACTIVITY_REWARDITEM_UPDATE",this,this.updateBg);
		this.off("click",this,this.onClickHandler);
	}

	return CommonActivityReward;
})(CommonActivityRewardUI)


//class modules.activity.view.item.CommonRewardItem extends ui.activity.view.commonActivity.items.CommonRewardItemUI
var CommonRewardItem=(function(_super){
	function CommonRewardItem(){
		CommonRewardItem.__super.call(this);
	}

	__class(CommonRewardItem,'modules.activity.view.item.CommonRewardItem',_super);
	return CommonRewardItem;
})(CommonRewardItemUI)


//class modules.activity.view.item.LuckyWheelBoxItem extends ui.activity.item.LuckyWheelBoxItemUI
var LuckyWheelBoxItem=(function(_super){
	function LuckyWheelBoxItem(item,i,isFromLibao){
		LuckyWheelBoxItem.__super.call(this);
		(isFromLibao===void 0)&& (isFromLibao=false);
		this.setData(item,i);
	}

	__class(LuckyWheelBoxItem,'modules.activity.view.item.LuckyWheelBoxItem',_super);
	var __proto=LuckyWheelBoxItem.prototype;
	__proto.setData=function(item,i){
		if(item.ItemID===-50){
			this.img_icon.skin='assets/textrue/language/'+LanguageMgr.Ins.country+'/itemicon/'+item.Icon+'.png';
			}else {
			this.img_icon.skin='assets/textrue/itemicon/'+item.Icon+'.png';
		}
		this.label_count.text=item.Number+''
		this.y=10
		this.x=46
		this.pivotX=36
		this.scaleX=-1
		this.x+=(this.width+10)*i
	}

	return LuckyWheelBoxItem;
})(LuckyWheelBoxItemUI)


//class modules.activity.view.item.RechargeRewardListItem extends ui.activity.view.recharge.RechargeRewardListItemUI
var RechargeRewardListItem=(function(_super){
	function RechargeRewardListItem(){
		this._itemVo=null;
		RechargeRewardListItem.__super.call(this);
	}

	__class(RechargeRewardListItem,'modules.activity.view.item.RechargeRewardListItem',_super);
	var __proto=RechargeRewardListItem.prototype;
	// addEvent();
	__proto.setData=function(vo){
		this._itemVo=vo;
		this.icon.skin=PathMgr.getItemIcon(vo);
		this.txt.text=vo.Number.toString();
		if (vo.Type==3){
			var skillVo=SkillModel.getSkillConfigData(1004001);
			var qualiity="aaaaaa";
			this.star.value=qualiity.substr(0,skillVo.Quality+1);
			this.star.visible=true;
			}else{
			this.star.visible=false;
		}
	}

	__proto.addEvent=function(){
		this.on("click",this,this.onClick);
	}

	__proto.onClick=function(e){
		TipsManager.Instance().addItemTip(this._itemVo,e);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this._itemVo=null;
		this.off("click",this,this.onClick)
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return RechargeRewardListItem;
})(RechargeRewardListItemUI)


//class modules.activity.view.item.ShareInviteGoodsItem extends ui.activity.item.shareInvite.ShareInvteGoodsItemUI
var ShareInviteGoodsItem=(function(_super){
	function ShareInviteGoodsItem(){
		this._data=null;
		this._uiAri=null;
		ShareInviteGoodsItem.__super.call(this);
		this.on("click",this,this.onClickHandler);
	}

	__class(ShareInviteGoodsItem,'modules.activity.view.item.ShareInviteGoodsItem',_super);
	var __proto=ShareInviteGoodsItem.prototype;
	__proto.onClickHandler=function(){
		var self=this;
		if(self._data.state==0){
			SocketManager.Instance.out.sendShareRewad(ShareConst.SHARE_INVITE,self._data.pos);
		}
	}

	__proto.setData=function(value){
		var self=this;
		self._data=value;
		var vo=ItemModel.getItemConfigData(value.itemId);
		self.icon.skin="assets/textrue/itemicon/"+vo.Icon+".png";
		self.countTxt.text=String(value.count);
		self.overIcon.visible=value.state==1;
		self.msgTxt.text=value.msg;
		self.bg.skin="activity/shareInvite/ui_daoju_an_bg.png";
		if(this._uiAri){
			this._uiAri.destroy();
			this._uiAri=null;
		}
		if(value.state==0&&value.playerCount <=ActivityInfoMgr.ins.inviteFrindCount){
			self.bg.skin="activity/shareInvite/ui_daoju_liang_bg.png";
			this._uiAri=new AniSkeleton("ui_fkzhuang","ui");
			this.addChild(this._uiAri);
			this._uiAri.playSkeleton(0,true);
			this._uiAri.x=this._uiAri.y=49;
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.off("click",this,this.onClickHandler);
		if(this._uiAri){
			this._uiAri.destroy();
			this._uiAri=null;
		}
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return ShareInviteGoodsItem;
})(ShareInvteGoodsItemUI)


/**
*活动按钮
*@author baohua.chen
*
*/
//class modules.activity.view.item.TabButton extends ui.activity.view.TabItemUI
var TabButton=(function(_super){
	function TabButton(){
		this._info=null;
		this._index=0;
		TabButton.__super.call(this);
		this.addEvent();
	}

	__class(TabButton,'modules.activity.view.item.TabButton',_super);
	var __proto=TabButton.prototype;
	__proto.addEvent=function(){
		this.btnTab.on("click",this,this.onClickHandler);
		EventMgr.ins.on("ACTIVITY_BUTTON_CLICK",this,this.updateClick);
		EventMgr.ins.on("ACTIVITY_REDDOT_UPDATE",this,this.updateRedDot);
	}

	__proto.onClickHandler=function(){
		ActivityInfoMgr.ins.currentTabIndex=this._index;
		EventMgr.ins.event("ACTIVITY_BUTTON_CLICK");
	}

	__proto.updateClick=function(){
		if(ActivityInfoMgr.ins.currentTabIndex==this._index){
			this.btnTab.mouseEnabled=this.btnTab.mouseThrough=false;
			this.btnTab.skin="activity/ui_renwu_button1.png";
			}else{
			this.btnTab.mouseEnabled=this.btnTab.mouseThrough=true;
			this.btnTab.skin="activity/ui_renwu_button2.png";
		}
	}

	__proto.removeEvent=function(){
		this.btnTab.off("click",this,this.onClickHandler);
		EventMgr.ins.off("ACTIVITY_BUTTON_CLICK",this,this.updateClick);
		EventMgr.ins.off("ACTIVITY_REDDOT_UPDATE",this,this.updateRedDot);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__proto.setData=function($info,$index){
		this._index=$index;
		this._info=$info;
		if(Boolean($info.activityState)){
			this.imgStateBg.visible=true;
			this.txtActivityState.visible=true;
			this.txtActivityState.text=$info.activityState;
		}
		else {
			this.imgStateBg.visible=false;
			this.txtActivityState.visible=false;
		}
		if(this._info){
			this.titleMsg.text=this._info.titleStr;
		}
		this.updateClick();
		this.initRedDot(this.getActivityType(this._info));
	}

	__proto.initRedDot=function(activityType){
		if(RedDotMgr.ins.getDot("btn_activity")){
			RedDotMgr.ins.updateRedDotStatus(activityType,true);
			this.redDot.visible=true;
			}else{
			this.redDot.visible=RedDotMgr.ins.getDot(activityType);
		}
		if(activityType=="IDEA"){
			RedDotMgr.ins.updateRedDotStatus("IDEA",false);
			this.redDot.visible=false;
		}
		if(activityType=="PLACARD"){
			RedDotMgr.ins.updateRedDotStatus("PLACARD",false);
			this.redDot.visible=false;
		}
	}

	__proto.updateRedDot=function(activityType){
		if(ActivityInfoMgr.ins.currentTabIndex==this._index)
			this.redDot.visible=RedDotMgr.ins.getDot(activityType);
	}

	__proto.getActivityType=function(info){
		var type;
		switch(info.activityType){
			case "3":{
					type="SUM_RECHARGE";
					break ;
				}
			case "4":{
					type="SUM_CONSUME";
					break ;
				}
			default :{
					type=info.activityType;
					break ;
				}
			}
		return type;
	}

	return TabButton;
})(TabItemUI)


//class modules.activity.view.PlacardView extends ui.activity.view.placard.PlacardViewUI
var PlacardView=(function(_super){
	function PlacardView(){
		this.prevY=NaN;
		PlacardView.__super.call(this);
		var info=ActivityInfoMgr.ins.currentTabInfo;
		this.msgTxt.text=info.msg;
		this.msgTxt.on("mousedown",this,this.startScrollText);
	}

	__class(PlacardView,'modules.activity.view.PlacardView',_super);
	var __proto=PlacardView.prototype;
	/*开始滚动文本 */
	__proto.startScrollText=function(e){
		this.prevY=this.msgTxt.mouseY;
		Laya.stage.on("mousemove",this,this.scrollText);
		Laya.stage.on("mouseup",this,this.finishScrollText);
	}

	/*停止滚动文本 */
	__proto.finishScrollText=function(e){
		Laya.stage.off("mousemove",this,this.scrollText);
		Laya.stage.off("mouseup",this,this.finishScrollText);
	}

	/*鼠标滚动文本 */
	__proto.scrollText=function(e){
		var nowX=this.msgTxt.mouseX;
		var nowY=this.msgTxt.mouseY;
		this.msgTxt.scrollY+=this.prevY-nowY;
		this.prevY=nowY;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.finishScrollText(null);
		this.msgTxt.off("mousedown",this,this.startScrollText);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return PlacardView;
})(PlacardViewUI)


//class modules.activity.view.ShareFriendView extends ui.activity.view.shareFriend.ShareFriendViewUI
var ShareFriendView=(function(_super){
	function ShareFriendView(){
		ShareFriendView.__super.call(this);
		this.addEvent();
		this.initView();
	}

	__class(ShareFriendView,'modules.activity.view.ShareFriendView',_super);
	var __proto=ShareFriendView.prototype;
	__proto.addEvent=function(){
		var self=this;
		self.btnShare.on("click",self,self.onShareHandler);
		self.btnGet.on("click",self,self.onGetHandler);
		EventMgr.ins.on("UPDATE_SHARE_RESPONSE",self,self.updateInfo);
	}

	__proto.onShareHandler=function(){
		EventMgr.ins.event("SHARE",[ShareConst.SHARE_LOTTERY]);
	}

	__proto.onGetHandler=function(){
		SocketManager.Instance.out.sendShareRewad(ShareConst.SHARE_LOTTERY,0);
		this.btnGet.visible=false;
		this.btnGet.disabled=true;
		this.isGet.visible=true;
		RedDotMgr.ins.updateRedDotStatus("SHARE_FRIEND",false);
	}

	__proto.initView=function(){
		var self=this;
		self.list.renderHandler=Handler.create(self,self.renderHandler,null,false);
		var readList=ConfigModel.getConfigData(1134).ConfigValue.split(",");
		var len=readList.length;
		var listArr=[];
		for(var i=0;i<len;i+=1){
			var arr=readList[i].split("|");
			listArr.push({"itemId":arr[0],"count":arr[1]});
		}
		self.list.array=listArr;
		this.updateInfo();
	}

	__proto.updateInfo=function(){
		var self=this;
		var vo=this.getShareInfo();
		if(vo){
			var reardList=vo.param.split(",");
			console.log("shareUserInfo:"+reardList);
			if(reardList.length>0){
				if(vo.count>0&&parseInt(reardList[0])!=1){
					self.btnGet.visible=true;
					self.btnGet.disabled=false;
					RedDotMgr.ins.updateRedDotStatus("SHARE_FRIEND",true);
					}else if(parseInt(reardList[0])==0){
					self.btnGet.disabled=true;
					RedDotMgr.ins.updateRedDotStatus("SHARE_FRIEND",false);
					}else if(parseInt(reardList[0])==1){
					self.btnGet.visible=false;
					self.isGet.visible=true;
					RedDotMgr.ins.updateRedDotStatus("SHARE_FRIEND",false);
				}
				EventMgr.ins.event("ACTIVITY_REDDOT_UPDATE","SHARE_FRIEND");
			}
		}
	}

	__proto.renderHandler=function(item,index){
		var self=this;
		var obj=self.list.array[index];
		var vo=ItemModel.getItemConfigData(obj.itemId);
		item.itemIcon.skin="assets/textrue/itemicon/"+vo.Icon+".png";
		item.countTxt.text=String(obj.count);
	}

	__proto.getShareInfo=function(){
		return ShareMgr.ins.checkShareInfo(ShareConst.SHARE_LOTTERY);
	}

	__proto.removeEvent=function(){
		var self=this;
		self.btnShare.off("click",self,self.onShareHandler);
		self.btnGet.off("click",self,self.onGetHandler);
		EventMgr.ins.off("UPDATE_SHARE_RESPONSE",self,self.updateInfo);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return ShareFriendView;
})(ShareFriendViewUI)


//class modules.activity.view.ShareInviteView extends ui.activity.view.shareInvite.ShareInviteViewUI
var ShareInviteView=(function(_super){
	function ShareInviteView(){
		this._dataArr=[];
		this._nextMax=0;
		this._canGetCount=0;
		ShareInviteView.__super.call(this);
		this.addEvent();
		this.initView();
	}

	__class(ShareInviteView,'modules.activity.view.ShareInviteView',_super);
	var __proto=ShareInviteView.prototype;
	__proto.onShareHandler=function(){
		EventMgr.ins.event("SHARE",[ShareConst.SHARE_LOTTERY]);
	}

	__proto.initView=function(){
		var self=this;
		var arr=ConfigModel.getConfigData(1140).ConfigValue.split(",");
		var len=arr.length;
		var vo=this.getShareInfo();
		var currentCount=ActivityInfoMgr.ins.inviteFrindCount;
		var minCount=99;
		var countArr=[];
		self._dataArr=[];
		for(var i=0;i<len;i+=1){
			var brr=arr[i].split("|");
			var reardList=vo.param.split(",");
			self._dataArr.push({"playerCount":brr[0],"itemId":brr[1],"count":brr[2],"pos":i,"state":parseInt(reardList[i]),"msg":LanguageMgr.Ins.GetLan(14300132,brr[0])});
			if(currentCount<parseInt(brr[0])&&minCount>parseInt(brr[0])){
				minCount=parseInt(brr[0]);
			}
			countArr.push(parseInt(brr[0]));
		}
		self.list.dataSource=self._dataArr;
		this.setCanGet(self._dataArr);
		self.list.refresh();
		self.msgTxt.text=LanguageMgr.Ins.GetLan(14300133,currentCount,minCount);
		this.changeBarValue(countArr);
		RedDotMgr.ins.updateRedDotStatus("SHARE",this.setCanGet(self._dataArr));
		EventMgr.ins.event("ACTIVITY_REDDOT_UPDATE","SHARE");
	}

	__proto.setCanGet=function(data){
		for(var i=0;i<data.length;i++){
			if(!data[i].state){
				if(ActivityInfoMgr.ins.inviteFrindCount > parseInt(data[i].playerCount))
					this._canGetCount++;
			}
		}
		if(this._canGetCount)return true;
		else return false;
	}

	__proto.changeBarValue=function(value){
		var self=this;
		self.barMsg.value=1;
		var currentCount=ActivityInfoMgr.ins.inviteFrindCount;
		var posList=[0.05,0.12,0.155,0.33,0.365,0.535,0.57,0.745,0.78,0.95,1];
		var arr=value;
		var len=arr.length;
		var count=0;
		for(var i=0;i<len;i+=1){
			count=arr[i];
			if(currentCount<count){
				switch(i){
					case 0:
						if(currentCount==0){
							self.barMsg.value=0;
							}else if(currentCount==1){
							self.barMsg.value=posList[0];
						}
						else{
							self.barMsg.value=posList[0]+(posList[1]-posList[0])/(count-2)*(currentCount-1);
						}
						break ;
					case 1:
						if(currentCount==arr[0]){
							self.barMsg.value=posList[2];
						}
						else{
							self.barMsg.value=posList[2]+(posList[3]-posList[2])/(count-2)*(currentCount-1);
						}
						break ;
					case 2:
						if(currentCount==arr[1]){
							self.barMsg.value=posList[4];
						}
						else{
							self.barMsg.value=posList[4]+(posList[5]-posList[4])/(count-2)*(currentCount-1);
						}
						break ;
					case 3:
						if(currentCount==arr[2]){
							self.barMsg.value=posList[6];
						}
						else{
							self.barMsg.value=posList[6]+(posList[7]-posList[6])/(count-2)*(currentCount-1);
						}
						break ;
					case 4:
						if(currentCount==arr[3]){
							self.barMsg.value=posList[8];
						}
						else{
							self.barMsg.value=posList[8]+(posList[9]-posList[8])/(count-2)*(currentCount-1);
						}
						break ;
					}
				break ;
			}
		}
	}

	__proto.getShareInfo=function(){
		return ShareMgr.ins.checkShareInfo(ShareConst.SHARE_INVITE);
	}

	__proto.addEvent=function(){
		var self=this;
		self.list.renderHandler=Handler.create(self,self.renderHander,null,false);
		self.btnShare.on("click",self,self.onShareClick);
		EventMgr.ins.on("UPDATE_SHARE_RESPONSE",self,self.initView);
	}

	__proto.renderHander=function(item,index){
		var self=this;
		item.setData(self.list.array[index]);
	}

	__proto.onShareClick=function(){
		EventMgr.ins.event("SHARE",[ShareConst.SHARE_INVITE]);
	}

	//wait
	__proto.onCloseClick=function(){
		UIMgr.ins.closeView("ShareInviteWindow");
	}

	//wait
	__proto.onTipsClick=function(){
		UIMgr.ins.openView("HelpDescriptionView",Handler.create(this,function(view){
			view.initHelp(8);
			view=null;
		}));
	}

	__proto.removeEvent=function(){
		var self=this;
		self.btnShare.off("click",self,self.onShareClick);
		EventMgr.ins.off("UPDATE_SHARE_RESPONSE",self,self.initView);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return ShareInviteView;
})(ShareInviteViewUI)


/**
*...场景基类
*@author huyouwei
*/
//class modules.scene.BaseScene extends laya.ui.BaseView
var BaseScene=(function(_super){
	function BaseScene(sceneType,sceneData,needLoading){
		this.loading=null;
		this.loadOver=false;
		this.progressNum=0;
		this._bounds=null;
		this._isShowScene=false;
		this.count=0;
		this.isFirst=false;
		this._sceneType=null;
		this._sceneData=null;
		this._needLoading=false;
		//预加载资源
		this._loadedRes=null;
		this._preProgressHandler=null;
		this._preProgressHandler2=null;
		this.staticBlurSprite=null;
		this.staticBlurTexture=null;
		this.staticBlurHTMLCanvas=null;
		this._isStaticBlur=false;
		this.blurEnabled=false;
		this.isDestroyCreate=false;
		//是否释放重新创建
		this.isDestroyCreateOnce=false;
		BaseScene.__super.call(this);
		this.status=BaseScene.LOAD;
		(needLoading===void 0)&& (needLoading=true);
		this._sceneType=sceneType;
		this._sceneData=sceneData;
		this._needLoading=needLoading;
		this._bounds=this.getBounds();
		this.on("mousedown",this,this.onTouchBegin);
	}

	__class(BaseScene,'modules.scene.BaseScene',_super);
	var __proto=BaseScene.prototype;
	__proto.update=function(){
		if(this.status==BaseScene.UPDATE){
			this.updateScene();
			}else if(this.status==BaseScene.LOAD){
			this.preload();
			this.status=BaseScene.WAITLOAD;
			}else if(this.status==BaseScene.INIT){
			this.init();
			this.status=BaseScene.ENTER;
			}else if(this.status==BaseScene.ENTER){
			this.enter();
			this.status=BaseScene.UPDATE;
			}else if(this.status==BaseScene.WAITLOAD){
			if(this.isLoadOver()){
				this.status=BaseScene.INIT;
			}
		}
	}

	__proto.updateScene=function(){}
	__proto.isLoadOver=function(){
		return this.loadOver;
	}

	//初始化场景
	__proto.init=function(){
		Laya.timer.clear(this,this.onWebNetwork);
		this.count=0;
		this.isFirst=false;
	}

	//进入场景
	__proto.enter=function(){
		if(this.loading){
			this.loading.destroy(true);
			this.loading=null;
			Laya.loader.clearRes("assets/atlas/login.atlas");
		}
	}

	//场景卸载
	__proto.exit=function(){
		this.off("mousedown",this,this.onTouchBegin);
		if(this._loadedRes && this._loadedRes.length > 0)this.clearResByArray(this._loadedRes,true);
	}

	__proto.clearResByArray=function(res,forceDispose){
		(forceDispose===void 0)&& (forceDispose=false);
		var obj;
		for(var $each_obj in res){
			obj=res[$each_obj];
			Laya.loader.clearRes(obj.url,forceDispose);
			console.log("释放资源:"+obj.url);
		}
	}

	__proto.preload=function(){
		if(this.needLoading){
			Laya.loader.load("assets/atlas/login.atlas",Handler.create(this,this.onLoadingResLoaded));
		};
		var res=this.preloadRes;
		if(res && res.length > 0){
			this._loadedRes=res;
			this._preProgressHandler=new Handler(this,this.onProgress,null,false);
			console.log("----------------BaseScene.preload",res);
			Laya.loader.load(res,new Handler(this,this.onLoaded,null,true),this._preProgressHandler);
		}
		else{
			Laya.timer.clear(this,this.onWebNetwork);
			this.count=0;
			this.isFirst=false;
			this.loadOver=true;
			this.progressNum=100;
		}
	}

	__proto.onLoadingResLoaded=function(){
		this.loading=new LoadingView();
		this.loading.anchorX=0.5;
		this.loading.anchorY=0.5;
		this.loading.x=ResizeMgr.bestFitWidth/2;
		this.loading.y=ResizeMgr.bestFitHeight/2-(this.loading.height/2-ResizeMgr.bestFitHeight/2);
		Laya.stage.addChild(this.loading);
		this.loading.txtVersion.text=UrlParam.maxVersion;
	}

	__proto.onLoaded=function(){
		var _preLocalRes=this.preLocalRes;
		if(_preLocalRes==null || _preLocalRes.length <=0){
			Laya.timer.clear(this,this.onWebNetwork);
			ConnectMgr.ins.cleanWait();
			this.count=0;
			this.isFirst=false;
			this.loadOver=true;
		}
		else{
			this._preProgressHandler2=new Handler(this,this.onProgress,null,false);
			console.log("----------------BaseScene.onLoaded",_preLocalRes);
			Laya.loader.load(_preLocalRes,new Handler(this,this.onLocalLoaded,null,true),this._preProgressHandler2,null,1,false);
		}
	}

	__proto.onLocalLoaded=function(){
		this.loadOver=true;
	}

	__proto.onProgress=function(value){
		console.log("--------------BaseScene.onProgress",value);
		if(!this.isFirst && LoginControl.instance.isNewUser!=1){
			this.isFirst=true;
			Laya.timer.loop(1000,this,this.onWebNetwork);
		}
		this.progressNum=value*100;
		this.refreshLoadProgress(value*100);
	}

	__proto.onWebNetwork=function(){
		this.count++;
		if(this.count >=15){
			this.isFirst=false;
			this.count=0;
			Laya.timer.clear(this,this.onWebNetwork);
			ConnectMgr.ins.createWait();
		}
	}

	// SocketManager.Instance.closeSocket();
	__proto.refreshLoadProgress=function(progress){
		if(this.loading){
			this.loading.progress.value=progress/100;
		}
	}

	// loading.text.text=StringUtils.formate("{0}/100",progress.toFixed(0));
	__proto.touchBegin=function(e){}
	//trace("BaseScene begin");
	__proto.touchMove=function(e){}
	//trace("BaseScene move");
	__proto.touchEnd=function(e){}
	//trace("BaseScene end");
	__proto.onTouchBegin=function(e){
		this.touchBegin(e);
		this.on("mousemove",this,this.onTouchMove);
		this.on("mouseup",this,this.onTouchEnd);
	}

	__proto.onTouchMove=function(e){
		this.touchMove(e);
	}

	__proto.onTouchEnd=function(e){
		this.touchEnd(e);
		this.off("mousemove",this,this.onTouchMove);
		this.off("mouseup",this,this.onTouchEnd);
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.y=_bestFitHeight-(this.height==0 ? 900 :this.height);
		if(this.loading){
			this.loading.x=_bestFitWidth/2;
			this.loading.y=_bestFitHeight/2-(this.loading.height/2-_bestFitHeight/2);
		}
	}

	// }
	__proto.showScene=function(){
		this._isShowScene=true;
	}

	__proto.hideScene=function(){
		this._isShowScene=false;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this._preProgressHandler){
			this._preProgressHandler.clear();
			this._preProgressHandler=null;
		}
		if(this._preProgressHandler2){
			this._preProgressHandler2.clear();
			this._preProgressHandler2=null;
		}
		_super.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'sceneData',function(){return this._sceneData;});
	/**场景类型 ScenesType.as **/
	__getset(0,__proto,'sceneType',function(){return this._sceneType;});
	__getset(0,__proto,'x',_super.prototype._$get_x,function(value){
		Laya.superSet(BaseView,this,'x',value);
		if(this.staticBlurSprite)this.staticBlurSprite.x=value;
	});

	__getset(0,__proto,'needLoading',function(){return this._needLoading;});
	__getset(0,__proto,'preLocalRes',function(){
		return null;
	});

	__getset(0,__proto,'preloadRes',function(){
		return null;
	});

	__getset(0,__proto,'minX',function(){
		if(this._bounds)
			return-this._bounds.width *this.scaleX;
		return 0;
	});

	__getset(0,__proto,'minY',function(){
		if(this._bounds)
			return-this._bounds.height *this.scaleY;
		return 0;
	});

	//重新创建一次
	__getset(0,__proto,'isStaticBlur',function(){
		return this._isStaticBlur;
		},function(value){
		var _$this=this;
		if(this._isStaticBlur !=value){
			if(value){
				this._isStaticBlur=true;
				if(this.blurEnabled){
					if(this.staticBlurSprite){
						this.visible=false;
						if(this.parent)this.parent.addChildAt(this.staticBlurSprite,this.parent.numChildren);
					}
					else{
						ScreenshotUtil.blurCaptureToSprite(this,Handler.create(this,function(blurSprite,texture,htmlC){
							if(_$this._isStaticBlur){
								this.visible=false;
								_$this.staticBlurSprite=blurSprite;
								_$this.staticBlurTexture=texture;
								_$this.staticBlurHTMLCanvas=htmlC;
								if(this.parent)this.parent.addChildAt(_$this.staticBlurSprite,this.parent.numChildren);
							}
						}));
					}
				}
				else{
					this.staticCache=true;
				}
			}
			else{
				this._isStaticBlur=false;
				if(this.blurEnabled){
					this.visible=true;
					if(this.staticBlurSprite){
						if(this.isDestroyCreate || this.isDestroyCreateOnce){
							this.staticBlurSprite.destroy(true);
							this.staticBlurSprite=null;
							this.staticBlurTexture.destroy(true);
							this.staticBlurTexture=null;
							this.isDestroyCreateOnce=false;
						}
						else{
							this.staticBlurSprite.removeSelf();
						}
					}
				}
				else{
					this.staticCache=false;
				}
			}
		}
	});

	__getset(0,__proto,'y',_super.prototype._$get_y,function(value){
		Laya.superSet(BaseView,this,'y',value);
		if(this.staticBlurSprite)this.staticBlurSprite.y=value;
	});

	BaseScene.INIT=1;
	BaseScene.LOAD=2;
	BaseScene.WAITLOAD=3;
	BaseScene.ENTER=4;
	BaseScene.UPDATE=5;
	return BaseScene;
})(BaseView)


//class ui.menu.battle.BattleMenuUI extends laya.ui.BaseView
var BattleMenuUI=(function(_super){
	function BattleMenuUI(){
		this.move=null;
		this.toright=null;
		this.toleft=null;
		this.cardbox=null;
		this.nousecard=null;
		this.shuibg=null;
		this.feishui=null;
		this.cardlist=null;
		this.chat=null;
		this.battletimenode=null;
		this.battletime=null;
		this.fenliandtime=null;
		this.time=null;
		this.fengli=null;
		this.fenglinum=null;
		this.skillbox=null;
		this.feiji=null;
		this.feijiIcon=null;
		this.mpTextPlane=null;
		this.friendskil=null;
		this.friendskillicon=null;
		this.firendskillname=null;
		this.visibleBtn=null;
		this.lockBox=null;
		this.btnlock=null;
		this.btnUnlock=null;
		BattleMenuUI.__super.call(this);
		var temp=BattleMenuUI.uiView;
		BattleMenuUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(BattleMenuUI.uiView);
	}

	__class(BattleMenuUI,'ui.menu.battle.BattleMenuUI',_super);
	var __proto=BattleMenuUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	BattleMenuUI.uiView="eJy9V91u2zYUfpWBu3VsUX+2fDcH2FZgGwasWxsMhUFblMSEFl2JShwHeYoB682wm+0JdtmifZqhxd5ipETq35GMAQuCxKLI851zvu8cHj8Afr/HYAlWKMU/EXwHJmCfsH0Klg/gjvg8AksILXcCIkzCiIOlaxuPE7CNCPXB8ucHff7ZDoW4fvgeLB0LTsABLL0JuEWJ2LRjt3JPekNi8bRBnFM82+E4m2VkTVG6Dg4+me7jUGyK0Q7rI32A360yzlncgrS9HNE05hqTsyR3/BRsgOLwsN4QxJrA1TmKNpiKFfD4OBmAd4qAHbNCpzg4AzzdIopfguUFrDmiTNT8eFXzZMUObS8Mq3DDtrUfW5T4m3yjslot7FiW4udRwrJQkM2TDI/lV9HrVMmOpS1p+mTEPsF71OK4OtXIcB+kaReQUpEKgIocZmLn7DIiMU7xrIV4IOieHCOxS6GieBux5EoIW38WCTemTh28D9te5Ni2WYabRhnZhCdjla99IugNm/GqY31p/ibnuIXr5LhWKaoAE2lCbOP4IEoSQGMGDekGT9gNvmSUyW2fI8swgqBcFyZKFyoTAYv5D+SIZdEIh/TZYBFYgSXeb5j0UMqiljmRrXbuXg1kz8iDEH9VV7E9oy5OSlLeVKda0X0HmkYTpL8CoVMAWU5pPULdApQl95rEoaRJf26SpI71Fn+35IqCs+deGR+cl/EVmJwIXTAfVxCddR2r44wtwQuzldYc9pQccXyfCdYjXHbZVDD/VUJ8KSJ7Ahf577zpSi3wL4VYLinZt6uyUCisKqMKDcglmsnTXocGocEjkb4d/XWc7bRTEcZS1gY0Ldtx5wtPd8Zcem7VJvOHp1Q5rp24xuhuIpMYqiy2+8lAVXRVMy+0antuVdoxJSj2VebKaq2t9knjBC/zghdXqPOWpGRDxd4A0RSX11ODIOgM8GM+RZC+rgqT40jppgQWgnZhLSMhJY1cyOexzbNTIK7ZtCzCKjJAQhn4jvg+xWVrhdNFp63a0IYeqrVVs+VcYVJXkGW0m6x8Epu/SAiS7lY9N/8Z3XPFk3J6i2OOk3wueFpwtlXcYWVzFHRT2hgMypXxQ5flTtUVVdMxuSanhwDErrP2pKePVB13ZA9caIZr0M+2uZc98PnrHLkuxD7pLKqb5I4l/osE7TUpWksl6G7/XOjle9E9Ku2Af/74/eNvb7v3solM13SbAqoUIqtQKeRbsk1YygL+2RX6GpNerZypj6H788KFbSoTgmNfymIkn3tyy/hVcSvkn18WjVbzXLd3NtmwIAXaXfcoOUm68PE1P9KW4FonB/WgMuON0ENAEm07Rys18enDn3+//+XjX+8+/fpmnDK0tx2L/5dkhkXjqAGg9k1A3TcrXmNk8G5Nr/l6k/GWjuC80pGMVCWkgXC2jsyia8iJRZHnnBycroW3ccgzOSiWKi8HJOO/TADQK/yApXIo296szmq/KvnyXy0UNYfxWBp8cv4Vl7wIS15ciHExZrTL2J42Clk+lemu52H46/GApz8O+9ry8YQfUrP/AmhXXFk=";
	return BattleMenuUI;
})(BaseView)


//class ui.menu.battle.ReviveViewUI extends laya.ui.BaseView
var ReviveViewUI=(function(_super){
	function ReviveViewUI(){
		this.mpImgBg=null;
		this.mpBtnClose=null;
		this.mpBtnGold=null;
		this.mpIconGold=null;
		this.mpNumGold=null;
		this.mpBtnShare=null;
		this.mpImgTime=null;
		this.mpNumTime=null;
		this.mpIconOver1=null;
		this.mpIconOver2=null;
		this.mpIconOver3=null;
		this.btnShowAD=null;
		this.txtReward=null;
		ReviveViewUI.__super.call(this);
		var temp=ReviveViewUI.uiView;
		ReviveViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(ReviveViewUI.uiView);
	}

	__class(ReviveViewUI,'ui.menu.battle.ReviveViewUI',_super);
	var __proto=ReviveViewUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	ReviveViewUI.uiView="eJydVEtu2zAQvQu7VWxTP9vaxW4SBChSoCmKFEUQ0AotsZFIQaJiO4FOUOQW3XXZ7nqetNfoUH+5cuxWBiyREue9efNmHpHcRBQ5aEYS+oHRFdJQFIsoQc4jWrFb6SMHY8PWkE+Z50vk2OYo05Drs+AWOZ8eq/MX5yHxaPv0Bk5aUw2tkaMbcL8nMXwXRuehN/Pgw+SOcdgICPdSODqc+4zThA4XRMqADkPK0+EyTpkcpuxmmfqpGERcHeQkpK1IvWxmqZSCb9PBZk7HxpZWJTfGDbOZ5PNAJLQh54owVPCLPNwNEOULVtKI2L2QH5FjWOXzFTzbLXqtcLV40yzT9rA0dKsQTe9SOxOQY82MRFFAzwCq0cgT3PPh7n72fMV4W64qRp9gfdWbFDTMVulcsYeGB29L3MQlAQV9RgOrXFyVi6aAVbw+Sm/IggZblKyygC07XaRhSUnSNUisj+BqYTTvl4LLS/YA2yak5opAqAivlvkF7wl3fREDY1w9K8JZdg2//UUrmJmm3inapU9ielDVNptkR9GKGAc3nW7nTCbmv7YY5WsGX5YMajXykjV6DKyso0cfBbuwjmlbnbZ/z8KXtUh89uCLmkK70fOzh9rkyCjwRx2blPCFTdQISGQs7ui8MoLumtQlqNqHoiqudAVZH+EtS5WxGksZPZbaLxSelE02NuuJZNvdhnt7T2OMtrqm2qwHi50dCGXsgdL7oPT/gjLH9otQRh+UsRNqV+fhYibYRg2GJ0aFtlD9I1bHr3uGepDSalZBDc9iBsZCIw1so/5aI16fDlpDforVquJoTQ+dp6UrcYeI4PkQuOtanoEYqJ17n8txEU81W5X3qM5bruU7uiJxMxjR729fnp++P399+vXjJ/rL/fhkPJmdtNyvNzkauG11NerUCk4dx4woWrXzT+enpyMlHQmYl88eupSomKHX2R9246uo";
	return ReviveViewUI;
})(BaseView)


//class ui.room.NewAppleRoomUI extends laya.ui.BaseView
var NewAppleRoomUI=(function(_super){
	function NewAppleRoomUI(){
		this.mpBoxAll=null;
		this.mpBoxBg=null;
		this.mpBoxLeft=null;
		this.mpListView=null;
		this.mpBoxRank=null;
		this.mpImgRank=null;
		this.mpBtnRank=null;
		this.mpBoxRight=null;
		this.mpImgLight=null;
		this.mpImgNpc=null;
		this.mpTextRewardDesc=null;
		this.mpImgProBg=null;
		this.mpImgPro=null;
		this.mpTextPro=null;
		this.mpIconReward=null;
		this.mpBtnAdd=null;
		this.mpBtnStart=null;
		this.mpImgStart=null;
		this.mpBtnInvite=null;
		this.mpIconPlatform=null;
		this.mpImgText=null;
		this.mpImgTop=null;
		this.mpTextTop=null;
		this.mpIconApple=null;
		this.mpNumTop=null;
		this.mpBgTitle=null;
		this.mpBtnBack=null;
		this.mpTextTitle=null;
		this.mpBtnHelp=null;
		this.mpTextHelp=null;
		NewAppleRoomUI.__super.call(this);
		var temp=NewAppleRoomUI.uiView;
		NewAppleRoomUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(NewAppleRoomUI.uiView);
	}

	__class(NewAppleRoomUI,'ui.room.NewAppleRoomUI',_super);
	var __proto=NewAppleRoomUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.battle_apple.view.room.AppleRoomItem",AppleRoomItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	NewAppleRoomUI.uiView="eJydV11r40YU/S/TV8XWt2W/xVvYBkJYktDtUkoYWWN5EkmjHY1sp2GhhbK77MNCSkuXdil9KfQL+tBSCvt3Gqf7LzrSyLakjCxtQwi2Is0999xzz726AuwyRmAExjBBH2K0AAqIKYkTMLoCC+yxGRhpmmErYIawP2NgZJvqEwVMZjjwwOjjq83zZFl+dA4pvxjG/PJ+EIB3e2LsSx84CKGPJPgs21FAcoEjfg+M4wDdhyHqU0LC/pSmmPVdv3ce+6CawxOl+eBLMFIVsFynvo4zUDvGSSYwQB+B0Z5WiakAGE1mhD7Kjxef+V0cyyclNDVeOBZHgFGVSsYlwg7RlJXSs2xpiWRp7pnSs3dlmeKzACMXQ+JBD/fiKM8Yf4ruU8zjAUvRLMVSdL1MuFoh/BAnTM53GYe1zTF7oFDn/GRCSRCMIT0RICckDEnUnyf59QIPRTGCjBNtrD9zokvVMHUpRftZwsc81wOGQilC/pemEcNhdntIvDRASc+FjAXoLKerN+c4exlfvfppEcyfoijyEAXVqsuKYxoipu6YG1p0p0WEvDxZbRieoshHSwyjgpJN6m3Sl4c1/2dYWS9UINzVu2kO5DLgtx7D6KKUDG/QrlK/K/TSyQehX5zckmQM8QxGvkz4pqOYlmLaimbXEJayPRqnjJGohs1ycnCWVU6WRZ0hXXBIbsoKTFuX6Vlln+lZmeZ2e41gKTeBpgrkebUOBFkJNMMQbW5UmD8sTmzJ0095lnmKnd3NFrxqg0El4FE8aQ9HFyJWhbAjacNYIi1d1bdhTtGSHaMFpN77KMnCMX6B/+efNy9W3/z49tn1zd+fr7766/a7FzIoAU815ZH692Y4QkmBjaM6p+ducumuSz0lETvhEuRGxys3IQHJor83zX8682TZOf69wXbYGZZaoewBJWO/nbRzj7n+3dbgE0HXFM0UU6FJn13h8qOqrazbeh1sJ6hnLqQSsNoarLYLbHmeQRcFda0PhfRsu6oJga0Qw8Dqa6qahWeUXKB76/pZ7lAvXecZ7iq16TmtXb/b8nUh4L3hsMTjhERCwC1c+iTwilZp9TlBim7ZFZ/b99piZPXCcAbJ1uXywZKn62ynTP4lyMsxAvXebbBegcm0StNOVSv4ThikHQzqIrlcnpUAbiWl64qdq8oalJzTGcoUL7cYs9iPql3ZCKzRPzKMncZEG2+2ul6RhxvetEG1rgfRHDO0xZetarmTU4TW+0GM5yRb1PRhhiL/xkE4TmmdldIklbGwe0OtqvhBANmU0LC9gguElzjqwE/LRFhLqlKsrPvfqVaP+Rb1GKdc9ZckvQOq+Q1CavFmfcHWag5/SuJ2gmYoiGUGzw2EG6bmKLpZFrjU0mVuqQsxDThjC0K9hxTGYMRoirZw9ZqRCrxzGGA/QxxizwvQ1lpXz69vv/1i9fq3m+ufVq8/e/vrq5vnT0vYDK1sqRx5yVJt5HqTzgqQ0W3YxQpdVWL+RtDB6qbMbVx0ZPSJaKa2jXaUhoKggg5117KA1CECYjds09GeVZu94hV50/T+KWZdUkyyLbphVRgqBteSqUrTl7uRoYu9dVDxnzGcdNifpzCapfjOBNshU81Ua1oski7IvvnyDf/N5PfDs9X3v1So1ytKm3r2YNpxy5Bnrm8mQ4YJJ9jlSEZTGCSowsUHvHPbuUAhxEHe5d34KIJr6rA5eEZQEb3g5/blz6s/vv739z9Xr16C5jYUS2wjOdpasf8BzakMTg==";
	return NewAppleRoomUI;
})(BaseView)


//class modules.battle.effect.UseSkillEffect extends ui.menu.battle.RoleUseSkillUI
var UseSkillEffect=(function(_super){
	function UseSkillEffect(iconRes,skillData){
		this.isDestroy=false;
		UseSkillEffect.__super.call(this);
		this.icon.skin="assets/textrue/skill/min/"+iconRes;
		this.level.text="Lv "+skillData.Level;
		var skillPerData=SkillModel.getSkillPerformanceBySkillId(skillData.Display);
		this.skillName.text=LanguageMgr.Ins.GetLan(skillPerData.NameDisplay);
		this.scale(0.55,0.55);
		this.anchorX=0.5;
		this.anchorY=0.5;
		this.alpha=0;
		Tween.to(this,{x:0,y:-150,alpha:1},3/30*1000,null,Handler.create(this,this.step1));
	}

	__class(UseSkillEffect,'modules.battle.effect.UseSkillEffect',_super);
	var __proto=UseSkillEffect.prototype;
	__proto.step1=function(){
		Tween.to(this,{},15/30 *1000,null,Handler.create(this,this.step2));
	}

	__proto.step2=function(){
		Tween.to(this,{x:0,y:-200,alpha:0},3/30*1000,null,Handler.create(this,this.destroyUseSkillEffect));
	}

	__proto.destroyUseSkillEffect=function(){
		Tween.clearAll(this);
		if(!this.isDestroy){
			this.isDestroy=true;
			Tween.clearAll(this);
			this.removeSelf();
			this.destroy(true);
		}
	}

	return UseSkillEffect;
})(RoleUseSkillUI)


//class ui.createRole.CreateRoleViewUI extends laya.ui.BaseView
var CreateRoleViewUI=(function(_super){
	function CreateRoleViewUI(){
		this.bottomCenterBox=null;
		this.btn_enter=null;
		this.txt_name=null;
		this.btn_boy=null;
		this.btn_girl=null;
		CreateRoleViewUI.__super.call(this);
		var temp=CreateRoleViewUI.uiView;
		CreateRoleViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(CreateRoleViewUI.uiView);
	}

	__class(CreateRoleViewUI,'ui.createRole.CreateRoleViewUI',_super);
	var __proto=CreateRoleViewUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	CreateRoleViewUI.uiView="eJyNUk1vgjAY/iuuuxKFIjq4DbMsXjxsyy7LYgp2UC0tKa3ijP99pSpjgJmQECh9Pt8egNznGAQgRAV+J3gHLJALnhcgOIAdWckUBI47sS2QYpKkEgS+bR8tEKeErkDwcbjg5xlKcBO8B4FGleb5h6jYEKYBscBI4hdO8Sh8Hq7zBDQ1nOPRqrlDXraYoedfuLdI6C0Rl5JnM8wkFtX2Wy06Tq8jRZZRAoc5S0DTyCJUWoa1ODzfMWY0F6yzQu+h9ibZ0hjTOIoiTPVaMyzsM7vouD27pIglSv8azVLCcIFHLdtabE2YUHuuSnJO8NnI8IZLOWe5ku0U7tSk8FznN4Q/vYSQpVwylFWOeusqUiXURmlzRtNwZ7mcccor+H1srnpdLz1VlQw4wwNV6JeK/K5RS3VUvjiTr+Rb24bw9KVxj4IgqjfGHWpESWKcndpuTq7TZlml8/rClASxGycPxxPTmevYzWFHfH+tJoYYXPBzRfVh+F9p7Ph9SgkR9KrUFnZ1PvX9AynfRCI=";
	return CreateRoleViewUI;
})(BaseView)


//class modules.battle.view.menu.ChatBriefBattleView extends ui.chat.ChatBriefBattleViewUI
var ChatBriefBattleView=(function(_super){
	function ChatBriefBattleView(){
		ChatBriefBattleView.__super.call(this);
		this.initView();
		this.addEvent();
		var msgs=ChatMgr.ins.getAllMsg();
		msgs=msgs.slice(0,3).reverse();
		var item;
		for (var i=0,n=msgs.length;i < n;i++){
			item=new ChatBriefListItem(272);
			item.dataSource=msgs[i];
			this.box.addChild(item);
		}
		this.box.refresh();
		while (this.box.height > 94){
			item=this.box.getChildAt(0);
			if (item){
				item.destroy();
			}
			else{
				break ;
			}
			this.box.refresh();
		}
		this.box.scrollRect=new Rectangle(0,0,274,90);
	}

	__class(ChatBriefBattleView,'modules.battle.view.menu.ChatBriefBattleView',_super);
	var __proto=ChatBriefBattleView.prototype;
	__proto.initView=function(){
		this.box["sortItem"]=this.sortItem;
	}

	__proto.addEvent=function(){
		ChatMgr.ins.on('event_channel_msg',this,this.onReviceMsg);
		this.on("click",this,this.onOpenFullView);
	}

	__proto.delEvent=function(){
		ChatMgr.ins.off('event_channel_msg',this,this.onReviceMsg);
		this.off("click",this,this.onOpenFullView);
	}

	__proto.onReviceMsg=function(msg,channel,removed){
		if (msg){
			if (channel=='guild' && msg.subType !=2)return;
			var item;
			if (msg){
				item=new ChatBriefListItem(272);
				item.dataSource=msg;
				this.box.addChild(item);
			}
			this.box.refresh();
			while (this.box.height > 94){
				item=this.box.getChildAt(0);
				if (item){
					item.destroy();
				}
				else{
					break ;
				}
				this.box.refresh();
			}
		}
	}

	__proto.onOpenFullView=function(){
		UIMgr.ins.openView("ChatFullView");
	}

	__proto.sortItem=function(items){
		if (items){
			items.sort(function(a,b){
				var aC=a.dataSource;
				var bC=b.dataSource;
				if (aC.createTime > bC.createTime){
					return 1;
				}
				else if (aC.createTime < bC.createTime){
					return-1;
				}
				else{
					return 0;
				}
			});
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		ChatMgr.ins.clearChannelMsg('battle');
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return ChatBriefBattleView;
})(ChatBriefBattleViewUI)


/**
*战斗内表情
*/
//class modules.battle.view.menu.Emoticons extends ui.menu.battle.EmoticonsUI
var Emoticons=(function(_super){
	function Emoticons(){
		this.emotionArr=["gaoxing","qifeng","jingkong","daku","jianxiao","laji"];
		this.emotionIdArr=[11,12,13,14,15,16];
		this._lastTime=0;
		this.Gap=3000;
		Emoticons.__super.call(this);
		this.init();
		this.visible=false;
	}

	__class(Emoticons,'modules.battle.view.menu.Emoticons',_super);
	var __proto=Emoticons.prototype;
	__proto.init=function(){
		this.list.renderHandler=Handler.create(this,this.onRender,null,false);
		this.list.selectHandler=Handler.create(this,this.onSelect,null,false);
		this.list.selectEnable=true;
		this.word1.clickHandler=Handler.create(this,this.onWord,[this.word1],false);
		this.word2.clickHandler=Handler.create(this,this.onWord,[this.word2],false);
		this.word3.clickHandler=Handler.create(this,this.onWord,[this.word3],false);
		this.word4.clickHandler=Handler.create(this,this.onWord,[this.word4],false);
		this.word5.clickHandler=Handler.create(this,this.onWord,[this.word5],false);
		this.word6.clickHandler=Handler.create(this,this.onWord,[this.word6],false);
		this.word1.label=LanguageMgr.Ins.GetLan("9070096");
		this.word2.label=LanguageMgr.Ins.GetLan("9070097");
		this.word3.label=LanguageMgr.Ins.GetLan("9070098");
		this.word4.label=LanguageMgr.Ins.GetLan("9070099");
		this.word5.label=LanguageMgr.Ins.GetLan("9070100");
		this.word6.label=LanguageMgr.Ins.GetLan("9070101");
		this.list.array=this.emotionArr;
	}

	__proto.onRender=function(item,index){
		if(this.list.length > index){
			(item.getChildByName("icon")).skin="battle/biaoqing/"+this.list.array[index]+".png";
		}
	}

	__proto.onWord=function(btn){
		if (TimeManager.Instance.NowTime()-this._lastTime < this.Gap){
			TipsManager.Instance().showLanTips(9002193);
			return;
		}
		this._lastTime=TimeManager.Instance.NowTime();
		this.hide();
		var battleScene=SceneMgr.ins.curScene;
		SocketManager.Instance.out.sendBattleChat(battleScene.menuView.role.livingId,btn.label);
	}

	__proto.show=function(){
		if(this.visible)return;
		this.visible=true;
		this.stage.on("click",this,this.onClickStage);
	}

	__proto.hide=function(){
		if(!this.visible)return;
		this.list.selectedIndex=-1;
		this.visible=false;
		this.stage.off("click",this,this.onClickStage);
		(this.parent).hideUnlockBtn();
	}

	__proto.onSelect=function(index){
		if(index==-1)return;
		this.list.selectedIndex=-1;
		if (TimeManager.Instance.NowTime()-this._lastTime < this.Gap){
			TipsManager.Instance().showLanTips(9002193);
			return;
		}
		this._lastTime=TimeManager.Instance.NowTime();
		this.hide();
		var battleScene=SceneMgr.ins.curScene;
		SocketManager.Instance.out.sendBattleChatExpression(battleScene.menuView.role.livingId,this.emotionIdArr[index]);
	}

	__proto.onClickStage=function(evt){
		if(!this.contains(evt.target)){
			this.hide();
			evt.stopPropagation();
		}
	}

	__proto.destroy=function(bool){
		(bool===void 0)&& (bool=true);
		if(this.list.renderHandler){
			this.list.renderHandler.recover();
			this.list.renderHandler=null;
		}
		if(this.list.selectHandler){
			this.list.selectHandler.recover();
			this.list.selectHandler=null;
		}
		this.stage.off("click",this,this.onClickStage);
		this.emotionArr.length=0;
		this.emotionIdArr.length=0;
		this.emotionArr=null;
		this.emotionIdArr=null;
		laya.ui.View.prototype.destroy.call(this,bool);
	}

	return Emoticons;
})(EmoticonsUI)


//class modules.battle.view.menu.GetLostScore extends ui.menu.battle.GetLostScoreUI
var GetLostScore=(function(_super){
	function GetLostScore(score){
		this.callback=null;
		GetLostScore.__super.call(this);
		if(score > 0){
			this.showGet(score);
			}else{
			this.showLost(score *-1);
		}
		this.alpha=0;
	}

	__class(GetLostScore,'modules.battle.view.menu.GetLostScore',_super);
	var __proto=GetLostScore.prototype;
	__proto.showGet=function(score){
		this.bg.skin="battle/menu/ld/ui_huodejifendi.png";
		this.title.skin="language/"+LanguageMgr.Ins.country+"/battle/menu/ld/ui_huodejifen.png";
		this.score.text=""+score;
	}

	__proto.showLost=function(score){
		this.bg.skin="battle/menu/ld/ui_shiqujifengdi.png";
		this.title.skin="language/"+LanguageMgr.Ins.country+"/battle/menu/ld/ui_shiqujifeng.png";
		this.score.text=""+score;
	}

	__proto.show=function(posx,posy,callback){
		this.alpha=0;
		this.x=posx+364;
		this.y=posy;
		this.callback=callback;
		Tween.to(this,{alpha:1,x:posx,y:posy},5/30 *1000,null,Handler.create(this,this.step1));
	}

	__proto.step1=function(){
		Tween.to(this,{},30/30*1000,null,Handler.create(this,this.step2));
	}

	__proto.step2=function(){
		Tween.to(this,{alpha:0},5/30*1000,null,Handler.create(this,this.step3));
	}

	__proto.step3=function(){
		if(this.callback)
			this.callback.run();
		this.removeSelf();
		this.destroy(true);
	}

	return GetLostScore;
})(GetLostScoreUI)


//class modules.battle.view.menu.PlayerMsgTips extends ui.menu.battle.PlayerMsgTipsUI
var PlayerMsgTips=(function(_super){
	function PlayerMsgTips(){
		this.info=null;
		PlayerMsgTips.__super.call(this);
	}

	__class(PlayerMsgTips,'modules.battle.view.menu.PlayerMsgTips',_super);
	var __proto=PlayerMsgTips.prototype;
	__proto.setData=function($info){
		this.info=$info;
		this.initView();
	}

	__proto.initView=function(){
		this.btn_addFriend.clickHandler=Handler.create(this,this.onClickAddFriend,null,false);
	}

	__proto.onClickAddFriend=function(){
		if(this.info.friendState==2){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002222"));
		}
		else{
			FriendsMgr.ins.sendAddFriend(this.info.userId,this.info.nickName)
		}
		this.visible=false;
	}

	return PlayerMsgTips;
})(PlayerMsgTipsUI)


//class modules.battle.view.menu.PropertyItem extends ui.menu.battle.PropertyItemUI
var PropertyItem=(function(_super){
	function PropertyItem(iconUrl,propertyName,value){
		PropertyItem.__super.call(this);
		this.icon.skin="assets/textrue/common/icon/"+iconUrl+".png";
		this.skillname.text=propertyName;
		var str=""+value;
		if(value > 10000){
			str=LanguageMgr.Ins.GetLan(value+"");
		}
		this.number.text=str;
	}

	__class(PropertyItem,'modules.battle.view.menu.PropertyItem',_super);
	return PropertyItem;
})(PropertyItemUI)


//class modules.battle.view.menu.PveBoxReward extends ui.menu.battle.PveBoxRewardUI
var PveBoxReward=(function(_super){
	// private var _progress :Array;
	function PveBoxReward(){
		PveBoxReward.__super.call(this);
		this.initView();
		this.addEvent();
	}

	__class(PveBoxReward,'modules.battle.view.menu.PveBoxReward',_super);
	var __proto=PveBoxReward.prototype;
	__proto.initView=function(){
		var list=ConfigModel.getConfigData(1119).ConfigValue;
		var allTurn=ConfigModel.getConfigData(1120).ConfigValue;
		for (var i=0,n=list.length;i < n;i++){
			this["txtTurn"+i].text=LanguageMgr.Ins.GetLan(14300066,allTurn-list[i]);
		}
		this.txtGiveUp.text=LanguageMgr.Ins.GetLan(14300182);
	}

	__proto.addEvent=function(){
		EventMgr.ins.on("RECV_PVE_BUFF",this,this.onUpdateBuff);
		this.iconGoldBuff.on("click",this,this.onClickBuyBuff,[1121,1123]);
		this.iconGemBuff.on("click",this,this.onClickBuyBuff,[1122,1124]);
		this.btnGiveUp.on("click",this,this.onClickGiveUp);
	}

	__proto.delEvent=function(){
		EventMgr.ins.off("RECV_PVE_BUFF",this,this.onUpdateBuff);
		this.iconGoldBuff.off("click",this,this.onClickBuyBuff);
		this.iconGemBuff.off("click",this,this.onClickBuyBuff);
		this.btnGiveUp.off("click",this,this.onClickGiveUp);
	}

	__proto.setBuff=function(view,buffConfig,buyConfig){
		var buffId=int(ConfigModel.getConfigData(buffConfig).ConfigValue);
		var count=0;
		var buffInfo=Cache.ins.battle.pveBuffInfo;
		if (buffInfo && buffInfo[buffId]){
			count=buffInfo[buffId]["num"];
		};
		var config=ConfigModel.getConfigData(buyConfig);
		var buffVO=BufferModel.getBufferConfig(buffId);
		var value=int(buffVO.Effect.match(/(\d+)/)[0]);
		if (count >=config.ConfigValue.length){
			this[view+"Num"].text=count+"/"+config.ConfigValue.length;
			this[view+"Cost"].text="";
			this[view+"Name"].text=LanguageMgr.Ins.GetLan(buffVO.Name,(Math.min(count,config.ConfigValue.length)*value / 100)+"%");
		}
		else{
			this[view+"Num"].text=count+"/"+config.ConfigValue.length;
			var cost=config.ConfigValue[count];
			this[view+"Cost"].text=cost.count+"";
			this[view+"Name"].text=LanguageMgr.Ins.GetLan(buffVO.Name,(Math.max(count,1)*value / 100)+"%");
		}
	}

	__proto.setProgress=function(progress){
		var allTurn=ConfigModel.getConfigData(1120).ConfigValue;
		this.txtTurnLeft.text=LanguageMgr.Ins.GetLan(14300067,Math.min(progress,allTurn));
		for (var i=0;i < allTurn;i++){
			if (this.hasOwnProperty("turn"+i)){
				this["turn"+i].visible=progress > i;
			}
		};
		var list=ConfigModel.getConfigData(1119).ConfigValue;
		for (var j=0,n=list.length;j < n;j++){
			if (this.hasOwnProperty("iconReward"+j)){
				this["iconReward"+j].gray=!(progress >=(allTurn-list[j]))
			}
		}
	}

	// }
	__proto.onUpdateBuff=function(){
		this.setBuff("txtGoldBuff",1121,1123);
		this.setBuff("txtGemBuff",1122,1124);
	}

	__proto.onClickBuyBuff=function(buffConfig,buyConfig){
		var buffId=int(ConfigModel.getConfigData(buffConfig).ConfigValue);
		var count=0;
		var buffInfo=Cache.ins.battle.pveBuffInfo;
		if (buffInfo && buffInfo[buffId]){
			count=buffInfo[buffId]["num"];
		};
		var config=ConfigModel.getConfigData(buyConfig);
		if (count >=config.ConfigValue.length){
			TipsManager.Instance().showLanTips(14300055);
			return;
		};
		var cost=config.ConfigValue[count];
		if (PlayerInfoMgr.ins.getItemCount(cost.id)< cost.count){
			TipsManager.Instance().showLanTips(10001113);
			return;
		}
		PveMgr.ins.sendBuyBattleBuff(buffId);
	}

	__proto.onClickGiveUp=function(){
		TipsManager.Instance().showAlertDialog("",LanguageMgr.Ins.GetLan(14300165),"",LanguageMgr.Ins.GetLan("9002241"),Handler.create(this,function(){
			SocketManager.Instance.out.sendBattleOver();
		}));
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(PveBoxRewardUI,this,'dataSource',value);
		if (value){
			if (value.stage % 5==0){
				this.boxReward.visible=true;
				var pveVO=PveModel.getConfigById(value.stage);
				var itemVO;
				for (var i=0,n=pveVO.RewardTurn.length;i < n;i++){
					if (this.hasOwnProperty("iconReward"+i)){
						itemVO=ItemModel.getItemConfigData(pveVO.RewardTurn[i].id);
						this["iconReward"+i].skin="assets/textrue/itemicon/"+itemVO.Icon+".png";
					}
				}
			}
			else{
				this.boxReward.visible=false;
			}
			this.onUpdateBuff();
		}
	});

	return PveBoxReward;
})(PveBoxRewardUI)


//class modules.battle.view.menu.ScoreBar extends ui.menu.battle.ScoreBarUI
var ScoreBar=(function(_super){
	function ScoreBar(){
		this.isShow=false;
		ScoreBar.__super.call(this);
	}

	__class(ScoreBar,'modules.battle.view.menu.ScoreBar',_super);
	var __proto=ScoreBar.prototype;
	__proto.showLight=function(isLight){
		Laya.timer.clear(this,this.changeAlpha);
		if(isLight){
			this.mpImgLight.visible=true;
			Laya.timer.frameLoop(15,this,this.changeAlpha);
			}else{
			this.mpImgLight.visible=false;
		}
	}

	__proto.changeAlpha=function(){
		this.isShow=!this.isShow;
		if (this.isShow){
			Tween.to(this.mpImgLight,{alpha:0},500);
			}else{
			Tween.to(this.mpImgLight,{alpha:1},500);
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		Laya.timer.clear(this,this.changeAlpha);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return ScoreBar;
})(ScoreBarUI)


//class modules.battle.view.result.BattleOverDanView extends ui.menu.battle.over.BattleOverDanViewUI
var BattleOverDanView=(function(_super){
	function BattleOverDanView(){
		this._timeClose=10;
		this._selfPlayer=null;
		this._playOver=false;
		this.preExp=0;
		this.preExpMax=0;
		this.preScore=0;
		this.preConfig=null;
		this.curExp=0;
		this.curExpMax=0;
		this.curScore=0;
		this.curConfig=null;
		this.isMedalChange=false;
		this.starNode=null;
		this._trophy=0;
		this._trophyMin=0;
		this._trophyTotal=0;
		this.isLevelUp=0;
		this.isStarUp=0;
		BattleOverDanView.__super.call(this);
		this.initView();
		this.addEvent();
	}

	__class(BattleOverDanView,'modules.battle.view.result.BattleOverDanView',_super);
	var __proto=BattleOverDanView.prototype;
	Laya.imps(__proto,{"laya.ui.IResize":true})
	__proto.initView=function(){
		this.listNorL.visible=false;
		this.listNorR.visible=false;
		this.boxNext.visible=false;
		this.txtTime.text="("+this._timeClose+")";
		this.txtTitle4.text=LanguageMgr.Ins.GetLan("9070014");
		this.txtTitle0.text=LanguageMgr.Ins.GetLan(14300083);
		this.txtTitle1.text=LanguageMgr.Ins.GetLan(14300084);
		this.txtTitle2.text=LanguageMgr.Ins.GetLan(14300085);
		this.txtTitle3.text=LanguageMgr.Ins.GetLan(14300086);
		this.additionBar.setPrivilegeVO(PrivilegeModel.getItemDataByTypes(4+"_"+1));
		this.additionBar.visible=PlayerInfo.instance.isOpenMasterGrowing;
	}

	__proto.addEvent=function(){
		this.listNorL.renderHandler=Handler.create(this,this.onRenderNorPlayer,null,false);
		this.listNorR.renderHandler=Handler.create(this,this.onRenderNorPlayer,null,false);
		Laya.stage.on("click",this,this.onClickNext);
		Laya.timer.loop(1000,this,this.updateTime);
		ResizeMgr.addListener(this,true);
	}

	__proto.delEvent=function(){
		Laya.stage.off("click",this,this.onClickNext);
		Laya.timer.clear(this,this.updateTime);
		ResizeMgr.removeListener(this);
	}

	__proto.initSelf=function(){
		this.imgHead.skin=this._selfPlayer.headUrl;
		var preData=Cache.ins.battle.getPreData();
		this.preExp=preData.exp;
		this.curExp=this._selfPlayer.exp+preData.exp;
		this.preScore=preData.trophy;
		this.curScore=this._selfPlayer.trophy+preData.trophy;
		var preUpgradeVO=UpgradeModel.getConfigByLevel(preData.level,1);
		var nowUpgradeVO=preUpgradeVO;
		this.isLevelUp=0;
		if (this.curExp > preUpgradeVO.Exp){
			var nextUpgradeVO=UpgradeModel.getConfigByLevel(preData.level+1,1);
			if (nextUpgradeVO){
				this.isLevelUp=1;
				this.curExp-=preUpgradeVO.Exp;
				nowUpgradeVO=nextUpgradeVO;
			}
		}
		this.preExpMax=preUpgradeVO.Exp;
		this.curExpMax=nowUpgradeVO.Exp;
		this.isStarUp=0;
		var preRankVO=RankModel.getDivison(preData.trophy);
		var nowRankVO=preRankVO;
		if (this.curScore >=preRankVO.TotalScore){
			nowRankVO=RankModel.getRankVOByIndex(preRankVO.Index+1)|| preRankVO;
			this.isStarUp=1;
		}
		else if (this.curScore < preRankVO.MinScore){
			nowRankVO=RankModel.getRankVOByIndex(preRankVO.Index-1)|| preRankVO;
			this.isStarUp=2;
		}
		this.preConfig=preRankVO;
		this.curConfig=nowRankVO;
		if (nowRankVO.Division !=preRankVO.Division){
			this.isMedalChange=true;
		}
		PlayerInfo.instance.addGold=this._selfPlayer.gold <=0 ?-1 :this._selfPlayer.gold;
		this.txtLevel.text="Lv."+this._selfPlayer.level;
		this.barExp.value=this.curExp / this.curExpMax;
		this.txtAddExp.text=this._selfPlayer.exp > 0 ? "+"+this._selfPlayer.exp :this._selfPlayer.exp+"";
		if (this._selfPlayer.trophy > 0){
			this.txtAddDan.text="+"+this._selfPlayer.trophy;
			this.txtAddDan.color="#37f53b";
			this.txtAddDan.strokeColor="#335d11";
		}
		else{
			this.txtAddDan.text=this._selfPlayer.trophy+"";
			this.txtAddDan.color="#ff7070";
			this.txtAddDan.strokeColor="#10507e";
		}
		this.initMedal(this.preConfig,this.preScore);
		this._trophy=this.preScore;
		this._trophyMin=this.preConfig.MinScore;
		this._trophyTotal=this.preConfig.TotalScore;
		if (this.isStarUp==1){
			Tween.to(this,{trophy:this._trophyTotal},500,null,Handler.create(this,this.onScoreOver1),1000);
		}
		else if (this.isStarUp==2){
			Tween.to(this,{trophy:this._trophyMin},500,null,Handler.create(this,this.onScoreOver1),1000);
		}
		else{
			Tween.to(this,{trophy:this.curScore},500,null,Handler.create(this,this.onScoreOver1),1000);
		}
		if (this._selfPlayer.gold > 0){
			this.txtGoldNum.text=this._selfPlayer.gold+"";
		}
		else{
			this.boxGold && this.boxGold.destroy();
			this.boxGold=null;
		}
		if (this._selfPlayer.reward==null || this._selfPlayer.reward.length==0){
			this.boxBox && this.boxBox.destroy();
			this.boxBox=null;
		}
		if (this._selfPlayer.key==0){
			this.boxKey && this.boxKey.destroy();
			this.boxKey=null;
		}
		if (this._selfPlayer.result==1){
			this.imgTitle.skin="language/Chinese/battle/menu/over/ui_slbg.jpg";
		}
		else if (this._selfPlayer.result==2){
			this.imgTitle.skin="language/Chinese/battle/menu/over/ui_sbbg.jpg";
		}
		else{
			this.imgTitle.skin="language/Chinese/battle/menu/over/ui_pjbg.jpg";
		}
		if (this._selfPlayer && this._selfPlayer.reward && this._selfPlayer.reward.length > 0){
			EventMgr.ins.event("ShowBattleOverDanView",true);
		}
		else{
			EventMgr.ins.event("ShowBattleOverDanView",false);
		}
	}

	__proto.onScoreOver1=function(){
		this._trophyMin=this.curConfig.MinScore;
		this._trophyTotal=this.curConfig.TotalScore;
		if (this.isStarUp==1){
			if (this.isMedalChange){
				Laya.timer.once(500,this,this.showMedalAni,[true]);
			}
			else{
				if (this.curConfig.StarNum==0){
					Laya.timer.once(500,this,this.showTxtStarAni);
					}else {
					this.starNode=this.viewStar.selection.getChildByName("star"+(this.curConfig.Star-1));
					Laya.timer.once(500,this,this.showStarAni);
				}
			}
		}
		else if (this.isStarUp==2){
			if (this.preConfig.StarNum==0){
				Laya.timer.once(500,this,this.showTxtStarAni);
				}else {
				this.starNode=this.viewStar.selection.getChildByName("star"+(this.preConfig.Star-1));
				Laya.timer.once(500,this,this.showStarAni);
			}
		}
		else{
			this.initMedal(this.curConfig,this.curScore);
			this.boxNext.visible=this._playOver=true;
		}
	}

	__proto.onScoreOver2=function(){
		this.initMedal(this.curConfig,this.curScore);
		this.boxNext.visible=this._playOver=true;
	}

	__proto.showStarAni=function(){
		var tempAni=new AniSkeleton("starchange","ui",this.isStarUp==1 ? 1 :0,false,Handler.create(this,this.onShowStarEnd));
		tempAni.pos(25,28);
		if (this.isStarUp==1){
			this.starNode.skin="battle/menu/over/ui_xingbg.png";
		}
		else if (this.isStarUp==2){
			this.starNode.skin=null;
		}
		this.starNode.addChild(tempAni);
	}

	__proto.onShowStarEnd=function(ani){
		ani && ani.destroy();
		if (this.isStarUp==1){
			this.starNode.skin="battle/menu/over/ui_xing.png";
			Tween.to(this,{trophy:this.curScore},500,null,Handler.create(this,this.onScoreOver2));
		}
		else if (this.isStarUp==2){
			this.starNode.skin="battle/menu/over/ui_xingbg.png";
			if (this.isMedalChange){
				Laya.timer.once(500,this,this.showMedalAni,[false]);
			}
			else{
				Tween.to(this,{trophy:this.curScore},500,null,Handler.create(this,this.onScoreOver2));
			}
		}
	}

	__proto.showTxtStarAni=function(){
		var txtStar=this.viewStar.selection.getChildByName("txtStar");
		if (this.isStarUp==1){
			txtStar.text="x"+this.curConfig.Star;
		}
		else if (this.isStarUp==2){
			txtStar.text="x"+(this.preConfig.Star-1);
		}
		Laya.timer.once(500,this,this.onShowTxtStarEnd);
	}

	__proto.onShowTxtStarEnd=function(){
		if (this.isStarUp==1){
			Tween.to(this,{trophy:this.curScore},500,null,Handler.create(this,this.onScoreOver2));
		}
		else if (this.isStarUp==2){
			if (this.isMedalChange){
				Laya.timer.once(500,this,this.showMedalAni,[false]);
			}
			else{
				Tween.to(this,{trophy:this.curScore},500,null,Handler.create(this,this.onScoreOver2));
			}
		}
	}

	__proto.showMedalAni=function(isMedalUp){
		var aniName,aniIndex=0,posX=0,posY=0;
		if (isMedalUp){
			aniName="shengjietx";
			aniIndex=0;
			SoundMgr.instance.playSound(4006052);
			posX=160;
			posY=185;
		}
		else{
			aniName="jiangjietx";
			aniIndex=1;
			SoundMgr.instance.playSound(4006053);
			posX=160;
			posY=155;
		};
		var ani=new AniSkeleton(aniName,"ui",aniIndex,false,Handler.create(this,this.showMedalEnd));
		ani.blendMode="add";
		ani.pos(posX,posY);
		this.iconDan.addChild(ani);
	}

	__proto.showMedalEnd=function(ani){
		ani && ani.destroy();
		this.initMedal(this.curConfig,this._trophy);
		if (this.isStarUp==1){
			if (this.curConfig.StarNum==0){
				Laya.timer.once(500,this,this.showTxtStarAni);
				}else {
				this.starNode=this.viewStar.selection.getChildByName("star0");
				this.starNode.skin="battle/menu/over/ui_xingbg.png";
				Laya.timer.once(500,this,this.showStarAni);
			}
		}
		else if (this.isStarUp==2){
			Tween.to(this,{trophy:this.curScore},500,null,Handler.create(this,this.onScoreOver2));
		}
	}

	__proto.initMedal=function(rankVO,score){
		this.barDan.value=(score-rankVO.MinScore)/ (rankVO.TotalScore-rankVO.MinScore);
		var medalRes=PathMgr.getMedalRes(rankVO);
		this.iconDan.skin=medalRes.iconRes;
		this.viewStar.selectedIndex=rankVO.StarNum==0 ? 0 :rankVO.StarNum-1;
		var star;
		for (var i=0,n=rankVO.StarNum;i < n;i++){
			star=this.viewStar.selection.getChildByName("star"+i);
			if (star){
				if (rankVO.Star > i){
					star.skin="battle/menu/over/ui_xing.png";
				}
				else{
					star.skin="battle/menu/over/ui_xingbg.png";
				}
			}
		}
		this.txtDanName.text=LanguageMgr.Ins.GetLan(rankVO.Name);
		if (rankVO.StarNum==0){
			var txtStar=this.viewStar.selection.getChildByName("txtStar");
			txtStar.text="x"+rankVO.Star;
		}
	}

	__proto.initNor=function(){
		var msg=this.dataSource;
		var playerMsg;
		var playerList=[];
		var player;
		var team={};
		var i=0,n=0;
		for (i=0,n=msg.playerMsg.length;i < n;i++){
			playerMsg=msg.playerMsg[i];
			player=new BattleOverPlayer(playerMsg);
			if (player.userId==PlayerInfo.instance.userId+""){
				this._selfPlayer=player;
				if (playerMsg.rewardMsg && playerMsg.rewardMsg.length > 0){
					this._selfPlayer.reward=new Array;
					var rewardMsg;
					var reward;
					for (var j=0,m=playerMsg.rewardMsg.length;j < m;j++){
						rewardMsg=playerMsg.rewardMsg[j];
						reward=new BattleOverReward;
						reward.itemTempId=rewardMsg.itemTempId;
						reward.itemCount=rewardMsg.count;
						reward.isSelect=rewardMsg.isSelect;
						this._selfPlayer.reward.push(reward);
					}
				}
			}
			playerList.push(player);
		}
		playerList.sort(function(a,b){
			if (a.kill > b.kill){
				return-1;
			}
			else if (a.kill < b.kill){
				return 1;
			}
			else if (a.damage > b.damage){
				return-1;
			}
			else if (a.damage < b.damage){
				return 1;
			}
			else{
				return 0;
			}
		});
		playerList[0].isMvp=true;
		var teamOther=0;
		for (i=0,n=playerList.length;i < n;i++){
			player=playerList[i];
			team[player.teamType]==null && (team[player.teamType]=[]);
			team[player.teamType].push(player);
			if (player.teamType !=this._selfPlayer.teamType){
				teamOther=player.teamType;
			}
		}
		this.listNorL.array=team[this._selfPlayer.teamType];
		delete team[this._selfPlayer.teamType];
		this.listNorR.array=team[teamOther];
		delete team[teamOther];
	}

	__proto.initMusic=function(){
		if (this._selfPlayer.result==1){
			SoundMgr.instance.playSound(4002003);
		}
		else if (this._selfPlayer.result==2){
			SoundMgr.instance.playSound(4002002);
		}
	}

	__proto.onRenderNorPlayer=function(item,index){
		var data=item.dataSource;
		item.imgSelected.visible=false;
		item.imgAddFriend.visible=false;
		if (data.isSelf){
			item.imgBg.skin='battle/menu/over/ui_t4.png';
			item.txtName.color="#fffc00";
			item.txtName.stroke=2;
			item.txtName.strokeColor="#2873b4";
			item.txtDamage.strokeColor="#2873b4";
			item.txtAddExp.strokeColor="#2873b4";
		}
		else{
			if (this._selfPlayer.teamType==data.teamType){
				item.imgBg.skin='battle/menu/over/ui_t5.png';
				item.txtName.color="#045c86";
				item.txtDamage.strokeColor="#2873b4";
				item.txtAddExp.strokeColor="#2873b4";
			}
			else{
				item.imgBg.skin='battle/menu/over/ui_t3.png';
				item.txtName.color="#851f00";
				item.txtDamage.strokeColor="#b43828";
				item.txtAddExp.strokeColor="#b43828";
			}
			item.txtName.stroke=0;
			item.txtName.strokeColor=null;
		}
		if (data.isMvp){
			item.imgMvp.skin="battle/menu/over/ui_mvp.png";
			item.txtKill.color="#fdff59";
			item.txtKill.strokeColor="#9d0a00";
		}
		else{
			item.imgMvp.skin="battle/menu/over/ui_mv.png";
			item.txtKill.color="#d7ecff";
			item.txtKill.strokeColor="#18416a";
		}
		item.txtName.text=data.nickName;
		item.imgHead.skin=data.headUrl;
		item.txtDamage.text=data.damage+"";
		item.txtKill.text=data.kill+"";
		item.txtAddExp.text=data.exp > 0 ? "+"+data.exp :data.exp+"";
	}

	__proto.onClickNext=function(){
		var _$this=this;
		if (!this._playOver){
			return;
		}
		this.mouseEnabled=false;
		if (this._selfPlayer && this._selfPlayer.reward && this._selfPlayer.reward.length > 0){
			UIMgr.ins.openView("MulitBattleOpenCard",Handler.create(this,function(view){
				UIMgr.ins.closeView("BattleOverDanView");
				view.dataSource=_$this._selfPlayer;
			}));
		}
		else{
			UIMgr.ins.closeView("BattleOverDanView");
			HallMgr.ins.show();
		}
	}

	__proto.updateTime=function(){
		if (!this._playOver){
			return;
		}
		this._timeClose--;
		this.txtTime.text="("+this._timeClose+")";
		if (this._timeClose <=0){
			this.onClickNext();
		}
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.scale(_bestFitWidth / 1136,_bestFitHeight / 640);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		laya.ui.View.prototype.destroy.call(this);
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(BattleOverDanViewUI,this,'dataSource',value);
		var msg=value;
		if (msg){
			this.listNorL.visible=true;
			this.listNorR.visible=true;
			this.initNor();
			this.initSelf();
		}
	});

	__getset(0,__proto,'trophy',function(){
		return this._trophy;
		},function(value){
		this._trophy=value;
		this.barDan.value=(this._trophy-this._trophyMin)/ (this._trophyTotal-this._trophyMin);
	});

	return BattleOverDanView;
})(BattleOverDanViewUI)


//class modules.battle.view.result.BattleOverView extends ui.menu.battle.over.BattleOverViewUI
var BattleOverView=(function(_super){
	function BattleOverView(){
		this._timeClose=10;
		this._selfPlayer=null;
		BattleOverView.__super.call(this);
		this.initView();
		this.addEvent();
	}

	__class(BattleOverView,'modules.battle.view.result.BattleOverView',_super);
	var __proto=BattleOverView.prototype;
	Laya.imps(__proto,{"laya.ui.IResize":true})
	__proto.initView=function(){
		this.boxFour.visible=false;
		this.listFour.visible=false;
		this.txtTime.text="("+this._timeClose+")";
		this.additionBar.setPrivilegeVO(PrivilegeModel.getItemDataByTypes(4+"_"+1));
		this.additionBar.visible=PlayerInfo.instance.isOpenMasterGrowing;
	}

	__proto.addEvent=function(){
		this.listFour.renderHandler=Handler.create(this,this.onRenderFourPlayer,null,false);
		Laya.stage.on("click",this,this.onClickNext);
		Laya.timer.loop(1000,this,this.updateTime);
		ResizeMgr.addListener(this,true);
	}

	__proto.delEvent=function(){
		Laya.stage.off("click",this,this.onClickNext);
		Laya.timer.clear(this,this.updateTime);
		ResizeMgr.removeListener(this);
	}

	__proto.initSelf=function(){
		this.imgHead.skin=this._selfPlayer.headUrl;
		var preData=Cache.ins.battle.getPreData();
		var exp=this._selfPlayer.exp+preData.exp;
		var trophy=this._selfPlayer.trophy+preData.trophy;
		var upgradeVO=UpgradeModel.getConfigByLevel(preData.level,1);
		if (exp > upgradeVO.Exp){
			var nextUpgradeVO=UpgradeModel.getConfigByLevel(preData.level+1,1);
			if (nextUpgradeVO){
				exp-=upgradeVO.Exp;
				upgradeVO=nextUpgradeVO;
			}
		}
		this.barExp.value=exp / upgradeVO.Exp;
		this.txtAddExp.text=this._selfPlayer.exp > 0 ? "+"+this._selfPlayer.exp :this._selfPlayer.exp+"";
		var rankVO=RankModel.getDivison(preData.trophy);
		if (trophy >=rankVO.TotalScore){
			rankVO=RankModel.getRankVOByIndex(rankVO.Index+1)|| rankVO;
		}
		else if (trophy < rankVO.MinScore){
			rankVO=RankModel.getRankVOByIndex(rankVO.Index-1)|| rankVO;
		}
		this.barDan.value=(trophy-rankVO.MinScore)/ (rankVO.TotalScore-rankVO.MinScore);
		this.txtAddDan.text=this._selfPlayer.trophy > 0 ? "+"+this._selfPlayer.trophy :this._selfPlayer.trophy+"";
		this.iconDan.skin="assets/textrue/medal/icon"+rankVO.Division+".png";
		this.fontDan.value=rankVO.StarNum==0 ? "" :"aaaaa".substr(0,rankVO.Star);
	}

	__proto.initFour=function(){
		var msg=this.dataSource;
		var playerMsg;
		var player;
		var playerList=[];
		var teamId=0;
		var i=0,j=0,n=0,m=0;
		var maxKill=0,maxKillIndex=0,maxDamage=0,maxDamageIndex=0;
		for (i=0,n=msg.playerMsg.length;i < n;i++){
			playerMsg=msg.playerMsg[i];
			player=new BattleOverPlayer(playerMsg);
			if (player.userId==PlayerInfo.instance.userId+""){
				this._selfPlayer=player;
				if (playerMsg.rewardMsg && playerMsg.rewardMsg.length > 0){
					this._selfPlayer.reward=new Array;
					var rewardMsg;
					var reward;
					for (j=0,m=playerMsg.rewardMsg.length;j < m;j++){
						rewardMsg=playerMsg.rewardMsg[j];
						reward=new BattleOverReward;
						reward.itemTempId=rewardMsg.itemTempId;
						reward.itemCount=rewardMsg.count;
						reward.isSelect=rewardMsg.isSelect;
						this._selfPlayer.reward.push(reward);
					}
				}
			}
			if (player.kill > maxKill){
				maxKill=player.kill;
				maxKillIndex=i;
			}
			if (player.damage > maxDamage){
				maxDamage=player.damage;
				maxDamageIndex=i;
			}
			playerList.push(player);
		}
		playerList[0].isMvp=true;
		if (maxKill !=0){
			player=playerList[maxKillIndex];
			player.topIcon=player.topIcon || [];
			player.topIcon.push({imgIcon:"battle/menu/over/ui_icon7.png"});
		}
		if (maxDamage !=0){
			player=playerList[maxDamageIndex];
			player.topIcon=player.topIcon || [];
			player.topIcon.push({imgIcon:"battle/menu/over/ui_icon6.png"});
		}
		this.listFour.array=playerList;
	}

	__proto.onRenderFourPlayer=function(item,index){
		var data=item.dataSource;
		if (data.isSelf){
			item.imgSelected.visible=true;
			item.txtName.color="#fffc00";
			item.txtName.stroke=2;
			item.txtName.strokeColor="#2873b4";
		}
		else{
			item.imgSelected.visible=false;
			item.txtName.color="#045c86";
			item.txtName.stroke=0;
			item.txtName.strokeColor=null;
		}
		if (data.isMvp){
			item.imgMvp.visible=true;
		}
		else{
			item.imgMvp.visible=false;
		}
		item.txtName.text=data.nickName;
		item.imgHead.skin=data.headUrl;
		item.txtScore.text=data.score+"";
		item.txtDamage.text=data.damage+"";
		item.txtKill.text=data.kill+"/"+data.die;
		item.imgRank.skin="battle/menu/over/ui_"+data.rank+".png";
		item.txtAddMedal.text=data.trophy > 0 ? "+"+data.trophy :data.trophy+"";
		item.txtAddExp.text=data.exp > 0 ? "+"+data.exp :data.exp+"";
		item.listTop.array=data.topIcon;
		item.listCard.array=data.skillRecord;
	}

	__proto.onClickNext=function(){
		var _$this=this;
		var msg=this.dataSource;
		this.mouseEnabled=false;
		if (this._selfPlayer && this._selfPlayer.reward && this._selfPlayer.reward.length > 0){
			UIMgr.ins.openView("MulitBattleOpenCard",Handler.create(this,function(view){
				UIMgr.ins.closeView("BattleOverView");
				view.dataSource=_$this._selfPlayer;
			}));
		}
		else{
			UIMgr.ins.closeView("BattleOverView");
			HallMgr.ins.show();
		}
	}

	__proto.updateTime=function(){
		this._timeClose--;
		this.txtTime.text="("+this._timeClose+")";
		if (this._timeClose <=0){
			this.onClickNext();
		}
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.scale(_bestFitWidth / 1136,_bestFitHeight / 640);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		laya.ui.View.prototype.destroy.call(this);
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(BattleOverViewUI,this,'dataSource',value);
		var msg=value;
		if (msg){
			this.boxFour.visible=true;
			this.listFour.visible=true;
			this.initFour();
			this.initSelf();
		}
	});

	return BattleOverView;
})(BattleOverViewUI)


//class modules.battle.view.result.MedalStar extends ui.menu.battle.StarUI
var MedalStar=(function(_super){
	function MedalStar(){
		MedalStar.__super.call(this);
	}

	__class(MedalStar,'modules.battle.view.result.MedalStar',_super);
	return MedalStar;
})(StarUI)


//class modules.battle.view.result.MulitBattleOpenCard extends ui.menu.battle.MulitBattleOpenCardUI
var MulitBattleOpenCard=(function(_super){
	function MulitBattleOpenCard(){
		this._ani=null;
		this._rewardNormal=-1;
		this._rewardBox=-1;
		this._cacheRewardNormal=-1;
		this._cacheRewardBox=-1;
		this._autoOpen=10;
		this._autoDrop=20;
		this._autoReturn=20;
		this._boxReward=null;
		this._isDrop=false;
		this._isGet=false;
		MulitBattleOpenCard.__super.call(this);
		this._boxPrice=2147483647;
		this.initView();
		this.addEvent();
	}

	__class(MulitBattleOpenCard,'modules.battle.view.result.MulitBattleOpenCard',_super);
	var __proto=MulitBattleOpenCard.prototype;
	Laya.imps(__proto,{"laya.ui.IResize":true})
	__proto.initView=function(){
		this.txtReward.text=LanguageMgr.Ins.GetLan(14300206);
		this.btnBack.visible=false;
		this.btnContinue.visible=false;
		this.btnShowAD.visible=false;
		this.txtOpenTime.text="";
		var rewardInfo=ConfigModel.getConfigData(1135).ConfigValue.split("|");
		var vo=ItemModel.getItemConfigData(rewardInfo[0]);
		this.moneyIcon.skin="assets/textrue/itemicon/"+vo.Icon+".png";
		var maxRewardNum=ConfigModel.getConfigData(1143).ConfigValue;
		this.moneyValue.text=ADMgr.ins.rewardNum >=maxRewardNum ? "0" :rewardInfo[1];
		if(NewGuideMgr.ins.curNodeId==10 || NewGuideMgr.ins.curNodeId==120){
			this.bottomCenterBox.mouseEnabled=false;
		}
		if(!Browser.window.fbConfig.isOpenAds){
			this.btnShowAD.visible=false;
			this.btnShowAD.disabled=true;
		}
	}

	__proto.addEvent=function(){
		for (var i=0;i < 5;i++){
			this["card"+i].on("click",this,this.onClickCard,[i]);
		}
		this.btnBack.on("click",this,this.onClickBack);
		this.btnContinue.on("click",this,this.onClickContinue);
		this.btnBoxOpen.on("click",this,this.onClickOpenBox);
		this.btnBoxDrop.on("click",this,this.onClickDropBox,[true]);
		this.btnShowAD.on("click",this,this.showAD);
		PlayerInfoMgr.ins.on("item_change_remove",this,this.onRemoveItem);
		ResizeMgr.addListener(this,true);
	}

	__proto.delEvent=function(){
		for (var i=0;i < 5;i++){
			this["card"+i].off("click",this,this.onClickCard);
		}
		this.btnBack.off("click",this,this.onClickBack);
		this.btnContinue.off("click",this,this.onClickContinue);
		this.btnBoxOpen.off("click",this,this.onClickOpenBox);
		this.btnBoxDrop.off("click",this,this.onClickDropBox);
		this.btnShowAD.off("click",this,this.showAD);
		PlayerInfoMgr.ins.off("item_change_remove",this,this.onRemoveItem);
		ResizeMgr.removeListener(this);
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.scaleX=_bestFitWidth / 1136;
		this.scaleY=_bestFitHeight / 640;
	}

	__proto.onRenderReward=function(item,index){
		var data=item.dataSource;
		var itemVO=ItemModel.getItemConfigData(data.itemTempId);
		item.imgGet.visible=this._isGet && index==this._cacheRewardBox;
		item.imgIcon.skin="assets/textrue/itemicon/"+itemVO.Icon+".png";
		item.imgIcon.gray=this._isDrop;
		if (this._isDrop){
			item.txtName.text=LanguageMgr.Ins.GetLan(14300113);
		}
		else{
			if (data.itemCount > 1){
				item.txtName.text=LanguageMgr.Ins.GetLan(itemVO.Name)+" x"+data.itemCount;
			}
			else{
				item.txtName.text=LanguageMgr.Ins.GetLan(itemVO.Name);
			}
		}
	}

	__proto.showSuperReward=function(){
		var _$this=this;
		this.boxCard.visible=false;
		this._ani=new AniSkeleton("Rpbaofa","ui",0,false,Handler.create(this,function(){
			_$this._ani && (_$this._ani.destroy(),_$this._ani=null,_$this.display());
		}));
		this._ani.pos(566,370);
		this.addChild(this._ani);
	}

	__proto.display=function(){
		var _$this=this;
		this.boxCard.visible=true;
		for (var i=0;i < 5;i++){
			this["card"+i].mouseEnabled=false;
			this["card"+i].x=362;
			this["card"+i].imgBack.scaleX=0;
			this["card"+i].imgFront.scaleX=1;
			this["card"+i].imgIcon.scaleX=0.6;
			this["card"+i].txtTips.visible=false;
			this["card"+i].txtName.visible=true;
			this["card"+i].txtTips.text=LanguageMgr.Ins.GetLan(14300087);
			Tween.to(this["card"+i],{x:i *181},Math.abs(2-i)*300);
		}
		Laya.timer.once(600+1000,this,function(){
			_$this.hideCard(this.card0);
			_$this.hideCard(this.card1);
			_$this.hideCard(this.card2);
			_$this.hideCard(this.card3);
			_$this.hideCard(this.card4,Handler.create(this,_$this.shuffleCard));
		});
	}

	__proto.hideCard=function(view,complete){
		view.imgBack.scaleX=0;
		view.imgFront.scaleX=1;
		view.imgIcon.scaleX=0.6;
		view.txtTips.visible=false;
		view.txtName.visible=true;
		var half=300,double=half *2,short=30;
		Tween.to(view.imgBack,{scaleX:1},half,null,null,half);
		Tween.to(view.imgFront,{scaleX:0},half,null,null);
		Tween.to(view.imgIcon,{scaleX:0},half,null,null);
		Tween.to(view.txtTips,{},1,null,Handler.create(this,function(){
			view.txtTips.visible=true;
		}),double-short);
		Tween.to(view.txtName,{},1,null,Handler.create(this,function(){
			view.txtName.visible=false;
		}),short);
		complete && Laya.timer.once(double,complete.caller,complete.method,complete.args);
	}

	__proto.shuffleCard=function(){
		var _$this=this;
		var delay=0,shuffle=200,time=0,offset=30;
		for (var i=0;i < 5;i++){
			this["card"+i].x=i *181;
			this["card"+i].imgBack.scaleX=1;
			this["card"+i].imgFront.scaleX=0;
			this["card"+i].imgIcon.scaleX=0;
			this["card"+i].txtTips.visible=true;
			this["card"+i].txtName.visible=false;
			time=Math.abs(2-i)*300;
			Tween.to(this["card"+i],{x:362},time);
			delay=600;
			Tween.to(this["card"+i],{x:362-(i-2)*offset},shuffle,Ease.backInOut,null,delay);
			delay+=shuffle;
			Tween.to(this["card"+i],{x:362},shuffle,Ease.backInOut,null,delay);
			delay+=shuffle;
			Tween.to(this["card"+i],{x:362-(i-2)*offset},shuffle,Ease.backInOut,null,delay);
			delay+=shuffle;
			Tween.to(this["card"+i],{x:362},shuffle,Ease.backInOut,null,delay);
			Tween.to(this["card"+i],{x:i *181},time,null,Handler.create(this,function(card,index){
				card.mouseEnabled=true;
				if (index==0){
					_$this.txtOpenTime.text=LanguageMgr.Ins.GetLan(14300090,_$this._autoOpen);
					Laya.timer.loop(1000,this,this.autoOpenCard);
				}
			},[this["card"+i],i]),delay);
		}
	}

	__proto.showCard=function(view,complete){
		view.mouseEnabled=false;
		view.imgBack.scaleX=1;
		view.imgFront.scaleX=0;
		view.imgIcon.scaleX=0;
		view.txtTips.visible=true;
		view.txtName.visible=false;
		var half=300,double=half *2,short=30;
		Tween.to(view.imgBack,{scaleX:0},half,null,null);
		Tween.to(view.imgFront,{scaleX:1},half,null,null,half);
		Tween.to(view.imgIcon,{scaleX:0.6},half,null,null,half);
		Tween.to(view.txtTips,{},1,null,Handler.create(this,function(){
			view.txtTips.visible=false;
		}),short);
		Tween.to(view.txtName,{},1,null,Handler.create(this,function(){
			view.txtName.visible=true;
		}),double-short);
		complete && Laya.timer.once(double,complete.caller,complete.method,complete.args);
	}

	__proto.onClickCard=function(index,e){
		this.txtOpenTime.text="";
		Laya.timer.clear(this,this.autoOpenCard);
		if (this._rewardNormal !=-1){
			this._cacheRewardNormal=index;
			if (index !=this._rewardNormal){
				this.swapCard(this._rewardNormal,index);
				if (index==this._rewardBox){
					this._rewardBox=this._rewardNormal;
				}
			}
			this._rewardNormal=-1;
			if (this._rewardBox==-1){
				this.showCard(this["card"+index],Handler.create(this,this.over));
			}
			else{
				this.showCard(this["card"+index]);
			}
		}
		else if (this._rewardBox !=-1){
			this._cacheRewardBox=index;
			if (index !=this._rewardBox){
				this.swapCard(this._rewardBox,index);
			}
			this._rewardBox=-1;
			this._boxReward=this["card"+index].dataSource;
			this.showCard(this["card"+index],Handler.create(this,this.openBox));
		}
		if (this._rewardNormal==-1 && this._rewardBox==-1){
			for (var i=0;i < 5;i++){
				this["card"+i].mouseEnabled=false;
				this["card"+i].txtTips.text="";
			}
		}
	}

	__proto.openBox=function(){
		if (HallMgr.ins.boxCount >=4){
			this.boxPopup.visible=true;
			var itemVO=ItemModel.getItemConfigData(this._boxReward.itemTempId);
			this.txtBoxTitle.text=LanguageMgr.Ins.GetLan(itemVO.Name);
			this.txtBoxTime.text=LanguageMgr.Ins.GetLan(14300088,TimeManager.Instance.convertTimeToStr1(itemVO.Time));
			this.txtBoxTime.x=this.txtBoxTitle.x+this.txtBoxTitle.textField.textWidth+4;
			this.txtBoxDesc.text=LanguageMgr.Ins.GetLan(14300089);
			if(PlayerInfo.instance.openBoxFree){
				this._boxPrice=0;
				this.txtBoxPrice.text="(    "+LanguageMgr.Ins.GetLan("9020032")+")";
				this.additionBar.visible=false;
			}
			else if(PlayerInfo.instance.isOpenMasterResourceCard){
				var privilegeVO=PrivilegeModel.getItemDataByTypes(3+"_"+5);
				this.additionBar.setPrivilegeVO(privilegeVO);
				this.additionBar.visible=true;
				this._boxPrice=(itemVO.Time *1000 / HallMgr.ins.clearTimeNeedMoney);
				this._boxPrice=PrivilegeModel.getPrivilegePrice(this._boxPrice,3+"_"+5);
				this.txtBoxPrice.text="(    "+this._boxPrice+")";
			}
			else {
				this.additionBar.visible=false;
				this._boxPrice=Math.ceil(itemVO.Time *1000 / HallMgr.ins.clearTimeNeedMoney);
				this.txtBoxPrice.text="(    "+this._boxPrice+")";
			}
			if(PlayerInfo.instance.openBoxFree){
				this.additionBar.visible=false;
			}
			else {
				this.additionBar.setPrivilegeVO(PrivilegeModel.getItemDataByTypes(3+"_"+5));
				this.additionBar.visible=PlayerInfo.instance.isOpenMasterGrowing;
			}
			this.imgBoxIcon.skin="assets/textrue/itemicon/"+itemVO.Icon+".png";
			this.txtDropTime.text=(this._autoDrop < 10 ? " " :"")+"("+this._autoDrop+")";
			Laya.timer.loop(1000,this,this.autoDropCard);
		}
		else{
			this.boxPopup.visible=false;
			this.onClickDropBox(false,null);
		}
	}

	__proto.autoOpenCard=function(){
		this._autoOpen--;
		this.txtOpenTime.text=LanguageMgr.Ins.GetLan(14300090,this._autoOpen);
		if (this._autoOpen <=0){
			this.txtOpenTime.text="";
			Laya.timer.clear(this,this.autoOpenCard);
			if (this._rewardNormal !=-1){
				this.onClickCard(this._rewardNormal,null);
			}
			if (this._rewardBox !=-1){
				this.onClickCard(this._rewardBox,null);
			}
		}
	}

	__proto.autoDropCard=function(){
		this._autoDrop--;
		this.txtDropTime.text=(this._autoDrop < 10 ? " " :"")+"("+this._autoDrop+")";
		if (this._autoDrop <=0){
			this.txtDropTime.text=(this._autoDrop < 10 ? " " :"")+"("+this._autoDrop+")";
			Laya.timer.clear(this,this.autoDropCard);
			this.onClickDropBox(true,null);
		}
	}

	__proto.autoReturn=function(){
		this._autoReturn--;
		this.txtReturnTime.text=(this._autoReturn < 10 ? " " :"")+"("+this._autoReturn+")";
		if (this._autoReturn <=0){
			this.txtReturnTime.text=(this._autoReturn < 10 ? " " :"")+"("+this._autoReturn+")";
			this.onClickBack(null);
		}
	}

	__proto.over=function(){
		this.boxPopup.visible=false;
		this.btnBack.visible=true;
		var maxRewardNum=ConfigModel.getConfigData(1143).ConfigValue;
		if(Browser.onPC || ADMgr.ins.rewardNum >=maxRewardNum){
			this.btnShowAD.visible=false;
			}else {
			this.btnShowAD.visible=true;
		}
		this.btnContinue.visible=false;
		Laya.timer.loop(1000,this,this.autoReturn);
		EventMgr.ins.event("GuideNode_10_Step_5")
	}

	__proto.swapCard=function(indexA,indexB){
		var data=this["card"+indexA].dataSource;
		this["card"+indexA].dataSource=this["card"+indexB].dataSource;
		this["card"+indexB].dataSource=data;
		this.onRenderReward(this["card"+indexA],indexA);
		this.onRenderReward(this["card"+indexB],indexB);
	}

	__proto.onClickBack=function(e){
		UIMgr.ins.closeView("MulitBattleOpenCard",true);
		HallMgr.ins.show();
	}

	__proto.onClickContinue=function(e){
		UIMgr.ins.closeView("MulitBattleOpenCard",true);
	}

	// RoomMgr.ins.createRoom();
	__proto.onClickOpenBox=function(e){
		if (PlayerInfoMgr.ins.getItemCount(ItemConst.PINKGEM)< this._boxPrice){
			TipsManager.Instance().showLanTips(10001113);
			return;
		}
		this.over();
		var msg=new com.road.ddt.proto.SimpleMsg;
		msg.param1=1;
		msg.param4=Cache.ins.battle.battleId;
		SocketManager.Instance.sendSocketData(0x2907,msg);
		this._isGet=true;
		if (this._cacheRewardBox !=-1){
			this.onRenderReward(this["card"+this._cacheRewardBox],this._cacheRewardBox);
		}
	}

	__proto.onClickDropBox=function(isDrop,e){
		this.over();
		var msg=new com.road.ddt.proto.SimpleMsg;
		msg.param1=0;
		msg.param4=Cache.ins.battle.battleId;
		SocketManager.Instance.sendSocketData(0x2907,msg);
		if (isDrop){
			this._isDrop=true;
			if (this._cacheRewardBox !=-1){
				this.onRenderReward(this["card"+this._cacheRewardBox],this._cacheRewardBox);
			}
		}
		else{
			this._isGet=true;
			if (this._cacheRewardBox !=-1){
				this.onRenderReward(this["card"+this._cacheRewardBox],this._cacheRewardBox);
			}
		}
	}

	__proto.onRemoveItem=function(id,itemId){
		var itemVO=ItemModel.getItemConfigData(itemId);
		if (ItemConst.isSubItem(itemVO,4,3)){
			if (this.boxPopup.visible && HallMgr.ins.boxCount < 4){
				this.boxPopup.visible=false;
				this.onClickDropBox(false,null);
			}
		}
	}

	/**播放广告 **/
	__proto.showAD=function(){
		var maxRewardNum=ConfigModel.getConfigData(1143).ConfigValue;
		if(ADMgr.ins.rewardNum >=maxRewardNum){
			TipsManager.Instance().showLanTips(14300413);
			return;
		};
		var msg=new com.road.ddt.proto.AdvertiseRewardMsg();
		msg.type=1;
		msg.state=-1;
		SocketManager.Instance.sendSocketData(0x290a,msg);
		Laya.timer.clear(this,this.autoReturn);
		FBInterfaceMgr.ins.showAsync(Handler.create(this,this.onPlayOver),Handler.create(this,this.onPlayError));
	}

	__proto.onPlayOver=function(){
		ADMgr.ins.sendGetADReward(1,true);
		this.btnShowAD && (this.btnShowAD.disabled=true);
		Laya.timer.loop(1000,this,this.autoReturn);
	}

	__proto.onPlayError=function(){
		ADMgr.ins.sendGetADReward(1,false);
		Laya.timer.loop(1000,this,this.autoReturn);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		Laya.timer.clear(this,this.autoOpenCard);
		Laya.timer.clear(this,this.autoDropCard);
		Laya.timer.clear(this,this.autoReturn);
		this.delEvent();
		this._ani && this._ani.destroy();
		this._ani=null;
		this._boxReward=null;
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(MulitBattleOpenCardUI,this,'dataSource',value);
		var player=value;
		if (player){
			ArrayUtils.shuffle(player.reward);
			var reward;
			var itemVO;
			for (var i=0,n=player.reward.length;i < n;i++){
				reward=player.reward[i];
				if (this.hasOwnProperty("card"+i)){
					this["card"+i].dataSource=reward;
					this.onRenderReward(this["card"+i],i);
				}
				if (reward.isSelect){
					itemVO=ItemModel.getItemConfigData(reward.itemTempId);
					if (itemVO.Type==4){
						this._rewardBox=i;
					}
					else{
						this._rewardNormal=i;
					}
				}
			}
			if (this._rewardBox !=-1){
				itemVO=ItemModel.getItemConfigData(player.reward[this._rewardBox].itemTempId);
				if (itemVO.Rarity >=3){
					this.showSuperReward();
				}
				else{
					this.display();
				}
			}
			else{
				this.display();
			}
		}
	});

	return MulitBattleOpenCard;
})(MulitBattleOpenCardUI)


/**
*战斗记录子项
*@author qibo.chen
*/
//class modules.battleRecord.item.BattleRecordItem extends ui.battleRecord.item.BattleRecordItemUI
var BattleRecordItem=(function(_super){
	function BattleRecordItem(){
		/**记录4人混战中玩家id*/
		this._playerId=NaN;
		this._isFour=false;
		BattleRecordItem.__super.call(this);
	}

	__class(BattleRecordItem,'modules.battleRecord.item.BattleRecordItem',_super);
	var __proto=BattleRecordItem.prototype;
	__proto.initView=function(item){
		this._isFour=false;
		item.UI0.label_player_nickname.color=item.UI2.label_player_nickname.color="#3b6ee0";
		item.UI1.label_player_nickname.color=item.UI3.label_player_nickname.color="#ff1e00";
	}

	__proto.renderInfo=function(item,data){
		this.initView(item);
		item.label_battle_time.text=this.formatDate(Number(data.endTime));
		var playerInfos=this.sortArray(data.info,data.battleType);
		item.UI2.visible=item.UI3.visible=(playerInfos.length==4);
		if(!this._isFour){
			switch(playerInfos[0].result){
				case 0:
					item.img_battle_result.skin="language/Chinese/battleReport/ui_pingju_03.png";
					break ;
				case 1:
					item.img_battle_result.skin="language/Chinese/battleReport/ui_shengli_word.png";
					break ;
				case 2:
					item.img_battle_result.skin="language/Chinese/battleReport/ui_shibai_word.png";
					break ;
				}
			}else{
			item.img_battle_result.skin="";
		}
		for(var i=0;i<playerInfos.length;i++){
			this.setPlayerData(item["UI"+i],playerInfos[i]);
		}
		playerInfos=null;
	}

	__proto.setPlayerData=function(item,data){
		item.img_head_icon.skin=data.url;
		item.img_head_icon.on("click",item,this.onHeadClick,[data.playerId]);
		if(data){
			item.img_bg.visible=true;
			item.label_player_nickname.text=data.name;
			if(this._isFour){
				item.label_player_nickname.color=(Number(data.playerId)==this._playerId?"#3b6ee0":"#ff1e00");
			}
			item.list_cards.renderHandler=Handler.create(item,this.renderCards,null,false);
			item.list_cards.array=data.skills;
			}else{
			item.visible=false;
		}
	}

	__proto.onHeadClick=function(playerId){
		if(playerId==0)return;
		SocketManager.Instance.out.requestPlayerInfo(playerId+"");
	}

	__proto.renderCards=function(img,index){
		if(img.dataSource)
			img.skin="assets/textrue/skill/min/"+SkillModel.getSkillConfigData(img.dataSource).Icon;
	}

	__proto.formatDate=function(dateNum,timerType){
		(timerType===void 0)&& (timerType="yy-mm-dd h:m:s");
		var date=new Date(dateNum*1000);
		var year=date.getFullYear();
		var month=date.getMonth()+1;
		var day=date.getDate();
		var hour=date.getHours();
		var minute=date.getMinutes();
		var second=date.getSeconds();
		timerType=timerType.replace("yy",year)
		.replace("mm",StringUtils.getNumStr(month))
		.replace("dd",StringUtils.getNumStr(day))
		.replace('h',StringUtils.getNumStr(hour))
		.replace('m',StringUtils.getNumStr(minute))
		.replace('s',StringUtils.getNumStr(second));
		date=null;
		return timerType;
	}

	/**根据活动类对参战玩家进行排序 */
	__proto.sortArray=function(arr,type){
		var playerArr=[];
		this._playerId=Number(PlayerInfo.instance.playerId);
		if(type==1||type==2||type==7){
			if(this._playerId==arr[0].playerId){
				playerArr.push(arr[0],arr[1]);
				}else{
				playerArr.push(arr[1],arr[0]);
			}
		}
		else if(type==3){
			this._isFour=true;
			arr.sort(this.sortFunc);
			playerArr.push(arr[0],arr[3],arr[1],arr[2]);
		}
		else if(type==10){
			if(!arr[0].team){
				return arr;
			};
			var arrayCopy=arr.slice();
			for(var i=0;i<arrayCopy.length;i++){
				if(this._playerId==arrayCopy[i].playerId){
					playerArr.push(arrayCopy[i]);
					arrayCopy.splice(i,1);
					break ;
				}
			}
			for(var j=0;j<arrayCopy.length;j++){
				if(playerArr[0].team==arrayCopy[j].team){
					playerArr.push(arrayCopy[j]);
					arrayCopy.splice(j,1);
					break ;
				}
			}
			playerArr.splice(1,0,arrayCopy[0]);
			playerArr.push(arrayCopy[1]);
			arrayCopy=null;
		}
		else{
			playerArr=arr;
		}
		return playerArr;
	}

	__proto.sortFunc=function(a,b){
		return a.order-b.order;
	}

	__proto.romveEvent=function(){
		if(this.UI0.list_cards.renderHandler){
			this.UI0.list_cards.renderHandler.recover();
			this.UI0.list_cards.renderHandler=null;
		}
		if(this.UI1.list_cards.renderHandler){
			this.UI1.list_cards.renderHandler.recover();
			this.UI1.list_cards.renderHandler=null;
		}
		if(this.UI2.list_cards.renderHandler){
			this.UI2.list_cards.renderHandler.recover();
			this.UI2.list_cards.renderHandler=null;
		}
		if(this.UI3.list_cards.renderHandler){
			this.UI3.list_cards.renderHandler.recover();
			this.UI3.list_cards.renderHandler=null;
		}
		this.UI0.img_head_icon.off("click",this.UI0.img_head_icon,this.onHeadClick);
		this.UI1.img_head_icon.off("click",this.UI1.img_head_icon,this.onHeadClick);
		this.UI2.img_head_icon.off("click",this.UI2.img_head_icon,this.onHeadClick);
		this.UI3.img_head_icon.off("click",this.UI3.img_head_icon,this.onHeadClick);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.romveEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__getset(1,BattleRecordItem,'Ins',function(){
		return BattleRecordItem._ins=BattleRecordItem._ins||new BattleRecordItem();
	},ui.battleRecord.item.BattleRecordItemUI._$SET_Ins);

	BattleRecordItem._ins=null;
	return BattleRecordItem;
})(BattleRecordItemUI)


/**
*战斗记录
*@author qibo.chen
*/
//class modules.battleRecord.view.BattleRecordView extends ui.battleRecord.view.BattleRecordViewUI
var BattleRecordView=(function(_super){
	function BattleRecordView(){
		BattleRecordView.__super.call(this);
		this.addEvevt();
		this.btn_pre.disabled=true;
		if(this.list_battleInfo.totalPage==1){
			this.btn_next.disabled=true;
		}
		this.lab_page.text=this.list_battleInfo.page+1+"/"+this.list_battleInfo.totalPage;
	}

	__class(BattleRecordView,'modules.battleRecord.view.BattleRecordView',_super);
	var __proto=BattleRecordView.prototype;
	__proto.addEvevt=function(){
		this.topbar.btnBackCallBack=Handler.create(this,this.onCloseView,null,false);
		this.btn_pre.clickHandler=Handler.create(this,this.onPageForward,null,false);
		this.btn_next.clickHandler=Handler.create(this,this.onPageNext,null,false);
		this.list_battleInfo.renderHandler=Handler.create(this,this.renderBattleInfo,null,false);
		this.list_battleInfo.dataSource=BattleRecordInfo.Ins.BattleRecordData;
	}

	__proto.renderBattleInfo=function(item,index){
		var data=item.dataSource;
		if(data)BattleRecordItem.Ins.renderInfo(item,data);
	}

	__proto.onCloseView=function(){
		UIMgr.ins.closeView("BattleRecordView");
	}

	__proto.onPageForward=function(){
		if(this.list_battleInfo.page>0){
			this.list_battleInfo.page--;
			if(this.list_battleInfo.page==0){
				this.btn_pre.disabled=true;
			}
			if(this.list_battleInfo.page<this.list_battleInfo.totalPage-1){
				this.btn_next.disabled=false;
			}
			this.lab_page.text=this.list_battleInfo.page+1+"/"+this.list_battleInfo.totalPage;
		}
	}

	__proto.onPageNext=function(){
		if(this.list_battleInfo.page<this.list_battleInfo.totalPage-1){
			this.list_battleInfo.page++;
			if(this.list_battleInfo.page>0){
				this.btn_pre.disabled=false;
			}
			if(this.list_battleInfo.page==this.list_battleInfo.totalPage-1){
				this.btn_next.disabled=true;
			}
			this.lab_page.text=this.list_battleInfo.page+1+"/"+this.list_battleInfo.totalPage;
		}
	}

	__proto.removeEvent=function(){
		if(this.btn_pre.clickHandler){
			this.btn_pre.clickHandler.recover();
			this.btn_pre.clickHandler=null;
		}
		if(this.btn_next.clickHandler){
			this.btn_next.clickHandler.recover();
			this.btn_next.clickHandler=null;
		}
		if(this.topbar.btnBackCallBack){
			this.topbar.btnBackCallBack.recover();
			this.topbar.btnBackCallBack=null;
		}
		if(this.list_battleInfo.renderHandler){
			this.list_battleInfo.renderHandler.recover();
			this.list_battleInfo.renderHandler=null;
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return BattleRecordView;
})(BattleRecordViewUI)


//class modules.battle_apple.view.BeyondItem extends ui.menu.battle.BeyondItemUI
var BeyondItem=(function(_super){
	function BeyondItem(){
		BeyondItem.__super.call(this);
	}

	__class(BeyondItem,'modules.battle_apple.view.BeyondItem',_super);
	var __proto=BeyondItem.prototype;
	__proto.initFriend=function(friendInfo,type){
		this.nickname.text=friendInfo.nickName;
		PlayerInfoMgr.ins.getHeadImgUrl(friendInfo.avatar,Handler.create(this,function(url){
			this.head.skin=url;
		}));
		if(type==1){
			this.apple.visible=true;
			this.jiangbei.visible=false;
			this.jifen.text=""+friendInfo.shotMaxScore;
			}else if(type==2){
			this.apple.visible=false;
			this.jiangbei.visible=true;
			this.jifen.text=""+friendInfo.trophy;
		}
	}

	__proto.initMyself=function(type){
		this.nickname.text=PlayerInfo.instance.nickName;
		this.head.skin=PlayerInfo.instance.avatar;
		if(type==1){
			this.apple.visible=true;
			this.jiangbei.visible=false;
			this.jifen.text=""+PlayerInfo.instance.appleGameScore;
			}else if(type==2){
			this.apple.visible=false;
			this.jiangbei.visible=true;
			this.jifen.text=""+PlayerInfo.instance.trophy;
		}
	}

	__proto.initHistory=function(type,score){
		this.nickname.text=PlayerInfo.instance.nickName;
		this.head.skin=PlayerInfo.instance.avatar;
		if(type==1){
			this.apple.visible=true;
			this.jiangbei.visible=false;
			this.jifen.text=""+score;
			}else if(type==2){
			this.apple.visible=false;
			this.jiangbei.visible=true;
			this.jifen.text=""+score;
		}
	}

	return BeyondItem;
})(BeyondItemUI)


//class modules.battle_apple.view.room.AppleRewardItem extends ui.room.AppleRewardItemUI
var AppleRewardItem=(function(_super){
	function AppleRewardItem(){
		AppleRewardItem.__super.call(this);
	}

	__class(AppleRewardItem,'modules.battle_apple.view.room.AppleRewardItem',_super);
	var __proto=AppleRewardItem.prototype;
	__proto.setData=function(data){
		var configData=data.data;
		var iconArr=[];
		iconArr.push(this.mpIconChest);
		iconArr.push(this.mpIconGold);
		var countArr=[];
		countArr.push(this.mpTextChest);
		countArr.push(this.mpTextGold);
		this.mpTextRank.text=data.rank;
		var rewards=configData.Rewards.split(",");
		for(var i=0;i < rewards.length;i++){
			var itemStr=rewards[i];
			var itemId=int(itemStr.split("|")[0]);
			var itemCount=int(itemStr.split("|")[1]);
			var itemData=ItemModel.getItemConfigData(itemId);
			iconArr[i].skin="assets/textrue/itemicon/"+itemData.Icon+".png";
			countArr[i].text="X"+itemCount;
		}
	}

	return AppleRewardItem;
})(AppleRewardItemUI)


//class modules.battle_apple.view.room.AppleRoomItem extends ui.room.AppleRoomItemUI
var AppleRoomItem=(function(_super){
	function AppleRoomItem(){
		this.dataCfg=null;
		this.dataInfo=null;
		this.count=0;
		this.shopId=0;
		this.type=0;
		this.isHook=false;
		this.hasAskCount=0;
		this.maxAskCount=0;
		AppleRoomItem.__super.call(this);
		this.addEvents();
	}

	__class(AppleRoomItem,'modules.battle_apple.view.room.AppleRoomItem',_super);
	var __proto=AppleRoomItem.prototype;
	__proto.addEvents=function(){
		this.mpBtnSend.on("click",this,this.onButtonClickSend);
		this.mpBtnHook.on("click",this,this.onButtonClickHook);
		EventMgr.ins.on("REFRESH_ROOM_ITEM",this,this.recvItemUpdate);
	}

	__proto.removeEvents=function(){
		this.mpBtnSend.off("click",this,this.onButtonClickSend);
		this.mpBtnHook.off("click",this,this.onButtonClickHook);
		EventMgr.ins.off("REFRESH_ROOM_ITEM",this,this.recvItemUpdate);
	}

	__proto.recvItemUpdate=function(itemId){
		if(this.dataCfg && this.dataCfg.ItemID && itemId==this.dataCfg.ItemID){
			this.initCount();
		}
	}

	__proto.setData=function(itemId){
		this.dataCfg=ItemModel.getItemConfigData(itemId);
		this.mpTextName.text=LanguageMgr.Ins.GetLan(this.dataCfg.Name.toString());
		this.mpIconItem.skin=PathMgr.getItemIcon(this.dataCfg);
		this.mpTextDesc.text=LanguageMgr.Ins.GetLan(this.dataCfg.Desc.toString());
		this.type=int(this.dataCfg.Param1);
		if(this.type==1){
			this.mpIconGold.visible=false;
			this.mpTextName.x=110;
			this.mpImgSend.skin="appleGame/language/"+LanguageMgr.Ins.country+"/room/ui_shuoyao.png";
			}else{
			this.mpIconGold.visible=true;
			this.mpTextName.x=140;
			this.mpImgSend.skin="appleGame/language/"+LanguageMgr.Ins.country+"/room/ui_goumai.png";
			this.initGoldData();
		}
		this.mpImgHook.visible=this.isHook;
		this.hasAskCount=PlayerInfo.instance.dayShootAskTimes;
		this.maxAskCount=99999;
		this.initCount();
	}

	__proto.initCount=function(){
		this.dataInfo=PlayerInfoMgr.ins.itemIdDic[this.dataCfg.ItemID];
		if(this.dataInfo){
			this.count=this.dataInfo.count;
			}else{
			this.count=0;
		}
		if(this.count > 0){
			this.mpTextCount.visible=true;
			this.mpTextCount.text=this.count+"";
			}else{
			this.mpTextCount.visible=false;
		}
	}

	__proto.onButtonClickSend=function(){
		if(this.type==1){
			if(this.hasAskCount >=this.maxAskCount){
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9070088"));
				return
			}
			EventMgr.ins.event("RECORD_ASKFOR_ID",this.dataCfg.ItemID);
			SocketManager.Instance.out.sendGetFriendList();
			}else{
			SocketManager.Instance.out.reqShopBuy(8,this.shopId);
		}
	}

	__proto.onButtonClickHook=function(){
		if(this.count <=0){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9070089"));
			this.resetBg();
			return;
		}
		this.isHook=!this.isHook;
		if(this.isHook){
			this.selectBg();
			}else{
			this.resetBg();
		}
		LocalBattleMgr.getInstance().refreshItem(this.dataCfg.ItemID,this.isHook);
		this.mpImgHook.visible=this.isHook;
	}

	__proto.initGoldData=function(){
		this.shopId=int(this.dataCfg.Param2);
		if(this.shopId !=0){
			var shopData=ShopModel.getShopConfigByID(this.shopId);
			if(shopData.CurrencyType==4){
				this.mpIconGold.skin=PathMgr.getBoxIcon("pink");
				}else if(shopData.CurrencyType==2){
				this.mpIconGold.skin=PathMgr.getBoxIcon("gems");
				}else{
				this.mpIconGold.skin=PathMgr.getBoxIcon("gold");
			}
			this.mpTextName.text=shopData.Price+"";
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvents();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__proto.resetBg=function(){
		this.mpImgBg.skin="appleGame/room/fruit/ui_liebiaodi.png"
	}

	__proto.selectBg=function(){
		this.mpImgBg.skin="appleGame/room/fruit/ui_liebiaoxzdi.png"
	}

	return AppleRoomItem;
})(AppleRoomItemUI)


//class ui.hall.HallMainViewUI extends laya.ui.BaseView
var HallMainViewUI=(function(_super){
	function HallMainViewUI(){
		this.mainbox=null;
		this.boxPlayerMsg=null;
		this.pro_exp=null;
		this.img_Icon=null;
		this.lab_progressNum=null;
		this.lab_level=null;
		this.imgMedal=null;
		this.lab_userName=null;
		this.yueCard=null;
		this.master_Resource_Card=null;
		this.master_Growing_Card=null;
		this.btnInvitePay=null;
		this.btn_vip=null;
		this.viplv=null;
		this.img_vipTipPoint=null;
		this.freeBox=null;
		this.freeBG=null;
		this.freeBoxPro=null;
		this.pogBar=null;
		this.freeName=null;
		this.txtTime1=null;
		this.freeBoxGet=null;
		this.boxFree=null;
		this.boxWin=null;
		this.winBG=null;
		this.boxWinProgress=null;
		this.winbox_progress=null;
		this.txtNum=null;
		this.winGet=null;
		this.winName=null;
		this.winTimerText=null;
		this.winBox=null;
		this.bottomCenterBox=null;
		this.btnPvp=null;
		this.btnPve=null;
		this.btnPve_lock=null;
		this.pveLevelTxt=null;
		this.btn_levelBox=null;
		this.viewbox=null;
		this.rightUpBox=null;
		this.dmdBox=null;
		this.imgFill=null;
		this.imgGems=null;
		this.btn_addGems=null;
		this.lab_diamond=null;
		this.pinkBox=null;
		this.btn_addFen=null;
		this.pinkDmd=null;
		this.coinBox=null;
		this.coinbg=null;
		this.imgGold=null;
		this.btnGold=null;
		this.lab_gold=null;
		this.otherBox=null;
		this.btn_setup=null;
		this.btnEmail=null;
		this.emailTipsPoint=null;
		this.boxTools=null;
		this.btn_rank=null;
		this.btnSeason=null;
		this.btn_skill=null;
		this.skillRed=null;
		this.skillRedTxt=null;
		this.btn_badge=null;
		this.guildTipsPoint=null;
		this.btn_shop=null;
		this.btn_medal=null;
		this.taskRed=null;
		this.taskRedTxt=null;
		this.activityView=null;
		this.marquee=null;
		this.chat_box=null;
		this.chatBriefView=null;
		this.friendBtn=null;
		this.friendsTipsPoint=null;
		this.tipsView=null;
		HallMainViewUI.__super.call(this);
		var temp=HallMainViewUI.uiView;
		HallMainViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(HallMainViewUI.uiView);
	}

	__class(HallMainViewUI,'ui.hall.HallMainViewUI',_super);
	var __proto=HallMainViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.hall.view.MainBoxView",MainBoxView);
		View.regComponent("Text",Text);
		View.regComponent("modules.hall.view.MainActivityView",MainActivityView);
		View.regComponent("modules.hall.view.HallMarqueeView",HallMarqueeView);
		View.regComponent("modules.chat.view.ChatBriefView",ChatBriefView);
		View.regComponent("ui.hall.tips.PrivilegeTipsUI",PrivilegeTipsUI);
		ClassUtils.createByJson(uiData,this,this);
	}

	HallMainViewUI.uiView="eJzNWktv48Yd/yoFe5VlzvDtW6xmnQXihZE4TRZFYFDiiJqYD5UP2c5iLyn6uBS99dReeuslQIFegn4eI+m36Dw45Aw5lCh7t9l9CCI1M//37/8g3xjVwxYZZ8Z5WKJfY3RnzIxtkW9L4+yNcYejamOcAWC5M2ODcLypjDPXNt/OjNUGJ5Fx9ps3Yv/LNIyRvPnBODNnxj37VA4qb3FGNmzCJFnGp8t4vs1isjHN6xJdb4q8jsnSdZiUqLn5cRYuExS1N2VO3s5aDs7z+x59yOgTkruwIAvSEGdLsmgq+1bgsQNOBkzX+Gb9DeN7DwOcKCF4lYQPqLgs48mU+4qzLFthgTJQ3TeKE+rwfZmZqyKPC1SW54QL9XDHZqcD6LTnQxMKJZGVN+h+a9DrpCYnmXMwoL1tDm84KPG36KLARCzDnAFrRj8kxiCUGdPJ63CBgakTM9k1PnLwFHaI3Url+0IonMY3L1d5JmsLyMd9Gi5R0j/O5Ux5sgPb4sgkXLZqeFWnZG+F7sm5BjDNU/KfqqUq8lu0yJOcbvilaTsL323vM/cU3ADC6jrPqs+JJsmVw6/Iro8KHFLGVuKUNftD7ixz6kdVUZOICBMcU6WtUFahwpgqmel2HuDLgiVoxzZxkaijjDDqjzNKxF0xcScyqrNo0PAJJENeoogRavwkLEtUlaeUU0LhNKW/nmJia3vgMzpVAB7iwO7cBniKkQkAFa/CFHUWXmxQUTzIDm7LSoHmE5WSoHWlMPzqvK4q5rUKyyZXCwRdANumYPmhRouwiIxBIIEmWLd4l1evOZvs+1f8uxBGBdX9LACqvgELaVgS4958hsq8LlboRs8PPMBPRnU+etiTuHW9HosXRX6Hs3iEQ6vhUOVE2XOYuA043DpmG2HLKnuZ7XCFrsKHIdXtVqDqKkzQawrAXnPxFbuYIrDb0JRI3uzwdkhtk2fxsq6GQG7PiHvRD3I7YYFzZkzOXyLDtM7htCFFuEh2cuxYh0DgpEnjlozm5JhrvL3KMYmzgVAZumuC/2vyd1+FAGzADm8dY10gdH5EjdBmamn7xZCj5b0mhw3Z4WDk9JghqVzLz3iKt4CofEQqbIugbR7z9RPS+80dK5i0Wd6kWd6UDWkewlpPqLphKgCyoCrGPv7+zz/9+4fH7//+4/f/GkVa4LZIe4lXRV7m6+oXr8NPEO5h7uKYRKRj3eI+KCGu11ZM1X11jVMEpBIAkpypLQBWowWAd3QBIEQo2AlvFU/Xprqg5xRB0HO0C1R1Qvz43Q+Pf/zPf//xh8e//FUji2+7EKiy5DtUrJP8jnoSjiIkl1twrG7YZzi4XpvoeRXECY+EoMUf4s8viLSjBQSB5ZSWD6fLML/HIQF6MMBjW8Zj++0BjIGwhzGEhS8J6SdCDInJZyBM48gnPWYElByJM7ziptYc4AyHjhZKOsD5v8ENz4FSYdclIRKySs1unR4brsF7D1fL7YerJ+n2fYYqfP+hqsUnp181+IEksZoffvrd3x7/9M82Pxxhup54k1IIseCKtXTPSSH+IIXI4tEUUlxT4Z6VRsb8cr9weg+dVJYFlgxMDG+mAiscAitQkBWoUXIZMgr9KRXFocZ3uno3J2VxumCW4UwVdVZhXsfnUZ2gck7hZ74jh83lg/fDJ2haZ8cBHaxQywoDWLang9CROt0D88bpLUsq1a92UqWeEFXVRP2niw3OUIlOBWymJdCOzqi2tTCeJw99BqDFyPtEcQXKIuKBfO0GUz/c0vKarDVIFj0BEM5d3/Qd0l1YPgw8fwaBO3eBZ0IAPdcJHNflywJLuuvNgOvOPdtuN/OdsxMHzJuN7FcA2IEWCIDtN0dA2n0Qsb9sWnN+tehc1zRZXK5xknQBYjKHVp3nkAVsU7UAmmQB+HwLNOTd/RZQVOUFgU81bc8VewREf17fRnSZ3gLmYKlNTwDvTOWa8DF5KQQDGqm4xMsEtWNdWfk3Sb66nVYh0crKHdQUZZ0PqqEGXZUBExAdl5iDgRZDtjv0KZ2DXbNdPRBenDdqOJhhaMsyjrVt8vh6grdaFg9X15X7ejasU5B31GGjb5a8vJpae4rhhT/aY7fjEcEGactL3pcfbr97pS0FYzag3+9E3GaW3ZVGTtB2Yyx5fbHl24ZhKT09cHVKGJLjXZPldH0rcNpRTpRGfEc7jwqe/HDEtgZKpvlyGYNhRQwpVvJ/MnH3UNJu2lgLaMZ2OI1fkJgethacC/qbtjT3aWnuH6wXIKcNO6tZnkT6AqVlR3qVpykpFWJys1ckgDnsagR20aZeclyYrTZ5wWoJR1yxWsI5PDVrciFwoBxdYRSprKlaOSqa2gGI5igCx2JkdaBM5nq0O8zyW4bpvDrCIVFd1JaR5igwwamDaV3LMhYowPOlQGktvMXZbS9StIXShxMpns5dVfekjwFRFn+7qQngRuFBT21H3eJ7b/RuTZjttl5q9bz0BWviPjAndTVOSl3hV+nP5qCm7kHPKhfNS+sh/rPcszt2GY+Z5V16K/cK6ZGuCq5UZwNwJTd/XnBV2fqQfZYCa8y5HffVJz30m+a6vElgnWb3LoVgLq82ossVzDn29C4U8sEE74Q6SCHNe615YCRZ5wkPhrgX6OE70NhpL8fQVDj+OA3xaPXyPhj2NQzr2hPSp7V8IspkVyI/49GVYzfzfL9zCsuVJiD313melJJTeNoXd8ZajaYvPrGh6hdFmN1OaDWogtyB1ie0OA1dSyX7OQrLPJtI13kGXWB6vTi4VYrivYTtp7rZidv0NIIyo/oZ0sDjRluEO7QId7T0dFjX9AFd2xv0CV9Lk0iw9wWQd9bcCgv4PY9bhlE8ZRxDLSCe2YtSy5beKqDfj7YM11SXTeOabJoYwJNFhk7f6Tb5lBEglRgO5hwjoOmKyLJ8lViqvlGzlxp4qoc3ybVzOWt0BFSF5e3xri9lZjA1DIBAdxEGVo+H0ShwnhgF/Xn2R6sK73D1oBlqu5Z4Ka4d94Tq6kMzbeVw2UM+Icsuw+K3NRq88/nAnwuzIV075kj52gMk+6fuH+PYTuP78itEXeW8CaubpVLTuFBn1gVZeF5gtNYI0kyvOlRd9RYPpaEruDTqwRPiy2601j1UxyiLzqupWcub9JLjiRDKU+mUR2PSVUGcI0ExojsHg9qmpG6pVGTRQGs15uanP86V8754yaj9DytN020=";
	return HallMainViewUI;
})(BaseView)


//class modules.chat.item.ChatBoxListItem extends ui.chat.ChatFullView.ChatBoxItem.ChatBoxListItemUI
var ChatBoxListItem=(function(_super){
	function ChatBoxListItem(){
		this._channel=null;
		ChatBoxListItem.__super.call(this);
	}

	__class(ChatBoxListItem,'modules.chat.item.ChatBoxListItem',_super);
	var __proto=ChatBoxListItem.prototype;
	__proto.initialize=function(){
		laya.ui.Component.prototype.initialize.call(this);
		this._channel=new NImage;
		this.addChild(this._channel);
	}

	__proto.onClickMsg=function(e){
		var data=this.dataSource;
		var params=data.param.split(",");
		var opType=int(params.shift());
		switch (opType){
			case 10000:{
					if (int(params[2])==11){
						if (CampaignMgr.ins.checkCampaignEnable(int(params[3]))){
							RoomMgr.ins.enterRoom(params[1],params[4]);
						}
						else{
							TipsManager.Instance().showLanTips(14300174);
							return;
						}
					}
					else{
						RoomMgr.ins.enterRoom(params[1],params[4]);
					}
					break ;
				}
			}
		e.stopPropagation();
	}

	__proto.onPlayerWidget=function(playerInfo,e){
		var opers=[],item;
		var playerId=playerInfo.playerId;
		item={type:"OP_VIEW_PROFILE"};
		item.label=LanguageMgr.Ins.GetLan("9004136");
		opers.push(item);
		item={type:"OP_GUILD_INVITE"};
		item.label=LanguageMgr.Ins.GetLan("9040040");
		if (Boolean(playerInfo.guildName)){
			item.gray=true;
		}
		else{
			item.gray=false;
		}
		opers.push(item);
		if (!FriendsMgr.ins.getIsMyFriend(playerId)){
			item={type:"OP_ADD_FRIEND"};
			item.label=LanguageMgr.Ins.GetLan("9004137");
			opers.push(item);
		}
		else{
			item={type:"OP_DEL_FRIEND"};
			item.label=LanguageMgr.Ins.GetLan("9040044");
			opers.push(item);
			item={type:"OP_CHAT_FRIEND"};
			item.label=LanguageMgr.Ins.GetLan("9040043");
			opers.push(item);
		}
		item={type:"OP_BLACK_LIST"};
		if (ChatMgr.ins.checkIsInBlackList(playerInfo.playerId)){
			item.label=LanguageMgr.Ins.GetLan("9040041");
		}
		else{
			item.label=LanguageMgr.Ins.GetLan("9040042");
		}
		opers.push(item);
		PlayerMenuView.ins.dataSource={data:{
				playerId:playerId,
				avatar:playerInfo.avatar,
				sex:playerInfo.sex ? 1 :0,
				name:playerInfo.nickName,
				trophy:playerInfo.trophy,
				guild:playerInfo.guildName
			},
			opers:opers};
		PlayerMenuView.ins.setPosition(e.stageX,e.stageY);
		PlayerMenuView.ins.show();
		e.stopPropagation();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this._channel=null;
		if (this.box){
			this.imgHead.off("click",this,this.onPlayerWidget);
		}
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		var _$this=this;
		Laya.superSet(ChatBoxListItemUI,this,'dataSource',value);
		var data=value;
		var type=data.type;
		var textfiled=new HTMLDivElement();
		textfiled.style.fontSize=22;
		textfiled.style.fontFamily="SimHei";
		textfiled.style.lineHeight=30;
		if (ChatConst.COLOR_SETTING[type]){
			textfiled.style.color=ChatConst.COLOR_SETTING[type];
		}
		else{
			textfiled.style.color=ChatConst.COLOR_SETTING['system'];
		};
		var html='';
		this._channel.skin=null;
		if (type > 9050000 || type==ChatConst.SYSTEM_TYPE){
			this.box.destroy();
			this.box=null;
			this.addChild(textfiled);
			textfiled.y=0;
			textfiled.width=this.width;
			this._channel.skin="assets/textrue/language/"+LanguageMgr.Ins.country+"/chat/ui_biaoqian_xitong.png";
			this._channel.y=0;
			html+="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
			if (UrlParam.PARAMS["PLID"]=="wx"){
				html+="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
			};
			var h2;
			if (type==ChatConst.SYSTEM_TYPE){
				h2=LanguageMgr.Ins.GetLan.apply(LanguageMgr.Ins,[data.content].concat(data.param.split(",")));
			}
			else if (type==9050004){
				h2=data.content;
			}
			else{
				var arrs=data.content.split(',');
				var itemVO;
				var skillPerformanceVO;
				var value1='<font color="#10e0e2">'+arrs[0]+'</font>';
				var value2='';
				var value3=''
				switch (type){
					case 9050003:{
							skillPerformanceVO=SkillModel.getSkillPerformanceBySkillId((SkillModel.getSkillConfigData(arrs[1])).Display);
							value2=LanguageMgr.Ins.GetLan(skillPerformanceVO.NameDisplay+'');
							value3=arrs[2];
							break ;
						}
					default :{
							itemVO=ItemModel.getItemConfigData(arrs[1]);
							value2=LanguageMgr.Ins.GetLan(itemVO.Name+'');
							break ;
						}
					}
				h2=LanguageMgr.Ins.GetLan(type,value1,value2,value3);
			}
			html+=h2;
			try {
				textfiled.innerHTML=html;
				}catch(e){
				textfiled.innerHTML="";
				console.log(">>>>>>>>HTML错误:",html);
			}
			this.height=textfiled.contextHeight+textfiled.y;
		}
		else{
			textfiled.y=54;
			var playerInfo=data.sendPlayer;
			var nickName=playerInfo.nickName;
			var sex=playerInfo.sex;
			var trophy=playerInfo.trophy;
			var headImg=playerInfo.avatar;
			var paddingTop='0';
			var content;
			if (!Boolean(data.param)){
				content=ChatUtils.onGetChatInfoZH(data.content,{width:"30px",
					height:"30px",
					paddingTop:paddingTop,
					imgPaddingTop:paddingTop});
			}
			else{
				var params=data.param.split(",");
				var opType=int(params.shift());
				switch (opType){
					case 10000:{
							if (int(params[2])==11){
								var campaignVO=CampaignModel.getConfigData(int(params[3]));
								content=LanguageMgr.Ins.GetLan(9050008,"",campaignVO.Name+"-"+LanguageMgr.Ins.GetLan(CampaignConst.DifficultLan[campaignVO.Difficult]))+"</span>";
							}
							else{
								content=LanguageMgr.Ins.GetLan(9050008,"",LanguageMgr.Ins.GetLan(14300178))+"</span>";
							}
							content+='<font color="#10e0e2">'+LanguageMgr.Ins.GetLan(14300176)+'</font>'+"<span style='padding:"+paddingTop+" 0 0 0'>";
							textfiled.on("click",this,this.onClickMsg);
							break ;
						}
					}
			};
			var rankVo=RankModel.getDivison(trophy);
			var bubble;
			var vipLv=playerInfo.vipLevel;
			if (playerInfo.playerId==PlayerInfo.instance.playerId){
				this.imgBg.x=295;
				this.imgHead.x=299;
				this.vSex.x=242;
				this.imgMedal.x=196;
				if(vipLv !=0){
					this.vipBg.x=120;
					this.imgVipLv.x=132;
				}
				else{
					this.txtName.width+=80;
				}
				this.txtName.align="right";
				this.txtName.x=0;
				textfiled.x=26;
				bubble=this.imgRBubble;
				this.imgLBubble.destroy();
				this.imgLBubble=null;
			}
			else{
				textfiled.x=114;
				bubble=this.imgLBubble;
				this.imgRBubble.destroy();
				this.imgRBubble=null;
				this.imgHead.on("click",this,this.onPlayerWidget,[playerInfo]);
				if(vipLv==0){
					this.vSex.x-=70;
					this.imgMedal.x-=70;
					this.txtName.x-=70;
				}
			}
			if(vipLv!=0){
				this.imgVipLv.skin="assets/textrue/vip/ui_v"+vipLv+".png";
			}
			else{
				this.vipBg.visible=false;
				this.imgVipLv.visible=false;
			}
			this.txtName.text=StringUtils.subName(nickName,180,18);
			headImg && PlayerInfoMgr.ins.getHeadImgUrl(headImg,Handler.create(this,function(skin){
				_$this.imgHead.skin=skin;
			}));
			this.vSex.selectedIndex=sex ? 1 :0;
			if (rankVo && rankVo.hasOwnProperty('Division')){
				this.imgMedal.skin="assets/textrue/medal/icon"+rankVo.Division+".png";
			}
			this.addChild(textfiled);
			textfiled.width=240;
			html+="<span style='padding:"+paddingTop+" 0 0 0'>";
			html+=content;
			html+="</span>";
			try {
				textfiled.innerHTML=html;
				}catch(e){
				textfiled.innerHTML="";
				console.log(">>>>>>>>HTML错误:",html);
			}
			bubble.height=textfiled.contextHeight+22;
			this.height=textfiled.contextHeight+55;
		}
	});

	return ChatBoxListItem;
})(ChatBoxListItemUI)


//class modules.chat.item.ChatDonateTip extends ui.chat.ChatFullView.ChatGuild.DailyDonateTipUI
var ChatDonateTip=(function(_super){
	function ChatDonateTip(){
		// lab_6.text=LanguageMgr.Ins.GetLan("9070031");
		this.gap=32;
		ChatDonateTip.__super.call(this);
		this.ptk=new HTMLDivElement();
		this.xyk=new HTMLDivElement();
		this.reset=new HTMLDivElement();
		this.addChild(this.ptk);
		this.addChild(this.xyk);
		this.addChild(this.reset);
		this.initStyle(this.ptk);
		this.initStyle(this.xyk);
		this.initStyle(this.reset);
		this.ptk.y=45;
		this.xyk.y=73;
		this.reset.y=101;
		this.lab_3.text=LanguageMgr.Ins.GetLan("9070028");
	}

	__class(ChatDonateTip,'modules.chat.item.ChatDonateTip',_super);
	var __proto=ChatDonateTip.prototype;
	__proto.initStyle=function(ele){
		ele.style.fontSize=22;
		ele.style.fontFamily='Microsoft Yahei';
		ele.style.color='#ffffff';
		ele.x=16;
		ele.style.wordWrap=false;
	}

	/**
	*根据文本内容的长度变化动态修改此视图的长度
	*/
	__proto.changeWidth=function(dif){
		this.lab_3.width=this.width=this.bg.width=DailyDonateTipUI.uiView['props']['width']+dif;
		this.line.width=this.width-18;
	}

	return ChatDonateTip;
})(DailyDonateTipUI)


//class modules.chat.item.ChatExpression extends ui.chat.ChatFullView.ChatExpressionUI
var ChatExpression=(function(_super){
	function ChatExpression(){
		ChatExpression.__super.call(this);
		var start=9001101;
		var end=9001136;
		var expressions=[];
		for (var i=start;i < end;i++){
			expressions.push(i);
		}
		this._list.array=expressions;
		this._list.scrollBar.hide=true;
		this._list.scrollBar.elasticBackTime=250;
		this._list.scrollBar.elasticDistance=25;
		this.y=640+249;
		this.on("click",this,this.onViewTouched);
		this.btn_close.on("click",this,this.hideUiExpression);
	}

	__class(ChatExpression,'modules.chat.item.ChatExpression',_super);
	var __proto=ChatExpression.prototype;
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		Tween.clearTween(this);
		this.off("click",this,this.onViewTouched);
		this.btn_close.off("click",this,this.hideUiExpression);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__proto.onViewTouched=function(e){
		e.stopPropagation();
	}

	__proto.hideUiExpression=function(){
		var _this=this;
		if (!_this.parent){
			return;
		}
		Tween.to(_this,{y:640+249},250,null,Handler.create(_this,function(){
			_this.removeSelf();
		}));
	}

	__proto.showUiExpression=function(){
		LayerMgr.ins.addToLayer(this,3,false);
		Tween.to(this,{y:640-249},250);
	}

	return ChatExpression;
})(ChatExpressionUI)


//class modules.chat.item.ChatExpressionItem extends ui.chat.ChatFullView.ChatExpression.ChatExpressionItemUI
var ChatExpressionItem=(function(_super){
	function ChatExpressionItem(){
		ChatExpressionItem.__super.call(this);;
	}

	__class(ChatExpressionItem,'modules.chat.item.ChatExpressionItem',_super);
	var __proto=ChatExpressionItem.prototype;
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.off("click",this,this.onItemClick);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__proto.onItemClick=function(){
		EventMgr.ins.event('event_add_expression',LanguageMgr.Ins.GetAssignLan(LanguageMgr.Ins.countryAry[0],this.dataSource));
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(ChatExpressionItemUI,this,'dataSource',value);
		this.icon.skin='assets/textrue/biaoqing/'+value+'.png';
		this.on("click",this,this.onItemClick);
	});

	return ChatExpressionItem;
})(ChatExpressionItemUI)


//class modules.battle.part.monster.SummonMonster extends modules.battle.part.monster.BaseMonster
var SummonMonster=(function(_super){
	function SummonMonster(msg){
		SummonMonster.__super.call(this,msg);
	}

	__class(SummonMonster,'modules.battle.part.monster.SummonMonster',_super);
	var __proto=SummonMonster.prototype;
	__proto.initBaseInfo=function(info){
		var msg=info;
		this.robotId=msg.template;
		var npcConfig=NPCModel.getNPCConfigData(this.robotId);
		this.level=0;
		this.maxHp=npcConfig.HP;
		this.hp=msg.hp;
		this.side=msg.directionType;
		this.livingId=msg.livingId;
		this.posX=msg.x;
		this.posY=msg.y;
		this.headurl="";
		this.syncHp(this.hp,0);
		this._npcPreforConfig=NPCModel.getNpcPerformanceByNpcId(this.robotId);
		this.nickName=StringUtils.subName(LanguageMgr.Ins.GetLan(this._npcPreforConfig.Name),125,25);
		this._actConfig=this._npcPreforConfig.ActConfig;
		this.level=npcConfig.Level;
	}

	__proto.initView=function(msg,screenwidth,screenheight){
		this.init(screenwidth,screenheight,this.moveDir);
		this.x=this.posX;
		this.y=screenheight-this.posY;
		this._container=new Sprite();
		this._container.mouseEnabled=true;
		this._container.mouseThrough=true;
		this.addChild(this._container);
		this._aniSkeleton=new AniSkeleton(this._actConfig,"npc","idle",true,Handler.create(this,this.playEnd,null,false));
		this._container.addChild(this._aniSkeleton);
		this.turnRight(this.moveDir==Fighter.DIR_RIGHT);
		this.checkAngle(true);
		this.createMenu(msg);
		this.syncHp(this.hp,this.hdHp);
	}

	return SummonMonster;
})(BaseMonster)


//class modules.chat.item.ChatGuildBox extends ui.chat.ChatFullView.ChatGuild.ChatGuildBoxUI
var ChatGuildBox=(function(_super){
	function ChatGuildBox(){
		ChatGuildBox.__super.call(this);;
	}

	__class(ChatGuildBox,'modules.chat.item.ChatGuildBox',_super);
	return ChatGuildBox;
})(ChatGuildBoxUI)


//class modules.battle.part.npc.DanDanJi extends modules.battle.part.npc.BaseNpc
var DanDanJi=(function(_super){
	function DanDanJi(msg){
		this.isDie=false;
		DanDanJi.__super.call(this,msg);
	}

	__class(DanDanJi,'modules.battle.part.npc.DanDanJi',_super);
	var __proto=DanDanJi.prototype;
	__proto.initView=function(msg,screenwidth,screenheight){
		_super.prototype.initView.call(this,msg,screenwidth,screenheight);
	}

	__proto.playEnd=function(){
		if (this.npcSkeleton.nameOrIndex=="explode"){
			this.npcNode.visible=false;
			if (this.isDie){
				this.destroyFighter();
			}
		}
	}

	__proto.die=function(){
		modules.battle.part.role.Fighter.prototype.die.call(this);
		this.stop();
		this.isDie=true;
		this.playNpcAni("explode",false);
	}

	__proto.launch=function(dir){
		modules.battle.part.role.Fighter.prototype.launch.call(this,dir);
		this.stop();
		this.playNpcAni("explode",false);
	}

	__proto.stop=function(){
		modules.battle.part.role.Fighter.prototype.stop.call(this);
		this.playNpcAni("idle",true);
	}

	__proto.walk=function(){
		modules.battle.part.role.Fighter.prototype.walk.call(this);
		this.playNpcAni("walk",true);
	}

	__proto.calcDelayTime=function(){
		return 1000;
	}

	return DanDanJi;
})(BaseNpc)


//class modules.battle.part.npc.DunQiang extends modules.battle.part.npc.BaseNpc
var DunQiang=(function(_super){
	function DunQiang(msg){
		this.firstBirth=true;
		DunQiang.__super.call(this,msg);
	}

	__class(DunQiang,'modules.battle.part.npc.DunQiang',_super);
	var __proto=DunQiang.prototype;
	__proto.initView=function(msg,screenwidth,screenheight){
		_super.prototype.initView.call(this,msg,screenwidth,screenheight);
		this.playNpcAni("born",false);
	}

	__proto.playEnd=function(){
		if (this.npcSkeleton.nameOrIndex=="die"){
			this.destroyFighter();
		}
		else if (this.npcSkeleton.nameOrIndex=="born" || this.npcSkeleton.nameOrIndex=="hit"){
			if (this.firstBirth && !Cache.ins.battle.isRandomFight()){
				this.firstBirth=false;
				this.playNpcAni("hide",false);
			}
			else{
				this.playNpcAni("idle",true);
			}
		}
	}

	__proto.syncLiving=function(msg){
		if (msg.isHide){
			this.playNpcAni("hide",false);
		}
		else{
			this.playNpcAni("born",false);
		}
	}

	__proto.showDamage=function(damage,isGray){
		(isGray===void 0)&& (isGray=0);
		modules.battle.part.role.Fighter.prototype.showDamage.call(this,damage,isGray);
		this.playNpcAni("hit",false);
	}

	__proto.showCrital=function(damage,isGray){
		(isGray===void 0)&& (isGray=0);
		modules.battle.part.role.Fighter.prototype.showCrital.call(this,damage,isGray);
		this.playNpcAni("hit",false);
	}

	__proto.die=function(){
		modules.battle.part.role.Fighter.prototype.die.call(this);
		this.playNpcAni("die",false);
	}

	return DunQiang;
})(BaseNpc)


//class modules.chat.item.ChatRoomListItem extends ui.chat.ChatFullView.ChatRoom.ChatRoomItemUI
var ChatRoomListItem=(function(_super){
	function ChatRoomListItem(){
		ChatRoomListItem.__super.call(this);;
	}

	__class(ChatRoomListItem,'modules.chat.item.ChatRoomListItem',_super);
	var __proto=ChatRoomListItem.prototype;
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.off("click",this,this.onItemClick)
		laya.ui.View.prototype.destroy.call(this,destroyChild)
	}

	__proto.onItemClick=function(){
		var chatChannelInfo=this.dataSource;
		if (chatChannelInfo){
			if (chatChannelInfo.id !=ChatMgr.ins.curChannelLine){
				if (chatChannelInfo.num < 1000){
					ChatMgr.ins.sendChangeChatLine(chatChannelInfo.id);
				}
				else{
					TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002232"));
				}
			}
			EventMgr.ins.event('event_click_line_item');
		}
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(ChatRoomItemUI,this,'dataSource',value);
		var chatChannelInfo=value;
		if (chatChannelInfo){
			var id=chatChannelInfo.id;
			var num=chatChannelInfo.num;
			this.xianlu.text=LanguageMgr.Ins.GetLan("9002252")+id;
			for (var i=0,n=ChatConst.LINE_CONFIG.length;i < n;i++){
				if (num > ChatConst.LINE_CONFIG[i]['num']){
					this.state.skin=ChatConst.LINE_CONFIG[i]['skin'];
					this.lc.text=LanguageMgr.Ins.GetLan(ChatConst.LINE_CONFIG[i]['lang']);
					this.lc.color=ChatConst.LINE_CONFIG[i]['color'];
					break ;
				}
			}
			this.on("click",this,this.onItemClick);
		}
		else{
			this.off("click",this,this.onItemClick);
		}
	});

	return ChatRoomListItem;
})(ChatRoomItemUI)


//class ui.menu.LoadUI extends laya.ui.BaseView
var LoadUI=(function(_super){
	function LoadUI(){
		this._box=null;
		this.progress=null;
		this.lab_content=null;
		this.labVersion=null;
		this.txtVersion=null;
		this.lab0=null;
		this.lab1=null;
		LoadUI.__super.call(this);
		var temp=LoadUI.uiView;
		LoadUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(LoadUI.uiView);
	}

	__class(LoadUI,'ui.menu.LoadUI',_super);
	var __proto=LoadUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	LoadUI.uiView="eJzFk11v0lAYx7/L8bbW00J56SVeDBMvTGamxixLgTM4rrRNe9yYhGQuiwK+sE0TEtmiidPMzc1E5yBshA8jLd3VvoKn7QqF+bLELEJCcx7O8+//93/OKQKyqCEggoRkoCmMFgADNF3VDCAWwQLOkBwQuVAEMiCHcDZHgBiHsMSAdA7LGSDeL/r9N/JSFgWbF4FIuwru74iQMYcV2iCrWaxcS0ywD7QsGJUvMQPZhFoYE43BiCvLxQLCEAoMmJd02jGTclt8vdAv3d7S1ayODCNBWwLynoJ29icY8+rXWU1xHCtSHgV3B21P3EYFMmb8aiTqGqf2F1Q9c0eXNCAS/SEaYMTjYZ9CllIzaVUhSHFk5iUZZx0jRNXokjjiIrD23psb22b1nd3p9Fp7LMs6jomuzqHrqqw6MldCgvMd1GkeDMBGkuRl1+HZ+/2wBI4Bs/Stk/gR3crz3orqJJE8jwhOS1Qp7WvPuh9a8d2lqVuk0yCmA1HclFJIHp9hNObNkHOG6Q+Rjwbop5BuYFUZ0vYrZWvjs1lrnh6/Oc8ZjvCQD3LyQyo+PEIFB1STOJ9EeBQJCamQg6Skc6p+j55eVvBXd6nHIazuipcuSgrjQVLok5ICOUc6xbFclIMsF/pvnHDIKaPZC2AK3qWMRON/ON1CYL4wcI6r383yYa/1wq58sVotq1w7PX5uPVvvH232G3Vn7m7xx9Ky9W3bWqnZT3es8lqvu2lVt+hOu9uw9z+ZtfrJTr3XqpqdV3TnxZKTkZTB9DKLwuWk6K7GL8dfkoxxXpLO83dJxmKBJLlhkidLy2b7oxdXv1G1V9acJL9W7G7TK/aOt+z2Ls3HXC33V5+Y+xXr5bpVPzypH9CdvfYujdF8/MFsN/uv31oHR/+WZOiSk5wu/QQTYF2+";
	return LoadUI;
})(BaseView)


//class modules.chat.view.ChatBriefView extends ui.chat.ChatBriefViewUI
var ChatBriefView=(function(_super){
	// private var chatItem :ChatBriefListItem;
	function ChatBriefView(){
		ChatBriefView.__super.call(this);
		this.initView();
		this.addEvent();
		var msgs=ChatMgr.ins.getAllMsg();
		if (msgs.length > 0){
			var msg=msgs[0];
			var item=new ChatBriefListItem(338);
			item.scrollRect=new Rectangle(0,0,340,30);
			item.x=12;
			item.dataSource=msg;
			this.box.addChild(item);
		}
		this.box.scrollRect=new Rectangle(0,0,340,30);
	}

	__class(ChatBriefView,'modules.chat.view.ChatBriefView',_super);
	var __proto=ChatBriefView.prototype;
	__proto.initView=function(){}
	__proto.addEvent=function(){
		ChatMgr.ins.on('event_channel_msg',this,this.onReviceMsg);
		this.on("click",this,this.onOpenFullView);
	}

	__proto.delEvent=function(){
		ChatMgr.ins.off('event_channel_msg',this,this.onReviceMsg);
		this.off("click",this,this.onOpenFullView);
	}

	__proto.onReviceMsg=function(msg,channel,removed){
		if (msg){
			if (channel=='guild' && msg.subType !=2)return;
			this.box.destroyChildren();
			var chatItem=new ChatBriefListItem(338);
			chatItem.scrollRect=new Rectangle(0,0,340,30);
			this.box.addChild(chatItem);
			chatItem.x=12;
			chatItem.dataSource=msg;
		}
	}

	__proto.onOpenFullView=function(){
		UIMgr.ins.openView("ChatFullView");
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return ChatBriefView;
})(ChatBriefViewUI)


//class ui.login.SmallLoadingUI extends laya.ui.BaseView
var SmallLoadingUI=(function(_super){
	function SmallLoadingUI(){
		this._progressBar=null;
		this.btn_close=null;
		this.lab_number=null;
		SmallLoadingUI.__super.call(this);
		var temp=SmallLoadingUI.uiView;
		SmallLoadingUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(SmallLoadingUI.uiView);
	}

	__class(SmallLoadingUI,'ui.login.SmallLoadingUI',_super);
	var __proto=SmallLoadingUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	SmallLoadingUI.uiView="eJxtkV1rwjAUhv/LGbsr2lqtmru5K2HIYDA2xigxPaZhaVKaVOuk/31p5mcxuTo5H8978h7A7ksEAgtq8F3gDgIoK10aIAfYiczmQKI4CQPIUfDcApmHYRsAy4XMgHwdzv26uW7dA4knUQANkPEkudewWhaUY69nNvMtozAJwPwI5eokVbx2lcPnXCg0OGS6KLQa1iI1BZVSapoJxZdMq0GpuBtIFct19QkkHExO0YeP2jY4818rzSs0ZkGrnogoSbwKt/TWJQmk5U3tlsoaffoocev+rZPR1+T1XDNXi9parXq80dTj4vn8BFxblTKpTfc9dxgZbY6rSrpG6bI3lBf/2NtpGv9DEgc5+jqOTzw3JlV1scZuPYuNsxnCR7iYHjlfNlrZN/GLl8hVPVWCdiympe4mPTB/Ohek4J1whsq6uW377e4fTOvFrA==";
	return SmallLoadingUI;
})(BaseView)


//class modules.chat.view.ChatFullView extends ui.chat.ChatFullViewUI
var ChatFullView=(function(_super){
	function ChatFullView(){
		this.ViewWidth=0;
		this.TabChannelMap={0:'system',
			1:'world',
			2:'guild',
			3:'room'};
		this._lastChannelIndex=-1;
		this._speakGap=0;
		this._expressionView=null;
		ChatFullView.__super.call(this);
		this.light
		this.donateAni
		this.ViewWidth=this.bg.width;
		this.initView();
		this.addEvent();
		if (SceneMgr.ins.isInScene(SceneType.BATTLE_SCENE)){
			this.TabChannelMap={0:'system',
				1:'world',
				2:'guild',
				3:'battle'};
		}
		else{
			this.TabChannelMap={0:'system',
				1:'world',
				2:'guild',
				3:'room'};
		};
		var channel=ChatMgr.ins.curChannel;
		var index=1;
		for (var i in this.TabChannelMap){
			if (this.TabChannelMap[i]==channel){
				index=int(i);
				break ;
			}
		}
		this.tabChannel.selectedIndex=index;
		this.onReviceChannelInfo();
		this.onSpeakerChange();
		this.updateModal();
	}

	__class(ChatFullView,'modules.chat.view.ChatFullView',_super);
	var __proto=ChatFullView.prototype;
	__proto.initView=function(){
		this.viewLine.removeSelf();
		this.viewDonate.removeSelf();
		this._expressionView=new ChatExpression();
		var channelName;
		if (SceneMgr.ins.isInScene(SceneType.BATTLE_SCENE)){
			channelName=[9070022,9070021,9004140,14300058];
		}
		else{
			channelName=[9070022,9070021,9004140,9070023];
		}
		for (var i=0,n=channelName.length;i < n;i++){
			(this.tabChannel.items [i]).label=LanguageMgr.Ins.GetLan(channelName[i]);
		}
		this._input.prompt=LanguageMgr.Ins.GetLan("9070024");
		this.btnSendNormal.label=LanguageMgr.Ins.GetLan("9070121");
		this.sendBarrageCheck.visible=PlayerInfo.instance.isOn(14);
		this.output._panel.vScrollBar.hide=true;
		this.output._panel.vScrollBar.elasticBackTime=200;
		this.output._panel.vScrollBar.elasticDistance=50;
		this.output._vbox["sortItem"]=this.sortItem;
		for (var key in this.TabChannelMap){
			this.updateMsgNum(this.TabChannelMap[key]);
		}
		this.viewLine._list.vScrollBarSkin="common/vscroll.png";
		this.viewLine._list.repeatX=1;
	}

	__proto.addEvent=function(){
		this.tabChannel.selectHandler=Handler.create(this,this.onSelectChannel,null,false);
		ChatMgr.ins.on('event_channel_msg',this,this.onReviceMsg);
		ChatMgr.ins.on('event_channel_info_msg',this,this.onReviceChannelInfo);
		EventMgr.ins.on("recv_speaker_change",this,this.onSpeakerChange);
		EventMgr.ins.on('event_click_line_item',this,this.onChangeLine);
		EventMgr.ins.on('event_add_expression',this,this.onAddExpression);
		EventMgr.ins.on('event_show_donate_tips',this,this.onShowDonateTips);
		EventMgr.ins.on('event_update_guild_item',this,this.onUpdateGuildItem);
		EventMgr.ins.on('event_remove_guild_item',this,this.onRemoveGuildItem);
		this.btnSendBarrage.clickHandler=Handler.create(this,this.onSendBarrageSetting,null,false);
		this.btnSendNormal.clickHandler=Handler.create(this,this.onSendMsg,[false],false);
		this.btnSendWorld.clickHandler=Handler.create(this,this.onSendMsg,[true],false);
		this.output._panel.vScrollBar.on("change",this,this.onVScrollBar);
		this.output.to_top.on("click",this,this.onClickToTop);
		this.viewGuildOpt.btnFriend.on("click",this,this.onFriend);
		this.viewGuildOpt.btnCancelBattle.on("click",this,this.onCancelBattle);
		this.btnExpression.on("click",this,this.onOpenExpression);
		this.btnLine.on("click",this,this.onOpenLine);
		this.shrinkage.on("click",this,this.onClickStage);
		this.viewLine.on("click",this,this.stopPropagation);
		this.viewDonate.on("click",this,this.stopPropagation);
		this.on("click",this,this.onClickView);
		this.stage.on("click",this,this.onClickStage);
	}

	__proto.delEvent=function(){
		ChatMgr.ins.off('event_channel_msg',this,this.onReviceMsg);
		ChatMgr.ins.off('event_channel_info_msg',this,this.onReviceChannelInfo);
		EventMgr.ins.off("recv_speaker_change",this,this.onSpeakerChange);
		EventMgr.ins.off('event_click_line_item',this,this.onChangeLine);
		EventMgr.ins.off('event_add_expression',this,this.onAddExpression);
		EventMgr.ins.off('event_show_donate_tips',this,this.onShowDonateTips);
		EventMgr.ins.off('event_update_guild_item',this,this.onUpdateGuildItem);
		EventMgr.ins.off('event_remove_guild_item',this,this.onRemoveGuildItem);
		this.output._panel.vScrollBar.off("change",this,this.onVScrollBar);
		this.output.to_top.off("click",this,this.onClickToTop);
		this.viewGuildOpt.btnFriend.off("click",this,this.onFriend);
		this.viewGuildOpt.btnCancelBattle.off("click",this,this.onCancelBattle);
		this.btnExpression.off("click",this,this.onOpenExpression);
		this.btnLine.off("click",this,this.onOpenLine);
		this.shrinkage.off("click",this,this.onClickStage);
		this.viewLine.off("click",this,this.stopPropagation);
		this.viewDonate.off("click",this,this.stopPropagation);
		this.off("click",this,this.onClickView);
		this.stage.off("click",this,this.onClickStage);
	}

	__proto.onSelectChannel=function(index){
		if (index==-1){
			return;
		};
		var lastChannel=this.TabChannelMap[this._lastChannelIndex];
		var channel=this.TabChannelMap[index];
		switch (channel){
			case 'system':{
					this._speakGap=0;
					this.input.visible=false;
					this.imgForbidden.visible=true;
					this.txtForbidden.text=LanguageMgr.Ins.GetLan("9070025");
					this.viewGuildOpt.visible=false;
					this.output._panel.height=540;
					this.btnSendBarrage.visible=false;
					break ;
				}
			case 'world':{
					this._speakGap=int(ConfigModel.getConfigData(1087).ConfigValue);
					var speakLvLimit=ConfigModel.getConfigData(1086).ConfigValue;
					if (PlayerInfo.instance.grade < speakLvLimit){
						this.input.visible=false;
						this.imgForbidden.visible=true;
						this.txtForbidden.text=LanguageMgr.Ins.GetLan("9002292",speakLvLimit);
					}
					else{
						this.input.visible=true;
						this.imgForbidden.visible=false;
						this.txtForbidden.text=LanguageMgr.Ins.GetLan("9070025");
					}
					this.btnLine.visible=true;
					this.btnSendNormal.visible=false;
					this.btnSendWorld.visible=true;
					this.btnSendBarrage.visible=true;
					this.sendBarrageCheck.visible=PlayerInfo.instance.isOn(14);
					this._input.x=62;
					this._input.width=225;
					this.viewGuildOpt.visible=false;
					this.output._panel.height=540;
					break ;
				}
			case 'guild':{
					if (!Boolean(PlayerInfo.instance.consortiaID)|| !GuildMgr.ins.myGuildInfo){
						TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan('9040021'));
						this.tabChannel.selectedIndex=this._lastChannelIndex==-1 ? 1 :this._lastChannelIndex;
						return;
					}
					this._speakGap=0;
					this.input.visible=true;
					this.imgForbidden.visible=false;
					this.txtForbidden.text=LanguageMgr.Ins.GetLan("9070025");
					this.btnLine.visible=false;
					this.btnSendNormal.visible=true;
					this.btnSendWorld.visible=false;
					this.btnSendBarrage.visible=false;
					this._input.x=12;
					this._input.width=328;
					this.viewGuildOpt.visible=true;
					this.output._panel.height=450;
					break ;
				}
			case 'room':{
					console.log("ROOM_CHANNEL")
					if (!UIMgr.ins.getView("PVPRoomView")&&!UIMgr.ins.getView("MulitPveRoomView")){
						TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan('9002182'));
						this.tabChannel.selectedIndex=this._lastChannelIndex==-1 ? 1 :this._lastChannelIndex;
						return;
					}
					this._speakGap=0;
					this.input.visible=true;
					this.imgForbidden.visible=false;
					this.txtForbidden.text=LanguageMgr.Ins.GetLan("9070025");
					this.btnLine.visible=false;
					this.btnSendNormal.visible=true;
					this.btnSendWorld.visible=false;
					this.btnSendBarrage.visible=false;
					this._input.x=12;
					this._input.width=328;
					this.viewGuildOpt.visible=false;
					this.output._panel.height=540;
					break ;
				}
			case 'battle':{
					if (!SceneMgr.ins.isInScene(SceneType.BATTLE_SCENE)){
						this.tabChannel.selectedIndex=this._lastChannelIndex==-1 ? 1 :this._lastChannelIndex;
						return;
					}
					this._speakGap=0;
					this.input.visible=true;
					this.imgForbidden.visible=false;
					this.txtForbidden.text=LanguageMgr.Ins.GetLan("9070025");
					this.btnLine.visible=false;
					this.btnSendNormal.visible=true;
					this.btnSendWorld.visible=false;
					this.btnSendBarrage.visible=false;
					this._input.x=12;
					this._input.width=328;
					this.viewGuildOpt.visible=false;
					this.output._panel.height=540;
					break ;
				}
			}
		this._lastChannelIndex=index;
		ChatMgr.ins.curChannel=channel;
		ChatMgr.ins.clearNewMsgNum(channel);
		this.updateMsgNum(channel);
		var msgList=ChatMgr.ins.getChannelMsg(channel);
		this.output._vbox.destroyChildren();
		for (var i=0,n=msgList.length;i < n;i++){
			this.addItem(msgList[i]);
		}
	}

	__proto.addItem=function(chat){
		var item;
		if (chat.type==5){
			if (chat.subType==10000){
				item=new ChatDonateItem();
				item.dataSource=chat;
				item.name="donate"+(chat.msg).donateId;
				this.output._vbox.addChild(item);
				if (chat.sendPlayer.playerId==PlayerInfo.instance.playerId){
					GuildMgr.ins.showGreenFirst=false;
					EventMgr.ins.event("recv_donate",0);
				}
			}
			else if (chat.subType==10003){
				item=new ChatRequestItem();
				item.dataSource=chat;
				item.name="chatReq"+(chat.msg).playerId;
				this.output._vbox.addChild(item);
			}
			else if (chat.subType==10001){
				item=new ChatMeansItem();
				item.dataSource=chat;
				this.output._vbox.addChild(item);
			}
			else if (chat.subType==10002){
				item=new GuildBattleMsg();
				item.dataSource=chat;
				item.name="battle"+(chat.msg).id;
				this.output._vbox.addChild(item);
			}
			else{
				item=new ChatBoxListItem();
				item.dataSource=chat;
				this.output._vbox.addChild(item);
			}
		}
		else{
			item=new ChatBoxListItem();
			item.dataSource=chat;
			this.output._vbox.addChild(item);
		}
		this.updateModal();
	}

	__proto.removeItem=function(name){
		var item=this.output._vbox.getChildByName(name);
		item && item.destroy();
	}

	__proto.onReviceMsg=function(chat,channel,removed){
		if (channel==this.TabChannelMap[this.tabChannel.selectedIndex]){
			ChatMgr.ins.clearNewMsgNum(channel);
			var item;
			if (chat){
				this.addItem(chat);
			}
			while (removed > 0){
				item=this.output._vbox.getChildAt(0);
				if (item){
					item.destroy();
					removed--;
				}
				else{
					break ;
				}
			}
		}
		this.updateMsgNum(channel);
	}

	__proto.onReviceChannelInfo=function(){
		this.txtLine.text=LanguageMgr.Ins.GetLan("9002252")+ChatMgr.ins.curChannelLine;
		var len=Math.min(ChatMgr.ins.channelInfoList.length,6);
		this.viewLine.height=this.viewLine.bg.height=51 *len+72;
		this.viewLine._list.height=this.viewLine._panel.height=51 *len;
		this.viewLine._list.array=ChatMgr.ins.channelInfoList;
	}

	__proto.onSpeakerChange=function(){
		this.btnSendWorld.label=PlayerInfoMgr.ins.getItemCount(6006001)+"";
	}

	__proto.onChangeLine=function(){
		this.viewLine.removeSelf();
	}

	__proto.onAddExpression=function(expression){
		this._input.text+=expression;
	}

	__proto.onUpdateGuildItem=function(name,chat){
		var item=this.output._vbox.getChildByName(name);
		item && (item.dataSource=chat);
		item && this.output._vbox.refresh();
		this.updateModal();
	}

	__proto.onRemoveGuildItem=function(name){
		this.removeItem(name);
		this.updateModal();
	}

	__proto.onShowDonateTips=function(tips){
		this.viewDonate.x=tips.x;
		this.viewDonate.y=tips.y;
		this.viewDonate.ptk.innerHTML=tips.ptk;
		this.viewDonate.xyk.innerHTML=tips.xyk;
		this.viewDonate.reset.innerHTML=tips.reset;
		var maxWidth=Math.max(this.viewDonate.ptk.contextWidth,this.viewDonate.xyk.contextWidth,this.viewDonate.reset.contextWidth);
		var dif=maxWidth+this.viewDonate.gap-this.viewDonate.width;
		if (dif > 0){
			this.viewDonate.changeWidth(dif);
		}
		this.addChild(this.viewDonate);
		this.updateModal();
	}

	/**发起友谊战时显示 */
	__proto.showFriendBox=function(){
		var hasBattle=GuildMgr.ins.myBattleId !=null;
		if (hasBattle){
			if (!this.light){
				this.light=new AniSkeleton("saoguang","ui");
				this.light.x=202;
				this.light.y=230;
				this.light.scaleX=0.422;
				this.light.scaleY=0.94;
				this.viewGuildOpt._2.addChild(this.light);
			}
			this.light.play(0,true);
			this.light.visible=true;
		}
		else{
			if (this.light){
				this.light.stop();
				this.light.visible=false;
			}
		}
	}

	__proto.onSendBarrageSetting=function(){
		var lv=int(ConfigModel.getConfigData(1157).ConfigValue);
		if(PlayerInfo.instance.vipLv >=lv){
			this.sendBarrageCheck.visible=!PlayerInfo.instance.isOn(14);
			ChatMgr.ins.sendBarrageSetting(!PlayerInfo.instance.isOn(14));
		}
		else{
			TipsManager.Instance().showLanTips(14300345,lv);
			this.sendBarrageCheck.visible=false;
		}
	}

	__proto.onSendMsg=function(useGoods){
		if (useGoods){
			if (PlayerInfoMgr.ins.getItemCount(6006001)<=0){
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002191"));
				return;
			}
		}
		if (!this._input.text){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002194"));
			return;
		}
		if (this._input.text.length > 50){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002195"));
			return;
		}
		if (TimeManager.Instance.NowTime()> ChatFullView.NextSpeakTime){
			ChatFullView.NextSpeakTime=this._speakGap *1000+200+TimeManager.Instance.NowTime();
			var inputStr=this._input.text;
			if(inputStr=="<GMOpenVConsole>"){
				importJS("js/vconsole/vconsole.min.js",function(){});
				return;
			};
			var chatStr=this._input.text.replace("<","");
			chatStr=chatStr.replace(">","");
			var channel=this.TabChannelMap[this.tabChannel.selectedIndex];
			switch (channel){
				case 'world':
				case 'room':
				case 'battle':{
						ChatMgr.ins.sendMsg(ChatConst.CHANNEL_TYPE_MAP[channel],chatStr);
						break ;
					}
				case 'guild':{
						ChatMgr.ins.sendGuildMsg(chatStr);
						break ;
					}
				}
			this._input.text='';
		}
		else{
			if (this._speakGap > 0){
				TipsManager.Instance().showTips(this._speakGap+LanguageMgr.Ins.GetLan("9002192"));
			}
			else{
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002193"));
			}
		}
	}

	__proto.onVScrollBar=function(){
		if (this.output._panel.vScrollBar.value > 10){
			this.output.to_top.visible=true;
		}
		else{
			this.output.to_top.visible=false;
		}
	}

	__proto.onClickToTop=function(){
		this.output._panel.vScrollBar.value=0;
		this.output.to_top.visible=false;
	}

	/**打开友谊战 */
	__proto.onFriend=function(e){
		if((!((SceneMgr.ins.curScene instanceof modules.hall.scene.HallMainScene )))|| UIMgr.ins.getView("RoomMainView")|| UIMgr.ins.getView("MulitPveRoomView")|| UIMgr.ins.getView("PVPRoomView")){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9040046"));
		}
		else{
			UIMgr.ins.openView("GuildFriendBattlePage");
		}
	}

	__proto.onCancelBattle=function(){
		if (GuildMgr.ins.myBattleId==null){
			return;
		};
		var req=new com.road.ddt.proto.StringMsg();
		req.value=Number(GuildMgr.ins.myBattleId).toString(16);
		SocketManager.Instance.sendSocketData(0x2738,req);
	}

	// }
	__proto.onOpenExpression=function(e){
		this._expressionView.showUiExpression();
		e.stopPropagation();
	}

	__proto.onOpenLine=function(e){
		this.addChild(this.viewLine);
		e.stopPropagation();
	}

	__proto.stopPropagation=function(e){
		e.stopPropagation();
	}

	__proto.onOpenChatSetView=function(e){
		UIMgr.ins.openView("ChatSetView");
		e.stopPropagation();
	}

	__proto.onClickView=function(e){
		this.viewLine.removeSelf();
		this.viewDonate.removeSelf();
		this._expressionView.hideUiExpression();
		PlayerMenuView.ins.hide();
		e.stopPropagation();
	}

	__proto.onClickStage=function(e){
		this.viewLine.removeSelf();
		this.viewDonate.removeSelf();
		this._expressionView.hideUiExpression();
		PlayerMenuView.ins.hide();
		Tween.to(this,{x:-this.ViewWidth},250,null,Handler.create(this,function(){
			UIMgr.ins.closeView("ChatFullView");
		}));
	}

	__proto.updateMsgNum=function(channel){
		var num=0;
		switch (channel){
			case 'guild':{
					num=ChatMgr.ins.getNewMsgNum('guild');
					this.imgGuildNum.visible=num > 0;
					this.txtGuildMsg.text=num+"";
					break ;
				}
			}
	}

	__proto.updateModal=function(){
		if (GuildMgr.ins.myBattleId !=null || this.viewDonate.parent){
			this.width=this.stage.width;
		}
		else{
			this.width=this.ViewWidth;
		}
		if (GuildMgr.ins.myBattleId !=null){
			this.viewMask.mouseEnabled=true;
			this.viewGuildOpt._2.visible=true;
			this.viewGuildOpt._1.visible=false;
		}
		else{
			this.viewMask.mouseEnabled=false;
			this.viewGuildOpt._2.visible=false;
			this.viewGuildOpt._1.visible=true;
		}
		this.showFriendBox();
	}

	__proto.sortItem=function(items){
		if (items){
			items.sort(function(a,b){
				var aC=a.dataSource;
				var bC=b.dataSource;
				if (aC.createTime > bC.createTime){
					return-1;
				}
				else if (aC.createTime < bC.createTime){
					return 1;
				}
				else{
					return 0;
				}
			});
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		this.onCancelBattle();
		this.light && this.light.destroy();
		this.light=null;
		this.donateAni && this.donateAni.destroy();
		this.donateAni=null;
		this._expressionView && this._expressionView.destroy();
		this._expressionView=null;
		this.viewLine && this.viewLine.destroy();
		this.viewLine=null;
		this.viewDonate && this.viewDonate.destroy();
		this.viewDonate=null;
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	ChatFullView.NextSpeakTime=0;
	return ChatFullView;
})(ChatFullViewUI)


/**
*主角
*@author huyouwei
*/
//class modules.battle.part.role.Hero extends modules.battle.part.role.Role
var Hero=(function(_super){
	function Hero(msg){
		this.mindeg=15;
		this.maxdeg=75;
		this.minLine=105;
		this.line=null;
		this.isMyTurn=false;
		this.angleui=null;
		this.touchBg=null;
		this.touchRotation=0;
		this.isValid=false;
		this.fireV0=0;
		this.fx=0;
		this.fy=0;
		this.angleline=null;
		this.fireAngle=0;
		this.anglenode=null;
		this.cancelImage=null;
		this.cancelx=NaN;
		this.cancely=NaN;
		this.angleuibg=null;
		this.notice1=null;
		this.notice2=null;
		this.cancelNode=null;
		this.otherNode=null;
		this.angleLabel=null;
		this.powerLabel=null;
		this.angleUi=null;
		this.xingdongli=null;
		this.touchId=-1;
		this.descAni=null;
		this.isSuccessLaXian=false;
		/**蓄力声音播放是否完成 */
		this.isComplete=true;
		Hero.__super.call(this,msg);
		this._type=Fighter.HERO;
		this.initEvent();
	}

	__class(Hero,'modules.battle.part.role.Hero',_super);
	var __proto=Hero.prototype;
	__proto.initEvent=function(){
		EventMgr.ins.on("changescale",this,this.changeScale);
	}

	__proto.initView=function(msg,screenwidth,screenheight){
		_super.prototype.initView.call(this,msg,screenwidth,screenheight);
		this.line=new Sprite();
		this.addChild(this.line);
		this.angleui=new Image("battle/menu/ui_jdp_big999.png");
		this.angleui.anchorX=0.5;
		this.angleui.anchorY=0.5;
		this.angleui.visible=false;
		this.angleui.zOrder=-2;
		this.roleNode.addChild(this.angleui);
		this.xingdongli=new XingDongLiUI();
		this.xingdongli.x=100;
		this.xingdongli.y=-200;
		this.xingdongli.visible=false;
		this.roleNode.addChild(this.xingdongli);
		this.angleuibg=new Image("battle/menu/ui_jdp_fx444.png");
		this.angleuibg.anchorX=0.5;
		this.angleuibg.anchorY=0.5;
		this.angleuibg.visible=false;
		this.angleuibg.zOrder=-2;
		this.addChild(this.angleuibg);
		this.otherNode=new Component();
		this.addChild(this.otherNode);
		this.touchBg=new Image("battle/menu/ui_waiguanquang.png");
		this.touchBg.anchorX=0.5;
		this.touchBg.anchorY=0.5;
		this.touchBg.visible=false;
		this.touchBg.scale(1.5,1.5)
		this.touchBg.on("mousedown",this,this._touchBegin);
		this.otherNode.addChild(this.touchBg);
		this.angleline=new Image("battle/menu/ui_jdp_zhibiao.png");
		this.angleline.anchorX=0;
		this.angleline.anchorY=0.5;
		this.angleline.zOrder=-1;
		this.angleline.visible=false;
		this.addChild(this.angleline);
		this.turnRight(this.moveDir==Fighter.DIR_RIGHT);
		this.checkAngle(true);
		if(Cache.ins.battle.isRandomFight()){
			this.acts=[1,2,4];
		}
		this.zOrder=999999999;
	}

	__proto.onHandleXingDongli=function(){
		this.xingdongli.visible=true;
		var per=this.numMove/this.maxMove;
		var angle=115 *per;
		this.xingdongli.boxnode.graphics.clear();
		this.xingdongli.boxnode.graphics.drawPie(100,100,100,(angle-90),25,"#ff0000");
		if(this.numMove%4==0){
			this.syncPos();
		}
	}

	__proto.changeScale=function(value){
		if(this.otherNode && !this.otherNode.destroyed){
			this.otherNode.scale(1/value,1/value);
		}
	}

	__proto._touchBegin=function(e){
		if(this.touchId==-1){
			this.touchId=e.touchId;
			var stagePoint=new Point(e.stageX,e.stageY);
			var localPoint=this.globalToLocal(stagePoint);
			this.touchBegin(localPoint.x,localPoint.y);
			this.stage.on("mousemove",this,this._touchMove);
			this.stage.on("click",this,this._touchEnd);
			this.stage.on("doubleclick",this,this._touchEnd2);
		}
		else{
			this.touchId=e.touchId;
		}
	}

	__proto._touchMove=function(e){
		if(this.touchId==e.touchId){
			var stagePoint=new Point(e.stageX,e.stageY);
			var localPoint=this.globalToLocal(stagePoint);
			this.touchMove(localPoint.x,localPoint.y);
			var battleScene=SceneMgr.ins.curScene;
			battleScene.menuView.clearAllWeekGuide();
		}
	}

	__proto._touchEnd=function(e){
		if(this.touchId==e.touchId){
			this.touchId=-1;
			var stagePoint=new Point(e.stageX,e.stageY);
			var localPoint=this.globalToLocal(stagePoint);
			this.touchEnd(localPoint.x,localPoint.y);
			this.stage.off("mousemove",this,this._touchMove);
			this.stage.off("click",this,this._touchEnd);
			this.stage.off("doubleclick",this,this._touchEnd2);
			EventMgr.ins.event("touchEnd");
		}
	}

	__proto._touchEnd2=function(e){
		this.touchId=-1;
		var stagePoint=new Point(e.stageX,e.stageY);
		var localPoint=this.globalToLocal(stagePoint);
		this.touchEnd(localPoint.x,localPoint.y);
		this.stage.off("mousemove",this,this._touchMove);
		this.stage.off("click",this,this._touchEnd);
		this.stage.off("doubleclick",this,this._touchEnd2);
	}

	//}
	__proto.turnRight=function(turnRight){
		_super.prototype.turnRight.call(this,turnRight);
		if(this.angleui){
			this.angleui.scale(turnRight?1.0:-1.0,1.0);
		}
		if(this.xingdongli){
			this.xingdongli.scale(turnRight?1.0:-1.0,1.0);
			if(turnRight){
				this.xingdongli.x=100;
				this.xingdongli.y=-200;
				}else{
				this.xingdongli.x=-100;
				this.xingdongli.y=-200;
			}
		}
	}

	__proto.getTouchRect=function(){
		return new Rectangle(this.x,this.y,600,600);
	}

	__proto.playTurn=function(){
		_super.prototype.playTurn.call(this);
		this.playRoleAni("myturn",false);
		Laya.timer.once(1000,this,this.playRoleAni,["idle",true]);
	}

	__proto.stop=function(){
		_super.prototype.stop.call(this);
		this.xingdongli.visible=false;
		this.syncPos();
	}

	__proto.onHandleDrop=function(point){
		if(LocalBattleMgr.getInstance().isLocalBattle){
			return
		};
		var msg=new com.road.ddt.proto.battle.BattleMoveMsg();
		msg.posX=point.x+5 *this.moveDir;
		msg.posY=this.screenheight-this.y;
		msg.fallY=-1;
		msg.type=0;
		SocketManager.Instance.sendSocketData(0x3AA4,msg);
		this.xingdongli.visible=false;
	}

	__proto.getPower=function(len){
		var power=0;
		var num=6;
		var section=20;
		do{
			var temp=Math.floor(len/num);
			if(temp <=0)break ;
			if(temp > section){
				temp=section;
			}
			power=power+temp;
			len=len-num *temp;
			num=num-1;
			if(len <=0)break ;
		}while(num >=2)
		if(power>100)
			power=100;
		return power;
	}

	__proto.getLinePoints=function(x,y,k){
		var points=[];
		var len=Math.sqrt(x*x+y*y);
		var num=Math.floor(len/10);
		var flag=1.0;
		var region=this.getRegion(x,y);
		if(region==2 || region==3)flag=-1.0;
		var dx=0;
		var dy=0;
		while(num > 0){
			dx=dx+10 *flag;
			dy=k *dx;
			var slen=Math.sqrt(dx*dx+dy*dy);
			if(slen < len){
				points.push({x:dx,y:dy});
			}
			else{
				break ;
			}
			--num;
		}
		return points;
	}

	__proto.cleanCancel=function(){
		if(this.cancelNode)this.cancelNode.visible=false;
		Tween.clearAll(this.notice1);
	}

	__proto.drawCancel=function(isIn,isVal){
		this.cleanCancel();
		var res=LanguageMgr.Ins.getBattleLanguagePath("ui_las_lan.png");
		if(isIn){
			res=LanguageMgr.Ins.getBattleLanguagePath("ui_las_hong.png");
		}
		if(this.cancelNode==null){
			this.cancelNode=new Sprite();
			this.cancelNode.x=this.cancelx;
			this.cancelNode.y=this.cancely;
			this.cancelImage=new Image(res);
			this.cancelImage.scale(1.5,1.5)
			this.cancelImage.anchorX=0.5;
			this.cancelImage.anchorY=0.5;
			this.cancelNode.addChild(this.cancelImage);
			this.notice1=new Image("battle/menu/ui_lz_hongtiao1.png");
			this.notice1.anchorX=0.5;
			this.notice1.anchorY=0.5;
			this.notice1.zOrder=-2;
			this.cancelNode.addChild(this.notice1);
			this.notice2=new Image("battle/menu/ui_lz_lanquang.png");
			this.notice2.anchorX=0.5;
			this.notice2.anchorY=0.5;
			this.notice2.zOrder=-1;
			this.cancelNode.addChild(this.notice2);
			this.addChild(this.cancelNode);
		}
		else{
			this.cancelNode.x=this.cancelx;
			this.cancelNode.y=this.cancely;
			this.cancelNode.visible=true;
		};
		var angle=this.bodyRotation;
		this.notice1.rotation=-1*angle;
		this.notice2.rotation=-1*angle;
		if(this.moveDir==Fighter.DIR_RIGHT){
			this.notice1.scale(1.0,1.0);
			this.notice2.scale(1.0,1.0);
			}else{
			this.notice1.scale(-1.0,1.0);
			this.notice2.scale(-1.0,1.0);
		}
		if(isVal){
			this.notice1.visible=false;
			this.notice2.visible=false;
			}else{
			this.notice1.visible=true;
			this.notice2.visible=true;
			Tween.clearAll(this.notice1);
			this.createNoticeAni();
		}
	}

	__proto.createNoticeAni=function(){
		Tween.to(this.notice1,{alpha:0},0.2 *1000,null,Handler.create(this,this.createNoticeAni1));
	}

	__proto.createNoticeAni1=function(){
		Tween.to(this.notice1,{alpha:1},0.2 *1000,null,Handler.create(this,this.createNoticeAni));
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		Tween.clearAll(this.notice1);
		modules.battle.part.BasePart.prototype.destroy.call(this,destroyChild);
	}

	__proto.checkCancel=function(x,y){
		var rect=new Rectangle(this.cancelx-75/2,this.cancely-75/2,75,75);
		return rect.contains(x,y)
	}

	__proto.drawline=function(x,y){
		this.line.graphics.clear();
		if(x==0)x=1;
		var k=y/x;
		var points=this.getLinePoints(x,y,k);
		if (this.isNeedAntiThrow){
			if ((this.heroSkeleton.scaleX < 0 && Math.abs(this.angleline.rotation)> 90)
				|| (this.heroSkeleton.scaleX > 0 && Math.abs(this.angleline.rotation)< 90)){
				this.isAntiThrow=true;
				}else{
				this.isAntiThrow=false;
			}
		}
		for(var i=0;i < points.length;i++){
			var txt=Laya.loader.getRes("battle/menu/ui_las_sanjiao.png");
			this.line.graphics.drawTexture(txt,points[i].x-12+this.cancelx,points[i].y-12+this.cancely,12,12);
		}
	}

	__proto.dievisible=function(){
		_super.prototype.dievisible.call(this);
		this.angleui.visible=false;
		this.angleuibg.visible=false;
		this.angleline.visible=false;
		this.angleUi.visible=false;
		this.touchBg.visible=false;
		this.xingdongli.visible=false;
	}

	__proto.isValidAngle=function(rotation,x,y){
		var temp=rotation;
		var result=[];
		var mind1=this.bodyRotation+this.mindeg;
		var maxd1=this.bodyRotation+this.maxdeg;
		if(rotation >=mind1 && rotation <=maxd1){
			this.turnRight(true);
			this.moveDir=Fighter.DIR_RIGHT;
			result[0]=true;
			result[1]=temp;
			return result;
		}
		if(rotation < 0)rotation=rotation+360;
		var mind2=this.bodyRotation+this.mindeg+90;
		var maxd2=this.bodyRotation+this.maxdeg+90;
		if(rotation >=mind2 && rotation <=maxd2){
			this.turnRight(false);
			this.moveDir=Fighter.DIR_LEFT;
			result[0]=true;
			result[1]=temp;
			return result;
		}
		result[0]=false;
		this.checkDir(x,y);
		if(this.moveDir==Fighter.DIR_RIGHT){
			if(temp > maxd1){
				result[1]=maxd1;
			}
			else if(temp < mind1){
				result[1]=mind1;
			}
			}else{
			if(temp > 0){
				if(temp > maxd2){
					result[1]=maxd2;
				}
				else if(temp < mind2){
					result[1]=mind2;
					}else{
					result[1]=mind2;
				}
				}else{
				if(temp > maxd2-360){
					result[1]=maxd2-360;
				}
				else if(temp < mind2-360){
					result[1]=mind2-360;
					}else{
					result[1]=mind2-360;
				}
			}
		}
		return result;
	}

	__proto.getRegion=function(x,y){
		if(x > 0 && y > 0){
			return 4;
		}
		if(x > 0 && y < 0){
			return 1;
		}
		if(x < 0 && y < 0){
			return 2;
		}
		if(x < 0 && y > 0){
			return 3;
		}
		return 0;
	}

	__proto.checkDir=function(x,y){
		var region=this.getRegion(x,y);
		if(region==4 || region==1){
			this.turnRight(false);
			this.moveDir=Fighter.DIR_LEFT;
			}else if(region==3 || region==2){
			this.turnRight(true);
			this.moveDir=Fighter.DIR_RIGHT;
		}
	}

	__proto.getBomb=function(skillId){
		var skill=SkillModel.getSkillConfigData(skillId);
		var bomb=BombModel.getBombConfigByBombId(skill.Bomb);
		return bomb;
	}

	__proto.getduijiao=function(rotation){
		this.isNeedAntiThrow=false;
		if(rotation > 0){
			return 180-rotation;
			}else if(rotation < 0){
			this.isNeedAntiThrow=true;
			return-1 *(180+rotation);
		}
		return 180;
	}

	__proto.touchBegin=function(ex,ey){
		this.cleanParam();
		if (this.checkBuff(2023001)){
			return
		}
		if(!this.isMyTurn){
			return;
		}
		if(this.descAni){
			this.descAni.visible=true;
			this.descAni.play("step2",true);
		}
		this.cancelx=ex;
		this.cancely=ey;
		this.drawCancel(this.checkCancel(ex,ey),false);
		var battleScene=SceneMgr.ins.curScene;
		battleScene.menuView.shrinkCards();
	}

	__proto.touchMove=function(ex,ey){
		if (this.checkBuff(2023001)){
			return
		}
		if(!this.isMyTurn){
			return;
		}
		if(this.isComplete){
			this.isComplete=false;
		}
		MapDragTouchManager.instance.stopDragMouse();
		var dx=ex-this.cancelx;
		var dy=ey-this.cancely;
		var len=Math.sqrt(Math.pow(dx,2)+Math.pow(dy,2));
		var deg=Math.atan2(dy,dx);
		var r=deg *180/Math.PI;
		var rotation=r *-1;
		var duijiao=this.getduijiao(rotation)*-1;
		var valiAngles=this.isValidAngle(duijiao,dx,dy);
		var isva=valiAngles[0];
		duijiao=valiAngles[1];
		this.line.graphics.clear();
		this.drawline(dx,dy);
		this.drawCancel(this.checkCancel(ex,ey),isva);
		this.isValid=false;
		if(len >=this.minLine){
			this.isValid=true;
			this.angleline.rotation=duijiao *-1;
			this.angleline.visible=true;
			var frameAngle=this.getFrameAngle(duijiao);
			this.playRoleAni("attack-aim",false);
			this.setFrameIndexByRotation(frameAngle);
			var v0=this.getPower(len)*20;
			this.fireV0=v0;
			this.angleUi.visible=true;
			this.angleUi.power.text=Math.floor(v0/20)+"";
			var angle=(this.moveDir==Fighter.DIR_RIGHT ? Math.floor(duijiao):(180-Math.floor(duijiao)));
			if(angle > 360){
				angle-=360;
			}
			this.fireAngle=angle;
			this.angleUi.angle.text=angle+"°";
			this.angleUi.labPower.text=LanguageMgr.Ins.GetLan("9070017");
			this.angleUi.labAngle.text=LanguageMgr.Ins.GetLan("9070018");
			var bomb=this.getBomb(1000002);
			var g=bomb.Gravity;
			var fengli=bomb.WindForce;
			var air=bomb.AirResistance;
			var m=bomb.Mass;
			this.fx=Math.floor(this.getFirex(0,duijiao,this.x));
			this.fy=Math.floor(this.getFirey(0,duijiao,this.screenheight-this.y));
			EventMgr.ins.event("cleanBallisticPoints");
			var isNewGuideLaXian=false;
			if(NewGuideMgr.ins.curNodeId==10){
				var battleScene=SceneMgr.ins.curScene;
				var round=(battleScene.menuView).round;
				if(round==1){
					var V=800;
					var J=63;
					var tempFX=675;
					var tempFY=401;
					isNewGuideLaXian=true;
					var isCross=(Math.abs(v0-V)< 80 && Math.abs(duijiao-J)< 10);
					EventMgr.ins.event("battle_ballistic_guide",[g,V,J,tempFX,this.screenheight-tempFY,fengli,air,m,isCross]);
					EventMgr.ins.event("battle_ballistic_1",[g,v0,duijiao,this.fx,this.screenheight-this.fy,fengli,air,m,isCross ? 1 :-1]);
				}
			}
			if(!isNewGuideLaXian){
				EventMgr.ins.event("battle_ballistic_1",[g,v0,duijiao,this.fx,this.screenheight-this.fy,fengli,air,m]);
			}
			this.touchRotation=duijiao;
		}
		else{
			this.playRoleAni("attack-start",false);
		}
	}

	__proto.touchEnd=function(ex,ey){
		if (this.checkBuff(2023001)){
			return;
		}
		if(!this.isMyTurn){
			this.cleanParam();
			return;
		}
		if(this.isValid){
			if(this.fx !=0 && this.fy !=0 && this.fireV0 !=0){
				this.fire(this.fireV0,this.touchRotation,this.fx,this.fy);
				this.cleanParam();
				return;
			}
			}else{
			EventMgr.ins.event("battle_ballistic_cancel");
		}
		this.cleanParam();
		this.playRoleAni("idle",true);
		if(this.descAni){
			this.descAni.visible=false;
		};
		var battleScene=SceneMgr.ins.curScene;
		battleScene.menuView.shuffleCards(null,this.isValid);
	}

	// private var _round:int;
	__proto.getFrameAngle=function(rotation){
		var angle=0;
		var mind=this.bodyRotation+this.mindeg;
		var maxd=this.bodyRotation+this.maxdeg;
		if(rotation >=mind && rotation <=maxd){
			angle=rotation-this.bodyRotation;
			return angle;
		}
		if(rotation < 0)rotation=rotation+360
			mind=this.bodyRotation+this.mindeg+90;
		maxd=this.bodyRotation+this.maxdeg+90;
		if(rotation >=mind && rotation <=maxd){
			angle=(180+this.bodyRotation)-rotation;
			return angle;
		}
		return angle;
	}

	__proto.cleanParam=function(){
		this.line.graphics.clear();
		EventMgr.ins.event("cleanBallisticPoints");
		this.cleanCancel();
		this.angleline.visible=false;
		this.isValid=false;
		this.isComplete=true;
		this.touchRotation=0;
		this.fx=0;
		this.fireV0=0;
		this.fy=0;
		this.cancelx=0;
		this.cancely=0;
		this.angleUi.visible=false;
	}

	__proto.getDecimal=function(x){
		return Math.floor((x *100.0))/100.0;
	}

	__proto.getFirex=function(playerAngle,angle,curX){
		var theta=playerAngle / 180 *Math.PI;
		return curX-20 *this.getDecimal(Math.sin(theta))+40 *this.getDecimal(Math.cos((angle+playerAngle *this.moveDir)/ 180 *Math.PI));
	}

	__proto.getFirey=function(playerAngle,angle,curY){
		var theta=playerAngle / 180 *Math.PI;
		return curY+20 *this.getDecimal(Math.cos(theta))+40 *this.getDecimal(Math.sin((angle+playerAngle *this.moveDir)/ 180 *Math.PI));
	}

	__proto.fire=function(power,angle,fx,fy,stdDir){
		var dir=this.moveDir;
		if(angle > 0 && angle > 90){
			angle=180-angle;
			}else if(angle < 0 && angle <-90){
			angle=-1*(180+angle);
		}
		if (this.isAntiThrow){
			dir=-dir;
		}
		if(stdDir){
			dir=stdDir;
		}
		this.syncPos();
		var msg=new com.road.ddt.proto.battle.BattleFireMsg();
		msg.dir=dir;
		msg.strength=power;
		msg.angle=angle *100;
		msg.posX=fx;
		msg.posY=fy;
		msg.playerAngle=0;
		if(!LocalBattleMgr.getInstance().isLocalBattle){
			SocketManager.Instance.sendSocketData(0x3AA1,msg);
			}else{
			EventMgr.ins.event(String(0x3AA1),msg);
		}
	}

	__proto.resetAnglePos=function(){
		var point=this.localToGlobal(new Point(0,0));
		this.angleUi.x=point.x-100;
		this.angleUi.y=point.y-255;
	}

	__proto.update=function(){
		_super.prototype.update.call(this);
		this.resetAnglePos();
	}

	__proto.autoAim=function(){}
	__proto.myturn=function(){
		_super.prototype.myturn.call(this);
		this.angleui.visible=true;
		this.touchBg.visible=true;
		this.angleuibg.visible=true;
		this.isMyTurn=true;
		this.numMove=0;
		this.changeAngleMax(15,75);
		this.showDesc()
	}

	__proto.showDesc=function(){
		if(!this.descAni){
			this.descAni=new AniSkeleton("prepareAnim","effect",0,false,null,null,true);
			this.descAni.x=0;
			this.descAni.y=-150;
			this.descAni.zOrder=999999;
			this.addChild(this.descAni);
		}
		this.descAni.visible=true;
		this.descAni.play("step1",true);
	}

	__proto.useSkill=function(skillId){
		if(this.descAni){
			this.descAni.visible=true;
			this.descAni.play("step2",true);
		}
		return _super.prototype.useSkill.call(this,skillId);
	}

	__proto.revive=function(battlePlayermsg){
		_super.prototype.revive.call(this,battlePlayermsg);
		if(this.isMyTurn){
			this.touchId=-1;
			this.myturn();
		}
	}

	__proto.playDice=function(){}
	__proto.overturn=function(){
		_super.prototype.overturn.call(this);
		this.angleui.visible=false;
		this.touchBg.visible=false;
		this.angleuibg.visible=false;
		this.angleUi.visible=false;
		this.xingdongli.visible=false;
		this.isMyTurn=false;
		this.angleline.visible=false;
		this.line.graphics.clear();
		EventMgr.ins.event("cleanBallisticPoints");
		this.cleanCancel();
		this.numMove=this.maxMove;
		this.playRoleAni("idle",true);
		if(this.descAni){
			this.descAni.visible=false;
		}
	}

	__proto.hideOhter=function(){
		this.angleui.visible=false;
		this.touchBg.visible=false;
		this.angleuibg.visible=false;
		this.angleUi.visible=false;
		this.xingdongli.visible=false;
		this.isMyTurn=false;
		this.angleline.visible=false;
	}

	// skeleton.visible=false;
	__proto.destroyFighter=function(){
		if(this.isDestroy)
			return;
		EventMgr.ins.off("changescale",this,this.changeScale);
		this.touchBg.off("mousedown",this,this._touchBegin);
		this.stage.off("mousemove",this,this._touchMove);
		this.stage.off("click",this,this._touchEnd);
		this.stage.off("doubleclick",this,this._touchEnd2);
		_super.prototype.destroyFighter.call(this);
	}

	__proto.chooseRevive=function(pos){
		var posX=Math.floor(pos.x);
		var posY=Math.floor(this.screenheight-pos.y);
		var point;
		if(TileReader.isEmpty(posX,posY)){
			point=TileReader.findNotEmptyPoint2(posX,posY);
			if(point.x==-1 && point.y==-1){
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002216"));
				return;
			}
			}else{
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300109"));
			return;
		}
		this.x=point.x;
		this.y=this.screenheight-point.y;
		var msg=new com.road.ddt.proto.battle.BattleRevivePosMsg();
		msg.posX=point.x;
		msg.posY=point.y;
		SocketManager.Instance.sendSocketData(0x3AB2,msg);
	}

	__proto.changeAngleMax=function(value,value1){
		this.mindeg=value;
		this.maxdeg=value1;
		if(this.mindeg==15 && this.maxdeg==75){
			this.angleui.skin="battle/menu/ui_jdp_big999.png";
			}else if(this.mindeg==0 && this.maxdeg==90){
			this.angleui.skin="battle/menu/ui_jdp_big90.png";
		}
	}

	return Hero;
})(Role)


//class modules.common.AdditionBar extends ui.common.AdditionBarUI
var AdditionBar=(function(_super){
	function AdditionBar(){AdditionBar.__super.call(this);}
	__class(AdditionBar,'modules.common.AdditionBar',_super);
	var __proto=AdditionBar.prototype;
	/**
	*设置特权ID
	*@param privilegeID
	*/
	__proto.setPrivilegeID=function(privilegeID){
		var privilegeVO=PrivilegeModel.getItemDataById(privilegeID);
		this.setPrivilegeVO(privilegeVO);
	}

	/**
	*设置特权数据对象
	*@param privilegeVO
	*/
	__proto.setPrivilegeVO=function(privilegeVO){
		var privilegeStr=[""
		,LanguageMgr.Ins.GetLan("9020019")
		,LanguageMgr.Ins.GetLan("9020025")
		,LanguageMgr.Ins.GetLan("9020021")
		,LanguageMgr.Ins.GetLan("9020022")][privilegeVO.MasterType];
		privilegeStr+=" "+[""
		,LanguageMgr.Ins.GetLan("9020026")
		,LanguageMgr.Ins.GetLan("9020027")
		,LanguageMgr.Ins.GetLan("9020028")
		,LanguageMgr.Ins.GetLan("9020029")
		,LanguageMgr.Ins.GetLan("9020030")
		,LanguageMgr.Ins.GetLan("9020026")
		,LanguageMgr.Ins.GetLan("9020026")][privilegeVO.SonType];
		privilegeVO.Param1 > 0 && (privilegeStr+="+");
		privilegeStr+=privilegeVO.Param1+"%";
		this.setText(privilegeStr);
	}

	/**
	*设置提示文本
	*@param value
	*/
	__proto.setText=function(value){
		var self=this;
		self.txt.text=value;
		self.txt.width=self.txt.textField.textWidth+4;
		self.bg.width=self.txt.width+25;
		self.txt.x=self.bg.width-self.txt.width >> 1;
	}

	return AdditionBar;
})(AdditionBarUI)


//class modules.common.TopBar extends ui.common.TopBarUI
var TopBar=(function(_super){
	function TopBar(){
		this.btnBackCallBack=null;
		TopBar.__super.call(this);
		this.initView();
		this.addEvent();
	}

	__class(TopBar,'modules.common.TopBar',_super);
	var __proto=TopBar.prototype;
	__proto.initView=function(){
		if(!ShopMgr.ins.IS_OPEN_PAY){
			(this.boxGems.getChildByName("btnAdd")).visible=false;
			(this.boxGems.getChildByName("btnAdd")).disabled=true;
		}
		this.renderTokenView(this.boxGold,ItemConst.GOLD);
		this.renderTokenView(this.boxPink,ItemConst.PINKGEM);
		this.renderTokenView(this.boxGems,ItemConst.GEM);
	}

	__proto.addEvent=function(){
		(this.boxGold.getChildByName("btnAdd")).on("click",this,this.onClickAddCurrency,[ItemConst.GOLD]);
		(this.boxPink.getChildByName("btnAdd")).on("click",this,this.onClickAddCurrency,[ItemConst.PINKGEM]);
		(this.boxGems.getChildByName("btnAdd")).on("click",this,this.onClickAddCurrency,[ItemConst.GEM]);
		this.btnBack.clickHandler=Handler.create(this,this.onClickBack,null,false);
		PlayerInfoMgr.ins.on("player_info_change",this,this.onUpdatePlayer);
	}

	__proto.delEvent=function(){
		(this.boxGold.getChildByName("btnAdd")).off("click",this,this.onClickAddCurrency);
		(this.boxPink.getChildByName("btnAdd")).off("click",this,this.onClickAddCurrency);
		(this.boxGems.getChildByName("btnAdd")).off("click",this,this.onClickAddCurrency);
		this.btnBack.clickHandler.recover();
		this.btnBack.clickHandler=null;
		PlayerInfoMgr.ins.off("player_info_change",this,this.onUpdatePlayer);
	}

	__proto.onUpdatePlayer=function(){
		this.renderTokenView(this.boxGold,ItemConst.GOLD);
		this.renderTokenView(this.boxPink,ItemConst.PINKGEM);
		this.renderTokenView(this.boxGems,ItemConst.GEM);
	}

	__proto.onClickAddCurrency=function(itemId,e){
		var tabIndex=-1;
		switch (itemId){
			case ItemConst.GOLD:{
					tabIndex=1;
					break ;
				}
			case ItemConst.PINKGEM:{
					tabIndex=2;
					break ;
				}
			case ItemConst.GEM:{
					tabIndex=4;
					break ;
				}
			default :{
					return;
					break ;
				}
			}
		ShopMgr.ins.selectedIndex=tabIndex;
		UIMgr.ins.openView("ShopView");
	}

	__proto.onClickBack=function(){
		this.btnBackCallBack && this.btnBackCallBack.run();
	}

	__proto.renderTokenView=function(view,itemId){
		var itemVo=ItemModel.getItemConfigData(itemId);
		(view.getChildByName("icon")).skin="assets/textrue/itemicon/"+itemVo.Icon+".png";
		(view.getChildByName("txtValue")).text=PlayerInfoMgr.ins.getItemCount(itemId)+"";
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		this.btnBackCallBack=null;
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return TopBar;
})(TopBarUI)


//class modules.email.item.EmailGoodsItem extends ui.email.item.EmailGoodsItemUI
var EmailGoodsItem=(function(_super){
	function EmailGoodsItem(){
		EmailGoodsItem.__super.call(this);
	}

	__class(EmailGoodsItem,'modules.email.item.EmailGoodsItem',_super);
	var __proto=EmailGoodsItem.prototype;
	__proto.setData=function(value){
		var data=value.split("|");
		var item=ItemModel.getItemConfigData(data[0]);
		this.imgIcon.skin="assets/textrue/itemicon/"+item.Icon+".png";
		this.labCount.text=data[1];
		this.on("click",this,TipsManager.Instance().addItemTip,[item])
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.off("click",this,TipsManager.Instance().addItemTip)
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return EmailGoodsItem;
})(EmailGoodsItemUI)


//class modules.email.item.EmailItem extends ui.email.item.EmailItemUI
var EmailItem=(function(_super){
	function EmailItem(){
		this._info=null;
		EmailItem.__super.call(this);
		this.addEvent();
	}

	__class(EmailItem,'modules.email.item.EmailItem',_super);
	var __proto=EmailItem.prototype;
	__proto.addEvent=function(){
		this.on("mousedown",this,this.onClickHandler);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.off("mousedown",this,this.onClickHandler);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__proto.onClickHandler=function(){
		if(this._info !=null && !this._info.isRead){
			this.info.isRead=true;
			SocketManager.Instance.out.sendCheckMail(this._info.mailId);
		}
	}

	__proto.setData=function($info){
		this._info=$info;
		this.imgRed.visible=!this._info.isRead;
		this.labDes.text=this._info.title.length > 8 ? LanguageMgr.Ins.GetLan(this._info.title).substring(0,8)+"..." :LanguageMgr.Ins.GetLan(this._info.title);
		var expireTime=parseFloat(this._info.expireTime)-TimeManager.Instance.NowTime();
		this.labLastDay.text=LanguageMgr.Ins.GetLan("9002253")+TimeManager.Instance.getServerDate(expireTime).getDate()+LanguageMgr.Ins.GetLan("9002274");
		this.labName.text=LanguageMgr.Ins.GetLan(this._info.senderName);
		this.labDate.text=this._info.sendTime;
		if(this._info.isRead && (this._info.attachItems=="" || this._info.attachItems==null)&& this.imgBG.skin !="Email/ui_email_bg2.png"){
			this.setBGSkin(3);
		}
		else if(this._info.isRead && this._info.attachItems !="" && this._info.attachItems !=null && this.imgBG.skin !="Email/ui_email_bg2.png"){
			this.setBGSkin(1);
		}
		this.updateIconSkin();
		if(EmailMgr.ins.isOneClick==false){
			EmailMgr.ins.isOneClick=true;
			this.onClickHandler();
		}
	}

	/**
	*更新Icon图片
	*/
	__proto.updateIconSkin=function(){
		if(this.info.attachItems !=null && this.info.attachItems !=""){
			this.imgIcon.skin="Email/ui_email_reses.png";
		}
		else{
			if(this.info.isRead){
				this.imgIcon.skin="Email/ui_email_close.png";
			}
			else{
				this.imgIcon.skin="Email/ui_email_open.png";
			}
		}
	}

	/**
	*却换背景Skin
	*@param type 1：没有选中 2：选中 3：灰显
	*/
	__proto.setBGSkin=function(type){
		this.imgBG.skin="Email/ui_email_bg"+type+".png";
		this.imgLine.skin="Email/ui_xuxian"+type+".png";
	}

	__getset(0,__proto,'info',function(){
		return this._info;
		},function(value){
		this._info=value;
	});

	return EmailItem;
})(EmailItemUI)


//class modules.email.view.HelpItem extends ui.help.HelpItemUI
var HelpItem=(function(_super){
	function HelpItem(){
		HelpItem.__super.call(this);
	}

	__class(HelpItem,'modules.email.view.HelpItem',_super);
	var __proto=HelpItem.prototype;
	__proto.init=function(desc){
		this.helptext.text=desc;
	}

	return HelpItem;
})(HelpItemUI)


//class modules.email.view.MessageMainView extends ui.email.view.MessageMainViewUI
var MessageMainView=(function(_super){
	function MessageMainView(){
		this.prevX=0;
		this.prevY=0;
		this.info=null;
		MessageMainView.__super.call(this);
		this.init();
	}

	__class(MessageMainView,'modules.email.view.MessageMainView',_super);
	var __proto=MessageMainView.prototype;
	__proto.setData=function($info){
		this.info=$info;
		this.labName.text=LanguageMgr.Ins.GetLan("9002254")+PlayerInfo.instance.nickName;
		this.detailsLab.text=LanguageMgr.Ins.GetLan("9070044");
		this.txtContent.text=this.info.hasContent ? StringUtils.formateEmail(LanguageMgr.Ins.GetLan(this.info.content),this.info.param):"";
		this.imgGet.visible=this.info.hasOpenTime;
		if(this.info.attachItems !=null && this.info.attachItems !=""){
			this.lists.visible=true;
			var dataAry=this.info.attachItems.split(",");
			this.lists.array=dataAry;
			this.lists.repeatX=dataAry.length;
			this.lists.refresh();
		}
		else{
			this.lists.visible=false;
		}
	}

	__proto.init=function(){
		this.txtContent.on("mousedown",this,this.startScrollText);
		this.lists.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
	}

	__proto.onRenderHandler=function(item,index){
		if(index < this.lists.array.length){
			item.setData(this.lists.array[index]);
		}
	}

	/*开始滚动文本 */
	__proto.startScrollText=function(e){
		this.prevX=this.txtContent.mouseX;
		this.prevY=this.txtContent.mouseY;
		Laya.stage.on("mousemove",this,this.scrollText);
		Laya.stage.on("mouseup",this,this.finishScrollText);
	}

	/*停止滚动文本 */
	__proto.finishScrollText=function(e){
		Laya.stage.off("mousemove",this,this.scrollText);
		Laya.stage.off("mouseup",this,this.finishScrollText);
	}

	/*鼠标滚动文本 */
	__proto.scrollText=function(e){
		var nowX=this.txtContent.mouseX;
		var nowY=this.txtContent.mouseY;
		this.prevX=nowX;
		this.prevY=nowY;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.txtContent.off("mousedown",this,this.startScrollText);
		Laya.stage.off("mousemove",this,this.scrollText);
		Laya.stage.off("mouseup",this,this.finishScrollText);
		if(this.lists.renderHandler){
			this.lists.renderHandler.recover();
			this.lists.renderHandler=null;
		}
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return MessageMainView;
})(MessageMainViewUI)


//class modules.friends.items.AddFriendItem extends ui.friends.items.AddFriendItemUI
var AddFriendItem=(function(_super){
	function AddFriendItem(){
		this._data=null;
		/**事件派发器 **/
		this.eventdispatch=null;
		AddFriendItem.__super.call(this);this.init();}
	__class(AddFriendItem,'modules.friends.items.AddFriendItem',_super);
	var __proto=AddFriendItem.prototype;
	__proto.init=function(){
		var self=this;
		self.data=null;
		self.addEvent();
	}

	__proto.addEvent=function(){
		var self=this;
		self.addBtn.clickHandler=Handler.create(self,self.onAddFriendHandler,null,false);
	}

	__proto.removeEvent=function(){}
	/**
	*添加好友
	*/
	__proto.onAddFriendHandler=function(){
		var self=this;
		FriendsMgr.ins.sendAddFriend(self._data.playerId,self._data.nickName);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	/**
	*赋值数据
	*@param $value
	*/
	__getset(0,__proto,'data',function(){return this._data;},function($value){
		var self=this;
		self._data=$value;
		if(!self._data){
			self.addBtn.visible=false;
			self.headImg.skin="";
			self.segmentImg.skin="";
			self.sexImg.skin="";
			self.nameText.text="";
			return;
		};
		var isShowAdd=(self._data.playerId !=PlayerInfo.instance.playerId);
		if(isShowAdd){
			isShowAdd=!FriendsMgr.ins.getIsMyFriend(self._data.playerId);
		}
		self.addBtn.visible=isShowAdd;
		self.headImg.skin=self._data.avatar;
		self.vipIcon.skin="assets/textrue/vip/ui_icon_vip"+self._data.vipLevel+".png";
		if(self.data.vipLevel==0){
			self.vipIcon.visible=false;
			self.sexImg.x=90;
			self.segmentImg.x=120;
			self.nameText.x=170;
		}
		else{
			self.vipIcon.visible=true;
			self.sexImg.x=140;
			self.segmentImg.x=170;
			self.nameText.x=220;
		};
		var rankVO=RankModel.getDivison(self._data.trophy);
		var medalRes=PathMgr.getMedalRes(rankVO);
		self.segmentImg.skin=medalRes.iconRes;
		self.sexImg.skin=self._data.sexUI;
		self.nameText.text=self._data.nickName;
		self.gray=self._data.isOffLine;
	});

	return AddFriendItem;
})(AddFriendItemUI)


//class modules.friends.items.AskItem extends ui.friends.items.AskItemUI
var AskItem=(function(_super){
	function AskItem(){
		this._className=null;
		this._data=null;
		AskItem.__super.call(this);this.init();}
	__class(AskItem,'modules.friends.items.AskItem',_super);
	var __proto=AskItem.prototype;
	__proto.init=function(){
		var self=this;
		self._className="AskItem";
		self.tipsText.text=LanguageMgr.Ins.GetLan("14300050");
		self.tipsText.height=self.tipsText.textField.textHeight+4;
		self.line.y=self.tipsText.y+self.tipsText.height+4;
		self.agreeBtn.y=self.line.y+self.line.height+(self.agreeBtn.height>>1)+10;
		self.refuseBtn.y=self.agreeBtn.y;
		self.bg.height=self.agreeBtn.y+(this.agreeBtn.height>>1)+10;
		self.addEvent();
	}

	__proto.addEvent=function(){
		var self=this;
		self.agreeBtn.clickHandler=Handler.create(self,self.onAgreeAskHandler,null,false);
		self.refuseBtn.clickHandler=Handler.create(self,self.onRefuseAskHandler,null,false);
	}

	__proto.removeEvent=function(){}
	__proto.onAgreeAskHandler=function(){
		FriendsMgr.ins.sendAgreeAsk(this._data.sendId,2);
	}

	__proto.onRefuseAskHandler=function(){
		FriendsMgr.ins.sendAgreeAsk(this._data.sendId,1);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
		this._data=null;
	}

	__getset(0,__proto,'className',function(){return this._className;});
	/**
	*设置聊天数据
	*@param value
	*/
	__getset(0,__proto,'data',function(){return this._data;},function(value){
		var self=this;
		self._data=value;
		self.headImg.skin=self._data.avatar;
		self.playerNameText.text=self._data.sendNickName;
	});

	return AskItem;
})(AskItemUI)


//class ui.newguide.GuideTalkUI extends laya.ui.BaseView
var GuideTalkUI=(function(_super){
	function GuideTalkUI(){
		this.blankBg=null;
		this.bottomBox=null;
		this.talkBg=null;
		this.txtName=null;
		this.txtContent=null;
		this.mc_finger=null;
		GuideTalkUI.__super.call(this);
		var temp=GuideTalkUI.uiView;
		GuideTalkUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(GuideTalkUI.uiView);
	}

	__class(GuideTalkUI,'ui.newguide.GuideTalkUI',_super);
	var __proto=GuideTalkUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	GuideTalkUI.uiView="eJyNU99r01AU/lfk+hpm88PY5rFDNkF9mSgiUm7bm+TaJDdLbmy3UWhlohVl+uCDboIiOhDGfBq1W9k/k6bt0/4FT5L+si1uuSEk95zz3e/7zskO4lsuQRrKY588pKSKBOR6zPWRtoO2kJYRUC15VmmZm0gTRVkVkEmoYXKkqUqmLqCSSa0y0p7sjLHu2NggVwJ6jj3IL1rYqeQNqPAr1IENh1SNgJbJjSSy4jpJjG6TNY/CSUgRkgWbNgt8ctvBRYtAgHsB+YedgLDlmhgOXlHrdWHCMM9qs/xSZiMyjHNmpwnpOwSvpHKJMo6t5cICWngWbFLHKBSNRN8su2X+3VQTA2Ux+z8wB9tkAe4uLhJrDk6VUjhZnnQkq0xY1/h9AIISTmpgJBqe7vZ+7w3b32Il3GMVssosFqdeVxRJysiTfYCcNkACrjpz+AZ0Dr7U9AuqNqi9TigUlcYwuk6KWEdxv6gRi7OIzi81RRRTGbncclc2A+ws2LH2IBY1B5QZ2SsBYJV55UcedsfzNPJHVcUZg1ZBCXH41KOw/W7ws9n/0ogaPy7O3obdg7DdiY6+h39aYfd80HjZ/7zba3waNlphp5MkfI0OWnH+h8PouBm2G2Fnf/jiV9Q8iTPf7A9f7UHa4Pgj3NHJ637zqH963mt3e+8PL86acDD117ltJWrmJj9u5YzxysT4e7TkMZ/p/NpjvNCB+LrUcklOjBIz4q2pM9mxMXapoMMcEm/5yPsmC7ZNOvqhx2xz2Xr9Kay/iDadug==";
	return GuideTalkUI;
})(BaseView)


//class modules.friends.items.BattleReportItem extends ui.friends.items.BattleReportItemUI
var BattleReportItem=(function(_super){
	function BattleReportItem(){
		this._className=null;
		this._data=null;
		BattleReportItem.__super.call(this);this.init();}
	__class(BattleReportItem,'modules.friends.items.BattleReportItem',_super);
	var __proto=BattleReportItem.prototype;
	__proto.init=function(){
		var self=this;
		self._className="BattleReportItem";
		self.mapNameText.text="";
		self.nameText_1.text="";
		self.nameText_2.text="";
		self.winNameText.text="";
		self.headImg_1.skin="";
		self.headImg_2.skin="";
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
		this._data=null;
	}

	__getset(0,__proto,'className',function(){return this._className;});
	/**
	*设置战报数据
	*@param value
	*/
	//self._data.nickName_1+"胜";
	__getset(0,__proto,'data',function(){return this._data;},function(value){
		var self=this;
		self._data=value;
		self.mapNameText.text=self._data.mapName;
		self.headImg_1.skin=self._data.avatar_1;
		self.headImg_2.skin=self._data.avatar_2;
		self.nameText_1.text=self._data.nickName_1;
		self.nameText_2.text=self._data.nickName_2;
		self.winNameText.text=self._data.winName;
	});

	return BattleReportItem;
})(BattleReportItemUI)


//class modules.friends.items.ChatItem extends ui.friends.items.ChatItemUI
var ChatItem=(function(_super){
	function ChatItem(){
		this._className=null;
		/**HTMLDivElement:可同时显示文字和图片，此处作为文本对象**/
		this._textfiled=null;
		this._data=null;
		ChatItem.__super.call(this);this.init();}
	__class(ChatItem,'modules.friends.items.ChatItem',_super);
	var __proto=ChatItem.prototype;
	__proto.init=function(){
		var self=this;
		self._className="ChatItem";
		self._textfiled=new HTMLDivElement();
		self._textfiled.width=250;
		self._textfiled.style.color="#c1742a";
		self._textfiled.style.fontSize=26;
		self._textfiled.style.valign="middle";
		self._textfiled.style.wordWrap=true;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		if(self._textfiled){
			self._textfiled.destroy();
		}
		self._textfiled=null;
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'className',function(){return this._className;});
	/**
	*设置聊天数据
	*@param value
	*/
	__getset(0,__proto,'data',function(){return this._data;},function(value){
		var self=this;
		self._data=value;
		self.leftView.visible=false;
		self.rightView.visible=false;
		var isMyChat=(self._data.sendId==PlayerInfo.instance.playerId);
		var view;
		if(isMyChat){
			view=self.rightView;
			self._textfiled.style.align="right";
			self._textfiled.pos(130,46);
		}
		else {
			view=self.leftView;
			self._textfiled.style.align="left";
			self._textfiled.pos(90,46);
		}
		view.visible=true;
		view.addChild(self._textfiled);
		view.headImg.skin=self._data.avatar;
		view.playerNameText.text=self._data.sendNickName;
		var chatStr=ChatUtils.onGetChatInfoZH(self._data.msg,{
			width:"38",
			height:"38",
			paddingTop:"-11",
			imgPaddingTop:'-9'
		});
		var html="<span style='padding:-11 0 0 0'>";
		html+=chatStr;
		html+="</span>";
		self._textfiled.innerHTML=html;
		self._textfiled.height=self._textfiled.contextHeight+4;
		view.bubbleImg.height=self._textfiled.contextHeight+30;
		if(view.bubbleImg.height < 45)
			view.bubbleImg.height=45;
		view.bubbleImg.width=self._textfiled.contextWidth+30;
		if(view.bubbleImg.width < 66){
			view.bubbleImg.width=66;
		}
		else if(view.bubbleImg.width > 286){
			(view.bubbleImg.width=286);
		}
	});

	return ChatItem;
})(ChatItemUI)


//class modules.friends.items.FacebookFriendItem extends ui.friends.items.FacebookFriendItemUI
var FacebookFriendItem=(function(_super){
	function FacebookFriendItem(){
		this._data=null;
		/**事件派发器 **/
		this.eventdispatch=null;
		FacebookFriendItem.__super.call(this);this.init();}
	__class(FacebookFriendItem,'modules.friends.items.FacebookFriendItem',_super);
	var __proto=FacebookFriendItem.prototype;
	__proto.init=function(){
		var self=this;
		self.data=null;
		self.addEvent();
	}

	__proto.addEvent=function(){
		var self=this;
		self.addFriendBtn.clickHandler=Handler.create(self,self.onAddFriendHandler,null,false);
	}

	__proto.removeEvent=function(){}
	/**添加好友 **/
	__proto.onAddFriendHandler=function(){
		var self=this;
		FriendsMgr.ins.sendAddFBFriend(self._data.openId,self._data.nickName);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	/**
	*赋值数据
	*@param $value
	*/
	__getset(0,__proto,'data',function(){return this._data;},function($value){
		var self=this;
		self._data=$value;
		if(!self._data){
			self.headImg.skin="";
			self.nameText.text="";
			return;
		}
		self.headImg.skin=self._data.avatar;
		self.nameText.text=self._data.nickName;
		self.gray=self._data.isOffLine;
		self.addFriendBtn.disabled=(self._data.facebookIndex >-1);
	});

	return FacebookFriendItem;
})(FacebookFriendItemUI)


//class modules.friends.items.GuildFriendItem extends ui.friends.items.GuildFriendItemUI
var GuildFriendItem=(function(_super){
	function GuildFriendItem(){
		this._data=null;
		/**事件派发器 **/
		this.eventdispatch=null;
		GuildFriendItem.__super.call(this);this.init();}
	__class(GuildFriendItem,'modules.friends.items.GuildFriendItem',_super);
	var __proto=GuildFriendItem.prototype;
	__proto.init=function(){
		var self=this;
		self.data=null;
		self.addEvent();
	}

	__proto.addEvent=function(){
		var self=this;
		self.detailsBtn.clickHandler=Handler.create(self,self.onDetailsHandler,null,false);
		self.addFriendBtn.clickHandler=Handler.create(self,self.onAddFriendHandler,null,false);
	}

	__proto.removeEvent=function(){}
	/**详情 **/
	__proto.onDetailsHandler=function(){
		SocketManager.Instance.out.requestPlayerInfo(this._data.playerId);
	}

	/**添加好友 **/
	__proto.onAddFriendHandler=function(){
		FriendsMgr.ins.sendAddFriend(this._data.playerId,this._data.nickName);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
		self._data=null;
	}

	/**
	*赋值数据
	*@param $value
	*/
	__getset(0,__proto,'data',function(){return this._data;},function($value){
		var self=this;
		self._data=$value;
		if(!self._data){
			self.headImg.skin="";
			self.segmentImg.skin="";
			self.nameText.text="";
			self.jobText.text="";
			return;
		}
		self.headImg.skin=self._data.avatar;
		self.vipIcon.skin="assets/textrue/vip/ui_icon_vip"+self._data.vipLevel+".png";
		if(self.data.vipLevel==0){
			self.vipIcon.visible=false;
			self.segmentImg.x=72;
			self.jobText.x=124;
		}
		else{
			self.vipIcon.visible=true;
			self.segmentImg.x=120;
			self.jobText.x=172;
		};
		var div=RankModel.getDivisionByTrophy(self._data.trophy);
		var rankVO=RankModel.getRankVO(div);
		var medalRes=PathMgr.getMedalRes(rankVO);
		self.segmentImg.skin=medalRes.iconRes;
		self.jobText.text=GuildMgr.ins.jobArr[self._data.guildJob-1];
		self.nameText.text=self._data.nickName;
		self.gray=self._data.isOffLine;
		var isIm=(self._data.playerId==PlayerInfo.instance.playerId);
		self.detailsBtn.visible=!isIm;
		self.addFriendBtn.disabled=isIm;
	});

	return GuildFriendItem;
})(GuildFriendItemUI)


//class modules.friends.items.MyFriendItem extends ui.friends.items.MyFriendItemUI
var MyFriendItem=(function(_super){
	function MyFriendItem(){
		this._data=null;
		/**事件派发器 **/
		this.eventdispatch=null;
		MyFriendItem.__super.call(this);this.init();}
	__class(MyFriendItem,'modules.friends.items.MyFriendItem',_super);
	var __proto=MyFriendItem.prototype;
	__proto.init=function(){
		var self=this;
		self.data=null;
		self.addEvent();
	}

	__proto.addEvent=function(){
		var self=this;
		self.operateBtn.clickHandler=Handler.create(self,self.onOperateHandler,null,false);
		self.sendOutBtn.clickHandler=Handler.create(self,self.onSendOutHandler,null,false);
		self.battleBtn.clickHandler=Handler.create(self,self.onEnterBattleHandler,null,false);
		self.bgImg.on("click",self,self.onClickSelf);
		self.clickHeadBg.on("click",self,self.onClickHead);
	}

	__proto.removeEvent=function(){
		var self=this;
		self.bgImg.off("click",self,self.onClickSelf);
		self.clickHeadBg.off("click",self,self.onClickHead);
	}

	__proto.onClickSelf=function(e){
		this.eventdispatch.event("event_change_chat_target",this._data);
	}

	__proto.onClickHead=function(e){
		this.eventdispatch.event("event_show_menu",this._data);
	}

	/**收取/索要 **/
	__proto.onOperateHandler=function(){
		var self=this;
		if(self._data.isCanReceive){
			FriendsMgr.ins.sendPlayerOperate(self._data.playerId,0);
		}
		else {
			if(!self._data.isCanAsk){
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300079"));
				return;
			}
			if(self._data.isOffLine)
				FriendsMgr.ins.sendShareAsk(PlayerInfo.instance.playerId,self._data.playerId);
			else{
				self.operateBtn.disabled=true;
				FriendsMgr.ins.sendPlayerOperate(self._data.playerId,1,self._data.chatServerId);
			}
		}
	}

	/**赠送 **/
	__proto.onSendOutHandler=function(){
		var flag=FriendsMgr.ins.sendPlayerOperate(this._data.playerId,2);
		this.sendOutBtn.disabled=flag;
	}

	/**友谊战 **/
	__proto.onEnterBattleHandler=function(){
		UIMgr.ins.openView("FriendshipWarWindow",Handler.create(this,this.openWindowComplete));
	}

	/**友谊战打开完成 **/
	__proto.openWindowComplete=function(view){
		view.init(this._data);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
		this.eventdispatch=null;
		this._data=null;
	}

	/**
	*赋值数据
	*@param $value
	*/
	__getset(0,__proto,'data',function(){return this._data;},function($value){
		var self=this;
		self._data=$value;
		if(!self._data){
			self.sendOutBtn.visible=false;
			self.headImg.skin="";
			self.segmentImg.skin="";
			self.sexImg.skin="";
			self.operateBtn.skin="";
			self.nameText.text="";
			self.stateBg.visible=false;
			self.stateText.text="";
			self.vipIcon.skin="";
			return;
		}
		self.sendOutBtn.visible=true;
		self.headImg.skin=self._data.avatar;
		self.vipIcon.skin="assets/textrue/vip/ui_icon_vip"+self._data.vipLevel+".png";
		if(self._data.vipLevel==0){
			self.vipIcon.visible=false;
			self.segmentImg.x=70;
			self.sexImg.x=120;
			self.nameText.x=155;
		}
		else{
			self.vipIcon.visible=true;
			self.segmentImg.x=118;
			self.sexImg.x=170;
			self.nameText.x=205;
		};
		var rankVO=RankModel.getDivison(self._data.trophy);
		var medalRes=PathMgr.getMedalRes(rankVO);
		self.segmentImg.skin=medalRes.iconRes;
		self.sexImg.skin=self._data.sexUI;
		self.nameText.text=self._data.nickName;
		self.battleBtn.visible=!self._data.isOffLine;
		self.clickHeadBg.gray=self._data.isOffLine;
		self.headImg.gray=self._data.isOffLine;
		self.headImg.gray=self._data.isOffLine;
		self.tipsPoint.gray=self._data.isOffLine;
		self.vipIcon.gray=self._data.isOffLine;
		self.segmentImg.gray=self._data.isOffLine;
		self.sexImg.gray=self._data.isOffLine;
		self.nameText.gray=self._data.isOffLine;
		self.stateBg.gray=self._data.isOffLine;
		self.stateText.gray=self._data.isOffLine;
		self.sendOutBtn.disabled=!self._data.isCanSendOut;
		if(self._data.isCanReceive){
			self.operateBtn.disabled=false;
			self.operateBtn.skin="friends/ui_shouqu.png";
		}
		else {
			self.operateBtn.skin="friends/ui_suoyao_2.png";
			if(FriendsMgr.ins.alreadyAskList[self._data.playerId]){
				self.operateBtn.disabled=true;
			}
			else {
				self.operateBtn.disabled=false;
			}
		}
		self.stateBg.visible=true;
		switch(self._data.onlineState){
			case FriendsState.OFFLINE:
				self.stateText.color="#b7b2b4";
				self.stateText.text=LanguageMgr.Ins.GetLan("9070125");
				break ;
			case FriendsState.FIGHT:
				self.stateText.color="#cd2770";
				self.stateText.text=LanguageMgr.Ins.GetLan("9002256");
				break ;
			case FriendsState.TEAM:
				self.stateText.color="#cd2770";
				self.stateText.text=LanguageMgr.Ins.GetLan("9070124");
				break ;
			case FriendsState.ONLINE:
				self.stateText.color="#85f352";
				self.stateText.text=LanguageMgr.Ins.GetLan("9070123");
				break ;
			}
		if(FriendsMgr.ins.chatingId==self._data.playerId){
			self.bgImg.skin="friends/ui_xinxi_zhong_02.png";
		}
		else {
			self.bgImg.skin="friends/ui_xinxi_zhong_01.png";
		}
	});

	return MyFriendItem;
})(MyFriendItemUI)


//class modules.friends.items.PhizItem extends ui.friends.items.PhizItemUI
var PhizItem=(function(_super){
	function PhizItem(){
		this._phizId=0;
		this.eventdispatch=null;
		PhizItem.__super.call(this);this.addEvent();}
	__class(PhizItem,'modules.friends.items.PhizItem',_super);
	var __proto=PhizItem.prototype;
	__proto.addEvent=function(){
		this.on("click",this,this.onClickItem);
	}

	__proto.removeEvent=function(){
		this.off("click",this,this.onClickItem);
	}

	__proto.onClickItem=function(){
		var phizName=LanguageMgr.Ins.GetAssignLan(LanguageMgr.Ins.countryAry[0],this.icon.name);
		this.eventdispatch.event("event_select_phiz",phizName);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
		this.eventdispatch=null;
	}

	/**
	*设置表情
	*@param value
	*/
	__getset(0,__proto,'phizId',function(){return this._phizId;},function(value){
		var self=this;
		self._phizId=value;
		self.icon.name=""+self._phizId;
		self.icon.skin="assets/textrue/biaoqing/"+self._phizId+".png";
	});

	return PhizItem;
})(PhizItemUI)


//class modules.friends.items.SystemTipsItem extends ui.friends.items.SystemTipsItemUI
var SystemTipsItem=(function(_super){
	function SystemTipsItem(){
		this._className=null;
		this._data=null;
		SystemTipsItem.__super.call(this);this.init();}
	__class(SystemTipsItem,'modules.friends.items.SystemTipsItem',_super);
	var __proto=SystemTipsItem.prototype;
	__proto.init=function(){
		var self=this;
		self._className="SystemTipsItem";
		self.titleText.text="";
		self.msgText.text="";
		self.lingBg.visible=false;
		self.agreeBtn.visible=false;
		self.refuseBtn.visible=false;
		self.addEvent();
	}

	__proto.addEvent=function(){
		var self=this;
		self.agreeBtn.clickHandler=Handler.create(self,self.onAgreeHandler,null,false);
		self.refuseBtn.clickHandler=Handler.create(self,self.onRefuseHandler,null,false);
	}

	__proto.removeEvent=function(){
		var self=this;
		self.agreeBtn.clickHandler.recover();
		self.refuseBtn.clickHandler.recover();
	}

	/**
	*同意
	*/
	__proto.onAgreeHandler=function(){
		if(this._data.msgType==SystemInfoType.GUILD_INVITE){
			FriendsMgr.ins.sendGuildInviteResp(this._data,2);
		}
		else {
			FriendsMgr.ins.sendAnsFriend(this._data,2);
		}
	}

	/**
	*拒绝
	*/
	__proto.onRefuseHandler=function(){
		if(this._data.msgType==SystemInfoType.GUILD_INVITE){
			FriendsMgr.ins.sendGuildInviteResp(this._data,1);
		}
		else {
			FriendsMgr.ins.sendAnsFriend(this._data,1);
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
		this._data=null;
	}

	__getset(0,__proto,'className',function(){return this._className;});
	/**
	*设置战报数据
	*@param value
	*/
	__getset(0,__proto,'data',function(){return this._data;},function(value){
		var self=this;
		self._data=value;
		self.msgText.y=42;
		switch(self._data.msgType){
			case SystemInfoType.CHAT_SYSTEM_NORMAL:
			case SystemInfoType.CHAT_SYSTEM_RESP:
			case SystemInfoType.CHAT_SYSTEM_DEL:
			case SystemInfoType.CHAT_SYSTEM_FRIEND_REJ:
			case SystemInfoType.CHAT_SYSTEM_DEL_BY_FRIEND:
			case SystemInfoType.GUILD_INVITE_RESP:
			case SystemInfoType.GUILD_INVIRE_REJ:
				self.titleText.text="";
				self.msgText.text=self._data.chatData.msg;
				self.lingBg.visible=false;
				self.agreeBtn.visible=false;
				self.refuseBtn.visible=false;
				self.msgText.y=10;
				break ;
			case SystemInfoType.CHAT_SYSTEM_REQ:
			case SystemInfoType.GUILD_INVITE:
				self.titleText.text=self._data.chatData.nickName;
				self.msgText.text=self._data.chatData.msg;
				self.lingBg.visible=true;
				self.agreeBtn.visible=true;
				self.refuseBtn.visible=true;
				self.msgText.y=42;
				break ;
			}
		self.msgText.y=self.titleText.y+self.titleText.textField.textHeight+4;
		self.msgText.height=self.msgText.textField.textHeight+4;
		self.lingBg.y=self.msgText.y+self.msgText.height+4;
		if(self.agreeBtn.visible){
			self.agreeBtn.y=self.lingBg.y+self.lingBg.height+(self.agreeBtn.height>>1)+4;
			self.bg.height=self.agreeBtn.y+self.agreeBtn.height+4;
		}
		else {
			self.agreeBtn.y=0;
			self.bg.height=self.msgText.y+this.msgText.height+10;
		}
		if(self.refuseBtn.visible)self.refuseBtn.y=self.agreeBtn.y;
		else self.refuseBtn.y=0;
		self.bg.height < 45 && (self.bg.height=45);
	});

	return SystemTipsItem;
})(SystemTipsItemUI)


//class modules.friends.items.TimeLineItem extends ui.friends.items.TimeLineItemUI
var TimeLineItem=(function(_super){
	function TimeLineItem(){
		this._className=null;
		this._data=null;
		TimeLineItem.__super.call(this);this.init();}
	__class(TimeLineItem,'modules.friends.items.TimeLineItem',_super);
	var __proto=TimeLineItem.prototype;
	__proto.init=function(){
		this._className="TimeLineItem";
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
		this._data=null;
	}

	__getset(0,__proto,'className',function(){return this._className;});
	/**
	*设置聊天数据
	*@param value
	*/
	__getset(0,__proto,'data',function(){return this._data;},function(value){
		var self=this;
		self._data=value;
		self.timeText.text=self._data.timeStr;
	});

	return TimeLineItem;
})(TimeLineItemUI)


//class modules.battle_apple.part.npc.AppleMan extends modules.battle_apple.part.npc.MapNpc
var AppleMan=(function(_super){
	function AppleMan(msg){
		this.fruitAni=null;
		this.hasShoot=false;
		this.treeNode=null;
		this.oriHeight=0;
		this.oriManPos=null;
		this.frameNum=0;
		this.isAdd=true;
		this.curAniName="idle";
		this.curFruitName=null;
		this.stayNum=0;
		this.offSet=90;
		AppleMan.__super.call(this,msg);
		LocalBattleMgr.getInstance().collideFighterArray.push(this);
		this.addEvents();
	}

	__class(AppleMan,'modules.battle_apple.part.npc.AppleMan',_super);
	var __proto=AppleMan.prototype;
	__proto.addEvents=function(){
		EventMgr.ins.on("SHOOT_APPLE",this,this.onShootFruit);
		EventMgr.ins.on("SHOOT_HEAD",this,this.onShootHead);
		EventMgr.ins.on("SHOOT_BODY",this,this.onShootBody);
		EventMgr.ins.on("SHOOT_AIR",this,this.onShootAir);
		EventMgr.ins.on("NEXT_TURN",this,this.onNextTurn);
		EventMgr.ins.on("REFRESH_COLLIDE_AREA",this,this.analyzeCollideData);
	}

	__proto.removeEvents=function(){
		EventMgr.ins.off("SHOOT_APPLE",this,this.onShootFruit);
		EventMgr.ins.off("SHOOT_HEAD",this,this.onShootHead);
		EventMgr.ins.off("SHOOT_BODY",this,this.onShootBody);
		EventMgr.ins.off("SHOOT_AIR",this,this.onShootAir);
		EventMgr.ins.off("NEXT_TURN",this,this.onNextTurn);
		EventMgr.ins.off("REFRESH_COLLIDE_AREA",this,this.analyzeCollideData);
	}

	__proto.onNextTurn=function(){
		this.hasShoot=false;
		this.updateFruit(LocalBattleMgr.getInstance().getCurFruit());
		this.oriHeight=90+LocalBattleMgr.getInstance().getTreeOriHeight();
		this.initTree();
	}

	__proto.onShootFruit=function(){
		this.hasShoot=true;
		Laya.timer.clear(this,this.updataTreeHeight);
		SoundMgr.instance.playSound(4006058);
		this.playNpcAni("hit3",false);
	}

	__proto.onShootHead=function(){
		if(!this.hasShoot){
			SoundMgr.instance.playSound(4006059);
			this.playNpcAni("hit",false);
		}
	}

	__proto.onShootBody=function(){
		if(!this.hasShoot){
			SoundMgr.instance.playSound(4006059);
			this.playNpcAni("hit",false);
		}
	}

	__proto.onShootAir=function(){
		if(!this.hasShoot){
			this.playNpcAni("hit2",false);
		}
	}

	__proto.initNpc=function(screenwidth,screenheight){
		this.init(screenwidth,screenheight,this.moveDir);
		this.y=screenheight-this.y;
		this.analyzeCollideData();
		this.npcNode=new Sprite();
		this.npcNode.mouseEnabled=true;
		this.npcNode.mouseThrough=true;
		this.addChild(this.npcNode);
		this.npcSkeleton=new AniSkeleton("npc6","npc","-1",false,
		new Handler(this,this.playEnd),new Handler(this,this.loadEnd));
		this.npcSkeleton.play("idle",true);
		this.turnRight(this.moveDir==Fighter.DIR_RIGHT);
		this.checkAngle(true);
		this.updateFruit(LocalBattleMgr.getInstance().getCurFruit());
		this.initTree();
		this.npcNode.addChild(this.npcSkeleton);
	}

	__proto.initTree=function(){
		LocalBattleMgr.getInstance().refreshMapNpc();
		this.destroyTree();
		if(LocalBattleMgr.getInstance().isNeedTree()){
			this.offSet=90;
			this.addTree();
			(this.treeNode.getChildByName("tree")).height=this.oriHeight;
			Laya.timer.clear(this,this.updataTreeHeight);
			Laya.timer.frameLoop(1,this,this.updataTreeHeight);
			this.changeTreeHeight(0);
			}else{
			Laya.timer.clear(this,this.updataTreeHeight);
			this.offSet=0;
			if(LocalBattleMgr.getInstance().appleTree){
				this.destroyTree();
				LocalBattleMgr.getInstance().appleTree=null;
			}
		}
	}

	__proto.updateFruit=function(fruitName){
		(fruitName===void 0)&& (fruitName="fruit1");
		this.destroyFruit();
		this.fruitAni=new AniSkeleton(fruitName,"npc","-1",false,new Handler(this,this.playEnd),new Handler(this,this.loadEnd));
		this.playNpcAni("idle",true);
		this.addChild(this.fruitAni);
	}

	__proto.getFruitArea=function(){
		var tempStr=ConfigModel.getConfigData(1082).ConfigValue;
		var tempDatas=tempStr.split(";");
		var tempData=tempDatas[0];
		var curIndex=LocalBattleMgr.getInstance().getCurFruitIndex();
		for(var i=0;i < tempDatas.length;i++){
			var data=String(tempDatas[i]).split(",");
			if(curIndex==int(data[0])){
				tempData=data;
				break ;
			}
		}
		return {radius:int(tempData[1]),anchorX:0.5,anchorY:0.5,posX:int(tempData[2]),posY:int(tempData[3])}
	}

	__proto.addTree=function(){
		if(!this.treeNode){
			this.treeNode=new Sprite();
			this.treeNode.x=this.x;
			this.treeNode.y=this.y-this.offSet;
			this.treeNode.y=this.treeNode.y+this.offSet;
			this.treeNode.zOrder=-1;
			LocalBattleMgr.getInstance().singleScene.roleView.addChild(this.treeNode);
			var img=new Image("appleGame/fruit/tree.png");
			img.anchorX=0.5;
			img.anchorY=1;
			img.height=this.oriHeight;
			img.name="tree";
			img.sizeGrid="55,22,38,14";
			LocalBattleMgr.getInstance().appleTree=img;
			this.treeNode.addChild(img);
			this.frameNum=0;
			}else{
			this.treeNode.x=this.x;
			this.treeNode.y=this.y-this.offSet;
			this.treeNode.y=this.treeNode.y+this.offSet;
		}
	}

	__proto.updataTreeHeight=function(){
		var stayConfNum=0;
		if (this.frameNum <=0){
			this.stayNum++;
			this.frameNum++;
			this.isAdd=true;
			stayConfNum=LocalBattleMgr.getInstance().getUpStayNum(this.isAdd);
			}else if(this.frameNum >=LocalBattleMgr.getInstance().getMaxFrame(this.isAdd)){
			this.stayNum++;
			this.frameNum--;
			this.isAdd=false;
			stayConfNum=LocalBattleMgr.getInstance().getUpStayNum(this.isAdd);
		}
		if(this.stayNum > 0 && this.stayNum < stayConfNum){
			this.stayNum++;
			}else{
			if(this.isAdd){
				this.frameNum++;
				}else{
				this.frameNum--;
			}
			this.stayNum=0;
			this.newUpdateHeight(this.isAdd);
		}
	}

	__proto.newUpdateHeight=function(isAdd){
		var a=LocalBattleMgr.getInstance().getAcceleration(isAdd);
		var offset=1/2 *a *Math.pow(this.frameNum,2);
		this.changeTreeHeight(offset);
	}

	__proto.oldUpdateHeight=function(){
		var offset=this.frameNum*LocalBattleMgr.getInstance().getMoveSpeed();
		this.changeTreeHeight(offset);
	}

	__proto.changeTreeHeight=function(treeHeight){
		if(!this.hasShoot){
			(this.treeNode.getChildByName("tree")).height=this.oriHeight+treeHeight;
			this.oriManPos=LocalBattleMgr.getInstance().getCurNpcPos();
			LocalBattleMgr.getInstance().refreshMapNpc(new Point(this.oriManPos.x,this.oriManPos.y+this.oriHeight+treeHeight-15));
		}
	}

	__proto.loadEnd=function(){
		this.playNpcAni("idle",true);
	}

	__proto.playEnd=function(){
		this.playNpcAni("idle",true);
		if(this.hasShoot){
			this.fruitAni.visible=false;
		}
	}

	__proto.playNpcAni=function(aniName,loop){
		this.npcSkeleton.playSkeleton(aniName,loop);
		if(this.fruitAni){
			this.fruitAni.play(aniName,loop);
		}
	}

	// }
	__proto.analyzeCollideData=function(){
		var datas=[];
		var tempStr=ConfigModel.getConfigData(1070).ConfigValue;
		var tempDatas=tempStr.split(";");
		datas.push(this.getFruitArea());
		for(var i=0;i < tempDatas.length;i++){
			var data=String(tempDatas[i]).split(",");
			datas.push({radius:int(data[0]),anchorX:0.5,anchorY:0.5,posX:int(data[1]),posY:int(data[2])});
		}
		this.collideArea=datas;
	}

	__proto.destroyFruit=function(){
		if (this.fruitAni){
			this.fruitAni.removeSelf();
			this.fruitAni.destroy(true);
			this.fruitAni=null;
		}
	}

	__proto.destroyTree=function(){
		if (this.treeNode){
			this.treeNode.removeSelf();
			this.treeNode.destroy(true);
			this.treeNode=null;
		}
	}

	__proto.destroyFighter=function(){
		if(this.isDestroy)
			return;
		if(this.npcSkeleton){
			this.npcSkeleton.destroy();
			this.npcSkeleton=null;
		}
		this.destroyFruit();
		this.destroyTree();
		this.removeEvents();
		_super.prototype.destroyFighter.call(this);
	}

	AppleMan.TREE_HEIGHT=90;
	return AppleMan;
})(MapNpc)


//class modules.guild.boxviews.BarBoxView extends ui.guild.boxviews.BarBoxViewUI
var BarBoxView=(function(_super){
	function BarBoxView($eventDispatcher){
		this._eventDispatcher=null;
		/**宝箱最大等级 **/
		this._maxBoxLevel=0;
		/**活动开始时间 ,可能为-1，表示没有该活动 */
		this._startTime=NaN;
		/**活动结束时间 ,可能为-1，表示没有该活动 */
		this._endTime=NaN;
		/**活动领奖时间 ,可能为-1，表示没有该活动 */
		this._awardTime=NaN;
		/**公会活动期间总胜利次数 */
		this._victoryCnt=0;
		/**公会宝箱列表[GuildBoxInfo.as,GuildBoxInfo.as...] **/
		this._listData=null;
		/**下次活动开始时间，可能为-1，表示没有该活动 */
		this._nextStartTime=NaN;
		/**总的胜利次数 */
		this._totalWin=0;
		/**当前宝箱等级 */
		this._curBoxLevel=0;
		/**ITEM表中物品数据 */
		this._itemVo=null;
		this._clockAni=null;
		this._guildBoxInfoMsg=null;
		BarBoxView.__super.call(this);this._eventDispatcher=$eventDispatcher;this.init();}
	__class(BarBoxView,'modules.guild.boxviews.BarBoxView',_super);
	var __proto=BarBoxView.prototype;
	//时钟Icon
	__proto.init=function(){
		var self=this;
		self.lan3.text=LanguageMgr.Ins.GetLan("9002089");
		self.txtTimeKey.text=LanguageMgr.Ins.GetLan("9002302");
		self.lan4.text=LanguageMgr.Ins.GetLan("9002088");
		self.boxTitleText.text=LanguageMgr.Ins.GetLan("9002084");
		self._clockAni=new AniSkeleton("ui3","ui");
		self.addChild(self._clockAni);
		self._clockAni.x=self.txtTime.x-12;
		self._clockAni.y=self.txtTime.y+14;
		self._maxBoxLevel=GuildMgr.ins.MAX_BOX_LEVEL;
		self.addEvent();
	}

	/**
	*设置公会宝箱数据
	*@param $msg
	*/
	__proto.setGuildBoxInfoMsg=function($msg){
		var self=this;
		self._guildBoxInfoMsg=$msg;
		self._listData=$msg.guildBoxInfo;
		self._startTime=parseFloat($msg.startTime);
		self._endTime=parseFloat($msg.endTime);
		self._awardTime=parseFloat($msg.awardTime);
		self._victoryCnt=$msg.victoryCount;
		self._nextStartTime=parseFloat($msg.nextStartTime);
		self._totalWin=GuildModel.getNeedVictoryCnt(this._victoryCnt);
		self._curBoxLevel=GuildModel.getBoxLevel(this._victoryCnt);
		var awardVo=GuildModel.getGuildAwardVO(PlayerInfo.instance.division,self._victoryCnt);
		var str=awardVo.ItemID;
		var itemId=str.split("|")[0];
		self._itemVo=ItemModel.getItemConfigData(itemId);
		self.showCoinAndCard();
		self.updateBar();
		self.createTimer(self._endTime);
	}

	__proto.removeEvent=function(){
		var self=this;
		self.btnBox.off("click",self,self.onShowBoxTip);
		Laya.timer.clearAll(this);
	}

	__proto.addEvent=function(){
		var self=this;
		self.btnHelp.clickHandler=Handler.create(self,self.onHelp,null,false);
		self.btnBox.on("click",self,self.onShowBoxTip);
	}

	__proto.onHelp=function(){
		UIMgr.ins.openView("HelpDescriptionView",Handler.create(this,function(view){
			view.initHelp(4);
		}));
	}

	__proto.onShowBoxTip=function(e){
		if(this._curBoxLevel==0){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9040020"));
			return;
		};
		var tip=TipsManager.Instance().addItemTip(this._itemVo,e);
	}

	/**活动倒计时 **/
	__proto.createTimer=function(time){
		var self=this;
		Laya.timer.clear(self,self.onTimeHandler);
		Laya.timer.loop(1000,self,self.onTimeHandler,[time]);
		self.onTimeHandler(self._endTime);
	}

	__proto.onTimeHandler=function(time){
		var self=this;
		var endTime=TimeManager.Instance.checkTimeEndNum(time);
		if(endTime > 0){
			self.txtTime.text=TimeManager.Instance.getTimemilSecTxt(endTime);
		}
		else {
			Laya.timer.clearAll(self);
			self._eventDispatcher.event("change_box_view");
		}
	}

	/**宝箱进度 */
	__proto.updateBar=function(){
		var self=this;
		self.barValue.text=self._victoryCnt+"/"+self._totalWin;
		self.bar.value=self._victoryCnt / self._totalWin;
		self.txtLevel.text=self._curBoxLevel+"/"+self._maxBoxLevel;
		self.txtLevel.text=self._curBoxLevel+"/"+self._maxBoxLevel;
	}

	/**显示奖励可以获得多少金币和卡牌 */
	__proto.showCoinAndCard=function(){
		var self=this;
		var arr2=this._itemVo.Param2.split(",");
		var goldStr=arr2[0];
		var cardStr=arr2[1];
		self.txtCoin.text="x"+goldStr.split("|")[1];
		self.txtCard.text="x"+cardStr.split("|")[2];
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		self._clockAni.destroy();
		laya.ui.View.prototype.destroy.call(this);
		self._clockAni=null;
	}

	return BarBoxView;
})(BarBoxViewUI)


//class modules.guild.boxviews.OpenBoxView extends ui.guild.boxviews.OpenBoxViewUI
var OpenBoxView=(function(_super){
	function OpenBoxView($eventDispatcher){
		this._eventDispatcher=null;
		/**宝箱最大等级 **/
		this._maxBoxLevel=0;
		/**活动开始时间 ,可能为-1，表示没有该活动 */
		this._startTime=NaN;
		/**活动结束时间 ,可能为-1，表示没有该活动 */
		this._endTime=NaN;
		/**活动领奖时间 ,可能为-1，表示没有该活动 */
		this._awardTime=NaN;
		/**公会活动期间总胜利次数 */
		this._victoryCnt=0;
		/**公会宝箱列表[GuildBoxInfo.as,GuildBoxInfo.as...] **/
		this._listData=null;
		/**下次活动开始时间，可能为-1，表示没有该活动 */
		this._nextStartTime=NaN;
		/**总的胜利次数 */
		this._totalWin=0;
		/**当前宝箱等级 */
		this._curBoxLevel=0;
		/**ITEM表中物品数据 */
		this._itemVo=null;
		this._guildBoxInfoMsg=null;
		this._isCanOpenBox=false;
		OpenBoxView.__super.call(this);this._eventDispatcher=$eventDispatcher;this.init();}
	__class(OpenBoxView,'modules.guild.boxviews.OpenBoxView',_super);
	var __proto=OpenBoxView.prototype;
	__proto.init=function(){
		var self=this;
		self.txtUnact.text=LanguageMgr.Ins.GetLan("9002090");
		self.lan5.text=LanguageMgr.Ins.GetLan("9002091");
		self.btnOpen.skin="language/"+LanguageMgr.Ins.country+"/guild/ui_kqghbx_but.png";
		self.addEvent();
	}

	__proto.setGuildBoxInfoMsg=function($msg){
		var self=this;
		self._guildBoxInfoMsg=$msg;
		self._guildBoxInfoMsg=$msg;
		self._listData=$msg.guildBoxInfo;
		self._startTime=parseFloat($msg.startTime);
		self._endTime=parseFloat($msg.endTime);
		self._awardTime=parseFloat($msg.awardTime);
		self._victoryCnt=$msg.victoryCount;
		self._nextStartTime=parseFloat($msg.nextStartTime);
		self._totalWin=GuildModel.getNeedVictoryCnt(this._victoryCnt);
		self._curBoxLevel=GuildModel.getBoxLevel(this._victoryCnt);
		var awardVo=GuildModel.getGuildAwardVO(PlayerInfo.instance.division,self._victoryCnt);
		var str=awardVo.ItemID;
		var itemId=str.split("|")[0];
		self._itemVo=ItemModel.getItemConfigData(itemId);
		self.txtLevel.text=self._curBoxLevel+"/"+self._maxBoxLevel;
	}

	__proto.removeEvent=function(){
		if(this.btnOpen.clickHandler){
			this.btnOpen.clickHandler.recover();
			this.btnOpen.clickHandler=null;
		}
	}

	__proto.addEvent=function(){
		var self=this;
		this.btnOpen.clickHandler=Handler.create(this,this.onOpenBox,null,false);
	}

	/**显示奖励可以获得多少金币和卡牌 */
	__proto.showCoinAndCard=function(){
		var self=this;
		var arr2=self._itemVo.Param2.split(",");
		var goldStr=arr2[0];
		var cardStr=arr2[1];
		self.txtMycard.text="x"+goldStr.split("|")[1];
		self.txtMycoin.text="x"+cardStr.split("|")[2];
	}

	/**开宝箱 */
	__proto.onOpenBox=function(){
		SocketManager.Instance.out.reqGuildChestInfo(2);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this);
	}

	/**
	*设置宝箱是否可开启
	*@param value
	*/
	__getset(0,__proto,'isCanOpenBox',function(){return this._isCanOpenBox;},function(value){
		var self=this;
		self._isCanOpenBox=value;
		self.txtUnact.visible=!value;
		self.btnOpen.visible=value;
	});

	return OpenBoxView;
})(OpenBoxViewUI)


//class modules.guild.boxviews.UnopenBoxView extends ui.guild.boxviews.UnopenBoxViewUI
var UnopenBoxView=(function(_super){
	function UnopenBoxView($eventDispatcher){
		this._eventDispatcher=null;
		/**活动开始时间 ,可能为-1，表示没有该活动 */
		this._startTime=NaN;
		/**活动结束时间 ,可能为-1，表示没有该活动 */
		this._endTime=NaN;
		/**活动领奖时间 ,可能为-1，表示没有该活动 */
		this._awardTime=NaN;
		/**公会活动期间总胜利次数 */
		this._victoryCnt=0;
		/**公会宝箱列表[GuildBoxInfo.as,GuildBoxInfo.as...] **/
		this._listData=null;
		/**下次活动开始时间，可能为-1，表示没有该活动 */
		this._nextStartTime=NaN;
		/**总的胜利次数 */
		this._totalWin=0;
		/**当前宝箱等级 */
		this._curBoxLevel=0;
		/**ITEM表中物品数据 */
		this._itemVo=null;
		this._clockAni=null;
		this._guildBoxInfoMsg=null;
		UnopenBoxView.__super.call(this);this._eventDispatcher=$eventDispatcher;this.init();}
	__class(UnopenBoxView,'modules.guild.boxviews.UnopenBoxView',_super);
	var __proto=UnopenBoxView.prototype;
	//时钟Icon
	__proto.init=function(){
		var self=this;
		self.lan4.text=LanguageMgr.Ins.GetLan("9002088");
		self.txtTimeKey.text=LanguageMgr.Ins.GetLan("9002087");
		self.lan0.text=LanguageMgr.Ins.GetLan("9002084");
		self.lan1.text=LanguageMgr.Ins.GetLan("14300234");
		self.lan2.text=LanguageMgr.Ins.GetLan("14300235");
		self.unopenTipsText.text=LanguageMgr.Ins.GetLan("9002085");
		self._clockAni=new AniSkeleton("ui3","ui");
		self.addChild(self._clockAni);
		self._clockAni.x=self.txtTime.x-12;
		self._clockAni.y=self.txtTime.y+14;
	}

	__proto.setGuildBoxInfoMsg=function($msg){
		var self=this;
		self._guildBoxInfoMsg=$msg;
		self._listData=$msg.guildBoxInfo;
		self._startTime=parseFloat($msg.startTime);
		self._endTime=parseFloat($msg.endTime);
		self._awardTime=parseFloat($msg.awardTime);
		self._victoryCnt=$msg.victoryCount;
		self._nextStartTime=parseFloat($msg.nextStartTime);
		self._totalWin=GuildModel.getNeedVictoryCnt(this._victoryCnt);
		self._curBoxLevel=GuildModel.getBoxLevel(this._victoryCnt);
		self.addEvent();
		self.showStartTime();
	}

	__proto.removeEvent=function(){
		Laya.timer.clearAll(this);
	}

	__proto.addEvent=function(){
		var self=this;
		self.btnHelp.clickHandler=Handler.create(self,self.onHelp,null,false);
	}

	__proto.onHelp=function(){
		UIMgr.ins.openView("HelpDescriptionView",Handler.create(this,function(view){
			view.initHelp(4);
		}));
	}

	/**显示距离活动开始还有多长时间 */
	__proto.showStartTime=function(){
		var self=this;
		var time=TimeManager.Instance.checkTimeEndNum(this._awardTime);
		if(time > 0){
			time=this._nextStartTime;
			if(TimeManager.Instance.checkTimeEndNum(this._startTime)< 0){}
				else {
				time-=7*24*60*60*1000;
			}
			self.txtTimeKey.text=LanguageMgr.Ins.GetLan("9002293");
		}
		else{
			var endTime=TimeManager.Instance.checkTimeEndNum(this._startTime);
			var endTime1=TimeManager.Instance.checkTimeEndNum(this._nextStartTime);
			if(endTime > 0){
				time=this._startTime;
				self.txtTimeKey.text=LanguageMgr.Ins.GetLan("9002301");
			}
			else if(endTime1 > 0){
				time=this._nextStartTime;
				if(TimeManager.Instance.checkTimeEndNum(this._startTime)< 0){}
					else {
					time-=7*24*60*60*1000;
				}
				self.txtTimeKey.text=LanguageMgr.Ins.GetLan("9002293");
			}
		}
		self.txtTime.text="";
		self.txtTimeKey.visible=true;
		self.txtTime.visible=true;
		self.createTimer(time);
	}

	__proto.onTimeHandler=function(time){
		var self=this;
		var endTime=TimeManager.Instance.checkTimeEndNum(time);
		if(endTime>0){
			self.txtTime.text=TimeManager.Instance.getTimemilSecTxt(endTime);
			}else{
			Laya.timer.clearAll(self);
			self._eventDispatcher.event("change_box_view");
		}
	}

	__proto.createTimer=function(time){
		var self=this;
		Laya.timer.clear(self,this.onTimeHandler);
		Laya.timer.loop(1000,self,self.onTimeHandler,[time]);
		self.onTimeHandler(time);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		self._clockAni.destroy();
		laya.ui.View.prototype.destroy.call(this);
		self._clockAni=null;
	}

	return UnopenBoxView;
})(UnopenBoxViewUI)


//class ui.room.PVPRoomViewUI extends laya.ui.BaseView
var PVPRoomViewUI=(function(_super){
	function PVPRoomViewUI(){
		this.bgBox=null;
		this.bgLeft=null;
		this.bgRight=null;
		this.topBox=null;
		this.titleBg=null;
		this.roomTitle=null;
		this.returnBtn=null;
		this.helpBtn=null;
		this.roleList=null;
		this.bottomBox=null;
		this.startGameBtn=null;
		this.startGameBtn_Effect=null;
		this.btnIcon=null;
		this.tipBtn=null;
		this.meiliLevelTxt=null;
		this.meiliBar=null;
		this.meiliBarTxt=null;
		this.skillBtn1=null;
		this.skillIcon1=null;
		this.skillName1=null;
		this.skillBtn2=null;
		this.skillIcon2=null;
		this.skillName2=null;
		this.skillCardBtn=null;
		this.taskBtn=null;
		this.chat_bg=null;
		this.box=null;
		PVPRoomViewUI.__super.call(this);
		var temp=PVPRoomViewUI.uiView;
		PVPRoomViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(PVPRoomViewUI.uiView);
	}

	__class(PVPRoomViewUI,'ui.room.PVPRoomViewUI',_super);
	var __proto=PVPRoomViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.room.view.render.RoomRoleItemRender",RoomRoleItemRender);
		View.regComponent("modules.battle.view.menu.ChatBriefBattleView",ChatBriefBattleView);
		ClassUtils.createByJson(uiData,this,this);
	}

	PVPRoomViewUI.uiView="eJzdV0tu40YQvYrR2SSARmY3fyKXMgLHgDMYeAwng2AwaIktsm3+0mzJHhsGssgiR5hdjpBNNsEscpo4yC1SZFP8iD2mbAwQIFoI4Keq672qelW8Q/J9zpCP5rRgF5xdownKRZYXyL9D1zyQEfIxNp0JihgPI4l8xzLuJ2gZ8ThA/g93jX120zV9j3xjgm6q/w0V8MIiLF/RmZ4kNGRjxqdsJeGd4oqncC2yLDlc83fz4+llHqL7+8ke3gCH3To8q+B8yiPcX9KYfY/8F3jMu+tW7m1jNvC2CPE0T8sA33acjHIls/xZZPUSVrviMmbzcAh0QUUVGjzgt+xYcDgGGRNjQpwJtmaok3F7jAGsGMCmNTjmtqgJaD2c0gWLdzzMlAPbbEA4TkNH6eu8xAFGkt1ASOjVxau/fvvj4ZcPZfxSZFfsKIuz8uUvDGqtHKu5j3zSQikLYJWl8jVAhgdEXYHVt3wpsiJbyYM39BvGwXq59beqfnCHxjwsocVlKXYBvZyvpczSHUgmVmXhNjCYXIt0LtNhMlY0jdZ8wJTeMbEqx54LZG14wRdAjL+iccG2J0UszrXnFEmd87jKgY92KvOUF3I3t2bdPV6bG9fu5CZmtVWR02XZMbh82jDuEl0Zn0FAZ2B6IlnSPVCsU8mT8o0kC9YxK6Zl6NMNKNNUsDRgYto1PatugQP17Fw5VxejTWd5doWMmKSRhQz4Tp7Se5ajsmzbDTsWMXSyomk2awb9ZpudXvPAHU2XUSZKIh/tOzjV8bzBSVeUFxEP9i0mV8U/K6t1Kx9ktuWjkFTIY5owVU3bKOGN/WbATNWO4+kcvvt6tWLLsnIU4jegYVO7gx+uegB0/M9U/KRVdpmeLLNO7cc0DddgeHgU8ZQV7LDPlEaf9UzVWAi2Wm3Vd5ls/PYabQSJXfsn3njoCeMxP/iSfLWXuLpKiUzcjgi3aeDK1SnbsPj8RrYCe7o5IENtdQgmrl5aiduTVuPzSOsrkYWCFcWcil1dMlT3YrfVpUqjOrCU1YbGa1YaDNvyMpDbEd1rTWxOQGVhrBHSKXvijTGNDa8OynosqC7Tnlc1cZ/nwCEL7xMzbEutIho7zyJ6yVJZSeRY1XukAmSRBgRQGMdQ93hY+BwabxGqmtxTPzGud7OGL9vunVQ2s+aoH+VtXOdtS4xtjzaC2lNMIPw6E8F3gubIl2LNOpOtd/hLUCqsSkjxlvAg6O4hf3/8+Z8Pvz78+dPD7x+H7WKaBBvOPqsItnvZsg3beFQXNZkcV7A6l7aBd3NJPk8ujT1yqTmqiGT49FzOnpFL8v/Jpakmq0F6II+oCLQz6RIGSBrWa4guofrpqjIKe0qz3Dh7DNZ8J5uO1cGPdyf83mBdox29tLj6z3GK6yfifHwftU212GNI6XAPXlAJX0BqE05Yup4eRVTOBWerefWk+njft1NfWDufjMRrFoIl+IUPV91akxf6aYkn8JFQ/XeXRKM3Li+GgJUae20QbmcRv9l+UVSdpumQt/f/AmS7Q+0=";
	return PVPRoomViewUI;
})(BaseView)


/**
*申请入会结果消息
*/
//class modules.guild.item.chat.ChatMeansItem extends ui.guild.item.ChatMeansItemUI
var ChatMeansItem=(function(_super){
	/**
	*@param res 操作类型
	*@param msg 请求类型
	*/
	function ChatMeansItem(){
		ChatMeansItem.__super.call(this);
	}

	__class(ChatMeansItem,'modules.guild.item.chat.ChatMeansItem',_super);
	var __proto=ChatMeansItem.prototype;
	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(ChatMeansItemUI,this,'dataSource',value);
		var chat=value;
		this.txtContent.color=chat.param ? chat.param :"#ff0000";
		this.txtContent.text=chat.content;
		this.height=this.bg.height=this.txtContent.height+25
	});

	return ChatMeansItem;
})(ChatMeansItemUI)


//class ui.room.QRViewUI extends laya.ui.BaseView
var QRViewUI=(function(_super){
	function QRViewUI(){
		this.bg=null;
		this.QRImage=null;
		this.backBtn=null;
		this.descText2=null;
		this.descText1=null;
		this.nickName=null;
		QRViewUI.__super.call(this);
		var temp=QRViewUI.uiView;
		QRViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(QRViewUI.uiView);
	}

	__class(QRViewUI,'ui.room.QRViewUI',_super);
	var __proto=QRViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("Text",Text);
		ClassUtils.createByJson(uiData,this,this);
	}

	QRViewUI.uiView="eJylkc1Kw0AUhd/lug3m17TNsjs3BX9wIy4m6TQZmmRiZmJbS0ALgj6BCzduhIILN4LLPo21fQtn0iamRVQwiyHMnHu+e88dAx8lGBxoI4ZPCB6AAklKEwbOGAakywNwdN20FQgw8QMOjm1puQJeQMIuOKfjsn4/Qj6uF4/A0RQYFueG0QVKhd71hZj1SSz+EWOYM5XjIU8zrHo0imisumGGd5NY6ursXPmRaegrqqU3K66paSX24LAsKj3FY92z0844p/GWq2UWpnajah95/TaXMsYRx50sEuNVA52n6lqwHiBELg7FA9RRx2LeLY5uWwVoT2+VpC5mnlQaQioTElfzu+ePx+vF7OH95knc9mjMj8ilsDREtUdDKut2esUn3l0qVyWj/Y0uM5P0hrFN17/oy8nV4uVtPpmuGpjfzpb3r5ttaP9swy7aMI1WtULDbJYtxcTrd1CEv8+jHky5YhnL30NSAIXEl2tMi/I8P8s/AcBPDXk=";
	return QRViewUI;
})(BaseView)


/**
*玩家请求加入公会的消息
*/
//class modules.guild.item.chat.ChatRequestItem extends ui.guild.item.ChatRequestItemUI
var ChatRequestItem=(function(_super){
	function ChatRequestItem(){
		this._playerId=null;
		this._msg=null;
		ChatRequestItem.__super.call(this);
	}

	__class(ChatRequestItem,'modules.guild.item.chat.ChatRequestItem',_super);
	var __proto=ChatRequestItem.prototype;
	__proto.init=function(){
		this.btnNo.label=LanguageMgr.Ins.GetLan("9007389");
		this.btnYes.label=LanguageMgr.Ins.GetLan("9007390");
		this.btnNo.clickHandler=new Handler(this,this.onNo);
		this.btnYes.clickHandler=new Handler(this,this.onYes);
	}

	__proto.onYes=function(){
		SocketManager.Instance.out.sendGuildOption(6,"",1,0,this._playerId);
	}

	__proto.onNo=function(){
		SocketManager.Instance.out.sendGuildOption(6,"",0,0,this._playerId);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if (this.btnYes.clickHandler){
			this.btnYes.clickHandler.recover();
			this.btnYes.clickHandler=null;
		}
		if (this.btnNo.clickHandler){
			this.btnNo.clickHandler.recover();
			this.btnNo.clickHandler=null;
		}
		this._msg=null;
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(ChatRequestItemUI,this,'dataSource',value);
		this._msg=(value).msg;
		this._playerId=this._msg.playerId.toString();
		this.init();
		if (this._msg.opPlayerId.toString()=="0"){
			if (PlayerInfo.instance.guildJob !=4){
				this.txtContent.y=18;
				this.txtContent.color="#dbdfe2";
				this.height=this.bg.height=105;
				this.btnNo.visible=this.btnYes.visible=true;
				this.txtContent.text=LanguageMgr.Ins.GetLan("9002160",this._msg.nickName+" ");
			}
			else{
				this.txtContent.y=11;
				this.txtContent.color="#8b5019";
				this.height=this.bg.height=50;
				this.btnNo.visible=this.btnYes.visible=false;
				this.txtContent.text=LanguageMgr.Ins.GetLan("9002160",this._msg.nickName+" ");
			}
		}
		else{
			this.btnNo.visible=this.btnYes.visible=false;
			this.txtContent.y=11;
			this.height=this.bg.height=50;
			if (this._msg.opPlayerId.toString()=="-1"){
				this.txtContent.color="#ff0000";
				this.txtContent.text=this._msg.nickName+" "+LanguageMgr.Ins.GetLan("9002113");
			}
			else{
				if (this._msg.isPassed){
					this.txtContent.color="#00c1ff";
					this.txtContent.text=LanguageMgr.Ins.GetLan("9010001",this._msg.opNickName,this._msg.nickName);
				}
				else{
					this.txtContent.color="#8b5019";
					this.txtContent.text=LanguageMgr.Ins.GetLan("9002172",this._msg.opNickName,this._msg.nickName);
				}
			}
		}
	});

	return ChatRequestItem;
})(ChatRequestItemUI)


/**
*技能捐赠页面列表子项
*/
//class modules.guild.item.chat.DonateCardItem extends ui.guild.item.DonateCardItemUI
var DonateCardItem=(function(_super){
	function DonateCardItem(){
		this.data=null;
		this._skillVo=null;
		DonateCardItem.__super.call(this);
		this.reset();
		this.btn_request.clickHandler=new Handler(this,this.onRequest);
		this.btn_request.label=LanguageMgr.Ins.GetLan("9002162");
	}

	__class(DonateCardItem,'modules.guild.item.chat.DonateCardItem',_super);
	var __proto=DonateCardItem.prototype;
	__proto.onRequest=function(){
		var itemVo=ItemModel.getItemBySkillId(this._skillVo.BasicSkill);
		SocketManager.Instance.out.sendGuildOption(9,"",itemVo.ItemID);
	}

	__proto.reset=function(){
		this.btn_request.visible=false;
	}

	__proto.cardShow=function(){
		this.btn_request.visible=true;
	}

	__proto.onComplete=function(view){
		view.setData(this._skillVo,true,false);
	}

	__proto.setData=function(vo){
		this._skillVo=vo;
		this.data=SkillModel.getSkillPerformanceBySkillId(this._skillVo.Display);
		this.card.skillVo=vo;
		if(this._skillVo.NextSkill==0){
			this.bar.skin="skill/progress_3.png";
			this.countTxt.text=this._skillVo.skillCard+"";
			this.bar.value=1;
		}
		else{
			if(this._skillVo.skillCard >=this._skillVo.CostSkillPoint && this._skillVo.CostSkillPoint > 0){
				this.bar.skin="skill/progress_2.png";
				}else{
				this.bar.skin="skill/progress_1.png";
			}
			this.countTxt.text=this._skillVo.skillCard+"/"+this._skillVo.CostSkillPoint;
			this.bar.value=this._skillVo.skillCard / this._skillVo.CostSkillPoint;
		}
	}

	return DonateCardItem;
})(DonateCardItemUI)


/**
*公会友谊战邀请消息
*/
//class modules.guild.item.GuildBattleMsg extends ui.chat.ChatFullView.ChatGuild.ChatGuildBattleBoxUI
var GuildBattleMsg=(function(_super){
	function GuildBattleMsg(){
		this.container=null;
		this._msg=null;
		GuildBattleMsg.__super.call(this);
		this.headImg.on("click",this,this.onClickHead);
	}

	__class(GuildBattleMsg,'modules.guild.item.GuildBattleMsg',_super);
	var __proto=GuildBattleMsg.prototype;
	__proto.onClickHead=function(){
		SocketManager.Instance.out.requestPlayerInfo(this._msg.playerId1.toString());
	}

	__proto.init=function(msg){
		var _$this=this;
		this._desc.text=LanguageMgr.Ins.GetLan("9070019");
		this._msg=msg;
		PlayerInfoMgr.ins.getHeadImgUrl(msg.avatar1,Handler.create(this,function(url){
			_$this.headImg.skin=url;
		}));
		this.fir_name.text=StringUtils.subName(msg.nickName1,236,20);
		this._speak.text=msg.msg;
		if (msg.playerId1+""==PlayerInfo.instance.playerId || msg.playerId2+""==PlayerInfo.instance.playerId){
			this._btn.visible=false;
		}
		else{
			this._btn.visible=true;
			this._btn.clickHandler=new Handler(this,this.onBattle);
			this._btn.mouseEnabled=true;
			this._btn.mouseThrough=true;
		}
	}

	__proto.onBattle=function(battleId){
		if(UIMgr.ins.getView("RoomMainView")|| UIMgr.ins.getView("MulitPveRoomView")|| UIMgr.ins.getView("PVPRoomView")){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9040046"));
			return;
		}
		if (!((SceneMgr.ins.curScene instanceof modules.hall.scene.HallMainScene ))){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9040046"));
			return;
		}
		if (GuildMgr.ins.myBattleId){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002185"));
			return;
		}
		this._btn.mouseEnabled=false;
		this._btn.gray=true;
		SocketManager.Instance.out.sendGuildBattleAnswer(this._msg.id.toString(16));
	}

	/**销毁 **/
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.headImg.off("click",this,this.onClickHead);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
		this._msg=null;
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(ChatGuildBattleBoxUI,this,'dataSource',value);
		var msg=(value).msg;
		var winnerId=(msg.winnerId);
		var playerId1=(msg.playerId1);
		var playerId2=(msg.playerId2);
		if (winnerId==-1){
			this.boxBattle.visible=true;
			this.boxResult.visible=false;
			this.init(msg);
			this.height=136;
		}
		else{
			this.boxBattle.visible=false;
			this.boxResult.visible=true;
			if (winnerId==playerId1){
				this.txt.text=LanguageMgr.Ins.GetLan("9002284")+', '+msg.nickName1+LanguageMgr.Ins.GetLan("9002285")+msg.nickName2;
			}
			else{
				this.txt.text=LanguageMgr.Ins.GetLan("9002284")+', '+msg.nickName2+LanguageMgr.Ins.GetLan("9002285")+msg.nickName1;
			}
			this.height=this.bg.height=this.txt.height+25;
		}
	});

	return GuildBattleMsg;
})(ChatGuildBattleBoxUI)


/**
*捐献消息子项
*/
//class modules.guild.item.ChatDonateItem extends ui.chat.ChatFullView.ChatGuild.ChatGuildDonateUI
var ChatDonateItem=(function(_super){
	function ChatDonateItem(){
		this.donateId=null;
		/**捐赠的物品ID*/
		this._itemId=0;
		/**捐赠数量*/
		this._count=0;
		/**是否捐满 */
		this._isFull=false;
		this.maxCommon=0;
		this.maxRare=0;
		/**可以 捐赠普通卡牌数量 超过这个值，捐赠按钮变灰 */
		this.DonateRares=0;
		/**可以 捐赠稀有卡牌数量 */
		this.DonateCommons=0;
		this.isme=false;
		this.mSkillVo=null;
		this.mSkillData=null;
		this.hasDonatedNum=0;
		this._msg=null;
		/**钟表动画 */
		this.clock=null;
		this._cardNum=-1;
		this.isTweening=false;
		ChatDonateItem.__super.call(this);
		this._$7_txtHave
		this.initView();
		this.initEvent();
		this.initConfig();
	}

	__class(ChatDonateItem,'modules.guild.item.ChatDonateItem',_super);
	var __proto=ChatDonateItem.prototype;
	/**初始化视图元素 */
	__proto.initView=function(){
		this.getCoinBox.visible=false;
		this.getExpBox.visible=false;
		this.timeBox.visible=false;
		this.txtHaveBox.text=LanguageMgr.Ins.GetLan("9070026");
		this.txtGetSkill.text=LanguageMgr.Ins.GetLan("9070027");
		this._$7_txtHave=new HTMLDivElement()
		this.txtHaveBox.addChild(this._$7_txtHave)
		this._$7_txtHave.style.fontSize=18;
		this._$7_txtHave.style.color='#ffffff'
		this._$7_txtHave.style.fontFamily="Microsoft Yahei";
		this._$7_txtHave.x=83
		this._$7_txtHave.y=0
	}

	/**初始化配置数据 */
	__proto.initConfig=function(){
		var vo=GuildModel.getGuildDonateCfgByDivison(PlayerInfo.instance.division);
		if (vo){
			this.DonateCommons=parseInt(vo.DonateCommons);
			this.DonateRares=parseInt(vo.DonateRares);
			this.maxCommon=parseInt(vo.DonateCommonMax);
			this.maxRare=parseInt(vo.DonateRareMax);
		}
	}

	/**初始化事件 */
	__proto.initEvent=function(){
		this._btn.on("click",this,this.onDodate)
		this._info.on("click",this,this.onInfo)
		this.txtName.on("click",this,this.onTxtName)
	}

	/**
	*更新数据
	*/
	__proto.init=function(msg){
		this._msg=msg;
		this._itemId=msg.itemId;
		this._count=msg.donateCount;
		this.donateId=msg.donateId;
		this.txtName.text=StringUtils.subName(msg.nickName,180,18);
		this._progress_txt.text=msg.donateCount+"/"+msg.needCount;
		this._progress_bar.width=msg.donateCount / msg.needCount *this._progress_bg.width;
		this.isme=msg.playerId.toString()==PlayerInfo.instance.playerId;
		this.msgTxt.text=LanguageMgr.Ins.GetLan("9002171")+":";
		if (msg.donateCount >=msg.needCount){
			this._isFull=true;
			this._btn.gray=true;
			this._btn.mouseEnabled=false;
			return;
		};
		var itemVo=ItemModel.getItemConfigData(msg.itemId);
		if (itemVo){
			this.mSkillVo=SkillModel.getSkillConfigData(itemVo.Param1);
			this.mSkillData=SkillMgr.ins.model.getHasCardVo(this.mSkillVo.BasicSkill);
			if (this.mSkillData==null){
				this.mSkillData=new SkillInfo();
				this.mSkillData.skillID=this.mSkillVo.BasicSkill;
				this.mSkillData.skillCard=0;
			};
			var perData=SkillModel.getSkillPerformanceBySkillId(this.mSkillVo.Display);
			this._card.skin="assets/textrue/itemicon/"+perData.Icon;
			if (this.mSkillData.skillCard <=0){
				this._btn.gray=true;
				this._btn.mouseEnabled=false;
			}
			else{
			}
			if (this._cardNum==-1){
				this._cardNum=this.mSkillData.skillCard;
			}
			this._$7_txtHave.innerHTML='<span style="color:#59ed00">'+this._cardNum+'</span>';
		}
		if (this.isme){
			this._btn.gray=true;
			this._btn.mouseEnabled=false;
			this.timeBox.visible=false;
		}
		else{
			if (this.mSkillData.skillCard <=0){
				this._btn.gray=true;
				this._btn.mouseEnabled=false;
				return;
			}
			else{
				this._btn.gray=false;
				this._btn.mouseEnabled=true;
			};
			var coolTime=TimeManager.Instance.NowTime()-parseFloat(PlayerInfo.instance.join_guild_time);
			var countdown=coolTime-GuildMgr.COOL_TIME;
			if (countdown < 0){
				var time=parseFloat(PlayerInfo.instance.join_guild_time)+GuildMgr.COOL_TIME;
				Laya.timer.loop(1000,this,this.onTimeHandler,[time]);
				this._btn.gray=true;
				this._btn.mouseEnabled=false;
				this.djs.text=TimeManager.Instance.getTimemilSecTxt(Math.abs(countdown));
				this.timeBox.visible=true;
				this.txtHaveBox.visible=false;
				if (!this.clock){
					this.clock=new AniSkeleton("assets/animation/uieffect/ui3.sk")
					this.clock.x=0;
					this.clock.y=13;
					this.timeBox.addChild(this.clock);
				}
			}
			var i;
			for(var $each_i in msg.players){
				i=msg.players[$each_i];
				if (i.playerId.toString()==PlayerInfo.instance.playerId){
					if (this.mSkillVo.Quality==0){
						if (i.donateCount >=this.DonateCommons){
							this._btn.gray=true;
							this._btn.mouseEnabled=false;
						}
					}
					else{
						if (i.donateCount >=this.DonateRares){
							this._btn.gray=true;
							this._btn.mouseEnabled=false;
						}
					}
					break ;
				}
			}
			if (this.mSkillVo.Quality==0){
				if (PlayerInfo.instance.donate_common_count >=this.maxCommon){
					this._btn.gray=true;
				}
			}
			else{
				if (PlayerInfo.instance.donate_rare_count >=this.maxRare){
					if (PlayerInfo.instance.donate_rare_count > this.DonateRares){
						this._btn.gray=true;
					}
				}
			}
		}
	}

	__proto.onTimeHandler=function(time){
		var endTime=TimeManager.Instance.checkTimeEndNum(time);
		if (endTime > 0){
			this.djs.text=TimeManager.Instance.getTimemilSecTxt(endTime);
			this.timeBox.visible=true
			this._btn.gray=true;
			this._btn.mouseEnabled=false;
		}
		else{
			this._btn.gray=false;
			this._btn.mouseEnabled=true;
			this.timeBox.visible=false;
			Laya.timer.clear(this,this.onTimeHandler);
		}
	}

	// }
	__proto.onInfo=function(e){
		EventMgr.ins.event('event_show_donate_tips',[{
			x:e.stageX,
			y:e.stageY,
			ptk:StringUtils.formate(LanguageMgr.Ins.GetLan("9070029"),PlayerInfo.instance.donate_common_count,this.maxCommon),
			xyk:StringUtils.formate(LanguageMgr.Ins.GetLan("9070030"),PlayerInfo.instance.donate_rare_count,this.maxRare),
			reset:LanguageMgr.Ins.GetLan("9070031")
		}]);
		e.stopPropagation();
	}

	__proto.onDodate=function(){
		if (PlayerInfo.instance.donate_common_count >=this.maxCommon && PlayerInfo.instance.donate_rare_count >=this.maxRare){
			this._btn.gray=true;
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002173"));
			return;
		}
		else{
			if (this.mSkillVo.Quality==0){
				if (PlayerInfo.instance.donate_common_count >=this.maxCommon){
					this._btn.gray=true;
					TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002174"));
					return;
				}
			}
			else{
				if (PlayerInfo.instance.donate_rare_count >=this.maxRare){
					this._btn.gray=true;
					TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002175"));
					return;
				}
			}
		}
		EventMgr.ins.on("DonateGetCoin",this,this.showGetCoin);
		SocketManager.Instance.out.sendGuildOption(5,"",this._itemId,this._count,this.donateId);
		if (this.mSkillVo.Quality==0){
			PlayerInfo.instance.donate_common_count++;
			if (PlayerInfo.instance.donate_common_count > this.DonateCommons){
				this._btn.gray=true;
				this._btn.mouseEnabled=false;
			}
		}
		else{
			PlayerInfo.instance.donate_rare_count++;
			if (PlayerInfo.instance.donate_rare_count > this.DonateRares){
				this._btn.gray=true;
				this._btn.mouseEnabled=false;
			}
		}
		this._cardNum--;
		if (this._cardNum <=0){
			this._cardNum=0;
			this._btn.gray=true;
			this._btn.mouseEnabled=false;
		}
		this._$7_txtHave.innerHTML='<span style="color:#59ed00">'+this._cardNum+'</span>';
	}

	__proto.showGetCoin=function(value){
		EventMgr.ins.off("DonateGetCoin",this,this.showGetCoin);
		if (this.isTweening){
			Tween.clearAll(this.getCoinBox);
			Tween.clearAll(this.getExpBox);
		}
		this.isTweening=true;
		for (var i=0;i < value.length;i++){
			var item=value [i];
			if (item.itemId==-10){
				this.txtCoin.text="+"+item.count;
				this.getCoinBox.visible=true;
				Tween.to(this.getCoinBox,{y:60,alpha:0},1000,null,Handler.create(this,this.hideCoinBox));
			}
			else if (item.itemId==-30){
				this.txtExp.text="+"+item.count;
				this.getExpBox.visible=true;
				Tween.to(this.getExpBox,{y:60,alpha:0},1000,null,Handler.create(this,this.hideExpBox));
			}
		}
	}

	__proto.hideCoinBox=function(){
		this.isTweening=false;
		this.getCoinBox.y=50;
		this.getCoinBox.visible=false;
		this.getCoinBox.alpha=1;
	}

	__proto.hideExpBox=function(){
		this.isTweening=false;
		this.getExpBox.y=74;
		this.getExpBox.visible=false;
		this.getExpBox.alpha=1;
	}

	__proto.onTxtName=function(){}
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if (this.clock){
			this.clock.stop();
			this.clock.destroy(true);
			this.clock=null;
		}
		this._btn.off("click",this,this.onDodate)
		this._info.off("click",this,this.onInfo)
		this.txtName.off("click",this,this.onTxtName)
		EventMgr.ins.off("DonateGetCoin",this,this.showGetCoin);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(ChatGuildDonateUI,this,'dataSource',value);
		this.init((value).msg);
	});

	return ChatDonateItem;
})(ChatGuildDonateUI)


//class modules.guild.item.DonateItem extends ui.guild.item.DonateItemUI
var DonateItem=(function(_super){
	function DonateItem(){
		this._skillItem=null;
		this._data=null;
		DonateItem.__super.call(this);this.init();}
	__class(DonateItem,'modules.guild.item.DonateItem',_super);
	var __proto=DonateItem.prototype;
	//技能卡牌
	__proto.init=function(){
		var self=this;
		self.addEvent();
	}

	__proto.removeEvent=function(){}
	__proto.addEvent=function(){
		var self=this;
		self.donateBtn.clickHandler=Handler.create(self,self.onDonateCard,null,false);
	}

	__proto.onDonateCard=function(){
		SocketManager.Instance.out.sendGuildOption(14,"",this._data.SkillID,this._data.Quality);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
		this._data=null;
	}

	/**
	*赋值数据
	*@param $value
	*/
	__getset(0,__proto,'data',function(){return this._data;},function($value){
		var self=this;
		self._data=$value;
		if(!self._data){
			self._skillItem && (self._skillItem.visible=false);
			return;
		}
		if(!self._skillItem){
			self._skillItem=new SkillCard();
			self._skillItem.scaleX=0.95;
			self._skillItem.scaleY=0.95;
		};
		var skillVO=SkillModel.getSkillConfigData(self._data.SkillID);
		self._skillItem.skillVo=skillVO
		self.cardBox.addChild(self._skillItem);
		this.hasNumProBar.value=Number(self._data.skillCard / self._data.CostSkillPoint);
		if(self._data.skillCard >=self._data.CostSkillPoint && self._data.NextSkill !=0){
			this.hasNumProBar.skin="guild/progress_2.png";
		}
		else {
			this.hasNumProBar.skin="guild/progress_1.png";
		}
		this.hasNumText.text=self._data.skillCard+"/"+self._data.CostSkillPoint;
		if(self._data.NextSkill==0){
			this.hasNumProBar.skin="guild/progress_3.png";
			this.hasNumText.text=""+self._data.skillCard;
		}
	});

	return DonateItem;
})(DonateItemUI)


//class ui.pvp.season.SeasonInheritPageUI extends laya.ui.BaseView
var SeasonInheritPageUI=(function(_super){
	function SeasonInheritPageUI(){
		this.bg=null;
		this.btnClose=null;
		this.img0=null;
		this.icon=null;
		this.starBox=null;
		this.imgRank=null;
		this.maxBox=null;
		this.txtMax=null;
		this.btnShare=null;
		SeasonInheritPageUI.__super.call(this);
		var temp=SeasonInheritPageUI.uiView;
		SeasonInheritPageUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(SeasonInheritPageUI.uiView);
	}

	__class(SeasonInheritPageUI,'ui.pvp.season.SeasonInheritPageUI',_super);
	var __proto=SeasonInheritPageUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	SeasonInheritPageUI.uiView="eJylVE1vm0AQ/SvR9rqx+TAYOMaHtlKTQyNVjqrIWuMBNsa7iF1iHIv/3l3Mh+sQ6qgHY4adeW/mzewckTxkgAJ0RwT8orBHGGU5zwQKjmhPNzJBgWnaLkYJ0DiRKHBnRoVRmNB0g4Lfxy6el+ehBxRYGJUoMHAHY7smRq8kV97rGJ0h2v4Q4vcdiWEgHddTmGJLmfIRQARn5rSgq3U8eck0rKBv8DWnCgsZ2LEMrJ6oqvDHwKVOzvHxfzGozyFJYYmCW7Oqns/4Hu4KKTm7kMfRhIrZmbmdKpItUi50bg17yHc7TR3nAGySsRgNKfXwriIt/wl+Pm/R6S42euSUsLhQUdNFQhkImGavmWZ6oWVRE2FEWJjw/En1cOK01rK2Luobondrdtc3rmAME2CxSNT5X8wt10jndJ2ec6Ka9w20fL+rOqyVb3IgQoAUUwmlzAuY7mBD0ummIGwPdGUYTsPfTqbleeMy4JH5N615k5jXJ2Z3iQlJ8lNQy+a515INKj6znZ6va/lPwrYf1v+uJSdBVFPeqGlcMQbj9Z82gGtbbT47Umq/oRn+QdaQXrbWrAH09mn0c7q7Ikt5TzSlrkXZS7MebpnzLSx4yrXPFwIz19zcdAdKpF5uW7Un4kw+qtusLONkqbB7GuZc8EjePJFvQFV02AJGJLINc0QU9Z7SuB53iOT42jnU/qrA277AmTW0eUrKYv27GM+Z9ZlFM/fPF81jQvKLRcNZveXSAj65adwG/59XPQJWUnV2oOpvpTt31ap5rv4Ak7sTWA==";
	return SeasonInheritPageUI;
})(BaseView)


//class ui.pvp.season.SeasonResultPageUI extends laya.ui.BaseView
var SeasonResultPageUI=(function(_super){
	function SeasonResultPageUI(){
		this.bg=null;
		this.bg1=null;
		this.bg2=null;
		this.btnClose=null;
		this.img0=null;
		this.itemBox=null;
		this.box1=null;
		this.img2=null;
		this.txt2=null;
		this.txtnum2=null;
		this.box0=null;
		this.itembg1=null;
		this.img1=null;
		this.txt1=null;
		this.txtnum1=null;
		this.titleImg=null;
		this.icon=null;
		this.imgS=null;
		this.numClip=null;
		this.imgRank=null;
		this.maxBox=null;
		this.txtMax=null;
		this.mpNodeStar=null;
		this.btnShare=null;
		SeasonResultPageUI.__super.call(this);
		var temp=SeasonResultPageUI.uiView;
		SeasonResultPageUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(SeasonResultPageUI.uiView);
	}

	__class(SeasonResultPageUI,'ui.pvp.season.SeasonResultPageUI',_super);
	var __proto=SeasonResultPageUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	SeasonResultPageUI.uiView="eJzFVs2O2zYQfpWAudprkqL+fGsMNAnQ7KEGgg2CYEHLtMRdiRIkelebhQ899dy36Qv10LcIqV/aptdOsUBt2AYNceabme+bmWcgnwoG5uAdrdhnzh7BBBRlXlRg/gwe+VomYI6Q401AwnicSDD3CNxNQJTwdA3mX5+H+3ltXn0CczgBdfPdm3E8dXigpXp6FQPDohPaLH7MaMzO2PQCwyRSD1f3XKhDxWiVCzTb8ttVfHVXaHcV/87el1z5AHDiYjhR32C3m1zgEDluaPeJ/4NP9XdEU3YD5lO0n4XdNwPO9butlLk4AOQGuIHU/HYopFikecVGKFGeZRpHXDImrgoRA1uCr20B47Ax7/u9dZ7FcLScUhFv1a3ZIuGCVWxWPBTa0x2vt42jCaAiSvLyi8rdldufbprTfnzHjCEYtbGRscI4QAMSybL2Up8zhKzMObY8JRqLriQmQ9ryGlnzYktLf9+HtnrfcbHiVNy3qT5DKeL2WJBBZGLk2yAVrSomq5lktSy3bKZTwKNczFY0r5XH+BZ1WR/l+XIFRmy/0RVLD7AFfZxGAfBAd1lLDU2DUadFwiqpkcoyv2eLPM31M2/JygkdOPyvDIzgHGVqkwu5VLJQ8QftSd36peRUY4l6K5vmpdmU8rihNBOSleBcAB7skwvHEIhnRCC2mRHEDYaWEHyyRq49BIwvDcHxN66zMkIoGwvnRNB2nClyDJ7Cy3iqw/ZNtZzqiT/H106Unp2saL/tKG7GLKtel5VHowRho6JoLOe/f/71z99/vBIpP/GozKt8I998oR8Yfw166iSqSAg5yU30f3NzbwSdHoleOBBUcpmyj1l8dkpMK8rv1JtVWyr2psUxD6yzyQ1a38HIRRyGAxmjZlraO2fG1jSdrZXjR8ZvIXQPGIqD4FKK2qChTiSOMyBzoaGSpVWHhzJxQ9PPr6p4i5QXJ1yFaHQ1CFIxqLvyQNOtZoHyW9BIbxvW0fWdr/sRUiWMabZAhB3ien4Q9qtKkxG9EvSLizqNqH33mEdnOEQg6SqJjST9rlrSyQIecaqtaBMCghfsHi813cBp4RC3h5PRWj9m67s2YXebizMS0zWF/YnWhq6RRdeUEQ+t3xjCJkaL8k1h9w3rTIuiGweiF3IyFi1lG3nhJjwdAyTYxqeai1h/DphN8P7cWxalGlAHLkKvI8XQWrLiOl+zpaT7rfXUatxW0Q99YzVeJrQ8WI3VjNJLutLHT+7GXmf/7Dq8YaJZz564+rnVdb9oOf62+wEMxi0G";
	return SeasonResultPageUI;
})(BaseView)


//class modules.guild.item.GuildBuffListItem extends ui.guild.item.GuildBuffListItemUI
var GuildBuffListItem=(function(_super){
	function GuildBuffListItem(){
		this.completeTime=NaN;
		this.buffId=0;
		GuildBuffListItem.__super.call(this);
		this.addEvent();
	}

	__class(GuildBuffListItem,'modules.guild.item.GuildBuffListItem',_super);
	var __proto=GuildBuffListItem.prototype;
	__proto.addEvent=function(){
		var self=this;
		self.updateBtn.clickHandler=Handler.create(self,self.onUpdateBtn,null,false);
	}

	__proto.onUpdateBtn=function(){
		var self=this;
		TipsManager.Instance().showAlertDialog(
		LanguageMgr.Ins.GetLan("9007368")
		,LanguageMgr.Ins.GetLan("14300384")
		,LanguageMgr.Ins.GetLan("9007390")
		,LanguageMgr.Ins.GetLan("9007389")
		,Handler.create(self,self.updateBuff));
	}

	__proto.updateBuff=function(){
		GuildBuffMgr.ins.sendLevelUpOp(this.buffId);
	}

	__proto.removeEvnet=function(){
		var self=this;
		self.updateBtn.clickHandler.recover();
		self.updateBtn.clickHandler=null;
	}

	__proto.setData=function(data,index){
		var self=this;
		self.buffId=data.id;
		if(data.state==1){
			self.updateBtn.visible=true;
			self.updateingBg.visible=false;
			self.updateTime.visible=false;
			self.updateTipText.visible=false;
			if(!(PlayerInfo.instance.guildJob==1 || PlayerInfo.instance.guildJob==2)){
				self.updateBtn.gray=true;
				self.updateBtn.mouseEnabled=false;
			}
			if(data.costDonate !=0){
				self.maxBox.visible=false;
				self.consumeCount.text=data.costDonate+"";
				}else{
				self.maxBox.visible=true;
				self.maxBox.disabled=true;
				self.isMax.text=LanguageMgr.Ins.GetLan("10001187");
			}
		}
		else {
			self.maxBox.visible=false;
			self.updateBtn.visible=false;
			self.updateingBg.visible=true;
			self.updateTime.visible=true;
			self.updateTipText.visible=true;
			self.updateTipText.text=LanguageMgr.Ins.GetLan("14300379");
			self.completeTime=this.calculateTime(parseInt(data.completeDate));
			this.updateTimer();
		}
		self.descrText.text=LanguageMgr.Ins.GetLan(data.description);
		self.buffIcon.skin=data.icon;
		var string=LanguageMgr.Ins.GetLan((data.effect).toString());
		var arr=string.split(",");
		var arr=LanguageMgr.Ins.GetLan(data.effect).split(",");
		var str1="<span style='color:#ff7e00'>"+arr[0]+":</span>";
		var str2="<span style='color:#53a60f'>"+data.buffPower+arr[1]+"</span>";
		var str3;
		if(arr[1].indexOf("%")==-1){
			str3="<span style='color:#53a60f'>"+data.nextBuffPower+"</span>";
		}
		else {
			str3="<span style='color:#53a60f'>"+data.nextBuffPower+"%</span>";
		}
		self.effectDescrGText.text=str1+LanguageMgr.Ins.GetLan("14300382")+str2+LanguageMgr.Ins.GetLan("14300383").replace("{0}",str3);
		self.nameText.text=arr[0];
		self.levelText.text="L"+data.level;
	}

	__proto.calculateTime=function(completeTime){
		var synTime=TimeManager.Instance.synTime;
		return (completeTime-synTime)/1000;
	}

	__proto.updateTimer=function(){
		var self=this;
		self.updateTime.text=TimeManager.Instance.convertTimeToStr(self.completeTime);
		if(self.completeTime > 0){
			Laya.timer.loop(1000,self,self.onTimer);
			self.onTimer();
		}
		else {
			Laya.timer.clearAll(self);
		}
	}

	__proto.onTimer=function(){
		var self=this;
		self.completeTime--;
		self.updateTime.text=TimeManager.Instance.convertTimeToStr(self.completeTime);
		if(self.completeTime <=0){
			Laya.timer.clearAll(self);
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		this.removeEvnet();
		Laya.timer.clearAll(self);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return GuildBuffListItem;
})(GuildBuffListItemUI)


/**
*公会宝箱列表子项
*/
//class modules.guild.item.GuildChestItem extends ui.guild.item.GuildChestItemUI
var GuildChestItem=(function(_super){
	function GuildChestItem(){
		GuildChestItem.__super.call(this);
	}

	__class(GuildChestItem,'modules.guild.item.GuildChestItem',_super);
	var __proto=GuildChestItem.prototype;
	__proto.setData=function(vo,index){
		if(vo){
			index=index+1;
			var nameStr=vo.nickName;
			nameStr=StringUtils.subName(nameStr,200,24);
			this.txtName.text=nameStr;
			this.headImg.skin=vo.avatar;
			this.txtJob.text=GuildMgr.ins.jobArr[vo.guildJob-1];
			this.txtNum.text=vo.weekWin.toString();
			this.clipnum.value=index.toString();
			if(index <=3){
				this.first.x=66;
				this.first.visible=true;
				this.first.skin="comm/ui_meili_0"+(index)+".png";
				this.clipnum.visible=false;
				}else{
				this.first.visible=false;
				this.clipnum.visible=true;
				this.clipnum.value=index.toString();
				if(index <10){
					this.clipnum.x=69;
					}else if(index < 100){
					this.clipnum.x=48;
				}
			}
		}
	}

	return GuildChestItem;
})(GuildChestItemUI)


/**
*公会成员列表子项
*/
//class modules.guild.item.GuildInfoListItem extends ui.guild.item.GuildInfoListItemUI
var GuildInfoListItem=(function(_super){
	function GuildInfoListItem(){
		this._vo=null;
		GuildInfoListItem.__super.call(this);
		this.labTxt0.text=LanguageMgr.Ins.GetLan("9002156");
		this.btnAdd.visible=UrlParam.PARAMS["PLID"]=="qq";
		if(LanguageMgr.Ins.country=="English"){
			this.qqBox.visible=false;
			this.donateBox.x=750;
		}
		this.btnAdd.clickHandler=new Handler(this,this.onAddFriend);
		this.first.visible=false;
		this.arrow.visible=false;
	}

	__class(GuildInfoListItem,'modules.guild.item.GuildInfoListItem',_super);
	var __proto=GuildInfoListItem.prototype;
	__proto.onAddFriend=function(){
		modules.qqsdk.H5jssdkManager.instance.addQQFriend(this._vo.openId,this._vo.nickName,Handler.create(this,this.onAddFriendComplete,null,false));
	}

	__proto.onAddFriendComplete=function(){
		SocketManager.Instance.record.oneKeyAddFriend(1,1);
	}

	__proto.updateJob=function(job){
		this.txtJob.text=GuildMgr.ins.jobArr[job-1];
	}

	__proto.setData=function(vo,index){
		this._vo=vo;
		var nameStr=vo.nickName;
		nameStr=StringUtils.subName(nameStr,200,24);
		this.txtName.text=nameStr;
		this.green.visible=vo.isOnline;
		if(UrlParam.PARAMS["PLID"]=="qq"){
			if(vo.playerId.toString()==PlayerInfo.instance.playerId || vo.openId==PlayerInfo.instance.openid){
				this.btnAdd.visible=false;
				}else{
				this.btnAdd.visible=true;
				var ismyfriend=RoomMgr.ins.ismyFriend(vo.playerId.toString());
				this.btnAdd.gray=ismyfriend;
			}
		}
		this.btnAdd.mouseEnabled=!this.btnAdd.gray;
		this.txtJob.text=GuildMgr.ins.jobArr[vo.guildJob-1];
		this.txtDonate.text=vo.totalDonate.toString();
		if(vo.vipLevel==0){
			this.vipIcon.visible=false;
			this.txtName.x=298;
		}
		else{
			this.vipIcon.skin="assets/textrue/vip/ui_icon_vip"+vo.vipLevel+".png";
			this.vipIcon.visible=true;
			this.txtName.x=340;
		};
		var div=RankModel.getDivisionByTrophy(vo.trophy);
		this.divName.text=LanguageMgr.Ins.GetLan(RankModel.getRankVO(div).Name);
		this.divIcon.skin=PathMgr.getDivisionIcon(div);
		this.headImg.skin=vo.avatar;
		this.clipnum.value=index.toString();
		if(index <=3){
			if(index==1)this.first.x=66;
			this.first.visible=true;
			this.first.skin="comm/ui_meili_0"+(index)+".png";
			this.clipnum.visible=false;
			}else{
			this.first.visible=false;
			this.clipnum.visible=true;
			this.clipnum.value=index.toString();
			if(index <10){
				this.clipnum.x=50;
				}else if(index < 100){
				this.clipnum.x=25;
			}
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.btnAdd.clickHandler){
			this.btnAdd.clickHandler.recover();
			this.btnAdd.clickHandler=null;
		}
		laya.ui.View.prototype.destroy.call(this,destroyChild);
		this._vo=null;
	}

	__getset(0,__proto,'vo',function(){
		return this._vo;
	});

	return GuildInfoListItem;
})(GuildInfoListItemUI)


//class modules.guild.item.GuildListItem extends ui.guild.item.GuildListItemUI
var GuildListItem=(function(_super){
	function GuildListItem(){
		GuildListItem.__super.call(this);
	}

	__class(GuildListItem,'modules.guild.item.GuildListItem',_super);
	var __proto=GuildListItem.prototype;
	__proto.setData=function(vo,index){
		var iconId=vo.iconID;
		if(iconId==-1){
			iconId=1;
		}
		if(iconId <10){
			this.icon.skin="assets/textrue/badge/ui_icon_0"+iconId+".png";
			}else{
			this.icon.skin="assets/textrue/badge/ui_icon_"+iconId+".png";
		}
		this.txt0.text=vo.guildName;
		this.txt1.text=vo.players+"/"+vo.maxPlayers;
		var div=RankModel.getDivisionByTrophy(vo.limitCondition);
		this.txtDiv.text=LanguageMgr.Ins.GetLan(RankModel.getRankVO(div).Name);
		this.divIcon.skin=PathMgr.getDivisionIcon(div);
		this.txt3.text=GuildMgr.ins.typeArr[vo.type];
		this.bg0.visible=index%2==0;
		this.bg1.visible=!this.bg0.visible;
	}

	return GuildListItem;
})(GuildListItemUI)


//class modules.guild.item.GuildShopListItem extends ui.guild.item.GuildShopListItemUI
var GuildShopListItem=(function(_super){
	function GuildShopListItem(){
		this.data=null;
		GuildShopListItem.__super.call(this);
		this.addEvent();
	}

	__class(GuildShopListItem,'modules.guild.item.GuildShopListItem',_super);
	var __proto=GuildShopListItem.prototype;
	__proto.addEvent=function(){
		var self=this;
		self.on("click",self,self.onClick);
	}

	__proto.removeEvent=function(){
		var self=this;
	}

	__proto.setData=function(data,index){
		var self=this;
		self.data=data;
		if(!self.data){
			self.soldOutMask.visible=false;
			self.soldOutFlag.visible=false;
			self.icon.visible=false;
			self.iconBg.visible=false;
			self.starList.visible=false;
			self.priceText.text="";
			self.itemNameText.text="";
			self.countText.text="";
			return;
		}
		self.soldOutMask.visible=self.data.isSoldOut;
		self.soldOutFlag.visible=self.data.isSoldOut;
		self.priceText.text=""+Math.ceil(self.data.price);
		self.iconBg.visible=true;
		self.icon.visible=true;
		self.icon.skin=self.data.itemIcon;
		self.itemNameText.text=self.data.itemName;
		self.countText.text="x"+self.data.count;
		if(self.data.skillId !=0){
			var skillVo=SkillModel.getSkillConfigData(self.data.skillId);
			self.starList.visible=true;
			var qualiity="aaaaaa";
			self.starList.value=qualiity.substr(0,skillVo.Quality+1);
		}
		else {
			self.starList.visible=false;
		}
	}

	__proto.onClick=function(e){
		var _$this=this;
		if(this.data.isSoldOut){
			return;
		}
		UIMgr.ins.openView("GuildShopAlertView",Handler.create(this
		,function(view){
			view.setData(_$this.data,0);
		}));
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return GuildShopListItem;
})(GuildShopListItemUI)


//class modules.guild.item.LineItem extends ui.guild.item.LineItemUI
var LineItem=(function(_super){
	function LineItem(){
		LineItem.__super.call(this);
	}

	__class(LineItem,'modules.guild.item.LineItem',_super);
	return LineItem;
})(LineItemUI)


//class modules.guild.view.GuildBoxPage extends ui.guild.view.GuildBoxPageUI
var GuildBoxPage=(function(_super){
	function GuildBoxPage(){
		this._eventDispatcher=null;
		//事件派发器
		this._barBoxView=null;
		//活动中状态
		this._unopenBoxView=null;
		//活动前状态
		this._openBoxView=null;
		/**活动开始时间 ,可能为-1，表示没有该活动 */
		this._startTime=NaN;
		/**活动结束时间 ,可能为-1，表示没有该活动 */
		this._endTime=NaN;
		/**活动领奖时间 ,可能为-1，表示没有该活动 */
		this._awardTime=NaN;
		/**公会活动期间总胜利次数 */
		this._victoryCnt=0;
		/**公会宝箱列表[GuildBoxInfo.as,GuildBoxInfo.as...] **/
		this._listData=null;
		/**下次活动开始时间，可能为-1，表示没有该活动 */
		this._nextStartTime=NaN;
		/**总的胜利次数 */
		this._totalWin=0;
		/**当前宝箱等级 */
		this._curBoxLevel=0;
		this.list=null;
		/**参与活动成员 */
		this._inActArr=[];
		/**未参与活动成员 */
		this._unActArr=[];
		this._selectItemVo=null;
		/**是否下次活动开始 */
		this._isNext=false;
		/**当前活动状态0活动前 1活动中 2 活动后 */
		this._curState=0;
		this._guildBoxInfoMsg=null;
		this._guildBoxAwardResultMsg=null;
		GuildBoxPage.__super.call(this);this.init();}
	__class(GuildBoxPage,'modules.guild.view.GuildBoxPage',_super);
	var __proto=GuildBoxPage.prototype;
	Laya.imps(__proto,{"modules.guild.IGuild":true})
	__proto.init=function(){
		var self=this;
		self._eventDispatcher=new EventDispatcher();
		this.panel.vScrollBar.visible=false;
		this.panel.vScrollBar.elasticBackTime=600;
		this.panel.vScrollBar.elasticDistance=200;
		this.btnPlayer.label=LanguageMgr.Ins.GetLan("9070092");
		this.btnAddF.label=LanguageMgr.Ins.GetLan("9070093");
		self.addEvent();
		SocketManager.Instance.out.reqGuildChestInfo(1);
	}

	__proto.removeEvent=function(){
		if(this.btnAddF.clickHandler){
			this.btnAddF.clickHandler.recover();
			this.btnAddF.clickHandler=null;
		}
		if(this.btnPlayer.clickHandler){
			this.btnPlayer.clickHandler.recover();
			this.btnPlayer.clickHandler=null;
		}
		EventMgr.ins.off("recv_guildbox_info",this,this.onGuildboxInfo);
		EventMgr.ins.off("recv_guildbox_award",this,this.onGuildboxAward);
		this._eventDispatcher.off("change_box_view",this,this.onChangeBoxView);
	}

	__proto.addEvent=function(){
		EventMgr.ins.on("recv_guildbox_info",this,this.onGuildboxInfo);
		EventMgr.ins.on("recv_guildbox_award",this,this.onGuildboxAward);
		this.btnAddF.clickHandler=Handler.create(this,this.onAddFriend,null,false);
		this.btnPlayer.clickHandler=Handler.create(this,this.onPlayer,null,false);
		this._eventDispatcher.on("change_box_view",this,this.onChangeBoxView);
	}

	__proto.onChangeBoxView=function(){
		if(this._curState==1){
			this.afterActivity();
		}
		else if(this._curState==0){
			this.inActivity();
		}
	}

	/**协议返回公会宝箱信息 */
	__proto.onGuildboxInfo=function(msg){
		var self=this;
		self._guildBoxInfoMsg=msg;
		self._listData=msg.guildBoxInfo;
		self._startTime=parseFloat(msg.startTime);
		self._endTime=parseFloat(msg.endTime);
		self._awardTime=parseFloat(msg.awardTime);
		self._victoryCnt=msg.victoryCount;
		self._nextStartTime=parseFloat(msg.nextStartTime);
		self._totalWin=GuildModel.getNeedVictoryCnt(this._victoryCnt);
		self._curBoxLevel=GuildModel.getBoxLevel(this._victoryCnt);
		if(!self._unopenBoxView){
			self._unopenBoxView=new UnopenBoxView(self._eventDispatcher);
			self.addChild(self._unopenBoxView);
		}
		if(!self._barBoxView){
			self._barBoxView=new BarBoxView(self._eventDispatcher);
			self.addChild(self._barBoxView);
		}
		if(!self._openBoxView){
			self._openBoxView=new OpenBoxView(self._eventDispatcher);
			self.addChild(self._openBoxView);
		}
		self._unopenBoxView.setGuildBoxInfoMsg(self._guildBoxInfoMsg);
		self._barBoxView.setGuildBoxInfoMsg(self._guildBoxInfoMsg);
		self._openBoxView.setGuildBoxInfoMsg(self._guildBoxInfoMsg);
		self.showMemberList(this._listData);
		self.checkActivtyTime();
		self.checkCanAward();
	}

	/**协议返回领取宝箱奖励 */
	__proto.onGuildboxAward=function(msg){
		var self=this;
		self._guildBoxAwardResultMsg=msg;
		if(self._guildBoxAwardResultMsg.code=="0"){
			self.preActivity();
		}
		else{
			switch(self._guildBoxAwardResultMsg.code){
				case "7":
					TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300396"));
					break ;
				case "8":
					TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300397"));
					break ;
				case "9":
					TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300398"));
					break ;
				default :
					TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300111",self._guildBoxAwardResultMsg.code));
					break ;
				}
		}
	}

	/**根据活动时间展示不同状态 */
	__proto.checkActivtyTime=function(){
		var self=this;
		var time=TimeManager.Instance.checkTimeEndNum(self._startTime);
		if(time>0){
			self.preActivity();
		}
		else{
			time=TimeManager.Instance.checkTimeEndNum(this._endTime);
			if(time > 0){
				if(GuildMgr.ins.isAwarded){
					self.preActivity();
				}
				else {
					self.inActivity();
				}
			}
			else{
				time=TimeManager.Instance.checkTimeEndNum(this._awardTime);
				if(time > 0){
					if(GuildMgr.ins.isAwarded){
						self.preActivity();
					}
					else {
						self.afterActivity();
					}
				}
				else{
					self.preActivity();
				}
			}
		}
	}

	/**活动前状态 */
	__proto.preActivity=function(){
		var self=this;
		self._curState=0;
		self._unopenBoxView.visible=true;
		self._barBoxView && (self._barBoxView.visible=false);
		self._openBoxView && (self._openBoxView.visible=false);
		this.panel.visible=false;
	}

	/**活动中状态 */
	__proto.inActivity=function(){
		var self=this;
		if(self._curBoxLevel>=GuildMgr.ins.MAX_BOX_LEVEL)return;
		self._curState=1;
		self._barBoxView.visible=true;
		self._unopenBoxView && (self._unopenBoxView.visible=false);
		self._openBoxView && (self._openBoxView.visible=false);
		self.panel.visible=true;
		this._isNext=false;
	}

	/**活动后状态 */
	__proto.afterActivity=function(){
		var self=this;
		self._curState=2;
		self._openBoxView.visible=true;
		self._unopenBoxView && (self._unopenBoxView.visible=false);
		self._barBoxView && (self._barBoxView.visible=false);
		var winCnt=GuildMgr.ins.getMyWeekwin(this._inActArr);
		self._openBoxView.isCanOpenBox=(winCnt > 0);
		this.panel.visible=true;
		if(this._curBoxLevel==0)this.preActivity();
	}

	/**渲染成员列表 */
	__proto.onRender=function(item,index){
		if(index <this._inActArr.length){
			item.setData(this._inActArr[index],index);
		}
	}

	/**渲染成员列表 */
	__proto.onRender1=function(item,index){
		if(index <this._unActArr.length){
			item.setData(this._unActArr[index],index+this._inActArr.length);
		}
	}

	/**提示菜单 */
	__proto.showTipMenu=function(type){}
	/**胜利次数排行列表 */
	__proto.showMemberList=function(arr){
		this._inActArr.length=0;
		this._unActArr.length=0;
		this._listData.sort(this.sortHandler);
		for (var i=0;i < this._listData.length;i++){
			var item=this._listData[i];
			if(item.weekWin > 0){
				this._inActArr.push(item);
				}else{
				this._unActArr.push(item);
			}
		}
		this.vbox.removeChildren();
		var lineItem;
		if(this._inActArr.length>0){
			lineItem=new LineItem();
			lineItem.txtTItle.text=LanguageMgr.Ins.GetLan("9002263");
			lineItem.removeChild(lineItem.titleBox);
			lineItem.list.y=0;
			lineItem.list.renderHandler=Handler.create(this,this.onRender,null,false);
			lineItem.list.selectHandler=Handler.create(this,this.onSelectList,[lineItem.list],false);
			lineItem.list.array=this._inActArr;
			lineItem.list.repeatY=this._inActArr.length;
			lineItem.height=90 *this._inActArr.length;
			lineItem.list.selectEnable=true;
			this.vbox.addChild(lineItem);
		}
		if(this._unActArr.length>0){
			lineItem=new LineItem();
			lineItem.txtTItle.text=LanguageMgr.Ins.GetLan("9002264");
			lineItem.list.renderHandler=Handler.create(this,this.onRender1,null,false);
			lineItem.list.selectHandler=Handler.create(this,this.onSelectList,[lineItem.list],false);
			lineItem.list.array=this._unActArr;
			lineItem.list.repeatY=this._unActArr.length;
			lineItem.height=90 *this._unActArr.length+70;
			lineItem.list.selectEnable=true;
			this.vbox.addChild(lineItem);
		}
		this.vbox.refresh();
	}

	/**选择列表子项事件处理 */
	__proto.onSelectList=function($list,index){
		if(index==-1)return;
		this.list=$list;
		this._selectItemVo=this.list.getItem(index);
		this.txtNick.text=this._selectItemVo.nickName;
		this.tip.visible=true;
	}

	/**当处于最高阶段，并且进度已满时，公会宝箱变为可领取状态。 */
	__proto.checkCanAward=function(){
		var time=TimeManager.Instance.checkTimeEndNum(this._awardTime);
		if(time > 0 && this._curBoxLevel==GuildMgr.ins.MAX_BOX_LEVEL && !this._isNext &&!GuildMgr.ins.isAwarded){
			this.afterActivity();
		}
	}

	/**添加好友 **/
	__proto.onAddFriend=function(){
		FriendsMgr.ins.sendAddFriend(this._selectItemVo.playerId.toString(),this.txtNick.text);
	}

	/**查看资料 */
	__proto.onPlayer=function(){
		SocketManager.Instance.out.requestPlayerInfo(this._selectItemVo.playerId.toString());
	}

	/**开宝箱 */
	__proto.onOpenBox=function(){
		SocketManager.Instance.out.reqGuildChestInfo(2);
	}

	__proto.hideTip=function(){
		this.tip.visible=false;
		if(this.list)
			this.list.selectedIndex=-1;
	}

	/**降序排序 */
	__proto.sortHandler=function(data1,data2){
		return data2.weekWin-data1.weekWin;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		if(this._listData)this._listData.length=0;
		this._inActArr.length=0;
		this._unActArr.length=0;
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__proto.cleanUp=function(){
		this.destroy();
	}

	return GuildBoxPage;
})(GuildBoxPageUI)


//class modules.guild.view.GuildBuffPage extends ui.guild.view.GuildBuffPageUI
var GuildBuffPage=(function(_super){
	function GuildBuffPage(){
		var self=this;
		GuildBuffPage.__super.call(this);
		self.init();
		self.addEvent();
	}

	__class(GuildBuffPage,'modules.guild.view.GuildBuffPage',_super);
	var __proto=GuildBuffPage.prototype;
	__proto.init=function(){
		var self=this;
		self.buffTitle.text=LanguageMgr.Ins.GetLan("14300380");
		self.moneyTitle.text=LanguageMgr.Ins.GetLan("14300381");
		self.moneyCountText.text=GuildMgr.ins.myGuildInfo.consumeDonates+"";
		self.buffList.array=GuildBuffMgr.ins.getDisplayGuildShopList;
		self.buffInfoList.array=GuildBuffMgr.ins.getDisplayGuildShopList;
	}

	__proto.refreshPage=function(){
		var self=this;
		self.init();
	}

	__proto.addEvent=function(){
		var self=this;
		self.buffList.renderHandler=Handler.create(self,self.onRnderBuffList,null,false);
		self.buffInfoList.renderHandler=Handler.create(self,self.onRenderBuffInfoList,null,false);
		EventMgr.ins.on("UPDATE_GUILDBUFF_DATA",self,self.updateBuffInfo);
		EventMgr.ins.on("recv_guild_info",self,self.updateCoinsCount);
	}

	/**更新公会硬币信息**/
	__proto.updateCoinsCount=function(res){
		var self=this;
		self.moneyCountText.text=res.consumeDonates+"";
	}

	__proto.onRnderBuffList=function(cell,index){
		var self=this;
		var data=self.buffList.array[index];
		cell.setData(data,index);
	}

	__proto.onRenderBuffInfoList=function(cell,index){
		var self=this;
		var data=self.buffInfoList.array[index];
		var strs=LanguageMgr.Ins.GetLan(data.effect);
		var arr=strs.split(",");
		cell.infoText.text=arr[0]+"LV"+data.level;
	}

	/**更新科技信息**/
	__proto.updateBuffInfo=function(){
		var self=this;
		self.moneyCountText.text=GuildMgr.ins.myGuildInfo.consumeDonates+"";
		self.buffList.array=GuildBuffMgr.ins.getDisplayGuildShopList;
		self.buffInfoList.array=GuildBuffMgr.ins.getDisplayGuildShopList;
		self.moneyCountText.text=GuildMgr.ins.myGuildInfo.consumeDonates+"";
	}

	__proto.removeEvent=function(){
		var self=this;
		self.buffList.renderHandler.recover();
		self.buffList.renderHandler=null;
		self.buffInfoList.renderHandler.recover();
		self.buffInfoList.renderHandler=null;
		EventMgr.ins.off("UPDATE_GUILDBUFF_DATA",self,self.updateBuffInfo);
		EventMgr.ins.off("recv_guild_info",self,self.updateCoinsCount);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return GuildBuffPage;
})(GuildBuffPageUI)


/**
*公会成员页面
*/
//class modules.guild.view.GuildMemberPage extends ui.guild.view.GuildMemberPageUI
var GuildMemberPage=(function(_super){
	function GuildMemberPage(){
		this._memberList=null;
		this._guildMsg=null;
		this._selectItemVo=null;
		this._selectItem=null;
		this._isDemotion=false;
		this._isFromRanking=false;
		GuildMemberPage.__super.call(this);
		this.init();
		this.addEvent();
	}

	__class(GuildMemberPage,'modules.guild.view.GuildMemberPage',_super);
	var __proto=GuildMemberPage.prototype;
	Laya.imps(__proto,{"modules.guild.IGuild":true})
	__proto.init=function(){
		this.lab_0.text=LanguageMgr.Ins.GetLan("9002103");
		this.lab_2.text=LanguageMgr.Ins.GetLan("14300267");
		this.lab_3.text=LanguageMgr.Ins.GetLan("9002122");
		this.lab_4.text=LanguageMgr.Ins.GetLan("9002104");
		this.lab_5.text=LanguageMgr.Ins.GetLan("14300268");
		this.txtDonate.x=this.lab_2.x+this.lab_2.textField.textWidth+4;
		this.txtTrophy.x=this.lab_0.x+this.lab_0.textField.textWidth+4;
		this.txtTag.x=this.lab_5.x+this.lab_5.textField.textWidth+4;
		this.txtMember.x=this.lab_3.x+this.lab_3.textField.textWidth+4;
		this.txtType.x=this.lab_4.x+this.lab_4.textField.textWidth+4;
		this.btnCheck.label=LanguageMgr.Ins.GetLan("9002163");
		this.btnKick.label=LanguageMgr.Ins.GetLan("9070106");
		this.btnAddFriend.label=LanguageMgr.Ins.GetLan("9004137");
		this.btnTransferGuild.label=LanguageMgr.Ins.GetLan("14300226");
		this.btnDemote.label=LanguageMgr.Ins.GetLan("9002165");
		this.btnPromot.label=LanguageMgr.Ins.GetLan("9002164");
		this.btnJoin.label=LanguageMgr.Ins.GetLan("9002113");
		this.btnDonate.label=LanguageMgr.Ins.GetLan("9002156");
		this.btnExit.label=LanguageMgr.Ins.GetLan("9002112");
		this.btnSetting.label=LanguageMgr.Ins.GetLan("9002114");
		this.lab_board.text=LanguageMgr.Ins.GetLan("9002111");
		this.list.scrollBar.visible=false;
		this.list.selectEnable=true;
		this.list.scrollBar.elasticBackTime=600;
		this.list.scrollBar.elasticDistance=200;
		this.tip.visible=false;
		this.list.array=[];
	}

	__proto.removeEvent=function(){
		var self=this;
		if(self.btnAddFriend.clickHandler){
			self.btnAddFriend.clickHandler.recover();
			self.btnAddFriend.clickHandler=null;
		}
		if(self.btnTransferGuild.clickHandler){
			self.btnTransferGuild.clickHandler.recover();
			self.btnTransferGuild.clickHandler=null;
		}
		if(self.btnExit.clickHandler){
			self.btnExit.clickHandler.recover();
			self.btnExit.clickHandler=null;
		}
		if(self.btnJoin.clickHandler){
			self.btnJoin.clickHandler.recover();
			self.btnJoin.clickHandler=null;
		}
		if(self.btnDonate.clickHandler){
			self.btnDonate.clickHandler.recover();
			self.btnDonate.clickHandler=null;
		}
		if(self.btnCheck.clickHandler){
			self.btnCheck.clickHandler.recover();
			self.btnCheck.clickHandler=null;
		}
		if(self.btnDemote.clickHandler){
			self.btnDemote.clickHandler.recover();
			self.btnDemote.clickHandler=null;
		}
		if(self.btnPromot.clickHandler){
			self.btnPromot.clickHandler.recover();
			self.btnPromot.clickHandler=null;
		}
		if(self.btnKick.clickHandler){
			self.btnKick.clickHandler.recover();
			self.btnKick.clickHandler=null;
		}
		if(self.btnEdit.clickHandler){
			self.btnEdit.clickHandler.recover();
			self.btnEdit.clickHandler=null;
		}
		if(self.btnSetting.clickHandler){
			self.btnSetting.clickHandler.recover();
			self.btnSetting.clickHandler=null;
		}
		if(self.list.renderHandler){
			self.list.renderHandler.recover();
			self.list.renderHandler=null;
		}
		if(self.list.selectHandler){
			self.list.selectHandler.recover();
			self.list.selectHandler=null;
		}
		EventMgr.ins.off("recv_GuildOption",self,self.onGuildOption);
		EventMgr.ins.off("recv_guild_member_list",self,self.showMemberList);
		EventMgr.ins.off("recv_change_leader",self,self.changeLeader);
	}

	__proto.addEvent=function(){
		var self=this;
		this.btnCheck.clickHandler=Handler.create(self,this.onOption,[this.btnCheck],false);
		this.btnDemote.clickHandler=Handler.create(self,this.onOption,[this.btnDemote],false);
		this.btnPromot.clickHandler=Handler.create(self,this.onOption,[this.btnPromot],false);
		this.btnKick.clickHandler=Handler.create(self,this.onOption,[this.btnKick],false);
		this.btnJoin.clickHandler=Handler.create(self,this.onOption,[this.btnJoin],false);
		this.btnDonate.clickHandler=Handler.create(self,this.onOption,[this.btnDonate],false);
		this.btnExit.clickHandler=Handler.create(self,this.onOption,[this.btnExit],false);
		this.btnAddFriend.clickHandler=Handler.create(self,this.onOption,[this.btnAddFriend],false);
		this.btnTransferGuild.clickHandler=Handler.create(self,this.onOption,[this.btnTransferGuild],false);
		this.btnEdit.clickHandler=Handler.create(self,this.onEdit,null,false);
		this.btnSetting.clickHandler=Handler.create(self,this.onSetting,null,false);
		this.list.renderHandler=Handler.create(self,this.onRender,null,false);
		this.list.selectHandler=Handler.create(self,this.onSelectList,null,false);
		EventMgr.ins.on("recv_change_leader",self,this.changeLeader);
		EventMgr.ins.on("recv_GuildOption",self,this.onGuildOption);
		EventMgr.ins.on("recv_guild_member_list",self,this.showMemberList);
	}

	/**更新公会信息 */
	__proto.setData=function(msg){
		if(!msg){
			return;
		}
		this._guildMsg=msg;
		SocketManager.Instance.out.requestGuildMemberList(this._guildMsg.guildIdStr);
		var ismyGuild=PlayerInfo.instance.consortiaID==msg.guildIdStr;
		if(UIMgr.ins.getView("Ranking")){
			this.btnJoin.visible=this.btnExit.visible=false;
			this.btnSetting.visible=this.btnEdit.visible=false;
			this._isFromRanking=true;
			if(PlayerInfo.instance.consortiaID !="-1"){
				this.btnJoin.visible=this.btnExit.visible=false;
				}else{
				this.btnJoin.visible=true;
			}
			}else{
			this._isFromRanking=false;
			this.btnJoin.visible=!ismyGuild;
			this.btnDonate.visible=ismyGuild;
			this.btnExit.visible=ismyGuild;
			this.btnEdit.visible=PlayerInfo.instance.guildJob==1;
			this.btnSetting.visible=PlayerInfo.instance.guildJob < 3;
		};
		var lv=this._guildMsg.guildLevel;
		lv > 10 && (lv=10);
		this.lab_leavel.text="Lv."+lv;
		var guildLevelVO=GuildLevelModel.getItemDataByLv(lv);
		var maxExp=guildLevelVO.EXP;
		this.progressBar_lv.value=(this._guildMsg.guildExp/maxExp);
		this.lab_pro.text=this._guildMsg.guildExp+"/"+maxExp;
		var iconId=msg.iconID;
		if(iconId < 1)iconId=1;
		if(iconId < 10){
			this.icon.skin=StringUtils.formate("assets/textrue/badge/ui_icon_0{0}.png",+iconId);
			}else{
			this.icon.skin="assets/textrue/badge/ui_icon_"+iconId+".png";
		}
		this.txtGuildName.text=msg.guildName;
		this.txtDonate.text=msg.guildTotalDonate.toString();
		this.txtMember.text=msg.players.toString();
		var div=RankModel.getDivisionByTrophy(msg.limitCondition);
		this.txtTrophy.text=LanguageMgr.Ins.GetLan(RankModel.getRankVO(div).Name);
		this.txtType.text=GuildMgr.ins.typeArr[msg.type];
		this.txtTag.text="#"+msg.guildIdStr;
		this.txtBillboard.text=msg.notice;
	}

	__proto.showMemberList=function(msg){
		this._memberList=msg.sort(this.sortFun);
		this.list.array=this._memberList;
	}

	__proto.showTipMenu=function(type){}
	/**选择列表子项事件处理 */
	__proto.onSelectList=function(index){
		if(index==-1)return;
		this._selectItemVo=this.list.getItem(index);
		this._selectItem=this.list.getCell(index);
		this.tip.visible=true;
		if(GuildMgr.ins.myGuildInfo){
			this.btnTransferGuild.disabled=GuildMgr.ins.myGuildInfo.hasTransferring;
		};
		var nameStr;
		if(this._isFromRanking){
			this.btnKick.visible=false;
			this.btnPromot.visible=false;
			this.btnDemote.visible=false;
			nameStr=this._selectItemVo.nickName;
			nameStr=StringUtils.subName(nameStr,180,24);
			this.txtName.text=nameStr;
			return;
		}
		if(this._selectItemVo){
			nameStr=this._selectItemVo.nickName;
			nameStr=StringUtils.subName(nameStr,180,24);
		}
		this.txtName.text=nameStr;
		this.btnPromot.visible=false;
		this.btnDemote.visible=false;
		this.btnKick.visible=false;
		this.btnAddFriend.visible=false;
		this.btnTransferGuild.visible=false;
		var isImLeader=(PlayerInfo.instance.guildJob==1);
		var isViceLeader=(PlayerInfo.instance.guildJob==2);
		var isElder=(PlayerInfo.instance.guildJob==3);
		var pid=this._selectItemVo.playerId.toString();
		var isMyFriend=pid==PlayerInfo.instance.playerId || FriendsMgr.ins.getIsMyFriend(pid);
		this.btnAddFriend.visible=!isMyFriend;
		switch(this._selectItemVo.guildJob){
			case 1:
				break ;
			case 2:
				if(isImLeader){
					this.btnDemote.visible=true;
					this.btnTransferGuild.visible=true;
				}
				break ;
			case 3:
				if(isImLeader){
					this.btnPromot.visible=true;
					this.btnDemote.visible=true;
					this.btnTransferGuild.visible=true;
				}
				else if(isViceLeader){
					this.btnDemote.visible=true;
				}
				break ;
			case 4:
				if(isImLeader){
					this.btnPromot.visible=true;
					this.btnKick.visible=true;
					this.btnTransferGuild.visible=true;
				}
				else if(isViceLeader){
					this.btnPromot.visible=true;
					this.btnKick.visible=true;
				}
				else if(isElder){
					this.btnKick.visible=true;
				}
				break ;
			};
		var btnArr=[ this.btnPromot,this.btnDemote,this.btnKick,this.btnAddFriend,this.btnTransferGuild];
		var btnIndex=0;
		for (var i=0,len=btnArr.length;i < len;i++){
			if(btnArr[i].visible){
				btnArr[i].y=126+btnIndex *60;
				btnIndex++;
			}
		}
		this.tip.height=this.tipsBg.height=106+btnIndex *60;
		switch(PlayerInfo.instance.guildJob){
			case 1:{
					if(this._selectItemVo.guildJob==1){
						this.changeTipState();
						}else if(this._selectItemVo.guildJob==4){
						this.changeTipState(4);
						}else if(this._selectItemVo.guildJob==2){
						this.changeTipState(2);
						}else{
						this.changeTipState(3);
					}
					break ;
				}
			case 2:{
					if(this._selectItemVo.guildJob==1 ||this._selectItemVo.guildJob==2){
						this.changeTipState();
						}else if(this._selectItemVo.guildJob==3){
						this.changeTipState(3);
						}else{
						this.changeTipState(4);
					}
					break ;
				}
			case 3:{
					if(this._selectItemVo.guildJob==4){
						this.changeTipState(4);
						this.btnDemote.gray=true;
						this.btnPromot.gray=true;
						}else{
						this.changeTipState();
					}
					break ;
				}
			case 4:{
					this.changeTipState();
					break ;
				}
			}
	}

	// }
	__proto.sortFun=function(a,b){
		if(a.trophy>b.trophy){
			return-1;
			}else if(a.trophy<b.trophy){
			return 1;
			}else if(a.trophy==b.trophy){
			if(a.guildJob > b.guildJob){
				return 1;
				}else if(a.guildJob<b.guildJob){
				return-1;
			}
		}
		return 0;
	}

	/**会长转移 */
	__proto.changeLeader=function(res){
		for (var j=0;j < this._memberList.length;j++){
			var item=this._memberList[j];
			if(item.playerId.toString()==res.playerId){
				item.guildJob=res.param1;
				(this.list.getCell(j)).updateJob(res.param1);
				return;
			}
		}
	}

	/**踢人 */
	__proto.kick=function(){
		for (var j=0;j < this._memberList.length;j++){
			var item=this._memberList[j];
			if(item.playerId==this._selectItemVo.playerId){
				this._memberList.splice(j,1);
				break ;
			}
		}
		this.list.array=this._memberList;
	}

	/**改变职位 */
	__proto.demotion=function(){
		var i;
		for(var $each_i in this._memberList){
			i=this._memberList[$each_i];
			if(i.playerId==this._selectItemVo.playerId){
				if(this._isDemotion){
					i.guildJob++;
					}else{
					i.guildJob--;
				}
				break ;
			}
		}
		this._selectItem.updateJob(i.guildJob);
	}

	/**公会操作事件处理 */
	__proto.onOption=function(target){
		switch(target){
			case this.btnCheck:{
					SocketManager.Instance.out.requestPlayerInfo(this._selectItemVo.playerId.toString());
					break ;
				}
			case this.btnDemote:{
					this._isDemotion=true;
					SocketManager.Instance.out.sendGuildOption(3,"",this._selectItemVo.guildJob+1,0,this._selectItemVo.playerId.toString());
					break ;
				}
			case this.btnPromot:{
					this._isDemotion=false;
					if(this._selectItemVo.guildJob==GuildMgr.ins.jobArr[1]){
						var content=LanguageMgr.Ins.GetLan("9007378");
						TipsManager.Instance().showAlertDialog("",content,"","",Handler.create(this,this.changeLeader2));
						}else{
						SocketManager.Instance.out.sendGuildOption(3,"",this._selectItemVo.guildJob-1,1,this._selectItemVo.playerId.toString());
					}
					break ;
				}
			case this.btnKick:{
					SocketManager.Instance.out.sendGuildOption(4,"",0,0,this._selectItemVo.playerId.toString());
					break ;
				}
			case this.btnJoin:{
					SocketManager.Instance.out.sendJoinGuild(this._guildMsg.guildIdStr);
					break ;
				}
			case this.btnDonate:{
					UIMgr.ins.openView("GuildDonateWindow");
					break ;
				}
			case this.btnExit:{
					var tit=LanguageMgr.Ins.GetLan("9002153");
					var con=LanguageMgr.Ins.GetLan("9002154");
					var yes=LanguageMgr.Ins.GetLan("9007390");
					var no=LanguageMgr.Ins.GetLan("9007389");
					TipsManager.Instance().showAlertDialog(tit,con,yes,no,Handler.create(this,this.exitGuild));
					break ;
				}
			case this.btnAddFriend:
				FriendsMgr.ins.sendAddFriend(this._selectItemVo.playerId.toString(),this.txtName.text);
				break ;
			case this.btnTransferGuild:
				TipsManager.Instance().showAlertDialog(
				LanguageMgr.Ins.GetLan("9007368")
				,LanguageMgr.Ins.GetLan("9007378")
				,LanguageMgr.Ins.GetLan("9007390")
				,LanguageMgr.Ins.GetLan("9007389")
				,Handler.create(this,this.onRecharge));
				break ;
			}
		this.hideTip();
	}

	__proto.onRecharge=function(){
		SocketManager.Instance.out.sendGuildOption(12,"",0,0,this._selectItemVo.playerId.toString());
	}

	/**请求退出公会 */
	__proto.exitGuild=function(){
		GuildMgr.ins.myGuildInfo.groupId="";
		PlayerInfo.instance.joinGroup="";
		GuildShopMgr.ins.isShowRedPoint=false;
		SocketManager.Instance.out.sendGuildOption(7,"",0,0,PlayerInfo.instance.playerId);
	}

	/**公会设置 */
	__proto.onSetting=function(){
		GuildMgr.ins.showCreatePage(1);
	}

	/**编辑公告 */
	__proto.onEdit=function(){
		var _$this=this;
		UIMgr.ins.openView("GuildNoticePage",Handler.create(this,function(page){
			var param="";
			if(page){
				param=page.txtContent.text;
			}
			page.init(Handler.create(this,_$this.setNotice,[param]));
			page=null;
		}));
	}

	/**设置公告内容 */
	__proto.setNotice=function(str){
		if(str !=null)
			this.txtBillboard.text=str;
	}

	/**渲染成员列表 */
	__proto.onRender=function(item,index){
		if(index < this.list.array.length){
			item.setData(this.list.array[index],index+1);
		}
	}

	/**
	*state 4查看成员 3查看长老 0查看自己
	*/
	__proto.changeTipState=function(state){
		(state===void 0)&& (state=0);
		if(state==4){
			this.btnKick.visible=true;
			this.btnPromot.gray=false;
			this.btnPromot.mouseEnabled=true;
			this.btnDemote.mouseEnabled=true;
			this.btnDemote.visible=false;
			}else if(state==3){
			this.btnDemote.gray=false;
			this.btnPromot.gray=false;
			this.btnDemote.mouseEnabled=true;
			this.btnPromot.mouseEnabled=true;
			this.btnKick.visible=false;
			this.btnDemote.visible=true;
			}else if(state==2){
			this.btnDemote.gray=false;
			this.btnDemote.mouseEnabled=true;
			this.btnPromot.mouseEnabled=false;
			this.btnPromot.gray=true;
			this.btnKick.visible=false;
			this.btnDemote.visible=true;
			}else{
			this.btnDemote.gray=true;
			this.btnPromot.gray=true;
			this.btnDemote.mouseEnabled=false;
			this.btnPromot.mouseEnabled=false;
			this.btnKick.visible=false;
		};
		var nameStr="";
		if(this._selectItemVo){
			nameStr=this._selectItemVo.nickName;
			nameStr=StringUtils.subName(nameStr,180,24);
		}
		this.txtName.text=nameStr;
	}

	/**会长转移 */
	__proto.changeLeader2=function(){
		this._selectItemVo.guildJob=1;
		this._selectItem.updateJob(1);
	}

	__proto.hideTip=function(){
		this.tip.visible=false;
		this.list.selectedIndex=-1;
	}

	/**收到公会操作指令 */
	__proto.onGuildOption=function(type){
		if(type==3){
			this.demotion();
			}else if(type==4){
			this.kick();
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		this._selectItem=null;
		this._selectItemVo=null;
		this._guildMsg=null;
		if(this._memberList){
			this._memberList.length=0;
			this._memberList=null;
		}
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__proto.cleanUp=function(){
		this.destroy();
	}

	return GuildMemberPage;
})(GuildMemberPageUI)


//class modules.guild.view.GuildShopPage extends ui.guild.view.GuildShopPageUI
var GuildShopPage=(function(_super){
	function GuildShopPage(){
		this.refreshTime=NaN;
		GuildShopPage.__super.call(this);
		this.init();
		this.addEvent();
	}

	__class(GuildShopPage,'modules.guild.view.GuildShopPage',_super);
	var __proto=GuildShopPage.prototype;
	__proto.init=function(){
		var self=this;
		self.moneyTitle.text=LanguageMgr.Ins.GetLan("14300385");
		self.moneyText.text=PlayerInfo.instance.counseDonate+"";
		self.refreshTime=GuildShopMgr.ins.refreshTime;
		self.updateTimer();
		self.shopList.array=GuildShopMgr.ins.getDisplayGuildShopList;
		self.refreshTypeIcon.skin=GuildShopMgr.ins.getPriceTypeSkin(GuildShopMgr.ins.refreshType);
		this.updateRefreshInfo();
	}

	// }
	__proto.addEvent=function(){
		var self=this;
		self.refreshBtn.clickHandler=Handler.create(self,self.onRefreshShopData,null,false);
		self.shopList.renderHandler=Handler.create(self,self.onRenderShopList,null,false);
		EventMgr.ins.on("UPDATE_GUILDSHOP_DATA",self,self.updateShopData);
	}

	/**更新刷新次数信息**/
	__proto.updateRefreshInfo=function(){
		var self=this;
		var textColor=GuildShopMgr.ins.getRefreshConsumteCount > 0 ? "#a67153" :"#ff0000";
		var str;
		if(GuildShopMgr.ins.IsFreeRefresh){
			self.refreshCountText.text=" 0 ";
			str="<span style='color:#a67153'>"+LanguageMgr.Ins.GetLan(9020032)+"</span>";
		}
		else{
			self.refreshCountText.text=GuildShopMgr.ins.getRefreshConsumteCount+"";
			str=LanguageMgr.Ins.GetLan("14300127")+"<span style='color:"+textColor+"'>"
			+GuildShopMgr.ins.FreshCount+"</span>"+"<span style='color:#a67153'>/"+GuildShopMgr.ins.MaxFreshCount+"</span>";
		}
		self.refreshTipsText.text=str;
	}

	/**更新商品数据**/
	__proto.updateShopData=function(){
		var self=this;
		self.shopList.array=GuildShopMgr.ins.getDisplayGuildShopList;
		this.updateRefreshInfo();
		self.refreshTime=GuildShopMgr.ins.refreshTime;
		self.updateTimer();
		self.moneyText.text=PlayerInfo.instance.counseDonate+"";
	}

	__proto.onRenderShopList=function(cell,index){
		var self=this;
		var data=self.shopList.array[index];
		cell.setData(data,index);
	}

	/**请求刷新**/
	__proto.onRefreshShopData=function(){
		GuildShopMgr.ins.sendRefresh();
	}

	__proto.removeEvent=function(){
		var self=this;
		self.refreshBtn.clickHandler.recover();
		self.refreshBtn.clickHandler=null;
		self.shopList.renderHandler.recover();
		self.shopList.renderHandler=null;
		EventMgr.ins.off("UPDATE_GUILDSHOP_DATA",self,self.updateShopData);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	/**
	*更新刷新时间
	*/
	__proto.updateTimer=function(){
		var self=this;
		self.timeText.text=LanguageMgr.Ins.GetLan("14300128",TimeManager.Instance.convertTimeToStr(self.refreshTime));
		if(self.refreshTime > 0){
			Laya.timer.loop(1000,self,self.onTimer);
			self.onTimer();
		}
		else {
			Laya.timer.clearAll(self);
		}
	}

	__proto.onTimer=function(){
		var self=this;
		self.refreshTime--;
		self.timeText.text=LanguageMgr.Ins.GetLan("14300128",TimeManager.Instance.convertTimeToStr(self.refreshTime));
		if(self.refreshTime <=0){
			Laya.timer.clearAll(self);
			return;
		}
	}

	return GuildShopPage;
})(GuildShopPageUI)


//class modules.hall.item.NButtonItem extends ui.hall.item.NButtonItemUI
var NButtonItem=(function(_super){
	function NButtonItem(){
		this._ani=null;
		this._aniBg=null;
		this._nameStr=null;
		this._titleImg=null;
		NButtonItem.__super.call(this);
	}

	__class(NButtonItem,'modules.hall.item.NButtonItem',_super);
	var __proto=NButtonItem.prototype;
	__proto.setData=function(data){
		this.btn.name=data.name;
		this._nameStr=data.name;
		if (this._nameStr=="btn_moreGame"){
			this.iconBtn.loadImage(HallMgr.ins.gameIcon,0,0,0,0,Handler.create(this,this.onLoaded));
			}else if(this._nameStr=="btn_recharge"){
			EventMgr.ins.on("UPDATE_ALL_IMAGE",this,this.onUpdate);
			if(!this._aniBg){
				this._aniBg=new AniSkeleton("sc","other");
				this.addChild(this._aniBg);
			}
			this._aniBg.x=data.ani.x;
			this._aniBg.y=data.ani.y;
			this._titleImg=new Image("language/"+LanguageMgr.Ins.country+"/hall/txt_recharge.png");
		}
		else{
			this.iconBtn.skin="assets/textrue/language/"+LanguageMgr.Ins.country+"/hall/"+data.name+".png";
		}
		if(data.hasOwnProperty('ani')&& data.ani.show){
			if(!this._ani){
				this._ani=new AniSkeleton("btn_recharge","other");
				this._ani.blendMode="add";
				this.addChild(this._ani);
			}
			this._ani.x=data.ani.x;
			this._ani.y=data.ani.y;
			}else {
			if(this._ani)this._ani.visible=false;
		}
		if(this._nameStr=="btn_recharge"){
			this.addChild(this._titleImg);
			this._titleImg.pos(data.ani.x-this._titleImg.width/2,data.ani.y-this._titleImg.height/2+2);
		}
		if(data.hasOwnProperty('red')&& data.red){
			this._red.visible=true
			}else {
			if(this._red)this._red.visible=false
				}
		this.addChild(this._red);
		EventMgr.ins.off("ACTIVITY_SET_RED",this,this.showRedHandler);
		EventMgr.ins.on("ACTIVITY_SET_RED",this,this.showRedHandler);
		this.showRedHandler();
		this.initRedDot();
	}

	__proto.onLoaded=function(){
		if (this.iconBtn.height > this.iconBtn.width){
			this.iconBtn.width=this.iconBtn.width*90/ this.iconBtn.height;
			this.iconBtn.height=90;
			}else if (this.iconBtn.width > this.iconBtn.height){
			this.iconBtn.height=this.iconBtn.height*90/ this.iconBtn.width;
			this.iconBtn.width=90;
			}else{
			this.iconBtn.width=90;
			this.iconBtn.height=90;
		}
		this.iconBtn.skin=HallMgr.ins.gameIcon;
	}

	__proto.onUpdate=function(isUpdate){
		(isUpdate===void 0)&& (isUpdate=true);
		this._titleImg.skin="language/"+LanguageMgr.Ins.country+"/hall/txt_recharge.png";
	}

	__proto.showRedHandler=function(){
		this._red.visible=HallMgr.ins.checkBtnShowRed(this._nameStr);
	}

	__proto.initRedDot=function(){}
	// RedDotMgr.ins.updateRedDotStatus(_nameStr,_red.visible);
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		EventMgr.ins.off("ACTIVITY_SET_RED",this,this.showRedHandler);
		EventMgr.ins.off("UPDATE_ALL_IMAGE",this,this.onUpdate);
		this._ani && this._ani.destroy();
		this._aniBg && this._aniBg.destroy();
		this._ani=null;
		this._aniBg=null;
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return NButtonItem;
})(NButtonItemUI)


//class modules.hall.item.StartItem extends ui.hall.item.StartItemUI
var StartItem=(function(_super){
	function StartItem(){
		StartItem.__super.call(this);
	}

	__class(StartItem,'modules.hall.item.StartItem',_super);
	return StartItem;
})(StartItemUI)


/**
*跑马灯界面
*@author baohua.chen
*
*/
//class modules.hall.view.HallMarqueeView extends ui.hall.HallMarqueeViewUI
var HallMarqueeView=(function(_super){
	function HallMarqueeView(){
		this.defaultX=NaN;
		this.moveTotal=NaN;
		this.isHasMsg=false;
		this.isPlay=false;
		this.textWidth=NaN;
		HallMarqueeView.__super.call(this);
		this.visible=false;
		this.defaultX=this.msgTxt.x;
		this.addEvent();
	}

	__class(HallMarqueeView,'modules.hall.view.HallMarqueeView',_super);
	var __proto=HallMarqueeView.prototype;
	__proto.addEvent=function(){
		EventMgr.ins.on("recv_marquee_scroll",this,this.updataList);
		EventMgr.ins.on("DELETE_CURRENT_PLAY_MARQUEE",this,this.deleteCurrentPlay);
	}

	__proto.deleteCurrentPlay=function(){
		this.isPlay=false;
		this.playMsg();
	}

	__proto.updataList=function(vo){
		this.playMsg();
	}

	__proto.setData=function(vo){
		this.visible=true;
		this.msgTxt.text=vo.msg;
		this.msgTxt.x=this.defaultX;
		this.textWidth=this.msgTxt.textWidth+50;
		this.msgTxt.width=this.textWidth;
		this.moveTotal=this.defaultX+this.textWidth;
		if(!this.isHasMsg){
			PlacardControl.ins.currShowInfoId=vo.activityId;
			this.isHasMsg=true;
			this.isPlay=true;
			Laya.timer.clear(this,this.moveMsgTxt);
			Laya.timer.frameLoop(1,this,this.moveMsgTxt);
		}
	}

	__proto.moveMsgTxt=function(){
		var msgTxtX=this.msgTxt.x-4;
		this.msgTxt.x=msgTxtX;
		if(msgTxtX<(0-this.textWidth)){
			this.isPlay=false;
			this.playMsg();
		}
	}

	__proto.playMsg=function(){
		if(PlacardControl.ins.waitList.length>0){
			if(!this.isPlay)this.setData(PlacardControl.ins.waitList.shift());
			}else{
			this.visible=false;
			this.isHasMsg=false;
			Laya.timer.clear(this,this.moveMsgTxt);
		}
	}

	__proto.removeEvent=function(){
		EventMgr.ins.off("recv_marquee_scroll",this,this.updataList);
		EventMgr.ins.off("DELETE_CURRENT_PLAY_MARQUEE",this,this.deleteCurrentPlay);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return HallMarqueeView;
})(HallMarqueeViewUI)


//class modules.hall.view.MainActivityView extends ui.hall.MainActivityViewUI
var MainActivityView=(function(_super){
	function MainActivityView(){
		/**活动icon列表 */
		this.iconList=null;
		this._btnList=null;
		MainActivityView.__super.call(this);
		this.addEvent();
		this.initView();
	}

	__class(MainActivityView,'modules.hall.view.MainActivityView',_super);
	var __proto=MainActivityView.prototype;
	__proto.addEvent=function(){
		this.on("click",this,this.onBtnListClick);
		EventMgr.ins.on("UPDATE_QUESTIONVIEW",this,this.btnListReset);
	}

	__proto.removeEvent=function(){
		this.off("click",this,this.onBtnListClick);
		EventMgr.ins.off("UPDATE_QUESTIONVIEW",this,this.btnListReset);
	}

	__proto.initView=function(){
		this._btnList={};
		this.iconList=[
		{name:"btn_recharge",ani:{sk:"btn_recharge",show:true,x:50,y:70}},
		{name:"btn_activity"},
		{name:"btn_treasure"},
		{name:"btn_login_activity"},
		{name:"btn_shareGift"},
		{name:"btn_shareInvite"},
		{name:"btn_mysteryshop"},
		{name:"btn_qirimubiao"}];
		this.btnListReset();
	}

	__proto.onBtnListClick=function(evt){
		var item=evt.target;
		if(item){
			this.btnClickHandler(item.name);
		}
	}

	__proto.btnClickHandler=function(name){
		switch(name){
			case "btn_activity":
				UIMgr.ins.openView("ActivityView");
				break ;
			case "btn_shareGift":
				UIMgr.ins.openView("ShareGiftView");
				break ;
			case "btn_moreGame":
				if(Browser.window.wxutil)
					Browser.window.wxutil.jumpToCurrentGame();
				break ;
			case "btn_mysteryshop":
				UIMgr.ins.openView("MysteryShopWindow");
				break ;
			case "btn_qirimubiao":
				UIMgr.ins.openView("SevenDayTargetView");
				break ;
			case "btn_recharge":
				UIMgr.ins.openView("FirstRechargeView");
				break ;
			case "btn_treasure":
				ActivityInfoMgr.ins.requestActivityInfo(ActivityInfoMgr.ins.model.luckyWheelInfo.activityType,3);
				UIMgr.ins.openView("LuckyWheelView");
				break ;
			}
	}

	__proto.btnListReset=function(){
		this.destroyChildren();
		this._btnList={};
		var arr=[];
		var item;
		for(var i=0;i<this.iconList.length;i+=1){
			if(HallMgr.ins.checkBtnShow(this.iconList[i].name)){
				item=new NButtonItem;
				item.x=arr.length*88;
				item.setData(this.iconList[i]);
				arr.push(item);
				this.addChild(item);
				this._btnList[item.name]=item;
				RedDotMgr.ins.updateHallDotStatus(this.iconList[i].name,true);
			}
		};
		var len=arr.length;
		this.width=len*88;
		Laya.timer.once(300,this,function(){
			this.x=1060-len*88;
		})
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this._btnList={};
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return MainActivityView;
})(MainActivityViewUI)


/**
*主界面的宝箱界面
*@author baohua.chen
*
*/
//class modules.hall.view.MainBoxView extends ui.hall.MainBoxViewUI
var MainBoxView=(function(_super){
	function MainBoxView(){
		this.selectIndex=0;
		this._boxControlList=null;
		MainBoxView.__super.call(this);
		this.addEvent();
		this.initView();
	}

	__class(MainBoxView,'modules.hall.view.MainBoxView',_super);
	var __proto=MainBoxView.prototype;
	__proto.initView=function(){
		this._boxControlList=[];
		var boxControl;
		for (var i=1;i < 5;i+=1){
			boxControl=new MainBoxItemControl(this["boxIcon"+i],this["timeIcon"+i],this["boxHBg"+i],this["boxLock"+i],this["boxLBg"+i],this["moneyIcon"+i],this["noBoxIcon0"+i],
			this["lockTimesBox"+i],this["needMoneyBox"+i],this["needTimes"+i],this["nameTxt2Box"+i],this["noBoxItem"+i],this["itemEffect"+i]);
			this._boxControlList.push(boxControl)
		}
		Laya.timer.loop(1000,this,this.timeUpdateChange);
		this.updateChest();
	}

	/**更新宝箱 */
	__proto.updateChest=function(vo){
		this.clreaAllBox();
		for (var i=0;i < 4;i++){
			var temp=HallMgr.ins.getBoxInfoByTypeAndIndex(4,3,i);
			this._boxControlList[i].setData(temp);
		}
		if (vo){
			var view=UIMgr.ins.getView("TreasureBoxDetailWindow");
			if (view && !view._destroyed){
				view.setData(vo);
			}
		}
	}

	__proto.clreaAllBox=function(){
		var boxControl;
		for (var i=0;i < 4;i+=1){
			boxControl=this._boxControlList[i];
			boxControl.clreaView();
		}
	}

	__proto.onTimeHandler=function(time,index){}
	__proto.addEvent=function(){
		PlayerInfoMgr.ins.on("box_opernlocked_update",this,this.onOpenLockedUpdate);
		EventMgr.ins.on("ADDITEMBOX_UPDATE",this,this.addItemUpdate);
		EventMgr.ins.on("item_box_update",this,this.onOpenLockedUpdate);
		PlayerInfoMgr.ins.on("item_change_remove",this,this.onRemoveItem);
	}

	// PlayerInfoMgr.ins.on(PlayerInfoEvent.ITEM_CHANGE_UPDATE,this,this.onOpenLockedUpdate);
	__proto.removeEvent=function(){
		Laya.timer.clear(this,this.timeUpdateChange);
		PlayerInfoMgr.ins.off("box_opernlocked_update",this,this.onOpenLockedUpdate);
		EventMgr.ins.off("ADDITEMBOX_UPDATE",this,this.addItemUpdate);
		EventMgr.ins.off("item_box_update",this,this.onOpenLockedUpdate);
		PlayerInfoMgr.ins.off("item_change_remove",this,this.onRemoveItem);
	}

	/**
	*解锁宝箱
	*@param vo
	*
	*/
	__proto.onOpenLockedUpdate=function(vo){
		this.updateChest(vo);
		Laya.timer.clear(this,this.timeUpdateChange);
		Laya.timer.loop(1000,this,this.timeUpdateChange);
		this.timeUpdateChange();
	}

	//马上更新一次
	__proto.timeUpdateChange=function(){
		for (var i=0;i < this._boxControlList.length;i+=1){
			this._boxControlList[i].onTimeHandler();
		}
	}

	__proto.addItemUpdate=function(info){
		var num=0;
		var itemVo=HallMgr.ins.getNewItemVO(info);
		if(UIMgr.ins.isShowView("TreasureBoxOpenView")){
			this.onDropItemOver(itemVo);
			return;
		};
		var drop=new DropItem(Handler.create(this,this.onDropItemOver,[itemVo]));
		switch (itemVo.index){
			case 0:{
					num=90;
					break ;
				}
			case 1:{
					num=190;
					break ;
				}
			case 2:{
					num=290;
					break ;
				}
			case 3:{
					num=390;
					break ;
				}
			}
		drop.setData("assets/textrue/itemicon/"+itemVo.Icon+".png",new Point(num,45));
		var point=this.localToGlobal(new Point(),false);
		drop.pos(point.x,point.y);
		LayerMgr.ins.addToLayer(drop,2,false);
	}

	//FLYWORD_LAYER,false);
	__proto.onDropItemOver=function(itemVo){
		this._boxControlList[itemVo.index] && this._boxControlList[itemVo.index].setData(itemVo);
	}

	__proto.sortHandler=function(data1,data2){
		if (data1.index > data2.index){
			return 1;
		}
		return-1;
	}

	__proto.onRemoveItem=function(id,itemId){
		for (var i=0,n=this._boxControlList.length;i < n;i++){
			if (this._boxControlList[i] && this._boxControlList[i].vo && this._boxControlList[i].vo.Id==id){
				this._boxControlList[i].setData(null);
				break ;
			}
		}
	}

	// this.updateChest();
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		for (var i=0;i < this._boxControlList.length;i+=1){
			this._boxControlList[i].destroy();
		}
		this._boxControlList.length=0;
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return MainBoxView;
})(MainBoxViewUI)


//class modules.hall.view.MainModeChooseView extends ui.hall.MainModeChooseViewUI
var MainModeChooseView=(function(_super){
	function MainModeChooseView(type){
		this._type=0;
		this._pvpList=[ {skin:"language/Chinese/modechoose/pvp01.png",isOpen:true,name:"pvp1",openMsg:1},
		{skin:"language/Chinese/modechoose/pvp02.png",isOpen:true,name:"pvp2",openMsg:1},
		{skin:"language/Chinese/modechoose/pvp03.png",isOpen:false,openMsg:1},
		{skin:"language/Chinese/modechoose/pvp04.png",isOpen:false,openMsg:1}];
		this._pveList=[ {skin:"language/Chinese/modechoose/pve01.png",isOpen:true,name:"pve1",openMsg:1},
		{skin:"language/Chinese/modechoose/pve02.png",isOpen:true,name:"mulitpve",openMsg:1},
		{skin:"language/Chinese/modechoose/pve03.png",isOpen:true,name:"appleGame",openMsg:1},
		{skin:"language/Chinese/modechoose/pve04.png",isOpen:false,openMsg:1}];
		this._type=type;
		var list=CampaignModel.getConfigDataByType(0);
		var minLevel=Number.MAX_VALUE;
		for (var i=0;i < list.length;i++){
			if (minLevel> list[i].NeedLevel){
				minLevel=list[i].NeedLevel;
			}
		}
		this._pveList[1].openMsg=minLevel;
		MainModeChooseView.__super.call(this);
		this.addEvent();
		this.initView();
	}

	__class(MainModeChooseView,'modules.hall.view.MainModeChooseView',_super);
	var __proto=MainModeChooseView.prototype;
	__proto.initView=function(){
		var arr=[];
		if(this._type==0){
			arr=this._pvpList;
			}else if(this._type==1){
			arr=this._pveList;
		}
		this.modelList.dataSource=arr;
		var guideComp=this.modelList.getCell(0);
		if(HallWeakGuide.ins.hallWeakGuideValue==1){
			HallWeakGuide.ins.hallWeakGuideStep(2,guideComp,new Point(guideComp.width*0.5,guideComp.height*0.5));
		}
		else{
			if(HallWeakGuide.ins.isOpenWeakGuide){
				Laya.timer.once(3000,HallWeakGuide.ins,HallWeakGuide.ins.hallWeakGuideStep,[2,guideComp,new Point(guideComp.width*0.5,guideComp.height*0.5)]);
			}
		}
	}

	__proto.addEvent=function(){
		this.modelList.renderHandler=Handler.create(this,this.listRenderHandler,null,false);
		this.modelList.mouseHandler=Handler.create(this,this.listMouseHandler,null,false);
		this.btnBreak.on("click",this,this.closeViewClick);
		PveMgr.ins.on('EVENT_UPDATE_STAGE',this,this.updatePveBtnItem);
	}

	__proto.updatePveBtnItem=function(){
		this.initView();
	}

	__proto.listRenderHandler=function(item,index){
		if(item){
			var obj=this.modelList.dataSource[index];
			item.btn.skin=obj.skin;
			item.btn.mouseEnabled=item.btn.mouseThrough=obj.isOpen;
			item.msgNun.visible=item.msgValue.visible=item.msgBg.visible=false;
			if(obj.name=="pve1"){
				item.msgNun.visible=item.msgValue.visible=item.msgBg.visible=true;
				item.msgNun.text=LanguageMgr.Ins.GetLan("14300096");
				item.msgValue.text=PveMgr.ins.userInfo.count+"/"+ConfigModel.getConfigData(1117).ConfigValue;
				item.msgValue.x=item.msgNun.x+item.msgNun.textWidth+2;
			}
			if(obj.openMsg>PlayerInfo.instance.grade){
				item.openBox.visible=true;
				item.mouseEnabled=item.mouseThrough=false;
				item.btn.filters=[FilterUtils.darkFilter(0.4)];
				item.openLevel.text=LanguageMgr.Ins.GetLan("14300131",obj.openMsg);
				}else{
				item.openBox.visible=false;
				item.mouseEnabled=item.mouseThrough=true;
				item.btn.filters=null;
			}
		}
	}

	__proto.listMouseHandler=function(evt,index){
		if(evt.type=="click"){
			var obj=this.modelList.dataSource[index];
			if(obj.isOpen){
				switch(obj.name){
					case "pvp1":
						RoomMgr.ins.createPVPRoom();
						break ;
					case "pvp2":
						RoomMgr.ins.createRoom();
						break ;
					case "pve1":
						if(PveMgr.ins.userInfo.count<=0){
							TipsManager.Instance().showLanTips(9007406);
							return;
						}
						UIMgr.ins.openView("PveRoomView");
						break ;
					case "mulitpve":
						if(PlayerInfo.instance.grade>=obj.openMsg){
							UIMgr.ins.openView("MulitPveSelectView");
						}
						break ;
					case "appleGame":
						if(PlayerInfo.instance.grade>=obj.openMsg){
							UIMgr.ins.openView("AppleGameRoom");
						}
						break ;
					}
			}
		}
	}

	__proto.closeViewClick=function(){
		EventMgr.ins.event("CLOSE_MIAN_MODE_CHOOSE_VIEW");
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		HallWeakGuide.ins.clearHallWeakGuideStep(2);
		this.btnBreak.off("click",this,this.closeViewClick);
		PveMgr.ins.off('EVENT_UPDATE_STAGE',this,this.updatePveBtnItem);
		if(this.modelList){
			this.modelList.renderHandler.clear();
			this.modelList.mouseHandler.clear();
		}
		this.modelList=null;
		this.removeSelf();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return MainModeChooseView;
})(MainModeChooseViewUI)


//class ui.vs.NewVSMenuUI extends laya.ui.BaseView
var NewVSMenuUI=(function(_super){
	function NewVSMenuUI(){
		this.mpBoxAll=null;
		this.mpBoxRole=null;
		this.mpTextTip=null;
		this.mpBoxCancel=null;
		this.mpTextTime=null;
		this.mpBtnCancel=null;
		this.mpBoxMap=null;
		this.mpImgMap=null;
		this.mpTextName=null;
		this.mpImgMatch=null;
		this.mpTextLoading=null;
		NewVSMenuUI.__super.call(this);
		var temp=NewVSMenuUI.uiView;
		NewVSMenuUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(NewVSMenuUI.uiView);
	}

	__class(NewVSMenuUI,'ui.vs.NewVSMenuUI',_super);
	var __proto=NewVSMenuUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	NewVSMenuUI.uiView="eJyVVE1v00AQ/StouZrEdmrX8Y1WglZqe4AKUaGq2sRre4vtNfEmTVNFApUDQqBSIVVQBEKCSpUQtAcOFIj4M02anPgLrD+Srt18cYmzq5n3Zt+8mR1At30EdDAHA3QPoy0gAL9C/ADoO2ALG9QGuiQVVAHYCFs2Bbo6IzYFULaxYwD9wc4gn9RHptZghUW4Pou56ThgItaiCy3Eo20DXRRAPfpNIQcPsccSakG+ijdKCG9iz8pt+laGoymMqpMhF+QYW1E1YWTdd4iDOFBZZDnQK9ukssaqyin90/3oxBPeXkV1mqFU1IRSvCQJw1axzyJpmKCD9uleZ+/Vxeeff38ftk/OOgdnnRcH7ff77b2T819H3ce73bf7vU8f2s9OO+++9768uTh8et56edH6xiBwsEBdJ2LWaaWKBGASj97FDRTWHp8YxTIuV0hATHptDS4gzBLLxCFhPdeNkqEZGrspkbA5Ich4GVUxfpMkaupAR1lTUjLOM5UQ7wApJaTEySgNc8YtVve8E6mU4o7VzIrphi2rQaeKwvKYW3xYRgz6hqzw1qEsMOd7oWkCG6FQGFGSCzOKOqsV2aUHXZRG5ZVYmatSSrxsh2MxCiLX4TnqDd6fsJeJ64bWJRXoWaiEraSOASWf48AS++oAjLTeUM1Who2THEs2qw1KcVgFVRaYn7exhwKUj4fqUd33N2Q1qWuc5dd5UYZxJprI8iTOWrDB9WTkW1OMkwzJmXAZ+imJ+zfT23DsguozLbpWjJs8FgYBosxtzERsmNhTXejnpWzDkyzeYWPZUhvQwLTasFHDhiTC5VGWIvekUYqDhvCDswKjwUnWUPfoT2/3uPf6Sbd1nB2GJPJ/d4tpmEWzmGotbyb238FW5A9kUjCFszTpcoOn5KdlG0xym499hBs28a4MHwcx3a4fprFUUK4WF4q3RKCBI8L+wn/+sdtqnf/4msvlskpfBnNiz0wltmmKGkot8klzvN78B8giptg=";
	return NewVSMenuUI;
})(BaseView)


//class modules.invitepay.view.InvitePayReceiveView extends ui.invitepay.InvitePayReceiveViewUI
var InvitePayReceiveView=(function(_super){
	function InvitePayReceiveView(){
		this._curPage=0;
		this._curSelect=null;
		InvitePayReceiveView.__super.call(this);
		this.initView();
		this.addEvent();
		this.dataSource=InvitePayMgr.ins.payList;
		this.setPage(0);
	}

	__class(InvitePayReceiveView,'modules.invitepay.view.InvitePayReceiveView',_super);
	var __proto=InvitePayReceiveView.prototype;
	__proto.initView=function(){
		this.txtTitle0.text=LanguageMgr.Ins.GetLan(14300185);
		this.maskBg.mouseEnabled=true;
	}

	__proto.addEvent=function(){
		this.btnClose.on("click",this,this.onClickClose);
		this.btnCancel.on("click",this,this.onClickRemove);
		this.btnConfirm.on("click",this,this.onClickConfirm);
		this.btnPrev.on("click",this,this.onClickPage,[-1]);
		this.btnNext.on("click",this,this.onClickPage,[1]);
		InvitePayMgr.ins.on("InvitePayConst.EVENT_UPDATE_ALL",this,this.onUpdateAll);
	}

	__proto.delEvent=function(){
		this.btnClose.off("click",this,this.onClickClose);
		this.btnCancel.off("click",this,this.onClickRemove);
		this.btnConfirm.off("click",this,this.onClickConfirm);
		this.btnPrev.on("click",this,this.onClickPage);
		this.btnNext.on("click",this,this.onClickPage);
		InvitePayMgr.ins.off("InvitePayConst.EVENT_UPDATE_ALL",this,this.onUpdateAll);
	}

	__proto.onUpdateAll=function(){
		this.dataSource=InvitePayMgr.ins.payList;
		if (this.dataSource.length==0){
			UIMgr.ins.closeView("InvitePayReceiveView");
			return;
		}
		this.btnCancel.disabled=false;
		this.btnConfirm.disabled=false;
		this.mouseEnabled=true;
		if (this.dataSource[this._curPage] || this._curPage==0){
			this.setPage(this._curPage);
		}
		else if (this._curPage > this.dataSource.length-1){
			this.setPage(this.dataSource.length-1);
		}
	}

	__proto.setPage=function(value){
		this._curPage=value;
		this.txtPage.text=(this._curPage+1)+"/"+this.dataSource.length;
		this._curSelect=this.dataSource[this._curPage];
		this.btnPrev.disabled=this._curPage <=0;
		this.btnNext.disabled=this._curPage >=this.dataSource.length-1;
		this.imgHead.skin=this._curSelect.playerUrl;
		var buyItemVO=ShopModel.getShopConfigByID(this._curSelect.shopId);
		this.txtInfo.innerHTML=LanguageMgr.Ins.GetLan(14300188,this._curSelect.playerName,LanguageMgr.Ins.GetLan(buyItemVO.Name));
		this.icon.skin="assets/textrue/shop/small/"+buyItemVO.itemSkin;
		var group=buyItemVO.ShopItem.split(",");
		var itemVO=ItemModel.getItemConfigData(int(group[0]));
		var numStr=group[1].split("|")[0];
		this.txtName.text=itemVO.ItemID < 0 ? LanguageMgr.Ins.GetLan(itemVO.Name)+"*"+numStr :"";
		this.txtCost.innerHTML=LanguageMgr.Ins.GetLan(14300189,"<img style='width:32px;height:32px;padding:-2px 0 0 0;' src='"+URL.rootPath+"assets/textrue/itemicon/gems.png' />",buyItemVO.Price);
	}

	__proto.onClickPage=function(addPage,e){
		var page=this._curPage+addPage;
		if (page < 0){
			page=0;
		}
		else if (page >=this.dataSource.length){
			page=this.dataSource.length-1;
		}
		this.setPage(page);
	}

	__proto.onClickClose=function(e){
		UIMgr.ins.closeView("InvitePayReceiveView");
	}

	__proto.onClickRemove=function(e){
		InvitePayMgr.ins.sendInvitePayReject(this._curSelect.id);
	}

	__proto.onClickConfirm=function(e){
		var buyItemVO=ShopModel.getShopConfigByID(this._curSelect.shopId);
		if (PlayerInfoMgr.ins.getItemCount(ItemConst.GEM)< buyItemVO.Price){
			TipsManager.Instance().showBuyCurrency(ItemConst.GEM);
			return;
		}
		InvitePayMgr.ins.sendInvitePayConfirm(this._curSelect.id);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		laya.ui.View.prototype.destroy.call(this);
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(InvitePayReceiveViewUI,this,'dataSource',value);
	});

	return InvitePayReceiveView;
})(InvitePayReceiveViewUI)


//class modules.invitepay.view.InvitePaySendView extends ui.invitepay.InvitePaySendViewUI
var InvitePaySendView=(function(_super){
	function InvitePaySendView(){
		this._isBuying=false;
		InvitePaySendView.__super.call(this);
		this.initView();
		this.addEvent();
	}

	__class(InvitePaySendView,'modules.invitepay.view.InvitePaySendView',_super);
	var __proto=InvitePaySendView.prototype;
	__proto.initView=function(){
		this.txtTitle0.text=LanguageMgr.Ins.GetLan(14300185);
		this.txtTitle1.text=LanguageMgr.Ins.GetLan(14300187);
		this.mouseThrough=false;
		this.maskBg.mouseEnabled=true;
		if(UrlParam.PARAMS["PLID"]=="fb"){
			this.btnInvite.visible=false;
			this.btnInvite.disabled=true;
			this.btnPay.x=544;
		}
	}

	__proto.addEvent=function(){
		this.btnClose.on("click",this,this.onClickClose);
		this.btnInvite.on("click",this,this.onClickInvitePay);
		this.btnPay.on("click",this,this.onClickPay);
		EventMgr.ins.on("recv_buyResult",this,this.onBuyResult);
	}

	__proto.delEvent=function(){
		this.btnClose.off("click",this,this.onClickClose);
		this.btnInvite.off("click",this,this.onClickInvitePay);
		this.btnPay.off("click",this,this.onClickPay);
		EventMgr.ins.off("recv_buyResult",this,this.onBuyResult);
	}

	__proto.onClickClose=function(){
		if (this._isBuying)return;
		UIMgr.ins.closeView("InvitePaySendView");
	}

	__proto.onClickInvitePay=function(){
		if (this._isBuying)return;
		var buyItemVO=ShopModel.getShopConfigByID(this.dataSource);
		InvitePayMgr.ins.sendCreateInvitePay(buyItemVO.ID,buyItemVO.Type);
		UIMgr.ins.closeView("InvitePaySendView");
	}

	__proto.onClickPay=function(){
		if (this._isBuying)return;
		var buyItemVO=ShopModel.getShopConfigByID(this.dataSource);
		this._isBuying=true;
		if (UrlParam.PARAMS["PLID"]=="wx"){
			Laya.timer.frameOnce(2,this,this.showLoadFun)
		}
		ShopMgr.IS_BUYING_BOX=true;
		SocketManager.Instance.out.reqShopBuy(buyItemVO.Type,buyItemVO.ID);
	}

	__proto.onBuyResult=function(res){
		if (UrlParam.PARAMS["PLID"]=="wx"){
			Laya.timer.clear(this,this.showLoadFun);
			if (Browser.window.wxutil){
				Browser.window.wxutil.hideload();
			}
		}
		if (res.result==0){
			Laya.timer.once(2000,this,this.onClose);
		}
		else{
			this._isBuying=false;
		}
	}

	__proto.showLoadFun=function(){
		Browser.window.wxutil.showload('发送请求中...');
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("InvitePaySendView");
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		laya.ui.View.prototype.destroy.call(this);
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(InvitePaySendViewUI,this,'dataSource',value);
		var buyItemVO=ShopModel.getShopConfigByID(value);
		this.icon.skin="assets/textrue/shop/small/"+buyItemVO.itemSkin;
		this.txtBuy.innerHTML=LanguageMgr.Ins.GetLan(14300186,LanguageMgr.Ins.GetLan(buyItemVO.Name),"<img style='width:32px;height:32px;padding:-2px 0 0 0;' src='"+URL.rootPath+"assets/textrue/itemicon/gems.png' />",buyItemVO.Price);
	});

	return InvitePaySendView;
})(InvitePaySendViewUI)


//class modules.levelBox.items.LevelBoxItem extends ui.levelBox.items.LevelBoxItemUI
var LevelBoxItem=(function(_super){
	function LevelBoxItem(){
		this._data=null;
		// private var _cdTimer:int;
		this._nowPrice=0;
		this._isOpenTimer=false;
		LevelBoxItem.__super.call(this);
		var self=this;
		self.addEvent();
		self.hideTipsText.text=LanguageMgr.Ins.GetLan("14300121");
		self.titleText_1.text=LanguageMgr.Ins.GetLan("14300122");
		self.levelText.text=LanguageMgr.Ins.GetLan("14300123",0);
		self.titleText_2.text=LanguageMgr.Ins.GetLan("14300124");
		self.notTitleText.text=LanguageMgr.Ins.GetLan("14300125");
		self.notOpenBtnText.text=LanguageMgr.Ins.GetLan("14300181");
		self.offText.text="";
		self.origText.text="";
		self.lineText.text="";
		self.nowText.text="";
		self.list.array=[];
	}

	__class(LevelBoxItem,'modules.levelBox.items.LevelBoxItem',_super);
	var __proto=LevelBoxItem.prototype;
	__proto.removeEvent=function(){
		var self=this;
	}

	__proto.addEvent=function(){
		var self=this;
		self.list.mouseHandler=Handler.create(self,self.onClickHandler,null,false);
		self.list.renderHandler=Handler.create(self,self.onRenderHandler,null,false);
		self.buyBtn.clickHandler=Handler.create(self,self.onBuyClick,null,false);
	}

	__proto.onClickHandler=function(e,$index){
		if(e.type !="click")return;
		var data=this.list.array[$index];
		if(!data)return;
		var itemVO=ItemModel.getItemConfigData(data.id);
		TipsManager.Instance().addItemTip(itemVO,e);
	}

	__proto.onRenderHandler=function($item,$index){
		var data=this.list.array[$index];
		if(!data){
			$item.icon.skin="";
			$item.numText.text="";
			return;
		};
		var itemVO=ItemModel.getItemConfigData(data.id);
		$item.icon.skin="assets/textrue/itemicon/"+itemVO.Icon+".png";
		$item.numText.text=""+data.count;
	}

	/**
	*点击购买
	*/
	__proto.onBuyClick=function(){
		var self=this;
		if(self._nowPrice > PlayerInfo.instance.diamond){
			if(ShopMgr.ins.IS_OPEN_PAY){
				TipsManager.Instance().showAlertDialog(
				LanguageMgr.Ins.GetLan("9007368")
				,LanguageMgr.Ins.GetLan("14300142",LanguageMgr.Ins.GetLan("9007002"))
				,LanguageMgr.Ins.GetLan("9007390")
				,LanguageMgr.Ins.GetLan("9007389")
				,Handler.create(self,self.onRecharge));
				}else{
				TipsManager.Instance().showLanTips(10001172);
			}
			return;
		}
		TipsManager.Instance().showAlertDialog(
		LanguageMgr.Ins.GetLan("9002294")
		,LanguageMgr.Ins.GetLan("14300164",self._nowPrice)
		,LanguageMgr.Ins.GetLan("9007390")
		,LanguageMgr.Ins.GetLan("9007389")
		,Handler.create(self,self.onBuyLvBox));
	}

	__proto.onBuyLvBox=function(){
		LevelBoxMgr.ins.sendBuyLevelBox(this._data.packageId);
	}

	__proto.onRecharge=function(){
		ShopMgr.ins.selectedIndex=4;
		UIMgr.ins.openView("ShopView");
	}

	__proto.updateOpen=function(){
		var self=this;
		if(self._data.isOpen){
			self.hideTipsText.visible=false;
			self._isOpenTimer=true;
			self.boxImg.gray=false;
			self.lockImg.visible=false;
			self.hideTipsText.visible=false;
			self.notOpenBtnText.visible=false;
			self.buyBtn.disabled=false;
			self.titleText_1.visible=true;
			self.levelText.visible=true;
			self.titleText_2.visible=true;
			self.moneyTypeIcon.visible=true;
			self.origText.visible=true;
			self.lineText.visible=true;
			self.notTitleText.visible=true;
			self.nowText.visible=true;
		}
		else {
			self.hideTipsText.visible=true;
			self._isOpenTimer=false;
			self.boxImg.gray=true;
			self.lockImg.visible=true;
			self.hideTipsText.visible=true;
			self.notOpenBtnText.visible=true;
			self.buyBtn.disabled=true;
			self.titleText_1.visible=false;
			self.levelText.visible=false;
			self.titleText_2.visible=false;
			self.moneyTypeIcon.visible=false;
			self.origText.visible=false;
			self.lineText.visible=false;
			self.notTitleText.visible=false;
			self.nowText.visible=false;
		}
	}

	// }
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		laya.ui.View.prototype.destroy.call(this);
		self._data=null;
	}

	__getset(0,__proto,'data',function(){return this._data;},function(value){
		var self=this;
		self._data=value;
		if(!self._data){
			self.hideTipsText.visible=false;
			self.titleText_1.visible=false;
			self.levelText.visible=false;
			self.titleText_2.visible=false;
			self.notTitleText.visible=false;
			self.offText.text="";
			self.boxImg.visible=false;
			self.origText.text="";
			self.lineText.text="";
			self.nowText.text="";
			self.list.array=[];
			self.buyBtn.visible=false;
			self.isBuyFlagImg.visible=false;
			self.hideTipsText.visible=false;
			self.notOpenBtnText.visible=false;
			return;
		}
		self.titleText_1.visible=true;
		self.levelText.visible=true;
		self.titleText_2.visible=true;
		self.notTitleText.visible=true;
		self.buyBtn.visible=true;
		self.levelText.text=LanguageMgr.Ins.GetLan("14300123",self._data.openLevel);
		self.hideTipsText.text=LanguageMgr.Ins.GetLan("14300180",self._data.openLevel);
		self.list.array=self._data.rewards;
		self.boxImg.visible=true;
		if(LanguageMgr.Ins.isChinese){
			self.offText.text=LanguageMgr.Ins.GetLan("14300152",self._data.offNum/10);
		}
		else {
			self.offText.text=LanguageMgr.Ins.GetLan("14300152",(100-self._data.offNum));
		}
		self.origText.text=""+self._data.originalPrice;
		var lineStr="";
		for (var i=0,len=self.origText.text.length;i < len;i++){
			lineStr+="_";
		}
		self.lineText.text=lineStr;
		self._nowPrice=Math.ceil(self._data.originalPrice *(self._data.offNum / 100));
		self.nowText.text=""+self._nowPrice;
		self.notTitleText.x=self.origText.x+(self.origText.textField.textWidth+4);
		self.nowText.x=self.notTitleText.x+(self.notTitleText.textField.textWidth+4);
		self.updateOpen();
		if(self._data.collectCount > 0){
			self.buyBtn.visible=false;
			self.isBuyFlagImg.visible=true;
		}
		else {
			self.buyBtn.visible=true;
			self.isBuyFlagImg.visible=false;
		}
	});

	return LevelBoxItem;
})(LevelBoxItemUI)


/**
*登录界面
*@author weiqiang.huang
*
*/
//class modules.loading.view.LoginView extends ui.login.LoginViewUI
var LoginView=(function(_super){
	function LoginView(){
		this.cliplayer1=null;
		this.cliplayer2=null;
		this.burnlayer=null;
		this._cliplayer1=null;
		this._cliplayer2=null;
		LoginView.__super.call(this);
		this.init();
		this.addEvent();
	}

	__class(LoginView,'modules.loading.view.LoginView',_super);
	var __proto=LoginView.prototype;
	__proto.init=function(){
		this.txt_nickName.visible=!LoginControl.instance.isLogin;
		if(LoginControl.instance.isLogin){
			this.box.y=450;
		}
		else{
			this.box.y=688;
		}
		this.txt_nickName.prompt=LanguageMgr.Ins.GetLan("9007309");
	}

	//this.cacheAs="bitmap";
	__proto.addEvent=function(){
		this.btn_enter.on("click",this,this.onEnterGame);
		this.txt_nickName.on("enter",this,this.onEnterGame);
	}

	//this.logo.on(Event.CLICK,this,this.test);
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.btn_enter.off("click",this,this.onEnterGame);
		this.txt_nickName.off("enter",this,this.onEnterGame);
		Laya.timer.clear(this,this.onCallBack);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__proto.test=function(){
		var scene=BattleSceneFactory.getInstance().createBattleScene("1");
		this.addChild(scene);
		this.cliplayer1=scene.renderlayer1;
		this._cliplayer1=new Sprite();
		this._cliplayer1.width=this.cliplayer1.width;
		this._cliplayer1.height=this.cliplayer1.height;
		this._cliplayer1.blendMode=Render.isWebGL ? "destination-out-my" :"destination-out";
		this.cliplayer1.addChild(this._cliplayer1);
		this.cliplayer1.staticCache=true;
		this.cliplayer2=scene.renderlayer2;
		this._cliplayer2=new Sprite();
		this._cliplayer2.width=this.cliplayer2.width;
		this._cliplayer2.height=this.cliplayer2.height;
		this._cliplayer2.blendMode=Render.isWebGL ? "destination-out-my" :"destination-out";
		this.cliplayer2.addChild(this._cliplayer2);
		this.cliplayer2.staticCache=true;
		this.burnlayer=scene.burnlayer;
		Laya.timer.loop(100,this,this.onCallBack);
	}

	__proto.onCallBack=function(){
		var url=StringUtils.formate("crack/{0}/crater.png",115501);
		var burnUrl=StringUtils.formate("crack/{0}/craterBrink.png",115501);
		this.addClip(url,burnUrl,Math.random()*1000,Math.random()*1000);
	}

	__proto.addClip=function(url,burnUrl,x,y){
		this._addClip(url,x,y,this.cliplayer1,this._cliplayer1);
		this._addClip(url,x,y,this.cliplayer2,this._cliplayer2);
		this.addBurn(url,burnUrl,x,y);
	}

	__proto.addBurn=function(url,burnUrl,x,y){
		var txt1=(Laya.loader.getRes(burnUrl));
		var txt2=(Laya.loader.getRes(url));
		this.burnlayer.graphics.drawTexture(txt1,x+(txt2.width*2-txt1.width*2)/2,y+(txt2.height*2-txt1.height*2)/2,txt1.width *2,txt1.height *2);
	}

	__proto._addClip=function(url,x,y,cliplayer,_cliplayer){
		var txt=Laya.loader.getRes(url);
		_cliplayer.graphics.drawTexture(Laya.loader.getRes(url),x,y,txt.width *2,txt.height *2);
	}

	__proto.onEnterGame=function(evt){
		if(this.txt_nickName.text=="" && !LoginControl.instance.isLogin){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007309"));
			return;
		}
		PlayerInfo.instance.openid=this.txt_nickName.text;
		PlayerInfo.instance.accesstoken=this.txt_nickName.text;
		PlayerInfo.instance.nickName=this.txt_nickName.text;
		LoginControl.instance.checkAccount();
	}

	//LoginControl.instance.login(txt_nickName.text);
	__proto.show=function($userName){
		($userName===void 0)&& ($userName="");
		if($userName !=""){
			if(this.txt_nickName){
				this.txt_nickName.text=$userName;
			}
		}
	}

	return LoginView;
})(LoginViewUI)


//class modules.loginActivity.view.ActivityLoginView extends ui.activity.view.login.ActivityLoginViewUI
var ActivityLoginView=(function(_super){
	function ActivityLoginView(){
		this.activityId=0;
		this._canRecCount=0;
		this.zhb={
			0:LanguageMgr.Ins.GetLan("9070110"),
			1:LanguageMgr.Ins.GetLan("9070111"),
			2:LanguageMgr.Ins.GetLan("9070112"),
			3:LanguageMgr.Ins.GetLan("9070113"),
			4:LanguageMgr.Ins.GetLan("9070114"),
			5:LanguageMgr.Ins.GetLan("9070115"),
			6:LanguageMgr.Ins.GetLan("9070116")
		}
		//// SocketManager.Instance.out.getActivityReward(conditionId);
		this._conditionId=null;
		ActivityLoginView.__super.call(this);
		this.initView();
	}

	__class(ActivityLoginView,'modules.loginActivity.view.ActivityLoginView',_super);
	var __proto=ActivityLoginView.prototype;
	__proto.initView=function(){
		this._canRecCount=0;
		if(LoginActivityMgr.ins.noviceActivityIsGotCount >=7){
			this.activityId=13;
			this._t1.visible=this._t2.visible=true;
			var timer=ConfigModel.getConfigData(1094).ConfigValue;
			var timerArr=timer.split(',');
			this._t1.text=LanguageMgr.Ins.GetLan("9070108")+timerArr[0]+" - "+timerArr[1];
			this._t2.text=LanguageMgr.Ins.GetLan("9070109");
			this.imgTop.visible=false;
			}else {
			this.activityId=11
			this._t1.visible=this._t2.visible=false
			this.imgTop.visible=true;
		};
		var activityConditionData=ActivityConditionModel.getActivityConditionData(this.activityId)
		var len=activityConditionData.length
		for(var i=0;i < len;i++){
			var activityConditionVO=activityConditionData[i];
			var rewards=activityConditionVO.Rewards;
			var rewardsArr=rewards.split('|');
			var itemId=rewardsArr[0];
			var itemVo=ItemModel.getItemConfigData(itemId);
			var itemType=itemVo.Type;
			var activityLogin2Item=this._list._childs[i];
			var lastActivityLogin2Item=i ? this._list._childs[i-1] :null;
			var activityConditionMsg=LoginActivityMgr.ins.conditionListObj[activityConditionVO.ConditionId];
			var isGet=activityConditionMsg.isGet;
			var mValue1=activityConditionVO.Value1;
			var value1=activityConditionMsg.value1;
			var canGet=value1 >=mValue1;
			var tpl;
			if(i===6){
				activityLogin2Item._normal.visible=activityLogin2Item._treasure.visible=false;
				tpl=activityLogin2Item._last;
				}else if(itemType===4){
				activityLogin2Item._normal.visible=activityLogin2Item._last.visible=false;
				tpl=activityLogin2Item._treasure;
				tpl._icon.y-=7;
				tpl._icon.on("click",this,TipsManager.Instance().addItemTip,[itemVo]);
				}else {
				activityLogin2Item._treasure.visible=activityLogin2Item._last.visible=false
				tpl=activityLogin2Item._normal
			}
			tpl.visible=true
			tpl._icon.skin="assets/textrue/itemicon/"+itemVo.Icon+".png";
			if(rewardsArr[1] !=1){
				tpl._count.text=rewardsArr[1]
				}else {
				tpl._count.visible=false
			}
			tpl._day.text=this.zhb[i]
			tpl._ylq.visible=false
			tpl._lq.visible=false
			tpl._btn.visible=false
			if(canGet && !isGet){
				tpl._lq.visible=true
				this._canRecCount++;
				activityLogin2Item['ani']=new AniSkeleton("ui_dailingqu","ui");
				tpl._bg.addChild(activityLogin2Item['ani'])
				if(i===6){
					tpl._bg.skin='activity/login/ui_xuanzhong_bg_02.png'
					activityLogin2Item['ani'].x=95
					activityLogin2Item['ani'].y=100
					}else {
					tpl._bg.skin='activity/login/ui_xuanzhong_bg_01.png'
					activityLogin2Item['ani'].x=75+5
					activityLogin2Item['ani'].y=100
				}
				tpl._lq.on("click",this,this.getActivityReward,[activityConditionVO.ConditionId])
				tpl._day.strokeColor='#ea9307'
				}else {
				if(isGet){
					tpl._ylq.visible=true
					}else {
					tpl._btn.visible=true
					if(!canGet && lastActivityLogin2Item && lastActivityLogin2Item['canGet']){
						tpl._btn_txt.text=LanguageMgr.Ins.GetLan("9002287");
						}else {
						tpl._btn_txt.text=LanguageMgr.Ins.GetLan("9002288");
					}
				}
			}
			activityLogin2Item['isGet']=isGet;
			activityLogin2Item['canGet']=canGet;
			activityLogin2Item['tpl']=tpl;
			activityLogin2Item['itemType']=itemType;
			if(this._canRecCount){
				RedDotMgr.ins.updateRedDotStatus("SEVEN_LOGIN",true);
				EventMgr.ins.event("ACTIVITY_REDDOT_UPDATE","SEVEN_LOGIN");
				}else{
				RedDotMgr.ins.updateRedDotStatus("SEVEN_LOGIN",false);
				EventMgr.ins.event("ACTIVITY_REDDOT_UPDATE","SEVEN_LOGIN");
			}
		}
	}

	/**领取礼包 **/
	__proto.getActivityReward=function(conditionId){
		SocketManager.Instance.out.getActivityReward(conditionId);
		var self=this;
		self._conditionId=conditionId;
	}

	// }
	__proto.onGetActivityReward=function(){
		SocketManager.Instance.out.getActivityReward(this._conditionId);
	}

	__proto.updateData=function(conditionId){
		var i=0
		if(conditionId <=40){
			i=conditionId-34
			}else {
			i=conditionId-41
		};
		var activityLogin2Item=this._list._childs[i];
		var tpl=activityLogin2Item['tpl'];
		var itemType=activityLogin2Item['itemType'];
		var ani=activityLogin2Item['ani']
		ani.destroy();
		if(i===6){
			tpl._bg.skin='activity/login/ui_kapaizi_bg_02.png'
			}else {
			if(itemType===4){
				tpl._bg.skin='activity/login/ui_kapailan_bg_01.png'
				}else {
				tpl._bg.skin='activity/login/ui_kapai_bg_01.png'
			}
		}
		tpl._bg.x=0
		tpl._bg.y=0
		tpl._btn.visible=false
		tpl._ylq.visible=true
		tpl._lq.visible=false
		LoginActivityMgr.ins.noviceActivityIsGotCount>=7 && EventMgr.ins.event("Activit_isDone");
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var len=this._list._childs.length;
		var activityLogin2Item;
		var i=0
		for(i=0;i< len;i++){
			activityLogin2Item=this._list._childs[i];
			var btn=activityLogin2Item['tpl']._lq
			btn.hasListener("click")&& btn.off("click",this,this.getActivityReward)
			var icon=activityLogin2Item['tpl']._icon
			icon.hasListener("click")&& icon.off("click",this,TipsManager.Instance().addItemTip)
		}
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	//wait
	__proto.onClickHandler=function(){
		UIMgr.ins.closeView("ActivityLogin");
	}

	return ActivityLoginView;
})(ActivityLoginViewUI)


//class modules.mulitpve.MulitPveResultLoseView extends ui.mulitpveresult.MulitPveResultLoseViewUI
var MulitPveResultLoseView=(function(_super){
	function MulitPveResultLoseView(){
		MulitPveResultLoseView.__super.call(this);
		this.initView();
		this.addEvent();
	}

	__class(MulitPveResultLoseView,'modules.mulitpve.MulitPveResultLoseView',_super);
	var __proto=MulitPveResultLoseView.prototype;
	Laya.imps(__proto,{"laya.ui.IResize":true})
	__proto.initView=function(){
		this.txtUp0.text=LanguageMgr.Ins.GetLan(14300031);
		this.txtUp1.text=LanguageMgr.Ins.GetLan(14300032);
		this.txtUp2.text=LanguageMgr.Ins.GetLan(14300033);
		this.txtReward.text=LanguageMgr.Ins.GetLan(14300206);
		if (Browser.window.fbConfig.isOpenAds){
			this.btnShowAD.visible=true;
			this.btnConfirm.x=682;
		}
		else{
			this.btnShowAD.visible=false;
			this.btnConfirm.x=565;
		};
		var rewardInfo=ConfigModel.getConfigData(1135).ConfigValue.split("|");
		var vo=ItemModel.getItemConfigData(rewardInfo[0]);
		this.moneyIcon.skin="assets/textrue/itemicon/"+vo.Icon+".png";
		var maxRewardNum=ConfigModel.getConfigData(1143).ConfigValue;
		this.moneyValue.text=ADMgr.ins.rewardNum >=maxRewardNum ? "0" :rewardInfo[1];
	}

	__proto.addEvent=function(){
		this.btnConfirm.clickHandler=Handler.create(this,this.onClickClose,null,false);
		this.imgUp0.on("click",this,this.onClickUp,[0]);
		this.imgUp1.on("click",this,this.onClickUp,[1]);
		this.imgUp2.on("click",this,this.onClickUp,[2]);
		this.btnShowAD.on("click",this,this.showAD);
		ResizeMgr.addListener(this,true);
	}

	__proto.delEvent=function(){
		this.imgUp0.off("click",this,this.onClickUp);
		this.imgUp1.off("click",this,this.onClickUp);
		this.imgUp2.off("click",this,this.onClickUp);
		this.btnShowAD.off("click",this,this.showAD);
		ResizeMgr.removeListener(this);
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.scaleX=_bestFitWidth / 1136;
		this.scaleY=_bestFitHeight / 640;
	}

	__proto.onClickClose=function(){
		UIMgr.ins.closeView("MulitPveResultLoseView");
		HallMgr.ins.show();
	}

	__proto.onClickUp=function(index){
		switch (index){
			}
	}

	__proto.showAD=function(){
		var maxRewardNum=ConfigModel.getConfigData(1143).ConfigValue;
		if(ADMgr.ins.rewardNum >=maxRewardNum){
			TipsManager.Instance().showLanTips(14300413);
			return;
		};
		var msg=new com.road.ddt.proto.AdvertiseRewardMsg();
		msg.type=2;
		msg.state=-1;
		SocketManager.Instance.sendSocketData(0x290a,msg);
		FBInterfaceMgr.ins.showAsync(Handler.create(this,this.onPlayOver),Handler.create(this,this.onPlayError));
	}

	__proto.onPlayOver=function(){
		ADMgr.ins.sendGetADReward(2,true);
		this.btnShowAD && (this.btnShowAD.disabled=true);
	}

	__proto.onPlayError=function(){
		ADMgr.ins.sendGetADReward(2,false);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(MulitPveResultLoseViewUI,this,'dataSource',value);
	});

	return MulitPveResultLoseView;
})(MulitPveResultLoseViewUI)


//class modules.mulitpve.MulitPveResultWinView extends ui.mulitpveresult.MulitPveResultWinViewUI
var MulitPveResultWinView=(function(_super){
	function MulitPveResultWinView(){
		MulitPveResultWinView.__super.call(this);
		this.initView();
		this.addEvent();
	}

	__class(MulitPveResultWinView,'modules.mulitpve.MulitPveResultWinView',_super);
	var __proto=MulitPveResultWinView.prototype;
	Laya.imps(__proto,{"laya.ui.IResize":true})
	__proto.initView=function(){
		Laya.stage.focus=this;
	}

	__proto.addEvent=function(){
		this.btnBack.clickHandler=Handler.create(this,this.onClickClose,null,false);
		this.listReward.renderHandler=Handler.create(this,this.onRenderReward,null,false);
		ResizeMgr.addListener(this,true);
	}

	__proto.delEvent=function(){
		ResizeMgr.removeListener(this);
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.scaleX=_bestFitWidth / 1136;
		this.scaleY=_bestFitHeight / 640;
	}

	__proto.onRenderReward=function(item,index){
		var data=item.dataSource;
		var itemVO=ItemModel.getItemConfigData(data.id);
		item.imgIcon.skin=PathMgr.getItemIcon(itemVO);
		if (data.count > 1){
			item.txtName.isHtmlText=true;
			item.txtName.text=LanguageMgr.Ins.GetLan(itemVO.Name)+"<font color='#37f53b'>x"+data.count+"</font>";
		}
		else{
			item.txtName.isHtmlText=false;
			item.txtName.text=LanguageMgr.Ins.GetLan(itemVO.Name);
		}
	}

	__proto.onClickClose=function(){
		UIMgr.ins.closeView("MulitPveResultWinView");
		HallMgr.ins.show(11);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(MulitPveResultWinViewUI,this,'dataSource',value);
		var msg=value;
		if (value){
			var playerMsg;
			var rewardMsg;
			var rewards=[];
			for (var i=0,n=msg.playerMsg.length;i < n;i++){
				playerMsg=msg.playerMsg[i];
				if (playerMsg.userId==PlayerInfo.instance.userId+""){
					if (playerMsg.rewardMsg && playerMsg.rewardMsg.length > 0){
						for (var j=0,m=playerMsg.rewardMsg.length;j < m;j++){
							rewardMsg=playerMsg.rewardMsg[j];
							if (!rewardMsg.hasIsSelect || rewardMsg.isSelect){
								rewards.push({id:rewardMsg.itemTempId,count:rewardMsg.count});
							}
						}
					}
				}
			}
			this.listReward.repeatX=rewards.length;
			this.listReward.array=rewards;
			this.listReward.x=(1136-((rewards.length *(106+64))-64))/ 2;
			this.imgWin.y=rewards.length==0 ? 256 :86;
		}
	});

	return MulitPveResultWinView;
})(MulitPveResultWinViewUI)


//class modules.mulitpve.MulitPveSelectView extends ui.mulitpve.MulitPveSelectViewUI
var MulitPveSelectView=(function(_super){
	function MulitPveSelectView(){
		this.curGroupId=0;
		this.curSelectVO=null;
		MulitPveSelectView.__super.call(this);
		this.initView();
		this.addEvent();
		var list=CampaignModel.getConfigDataByType(0);
		var map={};
		list=list.filter(function(item){
			if (map[item.GroupID]==null){
				map[item.GroupID]=true;
				return true;
			}
			return false;
		}.bind(this));
		list.sort(function(a,b){
			if (a.NeedLevel < b.NeedLevel){
				return-1;
			}
			if (a.NeedLevel > b.NeedLevel){
				return 1;
			}
			if (a.ID < b.ID){
				return-1;
			}
			if (a.ID > b.ID){
				return 1;
			}
			return 0;
		});
		this.listStage.array=list;
		this.listStage.selectedIndex=0;
	}

	__class(MulitPveSelectView,'modules.mulitpve.MulitPveSelectView',_super);
	var __proto=MulitPveSelectView.prototype;
	__proto.initView=function(){
		this.txtTitle1.text=LanguageMgr.Ins.GetLan(14300151);
		this.listMode["autoSelectEnable"]=false;
	}

	__proto.addEvent=function(){
		this.listStage.renderHandler=Handler.create(this,this.onRenderStage,null,false);
		this.listStage.selectHandler=Handler.create(this,this.onSelectStage,null,false);
		this.listMode.renderHandler=Handler.create(this,this.onRenderMode,null,false);
		this.listMode.selectHandler=Handler.create(this,this.onSelectMode,null,false);
		this.listMode.mouseHandler=Handler.create(this,this.onClickModeItem,null,false);
		this.listReward.renderHandler=Handler.create(this,this.onRenderReward,null,false);
		this.listReward.mouseHandler=Handler.create(this,this.onSelectReward,null,false);
		this.topBar.btnBackCallBack=Handler.create(this,this.onClickBack,null,false);
		this.btnCreate.clickHandler=Handler.create(this,this.onClickCreate,null,false);
		this.btnMode.clickHandler=Handler.create(this,this.onClickMode,null,false);
		this.btnBuyCount.clickHandler=Handler.create(this,this.onClickBuyCount,null,false);
		this.on("click",this,this.onClickView);
		CampaignMgr.ins.on('EVENT_UPDATE_CAMPAINGN',this,this.onUpdateCampaign);
	}

	__proto.delEvent=function(){
		this.off("click",this,this.onClickView);
		CampaignMgr.ins.off('EVENT_UPDATE_CAMPAINGN',this,this.onUpdateCampaign);
	}

	__proto.updateStageView=function(){
		this.txtName.text=this.curSelectVO.Name;
		this.txtDesc.text=this.curSelectVO.Desc;
		this.txtCount.text=CampaignMgr.ins.getCampaignCount(this.curSelectVO.ID)+"";
		this.txtMode.text=LanguageMgr.Ins.GetLan(CampaignConst.DifficultLan[this.curSelectVO.Difficult]);
		this.listReward.array=this.curSelectVO.Reward;
	}

	__proto.onUpdateCampaign=function(){
		this.listStage.refresh();
		this.updateStageView();
	}

	__proto.onUpdateCampaignInfo=function(campaignInfo){
		if (this.curSelectVO && this.curSelectVO.ID==campaignInfo.campaignId){
			this.updateStageView();
		}
	}

	__proto.onRenderStage=function(item,index){
		var data=item.dataSource;
		item.txtName.text=data.Name;
		item.txtTitle1.text=LanguageMgr.Ins.GetLan(14300149);
		item.txtCount.text=CampaignMgr.ins.getCampaignCountByGroupId(data.GroupID)+"";
		item.txtCount.x=item.txtTitle1.x+item.txtTitle1.textWidth+2;
		item.icon.skin="assets/textrue/campaign/s_"+data.GroupID+".png"
		if (PlayerInfo.instance.grade < data.NeedLevel){
			item.boxBottom.visible=false;
			item.txtLimit.text=LanguageMgr.Ins.GetLan(14300150,data.NeedLevel);
			item.boxChapter.gray=true;
			item.mouseEnabled=false;
		}
		else{
			if (data.PerCampaignId !=0){
				if (CampaignMgr.ins.checkCampaignIsPass(data.PerCampaignId)){
					item.boxChapter.gray=false;
					item.mouseEnabled=true;
					item.boxBottom.visible=true;
					item.txtLimit.text="";
				}
				else{
					item.boxChapter.gray=true;
					item.mouseEnabled=false;
					item.boxBottom.visible=false;
					var percamp=CampaignModel.getConfigData(data.PerCampaignId);
					item.txtLimit.text=LanguageMgr.Ins.GetLan(14300173,LanguageMgr.Ins.GetLan(percamp.Name)+"-"+LanguageMgr.Ins.GetLan(CampaignConst.DifficultLan[percamp.Difficult]));
				}
			}
			else{
				item.boxChapter.gray=false;
				item.mouseEnabled=true;
				item.disabled=false;
				item.boxBottom.visible=true;
				item.txtLimit.text="";
			}
		}
	}

	__proto.onSelectStage=function(index){
		if (index==-1){
			return;
		};
		var data=this.listStage.selectedItem;
		this.curGroupId=data.GroupID;
		this.listMode.selectedIndex=-1;
		var group=CampaignModel.getConfigDataByTypeGroup(data.Type,this.curGroupId).concat();
		group.sort(function(a,b){
			if (a.Difficult < b.Difficult){
				return 1;
			}
			if (a.Difficult > b.Difficult){
				return-1;
			}
			return 0;
		});
		this.listMode.repeatY=group.length;
		this.listMode.array=group;
		this.listMode.selectedIndex=group.length-1;
		this.imgModeBg.height=32+group.length *45-2;
		this.boxMode.y=513-(this.imgModeBg.height-2);
	}

	__proto.onRenderMode=function(item,index){
		var data=item.dataSource;
		(item.getChildByName("txtLabel")).text=LanguageMgr.Ins.GetLan(CampaignConst.DifficultLan[data.Difficult]);
		item.gray=!CampaignMgr.ins.checkCampaignEnable(data.ID);
	}

	__proto.onSelectMode=function(index){
		if (index==-1){
			return;
		}
		this.boxMode.visible=false;
		this.curSelectVO=this.listMode.selectedItem;
		this.updateStageView();
	}

	__proto.onClickModeItem=function(e,index){
		if (e.type !="click" || index==-1){
			return;
		};
		var data=(e.currentTarget).dataSource;
		var msg=null;
		if (PlayerInfo.instance.grade < data.NeedLevel){
			msg=LanguageMgr.Ins.GetLan(14300150,data.NeedLevel);
		}
		else{
			if (data.PerCampaignId !=0){
				if (!CampaignMgr.ins.checkCampaignIsPass(data.PerCampaignId)){
					var percamp=CampaignModel.getConfigData(data.PerCampaignId);
					msg=LanguageMgr.Ins.GetLan(14300173,LanguageMgr.Ins.GetLan(percamp.Name)+"-"+LanguageMgr.Ins.GetLan(CampaignConst.DifficultLan[percamp.Difficult]));
				}
			}
		}
		if (msg){
			TipsManager.Instance().showTips(msg);
		}
		else{
			this.listMode.selectedIndex=index;
		}
	}

	__proto.onSelectReward=function(e,$index){
		if (e.type !="click"){
			return;
		};
		var data=this.listReward.array[$index];
		if (!data){
			return;
		};
		var itemVO=ItemModel.getItemConfigData(data.id);
		TipsManager.Instance().addItemTip(itemVO,e);
	}

	__proto.onRenderReward=function(item,index){
		var data=this.listReward.array[index];
		var itemVO=ItemModel.getItemConfigData(data.id);
		item.icon.skin='assets/textrue/itemicon/'+itemVO.Icon+'.png';
		item.txtCount.text=data.count > 1 ? "x"+data.count :"";
		item.start.value="";
		if (itemVO.Type==3){
			var skillVo=SkillModel.getSkillConfigData(itemVO.Param1);
			var qualiity="aaaaaa";
			item.start.value=qualiity.substr(0,skillVo.Quality+1);
		}
	}

	__proto.onClickMode=function(){
		this.boxMode.visible=!this.boxMode.visible;
	}

	__proto.onClickBack=function(){
		UIMgr.ins.closeView("MulitPveSelectView");
	}

	__proto.onClickCreate=function(){
		RoomMgr.ins.createMulitPveRoom(this.curSelectVO.ID);
		UIMgr.ins.closeView("MulitPveSelectView");
	}

	__proto.onClickView=function(e){
		if (e.target==this.btnMode){
			e.stopPropagation();
			return;
		}
		this.boxMode.visible=false;
	}

	__proto.onClickBuyCount=function(){
		var _$this=this;
		var infoStr;
		var vipCount=VipMgr.ins.getPVECount();
		var basicNum=int(ConfigModel.getConfigData(1164).ConfigValue);
		if (CampaignMgr.ins.getCampaignBuyCount(this.curSelectVO.ID)< basicNum+vipCount){
			infoStr=LanguageMgr.Ins.GetLan(14300341,ConfigModel.getConfigData(1144).ConfigValue,CampaignMgr.ins.getCampaignBuyCount(this.curSelectVO.ID),basicNum+vipCount);
			TipsManager.Instance().showAlertDialog("",infoStr,"",LanguageMgr.Ins.GetLan(9002241),Handler.create(this,function(){
				if (PlayerInfoMgr.ins.getItemCount(ItemConst.PINKGEM)< int(ConfigModel.getConfigData(1144).ConfigValue)){
					TipsManager.Instance().showLanTips(10001113);
					return;
				}
				_$this.sendBuyCount(_$this.curSelectVO.ID);
				}),Handler.create(this,function(){
				}),Handler.create(this,function(){
			}));
		}
		else{
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan(14300055));
		}
	}

	__proto.sendBuyCount=function(ID){
		var msg=new com.road.ddt.proto.SimpleMsg();
		msg.param1=3;
		msg.param2=ID;
		SocketManager.Instance.sendSocketData(0x2811,msg);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
		this.curSelectVO=null;
	}

	return MulitPveSelectView;
})(MulitPveSelectViewUI)


//class modules.mysteryshop.items.MysteryShopItem extends ui.mysteryShop.items.MysteryShopItemUI
var MysteryShopItem=(function(_super){
	function MysteryShopItem(){
		this._data=null;
		/**事件派发器 **/
		this.eventdispatch=null;
		MysteryShopItem.__super.call(this);this.init();}
	__class(MysteryShopItem,'modules.mysteryshop.items.MysteryShopItem',_super);
	var __proto=MysteryShopItem.prototype;
	__proto.init=function(){
		var self=this;
		self.data=null;
		self.addEvent();
	}

	__proto.removeEvent=function(){
		var self=this;
		self.off("click",self,self.onClick);
	}

	__proto.addEvent=function(){
		var self=this;
		self.on("click",self,self.onClick);
	}

	__proto.onClick=function(e){
		var _$this=this;
		if(this._data.isSoldOut)return;
		UIMgr.ins.openView("MysteryShopAlertWindow",Handler.create(this
		,function(view){
			view.setData(_$this._data,0);
		}));
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
		this.eventdispatch=null;
		this._data=null;
	}

	/**
	*赋值数据
	*@param $value
	*/
	__getset(0,__proto,'data',function(){return this._data;},function($value){
		var self=this;
		self._data=$value;
		if(!self._data){
			self.soldOutMask.visible=false;
			self.soldOutFlag.visible=false;
			self.priceTypeIcon.visible=false;
			self.offBg.visible=false;
			self.hotImg.visible=false;
			self.icon.visible=false;
			self.iconBg.visible=false;
			self.starList.visible=false;
			self.priceText.text="";
			self.itemNameText.text="";
			self.offText.text="";
			self.countText.text="";
			return;
		}
		self.soldOutMask.visible=self._data.isSoldOut;
		self.soldOutFlag.visible=self._data.isSoldOut;
		self.priceTypeIcon.visible=true;
		self.priceTypeIcon.skin=MysteryShopMgr.ins.getPriceTypeSkin(self._data.priceType);
		self.priceText.text=""+Math.ceil(self._data.price *(self._data.offNum/100));
		if(self._data.offNum <=50){
			self.offText.visible=true;
			self.hotImg.visible=true;
			self.offBg.visible=false;
			self.offText.strokeColor="#DA0038";
		}
		else if(self._data.offNum < 100){
			self.offText.visible=true;
			self.hotImg.visible=false;
			self.offBg.visible=true;
			self.offText.strokeColor="#1370c6";
		}
		else {
			self.hotImg.visible=false;
			self.offBg.visible=false;
			self.offText.visible=false;
		}
		if(LanguageMgr.Ins.isChinese){
			self.offText.text=LanguageMgr.Ins.GetLan("14300138",self._data.offNum/10);
		}
		else {
			self.offText.text=LanguageMgr.Ins.GetLan("14300138",self._data.offNum);
		}
		self.iconBg.visible=true;
		self.icon.visible=true;
		self.icon.skin=self._data.itemIcon;
		self.itemNameText.text=self._data.itemName;
		self.countText.text="x"+self._data.count;
		if(self._data.skillId !=0){
			var skillVo=SkillModel.getSkillConfigData(self._data.skillId);
			self.starList.visible=true;
			var qualiity="aaaaaa";
			self.starList.value=qualiity.substr(0,skillVo.Quality+1);
		}
		else {
			self.starList.visible=false;
		}
	});

	return MysteryShopItem;
})(MysteryShopItemUI)


//class ui.menu.battle.MeleeBattleMenuUI extends laya.ui.BaseView
var MeleeBattleMenuUI=(function(_super){
	function MeleeBattleMenuUI(){
		this.mpBoxAll=null;
		this.mpBoxTitle=null;
		this.round_bg=null;
		this.round=null;
		this.mpClipRound=null;
		this.line=null;
		this.score=null;
		this.mpTextScore=null;
		this.mpBoxScore=null;
		this.mpBoxOrder=null;
		this.mpBoxReport=null;
		this.mpGText0=null;
		this.mpGText1=null;
		this.mpGText2=null;
		MeleeBattleMenuUI.__super.call(this);
		var temp=MeleeBattleMenuUI.uiView;
		MeleeBattleMenuUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(MeleeBattleMenuUI.uiView);
	}

	__class(MeleeBattleMenuUI,'ui.menu.battle.MeleeBattleMenuUI',_super);
	var __proto=MeleeBattleMenuUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("ui.menu.battle.KillReportDescUI",KillReportDescUI);
		ClassUtils.createByJson(uiData,this,this);
	}

	MeleeBattleMenuUI.uiView="eJy1lWtv2jAUhv+L9zWAnXBJ8m1jWlVt2qRepk5ThUJyIF6NE+XShiL++xwnJhdCoJ3WL9SHY7+Pz3t82KFkGwKy0Scnhp8UXpCGwigIY2Tv0Av1Eh/ZhBhTDflA136CbB3jvYZcnzIP2b93h/1BdnLrsxOJjE0ocj4yJtK4s4Fm5G2nb5FtYA1lyJ6YY02JGabV0LqjCYOWmoopvak4xuGuH0S/kI2HE7V6kKsulOuNs4ZuGFyhzCYKJQpS7i2Wa7ElfqJcRJZOIiBGG+DpiHmjlC4yytcZ9ag+DLlMpK9wFVGhi8hUI6amE43MLsTugv7eQ00wbrBWoMzh61TsG819yiGGUZ1cYMc+8G3qp9SHEvwEE+li+hLwZM5o2KIiekGl48rMPO2mZHt2WAo5tcAMHRfE8QO5aBQ39tNXmjO+egueblRdfQBRPYSJbown05lp5UHXYSCRzXLxUC4OjVPX7+mW/eNeu6RPiFV1iq5uyUSJ+3pktc7KW6gmGPf3bo2lz37dMhRC7AYRXGh/AeXHf1bvsP6bswTW9t2QOFbN9jvIktuSKRH/51fGebfGSRQ8wTxgQZ74AePZeCnBZVwW9eBd/ZCVaLlb8bZEhhhLrtq/kn/i+2WQcyZRCj3PS7j82HD6eDiVNsvhp3yuJoIcRAqpPpxUTBks30DFca6qXSYPCJEsRgViTt45ibBGxpqwiZh1xukpRrw/UyX5bLPy80CHG2X6EXkQ1eW6fx+6rt6eyfLof7g4KS6uJsSANKhOGnWmCObRTwduVuAGwiBKWp1yCCoCq7MsXyljRepniN32g6vpXOWvBNdFDpEo5QmVwZQO84INi+INm4ffX6P6xOlVHk9ayuRImfwfZbN9Z/1IWX+jcjEN/gInX+i1";
	return MeleeBattleMenuUI;
})(BaseView)


//class modules.player.item.PlayerWidgetButton extends ui.player.widget.components.bottom.ButtonUI
var PlayerWidgetButton=(function(_super){
	function PlayerWidgetButton(){
		this.item=null;
		PlayerWidgetButton.__super.call(this);
	}

	__class(PlayerWidgetButton,'modules.player.item.PlayerWidgetButton',_super);
	var __proto=PlayerWidgetButton.prototype;
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.btn.hasListener("click")&& this.btn.off("click",this,this.onBtnClicked);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__proto.setData=function(index,array){
		this.item=array[index];
		this.btn.label=this.item.name;
		if(this.item.gray){
			this.btn.gray=true;
			this.btn.mouseEnabled=false;
			}else {
			this.btn.on("click",this,this.onBtnClicked);
		}
	}

	__proto.onBtnClicked=function(){
		if(PlayerWidgetData.instance.isHanleBtnEvent){
			PlayerWidgetData.instance.isHanleBtnEvent=false;
			Laya.timer.once(100,this,function(){
				PlayerWidgetData.instance.isHanleBtnEvent=true;
			});
			this.item.handler.runWith([this.btn]);
		}
	}

	return PlayerWidgetButton;
})(ButtonUI)


//class modules.player.view.PlayerMenuView extends ui.player.widget.PlayerMenuViewUI
var PlayerMenuView=(function(_super){
	var Blocker;
	function PlayerMenuView(b){
		this._cacheX=0;
		this._cacheY=0;
		PlayerMenuView.__super.call(this);
	}

	__class(PlayerMenuView,'modules.player.view.PlayerMenuView',_super);
	var __proto=PlayerMenuView.prototype;
	__proto.initialize=function(){
		laya.ui.Component.prototype.initialize.call(this);
		this.scaleX=this.scaleY=0;
		this.listBtn.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
		this.listBtn.mouseHandler=Handler.create(this,this.onMouseHandler,null,false);
		this.on("added",this,this._$7_onAdded);
		if (this.stage){
			this._$7_onAdded();
		}
	}

	__proto._$7_onAdded=function(e){
		this.callLater(this.delayAddClick);
	}

	__proto.delayAddClick=function(){
		this.stage.on("click",this,this.onStageUp);
		this.stage.on("resize",this,this.onStageResize);
		this.callLater(this.setPosition,[this._cacheX,this._cacheY]);
	}

	__proto.onStageUp=function(e){
		if (this.stage){
			this.stage.off("click",this,this.onStageUp);
			this.stage.off("resize",this,this.onStageResize);
			this.hide();
		}
	}

	__proto.onStageResize=function(e){
		if (this.stage){
			this.callLater(this.setPosition,[this._cacheX,this._cacheY]);
		}
	}

	__proto.onRenderHandler=function(item,index){
		var btn=item.getChildByName("btn");
		btn.label=item.dataSource.label;
		if (item.dataSource.gray){
			item.gray=true;
			item.mouseEnabled=false;
		}
		else{
			item.gray=false;
			item.mouseEnabled=true;
		}
	}

	__proto.onMouseHandler=function(e,index){
		if (e.type !="click"){
			return;
		};
		var item=e.currentTarget;
		if (item.dataSource.gray){
			return;
		}
		switch (item.dataSource.type){
			case "OP_VIEW_PROFILE":{
					SocketManager.Instance.out.requestPlayerInfo(this.dataSource.data.playerId);
					break ;
				}
			case "OP_GUILD_INVITE":{
					var friendInfoMsg=new com.road.ddt.proto.FriendInfoMsg();
					friendInfoMsg.friendId=this.dataSource.data.playerId;
					friendInfoMsg.nickName=this.dataSource.data.name;
					SocketManager.Instance.out.sendGuildInvite(friendInfoMsg);
					break ;
				}
			case "OP_BLACK_LIST":{
					if (ChatMgr.ins.checkIsInBlackList(this.dataSource.data.playerId)){
						ChatMgr.ins.delBlackList(this.dataSource.data.playerId);
						item.dataSource.label=LanguageMgr.Ins.GetLan("9040042");
						TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002226"));
					}
					else{
						ChatMgr.ins.addBlackList(this.dataSource.data.playerId);
						item.dataSource.label=LanguageMgr.Ins.GetLan("9040041");
						TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002227"));
					}
					this.onRenderHandler(item,index);
					e.stopPropagation();
					break ;
				}
			case "OP_ADD_FRIEND":{
					FriendsMgr.ins.sendAddFriend(this.dataSource.data.playerId,this.dataSource.data.name);
					break ;
				}
			case "OP_DEL_FRIEND":{
					FriendsMgr.ins.sendDelFriend(this.dataSource.data.playerId);
					break ;
				}
			case "OP_CHAT_FRIEND":{
					if (FriendsMgr.ins.getIsMyFriend(this.dataSource.data.playerId)){
						UIMgr.ins.openView("FriendsWindow",Handler.create(this,function(playerId,view){
							view.selectMyFriendItem(playerId);
						},[this.dataSource.data.playerId]));
					}
					break ;
				}
			}
	}

	__proto.setPosition=function(x,y){
		this.runCallLater(this.setPosition);
		this._cacheX=x;
		this._cacheY=y;
		this.commitMeasure();
		if (y < 0){
			y=0;
		}
		else if (y+this.height > ResizeMgr.bestFitHeight){
			y=ResizeMgr.bestFitHeight-this.height;
		}
		if (x < 0){
			x=0;
		}
		else if (x+this.width > ResizeMgr.bestFitWidth){
			x=ResizeMgr.bestFitWidth-this.width;
		}
		this.x=x;
		this.y=y;
	}

	__proto.show=function(callback){
		if (this.parent){
			return;
		}
		Tween.clearTween(this);
		LayerMgr.ins.addToLayer(this,3,false);
		Tween.to(this,{scaleX:1,scaleY:1},250,Ease.sineInOut,callback);
	}

	__proto.hide=function(callback){
		if (this.parent==null){
			return;
		}
		Tween.clearTween(this);
		Tween.to(this,{scaleX:0,scaleY:0},250,Ease.sineInOut,Handler.create(this,this.remove,[callback]));
	}

	__proto.remove=function(callback){
		this.removeSelf();
		callback && callback.run();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		Tween.clearTween(this);
		this.off("added",this,this._$7_onAdded);
		Laya.stage.off("click",this,this.onStageUp);
		Laya.stage.off("resize",this,this.onStageResize);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	/**
	*
	*@param data #可选参数
	*{
		*playerId:玩家Id,
		*avatar:玩家头像,
		*sex:玩家性别,
		*name:玩家名称,
		*trophy:段位积分,
		*guild:公会名,
		*}
	*@param opers 列表类型,[{op:PlayerMenuConst,gray:是否灰显,label:按钮显示}]
	*/
	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(PlayerMenuViewUI,this,'dataSource',value);
		var data=value.data;
		var opers=value.opers;
		this.imgIcon.skin=data.avatar;
		this.txtName.text=data.name ? data.name :"";
		var trophy=data.trophy !=undefined ? data.trophy :0;
		var rankVO=RankModel.getDivison(trophy);
		var medalRes=PathMgr.getMedalRes(rankVO);
		this.imgDan.skin=medalRes.iconRes;
		this.txtGuild.text=LanguageMgr.Ins.GetLan("9004140")+(data.guild ? data.guild :LanguageMgr.Ins.GetLan("9002260"));
		if (data.sex==undefined){
			this.imgSex.skin=null;
			this.imgDan.x=121;
		}
		else{
			this.imgSex.skin=data.sex==1 ? "player/playerInfo/ui_nan.png" :"player/playerInfo/ui_nv.png";
			this.imgDan.x=161;
		};
		var h=Math.ceil(opers.length / 2)*50+16;
		this.imgBottom.height=h;
		this.height=133+h;
		this.listBtn.array=opers;
		this.listBtn.refresh();
		this.callLater(this.setPosition,[this._cacheX,this._cacheY]);
	});

	__getset(1,PlayerMenuView,'ins',function(){
		return PlayerMenuView._ins=PlayerMenuView._ins|| new PlayerMenuView(new Blocker);
	},ui.player.widget.PlayerMenuViewUI._$SET_ins);

	PlayerMenuView._ins=null;
	PlayerMenuView.__init$=function(){
		//class Blocker
		Blocker=(function(){
			function Blocker(){}
			__class(Blocker,'');
			return Blocker;
		})()
	}

	return PlayerMenuView;
})(PlayerMenuViewUI)


//class modules.player.view.PlayerWidgetView extends ui.player.widget.PlayerWidgetViewUI
var PlayerWidgetView=(function(_super){
	function PlayerWidgetView(){
		PlayerWidgetView.__super.call(this);
		this.halfWidth=Laya.stage.designWidth / 2;
		this.halfHeight=Laya.stage.designHeight / 2;
		this.scaleX=this.scaleY=0;
		this.on("click",this,this.onClicked);
		Laya.stage.on("click",this,this.hide,[null]);
		this.btn_list._list.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
		this.player_info._dan.text=LanguageMgr.Ins.GetLan("9004139");
		this.player_info._guild.text=LanguageMgr.Ins.GetLan("9004140");
	}

	__class(PlayerWidgetView,'modules.player.view.PlayerWidgetView',_super);
	var __proto=PlayerWidgetView.prototype;
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.btn_list._list.renderHandler){
			this.btn_list._list.renderHandler.recover();
			this.btn_list._list.renderHandler=null;
		}
		this.off("click",this,this.onClicked);
		Laya.stage.off("click",this,this.hide);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__proto.hide=function(callback){
		PlayerWidgetData.instance.isHanleBtnEvent=false;
		Tween.to(this,{scaleX:0,scaleY:0},250,Ease.sineInOut,Handler.create(this,function(){
			callback && callback.run();
		}));
	}

	__proto.onClicked=function(e){
		e.stopPropagation();
	}

	__proto.setBtnList=function(list){
		var h=Math.ceil(list.length / 2)*50+16;
		this.btn_list.height=this.btn_list.bg.height=h;
		this.height=130+h;
		this.pivotY=this.height*.5;
		this.btn_list._list.array=list;
		this.btn_list._list.refresh();
	}

	__proto.onRenderHandler=function(item,index){
		item.setData(index,this.btn_list._list.array);
	}

	__proto.show=function(e,callback){
		PlayerWidgetData.instance.isHanleBtnEvent=true;
		Tween.to(this,{scaleX:1,scaleY:1},250,Ease.sineInOut,Handler.create(this,function(){
			callback && callback.run();
		}));
	}

	__proto.setXY=function(e){
		if(e){
			this.x=e.stageX-this._parent['_x']+80;
			this.y=e.stageY-this._parent['_y'];
			if (this.x > this.halfWidth && this.y <=this.halfHeight){
				this.x-=this.width;
			}
			if (this.x > this.halfWidth && this.y > this.halfHeight){
				this.x-=this.width;
				this.y-=this.height;
			}
		}
	}

	__proto.setName=function(name){
		this.player_info._name.text=name;
	}

	__proto.setTrophy=function(trophy){
		var rankVo=RankModel.getDivison(trophy);
		if(rankVo && rankVo.hasOwnProperty('Division')){
			this.player_info.icon_trophy.skin="assets/textrue/medal/icon"+rankVo.Division+".png";
			this.player_info.trophy.text=LanguageMgr.Ins.GetLan(rankVo.Name);
			}else {
			this.player_info.icon_trophy.skin="assets/textrue/medal/icon10.png";
			this.player_info.trophy.text=LanguageMgr.Ins.GetLan("9060045");
		}
	}

	__proto.setGuildName=function(name){
		this.player_info.guild_name.text=name ? name :LanguageMgr.Ins.GetLan("9002260");
	}

	return PlayerWidgetView;
})(PlayerWidgetViewUI)


/**
*基础信息界面
*@author weiqiang.huang
*
*/
//class modules.playerMsg.BasicDataView extends ui.hall.sonView.BasicDataViewUI
var BasicDataView=(function(_super){
	function BasicDataView(){
		this.curSkillVo=null;
		this.lockEffect=null;
		this._lastCreatTime=NaN;
		this.startAry=null;
		this._rankVO=null;
		BasicDataView.__super.call(this);
		this.init();
		this.addEvent();
	}

	__class(BasicDataView,'modules.playerMsg.BasicDataView',_super);
	var __proto=BasicDataView.prototype;
	__proto.updateView=function(){
		this.lab_titleSkill.text=LanguageMgr.Ins.GetLan("9007329");
		this._rankVO=RankModel.getDivison(PlayerInfo.instance.trophy);
		if(this._rankVO){
			this.showRankImg(this._rankVO);
			this.labLadderNum.text=(PlayerInfo.instance.trophy-this._rankVO.MinScore)+"/"+this._rankVO.Score;
			this.progBarLadder.value=(PlayerInfo.instance.trophy-this._rankVO.MinScore)/ this._rankVO.Score;
			if(this._rankVO.Division < 10){
				this.boxTop.visible=false;
				this.initStar(this._rankVO.Star,this._rankVO.StarNum);
			}
			else{
				this.boxTop.visible=true;
				this.labStartCount.text="x"+this._rankVO.Star;
			}
		}
		this.list_skill.array=SkillMgr.ins.getUseCardList();
		this.list_skill.refresh();
	}

	__proto.showRankImg=function(rankVo){
		var data=PathMgr.getMedalRes(rankVo);
		this.imgRank.skin=data.textRes;
		this.imgRankLevel.skin=data.numRes;
		this.imgRankLevel.visible=false;
		this.img_Icon.skin=data.iconRes;
	}

	__proto.updateOtherView=function(info,skills){
		this.lab_titleSkill.text=LanguageMgr.Ins.GetLan("9007329");
		this.list_skill.array=this.getSkillCards(skills);
		this.list_skill.refresh();
		this._rankVO=RankModel.getDivison(info.trophy);
		if(this._rankVO){
			this.showRankImg(this._rankVO);
			this.labLadderNum.text=(info.trophy-this._rankVO.MinScore)+"/"+this._rankVO.Score;
			this.progBarLadder.value=(info.trophy-this._rankVO.MinScore)/ this._rankVO.Score;
			if(this._rankVO.Division < 10){
				this.boxTop.visible=false;
				this.initStar(this._rankVO.Star,this._rankVO.StarNum);
				}else{
				this.boxTop.visible=false;
				this.labStartCount.text="x"+this._rankVO.Star;
			}
		}
	}

	__proto.init=function(){
		this.labStart.text=LanguageMgr.Ins.GetLan("9070014");
		this.lockEffect=new AniSkeleton("ui3","ui");
		this.lockEffect.x=270;
		this.lockEffect.y=268;
		this.lockEffect.visible=false;
		this.addChild(this.lockEffect);
		this.startAry=[];
		this.list_skill.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
		this.list_skill.selectEnable=true;
		this.list_skill.selectHandler=Handler.create(this,this.onSelectHandler,null,false);
	}

	__proto.getSkillCards=function(array){
		var skills=[];
		var info;
		for(var $each_info in array){
			info=array[$each_info];
			var skill=SkillModel.getSkillConfigData(info.skillID);
			skill.skillCard=info.skillCard;
			skill.slot=info.slot;
			skill.IsHave=true;
			skill.isNew=false;
			skills.push(skill);
		}
		skills.sort(this.sortHandler);
		return skills;
	}

	__proto.sortHandler=function(data1,data2){
		if(data1.slot > data2.slot){
			return 1;
		}
		return-1;
	}

	__proto.onSelectHandler=function(index){
		if(index==-1)return;
		this.curSkillVo=this.list_skill.getItem(index);
		if(this.curSkillVo !=null){
			this.curSkillVo.IsHave=true;
			SkillMgr.ins.showDown=false;
			SkillMgr.ins.currentInfo=this.curSkillVo;
			this.list_skill.selectedIndex=-1;
			UIMgr.ins.openView("CardShowMessageView");
		}
	}

	__proto.onRenderHandler=function(item,index){
		if(index < this.list_skill.array.length){
			item.skillVo=this.list_skill.array[index];
		}
	}

	__proto.addEvent=function(){}
	__proto.onShareHandler=function(){
		if(Browser.now()-this._lastCreatTime < 1000){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("10001135"));
			return;
		}
		this._lastCreatTime=Browser.now();
		PlayerInfoMgr.ins.IsPlayerShare=true;
		UIMgr.ins.closeView("PlayerMessageView",true,false);
		UIMgr.ins.openView("PlayerMsgShareView");
	}

	__proto.initStar=function(star,maxStar){
		this.mpNodeStar.destroyChildren();
		var iconNum=maxStar;
		var isEven=iconNum % 2==1?0:1;
		for(var i=0;i < iconNum;i++){
			var tempStar=new StartItem();
			tempStar.scale(0.7,0.7);
			tempStar.anchorX=0.5
			tempStar.anchorY=0.5;
			var offset=(i-Math.floor(iconNum / 2));
			tempStar.x=offset *(tempStar.width)+isEven *tempStar.width/2;
			if(isEven==1 && iconNum==4){
				if(i==1){
					offset=0;
					}else if(i==0){
					offset=-1;
				}
				}else if(isEven==1 && iconNum==2){
				offset=0;
			}
			tempStar.y=Math.abs(offset)*9;
			if(Math.abs(offset)==2){
				if(offset > 0){
					tempStar.x=tempStar.x-8;
					}else{
					tempStar.x=tempStar.x+8;
				}
				tempStar.y=tempStar.y+10;
			}
			if(this._rankVO.Star > i){
				tempStar.mpImgStar.visible=true;
				}else{
				tempStar.mpImgStar.visible=false;
			}
			this.mpNodeStar.addChild(tempStar);
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.list_skill.renderHandler){
			this.list_skill.renderHandler.recover();
			this.list_skill.renderHandler=null;
		}
		if(this.list_skill.selectHandler){
			this.list_skill.selectHandler.recover();
			this.list_skill.selectHandler=null;
		}
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return BasicDataView;
})(BasicDataViewUI)


/**
*更多数据界面
*@author weiqiang.huang
*
*/
//class modules.playerMsg.MoreDataView extends ui.hall.sonView.MoreDataViewUI
var MoreDataView=(function(_super){
	function MoreDataView(){
		this._info=null;
		this._rankVO=null;
		MoreDataView.__super.call(this);
		this.updateView();
	}

	__class(MoreDataView,'modules.playerMsg.MoreDataView',_super);
	var __proto=MoreDataView.prototype;
	__proto.updateView=function(){
		this._info=PlayerInfo.instance;
		this.lab_hp.text=this._info.blood+'';
		this.lab_crit.text=this._info.crit / 100+"%";
		this.lab_damage.text=this._info.damage+'';
		this.lab_critDamage.text=this._info.critDamage / 10000+"";
		this.lab_victories.text=this._info.win_count+'';
		this._rankVO=RankModel.getDivison(PlayerInfo.instance.maxTrophy);
		var level=LanguageMgr.Ins.GetLan("9060012").split("|")[this._rankVO.Star-1];
		this.lab_highest.text=LanguageMgr.Ins.GetLan(this._rankVO.Name)+level;
		this.lab_skillFound.text=this._info.collectSkill+"/"+MoreDataView.filterSameName(SkillModel.allSkillConfig).length;
		var skillInfo=SkillModel.getSkillConfigData(this._info.commonSkill);
		this.lab_CurSkill.text=skillInfo !=null ? LanguageMgr.Ins.GetLan(SkillModel.getSkillPerformanceBySkillId(skillInfo.Display).NameDisplay):LanguageMgr.Ins.GetLan("9002266");
		this.setText();
	}

	__proto.updateOtherPlayerView=function(info){
		this.lab_hp.text=info.blood+'';
		this.lab_crit.text=info.crit / 100+"%";
		this.lab_damage.text=info.damage+'';
		this.lab_critDamage.text=info.critDamage / 10000+"";
		this.lab_victories.text=info.winCount+'';
		this._rankVO=RankModel.getDivison(info.maxTrophy);
		var level=LanguageMgr.Ins.GetLan("9060012").split("|")[this._rankVO.Star-1];
		this.lab_highest.text=LanguageMgr.Ins.GetLan(this._rankVO.Name)+level;
		if(info.collectSkill){
			this.lab_skillFound.text=info.collectSkill+"/"+MoreDataView.filterSameName(SkillModel.allSkillConfig).length;
			}else{
			this.lab_skillFound.text=0+"/"+MoreDataView.filterSameName(SkillModel.allSkillConfig).length;
		}
		if(info.commonSkill){
			var skillInfo=SkillModel.getSkillConfigData(info.commonSkill);
			this.lab_CurSkill.text=skillInfo !=null ? LanguageMgr.Ins.GetLan(SkillModel.getSkillPerformanceBySkillId(skillInfo.Display).NameDisplay):LanguageMgr.Ins.GetLan("9002266");
			}else{
			this.lab_CurSkill.text=LanguageMgr.Ins.GetLan("9002266");
		}
		this.setText();
	}

	__proto.setText=function(){
		this.txt_hp.text=LanguageMgr.Ins.GetLan("9007332");
		this.txt_crit.text=LanguageMgr.Ins.GetLan("9007333");
		this.txt_Damage.text=LanguageMgr.Ins.GetLan("9007334");
		this.txt_Critdamage.text=LanguageMgr.Ins.GetLan("9007337");
		this.txt_Victories.text=LanguageMgr.Ins.GetLan("9007338");
		this.txt_ht.text=LanguageMgr.Ins.GetLan("9007340");
		this.txt_skillfound.text=LanguageMgr.Ins.GetLan("9007341");
		this.txt_currSkill.text=LanguageMgr.Ins.GetLan("9007342");
	}

	MoreDataView.filterSameName=function(allSkill){
		var skillAry=[];
		var len=allSkill.length;
		for (var i=0;i < len;i++){
			var item=allSkill [i];
			if(i==len-1){
				skillAry.push(item);
				}else{
				if(item.Name !=allSkill[i+1].Name){
					if(item.Type !=0 && item.Type !=3){
						skillAry.push(item);
					}
				}
			}
		}
		return skillAry;
	}

	return MoreDataView;
})(MoreDataViewUI)


//class modules.pve.view.PveRankView extends ui.pve.PveRankViewUI
var PveRankView=(function(_super){
	function PveRankView(){
		this._page=0;
		this._rankSprite=null;
		this._$7__texture=null;
		PveRankView.__super.call(this);
		this.initView();
		this.addEvent();
		this.updateView();
	}

	__class(PveRankView,'modules.pve.view.PveRankView',_super);
	var __proto=PveRankView.prototype;
	Laya.imps(__proto,{"laya.ui.IResize":true})
	__proto.initView=function(){
		this.txtRank.text=LanguageMgr.Ins.GetLan(14300060);
		this.txtName.text=LanguageMgr.Ins.GetLan(14300061);
		this.txtStage.text=LanguageMgr.Ins.GetLan(14300062);
		this._$7__texture=new Texture(Browser.window.sharedCanvas);
		this._$7__texture.bitmap && (this._$7__texture.bitmap.alwaysChange=true);
		this._rankSprite=new Sprite();
		Browser.window.sharedCanvas && this._rankSprite.graphics.drawTexture(this._$7__texture);
		this.addChild(this._rankSprite);
	}

	__proto.addEvent=function(){
		this.btnPrev.on("click",this,this.onClickPrev);
		this.btnNext.on("click",this,this.onClickNext);
		this.on("click",this,this.onClick);
		ResizeMgr.addListener(this,true);
	}

	__proto.delEvent=function(){
		this.btnPrev.off("click",this,this.onClickPrev);
		this.btnNext.off("click",this,this.onClickNext);
		this.off("click",this,this.onClick);
		ResizeMgr.removeListener(this);
	}

	__proto.updateView=function(){
		this.btnPrev.disabled=this._page==0;
		var wxutil=Browser.window.wxutil;
		wxutil && wxutil.openDataContext && wxutil.openDataContext.postMessage({command:'createList',
			data:{
				listName:'PveRank',
				getDataFuncName:'showPveRank',
				x:714,
				y:122,
				w:1136,
				h:640,
				scale:1,
				isVertical:true,
				renderHeightOrWidth:85,
				showNum:4,
				startIndex:this._page *4,
				endIndex:(this._page+1)*4,
				dragEnable:false,
				selectEnable:false,
				isShowBg:false,
				itemData:{
					key:'pve',
					data:[{
						key:'nickname',
						t:'kv'
						},{
						key:'avatarUrl',
						t:'kv'
						},{
						key:'openid',
						t:'kv'
						},{
						key:'stage',
						t:'split',
						index:0,
						type:'int'
						},{
						key:'damage',
						t:'split',
						index:1,
						type:'int'
						},{
						key:'time',
						t:'split',
						index:2,
						type:'int'
					}],
					sort:[{
						key:'stage',
						order:1
						},{
						key:'damage',
						order:1
						},{
						key:'time',
						order:-1
					}]
				},
				itemRender:[{
					type:'label',
					key:'rank',
					x:6,
					y:21,
					color:'#ecddc9',
					size:22,
					font:'微软雅黑',
					isBold:false,
					isItalic:false,
					align:'center'
					},{
					type:'image',
					key:'avatarUrl',
					x:81,
					y:0,
					w:59,
					h:59,
					scale:1
					},{
					type:'label',
					key:'nickname',
					x:147,
					y:19,
					color:'#f6ebdc',
					size:20,
					font:'微软雅黑',
					isBold:false,
					isItalic:false,
					align:'left'
					},{
					type:'label',
					key:'stage',
					x:332,
					y:18,
					color:'#f6b529',
					size:22,
					font:'微软雅黑',
					isBold:false,
					isItalic:false,
					align:'center'
				}],
				self:[{
					type:'label',
					value:LanguageMgr.Ins.GetLan(14300021),
					x:723,
					y:519,
					color:'#ecddc9',
					size:18,
					font:'微软雅黑',
					isBold:false,
					isItalic:false,
					align:'center'
					},{
					type:'label',
					key:'rank',
					x:720,
					y:484,
					color:'#ecddc9',
					size:22,
					font:'微软雅黑',
					isBold:false,
					isItalic:false,
					align:'center'
					},{
					type:'image',
					key:'avatarUrl',
					x:782,
					y:484,
					w:59,
					h:59,
					scale:1
					},{
					type:'label',
					key:'nickname',
					x:849,
					y:501,
					color:'#37f53b',
					size:20,
					font:'微软雅黑',
					isBold:false,
					isItalic:false,
					align:'left'
					},{
					type:'label',
					key:'stage',
					x:1046,
					y:506,
					color:'#37f53b',
					size:22,
					font:'微软雅黑',
					isBold:false,
					isItalic:false,
					align:'center'
				}]
		}});
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.scale(_bestFitWidth / 1136,_bestFitHeight / 640);
	}

	__proto.onClickPrev=function(e){
		var page=Math.max(this._page-1,0);
		if (this._page !=page){
			this._page=page;
			this.updateView();
		}
		e && e.stopPropagation();
	}

	__proto.onClickNext=function(e){
		this._page=this._page+1;
		this.updateView();
		e && e.stopPropagation();
	}

	__proto.onClick=function(e){
		e.currentTarget==this && UIMgr.ins.closeView("PveRankView",true,false);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		this._$7__texture && this._$7__texture.destroy();
		this._$7__texture=null;
		this._rankSprite && this._rankSprite.destroy();
		this._rankSprite=null;
		var wxutil=Browser.window.wxutil;
		wxutil && wxutil.openDataContext && wxutil.openDataContext.postMessage({command:'removeList',
			data:{
				listName:'PveRank'
		}});
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return PveRankView;
})(PveRankViewUI)


//class modules.pve.view.PveResultLoseView extends ui.pveresult.PveResultLoseViewUI
var PveResultLoseView=(function(_super){
	function PveResultLoseView(){
		PveResultLoseView.__super.call(this);
		this.initView();
		this.addEvent();
	}

	__class(PveResultLoseView,'modules.pve.view.PveResultLoseView',_super);
	var __proto=PveResultLoseView.prototype;
	Laya.imps(__proto,{"laya.ui.IResize":true})
	__proto.initView=function(){
		this.txtUp0.text=LanguageMgr.Ins.GetLan(14300031);
		this.txtUp1.text=LanguageMgr.Ins.GetLan(14300032);
		this.txtUp2.text=LanguageMgr.Ins.GetLan(14300033);
		this.txtReward.text=LanguageMgr.Ins.GetLan(14300206);
		if(Browser.window.fbConfig.isOpenAds){
			this.btnShowAD.visible=true;
			this.btnConfirm.x=682;
		}
		else{
			this.btnShowAD.visible=false;
			this.btnConfirm.x=565;
		};
		var rewardInfo=ConfigModel.getConfigData(1135).ConfigValue.split("|");
		var vo=ItemModel.getItemConfigData(rewardInfo[0]);
		this.moneyIcon.skin="assets/textrue/itemicon/"+vo.Icon+".png";
		var maxRewardNum=ConfigModel.getConfigData(1143).ConfigValue;
		this.moneyValue.text=ADMgr.ins.rewardNum >=maxRewardNum ? "0" :rewardInfo[1];
	}

	__proto.addEvent=function(){
		this.btnConfirm.clickHandler=Handler.create(this,this.onClickClose,null,false);
		this.imgUp0.on("click",this,this.onClickUp,[0]);
		this.imgUp1.on("click",this,this.onClickUp,[1]);
		this.imgUp2.on("click",this,this.onClickUp,[2]);
		this.btnShowAD.on("click",this,this.showAD);
		ResizeMgr.addListener(this,true);
	}

	__proto.delEvent=function(){
		this.imgUp0.off("click",this,this.onClickUp);
		this.imgUp1.off("click",this,this.onClickUp);
		this.imgUp2.off("click",this,this.onClickUp);
		this.btnShowAD.off("click",this,this.showAD);
		ResizeMgr.removeListener(this);
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.scaleX=_bestFitWidth / 1136;
		this.scaleY=_bestFitHeight / 640;
	}

	__proto.onClickClose=function(){
		UIMgr.ins.closeView("PveResultLoseView");
		HallMgr.ins.show(9);
	}

	__proto.onClickUp=function(index){
		switch (index){
			}
	}

	__proto.showAD=function(){
		var maxRewardNum=ConfigModel.getConfigData(1143).ConfigValue;
		if(ADMgr.ins.rewardNum >=maxRewardNum){
			TipsManager.Instance().showLanTips(14300413);
			return;
		};
		var msg=new com.road.ddt.proto.AdvertiseRewardMsg();
		msg.type=2;
		msg.state=-1;
		SocketManager.Instance.sendSocketData(0x290a,msg);
		FBInterfaceMgr.ins.showAsync(Handler.create(this,this.onPlayOver),Handler.create(this,this.onPlayError));
	}

	__proto.onPlayOver=function(){
		ADMgr.ins.sendGetADReward(2,true);
		this.btnShowAD && (this.btnShowAD.disabled=true);
	}

	__proto.onPlayError=function(){
		ADMgr.ins.sendGetADReward(2,false);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(PveResultLoseViewUI,this,'dataSource',value);
	});

	return PveResultLoseView;
})(PveResultLoseViewUI)


//class modules.pve.view.PveResultSweepView extends ui.pveresult.PveResultSweepViewUI
var PveResultSweepView=(function(_super){
	function PveResultSweepView(){
		PveResultSweepView.__super.call(this);
		this.initView();
		this.addEvent();
	}

	__class(PveResultSweepView,'modules.pve.view.PveResultSweepView',_super);
	var __proto=PveResultSweepView.prototype;
	Laya.imps(__proto,{"laya.ui.IResize":true})
	__proto.initView=function(){
		Laya.stage.focus=this;
		this.txtTitle.text=LanguageMgr.Ins.GetLan(14300034);
	}

	__proto.addEvent=function(){
		this.btnClose.clickHandler=Handler.create(this,this.onClickClose,null,false);
		this.on("click",this,this.onClickClose);
		ResizeMgr.addListener(this,true);
	}

	__proto.delEvent=function(){
		this.off("click",this,this.onClickClose);
		ResizeMgr.removeListener(this);
	}

	__proto.onClickClose=function(){
		UIMgr.ins.closeView("PveResultSweepView");
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.scale(_bestFitWidth / 1136,_bestFitHeight / 640);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(PveResultSweepViewUI,this,'dataSource',value);
		if (value){
			var reward=[];
			var itemVO;
			for (var i=0,n=value.reward.length;i < n;i++){
				itemVO=ItemModel.getItemConfigData(value.reward[i].id);
				if (itemVO){
					reward.push(LanguageMgr.Ins.GetLan(itemVO.Name)+""+value.reward[i].count);
				}
			}
			this.txtInfo.text=LanguageMgr.Ins.GetLan(14300035,value.stage,reward.join("、"))
		}
	});

	return PveResultSweepView;
})(PveResultSweepViewUI)


//class modules.pve.view.PveResultWinView extends ui.pveresult.PveResultWinViewUI
var PveResultWinView=(function(_super){
	function PveResultWinView(){
		PveResultWinView.__super.call(this);
		this.initView();
		this.addEvent();
	}

	__class(PveResultWinView,'modules.pve.view.PveResultWinView',_super);
	var __proto=PveResultWinView.prototype;
	Laya.imps(__proto,{"laya.ui.IResize":true})
	__proto.initView=function(){
		Laya.stage.focus=this;
	}

	__proto.addEvent=function(){
		this.btnBack.clickHandler=Handler.create(this,this.onClickClose,null,false);
		this.btnNext.clickHandler=Handler.create(this,this.onClickNext,null,false);
		this.btnShare.clickHandler=Handler.create(this,this.onClickShare,null,false);
		this.listReward.renderHandler=Handler.create(this,this.onRenderReward,null,false);
		ResizeMgr.addListener(this,true);
	}

	__proto.delEvent=function(){
		ResizeMgr.removeListener(this);
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.scaleX=_bestFitWidth / 1136;
		this.scaleY=_bestFitHeight / 640;
	}

	__proto.onRenderReward=function(item,index){
		var data=item.dataSource;
		var itemVO=ItemModel.getItemConfigData(data.id);
		item.imgIcon.skin="assets/textrue/itemicon/"+itemVO.Icon+".png";
		if (data.count > 1){
			item.txtName.isHtmlText=true;
			item.txtName.text=LanguageMgr.Ins.GetLan(itemVO.Name)+"<font color='#37f53b'>x"+data.count+"</font>";
		}
		else{
			item.txtName.isHtmlText=false;
			item.txtName.text=LanguageMgr.Ins.GetLan(itemVO.Name);
		}
	}

	__proto.onClickClose=function(){
		UIMgr.ins.closeView("PveResultWinView");
		HallMgr.ins.show(9);
	}

	__proto.onClickNext=function(){
		var userInfo=PveMgr.ins.userInfo;
		if (userInfo.count <=0){
			TipsManager.Instance().showLanTips(14300027);
			return;
		};
		var data=this.dataSource;
		if (data==null){
			return;
		};
		var stageInfo=userInfo.info[data.stage];
		if (stageInfo==null){
			return;
		}
		if (!(stageInfo.isWin || userInfo.recordStage+1 >=stageInfo.stage)){
			TipsManager.Instance().showLanTips(14300029);
			return;
		}
		PveMgr.ins.sendEnter(stageInfo.stage);
	}

	__proto.onClickShare=function(){
		EventMgr.ins.event("SHARE",[ShareConst.PVE]);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(PveResultWinViewUI,this,'dataSource',value);
		if (value){
			this.listReward.array=value.reward;
			this.listReward.x=(1136-((value.reward.length *(106+64))-64))/ 2;
			this.txtDamage.text=value.damage+"";
			this.fontStage.value=value.stage+"";
			if (LanguageMgr.Ins.isChinese){
				this.imgStageL.anchorX=0;
				this.imgStageL.skin="language/Chinese/pveresult/ui_di.png";
				this.imgStageR.visible=true;
				this.fontStage.x=552;
				if (value.stage > 9){
					this.imgStageL.x=477;
					this.imgStageR.x=589;
				}
				else{
					this.imgStageL.x=492;
					this.imgStageR.x=574;
				}
			}
			else{
				this.imgStageL.anchorX=1;
				this.imgStageL.skin="language/Chinese/pveresult/ui_ceng_liangse.png";
				this.imgStageR.visible=false;
				this.imgStageL.x=547;
				this.fontStage.x=582;
			};
			var userInfo=PveMgr.ins.userInfo;
			var stageInfo=userInfo.info[value.stage];
			this.btnNext.visible=this.btnNext !=null;
		}
	});

	return PveResultWinView;
})(PveResultWinViewUI)


//class modules.pve.view.PveRoomView extends ui.pve.PveRoomViewUI
var PveRoomView=(function(_super){
	function PveRoomView(){
		this._userInfo=null;
		this._lastRecord=0;
		this._sweepConfig=null;
		this._turnConfig=null;
		this._stageInfo
		PveRoomView.__super.call(this);
		this._userInfo=PveMgr.ins.userInfo;
		this._sweepConfig=ConfigModel.getConfigData(1118);
		this._turnConfig=ConfigModel.getConfigData(1119);
		this.initView();
		this.addEvent();
		this.onUpdateStage();
		this.updateCard();
		var index=Math.max(0,PveConst.MAX_STAGE-this._userInfo.recordStage-1);
		this._lastRecord=this._userInfo.recordStage;
		this.listStage.selectedIndex=index;
		this.listStage.scrollTo(index);
	}

	__class(PveRoomView,'modules.pve.view.PveRoomView',_super);
	var __proto=PveRoomView.prototype;
	Laya.imps(__proto,{"laya.ui.IResize":true})
	__proto.initView=function(){
		this.txtTitle.text=LanguageMgr.Ins.GetLan(14300015);
		this.txtDamageDesc.text=LanguageMgr.Ins.GetLan(14300016);
		this.txtStageDesc.text=LanguageMgr.Ins.GetLan(14300017);
		this.txtTimeDesc.text=LanguageMgr.Ins.GetLan(14300018);
		this.txtMonDesc.text=LanguageMgr.Ins.GetLan(14300022);
		this.txtCardDesc.text=LanguageMgr.Ins.GetLan(14300023);
		this.txtRewardDesc.text=LanguageMgr.Ins.GetLan(14300024);
		this.txtCardTitle.text=LanguageMgr.Ins.GetLan(14300025);
		this.btnRank.visible=UrlParam.PARAMS["PLID"]=="wx";
	}

	__proto.addEvent=function(){
		this.listStage.renderHandler=Handler.create(this,this.onRenderStage,null,false);
		this.listStage.selectHandler=Handler.create(this,this.onSelectStage,null,false);
		this.listReward.renderHandler=Handler.create(this,this.onRenderReward,null,false);
		this.listCard.renderHandler=Handler.create(this,this.onRenderCard,null,false);
		this.btnBack.clickHandler=Handler.create(this,this.onClickClose,null,false);
		this.btnSweep.clickHandler=Handler.create(this,this.onClickSweep,null,false);
		this.btnEnter.clickHandler=Handler.create(this,this.onClickEnter,null,false);
		this.btnRank.clickHandler=Handler.create(this,this.onClickRank,null,false);
		PveMgr.ins.on('EVENT_UPDATE_STAGE',this,this.onUpdateStage);
		EventMgr.ins.on("UPDATE_ALL_IMAGE",this,this.onUpdateLan);
		ResizeMgr.addListener(this,true);
	}

	__proto.delEvent=function(){
		PveMgr.ins.off('EVENT_UPDATE_STAGE',this,this.onUpdateStage);
		EventMgr.ins.off("UPDATE_ALL_IMAGE",this,this.onUpdateLan);
		ResizeMgr.removeListener(this);
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.imgBg.width=_bestFitWidth;
		this.imgBg.height=_bestFitHeight;
		this.imgBgTop.width=_bestFitWidth;
		this.boxTop.x=_bestFitWidth-this.boxTop.width;
		this.boxRight.x=_bestFitWidth-this.boxRight.width;
		this.boxLeft.x=(_bestFitWidth-394-this.boxLeft.width)>> 1;
	}

	__proto.onUpdateStage=function(){
		var list=PveMgr.ins.userInfo.info.slice().reverse();
		this.listStage.array=list;
		if (this._userInfo.recordStage > this._lastRecord){
			var index=Math.max(0,PveConst.MAX_STAGE-this._userInfo.recordStage-1);
			this._lastRecord=this._userInfo.recordStage;
			this.listStage.selectedIndex=index;
			this.listStage.scrollTo(index);
		}
		this.txtStage.text=this._userInfo.recordStage+"";
		var damage=0;
		var time=0;
		for (var i=0,n=list.length;i < n;i++){
			damage+=list[i].damage;
			time+=list[i].time;
		}
		this.txtDamage.text=damage+"";
		var min=int(time / 60);
		var sec=time % 60;
		if (min > 0){
			this.txtTime.text=LanguageMgr.Ins.GetLan(14300019,min,sec < 10 ? "0"+sec :sec);
		}
		else{
			this.txtTime.text=LanguageMgr.Ins.GetLan(14300020,sec);
		}
	}

	__proto.updateStageView=function(){
		this._stageInfo=this.listStage.selectedItem;
		var pveVO=PveModel.getConfigById(this._stageInfo.stage);
		this.txtMon.text=LanguageMgr.Ins.GetLan(pveVO.MonsterDesc);
		this.txtCard.text=LanguageMgr.Ins.GetLan(pveVO.CardDesc);
		this.listReward.array=pveVO.RewardTurn.concat(pveVO.Reward);
		this.fontStage.value=this._stageInfo.stage+"";
		this.onUpdateLan();
	}

	__proto.onUpdateLan=function(){
		if (LanguageMgr.Ins.isChinese){
			this.imgStageL.anchorX=0;
			this.imgStageL.skin="language/Chinese/pve/ui_di.png";
			this.imgStageR.visible=true;
			this.fontStage.x=360;
			if (this._stageInfo){
				if (this._stageInfo.stage > 9){
					this.imgStageL.x=285;
					this.imgStageR.x=397;
				}
				else{
					this.imgStageL.x=300;
					this.imgStageR.x=382;
				}
			}
		}
		else{
			this.imgStageL.anchorX=1;
			this.imgStageL.skin="language/Chinese/pve/ui_ceng_liangse.png";
			this.imgStageR.visible=false;
			this.imgStageL.x=355;
			this.fontStage.x=390;
		}
	}

	__proto.updateCard=function(){
		var list=SkillMgr.ins.getCardListByType(1);
		this.listCard.repeatX=list.length;
		this.listCard.array=list;
		this.listCard.x=389-(list.length *(57+8)-8)/ 2;
	}

	__proto.onRenderStage=function(item,index){
		var data=item.dataSource;
		var isOpen=this._userInfo.recordStage+1 >=data.stage;
		item.imgOpen.visible=isOpen;
		item.mouseEnabled=isOpen;
		item.imgLock.visible=!isOpen;
		item.fontStageLock.visible=!isOpen;
		item.imgStageLock.visible=!isOpen;
		item.fontStage.visible=isOpen;
		item.imgStage.visible=isOpen;
		item.fontStageLock.value=data.stage+"";
		item.fontStage.value=data.stage+"";
		if (data.isWin && data.stage % 5==0){
			for (var i=0,n=this._turnConfig.ConfigValue.length;i < n;i++){
				if (data.turn <=this._turnConfig.ConfigValue[i]){
					item.viewMark.selectedIndex=i;
					break ;
				}
			}
			item.viewMark.visible=true;
		}
		else{
			item.viewMark.visible=false;
		}
		if (this._userInfo.recordStage+1==data.stage){
			item.txtState.text=LanguageMgr.Ins.GetLan(14300026);
		}
		else{
			item.txtState.text="";
		}
		if (LanguageMgr.Ins.isChinese){
			item.fontStage.x=26;
			if (data.stage > 9){
				item.imgStage.x=95;
			}
			else{
				item.imgStage.x=60;
			}
			item.imgStageLock.x=183;
			item.fontStageLock.x=118;
			item.imgLock.x=220
		}
		else{
			item.imgStage.x=14;
			item.fontStage.x=100;
			item.imgStageLock.x=14;
			item.fontStageLock.x=110;
			item.imgLock.x=200;
		}
	}

	__proto.onSelectStage=function(index){
		if (index==-1){
			return;
		}
		this.updateStageView();
	}

	__proto.onRenderReward=function(item,index){
		var data=item.dataSource;
		var itemVO=ItemModel.getItemConfigData(data.id);
		item.imgIcon.skin="assets/textrue/itemicon/"+itemVO.Icon+".png";
		item.txtCount.text="x"+data.count;
		if (this._stageInfo && this._stageInfo.stage % 5==0){
			item.viewMark.selectedIndex=index;
			item.viewMark.visible=true;
		}
		else{
			item.viewMark.visible=false;
		}
	}

	__proto.onRenderCard=function(item,index){
		var data=item.dataSource;
		var icon=item.getChildByName('icon');
		if (data){
			icon.skin="assets/textrue/skill/min/"+data.Icon;
		}
		else{
			icon.skin=null;
		}
	}

	__proto.onClickClose=function(){
		UIMgr.ins.closeView("PveRankView",true,false);
		UIMgr.ins.closeView("PveRoomView");
	}

	__proto.onClickSweep=function(){
		if (this._userInfo.count <=0){
			TipsManager.Instance().showLanTips(14300027);
			return;
		}
		if (PlayerInfo.instance.vipLv < 1){
			TipsManager.Instance().showLanTips(14300340);
			return;
		};
		var stageInfo=this.listStage.selectedItem;
		if (stageInfo==null){
			return;
		}
		if (!stageInfo.isWin){
			TipsManager.Instance().showLanTips(14300028);
			return;
		};
		var itemVO=ItemModel.getItemConfigData(this._sweepConfig.ConfigValue["id"]);
		if (itemVO==null){
			return;
		}
		TipsManager.Instance().showAlertDialog("",LanguageMgr.Ins.GetLan(14300030,LanguageMgr.Ins.GetLan(itemVO.Name)+""+this._sweepConfig.ConfigValue["count"]),"",LanguageMgr.Ins.GetLan("9002241"),Handler.create(this,function(stage,cost){
			if (PlayerInfoMgr.ins.getItemCount(cost.id)< cost.count){
				TipsManager.Instance().showLanTips(10001113);
				return;
			}
			PveMgr.ins.sendSweep(stage);
		},[stageInfo.stage,this._sweepConfig.ConfigValue]));
	}

	__proto.onClickEnter=function(){
		var len=SkillMgr.ins.getCurrentCount();
		var max=SkillMgr.ins.model.getMaxUserSkillNum();
		if (len !=max){
			TipsManager.Instance().showLanTips(14300095,max);
			return;
		}
		if (this._userInfo.count <=0){
			TipsManager.Instance().showLanTips(14300027);
			return;
		};
		var stageInfo=this.listStage.selectedItem;
		if (stageInfo==null){
			return;
		}
		if (!(stageInfo.isWin || this._userInfo.recordStage+1 >=stageInfo.stage)){
			TipsManager.Instance().showLanTips(14300029);
			return;
		}
		PveMgr.ins.sendEnter(stageInfo.stage);
	}

	__proto.onClickRank=function(){
		if (UIMgr.ins.getView("PveRankView")){
			UIMgr.ins.closeView("PveRankView",true,false);
		}
		else{
			UIMgr.ins.openView("PveRankView");
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		this._userInfo=null;
		this._sweepConfig=null;
		this._turnConfig=null;
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return PveRoomView;
})(PveRoomViewUI)


//class modules.pvp.item.ArenaRewardItem extends ui.pvp.item.ArenaRewardItemUI
var ArenaRewardItem=(function(_super){
	function ArenaRewardItem(){
		this._vo=null;
		ArenaRewardItem.__super.call(this);
	}

	__class(ArenaRewardItem,'modules.pvp.item.ArenaRewardItem',_super);
	var __proto=ArenaRewardItem.prototype;
	__proto.setData=function(vo){
		this._vo=vo;
		this.icon.skin="assets/textrue/itemicon/"+vo.Icon+".png";
		var arr=vo.Param2.split(",");
		var cardStr=arr[1];
		var cardArr=cardStr.split("|");
		var cardNum=parseInt(cardArr[2])|| 0;
		this.txt.text="x "+cardNum;
		this.txtName.text=LanguageMgr.Ins.GetLan(vo.Name.toString());
		this._vo=null;
	}

	return ArenaRewardItem;
})(ArenaRewardItemUI)


/**
*段位奖励信息：每个段位宝箱开出的技能数量，捐赠和请求捐赠数量，赛季结算奖励
**/
//class modules.pvp.view.ArenaInfoPage extends ui.pvp.ArenaInfoPageUI
var ArenaInfoPage=(function(_super){
	function ArenaInfoPage(){
		this._arena=1;
		this._datas=[];
		ArenaInfoPage.__super.call(this);
		this.init();
	}

	__class(ArenaInfoPage,'modules.pvp.view.ArenaInfoPage',_super);
	var __proto=ArenaInfoPage.prototype;
	__proto.init=function(){
		this.list.scrollBar.hide=true;
		this.list.renderHandler=Handler.create(this,this.onRenderList,null,false);
		this.list.selectHandler=Handler.create(this,this.onSelectList,null,false);
		this.list.scrollBar.autoHide=true;
		this.list.selectEnable=true;
		this.list.scrollBar.elasticBackTime=600;
		this.list.scrollBar.elasticDistance=200;
	}

	//设置橡皮筋回弹距离
	__proto.onSelectList=function(index){
		var _$this=this;
		if(index==-1)return;
		if(index !=-1){
			var view=UIMgr.ins.getView("TreasureBoxDetailTips");
			if(view){
				UIMgr.ins.closeView("TreasureBoxDetailTips");
			}
			else {
				UIMgr.ins.openView("TreasureBoxDetailTips"
				,Handler.create(this,function(view){
					view.setData(_$this.list.array[index]);
				}));
			}
		}
		this.list.selectedIndex=-1;
	}

	__proto.onRenderList=function(item,index){
		if(index < this.list.length){
			item.setData(this.list.array[index]);
		}
	}

	__proto.update=function(value,divName){
		this._arena=value;
		this._datas.length=0;
		if(LanguageMgr.Ins.country !="English"){
			divName=divName.substr(2);
		}
		this.title.text=LanguageMgr.Ins.GetLan("9010011",divName);
		this._datas=ItemModel.getItemByArena(this._arena);
		this.list.array=this._datas;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.list.renderHandler){
			this.list.renderHandler.recover();
			this.list.renderHandler=null;
		}
		if(this.list.selectHandler){
			this.list.selectHandler.recover();
			this.list.selectHandler=null;
		}
		UIMgr.ins.closeView("TreasureBoxDetailWindow");
		if(this._datas){
			this._datas.length=0;
			this._datas=null;
		}
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return ArenaInfoPage;
})(ArenaInfoPageUI)


//class modules.quest.item.AchievementItem extends ui.quest.Item.AchievementItemUI
var AchievementItem=(function(_super){
	function AchievementItem(){
		/**
		*显示子数据
		*/
		this.data=null;
		/**
		*条件id
		*/
		this.conditionId=null;
		AchievementItem.__super.call(this);
		this.conditionItem
		this.box_jr.on("click",this,this.jumpView)
		this.lq_btn.on("click",this,this.lingqu)
	}

	__class(AchievementItem,'modules.quest.item.AchievementItem',_super);
	var __proto=AchievementItem.prototype;
	__proto.setData=function(index,_data){
		this.data=_data[index]
		this.conditionId=this.data.ConditionList[this.data.ReceivedListLength] || this.data.ConditionList[this.data.ReceivedListLength-1]
		this.conditionItem=QuestData.instance.conditionIdToData[this.conditionId]
		if(this.data.ReceivedListLength==this.data.ConditionList.length){
			this.iconbg.skin="quest/ui_weikaiqi01.png";
			this.iconbg.sizeGrid="12,17,15,17";
		}
		this.icon.skin='assets/textrue/quest/'+this.data.Icon+'.png'
		this.title.text=LanguageMgr.Ins.GetLan(this.data.QuestName)
		this.descAssignment()
		this.prizeHandler()
		this.btn_render()
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		laya.ui.View.prototype.destroy.call(this,destroyChild)
		this.icon.destroy(true)
		this.box_jr.off("click",this,this.jumpView)
		this.lq_btn.off("click",this,this.lingqu)
	}

	__proto.btn_render=function(){
		if(this.data.ReceivedListLength==this.data.ConditionList.length){
			this.box_lq.visible=false
			this.icon_ylq.visible=true
			this.box_jr.visible=false
			this.baitiao.skin='common/ui_renwudi2_02.png'
			}else {
			this.baitiao.skin='common/ui_baitiao-_bj.png';
			var value=0;
			if(this.data.QuestId=='9101010'){
				value=this.data.ValueList[this.conditionId];
				}else {
				var len=this.data.ReceivedListLength+this.data.AvailableListLength;
				len=len < this.data.ConditionList.length ? len :len-1;
				value=this.data.ValueList[this.data.ConditionList[len]];
			}
			if(this.data.AvailableListLength > 0){
				this.box_lq.visible=true
				this.icon_ylq.visible=false
				this.box_jr.visible=false
				this.lq_txt.text=LanguageMgr.Ins.GetLan("9002307")+(value || this.conditionItem.Value1)+'/'+this.conditionItem.Value1
				}else {
				this.box_lq.visible=false
				this.icon_ylq.visible=false
				this.box_jr.visible=true
				this.jr_txt.text=LanguageMgr.Ins.GetLan("9002307")+value+'/'+this.conditionItem.Value1
			}
		}
	}

	__proto.lingqu=function(){
		SocketManager.Instance.out.getQuestReward(this.conditionId);
		EventMgr.ins.event("click_getReward","reward");
	}

	__proto.jumpView=function(){
		if(this.data.TargetScene > 1){
			QuestData.instance.targetSceneIdToViewType[1]();
			QuestData.instance.targetSceneIdToViewType[this.data.TargetScene]();
			}else {
			QuestData.instance.targetSceneIdToViewType[this.data.TargetScene]();
		}
		EventMgr.ins.event("click_getReward","jumpto");
	}

	__proto.descAssignment=function(){
		var desc_=LanguageMgr.Ins.GetLan(this.data.QuestDescribe)
		if(desc_){
			var data_=QuestData.instance.conditionIdToData[this.conditionId];
			var questId=data_.QuestId
			if(questId==9101003){
				this.desc.text=desc_.replace('{0}','“'+LanguageMgr.Ins.GetLan(data_.ParamStr)+'”');
				}else {
				this.desc.text=desc_.replace('{0}',this.conditionItem.Value1).replace('{1}',this.conditionItem.Value2);
			}
		}
	}

	__proto.prizeHandler=function(){
		if(this.conditionItem.Rewards){
			var rewardsStr=this.conditionItem.Rewards;
			var rewardsArr=rewardsStr.split(',')
			var rewardsCount=rewardsArr.length;
			this.prize_box.removeChildren();
			for (var i=0;i < rewardsCount;i++){
				var rewardArr=rewardsArr[i].split('|')
				var rewardId=rewardArr[0] *1;
				var rewardNum=rewardArr[1] *1;
				var item=ItemModel.getItemConfigData(rewardId)
				item.Number=rewardNum ? rewardNum :0;
				var questItemListItem=new QuestItemListItem(item,i);
				if(this.data.ReceivedListLength==this.data.ConditionList.length){
					questItemListItem.itembg.skin="quest/ui_weikaiqi02.png";
					questItemListItem.itembg.sizeGrid="10,17,10,17";
				}
				this.prize_box.addChild(questItemListItem)
			}
			}else {
			this.prize_box.visible=false
		}
	}

	return AchievementItem;
})(AchievementItemUI)


/**
*显示列表的子对象
*/
//class modules.quest.item.QuestItem extends ui.quest.Item.QuestItemUI
var QuestItem=(function(_super){
	function QuestItem(){
		/**
		*显示子数据
		*/
		this.data=null;
		/**
		*条件id
		*/
		this.conditionId=null;
		QuestItem.__super.call(this);
		this.conditionItem
		this.box_jr.on("click",this,this.jumpView)
		this.lq_btn.on("click",this,this.lingqu)
	}

	__class(QuestItem,'modules.quest.item.QuestItem',_super);
	var __proto=QuestItem.prototype;
	__proto.setData=function(index,_data){
		this.data=_data[index]
		this.conditionId=this.data.ConditionList[this.data.ReceivedListLength] || this.data.ConditionList[this.data.ReceivedListLength-1]
		this.conditionItem=QuestData.instance.conditionIdToData[this.conditionId]
		if(this.data.ReceivedListLength==this.data.ConditionList.length){
			this.iconbg.skin="quest/ui_weikaiqi01.png";
			this.iconbg.sizeGrid="12,17,15,17";
		}
		this.icon.skin='assets/textrue/quest/'+this.data.Icon+'.png';
		this.title.text=LanguageMgr.Ins.GetLan(this.data.QuestName)
		this.descAssignment()
		this.prizeHandler()
		this.btn_render()
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		laya.ui.View.prototype.destroy.call(this,destroyChild)
		this.icon.destroy(true)
		this.box_jr.off("click",this,this.jumpView)
		this.lq_btn.off("click",this,this.lingqu)
	}

	__proto.btn_render=function(){
		if(this.data.ReceivedListLength==this.data.ConditionList.length){
			this.box_lq.visible=false
			this.icon_ylq.visible=true
			this.box_jr.visible=false
			this.baitiao.skin='common/ui_renwudi2_02.png'
			}else {
			this.baitiao.skin='common/ui_baitiao-_bj.png';
			var value=0;
			if(this.data.QuestId=='9101010'){
				value=this.data.ValueList[this.conditionId];
				}else {
				var len=this.data.ReceivedListLength+this.data.AvailableListLength;
				len=len < this.data.ConditionList.length ? len :len-1;
				value=this.data.ValueList[this.data.ConditionList[len]];
			}
			if(this.data.AvailableListLength > 0){
				this.box_lq.visible=true
				this.icon_ylq.visible=false
				this.box_jr.visible=false
				this.lq_txt.text=LanguageMgr.Ins.GetLan("9002307")+(value || this.conditionItem.Value1)+'/'+this.conditionItem.Value1
				}else {
				this.box_lq.visible=false
				this.icon_ylq.visible=false
				this.box_jr.visible=true
				this.jr_txt.text=LanguageMgr.Ins.GetLan("9002307")+value+'/'+this.conditionItem.Value1
			}
		}
	}

	__proto.lingqu=function(){
		SocketManager.Instance.out.getQuestReward(this.conditionId);
		EventMgr.ins.event("click_getReward","reward");
	}

	__proto.jumpView=function(){
		if(this.data.TargetScene > 1){
			QuestData.instance.targetSceneIdToViewType[1]();
			QuestData.instance.targetSceneIdToViewType[this.data.TargetScene]();
			}else {
			QuestData.instance.targetSceneIdToViewType[this.data.TargetScene]();
		}
		EventMgr.ins.event("click_getReward","jumpto");
	}

	__proto.descAssignment=function(){
		var desc_=LanguageMgr.Ins.GetLan(this.data.QuestDescribe)
		if(desc_){
			var data_=QuestData.instance.conditionIdToData[this.conditionId];
			var questId=data_.QuestId
			if(questId==9101003){
				this.desc.text=desc_.replace('{0}','“'+LanguageMgr.Ins.GetLan(data_.ParamStr)+'”');
				}else {
				this.desc.text=desc_.replace('{0}',this.conditionItem.Value1).replace('{1}',this.conditionItem.Value2);
			}
		}
	}

	__proto.prizeHandler=function(){
		if(this.conditionItem.Rewards){
			var rewardsStr=this.conditionItem.Rewards;
			var rewardsArr=rewardsStr.split(',')
			var rewardsCount=rewardsArr.length;
			this.prize_box.removeChildren();
			for (var i=0;i < rewardsCount;i++){
				var rewardArr=rewardsArr[i].split('|')
				var rewardId=rewardArr[0] *1;
				var rewardNum=rewardArr[1] *1;
				var item=ItemModel.getItemConfigData(rewardId)
				item.Number=rewardNum ? rewardNum :0;
				var questItemListItem=new QuestItemListItem(item,i);
				if(this.data.ReceivedListLength==this.data.ConditionList.length){
					questItemListItem.itembg.skin="quest/ui_weikaiqi02.png";
					questItemListItem.itembg.sizeGrid="10,17,10,17";
				}
				this.prize_box.addChild(questItemListItem)
			}
			}else {
			this.prize_box.visible=false
		}
	}

	return QuestItem;
})(QuestItemUI)


//class modules.quest.item.QuestItemListItem extends ui.quest.Item.QuestItemListItemUI
var QuestItemListItem=(function(_super){
	function QuestItemListItem(item,i,isFromLibao){
		QuestItemListItem.__super.call(this);
		(isFromLibao===void 0)&& (isFromLibao=false);
		this.setData(item,i,isFromLibao)
		this.on("click",this,TipsManager.Instance().addItemTip,[item])
	}

	__class(QuestItemListItem,'modules.quest.item.QuestItemListItem',_super);
	var __proto=QuestItemListItem.prototype;
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.off("click",this,TipsManager.Instance().addItemTip)
		laya.ui.View.prototype.destroy.call(this,destroyChild)
	}

	__proto.setData=function(item,i,isFromLibao){
		this.icon.skin=PathMgr.getItemIcon(item);
		this.count.text=item.Number+''
		if(isFromLibao){
			this.y=10
			this.x=46
			this.pivotX=36
			this.scaleX=-1
			this.x+=(this.width+10)*i
			this.itembg.skin="quest/ui_hyd_jli.png"
			}else {
			this.x=(this.width+10)*i
		}
	}

	return QuestItemListItem;
})(QuestItemListItemUI)


/**
*显示列表的子对象
*/
//class modules.quest.item.QuestTip extends ui.quest.Item.QuestTipUI
var QuestTip=(function(_super){
	function QuestTip(){
		QuestTip.__super.call(this);
	}

	__class(QuestTip,'modules.quest.item.QuestTip',_super);
	var __proto=QuestTip.prototype;
	__proto.setData=function(conditionId){
		var _$this=this;
		QuestData.instance.tipsQueue.splice(0,1)
		var questConditionItem=QuestData.instance.conditionIdToData[conditionId];
		var value1=questConditionItem.Value1;
		var value2=questConditionItem.Value2;
		var questId=questConditionItem.QuestId;
		var questItem=QuestData.instance.questIdToData[questId]
		if(questItem.QuestDescribe){
			var type=QuestData.instance.questIdToData[questId]['Type'];
			if(type==1){
				this.quest_title.text=LanguageMgr.Ins.GetLan("9002296");
				}else {
				this.quest_title.text=LanguageMgr.Ins.GetLan("9002297");
			}
			if(questId=='9101003'){
				this.quest_txt.text=StringUtils.formate(LanguageMgr.Ins.GetLan(questItem.QuestDescribe),'“'+LanguageMgr.Ins.GetLan(questConditionItem.ParamStr)+'”');
				}else {
				this.quest_txt.text=StringUtils.formate(LanguageMgr.Ins.GetLan(questItem.QuestDescribe),value1,value2);
			}
			}else {
			this.destroy();
			this.removeSelf();
			return false;
		}
		this.x=this.stage.designWidth
		this.y=(this.height+6)*QuestData.instance.tipsNum+100;
		Tween.to(this,{x:this.stage.designWidth-this.width},500,Ease.backOut);
		Laya.timer.once(5000,this,function(){
			Tween.to(this,{y:this.y-25,alpha:0},500,Ease.sineInOut,Handler.create(this,_$this._destroy));
		},null,false)
		return true
	}

	__proto._destroy=function(){
		QuestData.instance.tipsNum--
		this.destroy()
		this.removeSelf()
	}

	return QuestTip;
})(QuestTipUI)


//class modules.quest.view.AchievementView extends ui.quest.view.AchievementViewUI
var AchievementView=(function(_super){
	function AchievementView(){
		AchievementView.__super.call(this);
		this.bindEvents()
		this.init()
	}

	__class(AchievementView,'modules.quest.view.AchievementView',_super);
	var __proto=AchievementView.prototype;
	__proto.onRenderHandler=function(item,i){
		item.setData(i,QuestData.instance.achievementDisplayData)
	}

	__proto.init=function(){
		this._list.array=QuestData.instance.achievementDisplayData
	}

	__proto.bindEvents=function(){
		this._list.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
	}

	return AchievementView;
})(AchievementViewUI)


//class modules.quest.view.TaskView extends ui.quest.view.TaskViewUI
var TaskView=(function(_super){
	function TaskView(){
		this.animates=[];
		this._proWidth=776;
		TaskView.__super.call(this);
		this.libao
		this._list.array=QuestData.instance.taskDisplayData;
		this._list.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
		if(LanguageMgr.Ins.countryIndex==0){
			this.week_left.x=160;
			this.week_right.x=692;
		}
		this.week_left.libao.skin=this.week_right.libao.skin=null;
		this.week_left.libao_num.visible=this.week_right.libao_num.visible=false;
		this.txtDay.text=LanguageMgr.Ins.GetLan("9070009");
		this.additionBarText.text=LanguageMgr.Ins.GetLan("9020031");
		this.additionBarText.visible=PlayerInfo.instance.isOpenMasterGrowing;
		this.initDay();
		this.initWeek();
		EventMgr.ins.on("click_getReward",this,this.onGetReward);
		EventMgr.ins.event("GuideNode_150_Step_2");
	}

	__class(TaskView,'modules.quest.view.TaskView',_super);
	var __proto=TaskView.prototype;
	__proto.onGetReward=function(type){}
	/**
	*图标赋值
	*type 0:日活跃 1:周活跃
	*/
	__proto.tbfz=function(i,type){
		(type===void 0)&& (type=0);
		var ret;
		if(type===0){
			switch(i){
				case 0:
					ret=this._25;
					ret.txt_libao.text='25';
					ret.icon_libao.skin='quest/'+QuestData.instance.dailyActiveDisplayData[0].Icon+'.png';
					break ;
				case 1:
					ret=this._50;
					ret.txt_libao.text='50';
					ret.icon_libao.skin='quest/'+QuestData.instance.dailyActiveDisplayData[1].Icon+'.png';
					break ;
				case 2:
					ret=this._75
					ret.txt_libao.text='75';
					ret.icon_libao.skin='quest/'+QuestData.instance.dailyActiveDisplayData[2].Icon+'.png';
					break ;
				case 3:
					ret=this._100;
					ret.txt_libao.text='100';
					ret.icon_libao.skin='quest/'+QuestData.instance.dailyActiveDisplayData[3].Icon+'.png';
					break ;
				}
		}
		if(type===1){
			switch(i){
				case 0:
					ret=this.week_left;
					ret.icon_libao.skin='quest/'+QuestData.instance.weeklyActiveDisplayData[i].Icon+'.png';
					break ;
				case 1:
					ret=this.week_right;
					ret.icon_libao.skin='quest/'+QuestData.instance.weeklyActiveDisplayData[i].Icon+'.png';
					break ;
				}
		}
		ret.on("click",this,this.showLibaoDesc,[ret]);
		return ret;
	}

	__proto.showLibaoDesc=function(ret){
		Laya.timer.frameOnce(1,this,function(){
			ret.libao_desc_x.visible=true;
		})
	}

	__proto.hqjd=function(){
		for(var i=0;i < QuestData.instance.dailyActiveDisplayData.length;i++){
			this.libao=this.tbfz(i);
			var data=QuestData.instance.dailyActiveDisplayData[i];
			var conditionId=data['ConditionList'][0];
			var conditionItem=QuestData.instance.conditionIdToData[conditionId];
			this.addRewardItem(conditionItem.Rewards);
			if(data.ReceivedListLength > 0 || data.AvailableListLength > 0){
				this.libao.icon_libao.removeChildren();
				if(data.ReceivedListLength > 0){
					this.libao.on("click",this,this.showLibaoDesc,[this.libao]);
					this.libao.off("click",this,this.libaoClick);
					this.libao.libao.gray=true;
					this.libao.yilingqu.visible=true;
					}else {
					var gx_=new AniSkeleton('huoyuedu',"ui");
					var lb_=new AniSkeleton('libao'+(i+1),"ui");
					this.animates.push(gx_);
					this.animates.push(lb_);
					gx_.addChild(lb_);
					gx_.x=45;
					gx_.y=55;
					this.libao.icon_libao.addChild(gx_);
					this.libao.on("click",this,this.libaoClick,[conditionId,this.libao]);
					this.libao.off("click",this,this.showLibaoDesc);
					this.libao.icon_libao.skin=null;
				}
			}
		}
		this._100.libao_desc_x.bg_content.x=-this.libao.libao_desc_x.bg_content.width/2;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.animates.length){
			for(var i=0;i<this.animates.length;i++){
				this.animates[i].destroy()
				this.animates[i]=null;
			}
			this.animates=null;
		}
		if(this._list.renderHandler){
			this._list.renderHandler.recover();
			this._list.renderHandler=null;
		}
		this.libao.off("click",this,this.libaoClick);
		this.libao.off("click",this,this.showLibaoDesc);
		EventMgr.ins.off("click_getReward",this,this.onGetReward);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	/**
	*周活跃获取进度
	*/
	__proto.hqjd_=function(){
		for(var i=0;i < QuestData.instance.weeklyActiveDisplayData.length;i++){
			this.libao=this.tbfz(i,1);
			var data=QuestData.instance.weeklyActiveDisplayData[i];
			var conditionId=data['ConditionList'][0];
			var conditionItem=QuestData.instance.conditionIdToData[conditionId];
			this.addRewardItem(conditionItem.Rewards);
			this['week_txt_'+(i+1)]['text']=StringUtils.formate(LanguageMgr.Ins.GetLan("9002298"),conditionItem.Value1);
			if(data.ReceivedListLength > 0 || data.AvailableListLength > 0){
				this.libao.icon_libao.removeChildren();
				if(data.ReceivedListLength > 0){
					this.libao.on("click",this,this.showLibaoDesc,[this.libao]);
					this.libao.off("click",this,this.libaoClick);
					this.libao.libao.gray=true;
					this.libao.yilingqu.visible=true;
					}else {
					var gx_=new AniSkeleton('huoyuedu',"ui");
					var lb_=new AniSkeleton('libao'+(i+5),"ui");
					this.animates.push(gx_);
					this.animates.push(lb_);
					gx_.addChild(lb_);
					gx_.scaleX=gx_.scaleY=0.66;
					gx_.x=32;
					gx_.y=43;
					this.libao.icon_libao.addChild(gx_);
					this.libao.icon_libao.skin=null;
					this.libao.on("click",this,this.libaoClick,[conditionId,this.libao]);
					this.libao.off("click",this,this.showLibaoDesc);
				}
			}
		}
	}

	__proto.addRewardItem=function(rewards){
		var rewardsStr=rewards;
		var rewardsArr=rewardsStr.split(',');
		var rewardsCount=rewardsArr.length;
		this.libao.libao_desc_x.bg_content.width=rewardsCount *82+10;
		this.libao.libao_desc_x.bg_content.x=-this.libao.libao_desc_x.bg_content.width/2+44;
		for (var i=0;i < rewardsCount;i++){
			var rewardArr=rewardsArr[i].split('|');
			var rewardId=rewardArr[0] *1;
			var rewardNum=rewardArr[1] *1;
			var item=ItemModel.getItemConfigData(rewardId);
			item.Number=rewardNum ? rewardNum :0;
			var questItemListItem=new QuestItemListItem(item,i,true);
			this.libao.libao_desc_x.bg_content.addChild(questItemListItem);
		}
	}

	__proto.libaoClick=function(conditionId,libao){
		SocketManager.Instance.out.getQuestReward(conditionId);
	}

	__proto.onRenderHandler=function(item,i){
		item.setData(i,QuestData.instance.taskDisplayData);
	}

	__proto.initDay=function(){
		this.progress_txt.text=QuestData.instance.playerTodayActive+'';
		this.progress_main.width=this._proWidth *QuestData.instance.playerTodayActive/100;
		this.hqjd();
	}

	__proto.initWeek=function(){
		this.week_txt.text=LanguageMgr.Ins.GetLan("9002308")+' '+QuestData.instance.playerWeekActive;
		this.hqjd_();
	}

	return TaskView;
})(TaskViewUI)


//class modules.ranking.view.item.RankingItem extends ui.ranking.item.RankingItemUI
var RankingItem=(function(_super){
	function RankingItem(){
		this._data=null;
		RankingItem.__super.call(this);
		this.wsb.text=LanguageMgr.Ins.GetLan("9004133");
		this.wdpm.text=LanguageMgr.Ins.GetLan("9004134");
	}

	__class(RankingItem,'modules.ranking.view.item.RankingItem',_super);
	var __proto=RankingItem.prototype;
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		laya.ui.View.prototype.destroy.call(this)
	}

	__proto.setData=function(index,data){
		this._data=data;
		this.clipRanking.visible=false;
		this.wdpm.visible=this.wsb.visible=false;
		this.trend.visible=true;
		this.place_1.visible=this.place_2.visible=this.place_3.visible=false;
		if(this.name=="bottomItem"){
			this.lab_name.color="#fff";
			this.lab_guild.color="#fecda2";
			this.lab_rankCount.color="#fecda2";
			this.trend.visible=false;
			this.wdpm.visible=true;
			if(index==-1){
				this.wsb.visible=true;
				}else{
				if(index < 3){
					this['place_'+(index+1)].visible=true;
					}else {
					this.clipRanking.visible=true;
					this.clipRanking.value=index+1+''
				}
			}
			this.pm.scaleX=this.pm.scaleY=0.7;
			this.pm.x=1;
			this.pm.y=-4;
			}else{
			if(index < 3){
				this['place_'+(index+1)].visible=true;
				}else {
				this.clipRanking.visible=true;
				this.clipRanking.value=index+1+''
			}
		}
		this.fall.visible=this.flat.visible=this.rise.visible=false
		if(data.change<0){
			this.fall.visible=true;
			this.fall.txt.text=-data.change+'';
			}else if(data.change>0){
			this.rise.visible=true;
			this.rise.txt.text=data.change+'';
			}else{
			this.flat.visible=true
		}
		if(data.imageUrl){
			this.renderHeadImg(data.imageUrl);
			}else {
			this.renderHeadImg('ranking/ui_mr.png');
		}
		this.lab_name.text=data.nikeName;
		if(data.vipLevel==0){
			this.vipIcon.visible=false;
			this.lab_name.x=90;
		}
		else{
			this.vipIcon.skin="assets/textrue/vip/ui_icon_vip"+data.vipLevel+".png";
			this.vipIcon.visible=true;
			this.lab_name.x=120;
		}
		if(data.guildId && data.guildName){
			this.lab_guild.text=data.guildName;
			this.guild_icon.visible=this.lab_guild.visible=true;
			this.lab_name.y=12;
			this.vipIcon.y=12;
			}else {
			this.guild_icon.skin=null
			this.lab_guild.visible=false;
			this.guild_icon.visible=false;
			this.lab_name.y=28;
			this.vipIcon.y=28;
		}
		if (data.guildIcon){
			if(data.guildIcon<10){
				this.guild_icon.skin="assets/textrue/badge/ui_icon_0"+data.guildIcon+".png";
				}else {
				this.guild_icon.skin="assets/textrue/badge/ui_icon_"+data.guildIcon+".png";
			}
		};
		var vo=RankModel.getDivison(data.trophy);
		if(vo && vo.Division){
			this.rank_icon.skin="assets/textrue/medal/icon_"+vo.Division+".png";
			this.rank_icon.visible=true;
			if(vo.Division>=10){
				this.lab_rankCount.text=LanguageMgr.Ins.GetLan("90600"+vo.Division);
				}else {
				this.lab_rankCount.text=LanguageMgr.Ins.GetLan("906000"+vo.Division);
			}
			this.startCount.text="X"+vo.Star;
			}else {
			this.rank_icon.visible=false;
		}
		if(data.type==1){
			this.iconBg.skin="ranking/ui_jftb.png";
			this.startCount.text="X"+vo.Star;
			}else if(data.type==4){
			this.iconBg.skin="ranking/ui-ap-ph.png";
			this.startCount.text=""+data.score;
		}
	}

	__proto.renderHeadImg=function(skin){
		this.img_player.skin=skin
	}

	__getset(0,__proto,'data',function(){
		return this._data;
	});

	return RankingItem;
})(RankingItemUI)


//class modules.room.view.CommonCoin extends ui.room.CommonCoinUI
var CommonCoin=(function(_super){
	function CommonCoin(){
		this.dataCfg=null;
		CommonCoin.__super.call(this);
		this.addEvent();
	}

	__class(CommonCoin,'modules.room.view.CommonCoin',_super);
	var __proto=CommonCoin.prototype;
	__proto.addEvent=function(){
		PlayerInfoMgr.ins.on("player_info_change",this,this.refreshData);
	}

	__proto.removeEvent=function(){
		PlayerInfoMgr.ins.off("player_info_change",this,this.refreshData);
	}

	__proto.refreshData=function(){
		if(this.dataCfg && this.dataCfg.ItemID==CommonCoin.ID_GOLD){
			this.mpNumFont.value=PlayerInfo.instance.gold+"";
			}else if(this.dataCfg && this.dataCfg.ItemID==CommonCoin.ID_GEMS){
			this.mpNumFont.value=PlayerInfo.instance.diamond+"";
		}
		else if(this.dataCfg && this.dataCfg.ItemID==CommonCoin.ID_EXP){
			this.mpNumFont.value=PlayerInfo.instance.exp+"";
		}
		else if(this.dataCfg && this.dataCfg.ItemID==CommonCoin.ID_TROPHY){
			this.mpNumFont.value=PlayerInfo.instance.trophy+"";
		}
		else if(this.dataCfg && this.dataCfg.ItemID==CommonCoin.ID_PINK){
			this.mpNumFont.value=PlayerInfo.instance.pinkDiamond+"";
		}
	}

	__proto.setCountNum=function(count){
		this.mpNumFont.value=count+"";
	}

	__proto.setData=function(coinId){
		this.dataCfg=ItemModel.getItemConfigData(coinId);
		this.mpIconCoin.skin=PathMgr.getItemIcon(this.dataCfg);
		this.refreshData();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	CommonCoin.ID_GOLD=-10;
	CommonCoin.ID_GEMS=-20;
	CommonCoin.ID_EXP=-30;
	CommonCoin.ID_TROPHY=-40;
	CommonCoin.ID_PINK=-60;
	return CommonCoin;
})(CommonCoinUI)


//class modules.room.view.MiniRankItem extends ui.room.MiniRankItemUI
var MiniRankItem=(function(_super){
	function MiniRankItem(){
		MiniRankItem.__super.call(this);
	}

	__class(MiniRankItem,'modules.room.view.MiniRankItem',_super);
	var __proto=MiniRankItem.prototype;
	__proto.initView=function(msg){
		this.mpTextName.text=StringUtils.subName(msg.nikeName,90,18);
		this.mpTextScore.text=msg.score+"";
		if(msg.imageUrl){
			PlayerInfoMgr.ins.getHeadImgUrl(
			msg.imageUrl.replace(/\/100$/,'/40'),
			Handler.create(this,this.setRoleIcon))
		}
	}

	__proto.setRoleIcon=function(skinStr){
		this.mpImgHead.skin=skinStr;
	}

	return MiniRankItem;
})(MiniRankItemUI)


//class modules.room.view.MulitPveRoomView extends ui.mulitpve.MulitPveRoomViewUI
var MulitPveRoomView=(function(_super){
	function MulitPveRoomView(){
		this.aniSkeleton=null;
		this.curSelectVO=null;
		this._inviteView=null;
		MulitPveRoomView.__super.call(this);
		this.initView();
		this.addEvent();
		this.dataSource=CampaignModel.getConfigData(RoomMgr.ins.campaignId);
	}

	__class(MulitPveRoomView,'modules.room.view.MulitPveRoomView',_super);
	var __proto=MulitPveRoomView.prototype;
	__proto.initView=function(){
		var beffectBox=this.startGameBtn.getChildByName("effectBox");
		this.aniSkeleton=new AniSkeleton("ui1","ui");
		beffectBox.addChild(this.aniSkeleton);
		this.txtTitle.text=LanguageMgr.Ins.GetLan(14300143);
		this.txtTitle1.text=LanguageMgr.Ins.GetLan(14300144);
		this.txtTitle2.text=LanguageMgr.Ins.GetLan(14300145);
		this.txtTitle3.text=LanguageMgr.Ins.GetLan(14300146);
	}

	__proto.addEvent=function(){
		this.listPlayer.renderHandler=Handler.create(this,this.onRenderPlayer,null,false);
		this.listReward.renderHandler=Handler.create(this,this.onRenderReward,null,false);
		this.skillCardBtn.on("click",this,this.onClickSkillCard);
		this.taskBtn.on("click",this,this.onClickTask);
		this.startGameBtn.on("click",this,this.onClickStartGame);
		this.btnBack.on("click",this,this.onClickBack);
		this.btnBuyCount.on("click",this,this.onClickBuyCount);
		EventMgr.ins.on("OpenPVPRoomInviteBox",this,this.onOpenInvite);
		EventMgr.ins.on("recv_room_prepare",this,this.onUpdatePlayer);
		EventMgr.ins.on("recv_room_playerupdate",this,this.onUpdatePlayer);
		EventMgr.ins.on("ROOM_KICKED_OUT",this,this.onKickedOut);
		CampaignMgr.ins.on('EVENT_UPDATE_CAMPAINGN_INFO',this,this.onUpdateCampaign);
	}

	__proto.delEvent=function(){
		this.skillCardBtn.off("click",this,this.onClickSkillCard);
		this.taskBtn.off("click",this,this.onClickTask);
		this.startGameBtn.off("click",this,this.onClickStartGame);
		this.btnBack.off("click",this,this.onClickBack);
		this.btnBuyCount.off("click",this,this.onClickBuyCount);
		EventMgr.ins.off("OpenPVPRoomInviteBox",this,this.onOpenInvite);
		EventMgr.ins.off("recv_room_prepare",this,this.onUpdatePlayer);
		EventMgr.ins.off("recv_room_playerupdate",this,this.onUpdatePlayer);
		EventMgr.ins.off("ROOM_KICKED_OUT",this,this.onKickedOut);
		CampaignMgr.ins.off('EVENT_UPDATE_CAMPAINGN_INFO',this,this.onUpdateCampaign);
	}

	__proto.onRenderPlayer=function(item,index){
		item.index=index;
	}

	__proto.onRenderReward=function(item,index){
		var data=item.dataSource;
		var itemVO=ItemModel.getItemConfigData(data.id);
		(item.getChildByName("icon")).skin='assets/textrue/itemicon/'+itemVO.Icon+'.png';
	}

	__proto.onClickBuyCount=function(){
		var _$this=this;
		var infoStr;
		var vipCount=VipMgr.ins.getPVECount();
		var basicNum=int(ConfigModel.getConfigData(1164).ConfigValue);
		if (CampaignMgr.ins.getCampaignBuyCount(this.curSelectVO.ID)< basicNum+vipCount){
			infoStr=LanguageMgr.Ins.GetLan(14300341,ConfigModel.getConfigData(1144).ConfigValue,CampaignMgr.ins.getCampaignBuyCount(this.curSelectVO.ID),basicNum+vipCount);
			TipsManager.Instance().showAlertDialog("",infoStr,"",LanguageMgr.Ins.GetLan(9002241),Handler.create(this,function(){
				if (PlayerInfoMgr.ins.getItemCount(ItemConst.PINKGEM)< int(ConfigModel.getConfigData(1144).ConfigValue)){
					TipsManager.Instance().showLanTips(10001113);
					return;
				}
				_$this.sendBuyCount(_$this.curSelectVO.ID);
				}),Handler.create(this,function(){
				}),Handler.create(this,function(){
			}));
		}
		else{
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan(14300055));
		}
	}

	__proto.sendBuyCount=function(ID){
		var msg=new com.road.ddt.proto.SimpleMsg();
		msg.param1=3;
		msg.param2=ID;
		SocketManager.Instance.sendSocketData(0x2811,msg);
	}

	__proto.onClickSkillCard=function(){
		UIMgr.ins.openView("SkillSystem");
	}

	__proto.onClickTask=function(){
		UIMgr.ins.openView("Quest");
	}

	__proto.onClickStartGame=function(){
		var _$this=this;
		var infoStr;
		var vipCount=VipMgr.ins.getPVECount();
		if (this.isOwner){
			if (this.isAllReady){
				if (CampaignMgr.ins.getCampaignCount(this.curSelectVO.ID)> 0){
					this.startMatch(false);
				}
				else{
					if (CampaignMgr.ins.getCampaignBuyCount(this.curSelectVO.ID)< 1+vipCount){
						infoStr=LanguageMgr.Ins.GetLan(14300168,ConfigModel.getConfigData(1144).ConfigValue+""+ItemModel.getItemName(ItemConst.PINKGEM));
						TipsManager.Instance().showAlertDialog("",infoStr,"",LanguageMgr.Ins.GetLan(14300170),Handler.create(this,function(){
							if (PlayerInfoMgr.ins.getItemCount(ItemConst.PINKGEM)< int(ConfigModel.getConfigData(1144).ConfigValue)){
								TipsManager.Instance().showLanTips(10001113);
								return;
							}
							_$this.startMatch(true);
							}),Handler.create(this,function(){
							_$this.startMatch(false);
							}),Handler.create(this,function(){
						}));
					}
					else{
						TipsManager.Instance().showAlertDialog("",LanguageMgr.Ins.GetLan(14300169),"",LanguageMgr.Ins.GetLan(9002241),Handler.create(this,function(){
							_$this.startMatch(false);
						}));
					}
				}
			}
			else{
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300098"));
			}
		}
		else{
			if (this.isReady){
				this.prepare(false,false);
			}
			else{
				if (CampaignMgr.ins.getCampaignCount(this.curSelectVO.ID)> 0){
					this.prepare(true,false);
				}
				else{
					if (CampaignMgr.ins.getCampaignBuyCount(this.curSelectVO.ID)< 1){
						infoStr=LanguageMgr.Ins.GetLan(14300168,ConfigModel.getConfigData(1144).ConfigValue+""+ItemModel.getItemName(ItemConst.PINKGEM));
						TipsManager.Instance().showAlertDialog("",infoStr,"",LanguageMgr.Ins.GetLan(14300171),Handler.create(this,function(){
							if (PlayerInfoMgr.ins.getItemCount(ItemConst.PINKGEM)< int(ConfigModel.getConfigData(1144).ConfigValue)){
								TipsManager.Instance().showLanTips(10001113);
								return;
							}
							_$this.prepare(true,true);
							}),Handler.create(this,function(){
							_$this.prepare(true,false);
							}),Handler.create(this,function(){
						}));
					}
					else{
						TipsManager.Instance().showAlertDialog("",LanguageMgr.Ins.GetLan(14300169),"",LanguageMgr.Ins.GetLan(9002241),Handler.create(this,function(){
							_$this.prepare(true,false);
						}));
					}
				}
			}
		}
	}

	__proto.startMatch=function(buyCount){
		var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
		msg.opType=1;
		msg.battleType=11;
		msg.param5=buyCount ? 1 :0;
		SocketManager.Instance.sendSocketData(0x2745,msg);
	}

	__proto.prepare=function(isPrepare,buyCount){
		var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
		msg.opType=7;
		msg.param1=isPrepare ? 1 :0;
		msg.param5=buyCount ? 1 :0;
		SocketManager.Instance.sendSocketData(0x2745,msg);
	}

	__proto.onClickBack=function(){
		if (!this.isOwner && this.isReady){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002336"));
			return;
		};
		var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
		msg.opType=2;
		SocketManager.Instance.sendSocketData(0x2745,msg);
		UIMgr.ins.closeView("MulitPveRoomView");
	}

	__proto.updateStageView=function(){
		this.txtName.text=this.curSelectVO.Name;
		this.txtCount.text=CampaignMgr.ins.getCampaignCount(this.curSelectVO.ID)+"";
		this.txtMode.text=LanguageMgr.Ins.GetLan(CampaignConst.DifficultLan[this.curSelectVO.Difficult]);
		this.listReward.array=this.curSelectVO.Reward;
	}

	__proto.onOpenInvite=function(){
		if (this._inviteView==null){
			this._inviteView=new PVPRoomInviteView();
			this._inviteView.right=0;
			this._inviteView.y=47;
			this.addChild(this._inviteView);
		}
		else{
			this._inviteView.visible=true;
		}
	}

	__proto.onUpdatePlayer=function(){
		this.listPlayer.refresh();
		this.updateStartBtnState();
		this._inviteView && (this._inviteView.visible=false);
	}

	__proto.onUpdateCampaign=function(campaignInfo){
		if (this.curSelectVO.ID==campaignInfo.campaignId){
			this.updateStageView();
		}
	}

	__proto.onKickedOut=function(){
		UIMgr.ins.closeView("MulitPveRoomView");
	}

	//更新开始按钮状态
	__proto.updateStartBtnState=function(){
		if (this.isOwner){
			this.btnIcon.skin="language/"+LanguageMgr.Ins.country+"/room/ui_kaishi.png";
		}
		else{
			if (this.isReady){
				this.btnIcon.skin="language/"+LanguageMgr.Ins.country+"/room/ui_quxiao.png";
			}
			else{
				this.btnIcon.skin="language/"+LanguageMgr.Ins.country+"/room/ui_zhunbei.png";
			}
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.delEvent();
		this._inviteView && this._inviteView.destroy();
		this._inviteView=null;
		this.aniSkeleton && this.aniSkeleton.destroy();
		this.aniSkeleton=null;
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(value){
		Laya.superSet(MulitPveRoomViewUI,this,'dataSource',value);
		this.curSelectVO=value;
		this.listPlayer.array=RoomMgr.ins.roomPlayerList;
		this.onUpdatePlayer();
		this.updateStageView();
	});

	__getset(0,__proto,'isReady',function(){
		var battlePlayerMsg;
		for(var $each_battlePlayerMsg in RoomMgr.ins.roomPlayerList){
			battlePlayerMsg=RoomMgr.ins.roomPlayerList[$each_battlePlayerMsg];
			if (battlePlayerMsg.userId==PlayerInfo.instance.playerId){
				return battlePlayerMsg.siteState==3 ? true :false;
			}
		}
		return false;
	});

	__getset(0,__proto,'isOwner',function(){
		return PlayerInfo.instance.playerId==RoomMgr.ins.masterId;
	});

	__getset(0,__proto,'isAllReady',function(){
		var battlePlayerMsg;
		for(var $each_battlePlayerMsg in RoomMgr.ins.roomPlayerList){
			battlePlayerMsg=RoomMgr.ins.roomPlayerList[$each_battlePlayerMsg];
			if (battlePlayerMsg.siteState==2){
				return false;
			}
		}
		return true;
	});

	return MulitPveRoomView;
})(MulitPveRoomViewUI)


//class modules.room.view.PVPRoomInviteView extends ui.room.PVPRoomInviteViewUI
var PVPRoomInviteView=(function(_super){
	function PVPRoomInviteView(){
		this.friendDatas=[];
		PVPRoomInviteView.__super.call(this);
		this.initUI();
		this.addEvent();
	}

	__class(PVPRoomInviteView,'modules.room.view.PVPRoomInviteView',_super);
	var __proto=PVPRoomInviteView.prototype;
	__proto.initUI=function(){
		this.tab.dataSource=[LanguageMgr.Ins.GetLan("14300014"),LanguageMgr.Ins.GetLan("9004140")];
		this.friendsList.dataSource=this.friendDatas=[];
		this.boxTips.visible=false;
		this.friendsList.visible=false;
		this.boxTipsTitle.text=LanguageMgr.Ins.GetLan("14300099");
		this.boxTipsContent.text=LanguageMgr.Ins.GetLan("14300100");
		this.roomIDInviteBtn.visible=false;
		this.txtWorldInvite.text=LanguageMgr.Ins.GetLan(14300179);
		this.laba.x=this.txtWorldInvite.x+this.txtWorldInvite.textWidth+3;
		this.onSpeakerChange();
	}

	__proto.onSpeakerChange=function(){
		this.countTxt.text=PlayerInfoMgr.ins.getItemCount(6006001)+"";
	}

	__proto.addEvent=function(){
		this.closeInviteBoxBtn.on("click",this,this.closeInviteBoxHandler);
		this.joinBtn.on("click",this,this.joinGuildHandler);
		this.inviteBtn.on("click",this,this.inviteWXFreindHandler);
		this.roomIDInviteBtn.on("click",this,this.roomIDInviteHandler);
		EventMgr.ins.on("msg_update_guild_friend",this,this.onUpdateGuildFriend);
		this.tab.selectHandler=Handler.create(this,this.tabChangedHandler,null,false);
		this.txtWorldInvite.on("click",this,this.sendWorldInvite);
		EventMgr.ins.on("recv_speaker_change",this,this.onSpeakerChange);
	}

	__proto.removeEvent=function(){
		this.closeInviteBoxBtn.off("click",this,this.closeInviteBoxHandler);
		EventMgr.ins.off("msg_update_guild_friend",this,this.onUpdateGuildFriend);
		EventMgr.ins.off("recv_speaker_change",this,this.onSpeakerChange);
		if(this.tab.selectHandler){
			this.tab.selectHandler.recover();
			this.tab.selectHandler=null;
		}
		this.txtWorldInvite.off("click",this,this.sendWorldInvite);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
		this.removeEvent();
	}

	__proto.closeInviteBoxHandler=function(){
		this.visible=false;
	}

	__proto.joinGuildHandler=function(){
		UIMgr.ins.openView("GuildList");
	}

	__proto.sendWorldInvite=function(){
		ChatMgr.ins.sendInviteMsg(RoomMgr.ins.roomId,RoomMgr.ins.battleType,RoomMgr.ins.campaignId);
	}

	__proto.inviteWXFreindHandler=function(){
		var arr=[];
		arr[0]=ShareConst.PVP_ROOM_INVITE;
		arr[1]={"addPath":"&roomId="+RoomMgr.ins.roomId+"&matchServerId="+RoomMgr.ins.matchServerId+"&campaignId="+RoomMgr.ins.campaignId};
		EventMgr.ins.event("SHARE",[arr]);
		console.log("roomId:"+RoomMgr.ins.roomId);
	}

	__proto.roomIDInviteHandler=function(){}
	__proto.genWxAppQrComplete=function(base64Url){
		UIMgr.ins.openView("QRView",Handler.create(this,function(view){
			view.QRImage.skin=base64Url;
		}));
	}

	__proto.onUpdateGuildFriend=function(e){
		if(PlayerInfo.instance.consortiaID=="-1")return;
		var guildFriendList=GuildMgr.ins.guildFriendList;
		var canInvites=[];
		var onlines_room=[];
		var onlines_battle=[];
		var offlines=[];
		var info;
		for(var $each_info in guildFriendList){
			info=guildFriendList[$each_info];
			if(info.playerState==3){
				canInvites.push(info);
			}
			else if(info.playerState==2){
				onlines_room.push(info);
			}
			else if(info.playerState==1){
				onlines_battle.push(info);
			}
			else{
				offlines.push(info);
			}
		}
		canInvites=ArrayUtils.sortOn(canInvites,"usercpLevel",Array.NUMERIC);
		onlines_room=ArrayUtils.sortOn(onlines_room,"usercpLevel",Array.NUMERIC);
		onlines_battle=ArrayUtils.sortOn(onlines_battle,"usercpLevel",Array.NUMERIC);
		offlines=ArrayUtils.sortOn(offlines,"usercpLevel",Array.NUMERIC);
		var friendsListDatas=canInvites.concat(onlines_room).concat(onlines_battle).concat(offlines);
		this.friendsList.dataSource=friendsListDatas;
		if(guildFriendList.length > 0){
			this.boxTips.visible=false;
			this.friendsList.visible=true;
		}
		else{
			this.boxTips.visible=true;
			this.friendsList.visible=false;
		}
	}

	__proto.tabChangedHandler=function(){
		this.box0.visible=false;
		this.box1.visible=false;
		if(this.tab.selectedIndex==0){
			this.box0.visible=true;
		}
		else if(this.tab.selectedIndex==1){
			this.box1.visible=true;
			if(PlayerInfo.instance.consortiaID !="-1"){
				FriendsMgr.ins.getGuildFriendList();
				this.boxTips.visible=false;
				this.friendsList.visible=true;
			}
			else{
				this.boxTips.visible=true;
				this.friendsList.visible=false;
			}
		}
	}

	return PVPRoomInviteView;
})(PVPRoomInviteViewUI)


//class modules.room.view.render.MulitPveRoleItem extends ui.mulitpve.items.MulitPveRoleItemUI
var MulitPveRoleItem=(function(_super){
	function MulitPveRoleItem(){
		this._index=-1;
		this.heroShowSkeleton=null;
		MulitPveRoleItem.__super.call(this);
		this.openBtn.on("click",this,this.onOpenInviteStateHandler);
		this.closeBtn.on("click",this,this.onCloseInviteStateHandler);
		this.inviteBtn.on("click",this,this.onInviteHandler);
		this.outBtn.on("click",this,this.onOutHandler);
	}

	__class(MulitPveRoleItem,'modules.room.view.render.MulitPveRoleItem',_super);
	var __proto=MulitPveRoleItem.prototype;
	__proto.updateRoleSkeleton=function(roleId){
		if (this.heroShowSkeleton){
			this.heroShowSkeleton.updateRoleId(roleId);
		}
		else{
			this.heroShowSkeleton=new HeroShowSkeleton(roleId);
			this.heroShowSkeleton.name="roleSkeleton";
			this.heroShowSkeleton.scale(0.6,0.6);
			this.roleAvartBox.addChild(this.heroShowSkeleton);
		}
	}

	__proto.removeRoleSkeleton=function(){
		this.heroShowSkeleton && this.heroShowSkeleton.destroy(true);
		this.heroShowSkeleton=null;
	}

	//发送请求,打开邀请状态
	__proto.onOpenInviteStateHandler=function(){
		if (this._index==-1){
			return;
		};
		var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
		msg.opType=8;
		msg.param1=this._index;
		SocketManager.Instance.sendSocketData(0x2745,msg);
	}

	//关闭邀请
	__proto.onCloseInviteStateHandler=function(){
		if (this._index==-1){
			return;
		};
		var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
		msg.opType=9;
		msg.param1=this._index;
		SocketManager.Instance.sendSocketData(0x2745,msg);
	}

	__proto.onInviteHandler=function(){
		EventMgr.ins.event("OpenPVPRoomInviteBox");
	}

	//踢人
	__proto.onOutHandler=function(){
		if (this._index==-1){
			return;
		};
		var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
		msg.opType=3;
		msg.param1=this._index;
		SocketManager.Instance.sendSocketData(0x2745,msg);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeRoleSkeleton();
		laya.ui.View.prototype.destroy.call(this,true);
	}

	__getset(0,__proto,'index',null,function(value){
		this._index=value;
		if (this._index > 1){
			this.openBtn.scale(0.8,0.8);
			this.platformImg.scale(0.8,0.8);
		}
		else{
			this.openBtn.scale(1,1);
			this.platformImg.scale(1,1);
		}
	});

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(data){
		Laya.superSet(MulitPveRoleItemUI,this,'dataSource',data);
		var msg=data;
		var isHouseOwner=PlayerInfo.instance.playerId==RoomMgr.ins.masterId;
		this.removeRoleSkeleton();
		if (msg !=null){
			var roleId=data.sex==1 ? RoleModelType.ManModel :RoleModelType.WamanModel;
			this.okFlag.visible=false;
			this.openBtn.visible=false;
			this.inviteBtn.visible=false;
			this.outBtn.visible=false;
			this.closeBtn.visible=false;
			this.roomMasterFlag.visible=false;
			this.nickNameText.visible=false;
			this.guildNameText.visible=false;
			this.vipIcon.visible=false;
			if (data.siteState==4){
				this.roomMasterFlag.visible=true;
				this.nickNameText.visible=true;
				this.guildNameText.visible=true;
				this.roleAvartBox.visible=true;
				if(msg.vipLevel>0){
					this.vipIcon.visible=true;
					this.vipIcon.skin="assets/textrue/vip/ui_icon_vip"+msg.vipLevel+".png";
					this.vipIcon.scaleX=this.vipIcon.scaleY=0.6;
				}
				this.nickNameText.text=msg.nickName;
				this.guildNameText.text=msg.guildName;
				this.updateRoleSkeleton(roleId);
			}
			else if (data.siteState==0){
				this.openBtn.visible=true;
			}
			else if (data.siteState==1){
				this.inviteBtn.visible=true;
				this.closeBtn.visible=true;
			}
			else if (data.siteState==2){
				this.nickNameText.visible=true;
				this.guildNameText.visible=true;
				this.roleAvartBox.visible=true;
				this.outBtn.visible=isHouseOwner ? true :false;
				if(msg.vipLevel>0){
					this.vipIcon.visible=true;
					this.vipIcon.skin="assets/textrue/vip/ui_icon_vip"+msg.vipLevel+".png";
					this.vipIcon.scaleX=this.vipIcon.scaleY=0.6;
				}
				this.nickNameText.text=data.nickName;
				this.guildNameText.text=data.guildName;
				this.updateRoleSkeleton(roleId);
			}
			else if (data.siteState==3){
				this.nickNameText.visible=true;
				this.guildNameText.visible=true;
				this.roleAvartBox.visible=true;
				this.outBtn.visible=isHouseOwner ? true :false;
				this.okFlag.visible=true;
				if(msg.vipLevel>0){
					this.vipIcon.visible=true;
					this.vipIcon.skin="assets/textrue/vip/ui_icon_vip"+msg.vipLevel+".png";
					this.vipIcon.scaleX=this.vipIcon.scaleY=0.6;
				}
				this.nickNameText.text=data.nickName;
				this.guildNameText.text=data.guildName;
				this.updateRoleSkeleton(roleId);
			}
		}
	});

	return MulitPveRoleItem;
})(MulitPveRoleItemUI)


//class modules.room.view.render.RoomRoleItemRender extends ui.room.items.RoomRoleItemUI
var RoomRoleItemRender=(function(_super){
	function RoomRoleItemRender(){
		this.index=0;
		this.heroShowSkeleton=null;
		this.msg=null;
		RoomRoleItemRender.__super.call(this);
		this.openBtn.on("click",this,this.onOpenInviteStateHandler);
		this.closeBtn.on("click",this,this.onCloseInviteStateHandler);
		this.inviteBtn.on("click",this,this.onInviteHandler);
		this.outBtn.on("click",this,this.onOutHandler);
	}

	__class(RoomRoleItemRender,'modules.room.view.render.RoomRoleItemRender',_super);
	var __proto=RoomRoleItemRender.prototype;
	__proto.updateRoleSkeleton=function(roleId){
		if(this.heroShowSkeleton){
			this.heroShowSkeleton.updateRoleId(roleId);
		}
		else{
			this.heroShowSkeleton=new HeroShowSkeleton(roleId);
			this.heroShowSkeleton.name="roleSkeleton";
			this.heroShowSkeleton.scale(0.6,0.6);
			this.roleAvartBox.addChild(this.heroShowSkeleton);
		}
	}

	__proto.removeRoleSkeleton=function(){
		if(this.heroShowSkeleton){
			this.heroShowSkeleton.removeSelf();
			this.heroShowSkeleton.destroy(true);
			this.heroShowSkeleton=null;
		}
	}

	__proto.onOpenInviteStateHandler=function(){
		var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
		msg.opType=8;
		msg.param1=this.index;
		SocketManager.Instance.sendSocketData(0x2745,msg);
	}

	__proto.onCloseInviteStateHandler=function(){
		var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
		msg.opType=9;
		msg.param1=this.index;
		SocketManager.Instance.sendSocketData(0x2745,msg);
	}

	__proto.onInviteHandler=function(){
		EventMgr.ins.event("OpenPVPRoomInviteBox");
	}

	__proto.onOutHandler=function(){
		var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
		msg.opType=3;
		msg.param1=this.index;
		SocketManager.Instance.sendSocketData(0x2745,msg);
	}

	__getset(0,__proto,'dataSource',_super.prototype._$get_dataSource,function(data){
		Laya.superSet(RoomRoleItemUI,this,'dataSource',data);
		this.index=-1;
		var list=this.parent ? (this.parent).parent:null;
		if(list !=null){
			var dataSources=list.dataSource;
			this.index=dataSources.indexOf(data);
		}
		this.msg=data;
		var isHouseOwner=PlayerInfo.instance.playerId==RoomMgr.ins.masterId;
		this.removeRoleSkeleton();
		if(this.msg !=null){
			var roleId=data.sex==1 ? RoleModelType.ManModel :RoleModelType.WamanModel;
			var rankVO=RankModel.getDivison(this.msg.trophy);
			var medalRes=rankVO ? PathMgr.getMedalRes(rankVO):{};
			this.okFlag.visible=false;
			this.openBtn.visible=false;
			this.inviteBtn.visible=false;
			this.outBtn.visible=false;
			this.closeBtn.visible=false;
			this.meiliBtn.visible=false;
			this.roomMasterFlag.visible=false;
			this.vipIcon.visible=false;
			this.rankingIcon.visible=false;
			this.nickNameText.visible=false;
			this.guildNameText.visible=false;
			if(data.siteState==4){
				this.roomMasterFlag.visible=true;
				this.nickNameText.visible=true;
				this.guildNameText.visible=true;
				this.roleAvartBox.visible=true;
				this.rankingIcon.visible=true;
				if(this.msg.vipLevel>0){
					this.vipIcon.visible=true;
					this.vipIcon.skin="assets/textrue/vip/ui_icon_vip"+this.msg.vipLevel+".png";
					this.vipIcon.scaleX=this.vipIcon.scaleY=0.6;
				}
				this.rankingIcon.skin=medalRes.iconRes;
				this.rankingIcon.scaleX=this.rankingIcon.scaleY=0.18;
				this.nickNameText.text=this.msg.nickName;
				this.guildNameText.text=this.msg.guildName;
				this.meiliLevelTxt.text="Lv "+this.msg.usercpLevel;
				this.updateRoleSkeleton(roleId);
				this.meiliBtn.visible=true;
			}
			else if(data.siteState==0){
				this.openBtn.visible=true;
			}
			else if(data.siteState==1){
				this.inviteBtn.visible=true;
				this.closeBtn.visible=true;
			}
			else if(data.siteState==2){
				this.nickNameText.visible=true;
				this.guildNameText.visible=true;
				this.roleAvartBox.visible=true;
				this.rankingIcon.visible=true;
				this.outBtn.visible=isHouseOwner ? true :false;
				this.meiliBtn.visible=true;
				if(this.msg.vipLevel>0){
					this.vipIcon.visible=true;
					this.vipIcon.skin="assets/textrue/vip/ui_icon_vip"+this.msg.vipLevel+".png";
					this.vipIcon.scaleX=this.vipIcon.scaleY=0.6;
				}
				this.rankingIcon.skin=medalRes.iconRes;
				this.rankingIcon.scaleX=this.rankingIcon.scaleY=0.18;
				this.nickNameText.text=data.nickName;
				this.guildNameText.text=data.guildName;
				this.meiliLevelTxt.text="Lv "+this.msg.usercpLevel;
				this.updateRoleSkeleton(roleId);
			}
			else if(data.siteState==3){
				this.nickNameText.visible=true;
				this.guildNameText.visible=true;
				this.roleAvartBox.visible=true;
				this.rankingIcon.visible=true;
				this.outBtn.visible=isHouseOwner ? true :false;
				this.meiliBtn.visible=true;
				this.okFlag.visible=true;
				if(this.msg.vipLevel>0){
					this.vipIcon.visible=true;
					this.vipIcon.skin="assets/textrue/vip/ui_icon_vip"+this.msg.vipLevel+".png";
					this.vipIcon.scaleX=this.vipIcon.scaleY=0.6;
				}
				this.rankingIcon.skin=medalRes.iconRes;
				this.rankingIcon.scaleX=this.rankingIcon.scaleY=0.18;
				this.nickNameText.text=data.nickName;
				this.guildNameText.text=data.guildName;
				this.meiliLevelTxt.text="Lv "+this.msg.usercpLevel;
				this.updateRoleSkeleton(roleId);
			}
		}
	});

	return RoomRoleItemRender;
})(RoomRoleItemUI)


//class modules.season.item.ItemCell extends ui.pvp.item.ItemCellUI
var ItemCell=(function(_super){
	function ItemCell(){
		this.itemVo=null;
		ItemCell.__super.call(this);
	}

	__class(ItemCell,'modules.season.item.ItemCell',_super);
	var __proto=ItemCell.prototype;
	__proto.setData=function(value){
		var arr=value.split("|");
		var itemId=arr[0];
		this.itemVo=ItemModel.getItemConfigData(itemId);
		if(this.itemVo.Type==4){
			this.name="chest";
			this.on("click",this,this.onChest);
			}else{
			this.name="coin";
			this.off("click",this,this.onChest);
		}
		this.icon.skin=PathMgr.getBoxIcon(this.itemVo.Icon);
		this.txt.text=arr[1]+"";
		this.txt.visible=this.txt.text !="1";
	}

	__proto.onChest=function(){
		var _$this=this;
		var view=UIMgr.ins.getView("TreasureBoxDetailTips");
		if(view){
			UIMgr.ins.closeView("TreasureBoxDetailTips");
		}
		else {
			UIMgr.ins.openView("TreasureBoxDetailTips"
			,Handler.create(this,function(view){
				view.setData(_$this.itemVo);
			}));
		}
	}

	// }
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.off("click",this,this.onChest);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
		this.itemVo=null;
	}

	return ItemCell;
})(ItemCellUI)


/**
*赛季页面列表子页面
**/
//class modules.season.item.SeasonListItem extends ui.pvp.item.SeasonListItemUI
var SeasonListItem=(function(_super){
	function SeasonListItem(){
		this.starArr=["Ⅰ","Ⅱ","Ⅲ","Ⅳ","Ⅴ"];
		this.itemVo=null;
		SeasonListItem.__super.call(this);
		this.list.renderHandler=Handler.create(this,this.onRenderList,null,false);
	}

	__class(SeasonListItem,'modules.season.item.SeasonListItem',_super);
	var __proto=SeasonListItem.prototype;
	__proto.onRenderList=function(item,index){
		if(index < this.list.length){
			item.setData(this.list.array[index]);
		}
	}

	__proto.setData=function(vo){
		var divId=vo.Division;
		var showBg=PlayerInfo.instance.division==divId && PlayerInfo.instance.currentStar==vo.StarNum;
		this.bg.visible=showBg;
		this.divIcon.skin=PathMgr.getDivisionIcon(divId);
		var rankvo=RankModel.getRankVO(divId);
		if(divId==10){
			this.txtDiv.text=LanguageMgr.Ins.GetLan(rankvo.Name);
			}else{
			this.txtDiv.text=LanguageMgr.Ins.GetLan(rankvo.Name)+this.starArr[vo.StarNum-1];
		};
		var arr=vo.SeasonReward.split(",");
		this.list.array=arr;
		if(this.list.length==2){
			this.list.x=450;
			}if(this.list.length==1){
			this.list.x=530;
			}if(this.list.length==3){
			this.list.x=380;
			}if(this.list.length==4){
			this.list.x=307;
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.itemVo=null;
		this.starArr.length=0;
		this.starArr=null;
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return SeasonListItem;
})(SeasonListItemUI)


/**
*赛季名人堂列表子页面
**/
//class modules.season.item.SeasonRewardItem extends ui.pvp.item.SeasonRewardItemUI
var SeasonRewardItem=(function(_super){
	function SeasonRewardItem(){
		SeasonRewardItem.__super.call(this);
	}

	__class(SeasonRewardItem,'modules.season.item.SeasonRewardItem',_super);
	var __proto=SeasonRewardItem.prototype;
	__proto.setData=function(vo,index){
		var divId=vo.division;
		var rankvo=RankModel.getRankVO(divId);
		this.txtDiv.text=LanguageMgr.Ins.GetLan(rankvo.Name);
		this.divIcon.skin=PathMgr.getDivisionIcon(divId);
		if(vo.guildName){
			this.txtGuild.text=vo.guildName;
			this.guildIcon.visible=true;
			this.guildIcon.skin=PathMgr.getBadgeIcon(vo.guildIcon);
			}else{
			this.txtGuild.text="";
			this.guildIcon.visible=false;
		}
		this.txtName.text=vo.nickName;
		this.txtStar.text="X"+vo.seasonStar;
		this.headImg.skin=vo.avatar;
		this.num.skin="comm/ui_meili_0"+(index+1)+".png";
	}

	return SeasonRewardItem;
})(SeasonRewardItemUI)


//class modules.sevenDayTarget.items.DayListItem extends ui.sevenDayTarget.items.dayListItemUI
var DayListItem=(function(_super){
	function DayListItem(){
		/**代表第几天,0代表第一天**/
		this.dayIndex=0;
		DayListItem.__super.call(this);
	}

	__class(DayListItem,'modules.sevenDayTarget.items.DayListItem',_super);
	var __proto=DayListItem.prototype;
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__proto.setData=function(itemIndex,selectedDayIndex){
		var self=this;
		self.dayIndex=itemIndex;
		if(itemIndex !=selectedDayIndex){
			self.greyBg.visible=true;
			self.greyTxet.visible=true;
			self.activeBg.visible=false;
			self.activeText.visible=false;
		}
		else {
			self.greyBg.visible=false;
			self.greyTxet.visible=false;
			self.activeBg.visible=true;
			self.activeText.visible=true;
		}
		self.activeText.text=self.greyTxet.text=LanguageMgr.Ins.GetLan(SevenDayTargetMgr.ins.DaysArray[itemIndex]);
		self.allGetImg.visible=SevenDayTargetMgr.ins.checkDayAllGetedSymbol(self.dayIndex);
		self.redPoint.visible=SevenDayTargetMgr.ins.checkDayRedPoint(self.dayIndex)
	}

	return DayListItem;
})(dayListItemUI)


//class modules.sevenDayTarget.items.RewardListItem extends ui.sevenDayTarget.items.rewarListItemUI
var RewardListItem=(function(_super){
	function RewardListItem(){
		RewardListItem.__super.call(this);
	}

	__class(RewardListItem,'modules.sevenDayTarget.items.RewardListItem',_super);
	var __proto=RewardListItem.prototype;
	__proto.setData=function(index,data){
		var self=this;
		self.icon.skin=data.itemIcon;
		self.countText.text=data.count+"";
		self.offAll();
		self.on("click",this,TipsManager.Instance().addItemTip,[data.itemVO]);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.offAll();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return RewardListItem;
})(rewarListItemUI)


//class modules.sevenDayTarget.items.TargetListItem extends ui.sevenDayTarget.items.targetListItemUI
var TargetListItem=(function(_super){
	function TargetListItem(){
		this.rewardListData=[];
		/**标记跳转模块类型**/
		this.eventType=0;
		/**任务条件ID**/
		this.id=null;
		TargetListItem.__super.call(this);
		this.addEvent();
	}

	__class(TargetListItem,'modules.sevenDayTarget.items.TargetListItem',_super);
	var __proto=TargetListItem.prototype;
	__proto.setData=function(index){
		var self=this;
		var data=SevenDayTargetMgr.ins.DisplayTargetList[index];
		self.eventType=data.evenType;
		self.id=data.id;
		self.targetDescribeText.text=LanguageMgr.Ins.GetLan(data.languageId).replace("{0}",data.goalNum);
		if(data.state==TargetListItemState.UN_OPEN){
			self.greyBg.visible=true;
			self.greyLine.visible=true;
			self.activeBg.visible=false;
			self.activeLine.visible=false;
			self.jumpViewBtn.visible=false;
			self.getRewardBtn.visible=false;
			self.unopenImg.visible=true;
			self.hadGetImg.visible=false;
			self.targetCompleteText.text="";
		}
		else if(data.state==TargetListItemState.JUMP_VIEW){
			self.greyBg.visible=false;
			self.greyLine.visible=false;
			self.activeBg.visible=true;
			self.activeLine.visible=true;
			self.jumpViewBtn.visible=true;
			self.getRewardBtn.visible=false;
			self.unopenImg.visible=false;
			self.hadGetImg.visible=false;
			self.targetCompleteText.color="#ff7800";
			if(data.evenType==56){
				self.targetCompleteText.text=LanguageMgr.Ins.GetLan("9002307")+"0/1";
			}
			else {
				self.targetCompleteText.text=LanguageMgr.Ins.GetLan("9002307")+data.currentNum+"/"+data.goalNum;
			}
		}
		else if(data.state==TargetListItemState.GET_REWARD){
			self.greyBg.visible=false;
			self.greyLine.visible=false;
			self.activeBg.visible=true;
			self.activeLine.visible=true;
			self.jumpViewBtn.visible=false;
			self.getRewardBtn.visible=true;
			self.unopenImg.visible=false;
			self.hadGetImg.visible=false;
			self.targetCompleteText.color="#53a60f";
			if(data.evenType==56){
				self.targetCompleteText.text=LanguageMgr.Ins.GetLan("9002307")+"1/1";
			}
			else {
				self.targetCompleteText.text=LanguageMgr.Ins.GetLan("9002307")+data.currentNum+"/"+data.goalNum;
			}
		}
		else if(data.state==TargetListItemState.HAD_GET_REWARD){
			self.greyBg.visible=false;
			self.greyLine.visible=false;
			self.activeBg.visible=true;
			self.activeLine.visible=true;
			self.jumpViewBtn.visible=false;
			self.getRewardBtn.visible=false;
			self.unopenImg.visible=false;
			self.hadGetImg.visible=true;
			self.targetCompleteText.text="";
		}
		self.rewardListData=data.rewardDatas;
		self.rewardList.array=self.rewardListData;
	}

	__proto.addEvent=function(){
		var self=this;
		self.rewardList.renderHandler=Handler.create(self,self.onRenderRewardList,null,false);
		self.jumpViewBtn.clickHandler=Handler.create(self,self.onClickJumpView,null,false);
		self.getRewardBtn.clickHandler=Handler.create(self,self.onClickGetReward,null,false);
	}

	//领取奖励
	__proto.onClickGetReward=function(){
		SocketManager.Instance.out.getSevenDayTargetReward(this.id);
	}

	//跳转
	__proto.onClickJumpView=function(){
		SevenDayTargetMgr.ins.jumpViewByEventType(this.eventType);
	}

	__proto.onRenderRewardList=function(cell,index){
		cell.setData(index,this.rewardListData[index]);
	}

	__proto.removeEvent=function(){
		var self=this;
		self.rewardList.renderHandler.recover();
		self.rewardList.renderHandler=null;
		self.jumpViewBtn.clickHandler.recover();
		self.jumpViewBtn.clickHandler=null;
		self.getRewardBtn.clickHandler.recover();
		self.getRewardBtn.clickHandler=null;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return TargetListItem;
})(targetListItemUI)


/**
*七日目标主界面
*@author rick.li
*/
//class modules.sevenDayTarget.SevenDayTargetMainView extends ui.sevenDayTarget.sevenDayTargetMainViewUI
var SevenDayTargetMainView=(function(_super){
	function SevenDayTargetMainView(){
		/**当前天数,0代表第一天**/
		this.selectedDayIndex=0;
		/**当前tab下标**/
		this.selectedTargetTypeIndex=0;
		this.daysArray=null;
		/**当天目标剩余时间**/
		this.refreshTime=NaN;
		SevenDayTargetMainView.__super.call(this);
		this.init();
	}

	__class(SevenDayTargetMainView,'modules.sevenDayTarget.SevenDayTargetMainView',_super);
	var __proto=SevenDayTargetMainView.prototype;
	__proto.init=function(){
		var self=this;
		if(SevenDayTargetMgr.ins.NowDay < 6){
			self.timeText.visible=false;
			self.timeBg.visible=false;
		}
		else {
			self.timeText.visible=true;
			self.timeBg.visible=true;
			self.refreshTime=SevenDayTargetMgr.ins.refreshTime;
			self.updateTimer();
		}
		self.selectedDayIndex=SevenDayTargetMgr.ins.NowDay;
		self.selectedTargetTypeIndex=0;
		self.targetTypeTab.labels=SevenDayTargetMgr.ins.TargetEvents(self.selectedDayIndex);
		self.targetTypeTab.selectedIndex=self.selectedTargetTypeIndex;
		self.daysArray=SevenDayTargetMgr.ins.DaysArray;
		self.dayList.array=self.daysArray;
		self.dayList.selectedIndex=self.selectedDayIndex;
		self.dayList.scrollTo(self.selectedDayIndex);
		self.targetList.array=SevenDayTargetMgr.ins.getDisplayData(self.selectedDayIndex,self.selectedTargetTypeIndex);
		self.addEvent();
	}

	__proto.onRenderDayList=function(cell,index){
		cell.setData(index,this.selectedDayIndex);
	}

	__proto.onClickDayList=function(e,index){
		if(e.type !="click")return;
		if(this.selectedDayIndex !=index){
			this.selectedTargetTypeIndex=0;
			this.targetTypeTab.selectedIndex=this.selectedTargetTypeIndex;
		}
		this.selectedDayIndex=index;
		this.dayList.array=this.daysArray;
		EventMgr.ins.event("UPDATE_SEVEN_DAY_TARGET_VIEW");
	}

	__proto.addEvent=function(){
		var self=this;
		this.topBar.btnBackCallBack=Handler.create(this,this.closeView);
		self.dayList.renderHandler=Handler.create(self,self.onRenderDayList,null,false);
		self.dayList.mouseHandler=Handler.create(self,self.onClickDayList,null,false);
		self.targetTypeTab.selectHandler=Handler.create(self,self.onTabClick,null,false);
		self.targetList.renderHandler=Handler.create(self,self.onRenderTargetList,null,false);
		EventMgr.ins.on("UPDATE_SEVEN_DAY_TARGET_VIEW",self,self.onViewUpdate);
	}

	/**
	*七日目标 目标列表更新
	*/
	__proto.onViewUpdate=function(){
		this.targetList.array=SevenDayTargetMgr.ins.getDisplayData(this.selectedDayIndex,this.selectedTargetTypeIndex);
		this.dayList.array=SevenDayTargetMgr.ins.DaysArray;
		this.refreshTime=SevenDayTargetMgr.ins.refreshTime;
		this.targetTypeTab.labels=SevenDayTargetMgr.ins.TargetEvents(this.selectedDayIndex);
		this.updateTimer();
	}

	__proto.onRenderTargetList=function(cell,index){
		cell.setData(index);
	}

	__proto.closeView=function(){
		UIMgr.ins.closeView("SevenDayTargetView");
	}

	__proto.onTabClick=function(index){
		this.selectedTargetTypeIndex=index;
		EventMgr.ins.event("UPDATE_SEVEN_DAY_TARGET_VIEW");
	}

	/**
	*更新刷新时间
	*/
	__proto.updateTimer=function(){
		var self=this;
		self.timeText.text=TimeManager.Instance.convertTimeToStr(self.refreshTime);
		if(self.refreshTime > 0){
			self.timeText.visible=true;
			self.timeBg.visible=true;
			Laya.timer.loop(1000,self,self.onTimer);
			self.onTimer();
		}
		else {
			Laya.timer.clearAll(self);
		}
	}

	__proto.onTimer=function(){
		var self=this;
		self.refreshTime--;
		self.timeText.text=TimeManager.Instance.convertTimeToStr(self.refreshTime);
		if(self.refreshTime <=0){
			Laya.timer.clearAll(self);
			this.closeView();
			SevenDayTargetMgr.ins.openState=false;
		}
	}

	__proto.removeEvent=function(){
		var self=this;
		self.topBar.btnBackCallBack.recover();
		self.topBar.btnBackCallBack=null;
		self.dayList.renderHandler.recover();
		self.dayList.renderHandler=null;
		self.dayList.mouseHandler.recover();
		self.dayList.mouseHandler=null;
		self.targetTypeTab.selectHandler.recover();
		self.targetTypeTab.selectHandler=null;
		EventMgr.ins.off("UPDATE_SEVEN_DAY_TARGET_VIEW",self,self.onViewUpdate);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return SevenDayTargetMainView;
})(sevenDayTargetMainViewUI)


//class modules.shareGift.view.ShareCardItem extends ui.shareGift.ShareCardItemUI
var ShareCardItem=(function(_super){
	function ShareCardItem(){
		this.data=null;
		this._vo=null;
		this._skillVo=null;
		this.img_select=null;
		ShareCardItem.__super.call(this);
		this.addEvent();
	}

	__class(ShareCardItem,'modules.shareGift.view.ShareCardItem',_super);
	var __proto=ShareCardItem.prototype;
	__proto.addEvent=function(){
		this.card.on("click",this,this.onClickHandler);
		EventMgr.ins.on("CHAGNGE_CLICK_ITEM_UPDATE",this,this.showChooseEffect);
	}

	__proto.onClickHandler=function(){
		ShareGiftMgr.ins.currentSkillId=this._skillVo.SkillID;
		ShareGiftMgr.ins.currentShareId=this._vo.ID;
		EventMgr.ins.event("CHAGNGE_CLICK_ITEM_UPDATE");
	}

	__proto.showChooseEffect=function(){
		if(!this.img_select){
			this.img_select=new AniSkeleton("assets/animation/uieffect/juanka_xz.sk",null,0,true);
			this.img_select.x=33.5;
			this.img_select.y=110;
			this.addChild(this.img_select);
		}
		if(this._vo&&ShareGiftMgr.ins.currentShareId==this._vo.ID){
			this.img_select.visible=true;
			}else{
			this.img_select.visible=false;
		}
	}

	__proto.setData=function(vo){
		this._vo=vo;
		this._skillVo=SkillModel.getSkillConfigData(ItemModel.getItemConfigData(vo.ItemId).Param1);
		this.card.skillVo=this._skillVo;
		this.data=SkillModel.getSkillPerformanceBySkillId(this._skillVo.Display);
		var configID=this._skillVo.Quality==0 ? 1062 :1063;
		var getCardAry=ConfigModel.getConfigData(configID).ConfigValue.split(",");
		var info=SkillMgr.ins.model.getHasCard(this._skillVo.SkillID);
		var hasCount=this._skillVo.skillCard;
		if(info){
			hasCount=info.skillCard;
		}
		this.lab_have.text=LanguageMgr.Ins.GetLan("9002305")+hasCount+"/"+this._skillVo.CostSkillPoint;
		this.lab_share.text=LanguageMgr.Ins.GetLan("9070087")+vo.ItemNum;
		this.showChooseEffect();
	}

	__proto.destroy=function(isDestroy){
		(isDestroy===void 0)&& (isDestroy=true);
		this.card.off("click",this,this.onClickHandler);
		EventMgr.ins.off("CHAGNGE_CLICK_ITEM_UPDATE",this,this.showChooseEffect);
		if(this.img_select)this.img_select.destroy(true);
		laya.ui.View.prototype.destroy.call(this,true);
	}

	return ShareCardItem;
})(ShareCardItemUI)


//class modules.shareNewCard.NewCardItem extends ui.shareNewCard.NewCardItemUI
var NewCardItem=(function(_super){
	function NewCardItem(){
		NewCardItem.__super.call(this);
	}

	__class(NewCardItem,'modules.shareNewCard.NewCardItem',_super);
	var __proto=NewCardItem.prototype;
	__proto.setData=function(vo){
		var skillPer=SkillModel.getSkillPerformanceBySkillId(vo.Display);
		this.img_weapon.visible=vo.Type==2;
		if(vo.Quality >=3){
			this.imgBG.width=122;
			this.imgBG.height=154;
			this.imgBG.skin="assets/textrue/common/skillFrame/ui_card_3.png";
		}
		else{
			this.imgBG.width=120;
			this.imgBG.height=145;
			this.imgBG.skin="assets/textrue/common/skillFrame/ui_card_"+vo.Quality+".png";
		}
		if(UrlParam.PARAMS["PLID"]=="fb"){
			this.imgIcon.skin="assets/textrue/shared/card/"+skillPer.Icon;
			}else{
			this.imgIcon.skin="assets/textrue/itemicon/"+vo.Icon;
		}
		this.imgNew.visible=true;
		this.imgNew.zOrder=99;
	}

	return NewCardItem;
})(NewCardItemUI)


/**
*宝箱列表子项
*/
//class modules.shop.item.ChestListItem extends ui.shop.ChestListItemUI
var ChestListItem=(function(_super){
	function ChestListItem(){
		this._shopInfo=null;
		ChestListItem.__super.call(this);
	}

	__class(ChestListItem,'modules.shop.item.ChestListItem',_super);
	var __proto=ChestListItem.prototype;
	__proto.setData=function(info){
		this._shopInfo=info;
		var vo=ShopModel.getShopConfigByID(this._shopInfo.shopId);
		if(!vo)return;
		var shopItem=vo.ShopItem;
		if(shopItem.indexOf("|")!=-1){
			var arr=shopItem.split("|");
			var str=arr[0];
			var arr1=str.split(",");
			var str1=arr[1];
			var arr2=str1.split(",");
			this.txtCoin.text=arr2[1];
			this.coinImg.visible=true;
			var itemVo=ItemModel.getItemConfigData(arr1[0]);
			if(itemVo){
				this.chestIcon.skin=StringUtils.formate("assets/textrue/itemicon/{0}.png",itemVo.Icon);
			}
			itemVo=null;
		};
		var price=vo.Price+this._shopInfo.buyCount *vo.AddPrice;
		this.txtDmd.text=price.toString();
		if(PlayerInfo.instance.pinkDiamond >price){
			this.txtDmd.color="#ffffff"
			this.txtDmd.stroke=0;
			}else{
			this.txtDmd.color="#FF0000";
			this.txtDmd.strokeColor="#ffcead";
			this.txtDmd.stroke=2;
		}
		vo=null;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this._shopInfo=null;
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return ChestListItem;
})(ChestListItemUI)


/**
*钻石、金币、粉钻列表子项
*/
//class modules.shop.item.DiamondListItem extends ui.shop.DiamondListItemUI
var DiamondListItem=(function(_super){
	function DiamondListItem(){
		this._shopInfo=null;
		this._shopVo=null;
		this._idx=0;
		this._nextAdTime=0;
		DiamondListItem.__super.call(this);
		this.labTxtSend.text=LanguageMgr.Ins.GetLan("10001173");
	}

	__class(DiamondListItem,'modules.shop.item.DiamondListItem',_super);
	var __proto=DiamondListItem.prototype;
	__proto.setData=function(info,index){
		this._idx=index+1;
		this._shopInfo=info;
		this._shopVo=ShopModel.getShopConfigByID(this._shopInfo.shopId);
		if(!this._shopVo)return;
		if(this._shopVo.Type==5){
			this.setCoinData();
			}else if(this._shopVo.Type==7){
			this.setPinkData();
			}else if(this._shopVo.Type==2){
			this.setDiamondData();
		}
	}

	__proto.setDiamondData=function(){
		this.icon.skin="assets/textrue/shop/"+this._shopVo.itemSkin;
		this.txtName.text=LanguageMgr.Ins.GetLan(this._shopVo.Name);
		var type;
		type="14300130";
		this.txtMoney.text=LanguageMgr.Ins.GetLan(type,int(this._shopVo.Price)/ 100);
		this.txtMoney.visible=true;
		this.txtDmd.visible=false;
		var shopItem=this._shopVo.ShopItem;
		var shopItemArr;
		if(shopItem.indexOf("|")==-1){
			this.txtCnt.visible=true;
			this.giftIcon.visible=true;
			this.monthCardTips.visible=false;
			this.sendIcon.visible=true;
			this.txtSend.visible=true;
			this.labTxtSend.visible=true;
			this.monthCardTipsText.visible=false;
			shopItemArr=shopItem.split(",");
			var item=ItemModel.getItemConfigData(shopItemArr[0]);
			this.giftIcon.skin=PathMgr.getBoxIcon(item.Icon);
			this.txtCnt.text=""+shopItemArr[1];
			this.giftIcon.x=this.txtCnt.x+(this.txtCnt.width>>1)-(this.txtCnt.textField.textWidth>>1)-42;
		}
		this.doubleImg.visible=false;
		this.sendBox.visible=true;
		var itemVo;
		var arr=this._shopVo.PresentItem.split("|"),getArr;
		if(this._shopVo.IsDouble && this._shopInfo.buyCount<=0){
			this.doubleImg.visible=true;
			this.doubleImg.skin="language/Chinese/shop/ui_souchong.png";
			itemVo=ItemModel.getItemConfigData(shopItemArr[0]);
			this.sendIcon.skin=PathMgr.getBoxIcon(itemVo.Icon);
			this.txtSend.text=""+shopItemArr[1];
		}
		else if(this._shopInfo.buyCount==1){
			this.doubleImg.visible=true;
			this.doubleImg.skin="language/Chinese/shop/ui_meirichong.png";
			getArr=arr[0].split(",");
			itemVo=ItemModel.getItemConfigData(getArr[0]);
			if(itemVo){
				this.sendIcon.skin=PathMgr.getBoxIcon(itemVo.Icon);
				this.txtSend.text=getArr[1]+"";
				this.txtSend.visible=itemVo.ItemID<0;
			}
		}
		else {
			getArr=arr[1].split(",");
			itemVo=ItemModel.getItemConfigData(getArr[0]);
			if(itemVo){
				this.sendIcon.skin=PathMgr.getBoxIcon(itemVo.Icon);
				this.txtSend.text=getArr[1]+"";
				this.txtSend.visible=itemVo.ItemID<0;
			}
		}
		this.diaIcon.visible=false;
	}

	// showPresent();
	__proto.setPinkData=function(){
		this.showPriceDmd();
	}

	__proto.setCoinData=function(){
		this.showPriceDmd();
		var price=this._shopVo.Price+this._shopVo.AddPrice *this._shopInfo.buyCount;
		this.txtDmd.text=price.toString();
		this.txtMoney.visible=false;
		this.txtDmd.visible=true;
		var account=this._shopVo.CurrencyType==2 ? PlayerInfo.instance.diamond :PlayerInfo.instance.pinkDiamond;
		if(account >=price){
			this.txtDmd.color="#ffffff"
			this.txtDmd.stroke=0;
			}else{
			this.txtDmd.color="#FF0000";
			this.txtDmd.strokeColor="#ffcead";
			this.txtDmd.stroke=2;
		}
	}

	__proto.showPriceDmd=function(){
		this.txtName.text=LanguageMgr.Ins.GetLan(this._shopVo.Name);
		this.diaIcon.visible=true;
		if(this._shopVo.CurrencyType==4){
			this.diaIcon.skin=PathMgr.getBoxIcon("pink");
			}else if(this._shopVo.CurrencyType==2){
			this.diaIcon.skin=PathMgr.getBoxIcon("gems");
			}else if(this._shopVo.CurrencyType==-1){
			this.diaIcon.skin="shop/ui_spx.png";
		}
		this.txtDmd.text=this._shopVo.Price.toString();
		this.txtMoney.visible=false;
		this.txtDmd.visible=true;
		var account=this._shopVo.CurrencyType==2 ? PlayerInfo.instance.diamond :PlayerInfo.instance.pinkDiamond;
		if(account >=this._shopVo.Price){
			this.txtDmd.color="#ffffff"
			this.txtDmd.stroke=0;
			}else{
			this.txtDmd.color="#FF0000";
			this.txtDmd.strokeColor="#ffcead";
			this.txtDmd.stroke=2;
		};
		var iconSkin="assets/textrue/shop/"+this._shopVo.itemSkin;
		var isWacthAd=false;
		var shopItem=this._shopVo.ShopItem,isMonthCard=false;
		if(shopItem.indexOf("|")==-1){
			var arr=shopItem.split(",");
			var item=ItemModel.getItemConfigData(arr[0]);
			this.giftIcon.skin=PathMgr.getBoxIcon(item.Icon);
			if(item && item.Type==6 && item.SubType==1){
				isMonthCard=true;
				this.txtCnt.visible=false;
				this.giftIcon.visible=false;
				this.sendIcon.visible=false;
				this.txtSend.visible=false;
				this.labTxtSend.visible=false;
				this.monthCardTipsText.visible=true;
				this.monthCardTips.visible=true;
				iconSkin="assets/textrue/language/Chinese/itemicon/ui_fengzhuang021.png";
				var qVO=QuestConditionModel.getInfoById("9201100");
				var rewards=qVO.Rewards.split("|");
				var iVO=ItemModel.getItemConfigData(rewards[0]);
				var eveDayNum=parseInt(rewards[1]);
				var nowGetNum=parseInt(this._shopVo.PresentItem.split(",")[1])
				var allNum=eveDayNum*30+nowGetNum;
				this.monthCardText_1.text=LanguageMgr.Ins.GetLan("14300208");
				this.monthCardText_2.text=""+nowGetNum;
				this.monthCardText_3.text=LanguageMgr.Ins.GetLan("14300209",eveDayNum);
				this.monthCardTipsText.text=LanguageMgr.Ins.GetLan("14300207",(allNum/nowGetNum));
			}
			else if(this._shopVo.CurrencyType==-1 && this._shopVo.Price==-1){
				isWacthAd=true;
				this.txtDmd.text=LanguageMgr.Ins.GetLan("14300392");
				this.txtDmd.strokeColor="#825236";
				this.txtDmd.stroke=2;
				this.sendBox.visible=false;
				this.monthCardTips.visible=false;
				this.txtCnt.visible=true;
				this.giftIcon.visible=true;
				this.txtCnt.text=arr[1];
				this.giftIcon.x=this.txtCnt.x+(this.txtCnt.width>>1)-(this.txtCnt.textField.textWidth>>1)-42;
				this._nextAdTime=(ADMgr.ins.rewardTime-TimeManager.Instance.NowTime())/1000;
				this._nextAdTime < 0 && (this._nextAdTime=0);
				if(this._nextAdTime > 0){
					this.onTimerHandler();
					Laya.timer.loop(1000,this,this.onTimerHandler);
				}
			}
			else{
				this.txtCnt.visible=true;
				this.giftIcon.visible=true;
				this.monthCardTipsText.visible=false;
				this.monthCardTips.visible=false;
				this.sendIcon.visible=true;
				this.txtSend.visible=true;
				this.labTxtSend.visible=true;
				this.monthCardTipsText.visible=false;
				this.txtCnt.text=arr[1];
				this.giftIcon.x=this.txtCnt.x+(this.txtCnt.width>>1)-(this.txtCnt.textField.textWidth>>1)-42;
			}
		}
		this.icon.skin=iconSkin;
		this.doubleImg.visible=this._shopVo.IsDouble==1;
		!isMonthCard && !isWacthAd &&this.showPresent();
	}

	__proto.onTimerHandler=function(){
		var timeStr=TimeManager.Instance.convertTimeToStr(this._nextAdTime);
		var index=timeStr.indexOf(":");
		timeStr=timeStr.substr(index+1,timeStr.length-index-1);
		this._nextAdTime--;
		if(this._nextAdTime < 0){
			Laya.timer.clear(this,this.onTimerHandler);
			this.txtDmd.text=LanguageMgr.Ins.GetLan("14300392");
			this.mouseEnabled=true;
			this.diaIcon.visible=true;
			this.txtDmd.visible=true;
			this.txtMoney.visible=false;
		}
		else{
			this.mouseEnabled=false;
			this.diaIcon.visible=false;
			this.txtDmd.visible=false;
			this.txtMoney.visible=true;
			this.txtMoney.text=LanguageMgr.Ins.GetLan("14300393")+"("+timeStr+")";
		}
	}

	__proto.showPresent=function(){
		if(this._shopVo.PresentItem !="0"){
			var arr=this._shopVo.PresentItem.split(",");
			var itemVo=ItemModel.getItemConfigData(arr[0]);
			if(itemVo){
				this.sendIcon.skin=PathMgr.getBoxIcon(itemVo.Icon);
				this.txtSend.text=arr[1]+"";
				this.txtSend.visible=itemVo.ItemID<0;
			}
			this.sendBox.visible=true;
			}else{
			this.sendBox.visible=false;
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this._shopInfo=null;
		this._shopVo=null;
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return DiamondListItem;
})(DiamondListItemUI)


//class modules.showGood.item.GoodItem extends ui.activity.item.GoodItemUI
var GoodItem=(function(_super){
	function GoodItem(){
		GoodItem.__super.call(this);
	}

	__class(GoodItem,'modules.showGood.item.GoodItem',_super);
	var __proto=GoodItem.prototype;
	__proto.setData=function(data){
		var vo=ItemModel.getItemConfigData(data.itemId);
		if(vo.ItemID===-50){
			this.imgIcon.skin='assets/textrue/language/'+LanguageMgr.Ins.country+'/itemicon/'+vo.Icon+'.png';
			}else {
			this.imgIcon.skin='assets/textrue/itemicon/'+vo.Icon+'.png';
		}
		this.labCount.text=data.count.toString();
		this.labName.text=LanguageMgr.Ins.GetLan(vo.Name.toString());
	}

	return GoodItem;
})(GoodItemUI)


//class modules.vs.MatchRole extends ui.vs.MatchRoleUI
var MatchRole$1=(function(_super){
	function MatchRole(){
		this.playerSkeleton=null;
		this.roleimage=null;
		this.loadPercent=0;
		this.isOk=false;
		MatchRole.__super.call(this);
		this.reset();
	}

	__class(MatchRole,'modules.vs.MatchRole',_super,'MatchRole$1');
	var __proto=MatchRole.prototype;
	__proto.reset=function(){
		this.bg.visible=true;
		this.wenhao.visible=true;
		this.head.visible=false;
		this.ok.visible=false;
		this.hongdi.visible=false;
		this.landi.visible=false;
		this.level.visible=false;
		this.nickName.visible=false;
		this.gulid.visible=false;
		this.jiangbei.visible=false;
		this.jiangbeishu.visible=false;
		this.loadnum.visible=false;
		this.guildicon.visible=false;
	}

	__proto.initRole=function(battlePlayerMsg,isShowbei){
		this.reset();
		this.wenhao.visible=false;
		this.head.visible=true;
		var headUrl;
		if(!battlePlayerMsg.headUrl){
			battlePlayerMsg.headUrl="";
		}
		if(battlePlayerMsg.headUrl.indexOf("http")==-1 && battlePlayerMsg.headUrl !=""){
			var avatar="assets/textrue/aihead/"+battlePlayerMsg.headUrl+".png";
			headUrl=avatar;
		}
		else{
			headUrl=battlePlayerMsg.headUrl;
		}
		if(headUrl){
			PlayerInfoMgr.ins.getHeadImgUrl(headUrl,Handler.create(this,function(url){
				this.head.skin=url;
			}));
		}
		this.level.visible=true;
		this.level.text=""+battlePlayerMsg.level;
		this.nickName.visible=true;
		this.nickName.text=StringUtils.subName(battlePlayerMsg.nickName,130,20);
		this.gulid.visible=true;
		this.gulid.text=battlePlayerMsg.guildName?battlePlayerMsg.guildName:"";
		this.guildicon.visible=false;
		var iconId=battlePlayerMsg.guildIconId;
		if(iconId >=1){
			if(iconId < 10){
				this.guildicon.skin="assets/textrue/badge/ui_icon_0"+iconId+".png";
				}else{
				this.guildicon.skin="assets/textrue/badge/ui_icon_"+iconId+".png";
			}
			this.guildicon.visible=true;
		}
		if(battlePlayerMsg.userId !=PlayerInfo.instance.playerId){
			this.nickName.strokeColor="#7d0000";
			this.gulid.color="#ffc4c4";
			this.gulid.strokeColor="#7d0000";
			this.hongdi.visible=true;
			this.landi.visible=false;
			}else{
			this.nickName.strokeColor="#004995";
			this.gulid.color="#afdbe4";
			this.gulid.strokeColor="#004995";
			this.hongdi.visible=false;
			this.landi.visible=true;
		}
		if(isShowbei){
			this.jiangbei.visible=true;
			this.jiangbeishu.visible=true;
			this.jiangbeishu.text=""+battlePlayerMsg.trophy;
			}else{
			this.jiangbei.visible=false;
			this.jiangbeishu.visible=false;
		}
	}

	__proto.updateLoad=function(){
		this.loadPercent=this.loadPercent+3;
		this.loadPercent=this.loadPercent>=100?100:this.loadPercent;
		this.loadnum.value=this.loadPercent+"%";
		if(this.loadPercent==100){
			this.ok.visible=true;
			this.loadnum.visible=false;
			this.isOk=true;
			EventMgr.ins.event("vs_load_pk");
			Laya.timer.clear(this,this.updateLoad);
		}
	}

	__proto.load=function(){
		this.loadPercent=0;
		this.isOk=false;
		this.loadnum.visible=true;
		var num=Math.floor(Math.random()*10)%3;
		num=num<=0?1:num;
		Laya.timer.frameLoop(num,this,this.updateLoad);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		Laya.timer.clear(this,this.updateLoad);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return MatchRole;
})(MatchRoleUI)


//class modules.skill.item.AttributeItem extends ui.skill.item.AttributeItemUI
var AttributeItem=(function(_super){
	function AttributeItem(){
		this.attAry=null;
		this.nextAttArray=null;
		AttributeItem.__super.call(this);
		this.init();
	}

	__class(AttributeItem,'modules.skill.item.AttributeItem',_super);
	var __proto=AttributeItem.prototype;
	__proto.init=function(){}
	__proto.setData=function(value,nextAtt,showAdd,isFull,fontColor,isShowEffect,gold){
		(nextAtt===void 0)&& (nextAtt="");
		(showAdd===void 0)&& (showAdd=true);
		(isFull===void 0)&& (isFull=false);
		(fontColor===void 0)&& (fontColor="#a67153");
		(isShowEffect===void 0)&& (isShowEffect=true);
		(gold===void 0)&& (gold=0);
		if (value==null){
			this.visible=false;
			return;
		}
		else{
			this.visible=true;
		}
		this.lab_content1.color=fontColor;
		this.lab_arr1.color=fontColor;
		this.attAry=[];
		this.attAry=value.split("|");
		if (nextAtt !=""){
			this.nextAttArray=[];
			this.nextAttArray=nextAtt.split("|");
		}
		this.img_icon1.skin="assets/textrue/common/icon/"+this.attAry[0]+".png";
		this.lab_content1.text=LanguageMgr.Ins.GetLan(this.attAry[1]);
		var dec=this.attAry[2];
		this.lab_add1.visible=false;
		if (dec.indexOf("%")!=-1){
			if (nextAtt !="" && isFull && showAdd){
				var add=parseInt(String(this.nextAttArray[2]).split("%")[0]);
				var att=parseInt(String(dec).split("%")[0]);
				this.lab_add1.text="+"+(add-att)+"%";
				this.lab_add1.visible=add-att !=0;
			}
			this.lab_arr1.text=dec;
		}
		else{
			if (parseInt(dec)> 100000){
				this.lab_arr1.text=LanguageMgr.Ins.GetLan(dec);
			}
			else{
				if (nextAtt !="" && isFull && showAdd){
					var add1=parseInt(String(this.nextAttArray[2]));
					var att1=parseInt(String(this.attAry[2]));
					this.lab_add1.text="+"+(add1-att1);
					this.lab_add1.visible=add1-att1 !=0;
				}
				this.lab_arr1.text=dec;
			}
		}
	}

	// this.lab_add1.x=this.lab_arr1.width+this.lab_arr1.x;
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return AttributeItem;
})(AttributeItemUI)


/**
*
*@author baohua.chen
*
*/
//class modules.skill.item.SkillCard extends ui.skill.item.SkillCardUI
var SkillCard=(function(_super){
	function SkillCard(){
		this._skillVo=null;
		this._isGray=false;
		SkillCard.__super.call(this);
	}

	__class(SkillCard,'modules.skill.item.SkillCard',_super);
	var __proto=SkillCard.prototype;
	__proto.initView=function(){
		this.box.visible=true;
		this.level.text="Lv"+this._skillVo.Level.toString();
		this.waterNum.skin="skillItem/num"+this._skillVo.CostActPoint+".png";
		var mSkillPerData=SkillModel.getSkillPerformanceBySkillId(this._skillVo.Display);
		this.skillName.text=LanguageMgr.Ins.GetLan(mSkillPerData.NameDisplay);
		if(mSkillPerData.Icon)this.icon.skin="assets/textrue/skill/"+mSkillPerData.Icon;
		var qualiity="aaaaaa";
		this.starList.value=qualiity.substr(0,this._skillVo.Quality+1);
		var showInfo=this._skillVo.cardBtnInfo.split("|");
		this.numTxt.visible=this.numBg.visible=this.iconNum.visible=false;
		if(showInfo&&showInfo.length==2){
			this.numTxt.visible=this.numBg.visible=this.iconNum.visible=true;
			this.numTxt.text=showInfo[1]+"";
			this.numTxt.align="left";
			switch(parseInt(showInfo[0])){
				case 1:
					this.numBg.skin="skillItem/numBG1.png";
					this.iconNum.visible=false;
					this.numTxt.strokeColor="#760000";
					this.numTxt.x=102;
					this.numTxt.align="center";
					break ;
				case 2:
					this.numBg.skin="skillItem/numBG2.png";
					this.iconNum.skin="skillItem/iconNum2.png";
					this.numTxt.strokeColor="#4c0764";
					this.numTxt.x=109;
					break ;
				case 3:
					this.numBg.skin="skillItem/numBG3.png";
					this.iconNum.skin="skillItem/iconNum3.png";
					this.numTxt.strokeColor="#263989";
					this.numTxt.x=113;
					break ;
				case 4:
					this.numBg.skin="skillItem/numBG4.png";
					this.iconNum.skin="skillItem/iconNum4.png";
					this.numTxt.strokeColor="#773f00";
					this.numTxt.x=114;
					break ;
				case 5:
					this.numBg.skin="skillItem/numBG5.png";
					this.iconNum.skin="skillItem/iconNum5.png";
					this.numTxt.strokeColor="#11447e";
					this.numTxt.x=114;
					break ;
				case 6:
					this.numBg.skin="skillItem/numBG6.png";
					this.iconNum.skin="skillItem/iconNum6.png";
					this.numTxt.strokeColor="#135201";
					this.numTxt.x=111;
					break ;
				}
		}
		if(this._isGray){
			if(SkillMgr.ins.model.getHasCardVo(this._skillVo.SkillID)){
				this.gray=false;
				}else{
				this.gray=true;
			}
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'skillVo',function(){
		return this._skillVo;
		},function(value){
		this._skillVo=value;
		if(this._skillVo)this.initView();
	});

	__getset(0,__proto,'isGray',null,function(value){
		this._isGray=value;
	});

	return SkillCard;
})(SkillCardUI)


//class modules.skill.item.SkillCardMin extends ui.skill.item.SkillCardMinUI
var SkillCardMin=(function(_super){
	function SkillCardMin(){
		this._skillVo
		SkillCardMin.__super.call(this);
	}

	__class(SkillCardMin,'modules.skill.item.SkillCardMin',_super);
	var __proto=SkillCardMin.prototype;
	__proto.initUI=function(){
		var mSkillPerData=SkillModel.getSkillPerformanceBySkillId(this._skillVo.Display);
		if(mSkillPerData.Icon)this.icon.skin="assets/textrue/skill/min/"+mSkillPerData.Icon;
	}

	__getset(0,__proto,'skillVo',function(){
		return this._skillVo;
		},function(value){
		this._skillVo=value;
		if(this._skillVo)this.initUI();
	});

	return SkillCardMin;
})(SkillCardMinUI)


/**
*
*@author baohua.chen
*
*/
//class modules.skill.item.SkillGuildItem extends ui.skill.item.SkillGuildItemUI
var SkillGuildItem=(function(_super){
	function SkillGuildItem(){
		this._skillVo=null;
		SkillGuildItem.__super.call(this);
		this.list.renderHandler=new Handler(this,this.onRender);
		this.list.mouseHandler=new Handler(this,this.mouseHandler);
	}

	__class(SkillGuildItem,'modules.skill.item.SkillGuildItem',_super);
	var __proto=SkillGuildItem.prototype;
	__proto.initView=function(){
		this.isTuijian.visible=this._skillVo.ShowIcon;
		var desAry=LanguageMgr.Ins.GetLan(this._skillVo.GroupDescription).split("|");
		this.guildName.text=desAry[0];
		this.guildMsg.text=desAry[1];
		var dataList=this._skillVo.SkillID.split(",");
		this.list.dataSource=dataList;
		this.list.refresh();
		this.henIcon.x=this.list.x+dataList.length*83+10;
		this.guildMsg.x=this.henIcon.x+10;
		this.isUse.visible=this._skillVo.isUser;
		if(this._skillVo.isHas){
			this.guildName.color="#ffffff";
			}else{
			this.guildName.color="#d2b9cd";
		}
	}

	__proto.mouseHandler=function(e,index){
		if(e.type !="click")return;
		var skillId=this.list.dataSource[index];
		var itemVO=ItemModel.getItemBySkillId(SkillModel.getSkillConfigData(skillId).BasicSkill);
		TipsManager.Instance().addItemTip(itemVO,e);
	}

	__proto.onRender=function(item,index){
		if(item){
			var skillId=this.list.dataSource[index];
			item.isGray=true;
			item.skillVo=SkillModel.getSkillConfigData(skillId);
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'skillVo',null,function(value){
		this._skillVo=value;
		this.initView();
	});

	return SkillGuildItem;
})(SkillGuildItemUI)


/**
*
*@author baohua.chen
*
*/
//class modules.skill.item.SkillItem extends ui.skill.item.SkillItemUI
var SkillItem=(function(_super){
	function SkillItem(){
		this._skillVo=null;
		this._aiMc=null;
		SkillItem.__super.call(this);
		this.addEvent();
	}

	__class(SkillItem,'modules.skill.item.SkillItem',_super);
	var __proto=SkillItem.prototype;
	__proto.addEvent=function(){
		this.on("click",this,this.onClickHandler);
	}

	__proto.initView=function(){
		this.card.skillVo=this._skillVo;
		if(SkillMgr.ins.isUserSkill(this._skillVo.SkillID)){
			this.zhezao.visible=this.isUse.visible=true;
			}else{
			this.zhezao.visible=this.isUse.visible=false;
		};
		var costSkillPoint=this._skillVo.CostSkillPoint
		if(PlayerInfo.instance.isOpenMasterResourceCard){
			costSkillPoint=PrivilegeModel.getPrivilegePrice(costSkillPoint,3+"_"+4);
		}
		this.bar.value=Number(this._skillVo.skillCard/costSkillPoint);
		if(this._skillVo.skillCard>=costSkillPoint && this.skillVo.NextSkill !=0){
			this.bar.skin="skill/progress_2.png";
			this.barText.text=LanguageMgr.Ins.GetLan(14300116);
			this._aiMc=new AniSkeleton("ui_jiantou","ui");
			this.addChild(this._aiMc);
			this._aiMc.playSkeleton(0,true);
			this._aiMc.x=15;
			this._aiMc.y=200;
			}else{
			this.bar.skin="skill/progress_1.png";
			this.barText.text=this._skillVo.skillCard+"/"+costSkillPoint;
			this.bar.value=Number(this._skillVo.skillCard/costSkillPoint);
		}
		if(this.skillVo.NextSkill==0){
			this.bar.skin="skill/progress_3.png";
			this.barText.text=LanguageMgr.Ins.GetLan(14300118);
		}
		if(!this.skillVo.IsHave){
			this.card.gray=true;
			this.barText.stroke=2;
			this.barText.strokeColor="#980700";
			if(this.skillVo.Open <=RankModel.getDivisionByTrophy(PlayerInfo.instance.trophy)+9060080){
				this.barText.text=LanguageMgr.Ins.GetLan(14300367);
				}else{
				var rankPlace=LanguageMgr.Ins.GetLan(this.skillVo.Open);
				this.barText.text=LanguageMgr.Ins.GetLan(14300368,rankPlace);
			}
			}else{
			this.card.gray=false;
			this.barText.stroke=0;
		}
	}

	__proto.onClickHandler=function(){
		SkillMgr.ins.currentInfo=this._skillVo;
		UIMgr.ins.openView("CardMessageView");
	}

	__proto.removeEvent=function(){
		this.off("click",this,this.onClickHandler);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		if(this._aiMc){
			this._aiMc.destroy();
			this._aiMc=null;
		}
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'skillVo',function(){
		return this._skillVo;
		},function(value){
		if(this._aiMc){
			this._aiMc.destroy();
			this._aiMc=null;
		}
		this._skillVo=value;
		this.initView();
	});

	return SkillItem;
})(SkillItemUI)


//class modules.skill.item.SkillUserItem extends ui.skill.item.SkillUserItemUI
var SkillUserItem=(function(_super){
	function SkillUserItem(){
		this._skillVo=null;
		this._isOpen=false;
		//是否开放
		this._index=0;
		this._needGrade=0;
		SkillUserItem.__super.call(this);
		this.addEvent();
	}

	__class(SkillUserItem,'modules.skill.item.SkillUserItem',_super);
	var __proto=SkillUserItem.prototype;
	__proto.addEvent=function(){
		this.card.on("click",this,this.onClickCardHandler);
		this.btnRemove.on("click",this,this.onClickHandler);
	}

	__proto.initView=function(){
		this.card.visible=this.skillLevel.visible=this.startList.visible=this.skillName.visible=this.btnRemove.visible=false;
		var gradeIndex=SkillMgr.ins.model.getIsOpenByIndx(this._index);
		this._isOpen=gradeIndex==0?true:false;
		this.noCard.visible=false;
		if(!this._isOpen){
			this.bg.gray=true;
			this.noOpenBg.visible=this.noOpenLock.visible=this.noOpenMsg.visible=true;
			this.noOpenMsg.text=LanguageMgr.Ins.GetLan("14300063",gradeIndex);
			return;
		}
		this.bg.gray=false;
		this.noOpenBg.visible=this.noOpenLock.visible=this.noOpenMsg.visible=false;
		if(this._skillVo){
			var mSkillPerData=SkillModel.getSkillPerformanceBySkillId(this._skillVo.Display);
			this.card.visible=this.skillLevel.visible=this.startList.visible=this.skillName.visible=this.btnRemove.visible=true;
			this.card.skillVo=this._skillVo;
			this.card.starList.visible=false;
			var qualiity="aaaaaa";
			this.startList.value=qualiity.substr(0,this._skillVo.Quality+1);
			this.skillName.text=LanguageMgr.Ins.GetLan(mSkillPerData.NameDisplay);
			this.startList.x=this.skillName.x+this.skillName.textWidth+5;
			this.skillLevel.text="Lv."+this._skillVo.Level+"";
			}else{
			this.noCard.visible=true;
		}
	}

	__proto.onClickCardHandler=function(){
		if(!NewGuideMgr.ins.isCanClickSkillUserItem)return;
		if(!LevelGuideMgr.ins.isCanClickSkillUserItem)return;
		if(!this._skillVo)return;
		SkillMgr.ins.currentInfo=this._skillVo;
		UIMgr.ins.openView("CardMessageView");
	}

	__proto.onClickHandler=function(){
		if(!this._skillVo)return;
		SkillMgr.ins.changeUserSkill(this._skillVo.SkillID,-1);
	}

	__proto.removeEvent=function(){
		this.card.off("click",this,this.onClickCardHandler);
		this.btnRemove.off("click",this,this.onClickHandler);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'skillVo',function(){
		return this._skillVo;
		},function(value){
		this._skillVo=value;
		this.initView();
	});

	__getset(0,__proto,'index',null,function(value){
		this._index=value;
	});

	return SkillUserItem;
})(SkillUserItemUI)


/**
*
*@author baohua.chen
*
*/
//class modules.skill.view.SkillView extends ui.skill.view.SkillViewUI
var SkillView=(function(_super){
	function SkillView(){
		this.sortBtnNameList=null;
		SkillView.__super.call(this);
		this.addEvent();
		this.initView();
	}

	__class(SkillView,'modules.skill.view.SkillView',_super);
	var __proto=SkillView.prototype;
	Laya.imps(__proto,{"laya.ui.IResize":true})
	__proto.initView=function(){
		if(!ShopMgr.ins.IS_OPEN_PAY){
			this.goldBtn3.visible=false;
			this.goldBtn3.disabled=true;
		}
		this.tab.labels=LanguageMgr.Ins.GetLan("14300054");
		this.tipsTitle.text=LanguageMgr.Ins.GetLan("9007329");
		this.sortBtnNameList=LanguageMgr.Ins.GetLan("9007321").split(",");
		this.btnRareTxt.text=this.sortBtnNameList[SkillMgr.ins.sortIndex];
		this.tab.selectedIndex=0;
		this.onTabSelectHandler(0);
		this.onUpdateInfo();
	}

	__proto.initUserSkillInfo=function(){
		this.userList.dataSource=SkillMgr.ins.getUserCardList();
		var currentUserNum=SkillMgr.ins.model.currentUserNum;
		var maxUserSkillNum=SkillMgr.ins.model.getMaxUserSkillNum();
		var textColor=currentUserNum < maxUserSkillNum ? "#ff0000" :"#fffadd";
		var str="<span style='color:"+textColor+"'>"+currentUserNum+"</span>"+"<span style='color:#fffadd'>/"+maxUserSkillNum+"</span>";
		this.allTxt.text=str;
	}

	__proto.addEvent=function(){
		this.goldBtn1.on("click",this,this.onShopView,[1]);
		this.goldBtn2.on("click",this,this.onShopView,[1]);
		this.goldBtn3.on("click",this,this.onShopView,[4]);
		this.btnSave.on("click",this,this.onClickSaveHandler)
		this.btn_rare.on("click",this,this.onClickSortHandler);
		this.btnBreak.on("click",this,this.onClickBreakHandler);
		this.tipsBtn.on("click",this,this.onClickTipsHandler);
		this.tab.selectHandler=Handler.create(this,this.onTabSelectHandler,null,false);
		this.allList.renderHandler=Handler.create(this,this.onAllListRenderHandler,null,false);
		this.userList.renderHandler=Handler.create(this,this.onUserListRenderHandler,null,false);
		this.userList.scrollBar.on("change",this,this.userListScrollBarChange);
		this.guildList.renderHandler=Handler.create(this,this.onGuildListRenderHandler,null,false);
		EventMgr.ins.on("SKILL_UPGRADE",this,this.onUpdateInfo);
		EventMgr.ins.on("SKILL_UPDATE",this,this.onUpdateInfo)
		PlayerInfoMgr.ins.on("player_info_change",this,this.onUpdate);;
		ResizeMgr.addListener(this,true);
	}

	__proto.onUpdate=function(){
		this.goldTxt1.text=PlayerInfo.instance.gold.toString();
		this.goldTxt2.text=PlayerInfo.instance.pinkDiamond.toString();
		this.goldTxt3.text=PlayerInfo.instance.diamond.toString();
	}

	__proto.onUpdateInfo=function(){
		this.allList.dataSource=SkillMgr.ins.getCardListByType(0);
		this.goldTxt1.text=PlayerInfo.instance.gold.toString();
		this.goldTxt2.text=PlayerInfo.instance.pinkDiamond.toString();
		this.goldTxt3.text=PlayerInfo.instance.diamond.toString();
		this.initUserSkillInfo();
		this.allList.refresh();
		EventMgr.ins.event("GuideNode_140_Step_2");
	}

	__proto.onClickSaveHandler=function(){
		if(SkillMgr.ins.isChangeSkill){
			SkillMgr.ins.changeUserSkillToServer();
			}else{
		}
	}

	// TipsManager.Instance().showLanTips(10);
	__proto.onClickSortHandler=function(){
		SkillMgr.ins.sortIndex++;
		if(SkillMgr.ins.sortIndex > 2){
			SkillMgr.ins.sortIndex=0;
		}
		this.btnRareTxt.text=this.sortBtnNameList[SkillMgr.ins.sortIndex];
		this.allList.dataSource=SkillMgr.ins.getCardListByType(0);
		this.allList.refresh();
	}

	__proto.onClickTipsHandler=function(){
		UIMgr.ins.openView("HelpDescriptionView",Handler.create(this,function(view){
			view.initHelp(9);
		}));
	}

	__proto.onClickBreakHandler=function(){
		var len=SkillMgr.ins.getCurrentCount();
		var max=SkillMgr.ins.model.getMaxUserSkillNum();
		if(len!=max){
			TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("14300175"),LanguageMgr.Ins.GetLan("9002240"),LanguageMgr.Ins.GetLan("9002241"),Handler.create(this,function(){
				UIMgr.ins.closeView("SkillSystem");
			}));
			}else{
			if(SkillMgr.ins.isChangeSkill){
				TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("14300120"),LanguageMgr.Ins.GetLan("9002240"),LanguageMgr.Ins.GetLan("9002241"),Handler.create(this,this.yesCellBackFun),Handler.create(this,this.noCellBackFun));
				}else{
				UIMgr.ins.closeView("SkillSystem");
			}
		}
	}

	__proto.yesCellBackFun=function(){
		SkillMgr.ins.changeUserSkillToServer();
		Laya.timer.once(300,this,this.noCellBackFun);
	}

	__proto.noCellBackFun=function(){
		UIMgr.ins.closeView("SkillSystem");
	}

	__proto.onTabSelectHandler=function(index){
		SoundMgr.instance.playBtttonSound();
		switch(index){
			case 0:
				this.allList.visible=this.btn_rare.visible=true;
				this.guildList.visible=false;
				break ;
			case 1:
				this.allList.visible=this.btn_rare.visible=false;
				this.guildList.visible=true;
				this.guildList.dataSource=SkillMgr.ins.model.getGuildSkillList();
				break ;
			}
	}

	__proto.onShopView=function(tabIndex){
		ShopMgr.ins.selectedIndex=tabIndex;
		UIMgr.ins.openView("ShopView");
	}

	__proto.onAllListRenderHandler=function(item,index){
		if(item){
			item.skillVo=this.allList.dataSource[index];
		}
	}

	__proto.onUserListRenderHandler=function(item,index){
		if(item){
			item.index=index;
			item.skillVo=this.userList.dataSource[index];
		}
	}

	__proto.userListScrollBarChange=function(e){
		var scrollValue=this.userList.scrollBar.value;
		console.log("scrollValue:"+scrollValue);
		if(scrollValue >=180){
			EventMgr.ins.event("SlideEnd");
		}
	}

	__proto.onGuildListRenderHandler=function(item,index){
		if(item){
			item.skillVo=this.guildList.dataSource[index];
		}
	}

	__proto.removeEvent=function(){
		this.goldBtn1.off("click",this,this.onShopView);
		this.goldBtn2.off("click",this,this.onShopView);
		this.goldBtn3.off("click",this,this.onShopView);
		this.btnSave.off("click",this,this.onClickSaveHandler)
		this.btn_rare.off("click",this,this.onClickSortHandler);
		this.btnBreak.off("click",this,this.onClickBreakHandler);
		this.tipsBtn.off("click",this,this.onClickTipsHandler);
		this.userList.scrollBar.off("change",this,this.userListScrollBarChange);
		EventMgr.ins.off("SKILL_UPGRADE",this,this.onUpdateInfo);
		EventMgr.ins.off("SKILL_UPDATE",this,this.onUpdateInfo);
		PlayerInfoMgr.ins.off("player_info_change",this,this.onUpdate);
		this.tab.selectHandler.clear();
		ResizeMgr.removeListener(this);
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.scaleX=_bestFitWidth/1136;
		this.scaleY=_bestFitHeight/640;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		SkillMgr.ins.clearUseInfo();
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild);
	}

	return SkillView;
})(SkillViewUI)


//class modules.test.AnimationTestView extends ui.test.AnimationTestUI
var AnimationTestView=(function(_super){
	function AnimationTestView(){
		this.editCenterX=0;
		this.editCenterY=0;
		this.heroSkeleton=null;
		this.aniArr=[
		["blast","blast0"]
		,["blast","blast2"]
		,["blast","blast3"]
		,["blast","blast5"]
		,["blast","blast7"]
		,["blast","blast8"],["blast","blast8_1"]
		,["blast","blast9"]
		,["blast","blast10"]
		,["blast","blast11"]
		,["blast","blast14"]
		,["blast","blast15"]
		,["blast","blast24"]
		,["blast","blast25"]
		,["blast","blast26"],["blast","blast26_1"]
		,["blast","blast27"]];
		AnimationTestView.__super.call(this);
		this.mouseEnabled=true;
		this.mouseThrough=true;
	}

	__class(AnimationTestView,'modules.test.AnimationTestView',_super);
	var __proto=AnimationTestView.prototype;
	Laya.imps(__proto,{"laya.ui.IResize":true})
	__proto.createChildren=function(){
		_super.prototype.createChildren.call(this);
		this.infoTxt.visible=false;
		this.uiBox.mouseThrough=true;
		this.idComboBox.on("change",this,this.idCbxChangeHandler);
		this.idComboBox.selectedIndex=0;
		this.createRoleBtn.on("click",this,this.createRoleHandler);
		this.createBtn.on("click",this,this.createHandler);
		this.createOtherBtn.on("click",this,this.createOtherHandler);
		this.clearBtn.on("click",this,this.clearHandler);
		this.closeBtn.on("click",this,this.closeHandler);
		this.stateBtn.on("click",this,this.onOpenStateHandler);
		this.createEffectsBtn.on("click",this,this.createEffectsHandler);
		this.createEffectsBtn2.on("click",this,this.createEffectsHandler2);
		this.clearInfoBtn.on("click",this,this.clearInfoHandler);
		this.actionList.dataSource=[];
		this.actionList.on("click",this,this.clickActionListHandler);
		this.actionList.renderHandler=Handler.create(this,this.updateItem,null,false);
		this.playRateHS.on("change",this,this.onPlayRateChangedHandler);
		this.scaleRateHS.on("change",this,this.onScaleRateChangedHandler);
		this.bgAlphaChk.on("change",this,this.onBgAlphaChkChangedHandler);
		this.tileGridChk.on("change",this,this.onTileGridChkChangedHandler);
		this.editCenterX=this.editBg.x;
		this.editCenterY=this.editBg.y;
		this.typeComboBox.dataSource=["npc","obj","bomb","blast","buff","ui","effect","roleshow","guide","粒子","supply","weapon","blastframe","bombframe","buffframe","effectframe"];
	}

	__proto.updateItem=function(cell,index){
		var btn=cell.getChildByName("btn");
		btn.label=cell.dataSource
	}

	__proto.idCbxChangeHandler=function(){
		this.idTxt.text=this.typeComboBox.selectedLabel+this.idComboBox.selectedLabel;
	}

	__proto.onPlayRateChangedHandler=function(){
		if(this.heroSkeleton){
			if((this.heroSkeleton instanceof laya.particle.Particle2D )|| (this.heroSkeleton instanceof modules.test.EditParticle )){
			}
			else{
				this.heroSkeleton.playbackRate(this.playRate);
			}
		}
		this.playRateLab.text=this.playRate+"";
	}

	__proto.onScaleRateChangedHandler=function(){
		if(this.heroSkeleton){
			this.heroSkeleton.scale(this.scaleRate,this.scaleRate);
		}
		this.scaleRateLab.text=this.scaleRate+"";
	}

	__proto.onBgAlphaChkChangedHandler=function(){
		this.bg.alpha=this.bgAlphaChk.selected ? 0.6 :1;
	}

	__proto.onTileGridChkChangedHandler=function(){
		this.tileGridBg.visible=this.tileGridChk.selected;
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.bg.width=ResizeMgr.bestFitWidth;
		this.bg.height=ResizeMgr.bestFitHeight;
	}

	__proto.createRoleHandler=function(){
		if(this.heroSkeleton){
			this.showBox.removeChild(this.heroSkeleton);
			this.heroSkeleton=null;
		}
		this.heroSkeleton=new HeroSkeleton(this.roleComboBox.selectedLabel,this.equipComboBox.selectedLabel,null,Handler.create(this,this.loadComplete));
		this.heroSkeleton.playbackRate(this.playRate);
		this.heroSkeleton.scale(this.scaleRate,this.scaleRate);
		this.heroSkeleton.x=this.editCenterX;
		this.heroSkeleton.y=this.editCenterY;
		this.showBox.addChild(this.heroSkeleton);
		this.updateAniNum();
	}

	__proto.createHandler=function(){
		if(this.idTxt.text){
			if(this.heroSkeleton){
				this.showBox.removeChild(this.heroSkeleton);
				this.heroSkeleton=null;
			}
			if(this.typeComboBox.selectedLabel !="粒子"){
				if(this.typeComboBox.selectedLabel.indexOf("frame")==-1){
					this.heroSkeleton=new EditSkeleton(this.idTxt.text,this.typeComboBox.selectedLabel,Handler.create(this,this.loadComplete));
					this.heroSkeleton.playbackRate(this.playRate);
				}
				else{
					this.heroSkeleton=new EditAnimation(this.idTxt.text,this.typeComboBox.selectedLabel);
				}
				this.heroSkeleton.scale(this.scaleRate,this.scaleRate);
				this.heroSkeleton.x=this.editCenterX;
				this.heroSkeleton.y=this.editCenterY;
				this.showBox.addChild(this.heroSkeleton);
			}
			else{
				this.heroSkeleton=new EditParticle(this.idTxt.text);
				this.heroSkeleton.x=this.editCenterX;
				this.heroSkeleton.y=this.editCenterY;
				this.showBox.addChild(this.heroSkeleton);
			}
			this.updateAniNum();
		}
		else{
			this.log("参数id不能为空！");
		}
	}

	__proto.createOtherHandler=function(){
		if(this.otherTxt.text){
			if(this.heroSkeleton){
				this.showBox.removeChild(this.heroSkeleton);
				this.heroSkeleton=null;
			}
			this.heroSkeleton=new EditSkeleton(this.otherTxt.text,"other",Handler.create(this,this.loadComplete));
			this.heroSkeleton.playbackRate(this.playRate);
			this.heroSkeleton.scale(this.scaleRate,this.scaleRate);
			this.heroSkeleton.x=this.editCenterX;
			this.heroSkeleton.y=this.editCenterY;
			this.showBox.addChild(this.heroSkeleton);
			this.updateAniNum();
		}
		else{
			this.log("其他类型 名称不能为空!");
		}
	}

	__proto.loadComplete=function(editSkeleton){
		this.log("所有动作如下:");
		var actionNames=editSkeleton.actionNames;
		for (var key in actionNames){
			this.log(key+":"+actionNames[key]);
		}
		this.actionList.dataSource=actionNames;
		console.log(actionNames);
	}

	__proto.clearHandler=function(){
		if(this.heroSkeleton){
			this.showBox.removeChild(this.heroSkeleton);
			this.heroSkeleton=null;
		};
		var node;
		for (var i=this.showBox.numChildren;i > 0;i--){
			node=this.showBox.getChildAt(i);
			if(node){
				this.showBox.removeChild(node);
				node.destroy(true);
			}
		}
		this.updateAniNum();
		Laya.timer.once(2000,this,function(){
			UIFactory.ins.clearAllSkeletons();
			console.log("清除所有骨骼动画");
		});
	}

	__proto.closeHandler=function(){
		this.parent.removeChild(this);
	}

	__proto.onOpenStateHandler=function(){
		var statCanvas=Stat._canvas;
		if(statCanvas==null){
			Stat.show();
		}
		else{
			statCanvas.source.hidden=!statCanvas.source.hidden;
		}
	}

	// ,[UIFactory.Other,"siwangmubei"]
	__proto.createEffectsHandler=function(){
		if(this.idTxt.text){
			var editSkeleton;
			for (var i=0;i < 1;i++){
				editSkeleton=new EditSkeleton(this.idTxt.text,this.typeComboBox.selectedLabel);
				editSkeleton.playbackRate(this.playRate);
				editSkeleton.scale(this.scaleRate,this.scaleRate);
				editSkeleton.x=this.editCenterX+Math.random()*1000-500;
				editSkeleton.y=this.editCenterY+Math.random()*600-300;
				this.showBox.addChild(editSkeleton);
			}
			this.updateAniNum();
		}
		else{
			this.log("参数id不能为空！");
		}
	}

	__proto.createEffectsHandler2=function(){
		var editSkeleton;
		var arr;
		for (var i=0,len=this.aniArr.length;i < len;i++){
			arr=this.aniArr[i];
			editSkeleton=new EditSkeleton(arr[1],arr[0]);
			editSkeleton.playbackRate(this.playRate);
			editSkeleton.scale(this.scaleRate,this.scaleRate);
			editSkeleton.x=this.editCenterX+Math.random()*1000-500;
			editSkeleton.y=this.editCenterY+Math.random()*600-300;;
			this.showBox.addChild(editSkeleton);
		}
		this.updateAniNum();
	}

	__proto.clearInfoHandler=function(){
		this.infoTxt.text="";
	}

	__proto.clickActionListHandler=function(e){
		if((e.target instanceof laya.ui.CheckBox )){
		}
		else if((e.target instanceof laya.ui.Button )){
			var button=e.target;
			var chkbox=button.parent.getChildByName("chkbox");
			if(this.heroSkeleton){
				var actName=button.label;
				var isLoop=chkbox.selected;
				this.log("播放动作:"+actName+(isLoop?" (循环)":""));
				this.heroSkeleton.play(actName,isLoop);
				this.heroSkeleton.playbackRate(this.playRate);
			}
		}
	}

	//heroSkeleton.scale(scaleRate,scaleRate);
	__proto.updateAniNum=function(){
		this.aniNum.text=LanguageMgr.Ins.GetLan("9002306")+(this.showBox.numChildren-1);
	}

	__proto.log=function(str){
		this.infoTxt.text+=str+"\r\n";
		console.log(str);
	}

	__getset(0,__proto,'playRate',function(){
		return this.playRateHS.value;
	});

	__getset(0,__proto,'scaleRate',function(){
		return this.scaleRateHS.value;
	});

	return AnimationTestView;
})(AnimationTestUI)


//class modules.tips.HtmlShareTips extends ui.tips.HtmlShareTipsUI
var HtmlShareTips=(function(_super){
	function HtmlShareTips(){
		HtmlShareTips.__super.call(this);
	}

	__class(HtmlShareTips,'modules.tips.HtmlShareTips',_super);
	var __proto=HtmlShareTips.prototype;
	__proto.setTipData=function(dec,maxLineWidth,style){
		(maxLineWidth===void 0)&& (maxLineWidth=0);
		(style===void 0)&& (style=0);
		dec=this.changeImgURL(dec);
		this.replaceBG(style);
		this.txt_dec.text=dec;
		this.txt_dec.wordWrap=true;
		if(this.txt_dec.getBounds().height < 39){
			this.imgBG.height=39;
		}
		else{
			this.imgBG.height=this.txt_dec.getBounds().height+10;
		}
		this.img0.y=this.imgBG.height*0.5+this.imgBG.y-4;
	}

	//this.mouseEnabled=true;
	__proto.changeImgURL=function(value){
		var str="";
		var myPattern=/<img src=\"/;
		var changeStr='<img src="'+URL.rootPath;
		str=value.replace(myPattern,changeStr);
		return str;
	}

	__proto.replaceBG=function(type){
		(type===void 0)&& (type=0);
		if(type==0){
			this.txt_dec.strokeColor="#9d1200";
			this.imgBG.skin="comm/ui_paopao.png";
			this.img0.skin="comm/ui_paopao1.png";
		}
		else{
			this.txt_dec.strokeColor="#006a4d";
			this.imgBG.skin="comm/ui_paopao2.png";
			this.img0.skin="comm/ui_paopao12.png";
		}
	}

	HtmlShareTips.ORGANGE_BG=0;
	HtmlShareTips.BLUE_BG=1;
	return HtmlShareTips;
})(HtmlShareTipsUI)


//class modules.tips.itemTip.SkillListItem extends ui.tips.itemTips.item.SkillListItemUI
var SkillListItem=(function(_super){
	function SkillListItem(){
		SkillListItem.__super.call(this);;
	}

	__class(SkillListItem,'modules.tips.itemTip.SkillListItem',_super);
	var __proto=SkillListItem.prototype;
	__proto.setData=function(value){
		var attAry=value.split("|");
		this._icon.skin="assets/textrue/common/icon/"+attAry[0]+".png";
		this.lab_content1.text=LanguageMgr.Ins.GetLan(attAry[1]);
		var dec=attAry[2];
		this.lab_arr1.text=dec;
	}

	return SkillListItem;
})(SkillListItemUI)


//class modules.treasureBox.mediators.OpenBoxItem extends ui.treasureBox.item.OpenBoxItemUI
var OpenBoxItem=(function(_super){
	function OpenBoxItem(){
		this._skillItem=null;
		//技能卡牌
		this._moneyCardItem=null;
		//货币卡牌
		this._openEffect=null;
		//开启特效
		this._bgEffect=null;
		this._date=null;
		this._isShowUpImg=false;
		this._itemType=0;
		this._questionVisible=false;
		OpenBoxItem.__super.call(this);
		this.init();
	}

	__class(OpenBoxItem,'modules.treasureBox.mediators.OpenBoxItem',_super);
	var __proto=OpenBoxItem.prototype;
	//背景特效
	__proto.init=function(){
		var self=this;
		self.questionImg.visible=true;
		self.newImg.visible=false;
		self.upImg.visible=false;
		self._openEffect=new AniSkeleton("ui12","ui",0,false,Handler.create(self,self.onEffectPlayComplete,null,false));
		self._openEffect.stop();
		self.openEffectBox.addChild(self._openEffect);
		self._openEffect.visible=false;
		self._bgEffect=new AniSkeleton("ui_1_3","ui",0);
		self.bgEffectBox.addChild(self._bgEffect);
		self.bgEffectBox.visible=false;
	}

	__proto.onEffectPlayComplete=function(){
		this._openEffect.visible=false;
	}

	__proto.removeAll=function(){
		var self=this;
		if(self._moneyCardItem){
			self._moneyCardItem.parent && self._moneyCardItem.parent.removeChild(self._moneyCardItem);
		}
		if(self._skillItem){
			self._skillItem.parent && self._skillItem.parent.removeChild(self._skillItem);
		}
		self.bgEffectBox.visible=false;
		self.upImg.visible=false;
		self.newImg.visible=false;
		self._openEffect.visible=false;
	}

	/**
	*播放打开特效
	*/
	__proto.actionOpenEffect=function(){
		this._openEffect.playSkeleton("idle",false);
		this._openEffect.visible=true;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self._skillItem && self._skillItem.destroy();
		self._moneyCardItem && self._moneyCardItem.destroy();
		self._openEffect && self._openEffect.destroy();
		self._bgEffect && self._bgEffect.destroy();
		laya.ui.View.prototype.destroy.call(this);
		self._skillItem=null;
		self._moneyCardItem=null;
		self._openEffect=null;
		self._bgEffect=null;
	}

	/**
	*设置数据
	*@param $item :物品数据
	*/
	__getset(0,__proto,'data',null,function($data){
		var self=this;
		self._date=$data;
		var temp=ItemModel.getItemConfigData(self._date.itemID);
		self._itemType=temp.Type;
		self.removeAll();
		if(self._itemType==1){
			if(!self._moneyCardItem){
				self._moneyCardItem=new MoneyCardItemUI();
			};
			var countStr="x"+self._date.count;
			self._moneyCardItem.numText.value=countStr;
			self._moneyCardItem.icon.skin="assets/textrue/skill/"+temp.Icon+".png";
			self.cardBox.addChild(self._moneyCardItem);
			self.cardNumBg.visible=false;
			self.cardNumText.visible=false;
		}
		else if(self._itemType==3){
			if(temp.Rarity >=2){
				self.bgEffectBox.visible=true;
			}
			if(!self._skillItem){
				self._skillItem=new SkillCard();
				self._skillItem.y=-8;
				self._skillItem.scaleX=0.8;
				self._skillItem.scaleY=0.8;
			};
			var skillId=temp.Param1;
			var skillVO=SkillModel.getSkillConfigData(skillId);
			self._skillItem.skillVo=skillVO
			self.cardBox.addChild(self._skillItem);
			var skills=SkillMgr.ins.model.skills;
			var skillInfo;
			for (var i=0,len=skills.length;i < len;i++){
				skillInfo=skills [i];
				skillVO=SkillModel.getSkillConfigData(skillInfo.skillID);
				if(skillVO.BasicSkill==skillId){
					break ;
				}
				skillVO=null,skillInfo=null;
			}
			if(skillVO && skillInfo){
				if(skillInfo.isNew){
					if(SkillMgr.ins.model.skillBasic.get(skillVO.BasicSkill)==null){
						self.newImg.visible=(self._date.count-skillInfo.skillCard==0);
					}
					else {
						self.newImg.visible=false;
					}
				}
				self.upImg.visible=self._isShowUpImg=SkillMgr.ins.model.getCanUpgradeBySkillId(skillInfo.skillID);
			}
			else {
				self.newImg.visible=true;
				self.upImg.visible=self._isShowUpImg=false;
			}
			if(self._date.count > 1){
				self.cardNumBg.visible=true;
				self.cardNumText.visible=true;
				self.cardNumText.text="x "+self._date.count;
			}
			else {
				self.cardNumBg.visible=false;
				self.cardNumText.visible=false;
			}
		}
	});

	/**
	*设置问号透明度
	*@param value :true:显示问号 false:隐藏问号
	*/
	__getset(0,__proto,'questionVisible',function(){return this._questionVisible;},function(value){
		var self=this;
		self._questionVisible=value;
		self.questionImg.visible=self._questionVisible;
		if(self._questionVisible){
			self.cardNumBg.visible=false;
			self.cardNumText.visible=false;
			self.upImg.visible=false;
		}
		else {
			if(self._itemType==3 && self._date.count > 1){
				self.cardNumBg.visible=true;
				self.cardNumText.visible=true;
				self.cardNumText.text="x "+self._date.count;
			}
			else {
				self.cardNumBg.visible=false;
				self.cardNumText.visible=false;
			}
			self.upImg.visible=self._isShowUpImg;
		}
		self.cardBox.visible=!self._questionVisible;
	});

	return OpenBoxItem;
})(OpenBoxItemUI)


//class modules.vip.view.item.PreviewItem extends ui.vip.item.PreviewItemUI
var PreviewItem=(function(_super){
	function PreviewItem(){
		PreviewItem.__super.call(this);
	}

	__class(PreviewItem,'modules.vip.view.item.PreviewItem',_super);
	var __proto=PreviewItem.prototype;
	__proto.setData=function(data){
		var vo=ItemModel.getItemConfigData(data.itemId);
		if(vo){
			if(vo.ItemID===-50){
				this.img_itemIcon.skin='assets/textrue/language/'+LanguageMgr.Ins.country+'/itemicon/'+vo.Icon+'.png';
				}else {
				this.img_itemIcon.skin='assets/textrue/itemicon/'+vo.Icon+'.png';
			}
			this.txt_itemNum.text=data.count;
		}
	}

	return PreviewItem;
})(PreviewItemUI)


//class modules.vip.view.item.RewardItem extends ui.vip.item.RewardItemUI
var RewardItem=(function(_super){
	function RewardItem(){
		RewardItem.__super.call(this);
	}

	__class(RewardItem,'modules.vip.view.item.RewardItem',_super);
	var __proto=RewardItem.prototype;
	__proto.setData=function(data){
		var vo=ItemModel.getItemConfigData(data.itemId);
		if(vo.ItemID===-50){
			this.imgIcon.skin='assets/textrue/language/'+LanguageMgr.Ins.country+'/itemicon/'+vo.Icon+'.png';
			}else {
			this.imgIcon.skin='assets/textrue/itemicon/'+vo.Icon+'.png';
		}
		this.labCount.text=data.count.toString();
		this.labName.text=LanguageMgr.Ins.GetLan(vo.Name.toString());
	}

	return RewardItem;
})(RewardItemUI)


//class modules.vip.view.VipView extends ui.vip.VipViewUI
var VipView=(function(_super){
	function VipView(){
		/**当前vip等级*/
		this.level=0;
		/**下一vip等级*/
		this.nextLevel=0;
		/**vip礼包价格 */
		this.giftPrice=0;
		this.itemlist=null;
		VipView.__super.call(this);
		this.addEvent();
		this.initView();
	}

	__class(VipView,'modules.vip.view.VipView',_super);
	var __proto=VipView.prototype;
	__proto.addEvent=function(){
		this.topbar.btnBackCallBack=Handler.create(this,this.onReturnHandler,null,false);
		this.btn_recharge.clickHandler=Handler.create(this,this.onClickRecharge,null,false);
		this.list_vip.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
		this.list_vip.mouseHandler=Handler.create(this,this.onSelectHandler,null,false);
		this.btn_buyGift.clickHandler=Handler.create(this,this.onClickBuy,null,false);
		this.btn_getWeekly.clickHandler=Handler.create(this,this.onGetWelfare,null,false);
		this.btn_gift_preview.clickHandler=Handler.create(this,this.onGiftPreview,null,false);
		this.btn_welfare_preview.clickHandler=Handler.create(this,this.onWelfarePreview,null,false);
		EventMgr.ins.on("vip_exp_update",this,this.onVipExpUpdate,null);
		EventMgr.ins.on("vip_week_reward_change",this,this.updateVipIntro,null);
		EventMgr.ins.on("recv_buyResult",this,this.onBuyResult);
		EventMgr.ins.on("update_shop_list",this,this.updateVipIntro);
	}

	__proto.onBuyResult=function(res){
		if(res.result==0){
			SocketManager.Instance.out.reqShopList();
		}
	}

	//updateVipIntro();
	__proto.initView=function(){
		if(!ShopMgr.ins.IS_OPEN_PAY)this.btn_recharge.visible=false;
		this.list_vip.scrollBar.visible=false;
		this.list_vip.scrollBar.elasticBackTime=600;
		this.list_vip.scrollBar.elasticDistance=200;
		this.txt_part1.text=LanguageMgr.Ins.GetLan("14300346");
		this.txt_recharge.text=LanguageMgr.Ins.GetLan("14300352");
		this.txt_gift.text=LanguageMgr.Ins.GetLan("14300350");
		this.txt_welfare.text=LanguageMgr.Ins.GetLan("14300351");
		this.txt_gift_intro.text=LanguageMgr.Ins.GetLan("14300348");
		this.txt_welfare_intro.text=LanguageMgr.Ins.GetLan("14300349");
		this.level=PlayerInfo.instance.vipLv;
		this.nextLevel=this.level < 8 ? this.level+1 :8;
		this.list_vip.dataSource=[1,2,3,4,5,6,7,8];
		this.list_vip.selectedIndex=this.level > 0 ? (this.level-1):0;
		this.updateVipinfo();
		this.updateVipIntro();
	}

	/**
	*更新玩家的VIP信息
	*/
	__proto.updateVipinfo=function(){
		this.level=PlayerInfo.instance.vipLv;
		this.nextLevel=this.level < 8 ? this.level+1 :8;
		this.txt_part2.text=LanguageMgr.Ins.GetLan("14300347")+" V"+this.nextLevel;
		var exp=PlayerInfo.instance.vipExp;
		var vo=PrivilegeModel.getItemDataByVipTypes(2+"_"+this.nextLevel+"_"+8);
		var nextExp=vo.Param2;
		this.processbar.value=exp/nextExp;
		this.txt_exp.text=exp+"/"+nextExp;
		if(exp<nextExp){
			this.txt_num.text=String(nextExp-exp);
		}
		else{
			this.txt_num.text="0";
		}
		this.vipIcon.skin="assets/textrue/vip/ui_icon_vip"+this.level+".png";
	}

	__proto.onReturnHandler=function(){
		this.removeEvent();
		UIMgr.ins.closeView("VipView",true);
	}

	__proto.onClickRecharge=function(){
		ShopMgr.ins.selectedIndex=4;
		UIMgr.ins.openView("ShopView",Handler.create(this,this.rechargeComplete));
	}

	__proto.rechargeComplete=function(){
		this.updateVipinfo();
		if(PlayerInfo.instance.vipLv > 0){
			this.list_vip.selectedIndex=PlayerInfo.instance.vipLv-1;
		}
		else{
			this.list_vip.selectedIndex=0;
		}
		this.updateVipIntro();
	}

	__proto.onClickBuy=function(){
		var _$this=this;
		UIMgr.ins.openView("InvitePaySendView",Handler.create(this,function(view){
			view.dataSource=parseInt("638000"+(_$this.list_vip.selectedIndex+1));
			view=null;
		}));
	}

	__proto.onGetWelfare=function(){
		if((this.list_vip.selectedIndex+1)==PlayerInfo.instance.vipLv){
			VipMgr.ins.sendGetWelfare();
		}
	}

	__proto.onGiftPreview=function(){
		var content=VipMgr.ins.getVipGiftContent(this.list_vip.selectedIndex+1);
		UIMgr.ins.openView("VipRewardPreView",Handler.create(this,function(view){
			view.setData(1,content);
		}));
	}

	__proto.onWelfarePreview=function(){
		var content=VipMgr.ins.getVipWelfareContent(this.list_vip.selectedIndex+1);
		UIMgr.ins.openView("VipRewardPreView",Handler.create(this,function(view){
			view.setData(2,content);
		}));
	}

	__proto.onRenderHandler=function(cell,index){
		var img=cell.getChildByName("img_selected_bg");
		if(index !=this.list_vip.selectedIndex)img.visible=false;
		img=cell.getChildByName("img_viplv_icon");
		img.skin="assets/textrue/vip/ui_icon_vip"+(index+1)+".png";
	}

	__proto.onSelectHandler=function(e,index){
		if(index>7)return;
		if(e.type=="click"){
			this.list_vip.selectedIndex=index;
			var img=this.list_vip.getCell(index).getChildByName("img_selected_bg");
			img.visible=true;
			this.updateVipIntro();
		}
	}

	__proto.onVipExpUpdate=function(){
		this.updateVipinfo();
	}

	/**
	*更新特权描述、礼包和福利部分
	*/
	__proto.updateVipIntro=function(){
		var selectedLevel=this.list_vip.selectedIndex+1;
		var id="1430033"+selectedLevel;
		var detail=LanguageMgr.Ins.GetLan(id);
		this.txt_detail.text=detail;
		this.txt_title_detail.text=LanguageMgr.Ins.GetLan("14300359",selectedLevel);
		this.img_gift_icon.skin="assets/textrue/vip/ui_icon_vip"+selectedLevel+".png";
		this.img_welfare_icon.skin="assets/textrue/vip/ui_icon_vip"+selectedLevel+".png";
		this.img_viplv_left.skin="assets/textrue/vip/ui_v"+selectedLevel+".png";
		this.img_viplv_right.skin="assets/textrue/vip/ui_v"+selectedLevel+".png";
		if(selectedLevel>PlayerInfo.instance.vipLv){
			this.btn_getWeekly.gray=true;
			this.btn_getWeekly.mouseEnabled=false;
			this.txt_get.text=LanguageMgr.Ins.GetLan("14300388");
			this.btn_buyGift.gray=true;
			this.btn_buyGift.mouseEnabled=false;
			this.txt_buy.text=LanguageMgr.Ins.GetLan("14300141");
		}
		else{
			if(VipMgr.ins.isSoldOut(selectedLevel)){
				this.btn_buyGift.gray=true;
				this.btn_buyGift.mouseEnabled=false;
				this.txt_buy.text=LanguageMgr.Ins.GetLan("14300390");
			}
			else{
				this.btn_buyGift.gray=false;
				this.btn_buyGift.mouseEnabled=true;
				this.txt_buy.text=LanguageMgr.Ins.GetLan("14300141");
			}
			if(selectedLevel==PlayerInfo.instance.vipLv){
				if(PlayerInfo.instance.isGetWeekReward){
					this.btn_getWeekly.gray=true;
					this.btn_getWeekly.mouseEnabled=false;
					this.txt_get.text=LanguageMgr.Ins.GetLan("14300391");
				}
				else{
					this.btn_getWeekly.gray=false;
					this.btn_getWeekly.mouseEnabled=true;
					this.txt_get.text=LanguageMgr.Ins.GetLan("14300388");
				}
			}
			if(selectedLevel < PlayerInfo.instance.vipLv){
				this.btn_getWeekly.gray=true;
				this.btn_getWeekly.mouseEnabled=false;
				this.txt_get.text=LanguageMgr.Ins.GetLan("14300389");
			}
		};
		var price=VipMgr.ins.getVipGiftPrice(selectedLevel);
		this.giftPrice=price;
		this.txt_gift_price.text=String(this.giftPrice);
		var off=VipMgr.ins.getVipGiftOff(selectedLevel);
		if(LanguageMgr.Ins.isChinese){
			this.txt_discount.text=LanguageMgr.Ins.GetLan("14300138",off);
		}
		else{
			this.txt_discount.text=LanguageMgr.Ins.GetLan("14300138",off*10);
		}
	}

	__proto.removeEvent=function(){
		if(this.topbar.btnBackCallBack){
			this.topbar.btnBackCallBack.recover();
			this.topbar.btnBackCallBack=null;
		}
		if(this.btn_recharge.clickHandler){
			this.btn_recharge.clickHandler.recover();
			this.btn_recharge.clickHandler=null;
		}
		if(this.list_vip.renderHandler){
			this.list_vip.renderHandler.recover();
			this.list_vip.renderHandler=null;
		}
		if(this.list_vip.mouseHandler){
			this.list_vip.mouseHandler.recover();
			this.list_vip.mouseHandler=null;
		}
		if(this.btn_buyGift.clickHandler){
			this.btn_buyGift.clickHandler.recover();
			this.btn_buyGift.clickHandler=null;
		}
		if(this.btn_getWeekly.clickHandler){
			this.btn_getWeekly.clickHandler.recover();
			this.btn_getWeekly.clickHandler=null;
		}
		if(this.btn_gift_preview.clickHandler){
			this.btn_gift_preview.clickHandler.recover();
			this.btn_gift_preview.clickHandler=null;
		}
		if(this.btn_welfare_preview.clickHandler){
			this.btn_welfare_preview.clickHandler.recover();
			this.btn_welfare_preview.clickHandler=null;
		}
		EventMgr.ins.off("vip_exp_update",this,this.onVipExpUpdate);
		EventMgr.ins.off("vip_week_reward_change",this,this.updateVipIntro);
		EventMgr.ins.off("recv_buyResult",this,this.onBuyResult);
		EventMgr.ins.off("update_shop_list",this,this.updateVipIntro);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.View.prototype.destroy.call(this,destroyChild)
	}

	return VipView;
})(VipViewUI)


/**
*拉线指引动画
*@author chengwen.yi
*
*/
//class modules.newguide.view.LaXianMaskView extends modules.newguide.view.ChickenClickMaskView
var LaXianMaskView=(function(_super){
	function LaXianMaskView(target,info,isMask,maskAlpha){
		this.closeHander=null;
		(isMask===void 0)&& (isMask=true);
		(maskAlpha===void 0)&& (maskAlpha=0.6);
		LaXianMaskView.__super.call(this,target,info,isMask,maskAlpha);
	}

	__class(LaXianMaskView,'modules.newguide.view.LaXianMaskView',_super);
	var __proto=LaXianMaskView.prototype;
	__proto.createGuideSkeleton=function(){
		var aniSkeleton=new AniSkeleton("effect_laxian","guide",0);
		aniSkeleton.mouseEnabled=false;
		return aniSkeleton;
	}

	__proto.setTarget=function(target,info,isMask,maskAlpha){
		(isMask===void 0)&& (isMask=true);
		(maskAlpha===void 0)&& (maskAlpha=0.6);
		modules.newguide.view.ClickMaskView.prototype.setTarget.call(this,target,info,isMask,maskAlpha);
		EventMgr.ins.on("battle_ballistic_1",this,this.calcBallistic1);
	}

	__proto.calcBallistic1=function(){
		EventMgr.ins.off("battle_ballistic_1",this,this.calcBallistic1);
		if(this.closeHander){
			this.closeHander.run();
			this.closeHander=null;
		}
	}

	__proto.setData=function(closeHander){
		if(this.closeHander && this.closeHander["_id"] > 0){
			this.closeHander.recover();
			this.closeHander=null;
		}
		this.closeHander=closeHander;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		EventMgr.ins.off("battle_ballistic_1",this,this.calcBallistic1);
		if(this.closeHander && this.closeHander["_id"] > 0){
			this.closeHander.recover();
			this.closeHander=null;
		}
		modules.newguide.view.ClickMaskView.prototype.destroy.call(this,destroyChild);
	}

	return LaXianMaskView;
})(ChickenClickMaskView)


/**
*滑动指引动画
*@author chengwen.yi
*
*/
//class modules.newguide.view.SlideMaskView extends modules.newguide.view.ChickenClickMaskView
var SlideMaskView=(function(_super){
	function SlideMaskView(target,info,isMask,maskAlpha){
		this.closeHander=null;
		(isMask===void 0)&& (isMask=true);
		(maskAlpha===void 0)&& (maskAlpha=0.6);
		SlideMaskView.__super.call(this,target,info,isMask,maskAlpha);
	}

	__class(SlideMaskView,'modules.newguide.view.SlideMaskView',_super);
	var __proto=SlideMaskView.prototype;
	__proto.createGuideSkeleton=function(){
		var aniSkeleton=new AniSkeleton("effect_laxian02","guide",0);
		aniSkeleton.mouseEnabled=false;
		return aniSkeleton;
	}

	__proto.setTarget=function(target,info,isMask,maskAlpha){
		(isMask===void 0)&& (isMask=true);
		(maskAlpha===void 0)&& (maskAlpha=0.6);
		modules.newguide.view.ClickMaskView.prototype.setTarget.call(this,target,info,isMask,maskAlpha);
		EventMgr.ins.on("SlideEnd",this,this.slideEnd);
	}

	__proto.slideEnd=function(){
		EventMgr.ins.off("SlideEnd",this,this.slideEnd);
		if(this.closeHander){
			this.closeHander.run();
			this.closeHander=null;
		}
	}

	__proto.setData=function(closeHander){
		if(this.closeHander && this.closeHander["_id"] > 0){
			this.closeHander.recover();
			this.closeHander=null;
		}
		this.closeHander=closeHander;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		EventMgr.ins.off("SlideEnd",this,this.slideEnd);
		if(this.closeHander && this.closeHander["_id"] > 0){
			this.closeHander.recover();
			this.closeHander=null;
		}
		modules.newguide.view.ClickMaskView.prototype.destroy.call(this,destroyChild);
	}

	return SlideMaskView;
})(ChickenClickMaskView)


//class ui.activity.view.ActivityViewUI extends laya.ui.Window
var ActivityViewUI=(function(_super){
	function ActivityViewUI(){
		this.tabList=null;
		this.infoView=null;
		this.titlTabNor1=null;
		this.titlTabNor2=null;
		this.titlTabSet1=null;
		this.titlTabSet2=null;
		this.btnClose=null;
		ActivityViewUI.__super.call(this);
		var temp=ActivityViewUI.uiView;
		ActivityViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(ActivityViewUI.uiView);
	}

	__class(ActivityViewUI,'ui.activity.view.ActivityViewUI',_super);
	var __proto=ActivityViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.activity.view.item.TabButton",TabButton);
		ClassUtils.createByJson(uiData,this,this);
	}

	ActivityViewUI.uiView="eJydVdlu4jAU/Rc/WyGLs8AjfRhVGvWF0SwaVZUDbnKZYEeJEzbx73OzQYAUaCUkBPI9yz3HyZ7obSrIhPwCuVBrQkmaqTQnkz1Zw0LHZGKZTkBJLCCKNZl4lnOgZB5DsiCTv/tu+nnFI9Ef3pIJ8ynZ4DyjJyjLoyT/BxJH+FxDCXo7KuBtF8Mu5jIyUhkhSg478S0DZCBsTJlLXZMyRi1y0uG648OB3uT3zZrfDk4CfNs68s/VaqVkxb4ErnJxzW351Arqj99ntp17zJ7TMHv+kdn2B4h3sUDbylimF8yuS03qe9Q84w3u8VZBbRr6wSUXuOI8Bqu2ehfMq8ECx72NZj+Exlpt5m0w5zEw36rBxve0sSu475DrC7TArcGcXlgOVqbkGZ7XPGxHytk8U0ky5dnsLMcyr//v6pPyufiDaJRkIhVc/8ba90I0zaHr84OHz1qsLoSZ3cayQmpYVQdXalEkIjc6t0YJYm0AzhqIMS20VhJRJK9PZ0IuRIb+X3sbmKrNZV3HTV393kVxzG4DIN/VT2TpV9Hy7kXUaHfs4YBCvHEav6KrfF6GwOymisyxjrGATtDwi8qqh0LLkGDoBU6PnmKQIhejPuUSZDTnEBdqoWT0tsGG7GIlP6fAs3FVJeQQJnj0nSe5uFZkP6hoq4oNRCgh4uqWnmOqZ1egycytVtK11jTviJsJXa0rhVJp7Kg1Ntz2F7Y0YNWvLmLGhno6uJs2HPsrObRuXx/163/oV2fFgF27b9c/mcUXylesNs8wFnw+4IeNenZzc9zOTKjlU4LvJzLwAglrhDeUIENon0AJD0WCp2q2/7pEiAk=";
	return ActivityViewUI;
})(Window$2)


//class ui.activity.view.commonActivity.CommonRewardWindowUI extends laya.ui.Window
var CommonRewardWindowUI=(function(_super){
	function CommonRewardWindowUI(){
		this.list=null;
		this.getBtn=null;
		CommonRewardWindowUI.__super.call(this);
		var temp=CommonRewardWindowUI.uiView;
		CommonRewardWindowUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(CommonRewardWindowUI.uiView);
	}

	__class(CommonRewardWindowUI,'ui.activity.view.commonActivity.CommonRewardWindowUI',_super);
	var __proto=CommonRewardWindowUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.activity.view.item.CommonRewardItem",CommonRewardItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	CommonRewardWindowUI.uiView="eJy1U21vmzAQ/i+3rw7BJkDCtybSpkrVNG2T1mmqKhduYM3Y1JikWZT/PvPWsCrT0kmDD+jg7nnzcQC7rxAS+CJUpndAoDK6qiE5wE5ktoCEUhYQKFDkhYVkEftHAmkhZAbJt8M4fV3yHKfDezfIVgSeIJmFZMQKoyWB+odQboSnVmyF3c9TXZZaXY1ljvb+IfcqlTu8WvzEd0Y4LggWhDHCFoQufTgJYqvV8UguEkJpQP+HlDrlEm+dUfoqWX4nKqR/lZFqlRtuG8mt0Kru9FwGTv04/Cf4qakp1fuz+VLaW4mCZzLJVd641vmmEAprnF/IzgZ6rtJCm6/OiBeO1W1XTeXciNq+EMP83jpjy+ezjmJGYMtNq6ufMFghtw4wOh0Zpctzq32DW5Rr/fQRd9xk1xbLKaNplBVl21fqrJFYe6NRbytw5wnX7206y78BGFQZms89RV+4M72bRr1urNXqhb0gWp2y7i25LV3btm+Ivg143oj73CCqIU7JH1B+chvsEPyh/MCzTLivCcwY8dt7bHyrlcsDrozgcny30VIbpwLefO8u8ocnnMvw7NoMf2Ucv35pGjF7bNDFJoV6bC5YmTt3/wJ2aJkn";
	return CommonRewardWindowUI;
})(Window$2)


//class ui.activity.view.recharge.FirstRechargeViewUI extends laya.ui.Window
var FirstRechargeViewUI=(function(_super){
	function FirstRechargeViewUI(){
		this.btn_close=null;
		this.list=null;
		this.btn_get=null;
		this.btn_recharge=null;
		FirstRechargeViewUI.__super.call(this);
		var temp=FirstRechargeViewUI.uiView;
		FirstRechargeViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(FirstRechargeViewUI.uiView);
	}

	__class(FirstRechargeViewUI,'ui.activity.view.recharge.FirstRechargeViewUI',_super);
	var __proto=FirstRechargeViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.activity.view.item.RechargeRewardListItem",RechargeRewardListItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	FirstRechargeViewUI.uiView="eJytk8Fq20AQht9lclUlS1aUSrc2UAiUUOJCU0owK2kqLVntit2VFdcYesmp5El67LWvY/IaXa2k2E4dkkN0EAyaf/79vx2tQC9rhAS+UJ6LFhyopagVJCtoaa5LSHx/GjlQIi1KDUkUTtYOZCVlOSTfVqP6/KwiBe6ql5BMHLixb3VNuWkiSqFWnsYbLRv0GOFFY1TeaUk5KvRIpumC6qWXlUQWOE8Lt+YFrNfO1ud9o7Xgj4yiwDr5cejAgkjTl2o+z5hQ3ZEG90xUleBeQ+epnTE35jyl1sIBRlJkpmvP7SNV+pHVdOpbrzA2uQZCYRiPvqxXqJpkeGlONNmS8yfHh8hdYJ/2Alsi887xTGO16yobrmnV9VYibxgqdwTlLii2LjX97pNjJPIc5eferC9MxqtnmYZxHzTqgm6hFqgPIS0kIt9FOdNSXOOpYKJTHuVROg2i/Y+QBGNNf3RVOJQfBDe8YEarWcNHjR2lulnf7QMvXsMgtkFOTh4uLAofIvy3hEMmiYshznh/gdETnpVCfjVL7R6P1aWtXoT0bTwg9XeRyuHqDnFdImOifS2wn0ieUzMqgTcB7MN+JylhT7Le/h/3v39t7v5sbm83P//aPfoHTq5mww==";
	return FirstRechargeViewUI;
})(Window$2)


//class ui.activity.view.LuckyWheelViewUI extends laya.ui.Window
var LuckyWheelViewUI=(function(_super){
	function LuckyWheelViewUI(){
		this.progress_bar=null;
		this.label_UI_desc1=null;
		this.label_UI_desc2=null;
		this.label_time_des=null;
		this.label_box_desc2=null;
		this.label_box_desc3=null;
		this.label_box_desc4=null;
		this.label_activity_time=null;
		this.label_end_time=null;
		this.fontClip_user_lucky_value=null;
		this.fontClip_user_lottery_value=null;
		this.list_item=null;
		this.list_box=null;
		this.btn_ten=null;
		this.label_user_diamond02=null;
		this.label_player_diamond2=null;
		this.fontClip_ten_consume=null;
		this.btn_once=null;
		this.label_user_diamond01=null;
		this.label_player_diamond1=null;
		this.fontClip_once_consume=null;
		this.boxTips=null;
		this.img_boxInfo=null;
		this.list_boxInfo=null;
		this.btn_close=null;
		LuckyWheelViewUI.__super.call(this);
		var temp=LuckyWheelViewUI.uiView;
		LuckyWheelViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(LuckyWheelViewUI.uiView);
	}

	__class(LuckyWheelViewUI,'ui.activity.view.LuckyWheelViewUI',_super);
	var __proto=LuckyWheelViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("ui.activity.item.LuckyWheelItemUI",LuckyWheelItemUI);
		View.regComponent("ui.activity.item.LuckyWheelBoxUI",LuckyWheelBoxUI);
		View.regComponent("ui.activity.item.LuckyWheelBoxItemUI",LuckyWheelBoxItemUI);
		ClassUtils.createByJson(uiData,this,this);
	}

	LuckyWheelViewUI.uiView="eJy9WFtv4ygY/S/sa9oGDLaTx1a7q0rVaKXtaHa0GlnEITFTByKD26ZV//uCb8GXXNqtp6miOAHO+a4ceAV6t2VgDr5xsZRPYAK2mdwqMH8FOzCfTsBz8f7ElzoBczglcAISxteJBnPfm75NQJzwdAnm/77WK3253dA1G1zJwxOgHrgwo6hSTKsrzZ51lrOrlIp1bqZd3SRcMMWuaKz5I9e7q5xHOmNU5RmLFuvLrViDt7dJg/ZXJtcZU+qaZh1IEswKUOT7jQEEhxPwaIbO7dBiYrQoZj7SNGcFz5pgTSDN44fdt4Sx1HL5afyUa05lwcSM5i/sz4wbD4DpBE0n5gX2LoIzl+uQYzy/cg30T0FrvmE9++/ogqWdNREKijWxY7kJXW15aqdEX2+jJVMxdNgiE56VFPpvY5N5MsRimUo75bdV8WfGLqSNto3ZBNCUry3flK30aVKWjCFFvD0pz2IMkELAJQLDFhFGF9bFVMSJzL6bkF2S+umf+qkiFjOhWXaSmufjKj29hlrQYWadb7m5wfVbLPGnuosEYcHJ31PyO5QW8rnxltKZfGA3NX5A8BLFzffG+0epstlnUIUB3qcbGebqfTbXk7GdlbXgEaeNoXCYHR5gt8QrFLbZNfUyLZl2WbLVKo4PeDQrpp6bkRg5rGEn/nWbKHLzV+Vl7U8cooYZgqjNjIllTepj7kTnurPH+Q+zwE3Kt72W6JXdZ7CeVtWkKFcsi4quG5UbQrMxwOM7g0ryF26btHqB9c5gftB2W4DIw8QPQpu4RzrTAeYkKJlDtHc4OcRcarNqjzuAtmGqLY2Z6ZAX3rmWeB+05I4r3bHCZstz2VUrG2YYN0ljxkdcs42ZtJHGkvskk/k6qYNdfPe7oIuUmQRY0VSxfdbgYFCF3DUW3ZYL99XIhSEg6MaOtuDWR1kuirydg5xf1t65tL9ethf8etu2+DQaDP0WHBwXzguCFhwaF85kRQvOGxcuIG04PBYchLNBQDIWIPKCQUB/LECP+IOAwdiA3ZQJxwbslsRsbMBeyY/WYmrETkuDozWZOk27gKO1mboQu4DvbzQ/ju9UBJeWwRnZK4XAb+1VRi86Gyo2AzO2ZVSbh+KzWLLsvkQoHxx1FgTHt6vrYm2X0QUsxeDFPpuaVc8y3SzZs/zLda61FN08wtWpw4e1wQstIs3swOOn04VZj4lIZuYkzyrhUKhBM6WQC9uEGq8OGj90qCBlFKb7KIQd/VtIniWnGymWUwT6QnLw+HhEAJ+nzUnQ3GUcOCtuU7rbU3OZHZPmRub6bWYuk8FbFa+Shv5e0h2+SGmH64HypzzmEcJVrA6fp09dYVTpiWBDIpYbY/nVmm1U78LigMyFZbydU1qAeyLXJlgshco3LWU+dcTt8VsUR9yiY+K2jpfnv6dqMPTcqpEiZifLZp0xY9SCyhcqPqFqqt41RedVDfx1VVO2by88s2rgeVVDPTZdvbdqqtZC8PurZhd/SsVUDGb/q2LKLd9HzjbVqxibg/2SIWNWTO9w7hZQf3cjpGwfoW2oj1xxc8prDnlVMcnne75Vrsthx+ED9dFzfH3wbC4r+GZtt/JbsZIn61QbAv0rX1Tc+Rb/jg9maLBe+1qjkvpdbVEQOqkSuiLJVtfHBYIjj36cyN5ZeZa3l2jHfZbslpGi4iflskrq0720vg4P3U4ap1I5rbQqlkp0SBGZ2hUL3m2fFu4/wi7/jw==";
	return LuckyWheelViewUI;
})(Window$2)


//class ui.menu.battle.NewBattleWinUI extends laya.ui.Window
var NewBattleWinUI=(function(_super){
	function NewBattleWinUI(){
		this.mpImgWin=null;
		this.mpImgLose=null;
		this.mpImgDraw=null;
		this.mpTextNext=null;
		NewBattleWinUI.__super.call(this);
		var temp=NewBattleWinUI.uiView;
		NewBattleWinUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(NewBattleWinUI.uiView);
	}

	__class(NewBattleWinUI,'ui.menu.battle.NewBattleWinUI',_super);
	var __proto=NewBattleWinUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	NewBattleWinUI.uiView="eJy1j71OwzAURl8FXVarSWgbFa9loFLpAhJUiMFJbmMLx45sl/4pCwsjE8/AxMBY9XmqvgZOoYCQGIqEJcv6rO/Y5y7AzUoECpdCZXoCBEqjSwt0AROROQ40ipoxAY4i5w5o3AorAikXMgN6vdjRg17BcvxOz4AehSGBKdB23CFwx4zvFWWvyP1Xvmlv/UFBMpWPPRt0uVBoMUiYcxKDAtU4MGjH0gWWo8qlmItGqXKPMpVybYZAw0Z7l662qarI35z62uK+UiJh/+p0YthkP6fME3v59FmC8odO/KETRVH45XOBUzfw25ddfVDY3C/XD6v16+N6+bRZPW9WL7WsM/oWu1rqGjuMsXOcND/v/awERlq5czGvQ+s9+eaZSI22euQOhuwUhSfS3Ruj7fp9pKiqbqo3dIzqgg==";
	return NewBattleWinUI;
})(Window$2)


//class ui.menu.battle.BeyondFriendUI extends laya.ui.Window
var BeyondFriendUI=(function(_super){
	function BeyondFriendUI(){
		this.bg=null;
		this.xiaoji=null;
		this.light=null;
		this.back=null;
		this.imgIcon=null;
		this.labName=null;
		this.xuanyao=null;
		this.shareTips=null;
		BeyondFriendUI.__super.call(this);
		var temp=BeyondFriendUI.uiView;
		BeyondFriendUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(BeyondFriendUI.uiView);
	}

	__class(BeyondFriendUI,'ui.menu.battle.BeyondFriendUI',_super);
	var __proto=BeyondFriendUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.tips.HtmlShareTips",HtmlShareTips);
		ClassUtils.createByJson(uiData,this,this);
	}

	BeyondFriendUI.uiView="eJydVMuOmzAU/Rd3SzLBPBLYdbpoRxplM5U6VRVVDnHAGWMjME1oxCdU6q5fMZ81/1FjB8iDElIWgOXrc8895/rugSgSDHzwhbAV3wIDJClPMuDvwZasRAR807RcA0SYhJEAvmtPSgMEEaEr4H/b16fv+e74aAH8iQF26n0C8wOlMnoZymCGYlz/X0F/iFGI/4WfvRAmY1CSUPxRYt4FEeJF3nwhHG+SEJSlMQBPsxwIKQMDRPEz8EdmWS6OElzKAS2dwPFgI4njzGpFdgTxDWlVada1Mjb0DIBYEPH0qyQ7durVs1oNVQ3arqIB3cYMqhL0FJ2T71mEJSM2TlhTtWQBWwFgw7yG6+F6xQnnYIXVZ64kpTWCitQ1TAhnCtRy+uxtQYehmu7s0DV2P+oakw25gJx3YdqmpZlOYAcmRSzM5aG7DxFhOOugfvCokd88F39xjYHn6KLcLqkuCKQ4y6mo8j/ykJ9n7zV/fp8Lwdm5/Z5uUdXxh3mBgpe2QwMex1W+MMW4bsl6mOhAipaYyiXouhadNUOdczq9reS13IpyskKCsHBA7YtrDQUVDc+127lZXQctA4nDh0DpVU8FuXks6KOq+wxyqq+TZzst5mza3H60nFfaGUDgnUQEb79/vb3+OcpR2bDmTDyRn7gaIHolI9+nBFXZAk55BfVurZ5KAjkElFOYCZyC4Z67blPsLkesQPzS9gJTyrenvrfB/2H9VFs/u836ah7KlAWRPzd1/ScR06cIpfgzkRxOuYwsT5EZWU6tQ3YUmuZMEFVwzFc5xdlYyI3xKWLVZYvyL7vofnc=";
	return BeyondFriendUI;
})(Window$2)


//class ui.menu.battle.BattleResultUI extends laya.ui.Window
var BattleResultUI=(function(_super){
	function BattleResultUI(){
		this.mpBoxBg=null;
		this.mpBgRight=null;
		this.mpBgLeft=null;
		this.roleImg=null;
		this.goTohall=null;
		this.playAgin=null;
		this.goToShare=null;
		this.shareTips=null;
		this.titleBg=null;
		this.scoreImg=null;
		this.maxScore=null;
		this.maxScoreImg=null;
		this.overStepImg=null;
		this.overStepText=null;
		this.rewardBg=null;
		this.rewardTextImg=null;
		this.mpImgDouble=null;
		this.mpTextDouble=null;
		this.rewardText=null;
		this.rewardIcon=null;
		this.scoreNum=null;
		this.maxScoreNum=null;
		this.imgIcon=null;
		this.labName=null;
		BattleResultUI.__super.call(this);
		var temp=BattleResultUI.uiView;
		BattleResultUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(BattleResultUI.uiView);
	}

	__class(BattleResultUI,'ui.menu.battle.BattleResultUI',_super);
	var __proto=BattleResultUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.tips.HtmlShareTips",HtmlShareTips);
		ClassUtils.createByJson(uiData,this,this);
	}

	BattleResultUI.uiView="eJytWNtu4zYQ/RcWfXMc3aiL39ZbtA0Q5KEJ0F0UxYK2KYlZShQoKrET+BMW6Fu/op+1/1HqTsm0fGntB1smZ+bMmQuHfgdil2GwAL+TdMNewQxknGU5WLyDV7IRMViYpu3OQIxJFAuw8CxjPwPrmNANWPzx3kov2VYV3UmxGdiChT37L2paUds2ZuAFcbkjyeSeZSR35WtE8SewMOa+VJyiBA+WT1i6S1CER5BvrAqza7gdaimtWI5+q3RK219JKn9CWUbxL9LybcgLIm5X0fw5K433aDoRFc9+NonDqGAYx0Dc43ACQ0G+SBhZOoLRCF3Biun4dSih3aLgjOK7JJoEwV8bEG2cbswOUCu/3/8p37OJLIJuZbuU7fLIsXo/XMPR+fGwLIRg6ViZY9cBhl6vDjqtVxF7YjGitHdrzZKk9CXiGKeNOxl5YeIzWFjBHDZP0jnP65xT1FC0wvRnlkqgtgIaBlrMOvKt2n/P0lBNURoVUuT2Y0xSnONbjvOCVuSHcikuyAYJkrbJgNJ1zPjnsmBg+1SVD9wPgjDNnW95LV8ZRbsPEUmn+WpYUTYPWDmfiToLPfcyJt7oLvuyKsT/RAKsQASBpybNY4w4PmSBcQkLr8ioGlWJK6kIaiq8y6jYEpTuENsR+eUMOnoyfhUJrRA/EYlh1DOdumneeF13yJWtvEgFqZsQ2xQU53MhF+ZDjSPqtS4bNfO+67dmBBEUL5UmdOD6Cgm55TbBadH3pd32OR8GpFfU0WEeJ0MPz66rwwu6bpKvGR82yfPwhSN0ip4j0TJPw/ObjAnM7iBB28dS86XwaP4WWaPjpVd1PULYVpY/RngFhyVIPcZJIs+JtN30Idd1W6DsBfNHgbMrgK53Q5iqKl07uC/7xfh8rgvQhMEY0BPelme+KD8WIAjmQfBjiVBw9hV/ZJSVm3+wbbgxze53GYsDOI2iUDaqR/ImV2xJwrpT4IXQXl3QXLW8+vXACHs3OH5FfLOcHjOeVxsy5LATO7uf2l5l2nJHpku3rwjqM9UB6pUdLZIzB7J6PLxRh0Kp+CdWrCie5OotLjYFCXvGJgJ2bvLV1WD2VVslSwemyb1P1iB9LEdJn7B6yfUVK+0JXuBTqTScGnW4HLM5L3zvMKYdLmjI10FBuIZMRn1BDHQcKYcQYmh7nT8hovmEQ6fuArbvNHOXP3Tkbs3S49GOpG1dFlZS+xPkWbCxWR66ymn2UCQddSbUUTfRSxQNPXGOo+sj2kQwj7Gm88A2Wg/c8XGiOqGP/4QTQyVHEsAwwtAwjo4T40uPLurNsO2YrnJR6eqdJFET/fZGIRdPBtVobuSBcvnpq0NOog+lj13Jfv/r2/d//lZslFPnsITDanAFHzhBpbXDikaURNVEjFOBOTh5uDp9N7mo496ziKm3zbbM+r8IqrbxLz6PWtU=";
	return BattleResultUI;
})(Window$2)


//class ui.room.AppleGameHelpUI extends laya.ui.Window
var AppleGameHelpUI=(function(_super){
	function AppleGameHelpUI(){
		this.mpBoxBg=null;
		this.mpTextTitle=null;
		this.labTitle=null;
		this.listpannel=null;
		this.desclist=null;
		AppleGameHelpUI.__super.call(this);
		var temp=AppleGameHelpUI.uiView;
		AppleGameHelpUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(AppleGameHelpUI.uiView);
	}

	__class(AppleGameHelpUI,'ui.room.AppleGameHelpUI',_super);
	var __proto=AppleGameHelpUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.email.view.HelpItem",HelpItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	AppleGameHelpUI.uiView="eJydk01r2zAYx7+LdhWJX+PUt+XSFXoYpLCNUYZiq7GobAlZTtKFQBl76Wl0tw0KPe62XcYY7LAP0y3LvsUe243jJSYNAyP8SM//eX76S5oifSYp8tEjloRijDCSSsgU+VM0ZqGOkO9ZHkYRZcNII9/Zc2cYBRHjIfKfTpfinpjUlWfINzCaFOOyigH/I6IgOZaQ3huiVVXXMJqqHsRkSHepm56yBPKJlJzuk5i2lRBx+0RlTLcjymU7Y880SYanGQwhs1oyydun7DndVwx6ItvGZhfbLrbc/+OynALMdldolrsrGpOpucnUxY4DPNjJkUgSREI9ga233GX0uIiaCA/JgPJ1wtI6EypWB3FEJ/qIaZ7vRsM/TC4+vvx18WHx+cv8/VuYPRGJ7gMT6C1oJLjIlfdoEIbBHqwPRN5Zq4xuZZwdz/B2/zxjw8DOzgauzrbBR9PB+edhy6idrWMbdxHXmZsc9boFsmMvDeVksObmzfnlnxeffn7/uvjxZn51Pf/26vfl69Lim/N3//prlBGo7itG8maV3d3AdQv6ld2zGtxDkmzAmbDhnM41Kz/dbqciZamWJCllo36gBOc9ovpbzB6lRdatvwmsrtdZWmt3Gp/NIeTe8ZprhCFNA14qUkkCCodkQqKikhINgVcx1DIrguaH+wDuy4Gm8RqFXVDA9VZZollRMxZhxmnaojFhvDVidNyqiW8bK5qEVKHyqhzP/gJjpbaS";
	return AppleGameHelpUI;
})(Window$2)


//class ui.chat.ChatSetViewUI extends laya.ui.Window
var ChatSetViewUI=(function(_super){
	function ChatSetViewUI(){
		this._body=null;
		this._sxuan=null;
		this._close=null;
		ChatSetViewUI.__super.call(this);
		var temp=ChatSetViewUI.uiView;
		ChatSetViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(ChatSetViewUI.uiView);
	}

	__class(ChatSetViewUI,'ui.chat.ChatSetViewUI',_super);
	var __proto=ChatSetViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("ui.chat.ChatSetView.ChatSetCheckBoxUI",ChatSetCheckBoxUI);
		View.regComponent("Text",Text);
		ClassUtils.createByJson(uiData,this,this);
	}

	ChatSetViewUI.uiView="eJy9VEtr20AQ/ithet3Y3pVkRTrGhzaH5pK+QilGltfSEnlXSKv4haE9BnoppVAovYReey8t9NeUGv+LztqWIysm5FCCQLAw32Nm59sZ6EnKwYeXQvbVCAikmUpz8GcwEn0dg9/2WgRiLqJYg28xe04gjEXSB//1rASfDIOIV7ET8A8pgTH4DtkSuRaB/EJIBIRqOFSyWYhuL+rSRiojqIogKBdT/jgTKAMOI45FzN8mFOZzcqcutVa6rHUjbO8TnsZio1uRcl3iOcSm5IhVDDHPu2/XNlupWzdtO8gJl0GGgG5P9Sew48U4kVyEXN42Q48IswljhLpVM3SvmU4c6DOuOzEPL47VuGbLeEBbbbSVikulz5GHQFZILYYGXYhGiASNDcsLwUeNGuPzk53R30vParUeSJDa9GE7LAX/Z4vP+FjXZEwUjIq13aF8XAQSq7Qp9uHPj1+LT++XX6+X1x+W7z7+/fx78e3n4vuX5durAx/LBkrqM9wppGLrE4KeijBTuRrog/PgCRdYFqpEGfpH3sDxqIO23uB3d9IO2XrZabu9L9giUFr01yHbt7Gn+zitDaXrbCmTQEYFVjY7sZA8500z1WbOtRYyapqOuonOp5v8BDKMVYZ30Wo45enV6jTfaej0uNBayfqtsvrj4dLt5MNE5fx2fHsroi56lL3ySSkXwirXES1YOKUk6PEEsZU8tz1j7B9d3sjb";
	return ChatSetViewUI;
})(Window$2)


//class ui.email.view.EmailMainViewUI extends laya.ui.Window
var EmailMainViewUI=(function(_super){
	function EmailMainViewUI(){
		this.btnAllGet=null;
		this.mPanel=null;
		this.lists=null;
		this.btnHelp=null;
		this.labCount=null;
		this.boxNoMail=null;
		this.labNoEmail=null;
		this.boxContent=null;
		this.btn_del=null;
		this.btn_get=null;
		this.msgView=null;
		this.btn_open_battleRecord=null;
		this.img_battleRecord_new=null;
		this.topBar=null;
		EmailMainViewUI.__super.call(this);
		var temp=EmailMainViewUI.uiView;
		EmailMainViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(EmailMainViewUI.uiView);
	}

	__class(EmailMainViewUI,'ui.email.view.EmailMainViewUI',_super);
	var __proto=EmailMainViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.email.item.EmailItem",EmailItem);
		View.regComponent("Text",Text);
		View.regComponent("modules.email.view.MessageMainView",MessageMainView);
		View.regComponent("modules.common.TopBar",TopBar);
		ClassUtils.createByJson(uiData,this,this);
	}

	EmailMainViewUI.uiView="eJy9V0Fv40QU/itluIBkEs/Y48S5bavVshIbrbYrdhFaRY49tadrz1i2k2Zb9bIIBBe4IZD2AIhDTwhx4MKBP0ML/Rc8e5x4XDtNEdJGkSOPZ9733vfe+55zhopXKUMT9IyLQJ4gA6WZTHM0OUMnPCgiNMHYcgwUMR5GBZo4tnluID/icYAmn56tTz9MvJDph1+hiWmgVXVtGcpfcgEHfJkkUgwXfBbMw8FxGqIWBuzjp+xBxgEFWbax/qLzc+NW0JFVoeINqu32gc7DGR6kQkelDmmhUmJQyyivtoF34o5dhTtugB2rBaxga1ANhxCDOAYZGcTSvbGsXZDYtCtMy2owLdzBFIz7TLy34p58v4s+MrBpjOGiYdt0vJNmFa7tuhtsB7v/J15q65jT/UVRSHEDldYsE9LA4jLkpZfBoXkh7sXxA1agjiNhxpiofUn5UhafgBU6oPXdc3C/uou9OYvhnO4Z7iv4j6qNbfeIqj0HCq5gKziKLj+/uP7s4vqnLy6/+RY2H0lRHAITZQTqDvbcy7hXWvJlLMso3j2qPrDiCT+SGXhqlq6pu+fru5iHVYBMFCyD8nyhsffYEx3nsDlSKWsa0iYb6pL1keWhn8k43veyw1bPLPNq/UbP2JC1PnJ4XujwCiOG1RyWM5Yyr0yA03f2fuLx+GHBEt1AthAFT8rHiQwWMcsHrNw24LBvoJ8QXrUrYyKoWXmxs6owUX0EDI20UvqQxSnqkw5PhKfRomJiV5tQZ6xalJg9lo45mJozHvCOsb7yoqPamNbwY2vtMVTugQSa0Kb4MBliU+/r0gmtBM3tJegeURdT1FNmjYv7ctWp/5pIu3HQLbuh5lSupvIR5EpzybJHdx0nH2Bci47ZKHqV++H08cHudKxUg7YOluPn5bxz9mlJ4A19V9w7VWgyC55lXoomRbZgm1AJdrRkTGUF0aTj6vXF31//evnm4p8/v7v67cerN19dv/7lrz9+f0ejw7VbGbK3Z2jsU0rMW0WirQnddLkqJIrpJgQ61rN1ANisqqiNFhK3L139fWW7Sg8tbUjgkam12CyoirzTGOWs8iMmwtl8UXQniFsOECCbOLqaO42Wj7coObmzkqtCds1Gyb/8YW/v+vuf36KK384qhjcTjcnw5tRTTIZShBH8+sdhtCHzP7JQakzNAkyyvb23O8sesTyHTgbdEB9z1npBrUdXHtYPtk2JJTwedO0kcpGzp1EmF2G0buVq7b7w5jEL1NpdckJrdcAmpXpSZMoEzIuiiNkT5oNqoK7+nEaemHtypgxvzc+0TxKJGunlT202homygI3Dg4gLlrNhB6fMZN1Sd5WO3slG10PT2YwgnoStaOHV86SJOPLiWL2PnnQFV6bwxrHt/4OyXqz3dNOs6n1QWymd/xcJQBCO";
	return EmailMainViewUI;
})(Window$2)


//class ui.help.HelpDescriptionViewUI extends laya.ui.Window
var HelpDescriptionViewUI=(function(_super){
	function HelpDescriptionViewUI(){
		this.btnOK=null;
		this.btnClose=null;
		this.labTitle=null;
		this.listpannel=null;
		this.helptext=null;
		HelpDescriptionViewUI.__super.call(this);
		var temp=HelpDescriptionViewUI.uiView;
		HelpDescriptionViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(HelpDescriptionViewUI.uiView);
	}

	__class(HelpDescriptionViewUI,'ui.help.HelpDescriptionViewUI',_super);
	var __proto=HelpDescriptionViewUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	HelpDescriptionViewUI.uiView="eJyllO9r00AYx/+X8+2xNpekSfvODRFRVJgwh4xyTW/JYXoXkuvWbRTq2PyBEyaCY1oQ3zgEGYoyhgr7Y7ql6yv/BS9Jm2Zt3F74JuSePM99nu/3nssGEGseARWwQFmdrwIIPJ97AahsgFVaFw6oGMiAwCHUdgSoaGW9DYHlULcOKo82RsWzvJWtXAOVIgQt+cxLvtXANplIV8wkH6ZURYMgeEyZLLB4o8FZoUmrNbuqzHjMBpmOjJJMpOvkpk8lBugI6iqMnhpUQLsNL+WqesxVjBRcMlEOeN2hQ24GZRiwrENNgSbKNqRpV1GNRK1mjqlIv0CNmIxQi7BprPQKaRAhqBgZrKool2IjlaaS5ynFXNB6oi+7xd1cw5KDVfVyupWLmd2UmYU5hzISkMKNBqZutDWJXqqiJdBQBWaWw/1FedAz+mj1MF6120tZ9GxTCM4m2JqKhnBp3Ar2ZWJNsHu3wZR1tk9S51xcI678BvJmMVcjKseYeLD+IXFsX5BOxv+JU5VkEtWMtDmXB2RaXS2ur8qOWI1OqcyQ7sTBiZtWTE6wVByBZOkDKtwIJEhLjhLodXYHm4env47OT56F3Q/h8XZ/9+n5wdbZ8/1e57XMW+ZMzMuJlF4Vk5Wsuu5THNEs7vJo32umpeuoKCM1Hrku/CbJdncfs+nu1KH3Sno1dLOUdkoD4WGWlK3MWz533Vnsz18Y6ZUgjg99YbhBJitHVwapRt5M5LlWTH9P3K8v+NhL5OQ16RDXi31M7VR7nSfSz/7ht/7nn4O9H6fHr86PvofdTvj2a//dVmL14ONR+P4kCu4dpME/v3fOdrbDl1/C7ovB/paMyE9nbz71OptjbRng+FyiH+qV54JdasfjTZYFiIZ0qf0XzPkPLQ==";
	return HelpDescriptionViewUI;
})(Window$2)


//class ui.help.HtmlHelpViewUI extends laya.ui.Window
var HtmlHelpViewUI=(function(_super){
	function HtmlHelpViewUI(){
		this.btnOK=null;
		this.btnClose=null;
		this.labTitle=null;
		this.content=null;
		HtmlHelpViewUI.__super.call(this);
		var temp=HtmlHelpViewUI.uiView;
		HtmlHelpViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(HtmlHelpViewUI.uiView);
	}

	__class(HtmlHelpViewUI,'ui.help.HtmlHelpViewUI',_super);
	var __proto=HtmlHelpViewUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	HtmlHelpViewUI.uiView="eJyllE1v0zAYx7+LuVpr7CRNmhud0EAgQOqkgdBUOYmbWLh2lbhdt6rShHg7jiMSEkduHBESBz7MYIxvgZ30JU1DJ8Elqt3neX7P/+/HngF1OqIgAEdMxPIEQDDK5CgHwQycsFilIPCwB0FKWZIqEDgddw5BlDIeg+DZbJncldNq5ikILAim+tsUfG9IEloLR34ZD1dU5ECQP2dCJ0RyOJSiNWb9MOmjvZFIQKUjr60D2Rk9yJjGABdD14bm60AE5nO4k2u7BRd5K3Dbxw3gs5QtuBWU58GOCx0EfVxtyHFuonqlWsdfU7G7QTVMQVlExTZWe4UdiDFEXgVrI7QTa1T6qMlTRqRicamvWuJho2HlwdpuZ1WKE5GMdWRrP2WC5rR1Z0gYN6Wp+dFXU4UXKoiIUpk91Qe95y5XT4rVfH5cRXfHSklRYzs2XsC1cROS6cBQiUf3wZZ1SUZXznESUq7/A02z2KgRdwpMMVh/kbi2L19Nxv+Js1E5iW5F2j6XOd1WFxb5fd2RCNmWygrpQbFZu2lWeYJtawnSqYdMcQNSdKpHCVyeX/x+8fnHty/X399cffh49fXVr4vX159e/nz7/vL8nY4bSKF6eiK1V1a50lm3M0YMLZJcmrq3/Mh1saV3QmlcV9mYVrt7TMRWd9gtr4bdRuu7Yeljn/SiTHLeJVlvY4AnebFfexSw7e08j4ZJODg02mteLZ4l2zLdyCw+ysioFFLrrjAy0j5QYYrICc0GXD+nASj7MydEScx0l4FuhuV31ZAXxEW1jc7/yd4B4Tm9aQqP538A5Zjiqw==";
	return HtmlHelpViewUI;
})(Window$2)


/**
*战斗场景
*@author huyouwei
*/
//class modules.battle.view.BattleScene extends modules.scene.BaseScene
var BattleScene=(function(_super){
	function BattleScene(sceneType,sceneData,needLoading){
		this.layerSegments=null;
		this.layerPoints=null;
		this.layerRects=null;
		this.allLivings=[];
		//所有战斗单元
		this.allObjects=[];
		//场景部件
		this.isRecvMapMsg=false;
		this.root=null;
		//场景根节点
		this.roleView=null;
		//人物层
		this.objectView=null;
		//部件层
		this.ballisticView=null;
		//弹道层
		this.ballisticGuide=null;
		//弹道层 引导用
		this.menuView=null;
		//主界面
		this.hero=null;
		// 主角
		this.__DEBUG__=false;
		this.debugPoints=[];
		this.curTouchObj=null;
		this.sceneId=0;
		this.battlePrepareMsg=null;
		this.battleMapMsg=null;
		this.battleStartMsg=null;
		this.isSingleBattle=false;
		this.curPvpData=null;
		this._heroWidth=NaN;
		this.soundId=0;
		this.messageList=[];
		this.roleCount=0;
		this.mpArrSkill=[];
		this._battleResult=0;
		this.localRes=[];
		this._curAction=null;
		this.actions=[];
		this.hitValue=0;
		this.noHitValue=0;
		this.isShowBorder=false;
		this.battlePlayerFireMsg=[];
		this.battleSkillResultMsg=null;
		this.battleNextTurnMsg=null;
		this.curTurnId=-1;
		this.crackIds=[];
		this.battleOverMsg=null;
		this.isOver=false;
		this.ballistics=[];
		this.battleSyncPlayerStateMsg=[];
		this.battleSceneObjectListMsg=[];
		this.mapobjremoveList=[];
		this.mapobjaddList=[];
		this.executorFactory=null;
		this.dicEffect=null;
		this.remainingTurn=0;
		this.craterBombs=[];
		this.wind=NaN;
		this.resourceId=null;
		this.fuhuotips=null;
		this.renderlayer=null;
		this.camerapoint=null;
		this.isMyTurn=false;
		this.crownRole=null;
		this.holeLayer=null;
		this.borderLayer=null;
		this.deads=[];
		this.battleBufferListMsgs=[];
		this.delayExecuteTime=0;
		this.dragX=0;
		this.dragY=0;
		this.isDrag=false;
		this._isdestroyed=false;
		(needLoading===void 0)&& (needLoading=true);
		ChatMgr.ins.curChannel='battle';
		BattleScene.__super.call(this,SceneType.BATTLE_SCENE,sceneData,needLoading);
		this.battlePrepareMsg=sceneData[0];
		this.battleMapMsg=sceneData[1];
		this.sceneId=this.battlePrepareMsg.sceneId;
		this.remainingTurn=this.battlePrepareMsg.maxTurn-this.battlePrepareMsg.curTurn;
		this.wind=this.battlePrepareMsg.wind;
		var sceneVO=SceneModel.getSceneConfig(this.sceneId);
		if (sceneVO==null){
			console.log("sceneId:"+this.sceneId+"不存在！！！");
		}
		else{
			this.soundId=sceneVO.SoundID;
			Cache.ins.battle.setTimeOut(sceneVO.Timeout);
		}
		this.curPvpData=this.initCurPvpConfig();
		this.resourceId=sceneVO.SceneResource;
		this.anchorX=0.5;
		this.anchorY=0.5;
		this.mouseEnabled=true;
		this.executorFactory=new ExecutorFactory(this);
		PlayerInfo.instance.recordHistory();
		this.addEvents();
	}

	__class(BattleScene,'modules.battle.view.BattleScene',_super);
	var __proto=BattleScene.prototype;
	__proto.addEvents=function(){
		EventMgr.ins.on("battle_ballistic_guide",this,this.calcBallisticGuide);
		EventMgr.ins.on("battle_ballistic_1",this,this.calcBallistic1);
		EventMgr.ins.on("cleanBallisticPoints",this,this.cleanBallisticPoints);
		this.addPublicEvents();
	}

	__proto.addPublicEvents=function(){
		EventMgr.ins.on("recv_battlemapmsg",this,this.recvBattleMapMsg);
		EventMgr.ins.on("recv_battlestart",this,this.recvBattleStart);
		EventMgr.ins.on("recv_overturn",this,this.recvOverTurn);
		EventMgr.ins.on("fighter_die",this,this.dead);
		EventMgr.ins.on("resetzibaodan",this,this.resetZibaodan);
		EventMgr.ins.on("changeCrown",this,this.changeCrown);
		EventMgr.ins.on("roleskeleton_complete",this,this.roleSkeletonComplete);
		EventMgr.ins.on("add_message",this,this.addMessage);
		EventMgr.ins.on("SHOW_SKILL_GROUP",this,this.showSkillGroup);
		EventMgr.ins.on("SHOW_SKILL_GROUP_AFTER_FIRE",this,this.showSkillGroupAfterFire);
		EventMgr.ins.on(String(0x3AA1),this,this.goToShowSkill);
		EventMgr.ins.on("OVER_TURN",this,this.overTurn);
		EventMgr.ins.on("sync_prepare",this,this.syncPrepare);
		EventMgr.ins.on("ROLE_MOVE_DIR",this,this.onRoleMoveDir);
	}

	// }
	__proto.roleSkeletonComplete=function(){
		++this.roleCount;
		var size=this.getRoleSize();
		if (this.roleCount >=size){
		}
	}

	// }
	__proto.getRoleSize=function(){
		var count=0;
		for (var i=0;i < this.allLivings.length;i++){
			if (this.allLivings[i].type==Fighter.ROLE){
				count++;
			}
		}
		return count;
	}

	__proto.addMessage=function(msg,code){
		var data={msg:msg,code:code};
		this.messageList.push(data);
	}

	__proto.onHandleMessage=function(){
		for (var i=0;i < this.messageList.length;i++){
			var obj=this.messageList[i];
			var code=obj.code;
			var msg=obj.msg;
			switch (code){
				case 0x0020:{
						this.recvBattleOver(msg);
						break ;
					}
				case 0x0022:{
						this.recvBattleFire(msg);
						break ;
					}
				case 0x0021:{
						this.recvSkillResult(msg);
						break ;
					}
				case 0x0025:{
						this.recvBattleWind(msg);
						break ;
					}
				case 0x0026:{
						this.recvBattleNextTurn(msg);
						break ;
					}
				case 0x001A:{
						this.recvBattleMove(msg);
						break ;
					}
				case 0x001C:{
						this.recvLivingFall(msg);
						break ;
					}
				case 0x002A:{
						this.executorFactory.recvBattlePlayerState(msg);
						break ;
					}
				case 0x0023:{
						this.executorFactory.recvbufferEffect(msg);
						break ;
					}
				case 0x0029:{
						this.recvBuffer(msg);
						break ;
					}
				case 0x0031:{
						this.executorFactory.recvbufferExecute(msg);
						break ;
					}
				case 0x0033:{
						this.recvBattleChat(msg);
						break ;
					}
				case 0x0038:{
						this.executorFactory.recvBattleSyncLiving(msg);
						break ;
					}
				case 0x0039:{
						this.recvDiceResult(msg);
						break ;
					}
				case 0x0034:{
						this.createNpc(msg);
						break ;
					}
				case 0x0037:{
						this.recvSceneObjectList(msg);
						break ;
					}
				case 0x005D:{
						this.recvBattleRevive(msg);
						break ;
					}
				case 0x0019:{
						this.recvBattleRoundOver(msg);
						break ;
					}
				case 0x0078:{
						this.recvMeleeScore(msg);
						break ;
					}
				case 0x009F:{
						this.recvKillReport(msg);
						break ;
					}
				case 0x0014:{
						this.syncPlayerPos(msg);
						break ;
					}
				case 0x0103:{
						this.executorFactory.recvNormalAttack(msg);
						break ;
					}
				}
		}
		this.messageList.splice(0);
	}

	__proto.syncPlayerPos=function(msg){
		for (var i=0;i < msg.battlePlayer.length;i++){
			var playerInfoMsg=msg.battlePlayer[i];
			var role=this.getRole(playerInfoMsg.livingID);
			if (role){
				role.syncInfo(playerInfoMsg);
			}
		}
	}

	__proto.recvKillReport=function(msg){
		EventMgr.ins.event("recv_kill_report",msg);
	}

	__proto.recvBattleRoundOver=function(msg){}
	//var fighter:Fighter=getFighter(msg.livingID);
	__proto.recvMeleeScore=function(msg){
		EventMgr.ins.event("recv_melee_score",msg);
	}

	__proto.recvBattleRevive=function(msg){
		for (var i=0;i < msg.reviveList.length;i++){
			var battlePlayermsg=msg.reviveList[i];
			var role=this.getRole(battlePlayermsg.livingId);
			if (role){
				role.revive(battlePlayermsg);
				if (role==this.hero){
					if (this.fuhuotips){
						this.fuhuotips.removeSelf();
						this.fuhuotips.destroy(true);
						this.fuhuotips=null;
					}
				}
			}
		}
	}

	__proto.resetZibaodan=function(){
		for (var i=0;i < this.allLivings.length;i++){
			var fighter=this.allLivings[i];
			if (fighter.type==Fighter.ROLE || fighter.type==Fighter.HERO){
				var role=fighter;
				role.bombCount=-1;
			}
		}
	}

	__proto.addSceneObjectList=function(supplyList){
		this.battleSceneObjectListMsg.push(supplyList);
	}

	__proto.recvSceneObjectList=function(msg){
		return;
		this.onHandleRemoveObject(msg);
		this.onHandleAddObject(msg);
	}

	__proto.onHandleAddObject=function(msg){
		for (var i=0;i < msg.supplyList.length;i++){
			var supplyMsg=msg.supplyList[i];
			var object=ObjectFactory.getInstance().createSupplyObjcet(supplyMsg,this);
			object.initObject(this.width,this.height);
			object.showBirth();
			this.allObjects.push(object);
			this.objectView.addChild(object);
			msg.supplyList.splice(i,1);
			i=i-1;
		}
	}

	__proto.onHandleRemoveObject=function(msg){
		for (var i=0;i < msg.supplyList.length;i++){
			var supplyMsg=msg.supplyList[i];
			if (supplyMsg.isRemove){
				this.removeSceneObject(supplyMsg.livingId);
				msg.supplyList.splice(i,1);
				i=i-1;
			}
		}
	}

	__proto.removeSceneObject=function(objectLivingId){
		for (var i=0;i < this.allObjects.length;i++){
			var object=this.allObjects[i];
			if (object.livingId==objectLivingId){
				object.showDie();
				this.allObjects.splice(i,1);
				i=i-1;
			}
		}
	}

	__proto.executeSceneObject=function(bombLivingId){
		return;
		for (var i=0;i < this.battleSceneObjectListMsg.length;i++){
			var supplyList=this.battleSceneObjectListMsg[i];
			for (var j=0;j < supplyList.length;j++){
				var supplyMsg=supplyList[j];
				if (supplyMsg.bombLivingId==bombLivingId){
					var object=ObjectFactory.getInstance().createSupplyObjcet(supplyMsg,this);
					object.initObject(this.width,this.height);
					object.showBirth();
					this.allObjects.push(object);
					this.objectView.addChild(object);
					supplyList.splice(j,1);
					j=j-1;
				}
			}
		}
	}

	__proto.hitSceneObject=function(objectLivingId){
		for (var i=0;i < this.allObjects.length;i++){
			var object=this.allObjects[i];
			if (object.livingId==objectLivingId){
				object.showHit();
				this.allObjects.splice(i,1);
				i=i-1;
			}
		}
	}

	__proto.showDic=function(dicResult){
		if (this.dicEffect==null){
			SoundMgr.instance.playSound(4003004);
			this.dicEffect=new DicEffect();
			this.dicEffect.x=ResizeMgr.bestFitWidth / 2;
			this.dicEffect.y=ResizeMgr.bestFitHeight / 8;
			this.stage.addChild(this.dicEffect);
			this.dicEffect.zOrder=999999999;
			Laya.timer.once(1000,this,this.showDiceResult,[dicResult]);
		}
	}

	__proto.showDiceResult=function(dicResult){
		if (this.dicEffect){
			if (dicResult){
				this.dicEffect.showBomb();
			}
			else{
				this.dicEffect.stop();
			}
			Laya.timer.once(1000,this,this.onCallBack);
		}
	}

	__proto.onCallBack=function(){
		this.dicEffect.removeSelf();
		this.dicEffect.destroy(true);
		this.dicEffect=null;
		for (var i=0;i < this.allLivings.length;i++){
			var fighter=this.allLivings[i];
			if (fighter.type==Fighter.ROLE || fighter.type==Fighter.HERO){
				var role=fighter;
				role.checkZibaodanCount();
			}
		}
	}

	__proto.recvDiceResult=function(msg){
		this.showDic(msg.result);
		var role=this.getRole(msg.livingID);
		if (role){
			role.syncDiceResult(msg);
		}
	}

	__proto.recvBattleChat=function(msg){
		var role=this.getRole(msg.livingId);
		if (role){
			if (msg.expressionId){
				if (!(this.menuView.islock && msg.livingId !=this.hero.livingId)){
					role.playExpression(msg.expressionId);
				}
			}
			else{
				role.say(msg.content);
			}
		}
	}

	__proto.recvBuffer=function(msg){
		if (msg.time <=0){
			this.realSyncBuffer(msg);
		}
		else{
			this.battleBufferListMsgs.push(msg);
		}
	}

	__proto.realSyncBuffer=function(msg){
		var livingId=msg.livingID;
		var fighter=this.getFighter(livingId);
		if (fighter){
			fighter.syncBuffer(msg);
		}
	}

	//}
	__proto.execSyncBuffer=function(bombLivingId){
		for (var i=0;i < this.battleBufferListMsgs.length;i++){
			var msg=this.battleBufferListMsgs[i];
			if (msg.bombLivingId==bombLivingId){
				new DelayExecutor(this,msg);
				this.battleBufferListMsgs.splice(i,1);
				i--;
			}
		}
	}

	//return;
	__proto.dead=function(fighter,delay){
		(delay===void 0)&& (delay=0);
		if (fighter.type==Fighter.ROLE || fighter.type==Fighter.HERO){
			if (Cache.ins.battle.isRandomFight()){
				if (this.hero==fighter){
					this.fuhuotips=new AniSkeleton("fuhuo_tips","effect",0,true,null,null,true);
					this.fuhuotips.x=this.width / 2;
					this.fuhuotips.y=this.height / 2;
					this.fuhuotips.x=ResizeMgr.bestFitWidth / 2;
					this.fuhuotips.y=ResizeMgr.bestFitHeight / 2;
					this.stage.addChild(this.fuhuotips);
				};
				var role=fighter;
				role.addReviveEffect();
				role.overturn();
				if (role==this.hero){
					this.menuView.overturn();
				}
			}
		}
		else if (fighter.type==Fighter.MONSTER){
			for (var i=0;i < this.allLivings.length;i++){
				if (this.allLivings[i]==fighter){
					this.allLivings.splice(i,1);
					if (delay > 0){
						Laya.timer.once(delay,fighter,fighter.destroyFighter);
					}
					else{
						fighter.destroyFighter();
					}
					return;
				}
			}
		}
		else{
			for (var j=0;j < this.allLivings.length;j++){
				if (this.allLivings[j]==fighter){
					this.allLivings.splice(j,1);
					this.deads.push(fighter);
					return;
				}
			}
		}
	}

	__proto.recvOverTurn=function(livingId){
		var fighter=this.getFighter(livingId);
		if (fighter){
			fighter.overturn();
			if (fighter.type==Fighter.HERO){
				this.menuView.overturn();
				if (this.ballisticGuide){
					this.ballisticGuide.graphics.clear();
				}
			}
		}
	}

	__proto.recvLivingFall=function(msg){
		var fighter=this.getFighter(msg.playerID);
		if (fighter){
			var pos=new Point(msg.tX,this.height-msg.tY);
			fighter.resetPath(pos,true);
		}
	}

	__proto.recvBattleMove=function(msg){
		var fighter=this.getFighter(msg.livingID);
		if (fighter){
			fighter.addSingleAction(new MoveAction(msg,1,this));
			if (fighter.type==Fighter.MONSTER){
				fighter.addSingleAction(new SkillOverAction(1,3,this,fighter.livingId));
			}
		}
	}

	// fighter.autoMove(msg.posX,this.height-msg.posY,dir);
	__proto.recvBattleOver=function(battleOverMsg){
		Cache.ins.battle.battleOverMsg=battleOverMsg;
		this.battleOverMsg=battleOverMsg;
		var self;
		for (var i=0,n=this.battleOverMsg.playerMsg.length;i < n;i++){
			if ((this.battleOverMsg.playerMsg [i]).userId.toString()==PlayerInfo.instance.userId.toString()){
				self=this.battleOverMsg.playerMsg[i];
				break ;
			}
		}
		if (self && self.hasRoomId && Boolean(self.roomId)){
			RoomMgr.ins.returnRoomInfo=new RoomReturnInfo(battleOverMsg.battleType,battleOverMsg.campaignId,self);
		}
		EventMgr.ins.event("battleOver");
		if (this.hitValue !=0 || this.noHitValue !=0){
			var hitPer=this.hitValue / (this.hitValue+this.noHitValue)*100;
			console.log("命中率："+hitPer.toFixed(2));
			SocketManager.Instance.record.uploadStatistician(2,hitPer.toFixed(2));
		}
	}

	__proto.showBattleOver=function(){
		this.isOver=true;
		for (var i=0,fighter;i < this.allLivings.length;i++){
			fighter=this.allLivings[i];
			fighter && fighter.overturn();
		}
		for (i=0;i < this.allObjects.length;i++){
			var object=this.allObjects[i];
			object.showDie();
		}
		this.allObjects.splice(i,1);
		if (this.battleOverMsg.isNormalOver){
			Laya.timer.once(2000,this,this.realShowBattleOver);
		}
		else{
			var handler=Handler.create(this,this.realShowBattleOver);
			this.menuView.battletime.value="0";
			var endEffect=new BattleEndEffect(this.menuView.width / 2,this.menuView.height / 2,handler);
			Laya.timer.once(2000,this,this.destroyBattleEnd,[endEffect,handler]);
			this.menuView.addChild(endEffect);
		}
	}

	__proto.destroyBattleEnd=function(battleEnd,handler){
		if (battleEnd && !battleEnd.isDestroy){
			battleEnd.scale(1,1,true);
			battleEnd.removeSelf();
			battleEnd.destroy(true);
			battleEnd.isDestroy=true;
			if (handler){
				handler.run();
			}
		}
	}

	__proto.realShowBattleOver=function(){
		var _$this=this;
		SoundMgr.instance.playSound(4003005);
		this.menuView.destroyRedBox();
		UIMgr.ins.closeView("ChatFullView");
		this._battleResult=0;
		for (var i=0,n=this.battleOverMsg.playerMsg.length;i < n;i++){
			if (this.battleOverMsg.playerMsg[i] && (this.battleOverMsg.playerMsg [i]).userId==PlayerInfo.instance.userId+""){
				this._battleResult=(this.battleOverMsg.playerMsg [i]).result;
				break ;
			}
		}
		if (Cache.ins.battle.isRandomFight()|| Cache.ins.battle.isNewbieRandomFight()){
			if (this.battleOverMsg.isNormalOver){
				this.setMapScale();
			}
			else{
				this.showMeleeAccount();
			}
		}
		else if (Cache.ins.battle.isNormalFight()|| Cache.ins.battle.isNewbieFight()|| Cache.ins.battle.isPVPFight()|| Cache.ins.battle.isMulitPveFight()){
			this.showMeleeAccount();
		}
		else{
			this.destroyByOver();
			UIMgr.ins.openView("NewBattleWin",Handler.create(this,function(view){
				view.setData(_$this._battleResult);
			}));
		}
	}

	__proto.destroyByOver=function(){
		for (var i=0;i < this.allLivings.length;i++){
			var fighter=this.allLivings[i];
			fighter.destroyFighter();
		}
		this.allLivings.splice(0);
	}

	__proto.showMeleeAccount=function(){
		this.destroyByOver();
		var battleType=Cache.ins.battle.battleType;
		if (battleType==9){
		}
		else if (battleType==11){
			if (this._battleResult==1){
				UIMgr.ins.openView("MulitPveResultWinView",Handler.create(this,function(view){
					view.dataSource=this.battleOverMsg;
				}));
			}
			else{
				UIMgr.ins.openView("MulitPveResultLoseView");
			}
		}
		else if (battleType==2 || battleType==1 || battleType==10){
			UIMgr.ins.openView("BattleOverDanView",Handler.create(this,function(view){
				view.dataSource=this.battleOverMsg;
			}));
		}
		else if (battleType==8 || battleType==3){
			UIMgr.ins.openView("BattleOverView",Handler.create(this,function(view){
				view.dataSource=this.battleOverMsg;
			}));
		}
		else{
			HallMgr.ins.show();
		}
	}

	__proto.showWinEffect=function(nickName){
		var effect=new WinEffect(nickName,Handler.create(this,this.showMeleeAccount));
		this.menuView.addChild(effect);
	}

	__proto.setMapScale=function(){
		MapDragTouchManager.instance.clearDragEvent();
		MapDragTouchManager.instance.setMapScale(this.scaleX+0.3,this.scaleY+0.3,250,null,Handler.create(this,this.moveCamera));
	}

	__proto.moveCamera=function(){
		var winner;
		var maxScore=0;
		var i=0,n=0;
		var playerMsg;
		for (i=0,n=this.battleOverMsg.playerMsg.length;i < n;i++){
			playerMsg=this.battleOverMsg.playerMsg[i];
			if (playerMsg && playerMsg.score > maxScore){
				maxScore=playerMsg.score;
				winner=playerMsg;
			}
		};
		var fighter;
		var nickName;
		for (i=0,n=this.allLivings.length;i < n;i++){
			fighter=this.allLivings[i];
			if (fighter.type==Fighter.ROLE || fighter.type==Fighter.HERO){
				if (fighter.livingId==winner.livingId){
					nickName=(fighter).nickName;
					break ;
				}
			}
		}
		CameraManager.instance.setCloseCamera(false);
		CameraManager.instance.setMapPos(fighter.x,fighter.y,0,0,250,this.isShowBorder,Handler.create(this,this.showWinEffect,[nickName]));
	}

	__proto.roleTurn=function(fighter,msg,turnMsg){
		fighter.myturn();
		if (fighter.type==Fighter.HERO){
			if (msg.continueAttack){
				this.menuView.continueAttack(msg,turnMsg);
			}
			else{
				this.menuView.myturn(msg,turnMsg);
			}
			this.isMyTurn=true;
		}
		this.menuView.updateBattleTurn(this.battlePrepareMsg.maxTurn-this.curTurnId,turnMsg);
	}

	__proto.playMyTurn=function(msg){
		this.isMyTurn=false;
		for (var i=0;i < msg.livingList.length;i++){
			var livingTurnMsg=msg.livingList[i];
			var fighter=this.getFighter(livingTurnMsg.livingID);
			if (fighter){
				this.roleTurn(fighter,livingTurnMsg,msg);
			}
		}
		if (!this.isMyTurn){
			if (!this.menuView.isDelayOver){
				if (this.hero){
					this.hero.overturn();
				}
				this.menuView.overturn();
			}
		}
	}

	__proto.recvBattleNextTurn=function(msg){
		this.resetSkillGroup();
		if (msg.livingList.length > 0){
			var role=this.getRole(msg.livingList[0].livingID);
			if (role){
				if (role.checkBuff(2023001)){
					this.hero.overturn();
					this.menuView.overturn();
					return;
				}
			}
		}
		this.battleNextTurnMsg=msg;
		this.menuView.cleanSkillIcons();
		this.curTurnId=this.battleNextTurnMsg.turnID;
		if (msg.deadFightMode==1){
			this.menuView.perEnterShiDou(Handler.create(this,this.playMyTurn,[msg]));
		}
		else if (msg.deadFightMode==2){
			this.menuView.enterShiDou(Handler.create(this,this.playMyTurn,[msg]));
		}
		else{
			this.menuView.updateCountDown(Handler.create(this,this.playMyTurn,[msg]));
		}
	}

	__proto.recvBattleWind=function(msg){
		this.wind=msg.wind;
		this.menuView.updateWind(this.wind);
	}

	__proto.recvBattleFire=function(msg){
		this.battlePlayerFireMsg.push(msg);
		EventMgr.ins.event("recv_battle_fire");
	}

	__proto.recvSkillResult=function(msg){
		this.battleSkillResultMsg=msg;
		var role=this.getRole(msg.sourceId);
		if (msg.result==0){
			role.useSkill(msg.skillId)&& this.menuView.addSkillIcon(msg.skillId,msg.sourceId);
			if (role.type==Fighter.HERO){
				this.menuView.useSkill(msg.skillId);
				if (msg.skillId==1000001){
					this.menuView.coolFeiji(this.curTurnId);
				}
				if (msg.skillId==this.hero.friendSkill){
					this.menuView.coolFriendSkill(this.curTurnId);
				}
			}
		}
		else{
			if (role.type==Fighter.HERO){
				switch (msg.result){
					case 1:{
							TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007399"));
							break ;
						}
					case 2:{
							TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007397"));
							break ;
						}
					case 3:{
							TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007398"));
							break ;
						}
					case 4:{
							TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007406"));
							break ;
						}
					case 5:{
							TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007407"));
							break ;
						}
					case 6:{
							TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007408"));
							break ;
						}
					case 7:{
							TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007409"));
							break ;
						}
					case 8:{
							TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007410"));
							break ;
						}
					case 9:{
							TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007412"));
							break ;
						}
					}
			}
		}
	}

	__proto.syncPrepare=function(msg){
		this.battlePrepareMsg=msg;
		this.wind=this.battlePrepareMsg.wind;
		this.remainingTurn=this.battlePrepareMsg.maxTurn-this.battlePrepareMsg.curTurn;
		var len=this.battlePrepareMsg.players.length;
		for (var i=0;i < len;i++){
			var battlePlayerMsg=this.battlePrepareMsg.players[i];
			var role=this.getRole(battlePlayerMsg.livingId);
			if (role){
				role.initBaseInfo(battlePlayerMsg);
				role.checkDie();
			}
		}
		if (this.menuView){
			this.menuView.refreshMenu(msg);
		}
	}

	__proto.onRoleMoveDir=function(livingID){
		var role=this.getRole(livingID);
		var isLine=Cache.ins.battle.isLine;
		if (isLine && role){
			role.moveDir=-role.moveDir;
			role.turnRight(role.moveDir==1);
			isLine=false;
		}
	}

	__proto.recvBattleMapMsg=function(msg){
		this.battleMapMsg=msg;
		for (var i=0;i < this.battleMapMsg.bombList.length;i++){
			var battleMapObjMsg=this.battleMapMsg.bombList[i];
			var bomb=BombModel.getBombConfigByBombId(battleMapObjMsg.templateId);
			this.crater(0,bomb.HitHole,battleMapObjMsg.posX,this.height-battleMapObjMsg.posY,battleMapObjMsg.livingId);
		}
		for (var j=0;j < this.battleMapMsg.playerList.length;j++){
			var mapPlayerMsg=this.battleMapMsg.playerList[j];
			var role=this.getRole(mapPlayerMsg.livingId);
			if (role){
				role.refresh(mapPlayerMsg);
			}
		}
		for (i=0;i < this.battleMapMsg.livingList.length;i++){
			var npcMsg=this.battleMapMsg.livingList[i];
			var npc=this.getNpc(npcMsg.livingId);
			if (npc){
				npc.refreshNpc(npcMsg);
			}
		}
	}

	__proto.recvBattleStart=function(msg){
		this.battleStartMsg=msg;
	}

	__proto.isLoadOver=function(){
		if (this.battleMapMsg && this.loadOver){
			return true;
		}
		return false;
	}

	__proto.addBattleSceneRes=function(res){
		res.push({url:StringUtils.formate("assets/atlas/scene/{0}.atlas",this.resourceId),type:"atlas"});
	}

	__proto.addBattleRes=function(res){
		res.push({url:"assets/atlas/battle/menu.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/shuzi.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/biaoqing.atlas",type:"atlas"});
		res.push({url:"assets/maps/"+this.resourceId+"_1.map",type:"arraybuffer"});
		res.push({url:"assets/atlas/battle/menu/xt.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/menu/headhp.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/menu/rolehp.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/menu/ld.atlas",type:"atlas"});
		res.push({url:"assets/atlas/skillItem.atlas",type:"atlas"});
		res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/battle/menu.atlas",type:"atlas"});
		res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/battle/menu/ld.atlas",type:"atlas"});
		if (this.battlePrepareMsg){
			switch (this.battlePrepareMsg.battleType){
				case 9:{
						res.push({url:"assets/atlas/battle/menu/pve.atlas",type:"atlas"});
						res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/battle/menu/pve.atlas",type:"atlas"});
						break ;
					}
				}
		}
	}

	__proto.clearBattleMenuRes=function(){
		var res=[];
		res.push({url:StringUtils.formate("assets/atlas/scene/{0}.atlas",this.resourceId)});
		res.push({url:"assets/atlas/battle/menu.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/shuzi.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/biaoqing.atlas",type:"atlas"});
		res.push({url:"assets/maps/"+this.resourceId+"_1.map",type:"arraybuffer"});
		res.push({url:"assets/atlas/battle/menu/xt.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/menu/headhp.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/menu/rolehp.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/menu/ld.atlas",type:"atlas"});
		res.push({url:"assets/atlas/skillItem.atlas",type:"atlas"});
		res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/battle/menu.atlas",type:"atlas"});
		res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/battle/menu/ld.atlas",type:"atlas"});
		if (this.battlePrepareMsg){
			switch (this.battlePrepareMsg.battleType){
				case 9:{
						res.push({url:"assets/atlas/battle/menu/pve.atlas",type:"atlas"});
						res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/battle/menu/pve.atlas",type:"atlas"});
						break ;
					}
				}
		}
		var obj;
		for(var $each_obj in res){
			obj=res[$each_obj];
			Laya.loader.clearRes(obj.url,true);
		}
	}

	__proto.hasCrackId=function(crackId){
		for (var i=0;i < this.crackIds.length;i++){
			if (this.crackIds[i]==crackId){
				return true;
			}
		}
		return false;
	}

	__proto.addCrackBySkillid=function(skillId,res){}
	// }
	__proto.addCrack=function(res){
		var len=this.battlePrepareMsg.players.length;
		var skillId=0;
		for (var i=0;i < len;i++){
			var msg=this.battlePrepareMsg.players[i];
			var skills=msg.skills;
			var skillIds=skills.split(",");
			for (var j=0;j < skillIds.length;j++){
				skillId=int(skillIds[j]);
				if (skillId > 0){
					this.addCrackBySkillid(skillId,res);
				}
			}
			skills=msg.talentSkills;
			if (skills){
				skillIds=skills.split(",");
				for (j=0;j < skillIds.length;j++){
					skillId=int(skillIds[j]);
					if (skillId > 0){
						this.addCrackBySkillid(skillId,res);
					}
				}
			}
		}
		this.addCrackBySkillid(1000002,res);
	}

	__proto.addRoleRes=function(roleId,res){
		if (res){
			res.push({url:"assets/animation/role/fight/role"+roleId+".json",type:"atlas"});
			res.push({url:"assets/animation/role/fight/hand"+roleId+".json",type:"atlas"});
		}
	}

	__proto.addBombRes=function(bombName,res){}
	// localRes.push({url:"assets/animation/bomb/"+bombName+".sk",type:Loader.BUFFER});
	__proto.addBlastRes=function(bombName,res){}
	// localRes.push({url:"assets/animation/blast/"+bombName+".sk",type:Loader.BUFFER});
	__proto.onLoaded=function(){
		_super.prototype.onLoaded.call(this);
		this.doWhenLoading();
	}

	__proto.doWhenLoading=function(){
		if (this.needLoading){
			var mapUrl=StringUtils.formate("assets/maps/{0}_1.map",this.resourceId);
			var buffer=Laya.loader.getRes(mapUrl);
			Laya.loader.clearRes(mapUrl,true);
			var byteArray=new ByteArray();
			byteArray.writeArrayBuffer(buffer);
			byteArray.position=0;
			TileReader.readMap(byteArray);
		}
	}

	//进入场景
	__proto.enter=function(){
		if (this.needLoading){
			this._enter();
		}
		else{
			VSScene.unTransition(Handler.create(this,this._enter));
		}
	}

	__proto._enter=function(){
		this.showBirth();
		Laya.timer.once(1500,this,this.onCallBack2);
		SoundMgr.instance.playSound(this.soundId);
		_super.prototype.enter.call(this);
		EventMgr.ins.event("enter_battle_scene");
	}

	__proto.onCallBack2=function(){
		SocketManager.Instance.out.reqBattleLoadOver();
	}

	__proto.showBirth=function(){
		Laya.timer.once(500,this,this.onCallBack3);
	}

	__proto.onCallBack3=function(){
		var time=0;
		for (var i=0;i < this.allLivings.length;i++){
			var fighter=this.allLivings[i];
			if (fighter.type==Fighter.ROLE || fighter.type==Fighter.HERO){
				var role=fighter;
				role.showBirth(time);
				time=time+(i+1)*100;
			}
		}
	}

	__proto.updateFighter=function(){
		for (var i=0;i < this.allLivings.length;i++){
			var fighter=this.allLivings[i];
			fighter.update();
		}
		this.execSyncBuffer(0);
	}

	__proto.addAction=function(action){
		this.actions.push(action);
	}

	__proto.updateScene=function(){
		if (this.battleStartMsg){
			if (this.isOver){
				return;
			}
			if (this.battleOverMsg){
				this.showBattleOver();
				return;
			}
			this.onHandleMessage();
			this.updateFighter();
			this.delayExecuteTime+=BattleScene.TimeGap;
			var delayFire=0;
			if (this.delayExecuteTime > 400){
				this.delayExecuteTime=0;
				if (this.battlePlayerFireMsg.length > 0){
					if (this._curAction && !this._curAction.isOver){
						this._curAction.update();
						return;
					}
					if (this._curAction){
						this._curAction.destroy();
						this._curAction=null;
					}
					if (this.actions.length){
						this._curAction=this.actions.shift();
						return;
					};
					var msg=this.battlePlayerFireMsg.splice(0,1);
					var battlePlayerFireMsg=msg[0];
					this.hitPerStatistician(battlePlayerFireMsg);
					new SkillAnimationExecutor(battlePlayerFireMsg,this);
				}
			}
		}
	}

	__proto.hitPerStatistician=function(bPlayerFireMsg){
		var msg=bPlayerFireMsg.bombDetail[0];
		var livingID=msg.livingID;
		var fighter=this.getFighter(livingID);
		if (fighter && fighter.type==Fighter.HERO && this.hero.livingId==fighter.livingId){
			var state=this.isHit(bPlayerFireMsg);
			if (state==0){
				this.noHitValue++;
				console.log("命中","命中数量："+this.hitValue,"总次数："+(this.hitValue+this.noHitValue),"命中率:"+(this.hitValue / (this.hitValue+this.noHitValue)));
			}
			else if (state==1){
				this.hitValue++;
				console.log("命中","命中数量："+this.hitValue,"总次数："+(this.hitValue+this.noHitValue),"命中率:"+(this.hitValue / (this.hitValue+this.noHitValue)));
			}
			else if (state==2){
				console.log("飞机过滤");
			}
		}
	}

	__proto.isHit=function(bPlayerFireMsg){
		var state=0;
		for (var i=0;i < bPlayerFireMsg.bombDetail.length;i++){
			var msg=bPlayerFireMsg.bombDetail[i];
			for (var j=0;j < msg.actions.length;j++){
				var actionMsg=msg.actions[j];
				if (actionMsg.type==TriggerType.DAMAGE_PLAYER){
					state=1;
					break ;
				}
				if (actionMsg.type==TriggerType.FLY){
					state=2;
					break ;
				}
			}
			if (state){
				break ;
			}
		}
		return state;
	}

	__proto.exeAddBuff=function(bombLivingId){
		if (!this.allLivings || this.allLivings.length <=0){
			return;
		}
		for (var i=0;i < this.allLivings.length;i++){
			var fighter=this.allLivings[i];
			fighter.executeAddBuffer(bombLivingId);
		}
	}

	__proto.init=function(){
		_super.prototype.init.call(this);
		SoundMgr.instance.playSound(4006039);
		this.root=BattleSceneFactory.getInstance().createBattleScene((""+this.resourceId));
		var rootWith=this.root.width-this.root.x;
		var rootHeight=this.root.height-this.root.y;
		if (this.isShowBorder){
			var sceneBorder=this.battleSceneBorder;
			var borderW=203;
			var borderH=203;
			sceneBorder.width=borderW *2+rootWith;
			sceneBorder.height=borderH *2+rootHeight+3;
			sceneBorder.x=-borderW;
			sceneBorder.y=-borderH;
			this.root.addChildAt(sceneBorder,0);
			this.hitArea=new Rectangle(-borderW,-borderH,sceneBorder.width,sceneBorder.height+3);
		}
		this.width=rootWith;
		this.height=rootHeight;
		this.root.mouseEnabled=true;
		this.root.mouseThrough=true;
		this.addChild(this.root);
		this.initBattleLayers();
		this.initRole();
		this.initObject();
		this.initBallistic();
		this.initMenu();
		this.onHeroSkeletonComplete();
		Laya.timer.callLater(this,this.callLaterHandler);
		CameraManager.instance.setCloseCamera(Cache.ins.battle.isRandomFight());
	}

	__proto.initObject=function(){
		this.objectView=new View();
		this.objectView.mouseEnabled=true;
		this.objectView.mouseThrough=true;
		this.objectView.size(this.width,this.height);
		this.addChild(this.objectView);
	}

	__proto.callLaterHandler=function(){
		MapDragTouchManager.instance.setup(this);
		CameraManager.instance.setup(this);
		this.isOpenResize=true;
	}

	__proto.initRole=function(){
		this.roleView=new View();
		this.roleView.name="roleView";
		this.roleView.mouseEnabled=true;
		this.roleView.mouseThrough=true;
		this.roleView.size(this.width,this.height);
		this.addChild(this.roleView);
		var len=this.battlePrepareMsg.players.length;
		var role;
		for (var i=0;i < len;i++){
			var msg=this.battlePrepareMsg.players[i];
			role=PartFactory.createRole(msg);
			this.allLivings.push(role);
			this.roleView.addChild(role);
		}
		for (var j=0;j < this.battleMapMsg.playerList.length;j++){
			var mapPlayerMsg=this.battleMapMsg.playerList[j];
			role=this.getRole(mapPlayerMsg.livingId);
			role.initView(mapPlayerMsg,this.width,this.height);
		}
		this.hero=this.getHero();
		for (i=0;i < this.battleMapMsg.bombList.length;i++){
			var battleMapObjMsg=this.battleMapMsg.bombList[i];
			var bomb=BombModel.getBombConfigByBombId(battleMapObjMsg.templateId);
			this.crater(0,bomb.HitHole,battleMapObjMsg.posX,this.height-battleMapObjMsg.posY,battleMapObjMsg.livingId);
		}
		for (i=0;i < this.battleMapMsg.livingList.length;i++){
			var npcMsg=this.battleMapMsg.livingList[i];
			this.createNpc(npcMsg);
		}
	}

	__proto.createNpc=function(npcMsg){
		if (npcMsg.type==PartFactory.SCARECROW){
			return;
		};
		var npc=PartFactory.createNpc(npcMsg);
		npc.initView(null,this.width,this.height);
		if((npc instanceof modules.battle_apple.part.npc.AppleMan )){
			(npc).initNpc(this.width,this.height);
		}
		this.roleView.addChild(npc);
		this.allLivings.push(npc);
	}

	__proto.getFighter=function(livingId){
		if (!this.allLivings){
			return null
		}
		for (var i=0;i < this.allLivings.length;i++){
			var fighter=this.allLivings[i];
			if (fighter.livingId==livingId){
				return fighter;
			}
		}
		return null;
	}

	__proto.getOther=function(source){
		if (!this.allLivings){
			return null
		}
		for (var i=0;i < this.allLivings.length;i++){
			var fighter=this.allLivings[i];
			if (fighter !=source){
				return fighter;
			}
		}
		return null;
	}

	__proto.getEnemys=function(){
		if (!this.allLivings){
			return [];
		};
		var enemys=[];
		for (var i=0;i < this.allLivings.length;i++){
			var fighter=this.allLivings[i];
			if (fighter.livingId !=this.hero.livingId && fighter.type==Fighter.ROLE){
				enemys.push(fighter);
			}
		}
		return enemys;
	}

	__proto.getRole=function(livingId){
		if (!this.allLivings){
			return null
		}
		for (var i=0;i < this.allLivings.length;i++){
			var fighter=this.allLivings[i];
			if (fighter.livingId==livingId && (fighter.type==Fighter.ROLE || fighter.type==Fighter.HERO || fighter.type==Fighter.MONSTER)){
				return fighter;
			}
		}
		return null;
	}

	__proto.getHero=function(){
		if (!this.allLivings){
			return null
		}
		for (var i=0;i < this.allLivings.length;i++){
			var fighter=this.allLivings[i];
			if (fighter.type==Fighter.HERO){
				return fighter;
			}
		}
		return null;
	}

	__proto.getNpc=function(livingId){
		if (!this.allLivings){
			return null
		}
		for (var i=0;i < this.allLivings.length;i++){
			var fighter=this.allLivings[i];
			if (fighter.type==Fighter.NPC && fighter.livingId==livingId){
				return fighter;
			}
		}
		return null;
	}

	__proto.onHeroSkeletonComplete=function(){
		var $w=100;
		this._heroWidth=$w;
		this.y=ResizeMgr.bestFitHeight >> 1;
		this.x=ResizeMgr.bestFitWidth >> 1;
		this.updateMap();
	}

	__proto.updateMap=function(){
		CameraManager.instance.setMapPos(this.hero.x,this.hero.y,this._heroWidth+200,ResizeMgr.bestFitHeight / 2-200,500,false,null);
	}

	__proto.initBallistic=function(){
		this.ballisticView=new Sprite();
		this.addChild(this.ballisticView);
	}

	__proto.initMenu=function(){
		var enemys=this.getEnemys();
		if (this.battlePrepareMsg.battleType==3){
			this.menuView=new FourBattleMenu(this.hero,enemys,this);
		}
		else if (this.battlePrepareMsg.battleType==2 || this.battlePrepareMsg.battleType==8){
			this.menuView=new TwoBattleMenuGuide(this.hero,enemys,this);
		}
		else if(this.battlePrepareMsg.battleType==3){
			this.menuView=new FourBattleMenu(this.hero,enemys,this);
		}
		else if (this.battlePrepareMsg.battleType==9){
			this.menuView=new PveBattleMenu(this.hero,enemys,this);
		}
		else if(this.battlePrepareMsg.battleType==10){
			this.menuView=new PvpBattleMenu(this.hero,this.allLivings,this);
		}
		else if(this.battlePrepareMsg.battleType==11){
			this.menuView=new MulitPveBattleMenu(this.hero,this.allLivings,this);
		}
		else if(this.battlePrepareMsg.battleType==6){
			this.menuView=new LocalBattleMenu(this.hero,enemys,this);
		}
		else{
			this.menuView=new TwoBattleMenu(this.hero,enemys,this);
		}
		this.menuView.initMenu();
		this.menuView.refreshMenu(this.battlePrepareMsg);
		Laya.stage.addChild(this.menuView);
		for (var i=0;i < this.allLivings.length;i++){
			var role=this.allLivings[i];
			if (role.type==Fighter.ROLE || role.type==Fighter.HERO || role.type==Fighter.MONSTER){
				(role).checkDie();
			}
		}
	}

	__proto.initBattleLayers=function(){
		this.holeLayer=new Sprite();
		this.holeLayer.width=this.root.renderlayer.width;
		this.holeLayer.height=this.root.renderlayer.height;
		this.holeLayer.blendMode=Render.isWebGL ? "destination-out-my" :"destination-out";
		this.root.renderlayer.addChild(this.holeLayer);
		this.borderLayer=new Sprite();
		this.borderLayer.width=this.root.renderlayer.width;
		this.borderLayer.height=this.root.renderlayer.height;
		this.borderLayer.blendMode="mask-my";
		this.root.renderlayer.addChild(this.borderLayer);
		this.camerapoint=this.root.camerapoint;
	}

	__proto.getSampleCount=function(){
		if(Cache.ins.battle.isGuildFight()|| Cache.ins.battle.isFriendFight()){
			var config=ConfigModel.getConfigData(1115);
			if(config){
				return parseInt(config.ConfigValue);
			}
			return 6;
		};
		var count=10;
		var type=1;
		if(Cache.ins.battle.isRandomFight()){
			type=2;
		};
		var pvp=PVPModel.getDivison(type,PlayerInfo.instance.trophy);
		if(pvp){
			pvp=PVPModel.getPvpConfigByTypeAndDivison(type,pvp.Division);
			if(pvp){
				count=pvp.AuxiliaryLineLength;
			}
		}
		if(!count || count<=0)
			count=10;
		return count;
	}

	__proto.initCurPvpConfig=function(){
		var tempData=RankModel.getDivison(PlayerInfo.instance.trophy);
		var data=PVPModel.getPvpConfigByDivison(tempData.Division);
		return data;
	}

	__proto.getCurPvpConfig=function(){
		return this.curPvpData;
	}

	__proto.calcBallisticGuide=function(g,v0,angle,x,y,fengli,air,m,isGreen){
		if (!this.ballisticGuide){
			this.ballisticGuide=new Sprite();
			this.addChild(this.ballisticGuide);
		}
		if (isGreen){
			this.ballisticView.graphics.clear();
		}
		this.ballisticGuide.graphics.clear();
		var points=Ballistic.sampling(g,v0,angle,x,y,this.height,fengli,air,m,this.wind,this.hero.moveDir,this.getSampleCount());
		this.drawBallisticPointsGuide(points,isGreen);
	}

	__proto.calcBallistic1=function(g,v0,angle,x,y,fengli,air,m,color){
		var points=Ballistic.sampling(g,v0,angle,x,y,this.height,fengli,air,m,this.wind,this.hero.moveDir,this.getSampleCount());
		this.drawBallisticPoints(points,color);
	}

	__proto.createBomb=function(bombID,type,g,v0,angle,x,y,fengli,air,m,dir,time,index,msg){
		var bomb=BombFactory.getInstance().createBomb(bombID,[g,v0,angle,this.height,x,y,fengli,air,m,this.wind,dir,time,index],type);
		this.addChild(bomb);
		bomb.init([g,v0,angle,this.height,x,y,fengli,air,m,this.wind,dir,time,index,msg]);
		bomb.move();
		return bomb;
	}

	__proto.showSceneShake=function(ball){
		var config=BombModel.getBombPerformanceConfigByBombId(ball.bombId);
		var info=this.analyzeShakeInfo(config.HitShake);
		if (info){
			new ShockMapEffect(info,this);
		}
	}

	__proto.analyzeShakeInfo=function(str){
		if (!str){
			return null;
		};
		var shakeInfo=str.split(",");
		if (shakeInfo.length < 4){
			return null;
		}
		return {seekX:int(shakeInfo[0]),seekY:int(shakeInfo[1]),hz:int(shakeInfo[2]),duration:int(shakeInfo[3])}
	}

	__proto.cleanBallisticPoints=function(){
		this.ballisticView.graphics.clear();
	}

	/**画一条灰色 或 绿色的引导线 */
	__proto.drawBallisticPointsGuide=function(ballisticPoints,isCross){
		(isCross===void 0)&& (isCross=false);
		var w=20+ballisticPoints.length;
		for (var i=0;i < ballisticPoints.length;i++){
			var point=ballisticPoints[i];
			var x=point.x;
			var y=point.y;
			var tw=w--;
			var path="battle/menu/ui_baidian.png";
			this.ballisticGuide.graphics.drawTexture(Laya.loader.getRes(path),x-tw / 2,y-tw / 2,tw,tw);
		}
	}

	/**
	*
	*@param ballisticPoints
	*@param color 0白色 1绿色-1红色
	*
	*/
	__proto.drawBallisticPoints=function(ballisticPoints,color){
		(color===void 0)&& (color=0);
		this.cleanBallisticPoints();
		var w=20+ballisticPoints.length;
		for (var i=0;i < ballisticPoints.length;i++){
			var point=ballisticPoints[i];
			var x=point.x;
			var y=point.y;
			var tw=w--;
			var path=color==0 ? "battle/menu/ui_baidian.png" :(color==1 ? "battle/menu/ui_dianlv.png" :"battle/menu/ui_dianhong.png")
			this.ballisticView.graphics.drawTexture(Laya.loader.getRes(path),x-tw / 2,y-tw / 2,tw,tw);
		}
	}

	__proto.crater=function(layerId,craterId,wx,wy,bombLivingId){
		if (TileReader.canDig()){
			if (this.checkCrater(bombLivingId)){
				return;
			}
			this.craterBombs.push(bombLivingId);
			CraterFactory.instance.craterResById(craterId,Handler.create(this,this._crater,[craterId,wx,wy]));
		}
	}

	__proto._crater=function(craterId,wx,wy){
		var url=StringUtils.formate("crack/{0}/crater.png",craterId);
		var burnUrl=StringUtils.formate("crack/{0}/craterBrink.png",craterId);
		var crack=TileReader.getCrack(craterId);
		if (crack){
			var cwidth=crack.getWidth();
			var cheight=crack.getHeight();
			var x=wx-cwidth / 2-this.root.renderlayer.x;
			var y=wy-cheight / 2-this.root.renderlayer.y;
			this.addClip(url,burnUrl,x,y);
			TileReader.dig(wx,this.height-wy,crack,null);
		}
		else{
		}
	}

	__proto.addClip=function(url,burnUrl,x,y){
		var txt=Laya.loader.getRes(url);
		this.holeLayer.graphics.drawTexture(txt,x,y,txt.width *2,txt.height *2);
		var txt1=Laya.loader.getRes(burnUrl);
		this.borderLayer.graphics.drawTexture(txt1,x+(txt.width *2-txt1.width *2)/ 2,y+(txt.height *2-txt1.height *2)/ 2,txt1.width *2,txt1.height *2);
	}

	__proto.checkCrater=function(bombLivingId){
		for (var i=0;i < this.craterBombs.length;i++){
			if (this.craterBombs[i]==bombLivingId){
				return true;
			}
		}
		return false;
	}

	__proto.blast=function(blastName,wx,wy,msg){
		this.playBlastSound(msg.bombID);
		if (blastName && blastName !="0"){
			if (blastName=="blast30"){
				new Boomerang(this.ballisticView,wx,wy);
			}
			else{
				var animation=UIFactory.ins.createGAnimation(blastName,"blastframe",this.ballisticView,false,Handler.create(this,function(){
					animation.destroy(true);
				}));
				animation.x=wx;
				animation.y=wy;
				animation.zOrder=99999999999;
			}
		}
		else{
		}
	}

	/**播放爆炸声音 */
	__proto.playBlastSound=function(bombId){
		var bombPer=BombModel.getBombPerformanceConfigByBombId(bombId);
		if (bombPer){
			var soundId=bombPer.BlastSoundID;
			SoundMgr.instance.playSound(soundId);
		}
	}

	__proto.touchBegin=function(e){
		if (Cache.ins.battle.isRandomFight()){
			this.dragX=e.stageX;
			this.dragY=e.stageY;
			this.isDrag=false;
		}
	}

	__proto.touchMove=function(e){
		if (Cache.ins.battle.isRandomFight()){
			if ((Math.abs(e.stageX-this.dragX)> 20 || Math.abs(e.stageY-this.dragY)> 20)&& !this.isDrag){
				this.isDrag=true;
			}
		}
	}

	__proto.touchEnd=function(e){
		if (Cache.ins.battle.isRandomFight()){
			if (this.fuhuotips){
				this.fuhuotips.removeSelf();
				this.fuhuotips.destroy(true);
				this.fuhuotips=null;
				return;
			}
			if (this.isDrag){
				this.isDrag=false;
				return;
			}
			if (!this.hero.isLive){
				var pos=this.root.globalToLocal(new Point(e.stageX,e.stageY));
				this.hero.chooseRevive(pos);
			}
		}
	}

	// private var isNoHandleSyncScene :Boolean=false;
	__proto.removeEvents=function(){
		EventMgr.ins.event("exit_battle_scene");
		EventMgr.ins.off("battle_ballistic_guide",this,this.calcBallisticGuide);
		EventMgr.ins.off("battle_ballistic_1",this,this.calcBallistic1);
		EventMgr.ins.off("cleanBallisticPoints",this,this.cleanBallisticPoints);
		this.removePublicEvents();
	}

	__proto.removePublicEvents=function(){
		EventMgr.ins.off("recv_battlemapmsg",this,this.recvBattleMapMsg);
		EventMgr.ins.off("recv_battlestart",this,this.recvBattleStart);
		EventMgr.ins.off("recv_overturn",this,this.recvOverTurn);
		EventMgr.ins.off("fighter_die",this,this.dead);
		EventMgr.ins.off("resetzibaodan",this,this.resetZibaodan);
		EventMgr.ins.off("add_message",this,this.addMessage);
		EventMgr.ins.off("changeCrown",this,this.changeCrown);
		EventMgr.ins.off("roleskeleton_complete",this,this.roleSkeletonComplete);
		EventMgr.ins.off("SHOW_SKILL_GROUP",this,this.showSkillGroup);
		EventMgr.ins.off("SHOW_SKILL_GROUP_AFTER_FIRE",this,this.showSkillGroupAfterFire);
		EventMgr.ins.off(String(0x3AA1),this,this.goToShowSkill);
		EventMgr.ins.off("OVER_TURN",this,this.overTurn);
		EventMgr.ins.off("sync_prepare",this,this.syncPrepare);
		EventMgr.ins.off("ROLE_MOVE_DIR",this,this.onRoleMoveDir);
	}

	__proto.exit=function(){
		if (this._isdestroyed){
			return;
		}
		this._isdestroyed=true;
		console.log("battlescene exit-------------------------");
		MapDragTouchManager.instance.removeDragEvent();
		CameraManager.instance.remove();
		if(this.menuView !=null)
			this.menuView.destroyMenu();
		BombFactory.getInstance().clearBombList();
		var fighter;
		for (var i=0;i < this.allLivings.length;i++){
			fighter=this.allLivings[i];
			fighter.destroyFighter();
		}
		this.allLivings.splice(0);
		this.allLivings=null;
		for (i=0;i < this.deads.length;i++){
			fighter=this.deads[i];
			fighter.destroyFighter();
		}
		this.deads.splice(0);
		this.deads=null;
		this.executorFactory.destroy();
		TileReader.destroy();
		CraterFactory.instance.destroy();
		this.removeEvents();
		this.clearRes();
		_super.prototype.exit.call(this);
	}

	__proto.showSkillGroup=function(sourceId,preformId,handler){
		var bb=new SkillGroupEffect(sourceId,preformId,handler);
		this.menuView.addChild(bb);
	}

	__proto.getSkillGroupCount=function(){
		return this.mpArrSkill.length;
	}

	__proto.goToShowSkill=function(sourceId){
		if (this.mpArrSkill.length > 0){
			var msg=this.mpArrSkill[0];
			if (msg.sourceID==sourceId){
				this.mpArrSkill.splice(0,1);
				this.showSkillGroup(sourceId,msg.value,Handler.create(this,this.goToShowSkill));
			}
		}
		else{
			this.resetSkillGroup();
		}
	}

	__proto.resetSkillGroup=function(){
		Cache.ins.battle.setDelayFire(false);
		Cache.ins.battle.setFireMsg(null);
		this.mpArrSkill=[];
	}

	__proto.overTurn=function(){}
	//trace("Hugh#overTurn Run ")
	__proto.showSkillGroupAfterFire=function(msg){
		this.mpArrSkill.push(msg);
	}

	__proto.clearRes=function(){
		this.clearBattleMenuRes();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		SkillAnimationExecutor.clearAll();
		DelayExecutor.clearAll();
		if (this.holeLayer){
			this.holeLayer.graphics.clear(true);
			this.holeLayer.graphics.destroy();
			this.holeLayer=null;
		}
		if (this.borderLayer){
			this.borderLayer.graphics.clear(true);
			this.borderLayer.graphics.destroy();
			this.borderLayer=null;
		}
		if (this.dicEffect){
			this.dicEffect.removeSelf();
			this.dicEffect.destroy(true);
			this.dicEffect=null;
		}
		if (this.fuhuotips){
			this.fuhuotips.removeSelf();
			this.fuhuotips.destroy(true);
			this.fuhuotips=null;
		}
		if (this.allLivings){
			for (var i=0,len=this.allLivings.length;i < len;i++){
				var fighter=this.allLivings[i];
				fighter.destroyFighter();
			}
			this.allLivings.length=0;
		}
		if (this.allObjects){
			for (i=0,len=this.allObjects.length;i < len;i++){
				var object=this.allObjects[i];
				object.destroy(true);
				object=null;
			}
			this.allObjects.length=0;
		}
		this.root.destroy(true);
		Laya.timer.clearAll(this);
		Laya.timer.clearAll(this.camerapoint);
		this.menuView && this.menuView.destroy(true);
		_super.prototype.destroy.call(this,destroyChild);
		this.battlePlayerFireMsg.splice(0);
		this.battlePlayerFireMsg=null;
		this.battleSkillResultMsg=null;
		this.battleNextTurnMsg=null;
		this.crackIds.splice(0);
		this.crackIds=null;
		this.battleOverMsg=null;
		this.ballistics.splice(0);
		this.ballistics=null;
		this.battleSyncPlayerStateMsg.splice(0);
		this.battleSyncPlayerStateMsg=null;
		this.battleSceneObjectListMsg.splice(0);
		this.battleSceneObjectListMsg=null;
		this.mapobjremoveList.splice(0);
		this.mapobjremoveList=null;
		this.mapobjaddList.splice(0);
		this.mapobjaddList=null;
		this.executorFactory=null;
		this.dicEffect=null;
		this.craterBombs.splice(0);
		this.craterBombs=null;
		this.fuhuotips=null;
		this.layerSegments=null;
		this.layerPoints=null;
		this.layerRects=null;
		this.allLivings=null;
		this.allObjects=null;
		this.root=null;
		this.roleView=null;
		this.objectView=null;
		this.ballisticView=null;
		this.ballisticGuide=null;
		this.menuView=null;
		this.hero=null;
		this.debugPoints=null;
		this.curTouchObj=null;
		this.battlePrepareMsg=null;
		this.battleMapMsg=null;
		this.battleStartMsg=null;
		this.messageList=null;
		this.curPvpData=null;
		this.camerapoint=null;
		this._curAction=null;
		this.actions=null;
	}

	// }
	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		var scalew=_bestFitWidth / this.width;
		this.scale(scalew,scalew);
		this.x=_bestFitWidth / 2;
		this.y=_bestFitHeight / 2;
		EventMgr.ins.event("changescale",scalew);
		var dy=(this.height / 2-this.camerapoint.y)*scalew;
		this.y=this.y+dy;
		if (this.y-scalew *this.height / 2 > 0){
			this.y=scalew *this.height / 2;
		}
	}

	__proto.changeCrown=function(livingId,isSoonWin){
		for (var i=0;i < this.allLivings.length;i++){
			var fighter=this.allLivings[i];
			if (fighter.type==Fighter.ROLE || fighter.type==Fighter.HERO || fighter.type==Fighter.MONSTER){
				(fighter).cleanCrown();
			}
		};
		var role=this.getRole(livingId);
		if (role && isSoonWin){
			role.changeCrown(livingId);
		}
	}

	__getset(0,__proto,'adaptScaleHeight',function(){
		return this.height;
	});

	__getset(0,__proto,'preloadRes',function(){
		var res=[];
		if (this.needLoading){
			this.addBattleSceneRes(res);
			this.addBattleRes(res);
		}
		return res;
	});

	__getset(0,__proto,'adaptEdgeHeight',function(){
		return this.isShowBorder ? this.battleSceneBorder.height :this.height;
	});

	__getset(0,__proto,'adaptScaleWidth',function(){
		return this.width;
	});

	__getset(0,__proto,'preLocalRes',function(){
		return this.localRes;
	});

	__getset(0,__proto,'battleSceneBorder',function(){
		if (BattleScene._battleSceneBorder==null || BattleScene._battleSceneBorder.destroyed){
			BattleScene._battleSceneBorder=new Image("battle/menu/ui_bg_2.png");
			BattleScene._battleSceneBorder.sizeGrid="254,254,254,254,1";
		}
		return BattleScene._battleSceneBorder;
	});

	__getset(0,__proto,'adaptEdgeWidth',function(){
		return this.isShowBorder ? this.battleSceneBorder.width :this.width;
	});

	BattleScene.CONFIG_FRIEND_POINTS=1115;
	BattleScene._battleSceneBorder=null;
	__static(BattleScene,
	['TimeGap',function(){return this.TimeGap=1 / 30 *1000;}
	]);
	return BattleScene;
})(BaseScene)


/**
*战斗主界面
*@author huyouwei
*/
//class modules.battle.view.menu.BattleMenu extends ui.menu.battle.BattleMenuUI
var BattleMenu=(function(_super){
	function BattleMenu(hero,enemys,battleScene){
		this.hero=null;
		this.enemys=null;
		this.cards=[];
		//public var cardBgs:Array=[];
		this.waitCards=[];
		this.commonSkill=0;
		this.skillIds=[];
		this.phyStrength=1;
		this.maxPhyStrength=1;
		this._time=-1;
		this.testrotation=2000;
		this.redBox=null;
		this.battleScene=null;
		this.angleUi=null;
		this.emoticons=null;
		/**是否屏蔽对手表情 */
		this.islock=false;
		this.turnId=1;
		this.feijiTurnId=-3;
		this.friendSkillTurnId=-5;
		this.coolFeijiText=null;
		this.coolFriendSkillText=null;
		this.startIndex=0;
		this.skillTips=null;
		this._bestFitWidth=NaN;
		this._bestFitHeight=NaN;
		this.tuoguan=null;
		this.userHead=null;
		this.skillIcons=[];
		this.fengliani=null;
		this.isDelayOver=false;
		this.isMyTurn=false;
		this.isShowCard=true;
		this.hasShowArr={};
		this.nextTurnMsg=null;
		this.COUNT_DOWN_CONFIG=0;
		this.longTime=0;
		this.isLongClick=false;
		this.skillConfigs=[];
		this._chatView=null;
		this.curValue=-1;
		this.useSkillCount=0;
		this.CARD_NAME="cardAni";
		this.CARD_WIDTH=102;
		/**
		*初始化卡牌
		*
		*/
		this.startX=-5;
		this.startY=0;
		this.endX=408;
		this.endY=0;
		/**指引 使用道具动画 */
		this.effect_dianji=null;
		this.isWeakGuideStep1=false;
		/**指引 拉线动画 */
		this.effect_laxian=null;
		this.isWeakGuideStep2=false;
		BattleMenu.__super.call(this);
		this.hero=hero;
		this.enemys=enemys;
		this.battleScene=battleScene;
		this.mouseEnabled=true;
		this.mouseThrough=true;
		this.time.spaceX=-10;
		this.registerHandler();
		var str=ConfigModel.getConfigData(1002).ConfigValue;
		var arr=str.split("|");
		var temp;
		for(var $each_temp in arr){
			temp=arr[$each_temp];
			var array=temp.split(",");
			this.skillConfigs.push(array);
		}
	}

	__class(BattleMenu,'modules.battle.view.menu.BattleMenu',_super);
	var __proto=BattleMenu.prototype;
	__proto.initMenu=function(){
		this.initUseCards();
		this.initUnUseCard();
		this.initWater();
		this.initFriendSkill();
		this.initChat();
		this.angleUi=new AngleUI();
		this.angleUi.labPower.text=LanguageMgr.Ins.GetLan("9070017");
		this.angleUi.labAngle.text=LanguageMgr.Ins.GetLan("9070018");
		this.angleUi.visible=false;
		this.addChild(this.angleUi);
		this.hero.angleUi=this.angleUi;
		this.playInitCardAni();
		this.setSkillGray();
		this.visibleBtn.visible=false;
		this.initCoolDownTime();
		this.mpTextPlane.text=LanguageMgr.Ins.GetLan("9001001");
		this.visibleBtn.skin=LanguageMgr.Ins.getBattleLanguagePath("ui_ssjt_but.png");
	}

	__proto.initChat=function(){
		this._chatView=new ChatBriefBattleView();
		this.addChild(this._chatView);
		this._chatView.pos(12,14);
	}

	__proto.initFriendSkill=function(){
		if(this.hero.friendSkill > 0){
			this.friendskillicon.gray=false;
			this.firendskillname.text=LanguageMgr.Ins.GetLan("9002310");
			this.firendskillname.color="#ffffff";
			}else{
			this.friendskillicon.gray=true;
			this.firendskillname.text=LanguageMgr.Ins.GetLan("9002309");
			this.firendskillname.color="#ff5050";
		}
		this.friendskil.visible=Cache.ins.battle.isPvpFight();
	}

	__proto.initCoolDownTime=function(){}
	__proto.refreshMenu=function(battlePrepareMsg){
		this.initRandomSkill();
		this.turnId=battlePrepareMsg.curTurn;
		this.updateWind(battlePrepareMsg.wind);
		this.calcSkillRound();
		this.checkFriendSkillRound();
		this.checkFeijiRound();
		this.updateBattleTurn(battlePrepareMsg.maxTurn-battlePrepareMsg.curTurn);
		this.updateShuiDi(this.hero.phyStrength,this.hero.maxPhyStrength,true);
		this.phyStrength=this.hero.phyStrength;
		this.maxPhyStrength=this.hero.maxPhyStrength;
		this.refreshCard(this.turnId);
	}

	__proto.updateShuiDi=function(value,maxValue,isInit){
		(isInit===void 0)&& (isInit=false);
		this.feishui.text=StringUtils.formate("{0}/{1}",value,maxValue);
		this.shuibg.skin="battle/menu/ui_shuidi_big"+value+".png";
		if(this.curValue !=-1){
			var addValue=value-this.curValue;
			if(addValue !=0){
				var isAdd=addValue > 0 ? true :false;
				var sprite=new Sprite();
				var fuhao=new Image(isAdd ? "battle/menu/b+.png":"battle/menu/b-.png");
				fuhao.anchorX=0.5;
				fuhao.anchorY=0.5;
				sprite.addChild(fuhao);
				var num=new Image("battle/menu/b"+Math.abs(addValue)+".png");
				num.anchorX=0.5;
				num.anchorY=0.5;
				num.x=24;
				sprite.addChild(num);
				sprite.x=12;
				sprite.y=-10;
				sprite.scale(1.3,1.3);
				this.shuibg.addChild(sprite);
				Tween.to(sprite,{y:-40},1500,Ease.cubicOut,Handler.create(this,function(){
					if(sprite){
						sprite.removeSelf();
						sprite.destroy();
					}
				}));
			}
		}
		this.curValue=value;
	}

	__proto.calcSkillRound=function(){
		var skillMsg,data;
		for(var i=0;i < this.hero.skillList.length;i++){
			skillMsg=this.hero.skillList[i];
			if(skillMsg.skillId==1000001){
				data=SkillModel.getSkillConfigData(1000001);
				this.feijiTurnId=this.turnId-(data.Cooldown-skillMsg.cooldown);
			}
			if(skillMsg.skillId==this.hero.friendSkill){
				data=SkillModel.getSkillConfigData(this.hero.friendSkill);
				this.friendSkillTurnId=this.turnId-(data.Cooldown-skillMsg.cooldown);
			}
		}
	}

	__proto.createFengli=function(){
		if(!this.fengliani){
			this.fengliani=new AniSkeleton("assets/animation/uieffect/ui8.sk",null,0,true);
			this.fengliani.x=0;
			this.fengliani.y=0;
			this.fengliani.zOrder=-1;
			this.fengli.addChild(this.fengliani);
		}
	}

	__proto.onBattleOver=function(){
		SocketManager.Instance.out.sendBattleOver();
	}

	__proto.syncHp=function(){
		if (this.checkNeedRedBox()){
			this.updateRedBox();
			}else{
			this.destroyRedBox();
		}
	}

	__proto.syncHDHp=function(hp,side,livingId){
		if (this.checkNeedRedBox()){
			this.updateRedBox();
			}else{
			this.destroyRedBox();
		}
	}

	__proto.checkNeedRedBox=function(){
		return false;
	}

	__proto.checkNeedCoundDown=function(){
		return false;
	}

	__proto.syncManDate=function(isMandate,side,livingId){}
	__proto.checkHeadPos=function(){
		return true;
	}

	__proto.updateBattleTurn=function(turn,turnMsg){
		this.nextTurnMsg=turnMsg;
		if (turn+1 >=int(ConfigModel.getConfigData(1009).ConfigValue)){
			this.battletime.value=String(ConfigModel.getConfigData(1009).ConfigValue);
			}else{
			this.battletime.value=String(turn+1);
		}
	}

	__proto.updateCountDown=function(handler){
		if(this.battleScene.battlePrepareMsg.battleType==3){
			var turn=int(this.battletime.value);
			if ((turn <=int(ConfigModel.getConfigData(1053).ConfigValue))&& !this.hasShowArr[turn] && this.checkNeedCoundDown()){
				var countDownEffect=new CountDownEffect(this.width,this.height,turn,handler);
				this.hasShowArr[turn]=true;
				this.addChild(countDownEffect)
				Laya.timer.once(3000,this,this.destroyCountDown,[countDownEffect]);
				return;
			}
		}
		if (handler){
			handler.run();
		}
	}

	__proto.destroyCountDown=function(countDownEffect){
		if (countDownEffect){
			countDownEffect.showComplete();
		}
	}

	__proto.updateRedBox=function(){
		if (!this.redBox){
			this.redBox=new RedBoxEffect();
			this.addChild(this.redBox);
		}
	}

	__proto.destroyRedBox=function(){
		if (this.redBox){
			this.redBox.removeSelf();
			this.redBox.destroy(true);
			this.redBox=null;
		}
	}

	__proto.playInitCardAni=function(){
		for(var i=0;i < this.cards.length;i++){
			var card=this.cards[i];
			card.visible=false;
		};
		var maxShowNum=this.getMaxShowSkillNum();
		var idx=5-maxShowNum;
		var cardx=this.x+idx *this.CARD_WIDTH-66;
		this.shuibg.x=cardx;
		this.startIndex=-1;
		Laya.timer.once(1000,this,this.startAni);
	}

	__proto.startAni=function(){
		this.startIndex=this.startIndex+1;
		if(this.startIndex >=this.cards.length){
			EventMgr.ins.event("guide_useSkill");
			return;
		}
		this.oneAni(this.startIndex,Handler.create(this,this.startAni));
	}

	__proto.oneAni=function(index,handler){
		var maxShowNum=this.getMaxShowSkillNum();
		var idx=5-maxShowNum;
		var skill1=this.skillIds[index];
		var skill2=this.skillIds[index+1];
		var cx=this.startX+(index+idx)*this.CARD_WIDTH;
		var cy=this.startY;
		var bx=this.startX+5 *this.CARD_WIDTH;
		var by=this.startY;
		var card=this.cards[index];
		card.init(skill1,index+1);
		card.visible=true;
		card.x=bx;
		card.y=by;
		card.alpha=0;
		this.waitCards[0].init(skill2);
		this.waitCards[1].init(skill2);
		Tween.to(card,{x:cx,y:cy,alpha:1},5/30 *1000,null,handler);
	}

	__proto.getOne=function(value){
		value=Math.floor(value);
		return value;
	}

	__proto.refreshDistance=function(){}
	__proto.registerHandler=function(){
		this.toleft.on("mousedown",this,this.moveLeft);
		this.toleft.on("mouseup",this,this.stop);
		this.toleft.on("mouseout",this,this.stop);
		this.toright.on("mousedown",this,this.moveRight);
		this.toright.on("mouseup",this,this.stop);
		this.toright.on("mouseout",this,this.stop);
		this.visibleBtn.on("click",this,this.visibleCardBox);
		this.feiji.clickHandler=Handler.create(this,this.useFeiji,null,false);
		this.friendskil.clickHandler=Handler.create(this,this.useFriendSkill,null,false);
		this.friendskil.on("mousedown",this,this.longClickBegin);
		this.friendskil.on("mouseup",this,this.longClickEnd);
		this.chat.on("click",this,this.openchat);
		this.chat.mouseEnabled=true;
		this.btnlock.clickHandler=new Handler(this,this.onLock);
		this.btnUnlock.clickHandler=new Handler(this,this.onLock);
		this.btnlock.visible=false;
		this.lockBox.visible=false;
		EventMgr.ins.on("refreshpoint",this,this.refreshPoint);
		EventMgr.ins.on("sync_menu_hp",this,this.syncHp);
		EventMgr.ins.on("refreshdistance",this,this.refreshDistance);
		EventMgr.ins.on("usecard",this,this.useCard);
		EventMgr.ins.on("open_skilltips",this,this.openSkillTips);
		EventMgr.ins.on("close_skilltips",this,this.closeSkillTips);
		EventMgr.ins.on("sync_mandate",this,this.syncManDate);
		EventMgr.ins.on("sync_hdhp",this,this.syncHDHp);
		EventMgr.ins.on("init_hero_baseinfo",this,this.calcSkillRound);
	}

	__proto.useFriendSkill=function(){
		if(this.isLongClick){
			this.isLongClick=false;
			return;
		}
		if(this.hero.friendSkill > 0){
			if(this.friendskillicon.gray){
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007397"));
				return;
			};
			var msg=new com.road.ddt.proto.battle.BattleUseSkillMsg();
			msg.pos=-1;
			SocketManager.Instance.sendSocketData(0x3AAA,msg);
			}else{
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002311"));
		}
	}

	//"需与好友组队才可激活"
	__proto.longClickEnd=function(e){
		EventMgr.ins.event("close_skilltips");
		Laya.timer.clear(this,this.calcLongClick);
		e.stopPropagation();
	}

	__proto.longClickBegin=function(){
		this.longTime=0;
		Laya.timer.frameLoop(1,this,this.calcLongClick);
		this.stage.on("mouseup",this,this.longClickEnd);
	}

	__proto.calcLongClick=function(){
		this.longTime=this.longTime+1;
		if(this.longTime >=15){
			Laya.timer.clear(this,this.calcLongClick);
			this.onHandleLongClick();
		}
	}

	__proto.onHandleLongClick=function(){
		this.isLongClick=true;
		var friendSkill=this.hero.friendSkill;
		if(this.hero.friendSkill <=0){
			var curFriendSkill=SkillModel.getFriendSkillByLevel(PlayerInfo.instance.friendSkillLevel);
			friendSkill=curFriendSkill.SkillID;
		}
		EventMgr.ins.event("open_skilltips",[friendSkill,this.friendskil]);
	}

	__proto.closeSkillTips=function(){
		if(this.skillTips){
			this.skillTips.removeSelf();
			this.skillTips.destroy(true);
			this.skillTips=null;
		}
	}

	__proto.openSkillTips=function(skillId,card){
		if(!this.skillTips){
			this.skillTips=new SkillTips(skillId);
			var point=card.localToGlobal(new Point(0,0));
			if(point.x >=this._bestFitWidth-430)
				point.x=this._bestFitWidth-430;
			this.skillTips.x=point.x;
			this.skillTips.y=point.y-this.skillTips.height-10;
			this.addChild(this.skillTips);
		}
	}

	__proto.useCard=function(index,skillId,gray){
		var skillData=SkillModel.getSkillConfigData(skillId);
		if (skillData.BasicSkill==1025001){
			this.isDelayOver=true;
		}
		if(gray){
			return;
		};
		var msg=new com.road.ddt.proto.battle.BattleUseSkillMsg();
		msg.pos=index;
		SocketManager.Instance.sendSocketData(0x3AAA,msg);
	}

	__proto.refreshPoint=function(msg,turnMsg){
		this.updateShuiDi(msg.phyStrength,msg.maxPhyStrength);
		this.phyStrength=msg.phyStrength;
		this.maxPhyStrength=msg.maxPhyStrength;
		this.refreshCard(turnMsg.turnID);
	}

	__proto.refreshCard=function(curTurnId){
		this.turnId=curTurnId;
		for(var i=0;i < this.cards.length;i++){
			var card=this.cards[i];
			if(card.costActPoint > this.phyStrength){
				card.gray=true;
				if(card.getChildByName(this.CARD_NAME)){
					(card.getChildByName(this.CARD_NAME)).visible=false;
				}
			}
			else{
				card.gray=false;
				if(card.getChildByName(this.CARD_NAME)){
					(card.getChildByName(this.CARD_NAME)).visible=true;
				}
			}
		}
		this.waitCards[0].gray=false;
		this.waitCards[1].gray=false;
		this.nousecard.gray=false;
		this.checkFeijiRound();
		this.checkFriendSkillRound();
	}

	__proto.checkFeijiRound=function(){
		var data=SkillModel.getSkillConfigData(1000001);
		var coolDone=this.turnId-this.feijiTurnId >=data.Cooldown;
		var count=data.Cooldown-(this.turnId-this.feijiTurnId);
		this.feiji.gray=!coolDone;
		if(this.coolFeijiText){
			this.coolFeijiText.removeSelf();
			this.coolFeijiText.destroy(true);
			this.coolFeijiText=null;
		}
		if(count > 0){
			this.coolFeijiText=new Label(""+count);
			this.coolFeijiText.fontSize=25;
			this.coolFeijiText.anchorX=0.5;
			this.coolFeijiText.anchorY=0.5;
			this.coolFeijiText.x=this.feiji.width/2;
			this.coolFeijiText.y=this.feiji.height/2;
			this.coolFeijiText.color="#ffffff";
			this.feiji.addChild(this.coolFeijiText);
		}
		return coolDone;
	}

	__proto.checkFriendSkillRound=function(){
		if(this.hero.friendSkill <=0)
			return false;
		var data=SkillModel.getSkillConfigData(this.hero.friendSkill);
		var coolDone=this.turnId-this.friendSkillTurnId >=data.Cooldown;
		this.friendskillicon.gray=!coolDone;
		return coolDone;
	}

	__proto.setSkillGray=function(){
		for(var i=0;i < this.cards.length;i++){
			var card=this.cards[i];
			card.gray=true;
			if(card.getChildByName(this.CARD_NAME)){
				(card.getChildByName(this.CARD_NAME)).visible=false;
			}
		}
		this.waitCards[0].gray=true;
		this.waitCards[1].gray=true;
		this.feiji.gray=true;
		this.friendskillicon.gray=true;
		this.nousecard.gray=true;
	}

	__proto.useSkill=function(skillId){
		SoundMgr.instance.playSound(4003007);
		this.useSkillCount+=1;
		for(var i=0;i < this.skillIds.length;i++){
			if(this.skillIds[i]==skillId){
				var last=this.skillIds.splice(i,1);
				this.skillIds.push(last[0]);
				break ;
			}
		};
		var card=this.getCardBySkillId(skillId);
		if(card){
			this.phyStrength=this.phyStrength-card.costActPoint;
			this.updateShuiDi(this.phyStrength,this.maxPhyStrength);
			this.sortCards(card);
			card.fadeOut(this,this.onCallBacl1);
		}
		if(this.isWeakGuideStep1){
			this.weakGuideStep2();
		}
		this.clearWeekGuideStep1();
	}

	__proto.onCallBacl1=function(card){
		this.refreshCard(this.turnId);
		card.visible=true;
		if (this.isDelayOver){
			this.battleScene.hero.overturn();
			this.overturn();
			this.isDelayOver=false
		}
		EventMgr.ins.event("onCallBacl1");
	}

	__proto.sortCards=function(card){
		for(var i=0;i < this.cards.length;i++){
			var temp=this.cards[i];
			if(temp==card){
				var last=this.cards.splice(i,1);
				this.cards.push(last[0]);
			}
		}
	}

	__proto.getCardBySkillId=function(skillId){
		for(var i=0;i < this.cards.length;i++){
			var card=this.cards[i];
			if(card.skillId==skillId){
				return card;
			}
		}
		return null;
	}

	__proto.getMaxShowSkillNum=function(){
		var num=0;
		var level=PlayerInfo.instance.grade;
		if(this.skillConfigs && this.skillConfigs.length > 2){
			if(level >=this.skillConfigs[2][0]){
				num=this.skillConfigs[2][1];
			}
			else if(level >=this.skillConfigs[1][0]){
				num=this.skillConfigs[1][1];
			}
			else{
				num=this.skillConfigs[0][1];
			}
		}
		else{
			if(level >=25){
				num=5;
			}
			else if(level >=15){
				num=4;
			}
			else{
				num=3;
			}
		}
		return num;
	}

	__proto.openchat=function(e){
		if(this.emoticons==null){
			this.emoticons=new Emoticons();
			this.emoticons.x=64;
			this.emoticons.y=93;
			this.addChild(this.emoticons);
		}
		if (this.emoticons.visible){
			this.emoticons.hide();
			this.lockBox.visible=false;
			}else {
			this.emoticons.show();
			this.lockBox.visible=true;
		}
		e.stopPropagation();
	}

	__proto.hideUnlockBtn=function(){
		this.lockBox.visible=false;
		this.emoticons && this.emoticons.hide();
	}

	/**屏蔽对手 */
	__proto.onLock=function(evt){
		this.islock=!this.islock;
		if(this.islock){
			this.btnlock.visible=true;
			this.btnUnlock.visible=false;
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007395"));
			}else{
			this.btnlock.visible=false;
			this.btnUnlock.visible=true;
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007396"));
		}
	}

	__proto.useFeiji=function(){
		if(!this.checkFeijiRound()){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007397"));
			return;
		};
		var msg=new com.road.ddt.proto.battle.BattleUseSkillMsg();
		msg.pos=0;
		SocketManager.Instance.sendSocketData(0x3AAA,msg);
	}

	__proto.initUseCards=function(){
		var x=this.startX;
		var y=this.startY;
		var maxShowNum=this.getMaxShowSkillNum();
		var idx=5-maxShowNum;
		for(var i=0;i < maxShowNum;i++){
			var card=new Card();
			card.x=x+idx *this.CARD_WIDTH;
			card.y=y;
			this.cardlist.addChild(card);
			this.cards.push(card);
			if(NewGuideMgr.ins.isNewGuide){
				var nameIndx=card.quality >=3? 1 :0;
				var ani=new AniSkeleton("kapai_1","ui",nameIndx,true);
				var cardScale=0.7;
				ani.scaleX=ani.scaleY=cardScale;
				ani.blendMode="light";
				ani.name=this.CARD_NAME;
				ani.x=50;
				ani.y=64;
				card.addChild(ani);
			}
			idx++;
		}
	}

	// }
	__proto.initUnUseCard=function(){
		for(var i=0;i < 2;i++){
			var unuseCard=new UnuseCard();
			this.nousecard.addChild(unuseCard);
			this.waitCards.push(unuseCard);
		}
	}

	__proto.initRandomSkill=function(){
		var maxShowNum=this.getMaxShowSkillNum();
		var uesSkillList=[];
		this.skillIds=[];
		var _skillIds=this.hero.skills.split(",");
		this.commonSkill=int(_skillIds[0]);
		for(var i=1;i < _skillIds.length;i++){
			var skillId=int(_skillIds[i]);
			if(skillId > 0){
				this.skillIds.push(skillId);
				if(i < maxShowNum&&uesSkillList.indexOf(skillId)<0){
					uesSkillList.push(skillId);
					var card=this.cards[i-1];
					if(card){
						card.init(skillId,i);
						if(card.getChildByName(this.CARD_NAME)){
							var idx=card.quality >=3 ? 1 :0;
							(card.getChildByName(this.CARD_NAME)).play(idx,true);
						}
					}
					}else if(i==maxShowNum){
					this.waitCards[0].init(skillId);
					this.waitCards[1].init(skillId);
				}
			}
		}
	}

	/**
	*展开技能卡牌
	*@param handler
	*
	*/
	__proto.shuffleCards=function(handler,isAddCard){
		(isAddCard===void 0)&& (isAddCard=true);
		var x=this.startX;
		var y=this.startY;
		var delay=0;
		var cardx=NaN;
		var cardy=NaN;
		var curShowCardNum=0;
		var c;
		for(var $each_c in this.cards){
			c=this.cards[$each_c];
			if(c.visible && c.alpha !=0){
				curShowCardNum++;
			}
		};
		var maxShowNum=isAddCard ? this.getMaxShowSkillNum():curShowCardNum;
		var idx=5-maxShowNum;
		cardx=x+idx *this.CARD_WIDTH-66;
		cardy=this.shuibg.y;
		delay=0;
		Tween.clearAll(this.shuibg);
		this.fadeIn(this.shuibg,cardx,cardy,delay,null);
		for(var i=0;i < maxShowNum;i++){
			cardx=x+idx *this.CARD_WIDTH;
			cardy=y;
			var card=this.cards[i];
			if(isAddCard){
				card.init(this.skillIds[i],i+1);
				if(card.getChildByName(this.CARD_NAME)){
					var nameOrIndex=card.quality >=3 ? 1 :0;
					(card.getChildByName(this.CARD_NAME)).play(nameOrIndex,true);
				}
				if(!card.visible || card.alpha==0){
					card.x=433;
					card.y=36;
				}
				card.visible=true;
			}
			delay=(idx+1)*2/30;
			idx++;
			if(i >=maxShowNum-1){
				card.fadeIn(cardx,cardy,delay,handler);
			}
			else{
				card.fadeIn(cardx,cardy,delay,null);
			}
		}
		this.waitCards[0].init(this.skillIds[maxShowNum]);
		this.waitCards[1].init(this.skillIds[maxShowNum]);
	}

	/**
	*收缩技能卡牌
	*
	*/
	__proto.shrinkCards=function(){
		var x=this.endX;
		var y=this.endY;
		var delay=0;
		var cardx=NaN;
		var cardy=NaN;
		var maxShowNum=this.getMaxShowSkillNum();
		var idx=0;
		for(var i=maxShowNum-1;i >=0;i--){
			cardx=x-idx *this.CARD_WIDTH *0.2;
			cardy=y;
			var card=this.cards[i];
			this.cardlist.addChild(card);
			delay=idx *2/30;
			if(!card.visible || card.alpha==0){
				continue ;
			}
			idx++;
			card.fadeIn(cardx,cardy,delay,null);
		}
		cardx=cardx-70;
		cardy=this.shuibg.y;
		delay=idx *2/30;
		this.fadeIn(this.shuibg,cardx,cardy,delay,Handler.create(this,function(){
		}));
	}

	//waitCards[1].init(skillIds[5]);
	__proto.fadeIn=function(display,x,y,delay,handler){
		Tween.to(display,{x:x,y:y,alpha:1},5/30 *1000,null,handler,delay*1000);
	}

	__proto.initWater=function(){
		this.feishui.text=this.hero.phyStrength+"/"+this.hero.maxPhyStrength;
	}

	__proto.stop=function(){
		this.hero.stop();
	}

	__proto.moveRight=function(){
		this.hero.move(Fighter.DIR_RIGHT);
	}

	__proto.moveLeft=function(){
		this.hero.move(Fighter.DIR_LEFT);
	}

	__proto.perEnterShiDou=function(handler){
		var effect=new RightToLeftEffect(LanguageMgr.Ins.getBattleLanguagePath("ui_sidou_zi.png"),handler);
		this.addChild(effect);
	}

	__proto.enterShiDou=function(handler){
		SoundMgr.instance.playSound(4002001);
		var sidou=new SiDouEffect(this.width/2,this.height/2,handler,LanguageMgr.Ins.getBattleLanguagePath("ui_sidou_zi_1.png"));
		Laya.timer.once(2000,this,this.destroySiDou,[sidou,handler]);
		this.addChild(sidou);
	}

	__proto.visibleCardBox=function(){
		if (this.isShowCard){
			this.cardbox.visible=false;
			this.visibleBtn.skin=LanguageMgr.Ins.getBattleLanguagePath("ui_zkjt_but.png");
			}else{
			this.cardbox.visible=true
			this.visibleBtn.skin=LanguageMgr.Ins.getBattleLanguagePath("ui_ssjt_but.png");
		}
		this.isShowCard=!this.isShowCard;
	}

	__proto.destroySiDou=function(sidou,handler){
		Laya.timer.clear(this,this.destroySiDou);
		if (handler){
			handler.run();
		}
		if (sidou){
			sidou.removeSelf();
			sidou.destroy(true);
		}
		sidou=null;
	}

	__proto.continueAttack=function(msg,turnMsg){
		SoundMgr.instance.playSound(4003009);
		var continueEffect=new TweenEffect(this.width/2,this.height / 2,LanguageMgr.Ins.getBattleLanguagePath("ui_zdn_lianxu.png"));
		this.addChild(continueEffect);
		Laya.timer.once(3000,this,this.destroyContinueEffect,[continueEffect]);
		this.refreshPoint(msg,turnMsg);
		this.isMyTurn=true;
		this.initTime(Cache.ins.battle.getTimeOut());
	}

	__proto.destroyContinueEffect=function(continueEffect){
		if(continueEffect){
			continueEffect.showComplete();
		}
	}

	__proto.myturn=function(msg,turnMsg){
		SoundMgr.instance.playSound(4003009);
		this.showYourTurn();
		this.refreshPoint(msg,turnMsg);
		this.isMyTurn=true;
		this.initTime(Cache.ins.battle.getTimeOut());
		if(LocalBattleMgr.getInstance().isLocalBattle && this.isWeakGuideStep2==false){
			console.log("触发新的拉线指引");
			Laya.timer.clear(this,this.weakGuideStep2);
			Laya.timer.once(5000,this,this.weakGuideStep2);
		}
		else if(HallWeakGuide.ins.isOpenBattleWeakGuide && this.isWeakGuideStep1==false && this.isWeakGuideStep2==false){
			console.log("battlemenu myturn 触发弱指引");
			Laya.timer.clear(this,this.weakGuideStep1);
			Laya.timer.once(5000,this,this.weakGuideStep1);
		}
	}

	__proto.weakGuideStep1=function(){
		this.isWeakGuideStep1=true;
		if(this.effect_dianji==null || this.effect_dianji.destroyed){
			this.effect_dianji=new AniSkeleton("effect_dianji","guide","animation",true);
			this.effect_dianji.mouseEnabled=false;
			this.effect_dianji.mouseThrough=true;
			}else{
			this.effect_dianji.playSkeleton("animation",true);
		}
		this.addChild(this.effect_dianji);
		var fristCard;
		var tempCard;
		for (var i=0,len=this.battleScene.menuView.cards.length;i < len;i++){
			tempCard=this.battleScene.menuView.cards[i];
			if(tempCard && tempCard.gray==false && tempCard.visible==true && tempCard.alpha==1){
				fristCard=tempCard;
				break ;
			}
		}
		if(fristCard){
			var fristCardPos=this.cardbox.localToGlobal(new Point(fristCard.x,fristCard.y));
			this.effect_dianji.x=fristCardPos.x+47;
			this.effect_dianji.y=fristCardPos.y+58;
			console.log("effect_dianji.visible="+this.effect_dianji.visible,this.effect_dianji,this.effect_dianji.x,this.effect_dianji.y,this.effect_dianji.width,this.effect_dianji.height)
		}
		else{
			this.weakGuideStep2();
		}
	}

	__proto.weakGuideStep2=function(){
		this.isWeakGuideStep2=true;
		if(this.effect_laxian==null || this.effect_laxian.destroyed){
			this.effect_laxian=new AniSkeleton("effect_laxian","guide","tuodong",true);
			this.effect_laxian.mouseEnabled=false;
			this.effect_laxian.mouseThrough=true;
		}
		else{
			this.effect_laxian.playSkeleton("tuodong",true);
		}
		this.addChild(this.effect_laxian);
		var battleScene=SceneMgr.ins.curScene;
		var isRight=battleScene.hero.moveDir==Fighter.DIR_RIGHT || LocalBattleMgr.getInstance().isLocalBattle;
		this.effect_laxian.scaleX=isRight ? 1 :-1;
		var pt=new Point(battleScene.hero.x,battleScene.hero.y);
		var pt1=battleScene.localToGlobal(pt);
		this.effect_laxian.pos(pt1.x+(isRight ? 1 :-1)*100,pt1.y-100);
	}

	__proto.clearWeekGuideStep1=function(){
		Laya.timer.clear(this,this.weakGuideStep1);
		if(this.effect_dianji){
			this.effect_dianji.stop();
			this.effect_dianji.removeSelf();
			this.effect_dianji.destroy();
			this.effect_dianji=null;
		}
		this.isWeakGuideStep1=false;
	}

	__proto.clearWeekGuideStep2=function(){
		Laya.timer.clear(this,this.weakGuideStep2);
		if(this.effect_laxian){
			this.effect_laxian.stop();
			this.effect_laxian.removeSelf();
			this.effect_laxian.destroy();
			this.effect_laxian=null;
		}
		this.isWeakGuideStep2=false;
	}

	__proto.clearAllWeekGuide=function(){
		this.clearWeekGuideStep1();
		this.clearWeekGuideStep2();
	}

	////////////////////////////////////战斗中弱指引-end////////////////////////////////////////
	__proto.showYourTurn=function(){
		var yourTurnEffect=new TweenEffect(this.width/2,this.height / 2,LanguageMgr.Ins.getBattleLanguagePath("ui_zdn_chushou.png"));
		this.addChild(yourTurnEffect);
		Laya.timer.once(3000,this,this.destroyYourTurn,[yourTurnEffect]);
	}

	__proto.initTime=function(timeInt){
		(timeInt===void 0)&& (timeInt=15);
		this._time=timeInt;
		this.time.value=this._time+"";
		this.time.visible=true;
		Laya.timer.clear(this,this.cooldown);
		Laya.timer.frameLoop(30,this,this.cooldown);
	}

	__proto.destroyYourTurn=function(yourTurnEffect){
		if (yourTurnEffect){
			yourTurnEffect.showComplete();
		}
	}

	__proto.overturn=function(){
		this.shuffleCards();
		this.setSkillGray();
		this.time.visible=false;
		this.isMyTurn=false;
		Laya.timer.clear(this,this.cooldown);
		EventMgr.ins.event("OVER_TURN");
		this.clearAllWeekGuide();
	}

	__proto.cooldown=function(){
		--this._time;
		this.time.value=this._time+"";
		if(this._time <=0){
			Cache.ins.battle.sendRoundOver();
			this.time.visible=false;
			this.hero.overturn();
			this.overturn();
			}else{
			this.time.visible=true;
			if(this._time > 3){
				SoundMgr.instance.playSound(4003003);
				}else{
				SoundMgr.instance.playSound(4003002);
			}
		}
	}

	__proto.coolFeiji=function(curTurnId){
		this.feijiTurnId=curTurnId;
		this.checkFeijiRound();
	}

	__proto.coolFriendSkill=function(curTurnId){
		this.friendSkillTurnId=curTurnId;
		this.checkFriendSkillRound();
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this._bestFitWidth=_bestFitWidth;
		this._bestFitHeight=_bestFitHeight;
		this.move.x=9;
		this.move.y=_bestFitHeight-111;
		this.cardbox.x=_bestFitWidth-580;
		this.cardbox.y=_bestFitHeight-135;
		this.fenliandtime.x=_bestFitWidth/2-65;
		this.fenliandtime.y=70;
		if(this.angleUi){
			this.angleUi.x=_bestFitWidth-250;
			this.angleUi.y=70;
		}
		this.battletimenode.x=(_bestFitWidth-this.battletimenode.width)/2;
		this.skillbox.x=5;
		if (this.redBox){
			this.redBox.width=_bestFitWidth;
			this.redBox.height=_bestFitHeight;
		}
	}

	// visibleBtn.y=this.cardbox.y+132;
	__proto.destroyMenu=function(){
		this.clearAllWeekGuide();
		this.destroyRedBox();
		this.stage.off("mouseup",this,this.longClickEnd);
		this.toleft.off("mousedown",this,this.moveLeft);
		this.toleft.off("mouseup",this,this.stop);
		this.toleft.off("mouseout",this,this.stop);
		this.toright.off("mousedown",this,this.moveRight);
		this.toright.off("mouseup",this,this.stop);
		this.toright.off("mouseout",this,this.stop);
		this.visibleBtn.off("click",this,this.visibleCardBox)
		this.friendskil.off("mousedown",this,this.longClickBegin);
		this.friendskil.off("mouseup",this,this.longClickEnd);
		this.chat.off("click",this,this.openchat);
		EventMgr.ins.off("refreshpoint",this,this.refreshPoint);
		EventMgr.ins.off("sync_menu_hp",this,this.syncHp);
		EventMgr.ins.off("refreshdistance",this,this.refreshDistance);
		EventMgr.ins.off("usecard",this,this.useCard);
		EventMgr.ins.off("open_skilltips",this,this.openSkillTips);
		EventMgr.ins.off("close_skilltips",this,this.closeSkillTips);
		EventMgr.ins.off("sync_mandate",this,this.syncManDate);
		EventMgr.ins.off("sync_hdhp",this,this.syncHDHp);
		EventMgr.ins.off("init_hero_baseinfo",this,this.calcSkillRound);
		Laya.timer.clear(this,this.cooldown);
		this.fengliani.removeSelf();
		this.fengliani.destroy(true);
		this.removeSelf();
		this.angleUi && this.angleUi.destroy();
		if(this.coolFeijiText){
			this.coolFeijiText.removeSelf();
			this.coolFeijiText.destroy(true);
			this.coolFeijiText=null;
		}
		if(this.coolFriendSkillText){
			this.coolFriendSkillText.removeSelf();
			this.coolFriendSkillText.destroy(true);
			this.coolFriendSkillText=null;
		}
		this.closeSkillTips();
		this.tuoguan && this.tuoguan.destroy();
		this.tuoguan=null;
		this.userHead && this.userHead.destroy();
		this.userHead=null;
		this._chatView && this._chatView.destroy();
		this._chatView=null;
		this.destroy(true);
		this.enemys=null;
		this.hero=null;
		this.cards=null;
		this.waitCards=null;
		this.skillIds=null;
		this.battleScene=null;
		this.angleUi=null;
		this.tuoguan=null;
		this.skillIcons=null;
		this.hasShowArr=null;
		this.nextTurnMsg=null;
	}

	__proto.updateWind=function(wind){
		wind=wind/10;
		var temp=wind;
		if(wind < 0)
			temp=wind *-1;
		this.createFengli();
		this.fenglinum.text=""+temp;
		if(wind < 0){
			this.fengliani.scale(-1.0,1.0);
			}else{
			this.fengliani.scale(1.0,1.0);
		}
	}

	__proto.addSkillIcon=function(skillId,livingId){}
	__proto.cleanSkillIcons=function(){}
	__getset(0,__proto,'role',function(){
		return this.hero;
	});

	return BattleMenu;
})(BattleMenuUI)


//class ui.friends.AddFriendWindowUI extends laya.ui.Window
var AddFriendWindowUI=(function(_super){
	function AddFriendWindowUI(){
		this.closeBtn=null;
		this.inputText=null;
		this.inquireBtn=null;
		this.tipsImg=null;
		this.tipsText=null;
		this.list=null;
		AddFriendWindowUI.__super.call(this);
		var temp=AddFriendWindowUI.uiView;
		AddFriendWindowUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(AddFriendWindowUI.uiView);
	}

	__class(AddFriendWindowUI,'ui.friends.AddFriendWindowUI',_super);
	var __proto=AddFriendWindowUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.friends.items.AddFriendItem",AddFriendItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	AddFriendWindowUI.uiView="eJylVU1v00AQ/S/LdUm9tuOvW1MJFAlxaaWCUBU58dbe1t4163WbtsoFgVQuCMStggNIgEAI9dQLUn8NSfgZ7PqjcRKLIqFYiteZmTfz3hvnDIiTFAMP7BIasGMAQcpZmgHvbALBKCJxALwnZ3VQj40bEeAEeMjsdCEYA0+32hL6iR/i1ZQyQYPgmAQiAl7X1CHIDgmVCSOWJIxu5GQwDAeok9JQZmfkFN/nRFYGXQ3eXEj+FGESRkLWsNBkAv+Ka+gFLrIWwJrbAnxAfJbhdWgHQdmoa0HDaQIb2m3AWoHrmm1DSixBAlKgNes87OVCMLpSSa9KQXDkc1Uolp32hApbL10UGIS5T4ekmib2hziWUeC2lm2zFNW94cp0lkVSEBSTEabrTCEH6ibUdYjsBlOmZS1N2IarABWuvQCLfSpnCPHGVkQozvDGPieYBplqQBxEJwO9asCno4jxx5JvZcny9Kg43TatVFahGt3FtHabJU8jUoPVQxWsLCaXAtWX5HivgbuDx6JP01ysbgMyqg2y7c6iAaNr1SITlaXSFyo3KIgLB/m1CrJ0kootFjOVesc1ugiZN8/lo9/Xb6cvPs1ffZ3+uJq++Tj/cql+9YOAyHwP3DWhJj9Ia1pcum6fUbEt55Ta6OVJBm9y4scycLQGN2TqPSB4jqUSMQkLIfG+WPGJCevrH8yPDLtiynSQuqvpeZoTvrwFDX6y8dputb6UnNJ5CGl1YUHSrJ+ErVUPGQ1r34/8GBeuc6pDYTqnifig2LuV15GlVzsm844ZD3a5n9acVS5AttvspjKBUF8emF08m737Nnt5PT2/nH//PH19Pnv/4dfPq/nF81LehoSWsSSh9j8SLg1GsjVD204lk6V1mhtl16PEZdLR9oizOO75fHtp0Y6y4nlFL8cp9oWkFC2mMSy37c9mMwjuFRL1BU6aXfGcCpKokIQFeYyzTiVlh8jIrLOayOUt5jtl1fJQbPPe5A+wRU4N";
	return AddFriendWindowUI;
})(Window$2)


//class ui.friends.FriendshipWarAlertUI extends laya.ui.Window
var FriendshipWarAlertUI=(function(_super){
	function FriendshipWarAlertUI(){
		this.yesBtn=null;
		this.noBtn=null;
		this.nameText=null;
		this.tipsText_1=null;
		this.tipsText_2=null;
		this.timerText=null;
		FriendshipWarAlertUI.__super.call(this);
		var temp=FriendshipWarAlertUI.uiView;
		FriendshipWarAlertUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(FriendshipWarAlertUI.uiView);
	}

	__class(FriendshipWarAlertUI,'ui.friends.FriendshipWarAlertUI',_super);
	var __proto=FriendshipWarAlertUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	FriendshipWarAlertUI.uiView="eJzFVN9r00Ac/1fkfI1r7tKkbV7E7mEIshcFFRkla67JbclduFzcuhIYE0EUdYiwgU8+KCq4+TSHL/4zS63/hXdpk3ZtN6sPGkJyd3y/n1/JXQ+IboSBDe4S6rItoIGIsygGdg9sEVf4wDaMRqqBtk8CF9gPekX9zdDx8GR5F9i6Brbz56i1atU1EG8SKuvbLAwZrTRXliLqyT4fE88XwEYmkjVkB69wIgkAtLTiBmmqXcoHzcYijDCnnARbbSZCMDoFh/RqDgersASESI4fOlw2dXHcFKrnPH5CWg6lJGmhKWdTxnQNVTX1APPiXJ3nD1m5HguWnIFDvUQWVpZ9QnGMKx1OMHVjpUJ0RwIc2vYZvy9zWTKL2b18lqZrC6dgKPbZFCj71yGYwxD0hULY2PjDEG456ziYojSNnPIaGgdgWWUATojv4G0he4R62eDHi4/Z0Um2/zz7fHB2+ujs9JMcqIgEZ5t4mQVM9V3VoWmaVrkunU3sAgnfYVTcllGpTzCcya4bnDhKXrtA6eSXXFlnKjzBEyztBcRTyfAcLV3MHrRqpT/UMAp/gkSx8teCY4c/93YHx1/7ex8G399kj99lL58NvjztPzkEf+fAtWoXOQhw5/cG6nDWAKrPGEBjA/3D42z/ffbttRR9/T+phhANZdfq82WHmJ//sbLdV4Ojt/2DE/sK0i9WjS5R3TCgri+qeu4ZC/XRoWiWG3Biv8U7o8N1Lf0FiUUGSw==";
	return FriendshipWarAlertUI;
})(Window$2)


//class ui.friends.FriendshipWarWindowUI extends laya.ui.Window
var FriendshipWarWindowUI=(function(_super){
	function FriendshipWarWindowUI(){
		this.closeBtn=null;
		this.tipsBox=null;
		this.tipTitleText=null;
		this.tiplvTitleText=null;
		this.tiplvText=null;
		this.tipCardTitleText_0=null;
		this.tipCardTitleText_1=null;
		this.tipCardTitleText_2=null;
		this.tipCardTitleText_3=null;
		this.tipCardLvText_0=null;
		this.tipCardLvText_1=null;
		this.tipCardLvText_2=null;
		this.tipCardLvText_3=null;
		this.tipsText=null;
		this.titleText=null;
		this.mapNameText=null;
		this.tipsBtn=null;
		this.leftBtn=null;
		this.rightBtn=null;
		this.startBtn=null;
		this.cancelBtn=null;
		FriendshipWarWindowUI.__super.call(this);
		var temp=FriendshipWarWindowUI.uiView;
		FriendshipWarWindowUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(FriendshipWarWindowUI.uiView);
	}

	__class(FriendshipWarWindowUI,'ui.friends.FriendshipWarWindowUI',_super);
	var __proto=FriendshipWarWindowUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	FriendshipWarWindowUI.uiView="eJzVmFtrG0cUxz9Lp69be2f2vm+1KSUQ8lJDHIoRK+1oNXS1o+6OfEVgSC9xmpKmUHAdU+hTAm2KIW0JbeinsWTlqV+hM9rbSFpd7JdaIJB2NXv+53fOnNk5cwTYQQcDF9wnkU/3gAI6Me0kwD0Ce8RnLeBaCCqghUnQYsDVDNRTQKNFQh+4nx7lD2/QffnJA+CqCtgH7gewavSdthfgifFa+gCylFzXdHQFJJ+RiD/RoO02jda7pFYPanCtEwX88YQc4o9jwk0DQ1WKDwSSuwj1espcYd0cCYuvXNgwK4QPW2Ra14aKjhTHVDRbUkXOQlUIR6rQsasYiUcZ8VM92dK9jS5jNJoMnb5mjKxphvix68XCWkgTvMHE2Gn7Iyu1oOtF9Rwq9Oo45KPG9SoDlrquWVphOvQibizA65stEuEErzdjgiM/EWIHtHtADltelAl5UaNF4wd8hghn06vt0dWimNlppiyjyJQxET6hF2HSwNF0qqCtIF1BSIGWlCpoWL3ejiQ8PZMhSoFNDeXBZaSTiIHLTu7UgFr4jUT6J/wWNqe9Fi7bCi8OZMpeW6ocrLuj3E1I6iNNh2vS2L8fex3gsriLSx80S8LZIizEW3ifcTNMfLmg/+3PVydPrl6dXP31on/x1fDi4eCH34dfv3b5kDbtJnirFdNuwE01vTDB2c2PIq8eYr+4GWLPJ5yKh1EqEC7dpBH7hIPyf+z0imt+GBNPkDRoSIVn7zdNXPcbYtqEJBhNNdxkYBG8Zi+Ah2Pw4W4F/uWbv4cvvk/x/317tjLQ0CznmeaMU8qAxnWAypVNZkDqHIamb1rN6zKY2sLE2RLSphf7Repqapm8wY+/vTs+EzN4dfJnL560s9nharNDIXZjeLTi8GIxujG8ttrwWcXPXLUE7N3difq+lWuXXbH+GtUkZbXqt5Ekr8YxFKsapaw97VaiZLU1hjJZTBlKWUnw/0HZWQTjpE2Src1cKQxblTep41uaweuXgy+euoOT48H5Sbq9kzd2/affDC8eDx6dpsvHtdaOPAgGGguCPi8IlqWKkq5TsYFOKfKA8B08w/Hi7KrZRIVST4DMMgLTm9rzlynm8I/nl29eDZ4847z9L3+9fHs2ePRd/9npezfC1pbGdhqGp6HlsYX7d6JOl82a2KhsXA21SH7b69zz2lNb2ofvTv+8+uWnwePj/vlF//k/ZXcodWzhqP0sGjau2u6wzQJAMyDUwYKAiHZaCgiaE5Dc3kQQxps3Xck/yzTEqpN2bBYc69iqu2FGkqK1j3jMxkZXt8WVqtDIXgB6sVSKup6hetilog+f233PlTFVPZeJRcyX0okp8xjhNvmbXL2WLMpeb5rhlNsSsRClLiTMi2e5ENAoaImTgINEcqVDdil7kC6bo9/bfAeEJJ+kRcWqarQrDydQmnkHLnU2MeFZbe9wiUOKnSVi5ZSxyo5juA0cTgVIOEFj7iGukyA97lmWNDsws8ylSD/v7vOqzs8XGl6IORxcQ9nFdnYxn3un9x/A9a68";
	return FriendshipWarWindowUI;
})(Window$2)


//class ui.friends.FriendsWindowUI extends laya.ui.Window
var FriendsWindowUI=(function(_super){
	function FriendsWindowUI(){
		this.closeBtn=null;
		this.item0=null;
		this.item1=null;
		this.item2=null;
		this.item3=null;
		this.selectBox=null;
		this.selfctTextImg=null;
		this.viewLeftBox=null;
		this.viewRightBox=null;
		this.systemInfoTipsPoint=null;
		this.myFriendTipsPoint=null;
		FriendsWindowUI.__super.call(this);
		var temp=FriendsWindowUI.uiView;
		FriendsWindowUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(FriendsWindowUI.uiView);
	}

	__class(FriendsWindowUI,'ui.friends.FriendsWindowUI',_super);
	var __proto=FriendsWindowUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	FriendsWindowUI.uiView="eJy1ltuO2jAQht/FV63ksrFj53RJ1VZIVVW1SG1VrVAAk3ib2Cgxy0l593USAoG4HFbLDRBpMp//f2Y8bIFazxkIwC8upnIJIJhncp6DYFtAMIl5MgXB320T1JerVgRYgwA5PQrBCgTUNb0wSMOInbxiVfH6c8mnKgaB7+gM+T8udPxEpqkUDws+Gkcj1JuLSL8cMx7FSiMcpAP5hn3JuKYAiiG1YflJIAJFAc9ikVNxMdqDCbYM4Cceypzt0C2ahyDB0Heg7bXPZFtXgglx9mRqIQN5E/Mu1nWhTyFB0MM3Yt0d9uA0do1UtolD2XuaH3mNnUuAD42jjmeqn7ZR8WmtqJ3qW3+hlBSnpyVVrvLrOczKTImuQl+Vcd3cVYZRtAjFuLEsCccs0VEX+4DWpNKLpg+s4wYsEYLxCRPvVlrF+25RdBNhArENcbsoBNEjocaqkF1VyB6ZhEIridjDx5gLlrOHWcaZmOblMXRh1nIx5CppOjIUk1hmf/QAlYNXP/2unori8bLNdj197t5nrlhqHUxusVU4Ho0zuRRHZM1Cpkk3qqVefTdcJ7b+ObLOK0XX6MR6VLs60d102q/Qid5Ap02pQSe+m073FTrxG+gkjmvQad9Lp1/3LbFu0Wmf6kTn5rO7Sl3SLMZaYc4SNlF1XCoXOfskwnHC9OlVtmBXbVuzOTLTYlj3YjZWvO4vx2+dajZRQ7ZSgzQCN/jzs5Jz43QbXLJ3fzi89gW+N+2Zs+VXNtvZdriZj9blf72n1mFHE89vJ/1RZjrJ6tJLy4ZYfr1tDv6tc925AzGTQz7Pv0sulLGLBVt2KmQiuPVFZ6MGkK4/V1muTf9YvAB8xS3Q";
	return FriendsWindowUI;
})(Window$2)


//class ui.guild.view.GuildDonatePageUI extends laya.ui.Window
var GuildDonatePageUI=(function(_super){
	function GuildDonatePageUI(){
		this.btnClose=null;
		this.txtTitle=null;
		this.lab_0=null;
		this.list=null;
		GuildDonatePageUI.__super.call(this);
		var temp=GuildDonatePageUI.uiView;
		GuildDonatePageUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(GuildDonatePageUI.uiView);
	}

	__class(GuildDonatePageUI,'ui.guild.view.GuildDonatePageUI',_super);
	var __proto=GuildDonatePageUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.guild.item.chat.DonateCardItem",DonateCardItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	GuildDonatePageUI.uiView="eJyFlG9vmzAQxr9K5L31Esy/AO/abpoqTXuxVlqnaYocuGJvxmZg2jRVv/sOCK2boPaNFRvf/e7ueeJHYh9qIBn5IXVh7gkldWPqlmSPhOtcmOYnybxlRA+7m2H3REkupCpI9utxij83Ozf4AS9SshvWe1lYQTLm+TElAmQpLMlilmIWngs4wwCylbbiNZnLfFnxEo5ys/VpckZJ+1dqjMhNVRm96uRmW27YstYlccAeRrVyD18aiRwS+TQKaL+GlJGnJ/omOAgHMIueyWk6B94LeeA6qPWaphENGU18p6AoTt+kIi7wk7nmJDdWFiPITfHtvLPW6OPS2XPpd7zpZ271hTJtD3NyD5mH+E3Zcb2d+lB8CwrvvCbNzmgERR6bSHZnr6VVDklxjdlLWF0IqaGFVS64XQmu1Oq2wwWLQL9hcQf6G2Z8R7H1qFgYvCjmBycda5A56FPJWEL9kPo+ZWtXMi95FxuNWMcomOVUxNLoUvSG+eOlM3gEJ5ShM1MHHwYu/esgzGt6MjYdv9CTdTqpgUpuPAywsMNk5Dv866C1i5zXPJf2YSH14qwBzRd4pzJdC9eiMV2JSW65auFw+FnzrYLi+XAqLsAub422V9gFyfzDDjlnjeR9nblRpi/jA4cYwm0vrpLlMBXQFho02G+3Pdna438/i0eHxS/DxTFN7Y0Bd1d5Y5Q6583Vq5nftcP5NGvsGdBWH2PvsLkZnpUGauAWPwTTbzx3nq8w9ufeqk9GcwsXvCkuLVRu2U2nraz6O5UpOgXtsuwweCnx3rI3//IkVvPhPkpRnExlznJROHrOd6wez3luJ/YC9oKbo6cxWPeQ/+uF5+4=";
	return GuildDonatePageUI;
})(Window$2)


//class ui.guild.view.GuildFriendlBattlePageUI extends laya.ui.Window
var GuildFriendlBattlePageUI=(function(_super){
	function GuildFriendlBattlePageUI(){
		this.btnClose=null;
		this.title=null;
		this.lab0=null;
		this.lab1=null;
		this.btnTip=null;
		this.btnBattle=null;
		this.txtF=null;
		this.btnCancel=null;
		this.txtNo=null;
		this.btnLeft0=null;
		this.btnRight0=null;
		this.txtType=null;
		this.tip=null;
		this.lab_0=null;
		this.txtLevel0=null;
		this.lab_2=null;
		this.txtLevel1=null;
		this.lab_3=null;
		this.txtLevel2=null;
		this.lab_4=null;
		this.txtLevel3=null;
		this.lab_1=null;
		this.lab_5=null;
		this.txtLevel=null;
		GuildFriendlBattlePageUI.__super.call(this);
		var temp=GuildFriendlBattlePageUI.uiView;
		GuildFriendlBattlePageUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(GuildFriendlBattlePageUI.uiView);
	}

	__class(GuildFriendlBattlePageUI,'ui.guild.view.GuildFriendlBattlePageUI',_super);
	var __proto=GuildFriendlBattlePageUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	GuildFriendlBattlePageUI.uiView="eJzVV01v5EQQ/SumuTobt+32x9ySiF0hRTksKy0IoajH7rFbeNyD3U5mEkXaK0hcOMEKIXHaA4IjQgs/h92wJ/4C5Y9JdzzemUlgRSJFk3hi96t6r+pV+RzJxYyhEXrK81icIhPNCjEr0egc0TxKRfEJGlkPiNldfdxcXZgoSnkWo9Gn58vn98Vcf3gBN5po3nye8limaORbjolSxpNUohGx4R8RjVK2B/ejMZdTOkNDB384pQnrHW33z/ZC20Tl5zyHByIxnYp8t+LH4+QYP5jlCVK4bujBjfyMPSo4wCBim8Qx60/XxOjiwlyL6/gNLvYVMAkGgM9S3uFqUL5vhsR0sRnYekAe0VGP9ispRd7HdVpcosjEJjqhRU2dzA8yUdahanE06TdHHScVzcfLeGb8REjQ1CHd36CoA5RkdMwyeFaLzAvX0tHwgIdY51RIHreImxj1vSYzV2XmWXglk5zxiOWrlOLAtF3Ttk3sa4E7tnuN0kEl2wpyQPyOR8llppGY0RyIS9juQcpzVrLdKKVyN6VZtjup4AOimhSc5XG26OJa0y9bkuC+OxIOG32vw2KMWxJc+wqYQJV2hEBJWPCEZHM4Dh3UqbM8YcZCVIXxqII2nVLJSoPnBjUedlwY+1QCj+/Bg1NRlexJWogqgYMnNCtZ9+UHOR1nLL76UsVsoonI5UeQHDR5dwXgewWndfSRyEQd2vuUecwdryUdrjKeNASyXLJiYynimoZ5XfeKDTJkKymLOR7QARQImx9P0wEHwUZXccMGmGAFHAx1luRlysfJKrRlQuyWSXRg19qkv+Mv9Sea/kTTHyv9j4Rkf//xfC/LjIgWcWnQghkZO2EgpFHNDClUDTyuMla+6xKYTHzfsm5fAsNO63ptL3qupRnsEz5Db9OjU+PKQLfAqPmed1gd7zhwNLy2iYYgE5EnKfxeLMra33uubofK1euJOODqxB8asoMeabdU1Ad1FjmXD2/kkL1oj0/PtvDKz7YgsJ2HtjaIMQxwbSLCkU299zxUFBA0G/OkPw4tRVztgFdshduzFTQx+YHG1pG4FV1fzG/Cls7X6hZmh+2kC9WyRKyaKl5y6MCVBnQHMx5KuL+DEWvIs25klm6wuXvsTnu9Xw7ZRFpD7XJWCa1NbtCjdjsLXCUnwDyuo9wCp4xoxkCgHXytBZfW9QSA2wFq5HTKulm2ya3b8iKq4p2AaKVWH6rcGr/59tfLn354/dWzV9+//C+M2N1mFvfNdn1lOt0W79pq7uEQq32s8VxJJY8O6hcFNJJFpUWISfgvXiFa7B2sdi67jqfnFxBEuVq89boVmOAZ9rVJ7zmbNGzn/A6U7qko4qcFxNsltYzB0devY33/Gh66oxuJmzEac8hmBO13Fbft60rDNvn2keuxcRxpSmfQdxsLl7SVi91AlW6oVe5hnY/KlNymWuvBp1WrtW5tiD1/cssc1iiHnUBXzlbKvf7ulzfPnr/6+sfLn7+8fPkClqi7r1ngrGpG+pqp7dC9i5p1OWyvmXO/NcOWvyqa3xdNFaZzF0VbJrG9au49V82xV1UL+qqp0sR3UTVni1a7Nti0F8s/f/v9rxff3EPFti9Rcr9L1BkYBisD/P+e3/V70D+RAExV";
	return GuildFriendlBattlePageUI;
})(Window$2)


//class modules.createRole.view.CreateRoleScene extends modules.scene.BaseScene
var CreateRoleScene=(function(_super){
	function CreateRoleScene(sceneType,sceneData,needLoading){
		this.mCreateRole=null;
		(needLoading===void 0)&& (needLoading=true);
		CreateRoleScene.__super.call(this,SceneType.CREATE_ROLE_SCENE,sceneData,false);
		this.isOpenResize=true;
	}

	__class(CreateRoleScene,'modules.createRole.view.CreateRoleScene',_super);
	var __proto=CreateRoleScene.prototype;
	__proto.init=function(){
		_super.prototype.init.call(this);
		this.mCreateRole=new CreateRoleView();
		this.addChild(this.mCreateRole);
	}

	__proto.enter=function(){
		_super.prototype.enter.call(this);
		this.isOpenResize=false;
		this.y=0;
	}

	__proto.exit=function(){
		_super.prototype.exit.call(this);
		if(this.mCreateRole)
			this.mCreateRole.destroy();
		this.mCreateRole=null;
	}

	// }
	__getset(0,__proto,'preloadRes',function(){
		var res=[
		{url:"assets/atlas/createRole.atlas",type:"atlas"},
		{url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/createRole.atlas",type:"atlas"},];
		return res;
	});

	return CreateRoleScene;
})(BaseScene)


//class ui.guild.view.GuildCreatePageUI extends laya.ui.Window
var GuildCreatePageUI=(function(_super){
	function GuildCreatePageUI(){
		this.btnClose=null;
		this.title=null;
		this.lab_badge=null;
		this.lab_name=null;
		this.lab_type=null;
		this.lab_trophy=null;
		this.txtExist=null;
		this.selectbox=null;
		this.btnCreate=null;
		this.txtCreate=null;
		this.txtNeedCoin=null;
		this.btnLeft0=null;
		this.btnRight0=null;
		this.txtType=null;
		this.btnLeft1=null;
		this.btnRight1=null;
		this.txtTrophy=null;
		this.btnSave=null;
		this.badgeBox=null;
		this.list=null;
		this.icon=null;
		GuildCreatePageUI.__super.call(this);
		var temp=GuildCreatePageUI.uiView;
		GuildCreatePageUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(GuildCreatePageUI.uiView);
	}

	__class(GuildCreatePageUI,'ui.guild.view.GuildCreatePageUI',_super);
	var __proto=GuildCreatePageUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	GuildCreatePageUI.uiView="eJzdWE1v40QY/ivVcHW3M+Pv3NpqWZCWCpFKdIVW0cSe2sM6dmRPummrSnDjwh0JuHKDGxcQ4s9sEfwLZsZf49iJU6iQaBIlnoln3vd95v14Xt8Cfr2kYAI+ZWmYvQUGWObZsgCTW/CWhTwGE4RMxwAxZVHMwcSx4J0BgpglIZh8dluvPsnW+tJrMDGRAdZgghEUt5MgpsfiHzBnfEGWYGiLDxckohubYKg2Ed+VMo6PDVC8YalYEGSLRZYerdhsHs3Qs2UagVZPy7fFjeyGvsiZEANsbNimIb8tA4G7O2OnXNNVcpHbCra9AcE3MavkaqJc1xDCLWR4WFfIsXWpZycrzrN0U65ZyrUMcEVyiRdPT5OskPppwpXNav0sWpF0XiuRkDlNxD277VOGoSEYGck4C8vdxiByHaWqZbcQQdTTMqUsoGkfI+QZ2DIwNpCrYWRiq4PR4NGULmFafo0RZzzRAEpIKkCJ6NFpzFJa0KNoJTxNKhPEAqzPGUlncz7jdM0rvUgaxFn+SvjZM7seXajRGAjSG6WTey0KJoQD0MY0ZGgABgGArz6O7iodFF6qQ92MC7sULM+xidPGa4QfzOYkVOpKO2WAVsOC59kbepolmbzxPRdiH5JmXqhvgEW2Kuh5nGerSGx7SZKCVpPPUzJPaNhMtudmgMss5VNhmVDKKkdi/49YkGdFdskPXpEPKBNyglrypXptR18YRhIWSRhzJWUME4RwHxMf6ZikZKFB8kL6xcFZOfd0ccG+2cNFBm8Li1rcwHJejp4uICp19BzF6yAibo+vW0z++u6LP3/48o+ffn7329f/c2xej4WRU9Y+x9HQMZsw4mv+fM0K3mJznOSUhNcHVE4XO9D5t5CImrEXJNCCFmgNT+glH61myCvpiuVbTfYeqhuiQoqaP4/6qRwa8o3dcVGuW4nSczesAS5oQgM+V3xqVJH1zQbtURtpWmFRZ6sPGKcflmcp1WwH6QREnC8fYCBRTpvS3jKPAWY3GIRlCPoNBD7UXKwRWfnY/Vff3v/6y4Bvha7p2Frk4UeIPKdxsylbbA24yrsEu+E0H0/C5ZnbLZN1Lc3eM0rD04ylrcUIilffYMchjjb/OAbjxuDjnJGkY28g4gmO+jSueKvXmGe3cUSKgvLiSBqWr+gR43TBAkGLoiwJ6zgKSEJV9nKqwUU1qFW2rW7q6jcc2PeruMKNFthy9ZZg37Zjs+vA1hD5fxin88bDr0JR/jTB91JkLwiGWo9VJnuAXcx/t5SOmE+klnvIqc/mEGkyW3+R3OGg5FWSaxHqUGs+GhxeeW5ts4VsPTgqQvKIbr6jfFQqDwT4bu8zbe+Jeh/6j7xvDzn/0PvGKI/pVGXPgpoL6vXovMsHYS8v+8QVtPKR8/IDKeD2irSt2qOq2mPtLKbkap9aP91SiLU/FQjlWNkjO3c1/JiEIRNbTcAhVqwJ1gvf36i7alIJKVpbjS2/miO++/37+x+/6WDQD1kES/sd2LIQ02seK6gGulyl+sbOTHNi9uDjsF5Y19v7sActZ8uiH8fy6YhnCMiwsyFOd+aSiHe74LISQ80ku2ltyvuvpsKbkuSE5NNOvF0Var5WZkkCWZPt6vJCXeZ0KaiZmLbq6wt1rT/C2ev54GaWk8BXOOc0DYUHt5v6+4E8sKs/9DBGso8hCo9clTg98d0VPsJ+DsuHMYfuNsqjHKeWPIMDabt73BUO8m6Vvl53Uthw/1I3FU1nr1Y/SKNRlmfDKmGY/d5kLVqTmzhLoyZfS83/Bt7MBpM=";
	return GuildCreatePageUI;
})(Window$2)


//class ui.guild.view.GuildDonateWindowUI extends laya.ui.Window
var GuildDonateWindowUI=(function(_super){
	function GuildDonateWindowUI(){
		this.closeBtn=null;
		this.list=null;
		this.helpBtn=null;
		this.donateTitleText=null;
		this.donateNumText=null;
		GuildDonateWindowUI.__super.call(this);
		var temp=GuildDonateWindowUI.uiView;
		GuildDonateWindowUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(GuildDonateWindowUI.uiView);
	}

	__class(GuildDonateWindowUI,'ui.guild.view.GuildDonateWindowUI',_super);
	var __proto=GuildDonateWindowUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.guild.item.DonateItem",DonateItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	GuildDonateWindowUI.uiView="eJydlMuO0zAUht/FbK22duzcdgxIaCQ0m47EIEAjN/EkBseuUmcuHc0bgJgNYs2CHQKeqrwGdtwKpy0UUKU0pz0+3/nPxbfA3Mw5yMEzoUp9BSCYt3q+APntHQRFLWQJ8he3G6fjhlU88AE3IMcTCK5BjiYjCsGVKE3tDBRBsHgjlD1U6KbRatyJ81l1jkZzVdkINRdVbUBOs9Q6iiV/0gqLAhRDGkH3JBCBuzv4R3aU9GwcB+wsxXvQy1qsyQEsSWBGIUEwxWFKcXyI6yVHBDnurkzBtBGlB4ahTvZqwH0wiuIgmGSq6qzv+FEtFF/wcdXZVvTBTbMWwlRR6/a5zcYd9NZZbw2YR50xWm1DM6+AuqOXrHX5S73gR8Z5Bop6ZB/h3CakZpsqSjbj0vocbFFMvbwsbBGOdiCKi4Kr3R6hFGICMYYoCXs0SUPwU7EwW1yEvMSEBuA0Qxu50h+5nBatlvKItVOfz0v7cRnMWcFtbdP161n/usETQvetx2OtmOHHhjdhMm2njGjc/40uO8kXo76ZI2H9RoMjLVclb099MG/Y+r46VGHiK5wOKrxvCSqtqtotw+tJtqfStsYpRHbvsqDSJPqLafI9ztCvaaq5nO8M03o97Gwv6+5fB4kSv3UkCXXaa2KXcF0va76smd66bKJkMDQ9eQhJ/IVC0hBC3DXjZZV9u06FkfyUX7sBMu4rB6tv71cfP6/e3f94+3X15dPqw/c8AGM7OxdamamttrWwt+yxh61gLodCS+3iP2A85mRmf5lpN1um7bjdbSkqp7Dtox3UkPpuRFGoIR5KOOmaoQA6pv+VMMGMTCa/SVjyC9NP8E+h+QEw";
	return GuildDonateWindowUI;
})(Window$2)


//class ui.guild.view.GuildInfoPageUI extends laya.ui.Window
var GuildInfoPageUI=(function(_super){
	function GuildInfoPageUI(){
		this.tab=null;
		this.tipIcon=null;
		this.topbar=null;
		this.shopRedPoint=null;
		this.buffRedPoint=null;
		this.btnHelp=null;
		GuildInfoPageUI.__super.call(this);
		var temp=GuildInfoPageUI.uiView;
		GuildInfoPageUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(GuildInfoPageUI.uiView);
	}

	__class(GuildInfoPageUI,'ui.guild.view.GuildInfoPageUI',_super);
	var __proto=GuildInfoPageUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.common.TopBar",TopBar);
		ClassUtils.createByJson(uiData,this,this);
	}

	GuildInfoPageUI.uiView="eJylk01v00AQhv8Kml5N4nXs+ONGK0F7oEKAhBBClT8264XN7sq7bhKiSpwQ4kQPCC6cuVXiyv9J+zdYO7bjpJFagWTZWnnmfWbemV2CXkgMEbyiPBMzsEAWQiqIljDDlOQaIoRGYwvy5jR27QsL0pyyDKI3yzb9ZBoT3M9eQPTQsWAOkW3BjGY6b5XUe8pNRqwU1mqo8VwXJR6mYjoVfFjSs4SSjA7eSQLb1Auro72Mkx1WMKpZntvBfN+wzuPChOs6XMk4NcnI6UrYMI3gYam14APJKy6LE8yMNlx//rq6/GGtrn7eXP22Vt8+rf58t25+XV5/+diGvaAfjKzjNMfHgpuC4SlNC6HERD94HR9j2gYfCSaKSvggSDwbhdZBinzXiXe/bfwjRklVKsMT3fPD8/p27DMfuW7tiNOz3w69rd6rzjmmKW7bVqaVJwU1kwWT1z49ruujO8Gj9djHvbE7m7GT0mxOPWZyX6hn2//bbUdNc8zJouRmw27RjYaZ4giZd4+OPKdPP92H9/2aPgqDDu8ZF86pogkzWZOYKdxtI5UnqeDQFcdiTkojOjzKKccKD7tq53nWlLkZwNY9EPLQaG4XY7e3rsEJmdQxRck1nVZpU5GVDKvBev8HjcpdHgfB+oqFYSutciGf4+yZoFzDba8LnJ3J6l/dwz3l/RC18kk5mfyT/On6Lu/uCFovJrIDp0NofoyZ3KNOBCe5+eq8kX978Rdp7KXt";
	return GuildInfoPageUI;
})(Window$2)


//class ui.guild.view.GuildListPageUI extends laya.ui.Window
var GuildListPageUI=(function(_super){
	function GuildListPageUI(){
		this.lab_01=null;
		this.lab_1=null;
		this.lab_2=null;
		this.lab_3=null;
		this.lab_4=null;
		this.lab_02=null;
		this.list=null;
		this.btnSearch=null;
		this.btnCreate=null;
		this.txtCreate=null;
		this.btnRefresh=null;
		this.txtChange=null;
		this.topbar=null;
		GuildListPageUI.__super.call(this);
		var temp=GuildListPageUI.uiView;
		GuildListPageUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(GuildListPageUI.uiView);
	}

	__class(GuildListPageUI,'ui.guild.view.GuildListPageUI',_super);
	var __proto=GuildListPageUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.guild.item.GuildListItem",GuildListItem);
		View.regComponent("modules.common.TopBar",TopBar);
		ClassUtils.createByJson(uiData,this,this);
	}

	GuildListPageUI.uiView="eJzdV21v2zYQ/isC91WxRerFkr8twdYV6DKgCbAWwxBQEiUxlUiNolynQf/7SMqWaFuZnQ77sBqGYdHkPXfPPbw7PwP51BKwBr9TlvPPwAWt4G0H1s/gM81lBdYQ+pELKkLLSoJ1FHhfXZBVtM7B+o/n/em3DS6JffgJrD0XbM3ngaHuE2XqAO46IrulJFsperLMeNNwtuzpQ0rLnC4e2xIcgn51R7Brvj2CgpHBuvKR8g1nFflR/QJSKhvcgkv9jQYjgW95DMPR48nFR4p5RxYt0z529At5I6iyDmLoBshNItePLefDILGdn0NOkEFeJSNyGHgzwBXJKTzFhciFiXlHFm6wOgcLwyFF0JuSFEfRDLCkXUXTchY6ULjI9f0Xod/hlNQnCfMNdDIhI6S43mChTtQ4ffCgOqLloZ5vBMGSOL8J55FT5mDnTa/y6fzMxVptanjfkftK8L5UZgpcd2S3+BPDaU3ycXHvHwpcUHAm71QgGnh4UkC/0kzwjhfS+Yh/IVQZz3jNtUs/IA/jAqkVXNNSsyOMrX/WJYJDmNGUWehFocWUhy6Vpz+YgrYleJArnSlGaEbYTKJiV0WtQoUrK1F+AM+J5AoeX2MTwIlEGspKdfFYeblMQu+cTMKBvdUInkBbI5ZEbnGjPe+k4J/IzT5pSREmMBzXVUK+RS6+93q5FOZlyUVlRRIBLovY96KJ7xjZMSMr5r5JiXB44bQEt/V3FL+qmS/F70/xvyd/9VSQ3LlXBipKuu+HAFOG9wT4B4UxmAi412b+FzH/eabKIDi0QF9XypdrS7GvLWP9PFu/9pbD1X9lOY7iqYn9C4z5PhkMvMDImg0OLoRnVYShL2YVlq6Tc6abZoZF3jmSO0TNRQ6XFRGu00kspFMISlhePzkNlsrBbvFtzdR/vVCSLMS+3UxrUsgjmbyjnTxmfLUa2FgddaMdG8OJzZ3CretrLO4OUrHpzPouB4Kooik/mgs3fP9gmuuofxTPdWbDsHbtrSSN7Z7omaSN3tLwvK8Vm6XeuqBq3+L4FMNmp1D0n1yP2+teSs6OhYDioRfCMdxUsjuCRVaBGdEpDWx79pD2chdvbdS1BgcF6AUsf5gLkwhNwtYVecQdBrI53HpTYFZauC3dcE2zHl/Md02zHvVGh6w5P5yj/HZ2GhrGEjgNjXIrj92qlSu9Oru8qSgjHVmalAz09JipOZ6V1YO+OztnMcsqLpS33iLcP30wTxflaDfHQw9aAtVkjsS9J4Ug3WzGtupfhSkTFnnWCOW5ypD+sDhFq4nTMLYGK/9iHlG0k5VNY6V4uYjG6ql9JXP3vFUXc/af4tVY1iRvU7Pp9FINfC12ZrTtvwHoV6cD";
	return GuildListPageUI;
})(Window$2)


//class ui.guild.view.GuildNoticePageUI extends laya.ui.Window
var GuildNoticePageUI=(function(_super){
	function GuildNoticePageUI(){
		this.btnYes=null;
		this.btnNo=null;
		this.txtTitle=null;
		GuildNoticePageUI.__super.call(this);
		var temp=GuildNoticePageUI.uiView;
		GuildNoticePageUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(GuildNoticePageUI.uiView);
	}

	__class(GuildNoticePageUI,'ui.guild.view.GuildNoticePageUI',_super);
	var __proto=GuildNoticePageUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	GuildNoticePageUI.uiView="eJyNUl1PwjAU/Svm+trgxj6AvYmJxkjwQRMlxpBulO2G0i5dJ0PCf7cbG1+L6F6am52ec3rO3YBepwwCeEMxkysgkCqZZhBsYA2B3bcIFBA4lkNghTOdQOBbPoGEYZxo88M3ACqiRKoJBFbHa6b3atoSiBLkMwg+No3Q45LG7FxnJ1Me2QKFQUVyubzJcaoxS3CRUxF3UhHDdksuEtV+vX6LqEAqWhTjYa61FGckjtW8ekDgiyoDDLWYsAxarLFibEdLgNOQ8Rf8ZuXNeryXwqQEtwopbyB3kktltOB6Xn3kl7PBG+Tz0z9su7Vr/8j0WLY9h9XlaWxCDfHYu8H8GfCgX4m4vf0+eF27JSEYRvtcMhPJg0KzBGD3Sdcl3S6xe3BYItvzj2VHlZdTWc+vG7H3uo7tNQ/VhX5FzUuvmhVl4CNG45xdDZHzUFI1O1JzDcXc1HJoan5aUlT2U9ZD5z3bs+DSgpuJY1w9nQnNlMnvc/sDo34H1Q==";
	return GuildNoticePageUI;
})(Window$2)


//class ui.guild.view.GuildRewardWindowUI extends laya.ui.Window
var GuildRewardWindowUI=(function(_super){
	function GuildRewardWindowUI(){
		this.list=null;
		this.getBtn=null;
		this.titleText=null;
		GuildRewardWindowUI.__super.call(this);
		var temp=GuildRewardWindowUI.uiView;
		GuildRewardWindowUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(GuildRewardWindowUI.uiView);
	}

	__class(GuildRewardWindowUI,'ui.guild.view.GuildRewardWindowUI',_super);
	var __proto=GuildRewardWindowUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("ui.guild.item.GuildDonateRewardItemUI",GuildDonateRewardItemUI);
		ClassUtils.createByJson(uiData,this,this);
	}

	GuildRewardWindowUI.uiView="eJytlE9v0zAYxr8Kerm6bZykf5IbG2JUGgjB0DYhNHmJm1hL7c5x6LaqF+4gblw4wI3Drogb34ZqH4M3/9qoykSRaA+RHb/P8/rnx1mAuZ5x8OFYyFDNgcBMq1kK/gLmIjQx+JTaDoGYiyg24LtDa0kgiEUSgv9mUVePpyzizeJrLLQ9AlfgW6SW6g9GBNILIbFC8znTYS/i5uw86s5khNWpuOEHWqAyOC6xbWK7hI4s2Njbnrdckp1sKXUG/8E5DVjCT8Dv0H/qwip66A+2XQMlI81MljAjlEwL+920qDWydlFrttxUft4Ki9Kq0Q2fhMkow6W9/VhInvJeu5lduTEZxEqfYpvdfj06KUZN90ORmi1v26og0f76nBzPJfCO6byNsqJmTumoLXgHGU48VpIZ/rJoc2z4tGmkuQy5PipXlwN8rTNpxDSfykQ3yjW6Agu7rXKvx3hEb5so9zJjlNzajzusWXr1HjBjeyZfV6EN1HTay8RZpDmXFb+EnfPkFeYPd29VwxcsDAW+9aFjEyv/1wufKIkw4JEWLKnn9lWiNHYBDyfFj9zzhDaArbGortBw+NdQZKJzmXHkmgh5me0QiSbHw7z7bWt3UFLMvzpzpcNjzWbgT1iS8nVMXLtfIzbCJPyIX+VZMfnDh9X776svt6vbb6sPn+5+fL37+PP3r89+fgpGqwte4MppjVDGstbzKLuJm4P3YYKsy4OxB+UIq56JQKtUTcyDU/aUC6wOaj1E7FHn/v1jPFgiouL+Fi45jT9EK8SU";
	return GuildRewardWindowUI;
})(Window$2)


//class ui.guild.view.GuildShopAlertViewUI extends laya.ui.Window
var GuildShopAlertViewUI=(function(_super){
	function GuildShopAlertViewUI(){
		this.bg=null;
		this.closeBtn=null;
		this.icon=null;
		this.titleText=null;
		this.itemNameText=null;
		this.priceText=null;
		this.descText=null;
		this.countText=null;
		this.buyBtn=null;
		this.cardProList=null;
		this.starList=null;
		GuildShopAlertViewUI.__super.call(this);
		var temp=GuildShopAlertViewUI.uiView;
		GuildShopAlertViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(GuildShopAlertViewUI.uiView);
	}

	__class(GuildShopAlertViewUI,'ui.guild.view.GuildShopAlertViewUI',_super);
	var __proto=GuildShopAlertViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("ui.mysteryShop.items.CardProItemUI",CardProItemUI);
		ClassUtils.createByJson(uiData,this,this);
	}

	GuildShopAlertViewUI.uiView="eJyVVttu1DAQ/RVkXqNt4mRz2Te6ElAJKqQW0Qqhykm8idXEjhyn3aXaf+EHkHjggUp8DiA+AztX761Zslc7M3PmzMwe7wMQqwKDGfhAaMzugQEKzooSzB7APYlFCmauaRogxSRJBZg5lrs2QJSSLAazjw+d81mOEqz7rsBMei3rdz3OHeLSPEykbXlLqPyeVDLWSUVuBClTclshmkwKqgx0zLXxJJZv1WDOtEebmvYuBMUkwrQNX5LP+BUnkgewXKN7arjQ8nTc89NKCEa3kGFDU/q23KKMlfhU0IFhxPJcoYe1/00iKYakTSJDIc6kDRhj6LYMvacZLqslQdTepWga6mHJ5yhUV0x3N3ysNWgsjGU5TWlsOMwA7MpEorqUXa09Xw/3pq7KZjjbq6PZ5jBRjtprwgkiMnyJl0J6CfUxA3+/f/31+E3DsAMDLBgVF7IqKlCzkpZvScRZyRbi2TV6jYl0iVjGVNjnaOFZU1PuhExNvOAVNgCiUcr4tRzuybRbXXWrjCR10zEVmIMxVtCENS036FlZwbQvksD5Ocq3iP358uP3z0edmKkTg85RxFxJzN4m9p/JO147/HaffeB0yRdc/tg2Mp+q3pWCs1s87/KAjm9aMej2ZVOP4PWCE5TpbNxwsTD9A2wyvBCjXIKmDzAYhhXafSNiXEYjTbAC59hsn6z9Udlart9UHg6K5/fyGrGKio10A3Xt1N6FjgnR/trDTTbwMJtFfYGBAa8jjMkDdFp5UEgtBaUUmmgyqjQnWYZbB4INx3XZdrqG9hoRVqsdXW4hOO6PhUGR95xz53uZBDWSN+hlJjWykoYn85RQXOKTXkATVuWoE//DOrJef9IngJRiewBMt5VDa5hXx+4nAPH4HWetY1mgCEsYV5tWH+7jN2/8zqTu6IAc0xjzy8amWcjbXE4ZydVWRSb5qpSSsbpIWTFRslVOtFjvz8Amo5dyluYZKbZZdafpMMulQLylcYeySjkjee35/7AkNFGv7uxLMVbzWptGKMN1nZ12cdUuYsJxJAhTke4wF0TerHP9B/ZG2Eg=";
	return GuildShopAlertViewUI;
})(Window$2)


//class modules.battle_apple.view.ReviveView extends ui.menu.battle.ReviveViewUI
var ReviveView=(function(_super){
	function ReviveView(){
		this.countDown=15;
		this.mIconArr=[];
		this.headData=[];
		ReviveView.__super.call(this);
		this.addEvents();
		this.initView();
	}

	__class(ReviveView,'modules.battle_apple.view.ReviveView',_super);
	var __proto=ReviveView.prototype;
	__proto.initView=function(){
		this.mpNumGold.text=String(LocalBattleMgr.getInstance().getReviveGold());
		this.txtReward.text=LanguageMgr.Ins.GetLan("14300310");
		this.mIconArr.push(this.mpIconOver1);
		this.mIconArr.push(this.mpIconOver2);
		this.mIconArr.push(this.mpIconOver3);
		this.initFriendData();
		if(Browser.onPC){
			this.btnShowAD.visible=false;
			this.btnShowAD.disabled=true;
		}
		Laya.timer.frameLoop(30,this,this.updateTime);
	}

	__proto.initFriendData=function(){
		var _$this=this;
		var datas=LocalBattleMgr.getInstance().getOverStepFriend();
		if(datas.length==0){
			var hero=LocalBattleMgr.getInstance().singleScene.hero;
			if(!hero.headurl){
				hero.headurl="";
			}
			if(hero.headurl && hero.headurl.indexOf("http")==-1){
				var avatar="assets/textrue/aihead/"+hero.headurl+".png";
				hero.headurl=avatar;
			}
			if(hero.headurl.length > 0){
				PlayerInfoMgr.ins.getHeadImgUrl(hero.headurl,Handler.create(this,function(url){
					_$this.mIconArr[0].skin=url;
				}));
			}
			}else{
			for(var i=0;i < this.mIconArr.length;i++){
				var icon=this.mIconArr[i];
				if(i <=datas.length-1){
					icon.visible=true;
					var data=datas[i];
					if(data.headImage){
						PlayerInfoMgr.ins.getHeadImgUrl(
						data.headImage.replace(/\/100$/,'/40'),
						Handler.create(this,this.setRoleIcon))
						}else {
						this.setRoleIcon("room/ui_jinengBG.png")
					}
					}else{
					icon.visible=false;
				}
			}
		}
	}

	__proto.setRoleIcon=function(skin){
		this.headData.push(skin);
		this.initIcon();
	}

	__proto.initIcon=function(){
		for(var i=0;i < this.mIconArr.length;i++){
			var icon=this.mIconArr[i];
			if(i <=this.headData.length){
				icon.visible=true;
				icon.skin=this.headData[i];
				console.log("-----------------------initIcon",this.headData[i]);
				}else{
				icon.visible=false;
			}
		}
	}

	__proto.addEvents=function(){
		EventMgr.ins.event("BATTLE_PAUSE");
		SocketManager.Instance.on(0x008B,this,this.recvReviveResult);
		this.mpBtnGold.on("click",this,this.onButtonClickGoldRevive);
		this.mpBtnShare.on("click",this,this.onButtonClickShareRevive);
		this.mpBtnClose.on("click",this,this.onButtonClickClose);
		this.btnShowAD.clickHandler=Handler.create(this,this.onShowAD,null,false);
		EventMgr.ins.on("SHARE_BREAK_TO_VIEW",this,this.shareComlete);
	}

	__proto.removeEvents=function(){
		Laya.timer.clear(this,this.updateTime);
		SocketManager.Instance.off(0x008B,this,this.recvReviveResult);
		this.mpBtnGold.off("click",this,this.onButtonClickGoldRevive)
		this.mpBtnShare.off("click",this,this.onButtonClickShareRevive)
		this.mpBtnClose.off("click",this,this.onButtonClickClose)
		EventMgr.ins.off("SHARE_BREAK_TO_VIEW",this,this.shareComlete)
	}

	/**播放广告 **/
	__proto.onShowAD=function(){
		if(LayaEX.isFaceBook){
			Laya.timer.clear(this,this.updateTime);
			FBInterfaceMgr.ins.showAsync(Handler.create(this,this.onPlayOver),Handler.create(this,this.onPlayError));
		}
	}

	__proto.onPlayOver=function(){
		var res=new com.road.ddt.proto.IntMsg();
		res.value=0;
		EventMgr.ins.event("RECV_RESULT_REVIVE",res);
	}

	__proto.onPlayError=function(){}
	__proto.updateTime=function(){
		this.countDown--;
		this.mpNumTime.text=this.countDown.toString();
		if(this.countDown <=0){
			this.onButtonClickClose();
		}
	}

	__proto.recvReviveResult=function(pkg){
		var res=ProtoMgr.decode(com.road.ddt.proto.IntMsg,pkg);
		if(res.value==0){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002214"));
		}
		EventMgr.ins.event("RECV_RESULT_REVIVE",res);
	}

	__proto.onButtonClickGoldRevive=function(){
		if (LocalBattleMgr.getInstance().checkCanReviveGold()){
			LocalBattleMgr.getInstance().reqToRevive(1);
			}else{
			var res=new com.road.ddt.proto.IntMsg();
			res.value=1;
			EventMgr.ins.event("RECV_RESULT_REVIVE",res);
		}
	}

	__proto.onButtonClickShareRevive=function(){
		EventMgr.ins.event("SHARE",[ShareConst.APPLE_GAME_SHARED]);
	}

	__proto.shareComlete=function(isSucces){
		if(!isSucces)return;
		LocalBattleMgr.getInstance().reqToRevive(2);
		TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002215"));
		var res=new com.road.ddt.proto.IntMsg();
		res.value=0;
		EventMgr.ins.event("RECV_RESULT_REVIVE",res);
	}

	__proto.onButtonClickClose=function(){
		LocalBattleMgr.getInstance().sendGameOver();
		UIMgr.ins.closeView("ReviveView");
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		LocalBattleMgr.getInstance().isCanShowRevive=false;
		this.removeEvents();
		laya.ui.BaseView.prototype.destroy.call(this,destroyChild);
	}

	return ReviveView;
})(ReviveViewUI)


//class modules.battle_apple.view.room.AppleGameRoom extends ui.room.NewAppleRoomUI
var AppleGameRoom=(function(_super){
	function AppleGameRoom(){
		this.mAllData=[];
		this.barValues=[];
		this.lastIndex=-1;
		this.curIndex=-1;
		this.rankData=[];
		this.rankView=[];
		this.askForId=0;
		this.titleName="咻咻的火箭";
		this.mpResGold=null;
		this.calcRewardConf=null;
		this._itemArray=[];
		this._itemPool=[];
		AppleGameRoom.__super.call(this);
		this.addEvents();
		this.initData();
		this.initView();
	}

	__class(AppleGameRoom,'modules.battle_apple.view.room.AppleGameRoom',_super);
	var __proto=AppleGameRoom.prototype;
	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.BaseView.prototype.showView.call(this,$x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash);
		EventMgr.ins.event("enter_AppleRoom",this.mpBtnStart);
	}

	__proto.exitGuide=function(){}
	/*if(PlayerInfo.instance.guideNode==NewbieMgr.NODE_GUN){
	mpBoxRight.addChild(mpBtnStart);
	mpBtnStart.pos(454,589);
	EventMgr.ins.event("AppleRoom_start");
}*/


__proto.addEvents=function(){
	this.mpBtnBack.on("click",this,this.onButtonClickBack);
	this.mpBtnHelp.on("click",this,this.onButtonClickHelp);
	this.mpBtnStart.on("click",this,this.onButtonClickStart);
	this.mpBtnInvite.on("click",this,this.onButtonClickInvite);
	this.mpBtnRank.on("click",this,this.onButtonClickRank);
	this.mpImgRank.on("click",this,this.onButtonClickRank);
	this.mpBtnAdd.on("click",this,this.onButtonClickAdd);
	EventMgr.ins.on("update_greenAll_ranking",this,this.initRankData);
	EventMgr.ins.on("rece_friendlist",this,this.showAskFor);
	EventMgr.ins.on("RECORD_ASKFOR_ID",this,this.setAskForId);
	EventMgr.ins.on("vip_buy_rocket_profit",this,this.buyProfit);
	this.mpListView.renderHandler=Handler.create(this,this.onDataFiller,null,false);
	SocketManager.Instance.out.sendRankListRequest('4');
}


__proto.removeEvents=function(){
	this.mpBtnBack.off("click",this,this.onButtonClickBack);
	this.mpBtnHelp.off("click",this,this.onButtonClickHelp);
	this.mpBtnStart.off("click",this,this.onButtonClickStart);
	this.mpBtnInvite.off("click",this,this.onButtonClickInvite);
	this.mpBtnRank.off("click",this,this.onButtonClickRank);
	this.mpImgRank.off("click",this,this.onButtonClickRank);
	this.mpBtnAdd.off("click",this,this.onButtonClickAdd);
	if(this.mpListView.renderHandler){
		this.mpListView.renderHandler.recover();
		this.mpListView.renderHandler=null;
	}

	if(this.mpListView.selectHandler){
		this.mpListView.selectHandler.recover();
		this.mpListView.selectHandler=null;
	}

	EventMgr.ins.off("update_greenAll_ranking",this,this.initRankData);
	EventMgr.ins.off("rece_friendlist",this,this.showAskFor);
	EventMgr.ins.off("RECORD_ASKFOR_ID",this,this.setAskForId);
	EventMgr.ins.off("vip_buy_rocket_profit",this,this.buyProfit);
}


__proto.setAskForId=function(id){
	this.askForId=id;
}


__proto.showAskFor=function(){
	var layer=this.parent ? this.parent :null;
	var vType="";
	if(layer){
		vType=layer.getLastViewType();
	}

	if(vType=="AppleGameRoom"){
	}

}


/*UIMgr.ins.openView(ViewType.FriendAskForDialog,Handler.create(this,function(view:FriendAskForDialog):void{
view.initView(askForId);
}));*/


__proto.buyProfit=function(){
	var curGold=this.getCurGold();
	var maxGold=this.getMaxGold();
	this.mpTextPro.text=curGold+"/"+maxGold;
	this.mpImgPro.width=this.mpImgProBg.width *curGold / maxGold;
}


/**
*渲染填充数据
*/
__proto.onDataFiller=function(item,index){
	var itemId=this.mAllData[index];
	item.setData(itemId);
}


__proto.initData=function(){
	this.mAllData=[];
	this.mAllData.push(6007002);
	this.mAllData.push(6007003);
	this.mpListView.array=this.mAllData;
	this.initRankData();
}


__proto.initRankData=function(){
	var arr=RankingMgr.ins.model.greenAll;
	if(arr.length >=3){
		this.rankData=arr.slice(0,3);
		}else{
		this.rankData=arr;
	}

	this.initRankView();
}


__proto.getTestRankData=function(){
	var msg=new com.road.ddt.proto.RankingInfoMsg();
	return msg;
}


__proto.initRankView=function(){
	while(this._itemArray.length){
		this.pusPool(this._itemArray.pop());
	};

	var item,data;
	for(var i=0;i < this.rankData.length;i++){
		data=this.rankData[i];
		item=this.getItem();
		item.initView(data);
		item.x=10+170*i;
		item.y=20
		this.mpBoxRank.addChild(item);
		this._itemArray.push(item);
	}

}


__proto.getItem=function(){
	var item=this._itemPool.pop();
	if(!item)item=new MiniRankItem();
	return item;
}


__proto.pusPool=function($item){
	var index=this._itemPool.indexOf($item);
	$item.parent && $item.parent.removeChild($item);
	index < 0 && this._itemPool.push($item);
}


__proto.onButtonClickInvite=function(){
	EventMgr.ins.event("SHARE",[ShareConst.APPLEGAME_INVITE]);
}


__proto.showAddGold=function(){
	if(LocalBattleMgr.getInstance().getAddGoldNum()> 0){
		LocalBattleMgr.getInstance().resetGoldNum();
		DropItemUtil.showEffect("ui_gold",0,new Point(550,400),new Point(this.mpResGold.x+this.mpResGold.width / 2,this.mpResGold.y+this.mpResGold.height / 2),20);
	}

}


__proto.onButtonClickRank=function(){
	UIMgr.ins.openView("Ranking",Handler.create(this,this.onChangeTab));
}


__proto.onChangeTab=function(){
	var view=UIMgr.ins.getView("Ranking");
	view.selectIndex(1);
}


__proto.onButtonClickBack=function(){
	if((SceneMgr.ins.curScene instanceof modules.battle_apple.view.LocalBattleScene )){
		HallMgr.ins.show();
		}else{
		UIMgr.ins.closeView("AppleGameRoom");
		SoundMgr.instance.playSound(4002005);
	}

}


__proto.onButtonClickHelp=function(){
	UIMgr.ins.openView("AppleGameHelp",Handler.create(this,function(view){
		view.initHelp(3);
	}));

	console.log("点击了帮助界面");
}


__proto.onButtonClickStart=function(){
	this.exitGuide();
	var dataList=LocalBattleMgr.getInstance().getItemList();
	if(dataList.length > 0){
		for(var i=0;i < dataList.length;i++){
			var id=dataList[i];
			if(id==6007001){
				this.showStartParticle(0);
				}else if(id==6007002){
				this.showStartParticle(1);
				}else if(id==6007003){
				this.showStartParticle(2);
			}
		}
		Laya.timer.once(800,this,this.goToPlay);
		}else{
		this.goToPlay();
	}

}


__proto.onButtonClickAdd=function(){
	var infoStr;
	var vipCount=VipMgr.ins.getAppleGameProfitTimes();
	if (PlayerInfo.instance.profitPromoteTimes < vipCount){
		infoStr=LanguageMgr.Ins.GetLan(14300342,ConfigModel.getConfigData(1166).ConfigValue,ConfigModel.getConfigData(1167).ConfigValue,PlayerInfo.instance.profitPromoteTimes,vipCount);
		TipsManager.Instance().showAlertDialog("",infoStr,"",LanguageMgr.Ins.GetLan(9002241),Handler.create(this,function(){
			if (PlayerInfoMgr.ins.getItemCount(ItemConst.PINKGEM)< int(ConfigModel.getConfigData(1144).ConfigValue)){
				TipsManager.Instance().showLanTips(10001113);
				return;
			}
			VipMgr.ins.sendBuyAppleGameProfit();
		}),
		Handler.create(this,function(){}),
		Handler.create(this,function(){}));
	}

	else{
		var lv=int(ConfigModel.getConfigData(1169).ConfigValue);
		if(PlayerInfo.instance.vipLv >=lv){
			TipsManager.Instance().showLanTips(14300055);
		}
		else{
			TipsManager.Instance().showLanTips(14300365,lv);
		}
	}

}


__proto.goToPlay=function(){
	if((SceneMgr.ins.curScene instanceof modules.battle_apple.view.LocalBattleScene )){
		UIMgr.ins.closeView("LocalBattleResult");
		UIMgr.ins.closeView("AppleGameRoom");
		LocalBattleMgr.getInstance().playAgain();
		}else{
		LocalBattleMgr.getInstance().onEnterSingleBattle();
	}

}


__proto.showStartParticle=function(index){
	var item=this.mpListView.getCell(index);
	var particle=UIFactory.ins.createParticle("lizi_bjx.part");
	var itemPos=item.localToGlobal(new Point(0,0));
	particle.x=itemPos.x;
	particle.y=itemPos.y+item.height / 2;
	this.addChild(particle);
	var pos=this.mpBtnStart.localToGlobal(new Point(0,0));
	Tween.to(particle,{x:pos.x,y:pos.y},700);
}


__proto.initView=function(){
	this.initRes();
	if(UrlParam.PARAMS["PLID"]=="qq"){
		this.mpIconPlatform.skin="appleGame/room/fruit/ui_qq.png";
		}else if(UrlParam.PARAMS["PLID"]=="wx"){
		this.mpIconPlatform.skin="appleGame/room/fruit/ui_weixin.png";
		}else if(UrlParam.PARAMS["PLID"]=="fb"){
		this.mpIconPlatform.skin="appleGame/room/fruit/ui_fb.png";
	};

	var curGold=this.getCurGold();
	var maxGold=this.getMaxGold();
	this.isOpenResize=true;
	this.mpTextHelp.text=LanguageMgr.Ins.GetLan("9070035");
	this.mpTextTop.text=LanguageMgr.Ins.GetLan("9070077");
	this.titleName=LanguageMgr.Ins.GetLan("9004141");
	this.mpNumTop.text=PlayerInfo.instance.appleGameScore+"";
	this.mpIconApple.x=(this.mpImgTop.width-this.mpNumTop.width-this.mpIconApple.width)/ 2;
	this.mpBtnHelp.x=this.mpTextHelp.x-this.mpTextHelp.width-this.mpBtnHelp.width / 2;
	this.mpResGold.x=this.mpBtnHelp.x-this.mpResGold.width-this.mpBtnHelp.width / 2;
	this.mpIconPlatform.x=(this.mpBtnInvite.width-this.mpIconPlatform.width-this.mpImgText.width)/ 2+this.mpIconPlatform.width/2;
	this.mpTextTitle.text=this.titleName;
	if(curGold<maxGold){
		this.mpTextPro.text=curGold+"/"+maxGold;
		this.mpImgPro.width=this.mpImgProBg.width *curGold / maxGold;
	}

	else{
		this.mpTextPro.text=LanguageMgr.Ins.GetLan("9002248");
		this.mpImgPro.width=this.mpImgProBg.width;
	}

	this.mpListView.scrollBar.hide=true;
	this.mpListView.selectEnable=true;
}


__proto.initRes=function(){
	if(!this.mpResGold){
		this.mpResGold=new CommonCoin();
		this.mpResGold.x=822;
		this.mpResGold.y=3;
		this.mpResGold.setData(CommonCoin.ID_GOLD);
		this.mpBgTitle.addChild(this.mpResGold);
		}else{
		this.mpResGold.setData(CommonCoin.ID_GOLD);
	}

	this.showAddGold();
}


__proto.onResize=function(_bestFitWidth,_bestFitHeight){
	laya.ui.BaseView.prototype.onResize.call(this,_bestFitWidth,_bestFitHeight);
	this.mpBoxAll.scaleX=_bestFitWidth / 1136;
	this.mpBoxAll.scaleY=_bestFitHeight / 640;
}


__proto.destroy=function(destroyChild){
	(destroyChild===void 0)&& (destroyChild=true);
	this.removeEvents();
	this.mpResGold.removeSelf();
	this.mpResGold.destroy(true);
	this.mpResGold=null;
	while(this._itemArray.length){
		this.pusPool(this._itemArray.pop());
	};

	var item;
	while(this._itemPool.length){
		item=this._itemPool.pop();
		item.destroy();
		item=null;
	}

	this._itemPool.length=0;
	this._itemPool=null;
	this._itemArray.length=0;
	this._itemArray=null;
	laya.ui.BaseView.prototype.destroy.call(this,destroyChild);
}


__proto.getCurGold=function(){
	return PlayerInfo.instance.appleGameGold;
}


__proto.getMaxGold=function(){
	this.calcRewardConf=this.getRewardConfig();
	return this.calcRewardConf.rewardMax;
}


__proto.getRewardConfig=function(){
	var confStr=ConfigModel.getConfigData(1074).ConfigValue;
	var vipConf=ConfigModel.getConfigData(1167).ConfigValue;
	var data={}
	data.rewardUnit=int(confStr.split(",")[0]);
	data.rewardMax=int(confStr.split(",")[1])+int(vipConf)*PlayerInfo.instance.profitPromoteTimes;
	return data
}


AppleGameRoom.CONFIG_REWARD=1074;
AppleGameRoom.CONFIG_EXTRA_REWARD=1167;
return AppleGameRoom;
})(NewAppleRoomUI)


//class ui.hall.AdvertisingViewUI extends laya.ui.Window
var AdvertisingViewUI=(function(_super){
	function AdvertisingViewUI(){
		this.btnClose=null;
		this.btnDow=null;
		AdvertisingViewUI.__super.call(this);
		var temp=AdvertisingViewUI.uiView;
		AdvertisingViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(AdvertisingViewUI.uiView);
	}

	__class(AdvertisingViewUI,'ui.hall.AdvertisingViewUI',_super);
	var __proto=AdvertisingViewUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	AdvertisingViewUI.uiView="eJyNkD0PgjAURf/Lmxslokg6qouLq4MxpEBTXiwtgfIl4b9bGjTEwbi86d5zct8Api84ULiiSnULBIpSFxXQAVpMTQY09D0CGUeRGaDbIBwJJBnKFOhteJfPORN82e2B2lbnbvVAZTMsbXhpsEIl1jVGHbInQ1OvCiVgHMmHdTnUxmj1RdvsHC709gQaVtpcbNRR6mrSzoZE57lWEzx2iEjUTMXoDAQki7m0qT9kfuA7WxAsbSf3nl9rrHaecx9fUQRw6A==";
	return AdvertisingViewUI;
})(Window$2)


//class ui.hall.CreateUserViewUI extends laya.ui.Window
var CreateUserViewUI=(function(_super){
	function CreateUserViewUI(){
		this.btn_start=null;
		this.txtInput=null;
		this.btn_close=null;
		CreateUserViewUI.__super.call(this);
		var temp=CreateUserViewUI.uiView;
		CreateUserViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(CreateUserViewUI.uiView);
	}

	__class(CreateUserViewUI,'ui.hall.CreateUserViewUI',_super);
	var __proto=CreateUserViewUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	CreateUserViewUI.uiView="eJyNks1ugzAQhN9le0VJTIAAtzanXHppq7aqqshxHLBCbGQvzZ/y7l1IKKg9FF/Qmt0ZfbM+Ax5LCSm8Kr02e/CgtKZ0kJ5hr9aYQxqGzINcqixHKlh88UDkqlhD+nFuhx8XO57J/vARUj+MPDjQdxZ64LZKU2PBdVZR63ieKy2dHAsrOcoXJ+24UstVNip1Rjpci9zYd0gno7Ct3prqcvE624cK0ehfvgGb3nzJ/wbB4pkHX9zS0Ar10iG3CB0WS5LBWEnSqCfToVBbdxIDsD57YM/ygAtdVvgn0rAxZ1GH5rOoRcNu6iaEJESVQ2u2cm4KU7fd8TgOo+DnHlJi2fHDPOeWnFjQ2zfFtjEan9SJ2nz/WpHGvVW8IAXRam6aUzMWKqtTEVKjtPD/vvz4+k6CybS/I1EYV2c/LGT6p1eqibmO8htxB+a6";
	return CreateUserViewUI;
})(Window$2)


//class ui.hall.sonView.MonthTipsUI extends laya.ui.Window
var MonthTipsUI=(function(_super){
	function MonthTipsUI(){
		this.statTxtKey=null;
		this.statTxtValue=null;
		this.getKey=null;
		this.getValue=null;
		this.lastKey=null;
		this.lastValue=null;
		this.openBtn=null;
		MonthTipsUI.__super.call(this);
		var temp=MonthTipsUI.uiView;
		MonthTipsUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(MonthTipsUI.uiView);
	}

	__class(MonthTipsUI,'ui.hall.sonView.MonthTipsUI',_super);
	var __proto=MonthTipsUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("Text",Text);
		ClassUtils.createByJson(uiData,this,this);
	}

	MonthTipsUI.uiView="eJy1lM9u00AQxt9luK7KrhPbG99aJAoCIaRW/FGFKseeOKtuvJa9aRIiS0Wc6J1DQdy49MYBcQHEy9D0yCuwduLUTkNbIbAsy7Pe2e83n8YzBT1JEDx4KuJQjYBAkqokA28KIxHqPngWcwj0UUR9DR6zrJxA0BcyBG9vWiXfH/gR1nMn4FEC4/JZPyc7ELHZH6jB4PZQ7GuRZBtJHJnUTLzE7VSYY8GipLqhKZ2TpeQujvWKIi8VC5mFJOPm/dBPzfZM+3p3rB/gxCTpIteD8+Mvs6NXv769q6lYFoGeivWOwbmIzObNVPjSbAyUVMWBt3oOdsMA6kwP/S7KtVCcroA88eUQ16PcTB4DdNGFayxp25c8ce0KJcKmH7MPr8/fH/9DP7b/TMQvGoO13BrRFcaI7J4eyPJMT6dD/CvKXui4vets4+xyK7UqSOlnTd/O3pz+/H5y9vF09vbT/+6mBRhz6jRXeJbpVB3gnUqGtWxOu8t1w3RTQLuDIaUNwEdbQ61VvILYceeIlC/N6/CKViUYb+kipTYJVFzMgglKqUb7Ll0/EFg5EFghJg6Vfm5o6Ya9iJ6ZvuoQ44VxbKdZcejwFi3mSO1jWfY8ntdNF+FjPwyFUTeShJI2WebdbbpSrpUS2bypiqta35QiKkvDWGNarRb/14+j2eevtfZoszx/kf8GwFLHSg==";
	return MonthTipsUI;
})(Window$2)


//class ui.levelBox.LevelBoxRewardWindowUI extends laya.ui.Window
var LevelBoxRewardWindowUI=(function(_super){
	function LevelBoxRewardWindowUI(){
		this.list=null;
		this.getBtn=null;
		LevelBoxRewardWindowUI.__super.call(this);
		var temp=LevelBoxRewardWindowUI.uiView;
		LevelBoxRewardWindowUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(LevelBoxRewardWindowUI.uiView);
	}

	__class(LevelBoxRewardWindowUI,'ui.levelBox.LevelBoxRewardWindowUI',_super);
	var __proto=LevelBoxRewardWindowUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("ui.levelBox.items.LevelBoxRewardItemUI",LevelBoxRewardItemUI);
		ClassUtils.createByJson(uiData,this,this);
	}

	LevelBoxRewardWindowUI.uiView="eJytU1tvmzAU/i9nrw7BJkDC21JpU6RqmnbROk1V5cIZWDM2NaZpF+W/z9walDEtk4Yf0DHnu/jz4QD2uUJI4ItQmd4DgcroqobkAHuR2QISSllAoECRFxaSVewfCaSFkBkk3w4jelfyHKfgZwdkGwJPkCxCMnKF0ZpA/UMoBzG45yZb5mjv7nOvUrmD1+InvjXCUUOwIowRtiJ07cNJn202xyO5SJfSgP4H5TrlEm/cMeg/ufA7DyE9V021yg23jeRWaFV38pdxUT8OL2GbWp4yv5sNi9LeaBS8cEuu8sa1Lq8KobDG5bwYG9S4SgttvjqbXjhWN101Vb8WtT3TZn5/MMbWL/cUxYzAIzetjR5hsEJuHWF0yp/S9dwUXuMjyq1++tD53Vksp4oGVYbmU9/aFy19o6wo261GeHIg8ITD1t7vfJ937rJup6FuG2u1OjtZEG1OqfancdO2tW3fEHKqy3LZiLvcIKohScnvUX50k+gY/KF8z7NMuK8JLBjx2zU2vtHKRQGvjeBy3LvSUhvnAl597x7yhzfMxTc7IMPPFMd/HY9GLB4adMFKoR6aC4bj1q1fjmttMg==";
	return LevelBoxRewardWindowUI;
})(Window$2)


//class ui.levelBox.LevelBoxWindowUI extends laya.ui.Window
var LevelBoxWindowUI=(function(_super){
	function LevelBoxWindowUI(){
		this.closeBtn=null;
		this.list=null;
		LevelBoxWindowUI.__super.call(this);
		var temp=LevelBoxWindowUI.uiView;
		LevelBoxWindowUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(LevelBoxWindowUI.uiView);
	}

	__class(LevelBoxWindowUI,'ui.levelBox.LevelBoxWindowUI',_super);
	var __proto=LevelBoxWindowUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.levelBox.items.LevelBoxItem",LevelBoxItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	LevelBoxWindowUI.uiView="eJyFkl1rgzAUhv/LuQ62atNWL93FKJTddLCNMUrUYMJiIknsJ/3vi00/bFc2hMAJb97nvOe4B7ttKKTwxmWp1oCg0aoxkO4PCArGRQnp5/4smtWkoj0NbCGNhgg2kLpzzUvLIA2HYYzAfHPpXhSqrpUctHyZV8swaGTlnjPKK2YhxXHihHxHnzV3HMARwjHqzhEK4XBAf4JjfASH+EJOptED8I7xE7eHmkxQgtEoRNOo39Aw+Y/q08bR9FFETpTlpcf1jV6y1lol7wPEPsAYwYrozkkoQzPb6X57Hx2WVUtkfs4jSE6FU92yHs7Kt42Ho4u1INKZVXTwxLikhg4EXVGRq01H27J8c4IQWTClP1zyAJ+r92PVp865sXfMiWdGyXU/brunqMLrTUMK6tzG1x2MsBstWxRaCZERvbgZBDPHez/gBz/ovMuQqc3M0rrfjm6l5XWnqFXZCmoCcVIG3ElNcPdQU1lS/epNfeGG/OW+H1UmBIQ=";
	return LevelBoxWindowUI;
})(Window$2)


//class ui.hall.LevelUpPageUI extends laya.ui.Window
var LevelUpPageUI=(function(_super){
	function LevelUpPageUI(){
		this.box=null;
		this.boxContent=null;
		this.txtSpeed=null;
		this.boxunLock=null;
		this.boxUnlock=null;
		this.unlock_Icon=null;
		this.btn_share=null;
		this.shareTips=null;
		this.txtHp=null;
		this.txtDamage=null;
		this.level1=null;
		this.level0=null;
		LevelUpPageUI.__super.call(this);
		var temp=LevelUpPageUI.uiView;
		LevelUpPageUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(LevelUpPageUI.uiView);
	}

	__class(LevelUpPageUI,'ui.hall.LevelUpPageUI',_super);
	var __proto=LevelUpPageUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.tips.HtmlShareTips",HtmlShareTips);
		ClassUtils.createByJson(uiData,this,this);
	}

	LevelUpPageUI.uiView="eJzNVmtP2zAU/S/e10DtvJr022DaQEL7AtM2TahKGzcxJHYW21BA/Pdd50ETmrapNGlTpTYP+5x7z73nui9IPRUUzdB3xmPxiCxUlKKQaPaCHlmsUjQjjo8tlAst6U1aCp3AM1VqaqGUsiRVaBZi/GqhZcqyGM1+vbSIZ2LdhXtCM9cDpDWa+QH8PkQlLFpUiyK+TEX5E83wqdfe/ajuxgHbnl0Bd2HPBVeUKzSEcJlHCX2HUYdGQkBqMnccCEbeMw47MvpAM11MNJvLlPLkjs1jdlrwBFAke6ZfSgYMCFtBYMGXjTby+N7rq7WXOiQ1N36j9qfhELXSCxaJYWLiG2bSp3a71F+HuAlxKnLPhiAemGSLDNauokzSTQQRTzRsnZynjFNJJ52QHkUZz6WOdRXToUwJrtlI4L6hR1JSJSeKrk1bTZYizwWfsCV8tWrnjCdH4bsgxq5sDvAdm4rTKdV+6ESYvtkCv4oWNNuqSlBXxYA3PVGZ5l1KdbertbouKI0BxFDDNrNWqlLc03ORCbPmgx37mASofQ6m2fSJA9cr8Ms1NBS8cOo72PWxZJGJbdmihNFqZTvGshlL6u5cqV462+4kHnlz52D84FbNr8Ty/kizbvwyxXjILwuWzBfJtlsC2yLgtunUCt2OXYiPD2RS89peuCeVbzzblcqgA+1m8nRT2GO4O0alFk1OewbngfZ1w3oU273+2jVyBocd8S3iWWQKo6cjYoAPUbengN2KpivF5pfgEzRKA1mmz/P7iP1mxluNo27h0xl2Z1qpCq+ntV2n7bjeW8UUhyETlXRDbXxraEQJMVBooib3zDj1c+UMxx5f35oSmm1MamsW8adIPDG4OKrIFyrPrk0eNwyo+yGcOHUMJ57Tpi07S0vNFcsNSC5inVF5quDFaR/xtSfvxYA5mpPEdtxx2ow+XXYeAUOj06sHp9ufm+2cvCj+4ZAcKaA7trnGCnjEwdOoFwyr9ylqQvgfFBw0m1P/EbR9/7Db7tiAwQ4e+82p77p7/hvSLa2Hg8VNvZ2/EKyZS+cZK4YFcR3S1rFCJMjcZtrsxKZaRbSkMFROyPYpwHXeDv+UUlMvTMDknj8Nwt3jiWyKV1blHx+s7eNesPhfBHtbff4AJ4QmDA==";
	return LevelUpPageUI;
})(Window$2)


//class ui.LevelUpShare.LevelUpShareViewUI extends laya.ui.Window
var LevelUpShareViewUI=(function(_super){
	function LevelUpShareViewUI(){
		this.imgLeft=null;
		this.imgCode=null;
		this.lab_cpdeName=null;
		this.toLevel=null;
		this.currLevel=null;
		this.lab_nickName=null;
		this.imgHead=null;
		this.boxDown=null;
		this.btn_back=null;
		this.btn_shareSpace=null;
		this.btn_shareFriend=null;
		this.btn_sharefacebook=null;
		this.lab_blood=null;
		this.lab_damage=null;
		LevelUpShareViewUI.__super.call(this);
		var temp=LevelUpShareViewUI.uiView;
		LevelUpShareViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(LevelUpShareViewUI.uiView);
	}

	__class(LevelUpShareViewUI,'ui.LevelUpShare.LevelUpShareViewUI',_super);
	var __proto=LevelUpShareViewUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	LevelUpShareViewUI.uiView="eJzNV9lu4zYU/Rf21R1TC7X4rZN2OgMEeckU7aAIAkqiJcYUKWhJnAb+hAH61q/oZ81/lBS10LYcK50uMYIAlMR7D8+5G59A/VgQsAI/U56IB7AARSmKCqyewANN6gysLMeDC5ARmmY1WPk23C1AnFGWgNWvT/3uDzlOibn5Eazkrm37f89QtaFcbsgwY1G6jNI3BU/lxirGjHySn78JFiAXTUU+ZqVoUrlvjVlFuoc/cBwxkgwPe1ghhLvdYoDzVmwPwHgajQutAQ9C/gCHYZ428gjLi4xyUpElI/eENcWyobcPokxuU8HTO9qB7b16cB4ZmobelbL8U3Gd4ZIo81VGlOlEGzdPcZpU5LkLcI9L+RHN00uyrsFM+x3Tv4DVt9Y5X67TOnPCk7a3FIu7ecAdx26t2Sg4ae6OYl6LZpY9Sykp7Vm+fUbFYy5qsq3ngQ48Ddq1XuKk2VJe09ZZ5+bGcHQ15SlE+jSh9wJHuUwiJnBCefohFvwolbxR7XaBeZyJsn2F+lX7Dp0NBV/Dg/6YPxaCRhBeiIQYqSFfmjYvcUTYgU3b6RS0kDsaDfzeKMPRbVwk5ArnyrISTT798vvnL3/+oY5Zl2JDLgQT6uNvYPsbnkvtRjC2jOC14PU1/Y0oMfVK7vqupFjBinsr6/YHnqNKrhhNlUAx4TUp94JoUlsXBjpr/RkFZygypxDMducjNNCqUnm25542152H4p0k84LRYgYOJ+jVrcWl8gvUmjVEV8gCx7o0HZRLiY43eR/fGSFKPGjZjos8PwjnYbZG5cr24xecAfljiAZhf4a4KctXdYqpNHNUr5BH8AJnzDLfNbOM03hzIsuGFIJ7KQT/vRQ67t12V308x/7bswc0a9V7gpOxYeKqInW1VCcvG7KMRZ4Lvoxknmw6rbjixtw5VLn9sWM2ks6zcrXMcdX7KQlPSPlRG1PPR9+ZdNw92XN+c2bqCXX/CscU9L0hfiOx/V48cMOm708xfPW2qWvBDwNL25bxOx4udAbbNb+NcLwB+6eVbSstCRl6lQynH0sqvQEbLaTOsid4tnJE70X9SSFX4dKuZOyEnlr1YFE4CXZKBVtjDc8VYKO7rrPH7ZlSrPrmXmef5klHrxMYXS60TJ4q5fNalY1jtiJZVjw4QZe9UH9oYTuGfgjNp0TDUpExm5Lt5u6fpMRzw2cpeVdSmRGvnZPs8b/kZC2jJBJiIq9eFSsdytnsmPy8Py5kbqgHcWQFs2Ef317OXfLaiT2nw9T+TGV/tndQOYwP143B3sEld5zMg3MtXM8g4VhnPWi274gJkQy9GwXwaDi2Ew9agTEc22MgqHuZ0dmd0509xOt1G0N992bq4rmbq50PnZdqF8zXzrigf71we7f9r1TNG1VzTNUS3EH7/2S72f0FdKOtqg==";
	return LevelUpShareViewUI;
})(Window$2)


//class ui.login.QueueUpViewUI extends laya.ui.Window
var QueueUpViewUI=(function(_super){
	function QueueUpViewUI(){
		this.btnClose=null;
		this.labTime0=null;
		this.labTime1=null;
		this.mHbox=null;
		this.curIndex=null;
		QueueUpViewUI.__super.call(this);
		var temp=QueueUpViewUI.uiView;
		QueueUpViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(QueueUpViewUI.uiView);
	}

	__class(QueueUpViewUI,'ui.login.QueueUpViewUI',_super);
	var __proto=QueueUpViewUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	QueueUpViewUI.uiView="eJyllU1v0zAcxr+LuVqrncRN2hubBJuEdgEJEJqqvLiNtdQpbbJ1TJUQjJdJbEKDHZi4gJDYYbxeJo2NfZllLad9BZy3Nu0ywjRFcuTqb/+e5/E/7irwVloUVMFdxi13GUDQarutDqiugmVmeTaolokCgU1Zw/ZAVUFaDwLTZo4Fqg9W08XTbje7cgVUEQRdMeYVzzX1Bp0ox0pUH75SrCy26CwyLlaYbrPp8pLPakajhqdavAFGkuSKJgrZI3qzzQQHEAkSGYajAjHo9eA/wbFOTHAejOmuxywWAfOczOftKCdbqmS4paPzhi8qSzM247RDSw99Kp5WyaK8YeksfDl+4kvnpu227wtpUySd3Ytmvd5CgZuQKdikPIyRKNKYs9AXp8ykPMFlksMalBQoSRCrmXwlVS0KUaqUYy7JcJWcRGNyxxZ5yOf5CGIEwyFDJ6QIjlU5gqt5QI91bLboC16X6bHl8RTnp33Pc/mkITXaUqpAsKS3RZnh8RnH7YTsiTCNaH1NnC83WOLJ0Q3qiJqx7rsV/TjBwTFIFrkDj3aFYfDn49rg64f+l/Xg97Ozwx2xou5y77aISdSjeCbKrreZHm5nuo4bKryGkEkQubiBcKEYlIopp7aFkTusScMDSdQhFLx8jlD/89ZlhRXiiZzg5SEt2P95+SDqdVVC6CpBKPIFQeArBZEIK8JHzRDh1SGt//bHycFmcPQmWN/ov/sVHG2fHBycbn8fHL8IPu2cHb4afNsfPH4dHD+N8/pvTVpdMbBScO2M9M6ev+kx0uKPZZRWc9YQZXk3Zp5fPOr90ye7scfTza3g/W5/b2/ciFJoJCv2hiidcVgry4v+ZIZCTb89xy0aWlrSHT9chEefeHpLR+95v5neWDalUQdgSVZIWdUqhUeK44aSNDy0enK0cXlvC+L5C0bogLk=";
	return QueueUpViewUI;
})(Window$2)


//class ui.mysteryShop.MysteryShopAlertWindowUI extends laya.ui.Window
var MysteryShopAlertWindowUI=(function(_super){
	function MysteryShopAlertWindowUI(){
		this.bg=null;
		this.closeBtn=null;
		this.icon=null;
		this.titleText=null;
		this.itemNameText=null;
		this.priceText=null;
		this.descText=null;
		this.priceTypeIcon=null;
		this.buyBtn=null;
		this.countText=null;
		this.cardProList=null;
		this.starList=null;
		MysteryShopAlertWindowUI.__super.call(this);
		var temp=MysteryShopAlertWindowUI.uiView;
		MysteryShopAlertWindowUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(MysteryShopAlertWindowUI.uiView);
	}

	__class(MysteryShopAlertWindowUI,'ui.mysteryShop.MysteryShopAlertWindowUI',_super);
	var __proto=MysteryShopAlertWindowUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("ui.mysteryShop.items.CardProItemUI",CardProItemUI);
		ClassUtils.createByJson(uiData,this,this);
	}

	MysteryShopAlertWindowUI.uiView="eJyVVt1u0zAUfhVkbqMu/01yxyoBk2BCGohNCE1u4iTWErtynK3d1HfhBZC44IJJPA4gHgM7iVOnP0tJU8V2fH6+c75znAfAVwsEIvARk4TeAQMsGF1UIHoAdzjhOYh82zRAjnCWcxC5jr02QJzjIgHRpwclfFbCDOmyKxBZ7sQzwFIMQjlQ2kyh7RYyITTPhER1g4kYl6uKI7aqcro4qfE1x1WOb2pIssmCyG29fctfr40n7YZeZ9d3Nbue6RwyRhCOEdkyZFtTsR/fo1cMC6jA8g11A92D89Oac0q2fHAUdqdxpsUbF7RCp5xsUMe0LKUH80bHdSYAz3HnSAHnqBB7wBjeaY/XPw7vsl5iqPBqEE1D/ixxj9rcxLgZ7LeTaBkcU2jZgWKLZ+l0sVX0cNxEWeVnGugq3zTBGqps9cgcDAjoOlOlkmNeoPdoyYUkl48I/P3+9dfjN82OExogpYRfiDiJmdnOxM63OGa0oil/dgVfIyxEYlpQqfY5TKeWZ4qVOZVlwlmNDABJnFN2BSJTOtPOLtWswFnDB0REAMEYMtvyO2hBoCGzwp5qmKPyHJZb4P58+fH756MOztTB2e5R4HwBztkG958AfJUbK7A1BKGrACyYqMmB955sHBVn9AbNlC+2G5hWAtS6SO4R2F4wDAsdkT9PUzM4gKhAKR/FY5l+xzSrx2I7fTYSVMUjmbBC91h3n0zAjrv7is32pir8rqOF37GH4Rcaztqq0/oVJbK2U0Sy+1yWdwK3Oqc4Icb7o+f3xelvOuS8Xu30x9ZexlDfojedcc9JdL4XcNjYmvq95kJ4XouNJ7McE1Shk63eldG6hKoVHy7d9frzGDVagjex1s+joD8GY1oTPqBHKK8dsvu2a9pwP9ntIXvsw+xJmwtsGMMaDQOG44rvtGezzZZ8KoK7Tg8BsuQdo51gtYAxEtHyNXoHez8bZq3cmehWukGGSILY+3ZPOxGvmQgTLuVSjSddui5Euiay2VUTTdeHMzBMzEsRjFmBF9uoHLf7QAkVkopD1sG4hUUthaG4Dn6oLDHJ5F+dpjlCMuyNQAwL1JDG7SaX3STBDMUcU6nvFjGOxcvG438ZcP3U";
	return MysteryShopAlertWindowUI;
})(Window$2)


//class ui.mysteryShop.MysteryShopWindowUI extends laya.ui.Window
var MysteryShopWindowUI=(function(_super){
	function MysteryShopWindowUI(){
		this.closeBtn=null;
		this.refreshBtn=null;
		this.refreshNumText=null;
		this.refreshTypeIcon=null;
		this.timerText=null;
		this.refreshTipsText=null;
		this.itemList=null;
		this.boxGold=null;
		this.goldNumText=null;
		this.boxPink=null;
		this.pinkDiamondNumText=null;
		this.boxGems=null;
		this.diamondNumText=null;
		this.addDiamondBtn=null;
		MysteryShopWindowUI.__super.call(this);
		var temp=MysteryShopWindowUI.uiView;
		MysteryShopWindowUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(MysteryShopWindowUI.uiView);
	}

	__class(MysteryShopWindowUI,'ui.mysteryShop.MysteryShopWindowUI',_super);
	var __proto=MysteryShopWindowUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.mysteryshop.items.MysteryShopItem",MysteryShopItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	MysteryShopWindowUI.uiView="eJzVV11v2zYU/SsD98o6IvVpvS3tkAXoggEt0BZDEdAWLbGRREEfrZPAwB73XGDbc9+HoU/bL2qwn9FLUd92IgMb0C0JHNMg7zn33Mtz5VtUXmcc+eiFSAP5DmGU5TIrkH+L3omgjJDvLC2MIi7CqISFaewwWkciDpD/4217+DxhIR+evUY+XWK0Rf4jB3eRXIpRcSVSOLGWSSLTk0pcrsJLssjSEPUo9hLOFuKGn+UCcJBNsW1i9WphgnY7/CCwZdfAxOiBLeMA8E0kGtwBlOvipY0tgj06JOR4Q9SL06osZTrFJTWuh9FbliukWBb8tFTb9pOuA1yGFUtXLYuYrXgMu2YTJNSrkajbZ2j00ibXRcnz6yKSmYIKmHxTXQFQaEx1tigZJU8c3P6h+Xxt0ErRAL1aGsR02uxzvsl5EY3ynzArtiwN2uwz8VaWryCEt7Cb1UvIy+vZmu6IrKGIGjXVAx15cVA4Tdh2O0YxyFLBxpPHkUh5wU+mFKOKbUXacGTpOpI5kDQUR70CkmSo1dO6imNcXS7P7HSyrIlMF1XynG9LOFeqf/6yvgFlLq/4YxlLtfNr22XEMFD7OUTBKJFVwb9N2SrmkP6GxQXvBaNAciPT8hmIBitDryDUN7lgiuO6Db2pf+CTlVQylnkFYVgswrpreQqSzHalo7X1uiTpNMnncPh8LQ9eiA1Pw5tIdWnAGrUfzs3a7V7PyG47pr4nlPbKK1vQrEqR8HykOvr08193v3789NP7v//4cPfbn75B4LL5tj24M6YxEtW6X1TmuMQ27xE1r6ONLtkhUU2tqmkaR7fsSjBZioc7FlZD6LNGhbF4jY16g+sNLjwpqciKsYR3v3+4++UjyHZClIOK4rsyiestjQL/spAx34x1fCqKaS6kGQnKQTR9UfKk2VhkbM1f1f1bv31Z39ecZ5wpPzLb9/A5PeQ032v5n4H85xB1CJ1XqWoy5XwyqGJeLAa1WigOxWL/eM7TABpTR9cLNG72U7mdXj49bGk3fFZye6bUOnZa69lFrL7Wrnefb78R0IIrLr7qzLsbKN54nnjYpLh+nbUPoybQz2zLmbpECPlM8Zw56yXaAsxBE6s5rUVSEafOS6hp2c6e+Xqmu3GdgfnSoReNOpn+U5+dKXUz/PtRC7X+QaRXR9daS21/mVIPJuAxQ6CDs2YrTXULD+2q8/oM9HkiGOD8/wru6npZJhlebvCOowv+SEvTP38Q7wtUfO/hP1T+N30inS2zsV/mzvWC/2yJ5x6maWPA3tgBdVosCJrmfehxGioXMQnfLA6Y5Gv4/Qy2nGUa";
	return MysteryShopWindowUI;
})(Window$2)


/**
*创建角色类
*@author weiqiang.huang
*
*/
//class modules.createRole.view.CreateRoleView extends ui.createRole.CreateRoleViewUI
var CreateRoleView=(function(_super){
	function CreateRoleView(){
		this.mSex=0;
		this.mHeroBoyShowSkeleton=null;
		this.mHeroGrilShowSkeleton=null;
		CreateRoleView.__super.call(this);
		this.init();
		this.addEvent();
		this.isOpenResize=true;
	}

	__class(CreateRoleView,'modules.createRole.view.CreateRoleView',_super);
	var __proto=CreateRoleView.prototype;
	__proto.init=function(){
		this.mHeroBoyShowSkeleton=new HeroShowSkeleton(RoleModelType.ManModel);
		this.mHeroBoyShowSkeleton.visible=false;
		this.mHeroBoyShowSkeleton.x=615;
		this.mHeroBoyShowSkeleton.y=770;
		this.addChild(this.mHeroBoyShowSkeleton);
		this.mHeroGrilShowSkeleton=new HeroShowSkeleton(RoleModelType.WamanModel);
		this.mHeroGrilShowSkeleton.visible=true;
		this.mHeroGrilShowSkeleton.x=615;
		this.mHeroGrilShowSkeleton.y=770;
		this.addChild(this.mHeroGrilShowSkeleton);
		this.txt_name.text=PlayerInfo.instance.qqNickName;
	}

	__proto.addEvent=function(){
		this.btn_enter.clickHandler=Handler.create(this,this.onEnterGame,null,false);
		this.btn_boy.clickHandler=Handler.create(this,this.onSelectBoy,null,false);
		this.btn_girl.clickHandler=Handler.create(this,this.onSelectGril,null,false);
		this.txt_name.on("enter",this,this.onEnterGame);
	}

	__proto.removeEvent=function(){
		this.txt_name.off("enter",this,this.onEnterGame);
	}

	__proto.onSelectBoy=function(){
		this.btn_boy.skin="createRole/ui_nan2.png";
		this.btn_girl.skin="createRole/ui_nv2No.png";
		this.mHeroBoyShowSkeleton.visible=true;
		this.mHeroGrilShowSkeleton.visible=false;
		this.mSex=1;
	}

	__proto.onSelectGril=function(){
		this.btn_boy.skin="createRole/ui_nan2No.png";
		this.btn_girl.skin="createRole/ui_nv2.png";
		this.mHeroBoyShowSkeleton.visible=false;
		this.mHeroGrilShowSkeleton.visible=true;
		this.mSex=0;
	}

	__proto.onEnterGame=function(){
		var msg=StringTool.trim(this.txt_name.text);
		if(msg==""){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9001204"));
			return;
		}
		PlayerInfo.instance.nickName=this.txt_name.text;
		PlayerInfo.instance.sex=this.mSex;
		LoginControl.instance.login(this.txt_name.text);
		UIMgr.ins.closeView("CreateRoleView");
		EventMgr.ins.event("createRole");
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.y=_bestFitHeight-this.height;
		if(this.bottomCenterBox)this.bottomCenterBox.x=(_bestFitWidth-this.bottomCenterBox.width)>> 1;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		this.removeSelf();
		laya.ui.BaseView.prototype.destroy.call(this,destroyChild);
	}

	return CreateRoleView;
})(CreateRoleViewUI)


/**
*主城场景
*@author weiqiang.huang
*
*/
//class modules.hall.scene.HallMainScene extends modules.scene.BaseScene
var HallMainScene=(function(_super){
	function HallMainScene(sceneType,sceneData,needLoading){
		this.hallView=null;
		this.battleType=0;
		(needLoading===void 0)&& (needLoading=true);
		HallMainScene.__super.call(this,SceneType.HALL_MAIN_SCENE,sceneData,true);
		this.battleType=sceneData[0];
		this.isOpenResize=true;
	}

	__class(HallMainScene,'modules.hall.scene.HallMainScene',_super);
	var __proto=HallMainScene.prototype;
	__proto._checkGuide=function(){
		NewGuideMgr.ins.checkGuide();
	}

	__proto.init=function(){
		SocketManager.Instance.record.guideClickLoaderRecords(3);
		FriendsMgr.ins.sendGetFriendsList();
		SoundMgr.instance.playSound(4002005);
		_super.prototype.init.call(this);
		this.hallView=new HallMainView(this);
		this.addChild(this.hallView);
		Laya.timer.frameOnce(1,this,this._checkGuide);
		this.showScene();
		if(this.battleType==3){
			var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
			msg.opType=2;
			SocketManager.Instance.sendSocketData(0x2745,msg);
		}
		else if (this.battleType==9){
			UIMgr.ins.openView("PveRoomView");
		}
		else if (this.battleType==10){
			UIMgr.ins.openView("PVPRoomView");
		}
		else if(this.battleType==1){
			RoomMgr.ins.createPVPRoom();
		}
		else if (NewGuideMgr.ins.isNewGuide || LevelGuideMgr.ins.isLevelGuide){
		}
		else if (RoomMgr.ins.checkReturnRoom()){
			return;
		}
		if (RoomMgr.ins.isWaitOpenRoomType !=-1){
			switch (RoomMgr.ins.isWaitOpenRoomType){
				case 11:{
						RoomMgr.ins.openMulitPVERoom();
						break ;
					}
				default :{
						RoomMgr.ins.openPVPRoom();
						break ;
					}
				}
			RoomMgr.ins.isWaitOpenRoomType=-1;
		}
		else{
		}
	}

	// })
	__proto.hideScene=function(){
		_super.prototype.hideScene.call(this);
	}

	__proto.showScene=function(){
		_super.prototype.showScene.call(this);
		if(this.hallView)this.hallView.showView();
	}

	__proto.enter=function(){
		_super.prototype.enter.call(this);
		this.isOpenResize=false;
		this.y=0;
	}

	__proto.exit=function(){
		this.hallView && this.hallView.destroy();
		this.hallView=null;
		_super.prototype.exit.call(this);
	}

	__getset(0,__proto,'mainView',function(){
		return this.hallView;
	});

	// }
	__getset(0,__proto,'preloadRes',function(){
		SocketManager.Instance.record.guideClickLoaderRecords(2);
		var res=[
		{url:"assets/atlas/hall.atlas",type:"atlas"},
		{url:"assets/atlas/hallbg.atlas",type:"atlas"},
		{url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/hall.atlas",type:"atlas"},];
		return res;
	});

	return HallMainScene;
})(BaseScene)


//class ui.player.ChangeCardViewUI extends laya.ui.Window
var ChangeCardViewUI=(function(_super){
	function ChangeCardViewUI(){
		this.btnClose=null;
		this.btnRename=null;
		this.labTitle=null;
		this.labCardName=null;
		this.labCount=null;
		this.boxRename=null;
		this.labCurName=null;
		this.labOldName=null;
		this.labTips=null;
		this.txtInput=null;
		this.labSex=null;
		this.btnSex=null;
		ChangeCardViewUI.__super.call(this);
		var temp=ChangeCardViewUI.uiView;
		ChangeCardViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(ChangeCardViewUI.uiView);
	}

	__class(ChangeCardViewUI,'ui.player.ChangeCardViewUI',_super);
	var __proto=ChangeCardViewUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	ChangeCardViewUI.uiView="eJy9VV1P01AY/i/H24b19GPddie7MCSKiZCgMYScbmfrcV27tB0MyRJiYgDJHAmKhHijUUlEBWIioKJ/ho7d+Rd8+7Gt+2CDEN1Fs3P69n2f533ejyXkLJYoSqEZZmTNBcShkmWWbJRaQgss62goFedFDmmU5TUHpUQ5UeVQRmN6FqUeLrU+niiSPI1+u4hSPIcq/tMuMANsMmaxGCuzOYfZGiuUiZEfKxl5VK1yQ90kAz8igAgByQLuc2pQlqGG7xDescf0lsUAIcIJTpA4QeCwgjossMRHw06Olx3HNHoCexG9wAqH5okFZqpjpHXT9gD2RFf97+fyQEplIQidqFQHGzQ6kpBUglA8jsS6Rw1SHBAsb9GQ6SAlJgflUEj6/pVk25kO6S+DYSytMYPaNFbSySK17lDb9m4hjP6oUGzlM0N0+gC0HEuEh/vhgRgZzbT8V3Lr5L+Tq9XZEcIqkg9KSvQxrDBi9NXGbT+f3S6kgJeQ7BSHiOVWDkGBaeboXlyHVkB2dPb7S+PFibtRcz+/ipSDBGnPmYYzBXXjqRCcwP6mxYgXM2PqpufxBskpWObhRjW9tDtWmQ5LApx0lvepUcOh1khCgpeN7koAFmliZSeDWgiJhCxqb1IoCl0YAj2RkWXhktDxSJxiC2c8itMsQ+w2SD6GveJxLLNA0y0YwJDH2fY9uLgsgbiay/GJLgJRmONmpQck5oO2inc62KyEXTWodQYRxTioMImP8ixb3XK4p5vuWg0UOd89ODv+/ufnTrcswn+ShQ/BChGwd/We2mmXf48ySaKIUvJCZYZwyPm/C5UZhDQpdXUp3Hfw1febvzbdp+8bh2sAtLl+2Nhaabw8gP9u/dn5pw9u/YhrvF523+0oZ8cfA6vG6haW4AR/weLSTaFKitjTz1Hk04BowiiVnd7VEPcTLSudsSO3x47T+SZ04xPry3c8IfGYdOc7MghNwxuFGs0yPHCtiTIniPAMoBVLTrpPjuAerpr7R+dPTtyVH0Fig0IFgyKppDVi2d5GjIxD5crC94252RH6YyUeGd2mlZ2xSKlV/q09z8N4n2c2U2GGp3JEt2mkaKZoJTIPv602l6E8tt3TtzAV3Y3n53vrbu2rNyfr243lXXd1Lzrw4/+iPUcN/Kss/4Dd9Te/GIwERbnS5lcr19z8s9W/w0dxXQ==";
	return ChangeCardViewUI;
})(Window$2)


//class ui.hall.PlayerMessageViewUI extends laya.ui.Window
var PlayerMessageViewUI=(function(_super){
	function PlayerMessageViewUI(){
		this._title=null;
		this.pro_exp=null;
		this.btn_vipIcon=null;
		this.vipIcon=null;
		this.lab_name=null;
		this.lab_level=null;
		this.lab_progressNum=null;
		this.lab_uid=null;
		this.btn_close=null;
		this._basicDataView=null;
		this._tab=null;
		this._moreDataView=null;
		this.boxGuild=null;
		this.lab_league=null;
		this.btn_guild=null;
		this.btnRename=null;
		this.imgSex=null;
		this.btnSex=null;
		this.imgCurrSex=null;
		this.addFriendBtn=null;
		this.addFriendText=null;
		PlayerMessageViewUI.__super.call(this);
		var temp=PlayerMessageViewUI.uiView;
		PlayerMessageViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(PlayerMessageViewUI.uiView);
	}

	__class(PlayerMessageViewUI,'ui.hall.PlayerMessageViewUI',_super);
	var __proto=PlayerMessageViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.playerMsg.BasicDataView",BasicDataView);
		View.regComponent("modules.playerMsg.MoreDataView",MoreDataView);
		ClassUtils.createByJson(uiData,this,this);
	}

	PlayerMessageViewUI.uiView="eJytV1tu4zYU3Uqh/qqxSIp6+K/JYIIAncGgM9POoBgYlETLTGTJ0MNxEngD7Ue30J8uo8vJPnop6kHJsp0UDZA4lHnvuc9zr56M8mHDjbnxq0ij7N4wjU2ebQpj/mTci6hcGXNkYc80VlzEq9KYO8Tam0a4EklkzH97aqVv1izmuvADCILYzpjbZq8JWaZR3IkUJMJsvc7SWSUWQbxAF5s0BvFCPPLrXIBqg2KTElP9RYZmgIX3e/MksFXjUjqFJVhWikjUeFOOvJ9SSJRG5ILKLcvh2qIUZSKvNQgJS+MKBGdXK5Hygs82CXvg+TteFPIpIMc85+mjSMCAxlmWhqss/wr2XtD29KU+7fffzrjokNoiTLrg2sid8PcW4Ap+GF0PmTY2fccknhZbSui52FKbqqx6HTJx7A75wG2QjXM4Xl4fGoGoiXwTgRGuZgRxztpguSofFj0OXOR3Ksmasg+tMZDDkUqq3HL8NsPw7YLvNoY8JxVIo/NOHgBOR9BWEXSOK4x4Gt92ZaopfH9ZlWWWjlViFRDP6cvBah0JynSxFZubsBZLWMATeKoF3H5xR6s2sCZAegBN66CKf6qBp+3GBHc6sawspRRsXaRsLa0o+Q50GowFQRhGEefLZRxraBhiuszS8iNUV38CiR9zwSRsmCWZ1Pm9H9rEWsKTIJMOl3nFT7UinBIR103F05Lng2xM+kSRoh/NpYFHCd/WQsolLEu4zLM7ftVa6AU2R7Ij1HPoCM1PPPATa44tl0s/ko692mBV+sjpqwcRpJvc1vf7at3nAlnWDH6NA/tdj2JyxH45E3r729NUnpb1z+vdcZU32NfmDlCd5k0F5NN58fnmzdyHOkSY2NRBWKspICbdVue4rcxxESXjmjpu91RvARfXZWMdZwUYIPfVBClMjizfV/pO0FajD79KIfHdF2qEayFLOPTRD+is9oYTaU8u1J4aaI8rcThIXNf0qWkj09PzR110njqJ6lbk6XQZJjA0jQF6vTzUChYw6NOgtaLj07MeNnOT+D0vTDvIH1ewI9xudH6jztmp6JMmhH3hU2IdOJFyARU5MYw9E2gTGAXpw9j2PR33khUifMNK9ovg9+PGa8da12yLYHQ9r9JSrKWidRZVCYeBqSqoiC+GqnXQTyw4qEU1rC1tH6svHUQTZFXa9XQVrSffRYBnvstyXv/Xft+Qq9ccP7AoEiA9N5z2xtshEdTPav4r6hHj2wEiZvcZUndpR+3nwDeJfSSeyGoDCsywFYUIYOGcL1lS8M7r9VD8VHwHSIOcZrsxsqu4iLj9ekm7rAbZ7rqSy0JfJa6ljVA02mUndotJ3lY5xainbewP5yaLK/4/8vN/m/mTve1eNFOn773+XUEyStxErClQVhS8LGZyBoEts4BFij8F7FALq30b2ohtVn5t1denL+1pYo9zR+8Nx3ZFr0murxn4M28WrWPMDi9O6a0og9fSnueN9mqxjj/y3QmkdHs4kKZdQc0bpuP2ZYo0pxROR6Ho1WtuZ/FVlednrGYpasw+nwOMad9gCgQ45m0ueBpdlukJGHifWz0chGeqn7DsWIkhsZroyB1jBPdJrkHdNvT8+1/Pf//z/Ocf+mqNXrqyTa/W41b6tv8Xgrwkww==";
	return PlayerMessageViewUI;
})(Window$2)


/**
*授权场景
*@author baohua.chen
*
*/
//class modules.loading.authorization.AuthorizationScene extends modules.scene.BaseScene
var AuthorizationScene=(function(_super){
	function AuthorizationScene(sceneType,sceneData,needLoading){
		this._bgView=null;
		this.loginBtn=null;
		(needLoading===void 0)&& (needLoading=true);
		AuthorizationScene.__super.call(this,SceneType.AUTHORIZATION_SCENE,sceneData,true);
	}

	__class(AuthorizationScene,'modules.loading.authorization.AuthorizationScene',_super);
	var __proto=AuthorizationScene.prototype;
	//初始化场景
	__proto.init=function(){
		_super.prototype.init.call(this);
		this._bgView=new AuthorizationViewUI;
		this.addChild(this._bgView);
		var scaleValue=ResizeMgr.scaleValue/Browser.window.systemPiwelRotio;
		this.loginBtn=wx.createUserInfoButton({
			type:'image',
			image:'res/ui_button.png',
			style:{
				left:416*scaleValue,
				top:430*scaleValue,
				width:314*scaleValue,
				height:81*scaleValue
		}});
		this.loginBtn.onTap(this.onClickHandlerWx);
		this.loginBtn.show();
	}

	__proto.onClickHandlerWx=function(res){
		res=res.userInfo;
		PlayerInfo.instance.avatar=res.avatarUrl;
		PlayerInfo.instance.qqNickName=res.nickName.length > 14 ? res.nickName.substring(0,14)+".." :res.nickName;
		PlayerInfo.instance.sex=res.gender==2?0:1;
		LoginControl.instance.checkAccount();
	}

	//进入场景
	__proto.enter=function(){
		_super.prototype.enter.call(this);
		SoundMgr.instance.playSound(4002004);
	}

	//场景卸载
	__proto.exit=function(){
		if(this._bgView){
			this._bgView.destroy();
			this._bgView=null;
		}
		if(this.loginBtn){
			this.loginBtn.offTap(this.onClickHandlerWx);
			this.loginBtn.hide();
			if(this.loginBtn.destory !=null)this.loginBtn.destory();
			this.loginBtn=null;
		}
		_super.prototype.exit.call(this);
	}

	__getset(0,__proto,'preloadRes',function(){
		var res=[
		{url:"assets/atlas/authorization.atlas",type:"atlas"}];
		return res;
	});

	return AuthorizationScene;
})(BaseScene)


//class ui.playerMsgShare.PlayerMsgShareViewUI extends laya.ui.Window
var PlayerMsgShareViewUI=(function(_super){
	function PlayerMsgShareViewUI(){
		this.imgIcon=null;
		this.boxDown=null;
		this.btn_shareSpace=null;
		this.btn_back=null;
		this.btn_sharefacebook=null;
		this.btn_shareFriend=null;
		this.imgTwo=null;
		this.labName=null;
		PlayerMsgShareViewUI.__super.call(this);
		var temp=PlayerMsgShareViewUI.uiView;
		PlayerMsgShareViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(PlayerMsgShareViewUI.uiView);
	}

	__class(PlayerMsgShareViewUI,'ui.playerMsgShare.PlayerMsgShareViewUI',_super);
	var __proto=PlayerMsgShareViewUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	PlayerMsgShareViewUI.uiView="eJzFlN1umzAYhu/FO0UJPwECZ2v3o0pdTlppnaYpMsSAF2MjYxpYlUuYtLNdxS6r9zHbAeKsSEunSkNRhA3f6/d97I8HILoKgRh8xHTDdsACFWdVDeIHsMMbUYDY8QLbAgXCeSFAHLr23gJpgckGxJ8fhuqrEubILO5ALKta/X8iVG8xlQUFJCTJ50k+q2guC+sUEvRJvj5bWqBkTY1uC86aXNZlkNSon3xLYULQZpwcbEW2vd9bo53VlB/P1YaW0sQ95PItXOZXKaNgNEUgzRtZOL8sMEU1mlcEdoh/QHWtZhu8vmY5e+I46Ad3emD6uGDtHyaCxQGLuwxGMGEQDZYS1r5hO2VpBB5O8V5dNEJo6ycJvZmv1b3IVXe9vms7o76g67qAHN1UMFWACEwQkQ+MFYPpFSeReno5x7afwTBrt1/XSSN6jpCmBeMapD+MNEl/v/9i7ul05LCPHAVGYifyzMQJTLfHXU5ZWSofOUeIDpuJv6H3HMvEwPWtRWh5jhW4ai18z4Q050ZKXo/uhsUGYH50NjA36s0+h1fRtS/D6tAAQegZoJ4ejUyejISxCWIJaVBgTyBzLfXzLdczkTmLIzFP7cgIzD8fWPAPwPoAWVt0LwNu6CuJ7i999Y5jRDf/q7GK7uzGMlNPgl8cHDi+0Va++e283TEjnHxmfvmudfxTSScaNBeG5jIcNCWyFSyVEYFaKQkef3x//PVTnTXB2RZdMsLUe69sfY3zEtfRh+qwjFFxI4/nIYUayarXHEPlKB1UMn0pUATn+pgjKhAHis5v5c84RQ==";
	return PlayerMsgShareViewUI;
})(Window$2)


//class modules.loading.view.LoginScene extends modules.scene.BaseScene
var LoginScene=(function(_super){
	function LoginScene(sceneType,sceneData,needLoading){
		this.loginView=null;
		this.$userName=null;
		(needLoading===void 0)&& (needLoading=true);
		LoginScene.__super.call(this,SceneType.LOGIN_SCENE,sceneData,false);
		this.$userName=sceneData[0];
	}

	__class(LoginScene,'modules.loading.view.LoginScene',_super);
	var __proto=LoginScene.prototype;
	//初始化场景
	__proto.init=function(){
		_super.prototype.init.call(this);
		this.loginView=new LoginView();
		this.loginView.show(this.$userName);
		this.addChild(this.loginView);
		this.isOpenResize=true;
	}

	//进入场景
	__proto.enter=function(){
		_super.prototype.enter.call(this);
		SoundMgr.instance.playSound(4002004);
	}

	//场景卸载
	__proto.exit=function(){
		_super.prototype.exit.call(this);
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		if(this.loginView){
			this.y=_bestFitHeight-this.loginView.height;
			this.loginView.logo.y=-(_bestFitHeight-640)+269;
			Align.singleViewAlign(this.loginView.box,false,"center","none");
		}
	}

	__getset(0,__proto,'preloadRes',function(){
		var res=[
		{url:"assets/atlas/language/Chinese/login.atlas",type:"atlas"},];
		return res;
	});

	return LoginScene;
})(BaseScene)


//class ui.pvp.ArenaChangePageUI extends laya.ui.Window
var ArenaChangePageUI=(function(_super){
	function ArenaChangePageUI(){
		this.bg1=null;
		this.bg=null;
		this.icon=null;
		this.upbox=null;
		this.txtArena=null;
		this.btnShare=null;
		this.downbox=null;
		this.txtDown=null;
		ArenaChangePageUI.__super.call(this);
		var temp=ArenaChangePageUI.uiView;
		ArenaChangePageUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(ArenaChangePageUI.uiView);
	}

	__class(ArenaChangePageUI,'ui.pvp.ArenaChangePageUI',_super);
	var __proto=ArenaChangePageUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	ArenaChangePageUI.uiView="eJzFU8tuozAU/ZfbLQoQHknY9bGpVHXTRVNVVWTAsW9LbQSmgUb5hPmV2XXZv6n6HWMcSJoyM9VIlQYkpGt8zz0Pew2qySlEcI0ilSuwIC9kXkK0hhWmikPkul5oAafIuIIo9J2NBQnHLIXodt13nz8SRj82NxA5FtTmewD0RAq9P2au3l0+oNBF/pTbFS5iNrrPGWw21l9h/TAwwF7oDRAo3iMRCokc5eIQ6kTWn4A8Z8swmPh7WgNWJceYYIdsUC0gIuGyuNHiRkFfzU31FfnxdNLNdPqZmEixn0rKkqrSVrRWRUXtR5qSzE4rIlYUF47r/hODoWZ/Mjbz/fG0n1/lsd72u1AvBwo6khkRrNK/7FOOgpbU7rxiUrAaB9ZfkJhmn40wNNyZvzses6BnpGp1XFBBdEvrg16Zz99/vry9/mh9UoV8oKcyk+3WozgJHMfZrWtl+7M6nlmwlEJd4TNt495Wuuu4QNISSnqUpXlaXzNkRiFdqgMNlyeVUiaojyqm4VaGN9udICWuOCnoPtE/mVU3Tb2IK9UlmhmTItBT776I0N9G6O5uk7644ttCbJDrP98R4pmm9f8zvNPvL5x1j70=";
	return ArenaChangePageUI;
})(Window$2)


//class ui.pvp.PVPArenaPageUI extends laya.ui.Window
var PVPArenaPageUI=(function(_super){
	function PVPArenaPageUI(){
		this.btnClose=null;
		this.skillList=null;
		this.btnLeft=null;
		this.btnRight=null;
		this.icon=null;
		this.txtArena=null;
		this.txtOpen=null;
		this.txtTime=null;
		this.txtUnopen=null;
		this.starBox=null;
		this.star3=null;
		this.star1=null;
		this.star0=null;
		this.star2=null;
		this.star4=null;
		this.box1=null;
		this.yuan1=null;
		this.img2=null;
		this.txtDmd=null;
		this.box0=null;
		this.btnChest=null;
		this.txt0=null;
		this.tab=null;
		this.chestBox=null;
		this.btnHelp=null;
		PVPArenaPageUI.__super.call(this);
		var temp=PVPArenaPageUI.uiView;
		PVPArenaPageUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(PVPArenaPageUI.uiView);
	}

	__class(PVPArenaPageUI,'ui.pvp.PVPArenaPageUI',_super);
	var __proto=PVPArenaPageUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.skill.item.SkillCard",SkillCard);
		View.regComponent("modules.pvp.view.ArenaInfoPage",ArenaInfoPage);
		ClassUtils.createByJson(uiData,this,this);
	}

	PVPArenaPageUI.uiView="eJzFV9tuG0UYfhU0ud3YOzN78PquCaKtVA4iQbRCVbTeHdvT7km7Y8dJZAkkbgAhuIBGUJBAFUIgUYgEXJW3wWlyxSswM7veHXvXdkoqESWOZ3fm//7D9x/mBLCjhIAueJdGfnwINJCkcZKB7slUA96QBj7ovncy37QTT5Qd4Ah0saGBCehatgYOqc+GoOs4/HsYjzKyP0zj0YA/YumIaGBI6GDIQNe0HC7a9YbkBpcCepSFbgKa4G6H7oAsAcKOBNRLPKjrlgayhzTiJ7w4DOOoPaIHvcEBbCXRACjAJj+b0WNyM6UcB5hIM7EmPg0NgulUWwuMbQkMncpSW28APh5SVAArWKijzX9VjZC+CVaXqBijJhupGzPqUwmnCnqj0QAoRZkQlqICNxqM+M727pBGJCPtZJwIwf7hUVDY4EbeME7vcUVa5nx1V66m0/sbdIdmAWnB0mlGZ9ESARcR6pGo7jQea2RoCGnQVpxmILRg686IsThagrZMiSzAxm4qaMai3SDOhIpL6D15/oA7IurRQonA7ZGA71nw6h2asWULrZwVpoMrC5E1B+VIQVAcG+95aRwEO266txDHcSafz61PXI9wb2+berHgzt7GfJGShLiMv8Lz7/yNUbkFd1BTDu0JFXbd1Fc1zzw3IDKmXH25uFss0lHEaCgOhrE/CkjWkja0KCNhS5UVuXJXSiKfpGCRC/UyAfW8TnTMRSKUMbUbla+RiotAFX8EW3duth4kS+xvZATCOSVExSopcYf0GViQxwnxgMWjdTxYL98wbAXgbWnfGoS597d5iiR0HIsICwLJ7/w5Mldo0ZxweXVERpVwSDAp14d6UutCFzfLCMvajExEfW6HxHeDts+z4JDQA113lqqnlLOuGiiJIvVdco+ZuwfaVaZAXGYKm7AbnEsuPyUU4k/OT797/uVnF5+cXT7+UCjN0vgh2Y2DWGzf0r2O3vPK5wuZgHiJ7scR2+OVRPgiX/FTr1OealncZ6/cc28Ryk97c3l9+SPqXUAHMjtJxCSx15tl6Cg3CysdyUaKWW8mJKqsuvjj8eyXJ7OPfvr7r6/OT/+8PP39n2df182DGNtm50rm6S9m3soAVqanEmej5dDKU1pfEc99UUdqllkEQ6i/oGV7NKwZRGzbVOIViEzerHNBQlR1cWiJaNGM9gJ+rO8GGVGMeCeKG+J3/s3Ps2fvzz7/FVw3LEYHu/85LPU6i5y8AECzLEIZc1Ox8Ur1tTqCa0VrQqOB+KtNG01VGmMVH15PmGWpwvTrCXMcVRi6njCIkSrN2CRtfZfEHVS0qE5JTxuW3SSewKrx8vFZjhVz+lnOVSfoYg7Ekly56CNe9ZdiJB5dYQTcMDMX0ytsVX3fqtpROFDcX4xDAxJmS53HulbjMXA+oSkqGI6S4a+GfkP99WxLN1ZUKaQmuriPbE50bPX7yGpqL5sYkWuPbMWBjsIIfTUjbPPKjJBOLTnx8lmwIL7GAzGaF7o3jyZi+BSzS7vnxhPK7ywH5kumSKGgtYok+v9LEZUk+25vSX2nuIMoHMF2mdtM7pdXCTGHN1wjucR8olWHXnE1v/jxyeUXH5w/+m326ffa7Om3z5+ezX54NPv4bL6p6HWdYvnaKiPlW+k5IXbLcYwexNqWZ9p9w5//X7ipqyGTg+HtqB+/1TTxouKKWRZimQd5KtVvM5zUrTElh61FoZvHe2gaBUkMR71U3iJBUiti4lbJaXo8bLhH3J/+Czq1gyY=";
	return PVPArenaPageUI;
})(Window$2)


//class ui.pvp.RewardLimitDlgUI extends laya.ui.Window
var RewardLimitDlgUI=(function(_super){
	function RewardLimitDlgUI(){
		this.btnYes=null;
		this.btnClose=null;
		this.lab_title=null;
		this.lab_dec=null;
		RewardLimitDlgUI.__super.call(this);
		var temp=RewardLimitDlgUI.uiView;
		RewardLimitDlgUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(RewardLimitDlgUI.uiView);
	}

	__class(RewardLimitDlgUI,'ui.pvp.RewardLimitDlgUI',_super);
	var __proto=RewardLimitDlgUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	RewardLimitDlgUI.uiView="eJyFUl1vmzAU/Svo7qEvVhc+3BBepq7SpknVHrqHLqqmyoABq46NjBnJovz3XUxJSVEaJMBXPj7nnnO9B7urOSTwKFSuOyBQG103kOxhB8mCwNZ9mcoqbda4vqZj9dtVBwJZJWQOydN+5PqxYSU/R9W8CIWYTG82n1vxbEVTiZeWqfK6ViUcDuRDmuXAE8Uzoq1gakbx82trrVbvSILVwBKsVgT+MoPA1Ko1b2DGWhrOB1oCkqVc/hL/kDhcvJbftLIIvzWCyRFyp6U2qAWfCveQM/8Rj8he+3LfYejaDuNJ13dSN3zed+rOP5cYbCqm/SPmYshxPOgsCXQitxUkNPBnEoqL7JhNg7F8NwKvAfgxCSISBMRf4kbFRVlhRD69mcreu15OZaOb16n4R93Qp6NX7B4vi5V9s5Zv+9QfeMdM7t2LjbDeA2dZxfOJZIQ8Bc7nbWTF6bSyflD9nFix9OkCPrrnWElROv9cWW7gkhs/DJwdikc7bfJHw2pIrGn50V0Un7jLefbmba1br9Pqynolx1fL3DODXVagvGcr7qUM4yCdkNLbIbyx/aqxzFi3XfQxfJkEsqLTQHBIZwOJM0oDF8h7038O/wGiT1F8";
	return RewardLimitDlgUI;
})(Window$2)


//class ui.quest.QuestMainViewUI extends laya.ui.Window
var QuestMainViewUI=(function(_super){
	function QuestMainViewUI(){
		this.topBar=null;
		this.tab_rw=null;
		this.tab_cj=null;
		this.view_rw=null;
		this.view_cj=null;
		QuestMainViewUI.__super.call(this);
		var temp=QuestMainViewUI.uiView;
		QuestMainViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(QuestMainViewUI.uiView);
	}

	__class(QuestMainViewUI,'ui.quest.QuestMainViewUI',_super);
	var __proto=QuestMainViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.common.TopBar",TopBar);
		View.regComponent("ui.quest.Item.TaskTabUI",TaskTabUI);
		View.regComponent("ui.quest.Item.AchievementTabUI",AchievementTabUI);
		View.regComponent("modules.quest.view.TaskView",TaskView);
		View.regComponent("modules.quest.view.AchievementView",AchievementView);
		ClassUtils.createByJson(uiData,this,this);
	}

	QuestMainViewUI.uiView="eJx90lFPgzAQB/Dvcs9NFRg4+qYvZu9TH4xZYHRwGwWkBZwL390iq1lxLCEkkLv/j+txAnWsODB4wyIpOyBQ1WUlgZ2gw0RlwBzHCwhkHNNMAQsW9z2BbYZ5Auz9ZLpXIkr5bLM8YKGLtqUQZXHX4CaJU7qvUrBydR1+8+cadTJ4C2Iu6HsyDx2BPXgEvrRFjOouwytonG4cWhWXqh+4luq7xPfIcF8Qx3LXZfUU1Zdwqx8ZKPO+bgqFYigVZdLkXNJRpudOKyySh3UUT8YIw98xXJ+Y7Cje1J2V3SD9bLhUdKW4oOecl5WV/qi3w1sueKH+I04YjIp3qWz3NxQ7b4INn/CKvJuuZDkqS72UFiXGuS7eRbnkhm1103Q6c3IjPlTQv/yZCa/Z53McfoIb9mTmK/aU6fuP/genMggd";
	return QuestMainViewUI;
})(Window$2)


//class ui.quest.view.QuestExtraRewardViewUI extends laya.ui.Window
var QuestExtraRewardViewUI=(function(_super){
	function QuestExtraRewardViewUI(){
		this.icon=null;
		this.num=null;
		this.btn=null;
		QuestExtraRewardViewUI.__super.call(this);
		var temp=QuestExtraRewardViewUI.uiView;
		QuestExtraRewardViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(QuestExtraRewardViewUI.uiView);
	}

	__class(QuestExtraRewardViewUI,'ui.quest.view.QuestExtraRewardViewUI',_super);
	var __proto=QuestExtraRewardViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("Text",Text);
		ClassUtils.createByJson(uiData,this,this);
	}

	QuestExtraRewardViewUI.uiView="eJyNUstuwjAQ/Jft1ZA3Ib61SJV6QZVaqa2qqjKJk1gkNsROCUX8e+1AykMgEh+iXa9nZ3Z2A2q9oIDhjfFErADBohILCXgDK5aoHLDjeCMEOWVZrgCPfHuLIM5ZkQD+3HSvn0qS0ePHa8DeGEED2HURyDnjumpZU6ks2qiKWDX7nmXDBc9gu0V9cBzbH91A0tcxKeg74IFzC9UZhy2sH9jXUec7gj0F+/4OMULwQypdxGLB4R+dSEmVtJTBr6nFFC1NgZXRUh7T/wBsD6ODFh1cYvCqcc4IjM4J8LrUJaajEawhVSXmdCIKYW7vnDAM7BC6vPYKQSq4emG/OjC2x12p56SpG2qvvvQ5THb6UCvVijwZhBO0RALf7pjM1NEkYlGWZsBZRSnfSy/IjBb7xvY+fCZJwvQthoGLbHO6wkfNUqfvK0aKLtfKkoZs2n7oyv+in9NLhrpRKyM87F1BeFbrQmuSM04ltc5WJm2K5V4Q4XEuqtbMoItaN4Pt6QgvbmewW/rAi3r3zpqyyte9uv8BUEVAGg==";
	return QuestExtraRewardViewUI;
})(Window$2)


//class ui.ranking.view.RankingViewUI extends laya.ui.Window
var RankingViewUI=(function(_super){
	function RankingViewUI(){
		this.infoView=null;
		this.tipView=null;
		this.mTab=null;
		this.list=null;
		this.bottomItem=null;
		this.bottomRocket=null;
		this.playerWidget=null;
		this.topbar=null;
		this.list_rocket=null;
		RankingViewUI.__super.call(this);
		var temp=RankingViewUI.uiView;
		RankingViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(RankingViewUI.uiView);
	}

	__class(RankingViewUI,'ui.ranking.view.RankingViewUI',_super);
	var __proto=RankingViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("ui.ranking.item.RankingSuperscriptUI",RankingSuperscriptUI);
		View.regComponent("modules.ranking.view.item.RankingItem",RankingItem);
		View.regComponent("ui.ranking.item.RankingRocketUI",RankingRocketUI);
		View.regComponent("modules.player.view.PlayerWidgetView",PlayerWidgetView);
		View.regComponent("modules.common.TopBar",TopBar);
		ClassUtils.createByJson(uiData,this,this);
	}

	RankingViewUI.uiView="eJy1VEGPk0AU/i/jlWWhUEq5uSaaJh42W3VjzGYzwJSOOzBkZuhubfZg4lUPe9SfYPTmyfhv1PoznGGAAkU3bmIgHUree9/3vu89NkCscwQCcIqzmF4CA+SM5hwEG3CJY7EEgW07ngGWCCdLAQLPta4NEC0xiUHwYlNnz1KYoHbyGgSWAa7K304hfoEzmQA5R4IfCnQlWIEOI5qmNDss8HmIkxibL/MEdEGvjb+C2Y5TwrktuNEOjsFMPiQlQGLmmarO8Sv0iGHZBxhZRn23YMfW7bCuV8KO7B2uNZU9ryCTKThb0GcYKVkrIqpRxSJDOELZAJOxMfINWW7ktpi4k1GbyYnuZl7kiPGI4Vz0aE21GGN1aiYC5xURVmQCp6pMgc1KFxMLlJr7ZZ/OQBv3CQx7QH4F5NY4qY7hOYyQ0qLTuHZYRhwVQtCme0RQJFA8y2KkB4bAEBEJAX6+u/n+7e2vLx+MHzdf5b19/2b7+uP28ydQBc2lclJ9v/p7DONYdiAzPcNSVx33kGZSRnCfYUjqdw8ooUyh3JtO3dB2jOaMxpOFG9dnR4LHmPfFtl1bz4DXmgG/mQGiM1bziFFCjiCbdwRZ8fJ9rYXS7bkUdOe9M/GGNq4yayaNa/PZuZvSuCCINxavpP0dn6vUDJbhDEn5mez1bH/Q+iBrtRt+0/QKcxwSGa9WuW47pNLitMq8M6tWlYEFOKHRBerbMchsAQnvUWuSb10IHdnbhWMC14id4jhBotqsNosDx9bfvwPb92vgvJUzqIoO0KLsAXQ2keZykv70wa1WnuZhGbOPo2fPrKrceb4H1VXzfs5qcf/T2O873x3jf3P1TF6/AX09UNc=";
	return RankingViewUI;
})(Window$2)


//class ui.room.CommonHelpViewUI extends laya.ui.Window
var CommonHelpViewUI=(function(_super){
	function CommonHelpViewUI(){
		this.mpBoxAll=null;
		this.mpImgBg=null;
		this.mpBgTitle=null;
		this.mpTextTitle=null;
		this.mpListPannel=null;
		this.mpTextDesc=null;
		CommonHelpViewUI.__super.call(this);
		var temp=CommonHelpViewUI.uiView;
		CommonHelpViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(CommonHelpViewUI.uiView);
	}

	__class(CommonHelpViewUI,'ui.room.CommonHelpViewUI',_super);
	var __proto=CommonHelpViewUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	CommonHelpViewUI.uiView="eJylk91u0zAUx9/lcGstzlc3ogqJCmlM2gVSJw2EJuQmXmLNiSPb/diq3nHBFdfwBFxywyuB9hicuElb1qxDICWufXI+fsf/0yXY25pDApeiytQcCNRa1QaSJcxFZgtIYkoJFFzkhYUkonRFIC2EzCB5v+yCR2rxWOSMaXQoa3R5KSU8meqsZDl/KtlZmY9ydDI3okJDqsrSm4oPllX5zRSXTARHdeU8xB0/1QJLQBSS4IS49R8wbiEJIgIL/ImRpKVy+02L+YWwkvdwidr4+0AIE5EgJlGMdlalhdLvIKFHcXd66059eOdswuVDPOrwfMy4QbrgC9tBWdyj8f7bx5+fvt5///Hry2e0XqvKjpEJ4wMspKRqIp/xNMvS5/h9oprKVk/5QcbV1YocvrwWb/f2omN6SMOeKwt80j07GoYh/Xu4N6zav7o+uF1pz4WxGLiOnI1TraQcMT3esqvKmxlnb6k3cPQwXI+6p41sDxD9uEVs5J0rnV1qVnfC9CE3OV5xk26VH5qaVS/8IBx6bjec6PXrTlE8aO0YITnLBLaR+JhRmNe2lI6prfdHb9sJ8gePT9A1k+Y/RygMT9YTfrzteDDYTBAzhlvjNc0ipNeK0v797gq+P00hzlFA/NCt0ABcrX4DG6mUow==";
	return CommonHelpViewUI;
})(Window$2)


//class ui.room.FriendSkillTipsUI extends laya.ui.Window
var FriendSkillTipsUI=(function(_super){
	function FriendSkillTipsUI(){
		this.skillTipBg=null;
		this.lineImg=null;
		this.skillName=null;
		this.skillState=null;
		this.skillType=null;
		this.skillDesc=null;
		this.nextLevel=null;
		this.nextLevelSkillDesc=null;
		FriendSkillTipsUI.__super.call(this);
		var temp=FriendSkillTipsUI.uiView;
		FriendSkillTipsUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(FriendSkillTipsUI.uiView);
	}

	__class(FriendSkillTipsUI,'ui.room.FriendSkillTipsUI',_super);
	var __proto=FriendSkillTipsUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("Text",Text);
		ClassUtils.createByJson(uiData,this,this);
	}

	FriendSkillTipsUI.uiView="eJylkV9r01AYxr/LO7wLMzk1bczlWjsH4k0LuxCR2J4mB0/+kJytq6UQcLCxqZsIKhMUYaJ4pwxW7KofZknbXe0reJKuTVq6VjEXB3Le532f3/ucJrCGg0GFdWJV7ToI4Li244HahAaoogBb8VknVWaAmsnKAhiY6AYDFYmoJUDFILQK6oPmaNCaqek4PSfdu6m5XOI9IZSWibOicx3/sfhdxTZN27q5QR4x4njSsmPFRfIUr7qEGwCSBZQTkCIgmRcszcTTk9JgLeF6IL6YJObi1TJyspsojvgosfCaORPOaDzWa/oI74oi0Y8R0gBlvMWm/FEmtpeUiUjuR+MEYJFehf6v46D7uvej03/zlt/WbIuVeBzDropN7ahvqZi9s1LIw1/6iZOGJaaxtGNn++Ldx95vv3fSmeNYFPm3yFGeuWE50o/9zv3DoN0J97729vzBs+65/2qeayGbK/K6RokevQnFNTYBsTqDIqcMKfhr1223uu5qDqjM3cDJs2fECcIC9ioJYfj+Q3j8YrDzLTz9HrRfDgMKP3fDg/3+0bZ8Y/DJv9g5uDx7ni+gSHu4y3uJd5eZNKa58pq/04IkJen2VJQWF93Dm5gmoEF7P2j7/Z9fLs+Org9RySuKghamJt1KHBfHNqYp/Wt+2f/Mb7zOw9YfyOeveQ==";
	return FriendSkillTipsUI;
})(Window$2)


//class ui.room.InviteDialogUI extends laya.ui.Window
var InviteDialogUI=(function(_super){
	function InviteDialogUI(){
		this.titleImg=null;
		this.reject=null;
		this.agree=null;
		this.nickname=null;
		this.desc=null;
		this.headImg=null;
		this.timeIcon=null;
		this.time=null;
		this.closeBtn=null;
		this.waitList=null;
		InviteDialogUI.__super.call(this);
		var temp=InviteDialogUI.uiView;
		InviteDialogUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(InviteDialogUI.uiView);
	}

	__class(InviteDialogUI,'ui.room.InviteDialogUI',_super);
	var __proto=InviteDialogUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.room.view.render.InviteDialogItem",InviteDialogItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	InviteDialogUI.uiView="eJytVUtv00AQ/ivV9tCLm/hJHKtUoqWUSqgXKhWEEHLsibPUj7BeNw1VJVQJCfEoFRd6QXApggP0BkL07ziFU/8C67Udu4lDioQj2dnd2W/mm5n9dhfRfheQgTaxbwc9JKAuCbohMnZRD9u0gwxNFQXUAex0KDIUVdwTkNXBro2Me7v55jXPdKC8t48MtmuHv8Mt7DMbEgReHfvbmEI9wg9aTq3rO2hvT7gECo/hrzhs2TJduIOMeamMuV4FKmkcVZabAto2CTOjmLqw5nGc1I1r+k7EttaXO9iHEOrcL3PYfzQW+PpSRGngj3iR9SZ3IzXYN0umJEu5SwIPwaJoEi/Td3GUU8OPYZVglnIkK4IiCXJDkJtswTc9KEO5Zgvc28w6IZcNlwM3ICwmNCuuaJp+JTdjM4MXb85+vkNFeTX58rSUhlpFy3QIwH9hlSP9K6mD4/j124mkbnGzi5SaStoPDb1gpIk5Ix9bWzwkAVHYYYDo7OBz/PVbfPgq/pI4CikJtoCHxCOSNE1rDOcZ7pBSCaod+DQjJaYjtn6NYDMJzsqx2sljsxnTxQ5vS2jTC723upHENNLfuswJJZ9eQOxNYnaRQUkEQ36qquf8bAitgttC2DX9mZD2Xbg6x+MwZm/wZ27x9/6TXyffB/uf4ucf4qfHC/XEdrFqB4vaEsW5xfjkx+DZUfqeTz/ju2bGHJ2fvhwcncSHH1NH56fvs13j2Zb1htJSK7OdEcPhTeq5PE1ZDvLOkNULdVCn1KFdqoMFPgUyVb6yQkiKWHSWOEHL2PGgO4WcFadDUgXpisBES1JKbc1wpnlvipn3QoB0NS97B0w7VbwcUdemAcpSI0VsyoVyerBmcZWoPvKYLY4pZtUplCU9k2WlDF4IQjYqVUyeXDERRio2dnIqb4ZU21R9eDNYbhDCEp3Mz2mNs8Ph6JGU0ytnXhKHmeuZmGaWIbhMwFd8s+VC3qQEumDSu0y/8v/scmMy6wVRCBsdEkROJ7flc+l2O52rvKV5zNdZogJnjYI36cImkc9TbTBcO3IhrCWUa9sYejUCvg2kVgGVrmykrtIBS8p99vsDfsm+dw==";
	return InviteDialogUI;
})(Window$2)


//class ui.pvp.season.SeasonPageUI extends laya.ui.Window
var SeasonPageUI=(function(_super){
	function SeasonPageUI(){
		this.imgS=null;
		this.numClip=null;
		this.btnClose=null;
		this.labDes=null;
		this.list=null;
		this.unopen=null;
		this.openBox=null;
		this.txtEnd=null;
		this.imgHour=null;
		this.imgDay=null;
		this.imgMin=null;
		this.count_day=null;
		this.count_hour=null;
		this.btnRank=null;
		SeasonPageUI.__super.call(this);
		var temp=SeasonPageUI.uiView;
		SeasonPageUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(SeasonPageUI.uiView);
	}

	__class(SeasonPageUI,'ui.pvp.season.SeasonPageUI',_super);
	var __proto=SeasonPageUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.season.item.SeasonListItem",SeasonListItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	SeasonPageUI.uiView="eJy9Vc9r3EYU/lfK9NjdtaTZkVY62kmbQJJDN5CEYpbxanY1a2lGlUbrtY1vOaSFlkAhBJoQSEh7aQM5hB5CyT/Tddz/om/0a7W27PWpGAyjfb++933vvWOkDmOGPPSAC18eoA6KExmnyDtGB9xXAfJME9sdFDA+DRTy7L5x0kHjgIc+8r47rrzv3Y7olDW9D5FndNAi/5/ucwFGIRXTDMy2dgIuWMq2UkZTKbYyPkpnvt+bxVN0ctKpg7bFdPKYfQIlzWkCRjyaDlGdohGxF4v1cF9LoXZCHp+L6OYRiTmoIoosKs3mNMzA04TwMR2zh8jr9ltSHXE/TwY/BYxBk5BhWhhqdAYufKQhn2qHMROKJWsl3dvOlJLiXEX9AiSBzpUcOLgqbk+JnVCmrA3yJCjLiPlcqkfIs3CPlC+oHdv6FdI9Fg5VIvfZjgyljvmlY2DfIGjtR/Cu3vxIvwYrEfSdJog72ugcBMBfEkVqELZpVCgg7g2Wgo9iC92vsw+/Lv988/njL6cvXy2f/rx8+vj03Yd//v5p+fbZ8sf3/75+fPb7E7CWc5ZMQlCphwLu+0w3rq4JmJkAw6tq9Qss7/JxIlM5UV88orcYB5dxhds3XIPYV1N0h6fqPDjHKsBhawWO1PoJC4/5EPKG4TZNhgVRYxlFQNQ8zb9XitHCAqqgXQmLGdW0kQYqTNrGbZhzrku7rVjULC/JhOKRtomkn4Us7RX66HEw7F3wS5jwWXK/iFo8AP1uU6JtU4jdQqKWSSrUmZBxTshlwx7PYxBpN50d7FP+PS/xUzEOZAKgDS3O4vUwfzVJ2JaLCxwM8gpsqypAp9d2bf1qk2ixnbqWXXOIiVMFUwt1U/gNgf718vNvH09f/NFU6tmn56cvftCQ18fJxX3LMOrv+SRVhFrumkz715HpZDIxBmzDJmmjySYFS5bT2Ja3ZJZspOmrBacyDfiFJdqexy53aCPNDXq4MctIcSq618xRzJyFSSPJXb5ZcaMJE9e9BeVgd/UyKUXh1gIbS5itkZ/jKi8DwkbLIu76VM44dC8NsiN+1WmoF/VqS5srreiVcgXll2EwcwwmJpdiCAoJVCCs/x3E7sYbSKxBuWEGNQzLtBtn8Fsq9hvZsdNIbzSOldNv2wgXJFbnIHUv9MLWAjpkIRydqgUwuN8kHIIh0+3ABcC4g53GIXLwRi3jYi5Nw90o3nQWJWq0p66xLnfh7z+zkS5F";
	return SeasonPageUI;
})(Window$2)


//class ui.pvp.season.SeasonRankPageUI extends laya.ui.Window
var SeasonRankPageUI=(function(_super){
	function SeasonRankPageUI(){
		this.imgS=null;
		this.numClip=null;
		this.btnLeft=null;
		this.btnRight=null;
		this.list=null;
		this.btnClose=null;
		SeasonRankPageUI.__super.call(this);
		var temp=SeasonRankPageUI.uiView;
		SeasonRankPageUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(SeasonRankPageUI.uiView);
	}

	__class(SeasonRankPageUI,'ui.pvp.season.SeasonRankPageUI',_super);
	var __proto=SeasonRankPageUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.season.item.SeasonRewardItem",SeasonRewardItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	SeasonRankPageUI.uiView="eJyNlNuO2jAQht/F1y7EOZHkEqRWK616sazUrqoVMombeOvYkQ/Agnj3Og6BwGZLBQI5jP9v5p8ZDkC/NwRk4AflhdgCCBopGgWyA9jSQlcgQyiIIagILSsNsjj0jhDkFWUFyH4d+ttzsRtefQdZkkCws/EInoU834OgFkaR50oKU9pnWhpyEQ9DNCb+UOOS3MijTt4bqCN7UH8otzdyUdeCTw1drcsVmjS8BAOKH9hAuiffJLUcEPkwCmD7GUIEjkf4T3AQOTCancnpLB4B7yvqn8ADlp/A/j3IKEj9e9jQUQMvHauRYqFpQR1uKPR9tIBOKvSjsxTDvDQ2crqoKCeKTJtN0wqrt1rq1Vqf6sA8r4R8sa5Pov70057u5d62vU0+sd8bLG0UrcslOOMVwUpw5Ii7D0V8FVwvGG0+EU0vA9bOaafPTX26ssHMWJW24w3OiU33SzwG7jxUldnTvmsVIbY3wEN+EEbxLEmHHbMimNHSNYJwTeS18XOjteC3KQd+NztJn+da80fyW49a8aaFOaXC8Jow++v/MPxuPtPWlzPkyWV9h6JyzJxB6BPiI1X6dsvTbpiSyzagqAezLn6zzKVgbI7l8mpyN8o97+lte17aPYZAkoZg/eLa1jvu2x0Z+W9YulKeyBbL4kGTepifNFzTuo2qRWEYUZOu8Am1gZORm5LwgsjnTrk7WANe7eue7eg0jrN44PqCCUXA1cK6UXMCK7txfE0/dvj1+BdUacG7";
	return SeasonRankPageUI;
})(Window$2)


//class ui.hall.SettingWindowUI extends laya.ui.Window
var SettingWindowUI=(function(_super){
	function SettingWindowUI(){
		this.img_title=null;
		this.btnClose=null;
		this.lanBtn=null;
		this.lanBtnText=null;
		this.lanList=null;
		this.languageText=null;
		this.musicTitleText=null;
		this.soundTitleText=null;
		this.lanText=null;
		this.musicOpenBtn=null;
		this.musicCloseBtn=null;
		this.soundCloseBtn=null;
		this.soundOpenBtn=null;
		this.txt1=null;
		this.txt2=null;
		this.recvBarrageTitleText=null;
		this.recvBarrageOpenBtn=null;
		this.recvBarrageCloseBtn=null;
		this.reqFriendOpenBtn=null;
		this.reqFriendCloseBtn=null;
		this.reqFriendTitleText=null;
		this.line=null;
		this.InfoText=null;
		this.sysChannelText=null;
		this.sysChannelOpenBtn=null;
		this.sysChannelCloseBtn=null;
		this.worldChannelText=null;
		this.worldChannelOpenBtn=null;
		this.worldChannelCloseBtn=null;
		this.roomChannelText=null;
		this.roomChannelOpenBtn=null;
		this.roomChannelCloseBtn=null;
		this.guildChannelText=null;
		this.guildChannelOpenBtn=null;
		this.guildChannelCloseBtn=null;
		SettingWindowUI.__super.call(this);
		var temp=SettingWindowUI.uiView;
		SettingWindowUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(SettingWindowUI.uiView);
	}

	__class(SettingWindowUI,'ui.hall.SettingWindowUI',_super);
	var __proto=SettingWindowUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	SettingWindowUI.uiView="eJztWVtPG0cY/S/b1y3sbbxevwWkVpFQ+xCktqoitLbH9ijrWXd3DSbIUnhAcdILqQJUopVSVY3aSoE+pCogSPNnsI2f+hc6szePzXjtErauZPNg71o7853vnO+2w5bgbdagkBM+QbhobwiiUHPsmivktoSCWajAO+RSyCOvataEpigUKsgqCrnPt6JlS3aDXbMp5JSsKDSEnCrxHr9bNctwaIHkP08+N1DRqwi5jK6JgvsAYfJ8wa5WbbxYR2v58pq8UMNlsrgCUbniCTlATbnoIfzQQcSKABQRqCL91ERZaDbFRLNyxrdLvyLDmsox/LCCQruMKV0XDSBqsphVGECaYYyz+r5shGYVnpPItD1UDAyyW33E9UAJmKaw102HPIaq5TUPeRZ9MtzcMnG5TtYuLlcQhi5cdKHnIVym5u4Fl27on4kLFdv5jGixAKK7T/27cV6BgEvNiLkEhCHWP2oOQ1SA+DqZclZUNFFRRFlnyZS0ZvM+y8FS3fNsPGw6CJ+MLkck5D28bNkuw0EEIO9vsEb4wPlIVMvMQ4s8M0g335QsB7YI2shPWZYiu4TpJQ8LHFnLNi5XyPfmpksxhJZraN32CNuyHl4TrgEhHptVyG4XI+xzo2q85FrxHxzErPmIQYzXyA7CXYUNjyzx6FdO6B4/unzz/PL0qHPwmDriOfYDuGxbNl3wXjFjmJIU/05g9BFRSko29u4RWcmdFNyRVXccZFJQhWiXkv9Hw81CZZ8niD3oCINiryDXG6ZfDegHujSC/nCRWzMLkBBLgtKBNWhSYmUeYXyZqR6NQArWyoSqOhAXobMaGAhuWK2zNLUitTN+ot26vjcWM4y8fBwWt6vugL4cX4AkhbVRj/3RJFZgv5INheyTVueHV+3dk78vDtflBVmXpQVZZbErLHZSa0ZiN0rAkAH5JW9T4j2nDjl+JPvghwrxQVf60aPGOVetu6iwSgv0oBO9F68vz56NJly7IWjH320sZl1JwOzadVzkY+7st6aFGYQ8gwxTDKjUcawMol0Jg+dGQR3jHdEh5ST0I4qMAnz8Cr+Y+YHycQ2GLSCeeKTELj3hwGVEA1dY0piJwMac4WP00EZrJGeTEiEyLoljx5hoYAQTzSw2nmBaGT82TMK/P0WkJ4A2grsJFQiaoXJ7AujZyQQolW5HgWykgMJTwC87s6aA8b9TYFZqkBG+SqVTg7iTmx68NKk68zaRpewjF+XJK1yuZFoujNTwGp5MdqjTgdIiiKK2Gfa3q52/ro5/75yedlq73b1fO62T9te7V8fHbL8DA/1OeYd+N647R74NjOqJvikT+tY7fNb9Zbuz97Z7dDAl3yQlfAvsu6bF05IDC+tLpuPQOfX6zNT55mVn78/2xVn7bP+/mJz4ea/JiXnPuDDP/vQmkMlVmHfBVLtgOAkCkOXr8MUHDoKz0wmnOY2P02DWMiGtiTzp5ELVGA3AdQ04ba29s311fNo5OW8//bH98k1790v2LEtKqblxiVPUwIlM3wmQic/H/eHi2rFwA5l4+Ey2f0inZBXmUHrcdKCoQSQbGR6Jd3HJHqTuavtp++ffej9929t+3j36vvfoybROVFQt8RRo012umBhDa+j47fV59/xFgH96E40Kkt9kYvCzUsSnMdBMLMKsVfG05hlu/ckmZfGG7VhFbh5fnh5097+adh4rRmIIsfDnmZxeJv8LGea5nF4uRx1Z1VXmfxz9owbbrnJzudN62/vuj2nnctQOQEbmzvR99PNUTr8pj1dhnsnpd+URmVyuoxFtub3z6vLicNqpHPWDEUHEwp/ncvpteQIZ5sn8Lsl8v/kP2h4sQw==";
	return SettingWindowUI;
})(Window$2)


//class ui.shareGift.ShareGiftViewUI extends laya.ui.Window
var ShareGiftViewUI=(function(_super){
	function ShareGiftViewUI(){
		this.cardList=null;
		this.btn_close=null;
		this.lab_des=null;
		this.boxTime=null;
		this.lab_time=null;
		this.labNextShare=null;
		this.btn_help=null;
		this.btn_share=null;
		ShareGiftViewUI.__super.call(this);
		var temp=ShareGiftViewUI.uiView;
		ShareGiftViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(ShareGiftViewUI.uiView);
	}

	__class(ShareGiftViewUI,'ui.shareGift.ShareGiftViewUI',_super);
	var __proto=ShareGiftViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.shareGift.view.ShareCardItem",ShareCardItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	ShareGiftViewUI.uiView="eJyllU9r2zAYxr+LdjWJ7dhO4tvaQ1cYvWSwjjGCYsuxmC0ZW06dlkIHY6x0O+0ySgfrpTA22LFlFPZlmv459StMkh3bSV1WKBgTOXpfvc/v1SPtADaNELDBS0xcugUUEMU0SoC9A7awy3xga2pPV4CP8NhnwDY7xq4CHB8HLrBf78yjN9ZDOEb16CmwVQVk8p28xYRPCiAZp3xae9XHBCWonfgwRmvYY+0UD71sNG5FZAx2d5Uy73OcsKWsHa0j83YsS5nXaOn82wTGPMKBsVtEJRF00CZXYCogRhGC7BUfVFp0lf/hD5yYBsEKjAd5lQ4NQ0rafiK/5xU1KB6I2lf5YusMhfUS45QwHIopIXXTACWtUmZrgtFWazmSQDk7RsRFMVf/pqZ/YyVljJIlBL2eJKD1+3PVI0aGTkAT0YKk0iG4jmSGISdPRvguYDhCwVJ63coJW6paEja6vflaARwNXZTwIIYyjhFc/z692du/PPhxcbY3O/9+c7R3ffJu9vHDxZ+fV4fvZ5+Pr/Y/zb6c3J6/4zF0gmIv4DvNBj52XSS0lQ3hHfUoYQO8jaoRn/k0xlBU6dCAihKeeJ5nWZB/gcTxacz7qrbM+WhzPgrwWJJAhEmylewVmi2LNnLRhtErRXeMbgmYZi9EV6tiDbNpWzTylIl13SgTa/oCTZZnLnCqqi2fR4K5X/yzu+qFRWSN/cI23On3wtWq7CFvYYAaDXLnRCj25YLpsUPJw/Zk7vluhbBv1BBucHTSV7Vdefrt4uzg8tdxvhOv/369PNq/PT98DFZhzv/bU1O7stq+qdX96aMgWrQnP2aEQfmxuO2nEoMixHDxNlgg0ryObuUnbF/XKixmr75mUjBZPhOCFFlqsWLC1a/FmDcP6LoiHlPRO2ItPKHiyNS7ov1yxLvf7ddug0YPNF4Ggm6WRz/oOsgwJFNIp5j/KAq93+t5X/4B/SA7bQ==";
	return ShareGiftViewUI;
})(Window$2)


//class ui.shareNewCard.ShareCardsViewUI extends laya.ui.Window
var ShareCardsViewUI=(function(_super){
	function ShareCardsViewUI(){
		this.imgIcon=null;
		this.boxDown=null;
		this.btn_back=null;
		this.btn_shareSpace=null;
		this.btn_shareFriend=null;
		this.btn_sharefacebook=null;
		this.boxCard=null;
		this.img_cardBG=null;
		this.img_cardIcon=null;
		this.img_weapon=null;
		this.lab_cardName=null;
		this.lab_txtQue=null;
		this.lab_que=null;
		this.lab_txtType=null;
		this.lab_type=null;
		this.lab_dec=null;
		this.boxSeason=null;
		this.icon=null;
		this.imgRank=null;
		this.maxBox=null;
		this.mpNodeStar=null;
		ShareCardsViewUI.__super.call(this);
		var temp=ShareCardsViewUI.uiView;
		ShareCardsViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(ShareCardsViewUI.uiView);
	}

	__class(ShareCardsViewUI,'ui.shareNewCard.ShareCardsViewUI',_super);
	var __proto=ShareCardsViewUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	ShareCardsViewUI.uiView="eJzNl2+L40Qcx9/L+DRuM5OZNOkzd+WOA1nQCqfIUqbJtBmbZLJJeu3esqAPRY8TfKCPBB/pE0HBZwq+Gde9l+FM/k7abE29ExaWhWnz+/P9/CbznV6D/CphYAKe8tgXG2CAJBVJBibXYMP9PAATCC3bAAHjyyAHExubNwbwAh76YPLJdR39JKJLpgdfgYlpgG3xP1vxWD6TBTRlZzT1s9F8eZLES3BzYzQZzvtSjN0iByRjAzyjqXyMR8snnohBkzWk8XItI0dnAY9ZxkZamTWfZRENw1BQn8dFYFHXADT2ApF+LNs7IfXqo2Kl99TXEsFOrasDaF+krO7zql6NzzX1/Kdiu5vdhqVix2ryj223Vj8X23fFJtYSjsd94zg/Xed5QUlPblU0UZsbulaTO49nc+qtWrSeiCKlYpkyVoPL+HP2OOWyGkDEwGPDgoaNVCH+TOQSKHIV0WIlgbq2WtXNEre32T7MqKTsOkMHvQiutgOGe6FvuX5K46Ky5WCNEtQpFYWnCfXYPqt5uGa22QMLGeqPGMjSpkfIcCBlWy4ZDGS7+vRNArGxexDIo5Sz2H/YRIKrN0PEHkRkIXfIXIieN+r/Y0KOZVL1OJjNxcHzCyF8UrZg2VA7tVQ9MNQ4xqjKgUy7BYxMzQNmnkx4+rglS7OM5dkoZ9s8XbORAi3ikfwyDB+lNGJKq4qZ9VCHtlGBRxp1iMnr+ERXRLfxroPttM5zFnGvbn7mr+NLLmd4lHH17w1U9tMx09mG0eSgn1YoJb/N+pIfbgMedjdIiHq8miiGWKON8KDtcY/Nor37xF6klI5N516jRvW+8GjIpJS3YfckeI/OWbirx7ZKR4XaPnVQjTek82Lc53L/yUg1YPnp7Ysf7r746vbrF7c/f6vq5alYsTMRChXyFpwTG3nN53JcLSMkqyxEnE/l1m1XMuqdlFPVm1dnWSwWLlM1aciXxcHD4pylHUC9gtzyZMOo0ePaupx8m7+/1sV88/mr3346TgZ0dBn1apCMtMjw7ypwORbcXtKcjoxLXcNff3x39+Nn+xpcgn3TvGcUZmcU5kENHnE0DSFbDJFQDqKQUklor4HVJD5U8Y2Mu19/v/3+ywc6CmS3771rdnR0RDzEWaDqLkrUSy5S/2lKEzBRZ3UjyTKhrslnXivp75cvX/35y3FzwZ03Hf6nN/2wUcPKDPSfFlNGM2kFQ20akYqL1Z4WyG0S8kMmFzGfhiN/TeMN4zPTJDu/k5DjvJbXYbPcd0TNrjG7D2i8urelPeMre5Tm8JxD8yj73cftlEaB21tiRLfqMT1smqTS/Hcj7QpyG5mcC59Nc1pO+eLmH62C9y8=";
	return ShareCardsViewUI;
})(Window$2)


//class ui.shareNewCard.ShareFbCardsViewUI extends laya.ui.Window
var ShareFbCardsViewUI=(function(_super){
	function ShareFbCardsViewUI(){
		this.imgIcon=null;
		this.boxDown=null;
		this.btn_back=null;
		this.btn_sharefacebook=null;
		this.cardList=null;
		ShareFbCardsViewUI.__super.call(this);
		var temp=ShareFbCardsViewUI.uiView;
		ShareFbCardsViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(ShareFbCardsViewUI.uiView);
	}

	__class(ShareFbCardsViewUI,'ui.shareNewCard.ShareFbCardsViewUI',_super);
	var __proto=ShareFbCardsViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.shareNewCard.NewCardItem",NewCardItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	ShareFbCardsViewUI.uiView="eJyNk0FvozAQhf/LnK0kQAyBY1upirTqdXe1qioDDrYKdmSbhmyU/17jAHVTDkgIaaSZ9+Z9Axcw5yOFDH5zUcoTIDgqedSQXeDES8MgC4IoRsAor5iBLN5urggKxusSsn+XcXrfkIr6w2fINgg699bvXNgezYiij0SVep1Xq6Oo4HpFk8LLnESSOo0AJwg+iLJtvKn2hRQwqdZEVK2dXD8yLqima8+m5W+6IXVdS1Jy4QadLwIiCibVX7veCo/VH1f5O82thLe7Mdc3QD9DWveSD34jvnTj6z/I7l49Dm6Jd9Gkn8TpmD6X3ZM8CU8wSebO8fLQGuMo+eLRQDP80g7SaNI24i0nxfsX2kI2TZ+iUpSO4DT/T58Vt24QYrRNUBSgOOyN+Ic0FmiY9kRdZYGmcV+Ny+J0dtk5zOGNcrpbeugDO3cLjvvqf3LzlGLnHGOfUuBTcsYHUtBcyhlced3SeDPDK0T9g1EYeQfEeDkTfGOCFzMZdjx07LyIjU/nF9fmfoFw+hIL6zF0jEmCnf0nCioMHRTv9Odi0lO/7N7QxrdSrTC86RsaWbY11SuXa+hefZ8SxHUqKkqq4JbiE+wzh1E=";
	return ShareFbCardsViewUI;
})(Window$2)


//class ui.shareNewCard.ShareNewCardViewUI extends laya.ui.Window
var ShareNewCardViewUI=(function(_super){
	function ShareNewCardViewUI(){
		this.lists=null;
		this.btn_back=null;
		this.btn_share=null;
		this.shareTips=null;
		this.lab_dec=null;
		ShareNewCardViewUI.__super.call(this);
		var temp=ShareNewCardViewUI.uiView;
		ShareNewCardViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(ShareNewCardViewUI.uiView);
	}

	__class(ShareNewCardViewUI,'ui.shareNewCard.ShareNewCardViewUI',_super);
	var __proto=ShareNewCardViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.shareNewCard.NewCardItem",NewCardItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	ShareNewCardViewUI.uiView="eJydVM1u00AQfpflGlL/xI7tG40QqlT1QiWKEIrW9sReYu9a63WTUFXihHgCOCEhxI0XQAjxNM2Bt2D8lzipKxIsy9qxZub75puZvSFqlQHxyAvGQ7EgA5JJkeXEuyELFqqYeLppaQMSA4tiRTzHHd0OSBCzJCTeq5s2+lQsu6Er4mHMsvq2aTQNjTygCbxEa2hajXXVWpymZSo/Ils42zb64M5SGsE/AC1NR4Q54+ifx1TCBSwmVIYnBZv60fBNVuKkosjhMpaiiDBkRpMcmp9POfUTQFQlC9gldDs4gAjWqx/HpVXjsf6/vF53mF30UTMMvSJnaKMH+cyAR0tGeTSnIRtmPCK3h6bVDdM5Im+35C7GOcvVPoJtVQjmGNW9phK9EvTK0U1CBlThTBntGRP2DmlD5kxB2k0vC65YNXqpCIsE8mGX+nA3qhlSCTwESfYkPy2UEnyPuu3YFfWR67TUfcWnPg3mZCNWINK0FCmSALwWva+AXvHdKv14vEmWoMgFOp5MYsYhh5N7rYgb/SkPYiFRO21otdZVZR1TmWPa2zW3Rt0qK+TdMgUvKawgScSioZGxa1F20NSa81VdTzvclnuwGqZ2vBrLeHWkHn3Itj6qoW1jq8Zo0/MK9ZJl+f2mZ1Tg264EewvPJMNKie4MsLm4W4bbuRLNXjF6tah3xnIfQNTvbfc59SHZy+LUq61v9o760xAC9FKwRD5k/eH93c/vf75+Xn/7uP796e7Hu/WvL2UlSoo5TEQiyrBHbqgbmrb5j/QGZCa4eo4FY36nttDziWS0JBG0kbPq2V+23l2w6otorJtH9L97MRkHTcJfDNFSJg==";
	return ShareNewCardViewUI;
})(Window$2)


//class ui.shop.ChestCoinDlgUI extends laya.ui.Window
var ChestCoinDlgUI=(function(_super){
	function ChestCoinDlgUI(){
		this.bg=null;
		this.btnClose=null;
		this.btnBuy=null;
		this.icon=null;
		this.txtPrice=null;
		this.txtTitle=null;
		this.card_0=null;
		this.lab0=null;
		this.txt0=null;
		this.txtRare=null;
		this.txtComm=null;
		this.txtCoin=null;
		this.lab2=null;
		this.lab1=null;
		this.txtChestName=null;
		this.box2=null;
		this.txt2=null;
		this.card_2=null;
		this.box1=null;
		this.txt1=null;
		this.card_1=null;
		this.chestIcon=null;
		this.img_send=null;
		ChestCoinDlgUI.__super.call(this);
		var temp=ChestCoinDlgUI.uiView;
		ChestCoinDlgUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(ChestCoinDlgUI.uiView);
	}

	__class(ChestCoinDlgUI,'ui.shop.ChestCoinDlgUI',_super);
	var __proto=ChestCoinDlgUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	ChestCoinDlgUI.uiView="eJzVWE1v40QY/ivVcHXb+fD3rY0IrASrFbsSrFAVOfbEntaxg+3QtFUPHFCFVATLBS5IcOCEtHxJiAM/h2h3/wUz/pzETpwiWJX2kIxjz/u8zzzvl69AdjGjwAbvs8iLz4ECZkk8S4F9BS6AjVVDAQtgE0gUcM68LAC2DqECAsr8IAO2avKFE7lBnDwFNjzQqtUH+epaAW7AQg/YH15Vhh5MHZ+u2YG5Fbhq42Mn4bePfX5vesYi/t2Np9PDORtlLA3Y2dyJ/INZlP/OLulbCeN2gIUVRCxFtxSENLCG1HXcgB6lYluWTZ0ZuL5WamAPj+dZFkfrFKAcG7ZqQFk0COOUtmGN8+dHPgc2ZiWy0BnTkN+zYqmLAr3gQDVb2y6YE+W79W1hWPUWJY8aRPV2aRDPcpT+BuYwUbCuIFVBlsQb0s0+u1grDVv/qmFs9BoWrnLDyCRta04siPM9pm632GuEFAogpOEVWdYWg1rbIOKqNGsXU9cJKY+XfSS5S6w+JCYuvEVGy/gFZ9ZjB6ezrdRWduGBVS7yMO01TEy9fcBwRahxJGD4ceQH/PPyFFr/hARd7YWiFXGCLLXDfkbTYL5TrOAyWIjZ5cdszgPZb23UnSFUrJZJ0pByxPH8op0h/ITSSM4Mjzk74sly+cjxPMZ/tcE+VqD4r24cxhHnBxwlzAmra4M4jBORzN6Y5H/Khk+waxrGZslJfcykdom5ueMtqiY08i8DEdieU3pWnaZ4eEttkIh9J8+Sq2CQloPR1RqMUReFbJE9Spgr8Gd0wU1huSgJNyacr4Jcrv98JbHnCuIa3vgVJ2S+8Cukk4wf+UkPNh5WuQilgCACb43uCcvCBh1YPv/2xfNfll/dvrp5tvzjE7ksIRmrEEKJ9TGbvk2ZDNaZGEgTghjH4iizZE4b4C6NMpqAPlIJtsqMKRUJtQLuOok3gg3s95yE7omL8qGuAEYNue8yN4nTeJLtPXXWkB9DY6LJNCf5Xn1gsVkElqk1Eqix8giQkBa82htxYrgLTkfnDJMNDO+KuUzSll6DtixJGRJoFe5z3YqgypL4jA4qGIhoJhzX17lIJLfgilt4F7c0i3q5nTWV90hFLaSCcUO/akieCHU0ziz28H31BJtFBVdR08UiqEuuDHg6a1xBr+lc9PFkAs27eoNgWbn0pl9GmrHiDYtqbxCEealedeXoWB8S2O3KWvrcyZXhm8PBcAjuno+qDk63JGeIFOS4OZeXN78tf362vP10+eWP/02oV+UJ3T3sSTkmNHnVhJIbSCoGn3//4rPb+5CrYNHW6Q1mrMk1dhDQNHvoTKkcG6+++b0oZ5sdULdUsSPTIBrarpTjeLGuE1KOR0jgYykb8/JqT5wwpXXPFS/wzp0OKmLIXG9oWEanfLycpSPe2riirfmItdrATi6LtE+s7lwpqfgeJ8r9Ik+Kj6o30Fd6A8mNv/78bvnDDdfyZiHv1hzUQl4X70mPIsqxTEyaGxWB7qoIbasi0kC8edhNECU8o1sQ6P8kCLipV5Sz2he/vvzp69elh+6RrkhnSIi2PEQnTWmWHgqMPEHmhykGmUOfJ81qQK2HYlUeinsnUQxR2elJXQWfbyt+RO58sDI0bQJTvTkY6WsDFILyBIU2z0+dgq5eBxFdwodbrw5OWfO2Kj2j5/lIbkrjlLHzGNcJQysqvKrXVZ1N/VFKI69hJuTez/mzh4OARTSlhxW4y4CPl3xRD+Mn138DWlNn6w==";
	return ChestCoinDlgUI;
})(Window$2)


//class ui.shop.MoneyCoinDigUI extends laya.ui.Window
var MoneyCoinDigUI=(function(_super){
	function MoneyCoinDigUI(){
		this.btnClose=null;
		this.coinImg=null;
		this.sendIcon=null;
		this.btnBuy=null;
		this.icon=null;
		this.txtPrice=null;
		this.txtTitle=null;
		this.txtCoinNum=null;
		this.txtSend=null;
		this.txt_send=null;
		this.monthCardTipsText=null;
		this.getNumText=null;
		this.monthCardTipsIcon=null;
		this.giftIcon=null;
		MoneyCoinDigUI.__super.call(this);
		var temp=MoneyCoinDigUI.uiView;
		MoneyCoinDigUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(MoneyCoinDigUI.uiView);
	}

	__class(MoneyCoinDigUI,'ui.shop.MoneyCoinDigUI',_super);
	var __proto=MoneyCoinDigUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	MoneyCoinDigUI.uiView="eJy9lsuK3EYUhl/FlLeyp6p0753dEHvANoYZSEwwQ7VUkopRq4RUbc+FAXuTbAImWSSrQAhk65BFIC80tuctckr3ltpRZxaehmkkVOf/v3NTXyJ1nnO0QF+LLJSvkYHyQuYlWlyic7Sg2DbQGXxb2ECvRagStLBsx0AJF3Gi0ML0TQOxLEhk8QIt8H27vfqmuroyUJCINESLby9bocM1i/lIB1cqI43yVGTwfCDX64ONOFGiTMTphmXx/TyLIUApLvijQkBw5FODmL7h+AYhNhrZC1iQ8AcghVZCrVmOrq6Mzs2zhxulZDbyQ9zKEKEGesUKfVJly1SW2vfI1qo6fxKDsZVonKVsxVN4ZktpF7dbg1OzIzd9byJxJljWRG7BrLnIkBEd2fW6yNSdRs64CHg2zSfxDGoZFLLqDkSJ587JElzrEot0YmUi8ypTTGqSOKzTNBeKmlaN4A8QnEnUi4RnMVx0cbdAsOE4BvwbYlj2LIVXU1DSaxMbt80QSJEdroflIKb3n2Mwh2r7jZ7bj0AnV/IsPAyqHm3YWVlyVR4ofqaKDT8Qiq8FPHCQi+x03Ch4X2O7J8GkzsQasa3BXDzcnE+nIi5411e5eCUVqN+juLkAcaJTW83JEVQLdHBz+ZyFoYBzC3SPQuXg0w7UVzIDIPSgECxt7y1lKgs92nej6s/4zPcgI7a/71aiXoVu9jNkui242CqIxob8A3gE3XiR6C0VslEp9OH9SvGk2h+jnqw3sWN1ZtyuQ9SZel7AJMMR3RN6b+NeV2NEkLs60bqe0XYmA53EPodwh6Ui1lwpjxQM6ssZb7TxNkiUttuZOxYq7c2h6/e/fnz/1/VPP9x8/+P1P2+H3UqGVnVPNFaPxPoxF0OvLHJhJOHOSupK6kHofcNSU7xAczn1nX5Zdb3tDowvYdKfbdaddYKxzmypCnnKl60Vj1sO1lbq+4Dx2eTTjuipCApZykjdecFGaJMy7IlDLbN5nTgdjzdskiPYJMMemaIQ0/bwajdKW47/g2L7PKxSM+qo/UC8/r1I+ncxgJyUQxL06e/fbt68RV+epqhizbZZ/WuC9uNB/I4G9oZKlqwIj0VeHmueDuvDn+8+/PLHze/fXb/7eQrnUSvC4QCODuDoFhzes+uITW8N59j9q4u0cDFXMD7bVOZgVL4czKTvdv5oauaH9ix6+e8o1OEt1r83K4+bdbRLPhaRuqXqy6t/AUWetUw=";
	return MoneyCoinDigUI;
})(Window$2)


//class ui.shop.ShopViewUI extends laya.ui.Window
var ShopViewUI=(function(_super){
	function ShopViewUI(){
		this.bgBox=null;
		this.titleBg=null;
		this.tab=null;
		this.chestList=null;
		this.txtTip=null;
		this.diamondList=null;
		this.box0=null;
		this.coinBg=null;
		this.box2=null;
		this.dmdBg=null;
		this.lab_diamond=null;
		this.lab_gold=null;
		this.box1=null;
		this.pinkBg=null;
		this.pinkGem=null;
		this.btnClose=null;
		this.privilegeList=null;
		this.btn_vipView=null;
		this.txt_Vipview=null;
		ShopViewUI.__super.call(this);
		var temp=ShopViewUI.uiView;
		ShopViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(ShopViewUI.uiView);
	}

	__class(ShopViewUI,'ui.shop.ShopViewUI',_super);
	var __proto=ShopViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.shop.item.ChestListItem",ChestListItem);
		View.regComponent("modules.shop.item.DiamondListItem",DiamondListItem);
		View.regComponent("ui.shop.PrivilegeItemUI",PrivilegeItemUI);
		ClassUtils.createByJson(uiData,this,this);
	}

	ShopViewUI.uiView="eJzNV1tr3EYY/Stl8qrsanRd7Vvs0tQQgsGO61KCmV2NpYmlkSqNfIlZ6A2CKbS0fWsb8uTHprc81Lg/J/Y2/6Izo9usdu1sjQnFxtZl5vvOnPPddAzYUYrBEHxEqJ8cAA2kWZLmYHgMDojPQjCE0HQ0EGIShAwMHUufaGAcksgHw0+O690ryaG69QgMdQ0cyr8zZvZRxlePgnK9YpTbROMQ38vFa8JilIJFftZiFOClPOV7hPINKM8xy/sMH7KswP1xEscJ7RdkZ0QCn/SepMEsjslEW85ZZT8Pk1SYOypSTINeSgOgmni4yIYlbdjOoLESIRoUfGF/NSQU57hfm81D/sYnNBgxaVsDiI7DJPtYYiivt/l1z34bcGhB6RaaClG6M3eQUbBXcJ87FB9UHnPyFN/PCNcBGLpW/yq0WYMlvJuld6PjvQwIRliEV6SzhWjucqnmwEggHSiOMZk8VrBsolEHiWdIIFYLxHKtBodcnqdojKVMHTSfhqOi1iFCIxyJaL14+Xz68nftzffn0xd/am+efXfx1+fa9I8T/kCbnpxdPv+yXr3BsYOhYVS368gXynITtiYOotfrPkgoPwq4lxEU1c9WkyjJhLs7g5GtQ0+7M4auZaDuf4ULe0aVByRnHSoMswwJ225F0TmnFRk8HXNWbZOU8EBz+NsMpxixbUlQ7cu0xc3GOEuiaAVlGyVvVbaFuXxeJseCpF6tHa0xHC/MNw4wKygjsVgeJ34R4bwnVOkRvqXXNUCRXJhh6uMMzEbEA8FmNzqdKjr1Qa/lwtPdJi4O2SZJ+S5RR/j9P69+eX322/THr0rxL7799fX56fSnV5ffnF6e/HDx92eKDAZP812uaKW+U95xIxsk/hATvnIstG2lFUkekUASiCmTJ7heR6tiye0tVtIniOvgX6klrybwCl0t++a6vt+67Sp7nZrz267Tc77zuIOSDavtN8mhvnQ7McsC4SlU2maTEwmhi+rUE8Kr1AiT9xYVKqhrvO5BqMGZqumoxVwo91/KeZW6sO0hlShBEvk1hDGKsNBWGJc329XNdX6XInfgtf3W0E2FaEM5oustTXqZgJ7Xku7aTfjG/k04NyzBueHeNueGO8c5jvM5zg2Vc2tZv6L2r0ay1syWaunaUZp32z15g9ipUhyIZ1GBRfxKnFWu3zUbzCGKoj4t4hHOaswhxqIg6dDg+e64A08tX2ZbjiK8yzrpdwVeqFclyXMVxJaKWATqO4G7RDi7ba3kIQyXrxVV2FrtIZ3mkCmhe/+LuDW8Mm69btxyMLt8an0aihnLR3MhbKohbN5SCEMlIKDK1X1Z699t+D5cKRhLaFdWp5kRq6BgdDVKcjwv5i6iYUHUmZC/fFvDhk5ZSUxPTY6miqYZ2ScRDnCnYUPlO8wyBzdvzOu1g7m2LDvsZrmqarfq6MVPKvv0jIFHa0uRCl23TBa9PbXhuQrFO/sk3SJYfoSS/USOJXZ1LY5vyemsIVmZUhZ+ky6a9LrfioZnKzPezhZJ90sA1aA3/eLs4tn55YvT6c9fb62tN/N86/kWhrvH/OdfWfbnkQ==";
	return ShopViewUI;
})(Window$2)


//class ui.activity.view.ShowGetGoodsViewUI extends laya.ui.Window
var ShowGetGoodsViewUI=(function(_super){
	function ShowGetGoodsViewUI(){
		this.mPanel=null;
		this.lists=null;
		this.btnGet=null;
		this.btnFb=null;
		ShowGetGoodsViewUI.__super.call(this);
		var temp=ShowGetGoodsViewUI.uiView;
		ShowGetGoodsViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(ShowGetGoodsViewUI.uiView);
	}

	__class(ShowGetGoodsViewUI,'ui.activity.view.ShowGetGoodsViewUI',_super);
	var __proto=ShowGetGoodsViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.showGood.item.GoodItem",GoodItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	ShowGetGoodsViewUI.uiView="eJzdU1FvmzAQ/i/eqxMwCSThra3UqNI0VcrDOk1VZeAC1oxNbbM0i/Lfd0BoUcbUVNrT8APycd99d999HIjbV0Bi8lWoTO8IJZXRlSXxgexE5goSMxbMKClA5IUj8XzhHylJCyEzEn8/9Oi7kucwBO8RGKwoeSHxJKR9rTBaUmJ/CIUQAztuMi8H95Tk00rlCLfiF6yNwNJkNqdBQIM5ZUufvPEHq9XxSC/iZWzG/gGzTbmEBxyDfagLv+1hcU6aapUb7mrJndDKtuyXlWJ+M8771YYdDyt/GdWKsbZ42Oz4VFtyldeY6t0UQoEFb5wsOLFxlRbafMM2p2F/e2hvQ/Z7rkCekQd+N1kQrl73FDWxn9wgpOwxveqdETep0VJec7Pp2k11WWrlFbaNd4KOOPSzsG7I33FIjFoMG6iAO2w7GsOutc7uHJRDvKmVE2XztdRZLcFObaF3TeZUYOp0gFG8zTOgMjC47Uc8g71c185pdabNLOpMHEas1yNxag3NDPZtcK8WT7kBUKdlSJ6A3KCXsYJ/ut7zLBP4NSaTgPrN6RNvtUJZyZURXPaxGy21wS7Ip2370L+8R0Ue9djpd1ws3nVYLSbPNaBOUqjn+gJ/Xa5jtGx8JaxIJCZvubQw0PU2+VPWPUipd/+LrtuXbXKRoI/H34Kf7c8=";
	return ShowGetGoodsViewUI;
})(Window$2)


//class ui.skill.sonView.CardMessageViewUI extends laya.ui.Window
var CardMessageViewUI=(function(_super){
	function CardMessageViewUI(){
		this.img_bigBG=null;
		this.img_neiBG=null;
		this.btn_close=null;
		this.btn_use=null;
		this.img_use=null;
		this.btn_upgrade=null;
		this.lab_upgradGold=null;
		this.img_neicengBG=null;
		this.boxCardUpgrade=null;
		this.lab_upgrade=null;
		this.lab_exp=null;
		this.getExpBox=null;
		this.txtExp=null;
		this.imgBG=null;
		this.labGroup=null;
		this.txt_area=null;
		this.lab_typeCard=null;
		this.lab_type=null;
		this.lab_title=null;
		this.tip_maxLevel=null;
		this.mList=null;
		this.boxShowTop=null;
		this.lab_show=null;
		this.card=null;
		this.bar=null;
		this.barTxt=null;
		this.btnRemove=null;
		this.additionBarText=null;
		CardMessageViewUI.__super.call(this);
		var temp=CardMessageViewUI.uiView;
		CardMessageViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(CardMessageViewUI.uiView);
	}

	__class(CardMessageViewUI,'ui.skill.sonView.CardMessageViewUI',_super);
	var __proto=CardMessageViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.skill.item.AttributeItem",AttributeItem);
		View.regComponent("modules.skill.item.SkillCard",SkillCard);
		View.regComponent("Text",Text);
		ClassUtils.createByJson(uiData,this,this);
	}

	CardMessageViewUI.uiView="eJzFWG2P00YQ/isno4oPDYnXL7ETUSQO0QMJUFWu4lCFIifeJMs5tmtv7nKgk6gQXGk56IeKtlKp2gq1SBUISiWgvP2Yksvxib/QWXtjrxMnucCHhgMcn3fmmZlnnp31RYlu+FiqSmeIa3vrUkHyA88PpepFaZ3YtC1VEVLLBamNSatNpWpZkzcLUqNNHFuqfn5xuPp4x2phcfEGPKoXpJ5UVdj/3FYZwfWaFcAK0mnV6qS1uASrwlXiwq2G1+mUuqRGSdgmq13LbRV9t8V+Ty7gpYCAR8msFJAiFxCCv2pFSoHpBtrcLEwFhHQzQqTKKEGkqxURkYtJHiK43cDuOBpkFhStoCgFZAhQVNkQoZxa7FLquSNgKjrHogz916lbazheiMf91yMLtRbkpE44DMeqYweekWb70jUlcmZohuism+fKCyDvGCrD3fhkzaNnoYwav16BMipFXQSQQ4hTeQVQKjEMQ0x5BoUDzruwsHSkTVwc4hLcdxyG63yweoFDstxG2wsAk8xgxN9Wom+bm+f2kAwUodB1PZMMvxVYdk5CWgFOSv+OycjNhRx3h5px6LmllufYQ6Y1LAdHcZr8SxSmKVb8ROR4xLYaR2gkNDcSlgFQHusSOIKFFPcogwOflMIMXdNz6WngevoNlh8OiMXcNTzHY+b2NaMPq4pDWlEJcZNmOZnfiwkVZpY+bGP3PJmz+LlO1TwBGKtARoJ6xMppfLkQ/0GiAs3SH5VFO+z5xL05oj8gNGOqGIOKfxm2AZWao0UaqFAB8oo0AZSZkaJFrzfaDTJPCUqlwesdsQL7M94QeyU0qhTjmuoJdCsMMQ1LjGFBF5cIxR3SgFhwzx9juCYyXJvFcL2ojxMaJ2yWOPiFJbKGQ0nkMipP5rJVNpCuwp06a40qAz0LiIp41JrQbLKIDYJNcCGxx2DzEHGZM3FNryTvqANaggOl3GpherTnx4sSvubu5HlBolgxtdS0kVimPWY5zfyHEKPMKksDbxUfGYagI6NZryf3wVhB6nig/cvtwOu2wGTTckLMbx51rbqD7eRmsrPqGVnS5pClILIwtUUhRPmduKuL3I10aJYSKWUtTmlZTXKqGqogBfkS0CNuj9ik9sUEVYJpBv4RBaCckaWlZValESxGPB1oJpMlL7DPBJYfsz/FphoCp5egZELJ32xt97eeVftXruxeftH/9kb/6vbrF68G393d+eVJ//nTfy99ufv4EfwMXn7Nrl/c3718Y+erW/2rDwb3H759fn33xuP+y+/f/Ha7f+fWwdC33IWQbjj4o/1RNav7cNOQsb3/kCJ/8Pr5nf79RwdL7KlDgMBbw0HTgbm1KrWJbWO22TvYsgmkpgrhkPAY7ThR0DygRBjVTPdNoVJDMc1yJaMKU3Y75utwgK2x7V7lMmGmSWUNlXRRzYpX8aTu3Ly5++qBNE+XJIGraZhaZYb4YZtQZiaxksZtmsZI3LPUEA2pZJQnjB5sMdtd0kAHD5/1f/6mKs7P2l6HjxzBnlKaaYh1Ja0LUtRRyEJd7v3e//HuuMBVZN1UTUHgFGGa0ueYpsyIBe8c0PBcoaXCoumZzZIS6ggBnew6lBwI2x7NHGFExOq0EjShBPIExDCuUBzMxKybFT6wGtm5bI2EROQmbxbi1zpW7wReiyzxOPrbvw6uXe8//qu/vbW79Wjnp0tv/vxhcO/a4J8/hMAUc8+B5XJr4vQ5Nejcealc5pNXOowi1q5c9JPxd9XyLVLPOQuzMzD/ESOU1Uy+STgq+Kopc8/phq4zaYjT2+FLQGMbbH87oPDrlThhAfaxFZ2ChtcrGbabet5ccZjSgMA5Fh+HnVQEFHRdSjrskY5ndx0cFqPIi2zHLY6ucq3oyQC7dpTic1NHIs3ggcppM+ip6MKge7rtrS97vsh8c08Dr/j64P1eFsw8zaF4QldYMEO3iil2NDTvetoILKaFZa8bsGS5dGHYJ/Of7d6/BcT6nGZl5dqfbQTE6ZhQsBE/NZUaqTkxgZ8EHhzYw3AR7IywXtPSk07Sb8moXo8WZHrP57ZqKG/UguaRs2ctRZ55WtC4OqOKMKUbAoblaDzjlVRK2nwbDapMGGpOkkbghV6TLpy1jmEiFvnj6LN3AZ/0VkXlr5jMSbJdp+6nuAMT2//20mnmm4aNxtwvmXIGaqTy7UxNZwqlkswUlg0jF/FcoChfnNnBBtee7ty+vPPq0s7fz14/uTexcYVZbkp1m01L0ZoTqjs8E53b/A9ZcQyL";
	return CardMessageViewUI;
})(Window$2)


//class ui.skill.sonView.CardShowMessageViewUI extends laya.ui.Window
var CardShowMessageViewUI=(function(_super){
	function CardShowMessageViewUI(){
		this.bg=null;
		this.msgBg=null;
		this.btn_close=null;
		this.neicengBG=null;
		this.imgBG=null;
		this.labGroup=null;
		this.txt_area=null;
		this.lab_typeCard=null;
		this.lab_type=null;
		this.lab_title=null;
		this.mList=null;
		this.card=null;
		CardShowMessageViewUI.__super.call(this);
		var temp=CardShowMessageViewUI.uiView;
		CardShowMessageViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(CardShowMessageViewUI.uiView);
	}

	__class(CardShowMessageViewUI,'ui.skill.sonView.CardShowMessageViewUI',_super);
	var __proto=CardShowMessageViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.skill.item.AttributeItem",AttributeItem);
		View.regComponent("modules.skill.item.SkillCard",SkillCard);
		ClassUtils.createByJson(uiData,this,this);
	}

	CardShowMessageViewUI.uiView="eJydll1v1EYUhv8KGoS4cYPH32tRpARVAalwAxKgCq1m7bE9ytizHY/JplEkEOJDbQm9qKh60aqqUMVNIxAXtCKBH1OcLFf9Cx1/ezebpK02u7K9c84873vOnM0mEBtjDFxwgyQ+WwcKGHM2ToG7CdaJLyLgQqhbCogwCSMBXMtQtxTgRYT6wP1is4m+HKMQ94M3gOsYCpgAV7NNpcllQZnqDuIyYhTK5ekaSeS1x+L4XEaGgqQRWctQEi6Nk/J78hVe5URuBZyBAjVVgVC+9QHoiAxT39pSjiWBtl2i6BC2KKY+aFDiNFxZQJNg4uHkMAl0FM1QNE2Bdg9Dh1of4+pKJgRL5kGgUYNorQ8iGXqUpfgwwKhMMQylISNSc1A0wlSuASdqNhdp1mc2Ycms6xOCFuhVleoFe2rNk7bXB1qntN3eaVRX3oYrq2ABUPVlGkkifYH9hjRegaYCjR7QwDqJSKuJDFtvifTiuiIi8RE0E5JMiE+GXx5hjuwj+dFnsWbcWb2OJ2LeHVWtWAqmdcb9GxyNgSt4hjs23W7YZNFXOcvGMosokrng46Mn+aO3bv7gwfT+Xv7ddv7wyYe99wffv9j/5Y9898+/7t6bvnkt/w7efV1c7+1M72/vP36WP3x5sPPq791vp9tv8nc/fPz1p/z5s/PpGCWnUrFB8adnPUYZd0/jwFaxf/aCpp75sPs833l9/lyx6oIkYHcwD6gcFS6IiO/joscpRj6R1rhSDkkviZiWomtBjS+ONDtgibgm7ZMNalR3Ms8yJ4jKNOXm8v60pzmOVRzyESvmTJUGURIWpaE4EDPtX+y1zDGaL7hWF9xxOlMNozFVTMQQVVG1qftPn07fv5T3MctSfD2SlocyJkA0xfXDzxI0othvH7bC9d5AGszItA7JxD4RRZo2S6fbcew53X2hn5eHf+6cF+pKlUar0tZ6nTMsgi8i7ndCD169zX/+xu1PL6PPLOdsw3yFeJylLBCnbqFLmPSLhCwbmvq/LdJx7KbRzSio6fPwvQr9/lv+44viBArO1vDFBmWgmo7utM/LPmylOf9dWhAETtkZ/19aM+nNbtoYpjkjjQja03Ylo4J8kkZM9Oui9uF19egjgwJZDfUIZDlOBeaz0CQ9NJUGVTl0rWsls/vFjusQOQg8fLOi4XiMkbhVGl5d35wx3zEX/bewLAQn8tcNXxY47kPwLBEkLpbEzM8oTpfkOKZ0ich1S/NRCSpXcpz4pbbbPXXXirC66Wc7zqoltrK8atWxW3fpim3+AZd7AvQ=";
	return CardShowMessageViewUI;
})(Window$2)


//class ui.skill.sonView.CardUpdateEffectViewUI extends laya.ui.Window
var CardUpdateEffectViewUI=(function(_super){
	function CardUpdateEffectViewUI(){
		this.imgBgRight=null;
		this.imgBgLeft=null;
		this.labName=null;
		this.txtLevel1=null;
		this.txtLevel0=null;
		this.card=null;
		this.lists=null;
		this.boxBtn=null;
		this.btn_back=null;
		this.btn_share=null;
		this.shareTips=null;
		this.btn_upgrade=null;
		this.lab_upgradGold=null;
		this.additionBar=null;
		CardUpdateEffectViewUI.__super.call(this);
		var temp=CardUpdateEffectViewUI.uiView;
		CardUpdateEffectViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(CardUpdateEffectViewUI.uiView);
	}

	__class(CardUpdateEffectViewUI,'ui.skill.sonView.CardUpdateEffectViewUI',_super);
	var __proto=CardUpdateEffectViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.skill.item.SkillCard",SkillCard);
		View.regComponent("modules.skill.item.AttributeItem",AttributeItem);
		View.regComponent("modules.tips.HtmlShareTips",HtmlShareTips);
		View.regComponent("modules.common.AdditionBar",AdditionBar);
		ClassUtils.createByJson(uiData,this,this);
	}

	CardUpdateEffectViewUI.uiView="eJytVk1zmzAQ/S/q1cEIDNjc4hzazLg5NJ1+TCfjESCDEiExQrhOM/7vlfgGk9rpxBcLI719b/ftyi9APmcY+OA7YRH/DWYgEzzLgf8CfpNIJsCH0HZnIMEkTiTw3YV5nIEwITQC/q+X5vRtimLcP/wMfHMGDsB33OUM5E+EqV3qi9J5QbbZHm8DEm+DeGtaRsZicDzO3g9M7QkRxT+AfwXPAdvWooOuJZfrPRLqCEnjdfyl1H4aOU+KA2FxENdRmyTB1fI9wm7w7pKondY3MXCd11MaYRY/kjYCYmHChQphGs45WM9+HfaRICZ5cQZ1gwJMR6iWe5ItG8ImWxQFdyjVTCQ+KPXgc0ElucoTLntVsZWHdpzJe/JHhbFV/kNOuT7/YVd+RpzUEyWxFhBiJrEA50h6dUlXLTF5kBu8xxR21DbfDFcXTQr+hG8aAt7Odkyz/V0J7nO1JrheSmaxGJMxB2Sc9yDTS9yg4e515W+QiMblhLX5nNbxYbVLFEySVJ9NeVRQnBulewwicWr04aqAP5tKveYlkstx5y1gGdtamq2XFt6q9ZI6kWvtGQqxgofLeq3APeVCgTOMpHphN2v1wpqaiddSChIUEt8q7pPjzDyjd4zAULlTYBaVdnzoKV3zwyiGA6umsXSn10JdaDdCA35YS9brj5U3peJuXUjJ2Xh4rEpoz2vRJNsGKHzq5lXI01Q3fSwwZtWMn4KfmiFWh16DUcTiQm2c3ySE4RzP25mySwbjZNoQ/UT9U5Bt2m2uoLPoq8sTJPCpPC4UNazun/+T6F4i8ZA8v1HkJ5nSe034K8nySe9Br51SeW/jqR+lemEM8Y6XptOxVv0UFlksUDSRxM4jCobsue4vPWfKtdLnWlouLcecDyazPJnkSqplDwJyNo85jfq3Z5nQZXeVqoezN1J9z3mtXzyrdx/VWj+qQO24tUz16frNGtxHzZMeHIIgHW5iytYXEtX/DAZVmJJfD9mL2ihPMHskb3TZdRQRSThbK9XD0MsqObAtPxpsPXVZVRijj6hjPRz/ApMdV8k=";
	return CardUpdateEffectViewUI;
})(Window$2)


//class ui.tips.AlertDialogUI extends laya.ui.Window
var AlertDialogUI=(function(_super){
	function AlertDialogUI(){
		this.btnClose=null;
		this.lab_content=null;
		this.btnYes=null;
		this.txt_title=null;
		this.btnNo=null;
		this.btnConfirm=null;
		AlertDialogUI.__super.call(this);
		var temp=AlertDialogUI.uiView;
		AlertDialogUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(AlertDialogUI.uiView);
	}

	__class(AlertDialogUI,'ui.tips.AlertDialogUI',_super);
	var __proto=AlertDialogUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	AlertDialogUI.uiView="eJzFlM+O2jAQxl8lcg+9pEv+QpJL1SK1qlShSj3soqpCTuIk1ho7cswCXfEM3eM+QNVr732fbl+jYxMCLLCo6qFEEMZ2Zn7zfY5vkVrWBCXokvJczJGNainqBiW3aIkSx0YL8zunuapQ0nc8G1WElpVCid93VjbKKspylHy63SR6N8UlOZWnuaYc1mRiOu3N6ETRpqLXM8zLi5qXaLWyn0wTByaP73dAoeceJOWEZoSbhDBHv5C3kgIhciPbC2zPs90B2nbhhv3dsqPXM6UEf1RYV9SFYxvd0IamDJYWmDUEYizhsVTxIRONBn5Ek5p8kxKaTGkLxfFU18raJxhOCYN4r//3ZnAfww1cwxFGIICQ+aXENUqUnJFOkCAKN0yQdpIJrghXkEeRBXSLxmJmzQV/rqySwFew3JJkjmVu4UIRaamKWClWjNhzypi1hOWN0v8ahaUy04UW7uWOhDGULKDQR9AaJaCxiaDYK0mx7iETTGiiZ1EWhp4DI5jR0qgEcESi8w54rfdu7OxoPibNoeKlJJ39Rto1l++04Qec5xRmE/TCsx19bRa+2cc2Y0PN3mj4wnzsE/cdHx/uf5zdyoN1O0F0gL+gmB+8Dcd2gxevFfH7nfu+27mvFgpeLzBy6/3D17vf337uGKe309Y4LdAp43AxcMN/Mi5wBh2mGwY7Jo7EoYdCwplAUlr+Tx9/3X3/iwbNfdNg5Dx1UgheUDk933VNb4QaQ8vBRdhGVyiJBlsHjx/Bo2M7zl8fwlHclWVQbQYLe8OKctKQnuYQXJPAsdwyYJ5VQgKEoxnW0ZWJVqvPcP0BXVv7jg==";
	return AlertDialogUI;
})(Window$2)


//class ui.tips.CardTipsUI extends laya.ui.Window
var CardTipsUI=(function(_super){
	function CardTipsUI(){
		this.btnClose=null;
		this.labContent=null;
		this.btnBuy=null;
		this.labTitle=null;
		this.imgIcon=null;
		CardTipsUI.__super.call(this);
		var temp=CardTipsUI.uiView;
		CardTipsUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(CardTipsUI.uiView);
	}

	__class(CardTipsUI,'ui.tips.CardTipsUI',_super);
	var __proto=CardTipsUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	CardTipsUI.uiView="eJyNVE1v00AU/C+P66rx2nHi+NbkgCohhFSkghCqNvbGXuLsRvaGJK0qwY0LFIkeuILEh8SBM4KKP1OXI3+B57WTOE1LGuWy6915M/Pm7THo+ZiDDwdChmoKBMapGmfgH8NUhDoGv2U5BGIuoliD77itEwJBLJIQ/CfHi8t7Ixbx+t05HiUwA98ikA2FxDOBGo0aE3GoRRaL4YTJaGcsIzg5If+F6bQNjoNwFSHXphugkouASwOI38QRv5sKZAjUI3aT2DahbVipoKiiVvZ+d6K1klf5V4U9As9Zisf6WvYSlRUEr1Tvm/uHEYrqi4pEwvo8wTNrAu+ZzfU6tNUxhWwLC05VGh6kbAy+Tid8KdlZsUDcnpKaS404ms9QDlyc//5z9jV/+yY//X7x89Pl2Y/89P3liy/5q2/5u89/f72saXebBAYIsI8mYVG3XCHIbipYwS1QiSoK3fEC17Ut3OmrotslIZaIqJCe8IGG7SbanVbpokVrNnYn800To5QvO2jM29epGvLego7d9Cwarn80KSvXpRyvWj5gYSgQygeL2Pgn1uKiwcsKwIH5Lfa7NZFmY7dSmhrfVg21LcuC2w6BV7V2Ta2Shd4Bl9FRXMxByKpJeLplFtplJJvehnkzweTGOF2XNsc2ENRprcJF3Vq4Hgqd8FW0MEj5+cf89YdahJq0HiHHujlCbNCm7k0RwoHVPN36AFC7NLHjXmMiU6FwbvWO0HYJQ5tLtWIU7QUmshUuyzKus0YhHZk2hOYjEZSFnolitgfYrT5fjDiTQazSx/jI7biL1SOzKlr5D2IAvec=";
	return CardTipsUI;
})(Window$2)


//class ui.tips.GameNoticeTipsUI extends laya.ui.Window
var GameNoticeTipsUI=(function(_super){
	function GameNoticeTipsUI(){
		this.btnOK=null;
		this.labTitle=null;
		this._panel=null;
		this.txtContent=null;
		GameNoticeTipsUI.__super.call(this);
		var temp=GameNoticeTipsUI.uiView;
		GameNoticeTipsUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(GameNoticeTipsUI.uiView);
	}

	__class(GameNoticeTipsUI,'ui.tips.GameNoticeTipsUI',_super);
	var __proto=GameNoticeTipsUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	GameNoticeTipsUI.uiView="eJyVlF1L21AYx7+KHBneBNukSdMGJ6gXOvYKCk6GyGl6mhyWnlOSU61KYcP5wpiyi+HGQBDxYldlzgv3ou7DzNh6ta+wJ+mLaY0vg5LkpOd5fv/n/zw5y0gslggy0DRleb6AJFRyeclDxjJaoHlhI0OXVQnZhFq2QIaaVasSMm3q5JHxYrkdPMor0chFZCQlVAmvJjZtMgKvUY6KIi6huPgHRWyRngyy3k7REZKWkPeSMggwebHIWaJM53LWnDxYYhaKiNQ12EiXyLhLAYM0RdJSUnBVJRlVq9KN3FQ65MqZDjidkWPASzZtcSMoXZeymqTKUkaJClKTt1Ez2ZCqRqiK0kUNmIxQk7CrWBCrqBIEyHoEq2RSN2LDKpNxnlLMBc0364umeBJrWLPXqXSqk8rBzCrDzsSYTRnxSOIyt8WZZWHeqgEz0+buDLR5UGuvnoeranU2Ch4tC8FZD1lV2mi4z2M3GDLBnj5EV4yzXNLxzcE54sB/sZMYW6HSbI6evkuBXmcu7lrco1BQz/QrmZCZBqYgFegmOvv5rb5xUP/8xj/+4dd2DIgocCYmYQxAotpcwb4Rl+IgnckdHljSj3NpNaV1NTIOmW1WGdxaI6jJWttXMG2KCidwpiXnfHf9Yu9TdNzU/xQEnjjUCttEmCBul8JnmF01JRixwBTlUmJWbUucK7VC5idNlzvOKHYnuyZbuJh5JewCrOfEUJLJuGEYnwpKveZgW+BuftqFA80QbpnECRIVMQYOAO7StYv1TX/9l+GvrjZWTvz3W/7a5tnJ7/qHL+e736Gvf169bhwdwq9++jZ4Pqk1VrbON7b9ta/12sHf43eNrSP/9OPF3o6/vz0ExbA+Tyw65P5AaK7RTwp6kuQHhpXkvbPjfb92OJQIdg2DAj5P3IIDZ7yBvNCg4FsgOE/BCgMaTb0JUXTCklslte2Rs5lrWvuYQiaPF0TfDJ4g9MYmO6QgUDD5s9V/KP4p/g==";
	return GameNoticeTipsUI;
})(Window$2)


//class ui.tips.LoseConnectUI extends laya.ui.Window
var LoseConnectUI=(function(_super){
	function LoseConnectUI(){
		this.notice=null;
		LoseConnectUI.__super.call(this);
		var temp=LoseConnectUI.uiView;
		LoseConnectUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(LoseConnectUI.uiView);
	}

	__class(LoseConnectUI,'ui.tips.LoseConnectUI',_super);
	var __proto=LoseConnectUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	LoseConnectUI.uiView="eJxdkMFKw0AQht9lvC4x2baY7M2TCN48qIhImmySwWQ3bLa2NeTmqQf7AII3L4LgUSjiyxjRt3CSUqHdw8IM/z/fP1ODnZcSBJyhivUUGJRGlxWIGuYgXAaz/p9ibDMQA99nkElMMwvCcw8YhCrKtLkgkTPaVOd91TCIMsxjEJf1BnJchKncYYwGPcQLhtuY6gYVWSJdFPsTvLZYVk6pUnJXeCePDNJk4AHjHuOccRe2kjUN+6eehGOZ71CD9Wp8yBnchoZUSluMunBWzmgG/K7u27dlu/xoFy/t4vHn8+n74fnr/dXpH+kSrewpRaG87roi16HBsGNFOtfd1L3ET7zEo85Yd7ewZiLpTjmm/XJSWWmgaa6aP9DZf1E=";
	return LoseConnectUI;
})(Window$2)


//class ui.treasureBox.TreasureBoxDetailTipsUI extends laya.ui.Window
var TreasureBoxDetailTipsUI=(function(_super){
	function TreasureBoxDetailTipsUI(){
		this.bg=null;
		this.listBg=null;
		this.boxItem=null;
		this.list_1=null;
		this.list_2=null;
		this.titleText=null;
		this.decText=null;
		TreasureBoxDetailTipsUI.__super.call(this);
		var temp=TreasureBoxDetailTipsUI.uiView;
		TreasureBoxDetailTipsUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(TreasureBoxDetailTipsUI.uiView);
	}

	__class(TreasureBoxDetailTipsUI,'ui.treasureBox.TreasureBoxDetailTipsUI',_super);
	var __proto=TreasureBoxDetailTipsUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("ui.treasureBox.item.PrizeItemUI",PrizeItemUI);
		ClassUtils.createByJson(uiData,this,this);
	}

	TreasureBoxDetailTipsUI.uiView="eJzFU02P0zAQ/S/mapXYdZs2N/aCVuKAxCJACFVuOm0s0jhyXdptFWklQEiIA3vjsPAHVlrBBSH4O3RX/RdMkjbrlu7HbZUoycTjee/NG8+JPUyBBOSZSnp6QihJjU5HJJhnlISRinskeDlfJ+0P5QCcHHJIAo+SafGcqJ6NSCAEp+SNNJjeHWDu6LVK8DvUw+H9sepYlY5qaVKsqBk8NAoRCGtTzij38MaFCNQgsiRgrVaW0Vugcwfd2wnZmUUwi6TeAd2giM4EZU0HuiluQq7zApoh7w3ACTYN1jChjOEFsqy1VsHzVWC0lVZp3CUalMgkjLQpEquoyGzckkWdN+6SBeOlD2zTh3IKYjWye1dMQqcPyQD+N8VDNyg+fNcSz6Wxp6dbJBolB4FWrlm029Uo6um+heFGN3y3G74D5LtAj5D+FpJfL5vedCV2WF48lWFeL1dvIAVpMeC7jtJjg2pXlKraBpIemIMyowxw2YwTq4b5r7GqWQNyNDaA+msKt9eqQk/3SZa9up454355YESzahJrbVjV4cThzu6Ku+xCvD3rzZI7Fw53seZulY3hAKa5ZJu/AvL319vll58Xp9/OPx4tTn4v/7xbfjhenH29OPvhzFUd5fd1Yp8gF6y+inD7A6NkziHUsc4R7nVFfpHrTgpGsRoUYw6JxRZkN4hiK1V1/1KUVxnSg3BT0vnJ0eL78eLT+8Xn08ARwbkrAg/PlSL63VCwPv7p6txVa8ZwSTqGvi2c+AdrkfA+";
	return TreasureBoxDetailTipsUI;
})(Window$2)


//class ui.treasureBox.TreasureBoxDetailWindowUI extends laya.ui.Window
var TreasureBoxDetailWindowUI=(function(_super){
	function TreasureBoxDetailWindowUI(){
		this.lockImg=null;
		this.unlockBtn=null;
		this.unlockBtnText=null;
		this.cdOpenBtn=null;
		this.cdOpenBtnText=null;
		this.cdOpenUseText=null;
		this.openNowBtn=null;
		this.openNowBtnText=null;
		this.openNowUseText=null;
		this.decText=null;
		this.speedUpCardText=null;
		this.cantLockedTiptext=null;
		this.titleText=null;
		this.timeDownText=null;
		this.timerText=null;
		this.list_1=null;
		this.list_2=null;
		this.closeBtn=null;
		this.boxItem=null;
		this.additionBar=null;
		this.showAdBtn=null;
		this.txt_adBtn=null;
		TreasureBoxDetailWindowUI.__super.call(this);
		var temp=TreasureBoxDetailWindowUI.uiView;
		TreasureBoxDetailWindowUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(TreasureBoxDetailWindowUI.uiView);
	}

	__class(TreasureBoxDetailWindowUI,'ui.treasureBox.TreasureBoxDetailWindowUI',_super);
	var __proto=TreasureBoxDetailWindowUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("ui.treasureBox.item.PrizeItemUI",PrizeItemUI);
		View.regComponent("modules.common.AdditionBar",AdditionBar);
		ClassUtils.createByJson(uiData,this,this);
	}

	TreasureBoxDetailWindowUI.uiView="eJzlWFuPGzUU/ivV8DrK2p573rrbLl2pLUht1VaoWk1mnMTdiR3NeLppq0qLAAEFBAUkECqXqhIgqlbwUq1of85m233iL2DPfZKZJL2AkNiNEnlin/N95xwff85NhV8fY6WrXCTUZ7uKqoxDNo6U7k1ll/h8qHRNqKvKEJPBkCtdHZm3VMUbksBXuu/czBdvjdwBrq69rnShqkyS98yO4ZiqEu0QKuZ7QxxxH3OXBGsx2eYkGpKd2KWDzpgOlIo7YIg15AZ+MyTCoQJNpCIAVGjbKjJM5dYtdSEGMV2C0K0SBdDaUEyISxP/y6xCkJkFpVmI2sxSTDxMZ4gh3akRQ0DNX8vdwzS0ut7msjfpDTpXx6sw0RJTGkIFFYTsxVS0OS52PUmOCk1VVA2EywFoegpAFwCuuaGYFjBvZ2skHTSDuBr1BnNpOrsec87ojHUkS05GSrMLetABuaeYSl/rnLb6cmlAYpjxHZNrjF8WWI2OkY0uKV0HyVHg9nAg1lfCYsFaVDSg5i+laQudTizMRMdI95BRojfMOfTn8YSLhVx+dJXnv9w/+vpdyYiHbAdvsIDJ2W+YmqcjXDwXwSmhasJBn1F+TsAVX5jpSKw6Q7yQRazPj112T2EiVnu5vX7yJ570mCTCwxirihuQQRJGTDkORYauLM8RcBblyPPfGmO6NEdoJkdIKzNkgn8qPyjdiI5eIgf2HPJ6fp49+GT60ZPDj7+aPt2bz1K/ZyMBoDFLqJ4lUGTpeEjcYHluqDdkoYgNkAWbji7lo9m8qQt5a2n/s8u6tGYSdiHCNdqyac9y9TyjB9q4WjWu+gKuXr+fWGmqwwD3+dIelLExQFlhbDRiNG02WatZoZAXNxsmonKW7b5it7Hh66jlxiiANAqwIQp9TAc3hvJ89t0MXuS5AU6Kyc4GSS3Zy0qnYcvIup6N0f9rz2S8/1ub5spSQmnFmLDS/QpKPvbqOTy8uzf9/c700w+mXzzoVtUDqoKGdjtoxzI04Ky605sgW5km1bQCsqbBHHI0xti/MN5wQ78OfXr7p6O9H6ef3ZME12ASuJYCQ+3wNzctK1n6goWDAMwkkiwdFvoXQ3ec088Db4vUXyMR6QXCTN8NIlz0Y5fy00IoYP88GfM6r89/PtjfO9j/bfro+2eP/jh8eH9699dUPxzsP1z8rbAyYrEo2GHI4sGwcJo8PEldAcQvHubBMkAt19YqOgMbALSW6qp7L+3MyCk7s65ZeYQ44UF94ykH++8dffv42YMfDm/vTe/+efTk/aMP76RxqORec6p0NLAKHbdvQWOOzutrM9DKBLVROYWsCtcRPsF2GzXjdO/L54/uHX7z+K+n371Ueldvtgu38gvuCx1qTQ1IMg3rNNGpYxCcIbS1+7w05PnuQyI+i9dMha6hFTcdMWkbimkhHmNXHu+o6bR+OxTgtjgeVQ2GmPqCXzojHUhDMZW85e2AdHiI3SgO8TqbdIhY3ikMXdia7e/zcDVgpc1Sr4TXBjXsqFFd/At4mxVYdl1CpRYNWITriktomuSGnKzfHghN0yOZpCl0VTWRAsxsHqW+k4Gxyh3mOLnLHptk1EuFZFUVklUWn2lVPR33fcIJo+tuOOtRz27pZuHGrU0uwzhifhzgqJNqt07V5itfl6Mh2z3uN4cziHEuDEsZClQdqPKtejFzapdnKEelim0qp7ONvxukewnC8jelQMjTWMxc2xgSiiO8lqjrE4W6HuzcyCBSN4lVkDWV9u677OaQCqCme8Ngp+6LeCLaSy8iqb3kDpnLE/SictypFptTOazQigoVytMyPyWNUovOSVF40rLXT7b8ogBWlaKbG5ubNVm0kpLT0q1u2jWoWeef8G03r9OXhrzgKGiDfEX8/w1GGtRp";
	return TreasureBoxDetailWindowUI;
})(Window$2)


//class modules.scene.BreakScene extends modules.scene.BaseScene
var BreakScene=(function(_super){
	function BreakScene(sceneType,sceneData,needLoading){
		(needLoading===void 0)&& (needLoading=true);
		BreakScene.__super.call(this,SceneType.BREAK_SCENE,sceneData,false);
	}

	__class(BreakScene,'modules.scene.BreakScene',_super);
	return BreakScene;
})(BaseScene)


//class ui.treasureBox.TreasureBoxOpenViewUI extends laya.ui.Window
var TreasureBoxOpenViewUI=(function(_super){
	function TreasureBoxOpenViewUI(){
		this.tipsImg=null;
		this.boxPanel=null;
		this.box=null;
		this.returnBtn=null;
		TreasureBoxOpenViewUI.__super.call(this);
		var temp=TreasureBoxOpenViewUI.uiView;
		TreasureBoxOpenViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(TreasureBoxOpenViewUI.uiView);
	}

	__class(TreasureBoxOpenViewUI,'ui.treasureBox.TreasureBoxOpenViewUI',_super);
	var __proto=TreasureBoxOpenViewUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	TreasureBoxOpenViewUI.uiView="eJylkl9LwzAUxb/LfY5ba5u69XEishfxQXAiIll712R2SUlS9499d9Nu3eo2pCCFQNJ7T373nGzBrguEGF6FTNUSCBRaFQbiLSxFajnEvh9EBDiKjFuIo9DbEUi4yFOI37dN93jBMmw3ryH2CKzq9SBEowEB8yWkq084Gtsvxec0682LzHUuVGnwhWtVZq52xnKDh8MHyaY5uuusLvE3yY50IHAD0I4QJmE5TiC+8f8P9HSNiA7pnsnzAwLfTLtCKwozXtTX77lyJrPS9fbvuZBosH8ETec2S3mvkFU1kwlX+s2N2aPNblLv2hgjtTpnoHc1A42GR1t8z2twpmr1zCTmcJrM/f1bMgxrxVvvZHQ0jFqK1XAFS7DSoifh4MyyUWmtkhee+S3PGuDBoJHXaEstR1bCZbIzzmQqDoYdg6qegNjgoxYuRAhC4l54vcK1t301yGA/8TDokNqMb4QVHVL7cN8P4uodlg==";
	return TreasureBoxOpenViewUI;
})(Window$2)


/**
*主城界面
*@author weiqiang.huang
*
*/
//class modules.hall.view.HallMainView extends ui.hall.HallMainViewUI
var HallMainView=(function(_super){
	function HallMainView(mainScene){
		this.needFirstShow=true;
		this.selectIndex=0;
		this.heroShowSkeleton=null;
		/**引导手指动画 */
		this.aniFinger=null;
		this._mainScene=null;
		this._lastCreatTime=NaN;
		this._wifi=null;
		this._downFreeBoxEffect=null;
		this._upFreeBoxEffect=null;
		this._downWinBoxEffect=null;
		this._upWinBoxEffect=null;
		/**乱斗进行中 */
		this._isBattleAni=null;
		this._modeChooseView=null;
		this._levelBoxControl=null;
		//等级宝箱管理类
		this._wxRwanBtn=null;
		this.islevelup=false;
		this.isVipUpgrade=false;
		this.isOpentask=false;
		HallMainView.__super.call(this);
		if(LoginControl.instance.isFirstEnterGame){
			LoginControl.instance.isFirstEnterGame=false;
			SocketManager.Instance.record.guideClickRecords(10);
		}
		this._mainScene=mainScene;
		this._levelBoxControl=new LevelBoxControl(this.btn_levelBox);
		this.tipsView.visible=false;
		this.init();
		this.addEvent();
		this.isOpenResize=true;
		this.rightUpBox.mouseThrough=true;
	}

	__class(HallMainView,'modules.hall.view.HallMainView',_super);
	var __proto=HallMainView.prototype;
	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.BaseView.prototype.showView.call(this,$x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash);
		var pt=this.rightUpBox.localToGlobal(new Point(this.coinBox.x,this.coinBox.y));
		HallMainView.GOLD_POS.x=pt.x+25;
		HallMainView.GOLD_POS.y=pt.y+300;
		if(PlayerInfo.instance.consortiaID !="-1"){
			this.checkCanDonate();
		}
		this.onQuestMsg()
		EventMgr.ins.event("recv_QuestMsgNum")
		if(PvpMgr.ins.showSeasonResult){
			UIMgr.ins.openView("SeasonResult");
		}
		if(FriendsMgr.ins.isAutoOpenFriendsWindow){
			FriendsMgr.ins.isAutoOpenFriendsWindow=false;
			this.friendsTipsPoint.visible=false;
			UIMgr.ins.openView("FriendsWindow",Handler.create(this
			,function(view){
				view.setChangeTab(3);
			}));
		}
		this.checkHallWeakGuide();
	}

	/**
	*检查大厅弱指引
	*
	*/
	__proto.checkHallWeakGuide=function(){
		if(HallWeakGuide.ins.isOpenWeakGuide){
			var guideComp=this.btnPvp;
			Laya.timer.once(5000,HallWeakGuide.ins,HallWeakGuide.ins.hallWeakGuideStep,[1,guideComp,new Point(guideComp.width*0.5,guideComp.height*0.5)]);
		}
	}

	__proto.onOpenAplacarView=function(){
		ActivityInfoMgr.ins.titleTab=1;
		UIMgr.ins.openView("ActivityView");
	}

	__proto.onUpdateQuestMsgNum=function(){
		if(QuestData.instance.availableBtnLength !=null){
			var len=QuestData.instance.availableBtnLength[0]+QuestData.instance.availableBtnLength[1];
			if(len){
				this.taskRed.visible=true
				this.taskRedTxt.text=len+''
				}else {
				this.taskRed.visible=false
			}
		}
	}

	__proto.onQuestMsg=function(){
		var questTipsQueueList=QuestData.instance.tipsQueue;
		if(questTipsQueueList && questTipsQueueList.length){
			for (var i=0;i<questTipsQueueList.length;i++){
				var conditionId=questTipsQueueList[i]
				Laya.timer.once(i*500,this,function(i){
					var tip=new QuestTip()
					if(tip.setData(conditionId)){
						QuestData.instance.tipsNum++
						LayerMgr.ins.addToLayer(tip,3,false);
					}
				},[i],false)
			}
		}
	}

	/**当前有没有其他页面是打开的 */
	__proto.noPageOpened=function(){
		var result=false;
		var pageNum=LayerMgr.ins.windowLayer.numChildren;
		if(pageNum==0){
			result=true;
		}
		return result;
	}

	/**引导出现之前禁止点击 */
	__proto.disable=function(value){
		this.mouseEnabled=!value;
	}

	/**检测是否可以捐赠 显示绿点*/
	__proto.checkCanDonate=function(){
		var time=parseFloat(PlayerInfo.instance.guild_donatereq_time);
		var endTime=TimeManager.Instance.checkTimeEndNum(time);
		if(endTime<=0){
			GuildMgr.ins.showGreenFirst=true;
		}
	}

	//每日首次登陆需要显示的界面
	__proto.openShow=function(){
		return;
		if(LoginControl.instance.isNewUser==1){
			return;
		};
		var viewArray=[]
		if(this.advertisingViewisOpenShow()){
			PlayerInfoMgr.ins.isOpenAdvertising=true;
			viewArray.push("AdvertisingView");
		}
		if(viewArray.length>0)
			UIMgr.ins.openViewQueue(viewArray);
	}

	//是否需要登录显示
	__proto.advertisingViewisOpenShow=function(){
		var flag=!PlayerInfoMgr.ins.isOpenAdvertising;
		return flag;
	}

	/**显示收到捐赠消息 */
	__proto.showDoateTip=function(msg){
		TipsManager.Instance().showTips(msg);
	}

	/**获得钥匙后播放宝箱动画 */
	__proto.onGetKey=function(type){
		var _$this=this;
		(type===void 0)&& (type=0);
		if(type==1){
			Tween.from(this.boxWin,{scaleX:0.6,scaleY:0.6},500,Ease.backInOut,Handler.create(this,this.addTextAni));
			}else{
			Tween.from(this.coinbg,{scaleX:0.8,scaleY:0.8},100,null,Handler.create(this,function(){
				_$this.coinbg.scaleX=_$this.coinbg.scaleY=1;
			}));
		}
	}

	__proto.addTextAni=function(){
		var labGold=new Label("+"+1);
		labGold.color="#ffffff";
		labGold.strokeColor="#374f65";
		labGold.stroke=3;
		labGold.fontSize=20;
		labGold.x=40;
		labGold.y=100;
		labGold.alpha=0;
		this.winBox.addChild(labGold);
		PlayerInfo.instance.addGold=-1;
		Tween.to(labGold,{y:0,alpha:1},1000,Ease.backOut,Handler.create(null,HallMainView.onGoldLabelComplete,[labGold]));
	}

	__proto.onClickMonthCard=function(){
		var isOpen=PlayerInfo.instance.isOpenMasterCard;
		if(!isOpen){
			ShopMgr.ins.selectedIndex=2;
			UIMgr.ins.openView("ShopView");
		}
		else {
			UIMgr.ins.openView("MAIN_MONTH_CARD_TIPS");
		}
	}

	__proto.onClickPrivilege=function($btn){
		var isOpen=false,d=0,day=0;
		switch($btn){
			case this.master_Growing_Card:
				isOpen=PlayerInfo.instance.isOpenMasterGrowing;
				if(!isOpen){
					ShopMgr.ins.selectedIndex=3;
					UIMgr.ins.openView("ShopView");
				}
				else {
					this.tipsView.visible=true;
					d=TimeManager.Instance.checkTimeEndNum(PlayerInfo.instance.allSpecialCardEndTimes[4]);
					day=Math.ceil(d/1000/60/60/24);
					this.tipsView.txt.text=LanguageMgr.Ins.GetLan("9002350")
					+"<br/>"+LanguageMgr.Ins.GetLan("9002351")
					+"<br/>"+LanguageMgr.Ins.GetLan("9002352")
					+"<br/>"+LanguageMgr.Ins.GetLan("9002353")
					+"<br/>"+LanguageMgr.Ins.GetLan("9002354")
					+"<br/><span style=\'face:Arial;color:#ffd67f\'>"+LanguageMgr.Ins.GetLan("9002342")+":"+"</span>"+"<span style=\'face:Arial;bold:true;color:#56e401\'>"+day+"</span>";;
					this.tipsView.txt.height=this.tipsView.txt.contextHeight+4;
					this.tipsView.bg.height=this.tipsView.txt.height+20;
					this.tipsView.parent.setChildIndex(this.tipsView,this.tipsView.parent.numChildren-1);
				}
				break ;
			case this.master_Resource_Card:
				isOpen=PlayerInfo.instance.isOpenMasterResourceCard;
				if(!isOpen){
					ShopMgr.ins.selectedIndex=3;
					UIMgr.ins.openView("ShopView");
				}
				else {
					this.tipsView.visible=true;
					d=TimeManager.Instance.checkTimeEndNum(PlayerInfo.instance.allSpecialCardEndTimes[3]);
					day=Math.ceil(d/1000/60/60/24);
					this.tipsView.txt.text=LanguageMgr.Ins.GetLan("9002345")
					+"<br/>"+LanguageMgr.Ins.GetLan("9002346")
					+"<br/>"+LanguageMgr.Ins.GetLan("9002347")
					+"<br/>"+LanguageMgr.Ins.GetLan("9002348")
					+"<br/>"+LanguageMgr.Ins.GetLan("9002349")
					+"<br/><span style=\'face:Arial;color:#ffd67f\'>"+LanguageMgr.Ins.GetLan("9002342")+":"+"</span>"+"<span style=\'face:Arial;bold:true;color:#56e401\'>"+day+"</span>";;
					this.tipsView.txt.height=this.tipsView.txt.contextHeight+4;
					this.tipsView.bg.height=this.tipsView.txt.height+20;
					this.tipsView.parent.setChildIndex(this.tipsView,this.tipsView.parent.numChildren-1);
				}
				break ;
			}
	}

	/**
	*胜利宝箱
	*/
	__proto.onClickWinBox=function(){
		if(Browser.now()-this._lastCreatTime < 1000){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("10001135"));
			return;
		}
		this._lastCreatTime=Browser.now();
		SocketManager.Instance.record.iconClickRecords(14);
		if(PlayerInfo.instance.win_box_count > 0 && PlayerInfo.instance.win_box_index >=5){
			SocketManager.Instance.out.sendOpenWinBox();
		}
		else{
			if(TimeManager.Instance.NowTime()> parseFloat(PlayerInfo.instance.win_box_updatetime)){
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002180"));
			}
			else{
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007376"));
			}
		}
	}

	/**
	*免费宝箱
	*/
	__proto.onClickFreeBox=function(){
		if(Browser.now()-this._lastCreatTime < 1000){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("10001135"));
			return;
		}
		this._lastCreatTime=Browser.now();
		SocketManager.Instance.record.iconClickRecords(13);
		var endTime=TimeManager.Instance.checkTimeEndNum(parseInt(PlayerInfo.instance.free_box_updatetime));
		if(endTime > 0 && PlayerInfo.instance.free_box_count <=0){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007367",4));
			return;
		}
		SocketManager.Instance.out.sendOpenFreeBox();
	}

	/**升级后检测是否开启某些功能 */
	__proto.updateOpenState=function(){
		HallMgr.OPEN_GUILD_LEVEL=parseInt(ConfigModel.getConfigData(1084).ConfigValue);
	}

	/**
	*检查PVE是否到达等级开放
	*
	*/
	__proto.checkPVEOpen=function(){
		if(this.btnPve){
			var pveOpenLvl=ConfigModel.getConfigData(1139).ConfigValue;
			var isOpenPve=PlayerInfo.instance.grade >=pveOpenLvl;
			this.btnPve.mouseEnabled=isOpenPve;
			this.btnPve.filters=isOpenPve ? null :[FilterUtils.darkFilter(0.4)];
			this.btnPve_lock.visible=!isOpenPve;
			this.pveLevelTxt.text=LanguageMgr.Ins.GetLan("14300131",pveOpenLvl);
		}
	}

	/**
	*更新公会红点
	*/
	__proto.onChangeGuildPoint=function(flag){
		(flag===void 0)&& (flag=true);
		if(PlayerInfoMgr.ins.hasGuild){
			this.guildTipsPoint.visible=GuildMgr.ins.hasBoxAct || GuildShopMgr.ins.isShowRedPoint || GuildBuffMgr.ins.isShowRedPoint;
			}else{
			this.guildTipsPoint.visible=flag;
		}
	}

	__proto.init=function(){
		var _$this=this;
		if(!ShopMgr.ins.IS_OPEN_PAY){
			this.btn_addGems.visible=false;
			this.btn_addGems.disabled=true;
			this.imgFill.visible=true;
		}else this.imgFill.visible=false;
		this.onUpdateInvitePay();
		this.checkPVEOpen();
		if(RoomMgr.ins.isAgain){
			RoomMgr.ins.createRoom();
			RoomMgr.ins.isAgain=false;
		}
		InviteDialog.filterTimeout(RoomMgr.ins.inviteInfos);
		if(RoomMgr.ins.inviteInfos.length > 0){
			UIMgr.ins.openView("InviteDialog",Handler.create(this,function(view){
				view.init(RoomMgr.ins.inviteInfos);
			}));
		}
		SoundMgr.instance.soundMuted(PlayerInfo.instance.isOn(8));
		SoundMgr.instance.musicMuted(PlayerInfo.instance.isOn(7));
		this.updateOpenState();
		PlacardControl.ins.setup();
		if(PlayerInfoMgr.ins.recordIsFirst){
			PlayerInfoMgr.ins.recordIsFirst=false;
			SocketManager.Instance.record.guideClickLoaderRecords(4);
		}
		this.updateView();
		if(PlayerInfoMgr.ins.IsLevelUp && !SkillMgr.ins.isInSkillView){
			PlayerInfoMgr.ins.IsLevelUp=false;
			UIMgr.ins.openView("LevelUp");
		}
		this.img_Icon.skin=PlayerInfo.instance.avatar;
		this._wifi=new AniSkeleton("ui_wifi","ui",2);
		this._wifi.x=645;
		this._wifi.y=24;
		this.rightUpBox.addChild(this._wifi);
		this.friendsTipsPoint.visible=false;
		this.emailTipsPoint.visible=false;
		this.img_vipTipPoint.visible=false;
		if(PlayerInfo.instance.addGold !=-1){
			Laya.timer.once(500,this,function(){
				DropItemUtil.showEffect("ui_gold",PlayerInfo.instance.addGold,new Point(550,400),HallMainView.GOLD_POS);
			});
			Laya.timer.once(1500,this,function(){
				if(PlayerInfo.instance.win_box_index-PlayerInfo.instance.history_win_box_index > 0){
					if(PlayerInfo.instance.win_box_index <=5){
						var pt1=this.localToGlobal(new Point(_$this.winBox.x+30,_$this.winBox.y+_$this.winBox.height));
						DropItemUtil.showEffect("ui_yaoshi",1,new Point(550,400),pt1,1);
					}
				}
			});
		}
		if(TipsManager.Instance().topicMsgInfo && TipsManager.Instance().topicMsgInfo.isFirst && !NewGuideMgr.ins.isNewGuide){
			TipsManager.Instance().topicMsgInfo.isFirst=false;
			UIMgr.ins.openView("GameNoticeTips");
		}
		if(PlayerInfo.instance.serverId >=0 && PlayerInfo.instance.roomId !="" && !NewGuideMgr.ins.isNewGuide){
			SocketManager.Instance.out.sendBattleMatch(5,PlayerInfo.instance.serverId,PlayerInfo.instance.roomId);
		}
		this.onChangeGuildPoint();
		EventMgr.ins.event("add_brief_chat_box",[this.chatBriefView]);
		this.addRoleAni();
		this.updateMonthCardState();
		this.onUpdateMailRed();
		VipMgr.ins.setup();
		this.updataVipState();
		BarrageMgr.ins.setup();
	}

	__proto.addRoleAni=function(){
		var type=PlayerInfo.instance.sex==1 ? RoleModelType.ManModel :RoleModelType.WamanModel;
		if(this.heroShowSkeleton)this.heroShowSkeleton.updateRoleId(type);
		else{
			this.heroShowSkeleton=new HeroShowSkeleton();
			this.heroShowSkeleton.name="roleSkeleton";
			this.heroShowSkeleton.x=321;
			this.heroShowSkeleton.y=446;
			this.heroShowSkeleton.scale(0.9,0.9);
			this.addChild(this.heroShowSkeleton);
		}
	}

	__proto.updateFreeBox=function(){
		var time=parseFloat(PlayerInfo.instance.free_box_updatetime);
		var endTime=TimeManager.Instance.checkTimeEndNum(time);
		if(endTime <=0 || PlayerInfo.instance.free_box_count > 0){
			this.freeBoxGet.visible=true;
			this.freeBoxPro.visible=false;
			this.craeteFreeEffect();
		}
		else{
			if(this._downFreeBoxEffect)this._downFreeBoxEffect.destroy(true);this._downFreeBoxEffect=null;
			if(this._upFreeBoxEffect)this._upFreeBoxEffect.destroy(true);this._upFreeBoxEffect=null;
			this.freeBoxGet.visible=false;
			this.freeBoxPro.visible=true;
			this.onFreeBoxTimeHandler(time);
			Laya.timer.loop(1000,this,this.onFreeBoxTimeHandler,[time]);
		}
		this.freeName.text=LanguageMgr.Ins.GetLan("9007238");
		this.winGet.text=LanguageMgr.Ins.GetLan("9007383");
		this.freeBoxGet.text=LanguageMgr.Ins.GetLan("9007383");
	}

	__proto.onFreeBoxTimeHandler=function(time){
		var endTime=TimeManager.Instance.checkTimeEndNum(time);
		if(endTime>0){
			this.txtTime1.text=TimeManager.Instance.convertTimeToStr(endTime/1000);
			this.pogBar.value=endTime/(4*60*60*1000);
		}
		else{
			this.freeBoxPro.visible=false;
			this.freeBoxGet.visible=true;
			Laya.timer.clear(this,this.onFreeBoxTimeHandler);
		}
	}

	__proto.craeteFreeEffect=function(){
		if(this._downFreeBoxEffect==null){
			this._downFreeBoxEffect=new AniSkeleton("ui_downboxsf","ui");
			this._downFreeBoxEffect.x=127;
			this._downFreeBoxEffect.y=32;
			this._downFreeBoxEffect.mouseEnabled=false;
			this._downFreeBoxEffect.scale(0.8,0.8);
			this.freeBG.addChild(this._downFreeBoxEffect);
		}
		if(this._upFreeBoxEffect==null){
			this._upFreeBoxEffect=new AniSkeleton("sc","ui");
			this._upFreeBoxEffect.x=127;
			this._upFreeBoxEffect.y=32;
			this._upFreeBoxEffect.mouseEnabled=false;
			this._upFreeBoxEffect.blendMode="add";
			this.freeBox.addChild(this._upFreeBoxEffect);
		}
	}

	__proto.updateWinBox=function(){
		this.winName.text=LanguageMgr.Ins.GetLan("9007248");
		if(PlayerInfo.instance.win_box_count <=0){
			if(this._downWinBoxEffect)this._downWinBoxEffect.destroy();this._downWinBoxEffect=null;
			if(this._upWinBoxEffect)this._upWinBoxEffect.destroy();this._upWinBoxEffect=null;
			this.boxWinProgress.visible=false;
			this.winGet.visible=false;
			this.winTimerText.visible=true;
			var time=parseFloat(PlayerInfo.instance.win_box_updatetime);
			var endTime=TimeManager.Instance.checkTimeEndNum(time);
			this.onWinBoxTimeHandler(time);
			Laya.timer.loop(1000,this,this.onWinBoxTimeHandler,[time]);
		}
		else{
			this.winTimerText.visible=false;
			this.winbox_progress.value=PlayerInfo.instance.win_box_index / 5;
			this.txtNum.text=PlayerInfo.instance.win_box_index+"/"+5;
			if(PlayerInfo.instance.win_box_index >=5 && PlayerInfo.instance.win_box_count > 0){
				this.boxWinProgress.visible=false;
				this.winGet.visible=true;
				this.craeteWinEffect();
			}
			else{
				if(this._downWinBoxEffect)this._downWinBoxEffect.destroy();this._downWinBoxEffect=null;
				if(this._upWinBoxEffect)this._upWinBoxEffect.destroy();this._upWinBoxEffect=null;
				this.winGet.visible=false;
				this.boxWinProgress.visible=true;
			}
		}
	}

	__proto.onWinBoxTimeHandler=function(time){
		var endTime=TimeManager.Instance.checkTimeEndNum(time);
		if(endTime>0){
			this.winTimerText.text=TimeManager.Instance.getTimemilSecTxt(endTime);
		}
		else{
			this.boxWinProgress.visible=true;
			Laya.timer.clear(this,this.onWinBoxTimeHandler);
		}
	}

	__proto.craeteWinEffect=function(){
		if(this._downWinBoxEffect==null){
			this._downWinBoxEffect=new AniSkeleton("ui_downboxsf","ui");
			this._downWinBoxEffect.x=127;
			this._downWinBoxEffect.y=32;
			this._downWinBoxEffect.mouseEnabled=false;
			this._downWinBoxEffect.scale(0.8,0.8);
			this.winBG.addChild(this._downWinBoxEffect);
		}
		if(this._upWinBoxEffect==null){
			this._upWinBoxEffect=new AniSkeleton("sc","ui");
			this._upWinBoxEffect.x=95;
			this._upWinBoxEffect.y=57;
			this._upWinBoxEffect.mouseEnabled=false;
			this._upWinBoxEffect.blendMode="add";
			this.winBox.addChild(this._upWinBoxEffect);
		}
	}

	__proto.updateView=function(){
		var index=0;
		var rankVo=RankModel.getDivison(PlayerInfo.instance.trophy);
		var data=PathMgr.getMedalRes(rankVo);
		this.imgMedal.skin="assets/textrue/medal/icon"+rankVo.Division+".png";
		if(this.lab_userName.text!=PlayerInfo.instance.nickName){
			Laya.timer.once(200,this,this.addRoleAni);
		}
		this.lab_userName.text=PlayerInfo.instance.nickName==null ? PlayerInfo.instance.qqNickName :PlayerInfo.instance.nickName;
		this.lab_level.text=PlayerInfo.instance.grade.toString();
		this.lab_gold.text=PlayerInfo.instance.gold.toString();
		this.lab_diamond.text=PlayerInfo.instance.diamond.toString();
		this.pinkDmd.text=PlayerInfo.instance.pinkDiamond.toString();
		var maxExp=PlayerInfoMgr.ins.getPlayerExp(PlayerInfo.instance.grade);
		var currExp=PlayerInfo.instance.exp;
		this.pro_exp.value=currExp / maxExp;
		this.lab_progressNum.text=currExp+"/"+maxExp;
		this.updateFreeBox();
		this.updateWinBox();
		this.onUpdateSkillPort();
	}

	__proto.addEvent=function(){
		var self=this;
		self.on("click",self,self.onClickHandler);
		self.btn_rank.clickHandler=new Handler(self,self.onRank);
		self.btn_skill.clickHandler=new Handler(self,self.onSkill);
		self.btn_badge.clickHandler=new Handler(self,self.onBadge);
		self.btn_medal.clickHandler=new Handler(self,self.onQuest);
		self.btn_shop.clickHandler=new Handler(self,self.onShop);
		self.btnSeason.clickHandler=new Handler(self,self.onSeason);
		self.btnPvp.clickHandler=new Handler(self,self.onEnterRoom);
		self.btnPve.clickHandler=new Handler(self,self.onEnterSolo);
		self.btn_vip.clickHandler=new Handler(self,self.onVip);
		self.img_Icon.on("click",self,self.onShowPlayerMessage);
		self.imgMedal.on("click",self,self.onShowArena);
		self.freeBox.on("click",self,self.onClickFreeBox);
		self.boxWin.on("click",self,self.onClickWinBox);
		self.yueCard.on("click",self,self.onClickMonthCard);
		self.master_Growing_Card.on("click",self,self.onClickPrivilege,[self.master_Growing_Card]);
		self.master_Resource_Card.on("click",self,self.onClickPrivilege,[self.master_Resource_Card]);
		self.btnInvitePay.on("click",self,self.onClickInvitePay);
		PlayerInfoMgr.ins.on("player_info_change",self,self.onUpdate);
		PlayerInfoMgr.ins.on("item_change_update",self,self.onAddItem);
		this.friendBtn.clickHandler=new Handler(self,this.onOpenFriendWindow);
		EventMgr.ins.on("UPDATE_ALL_IMAGE",self,self.onUpdate);
		EventMgr.ins.on("PLAYER_LEVEL_UP",self,self.onLevelUp);
		EventMgr.ins.on("close_view",self,self.close_view);
		EventMgr.ins.on("SKILL_UPGRADE",self,self.onUpdateSkillPort);
		EventMgr.ins.on("SET_HALL_MAIL_RED",self,self.onUpdateMailRed);
		EventMgr.ins.on("UPDATE_WIFI_STATE",self,self.onUpdateWifiState);
		EventMgr.ins.on("recv_showDoateTip",self,this.showDoateTip);
		EventMgr.ins.on("recv_QuestData",self,this.onQuestCmd);
		EventMgr.ins.on("enter_Mission",self,this.onEnterMission);
		EventMgr.ins.on("get_key",self,this.onGetKey);
		EventMgr.ins.on("close_QuestMainView",self,this.onEnterMission);
		EventMgr.ins.on("REMOVE_DESK_EFFECT",self,this.onRemoveDeskEffect);
		EventMgr.ins.on("UPDATE_FRIEND_CHAT",self,this.onSetFriendsSpot);
		EventMgr.ins.on("U_QUEST_MSG",self,this.onQuestMsg);
		EventMgr.ins.on("CLOSE_MIAN_MODE_CHOOSE_VIEW",self,this.closeModeView);
		EventMgr.ins.on("msg_chat_data_change",self,self.onSetFriendsSpot);
		EventMgr.ins.on("msg_update_system_info",self,self.onSetFriendsSpot);
		EventMgr.ins.on("ACTIVITY_PLACARD_UPDATE",self,self.onOpenAplacarView)
		EventMgr.ins.on("recv_QuestMsgNum",self,self.onUpdateQuestMsgNum)
		EventMgr.ins.on("change_guild_point",self,self.onChangeGuildPoint);
		EventMgr.ins.on("player_vip_upgrade",self,self.onVipUpgrade);
		InvitePayMgr.ins.on("InvitePayConst.EVENT_UPDATE_ALL",this,this.onUpdateInvitePay);
	}

	__proto.closeModeView=function(){
		if(this._modeChooseView){
			this._modeChooseView.destroy();
			this._modeChooseView=null;
		}
		this.heroShowSkeleton.visible=this.mainbox.visible=this.activityView.visible=true;
		this.chat_box.y=455;
	}

	__proto.onSeason=function(){
		UIMgr.ins.openView("SeasonPage");
	}

	/**
	*设置好友红点
	*/
	__proto.onSetFriendsSpot=function(){
		if(UIMgr.ins.isShowView("FriendsWindow"))return;
		this.friendsTipsPoint.visible=true;
	}

	__proto.onRemoveDeskEffect=function(){}
	// }
	__proto.onQuestCmd=function(type,handler){
		switch(type){
			case 2:{
					this.onBadge(handler);
					break ;
				}
			case 3:{
					RoomMgr.ins.createPVPRoom();
					break ;
				}
			case 4:{
					RoomMgr.ins.createRoom();
					break ;
				}
			case 9:
				if(GuildMgr.ins.myGuildInfo){
					UIMgr.ins.openView("ChatFullView",Handler.create(this,function(chatFullView){
					}));
					}else {
					UIMgr.ins.openView("GuildList");
				}
				break ;
			}
	}

	__proto.onUpdateWifiState=function(type){
		if(this._wifi){
			this._wifi.play(type,true);
		}
	}

	__proto.onUpdateMailRed=function(){
		this._mainScene.isDestroyCreateOnce=true;
		if(UIMgr.ins.isShowView("EmailMainView")){
			this.emailTipsPoint.visible=false;
		}
		else {
			this.emailTipsPoint.visible=EmailMgr.ins.isRed;
		}
	}

	__proto.onVip=function(){
		UIMgr.ins.openView("VipView");
	}

	__proto.onRank=function(){
		UIMgr.ins.openView("Ranking");
	}

	__proto.onSkill=function(){
		if(Browser.now()-this._lastCreatTime < 1000){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("10001135"));
			return;
		}
		this._lastCreatTime=Browser.now();
		SocketManager.Instance.record.iconClickRecords(1);
		SkillMgr.ins.isOnClick=true;
		UIMgr.ins.openView("SkillSystem");
		EventMgr.ins.event("guide_resetSkillBtn");
		this.onUpdateSkillPort();
	}

	__proto.onEnterRoom=function(){
		HallWeakGuide.ins.clearHallWeakGuideStep(1);
		var len=SkillMgr.ins.getCurrentCount();
		var max=SkillMgr.ins.model.getMaxUserSkillNum();
		if(len!=max){
			TipsManager.Instance().showLanTips(14300095,max);
			return;
		}
		HallMgr.ins.loadingModeChooseRes(Handler.create(this,this.openModeChooseView,[0]));
	}

	__proto.onEnterSolo=function(){
		HallMgr.ins.loadingModeChooseRes(Handler.create(this,this.openModeChooseView,[1]));
	}

	__proto.openModeChooseView=function(type){
		if(this._modeChooseView){
			this._modeChooseView.destroy();
			this._modeChooseView=null;
		}
		this._modeChooseView=new MainModeChooseView(type);
		this.viewbox.addChild(this._modeChooseView);
		EventMgr.ins.event("OpenChooseView");
		this.chat_box.y=565;
		this.heroShowSkeleton.visible=this.mainbox.visible=this.activityView.visible=false;
	}

	__proto.onUpdateSkillPort=function(){
		var redPortCount=SkillMgr.ins.redPortCount();
		this.skillRed.visible=redPortCount>0&&!SkillMgr.ins.isOnClick;
		this.skillRedTxt.text=redPortCount+"";
	}

	__proto.onLevelUp=function(){
		this.islevelup=true;
		if(!SkillMgr.ins.isInSkillView && !UIMgr.ins.getView("Quest")){
			PlayerInfoMgr.ins.IsLevelUp=false;
			this.islevelup=false;
			UIMgr.ins.openView("LevelUp");
		}
		this.updateOpenState();
		if(PlayerInfo.instance.grade==HallMgr.OPEN_GUILD_LEVEL || PlayerInfo.instance.grade==HallMgr.OPEN_FOUR_LEVEL){
			UIMgr.ins.openView("LevelUp");
			UIMgr.ins.closeView("Quest");
			UIMgr.ins.closeView("ShowGetGoodsView");
			PlayerInfoMgr.ins.IsLevelUp=false;
			this.islevelup=false;
		}
		this.checkHallWeakGuide();
		this.checkPVEOpen();
	}

	__proto.onVipUpgrade=function(){
		PlayerInfoMgr.ins.IsVipUpgrade=false;
		this.isVipUpgrade=false;
		UIMgr.ins.openView("VipUpgrade");
	}

	__proto.close_view=function(viewType){
		this.checkHallWeakGuide();
	}

	__proto.onAddItem=function(){
		this.updateWinBox();
	}

	__proto.removeEvent=function(){
		var self=this;
		this.stage.off("click",self,this.hideBtnPanel);
		self.off("click",self,self.onClickHandler);
		self.img_Icon.off("click",self,self.onShowPlayerMessage);
		self.imgMedal.off("click",self,self.onShowArena);
		self.freeBox.off("mousedown",self,self.onClickFreeBox);
		self.boxWin.off("mousedown",self,self.onClickWinBox);
		self.yueCard.off("click",self,self.onClickMonthCard);
		self.master_Growing_Card.off("click",self,self.onClickPrivilege);
		self.master_Resource_Card.off("click",self,self.onClickPrivilege);
		self.btnInvitePay.off("click",self,self.onClickInvitePay);
		Laya.timer.clear(self,self.onFreeBoxTimeHandler);
		Laya.timer.clearAll(self);
		PlayerInfoMgr.ins.off("player_info_change",self,self.onUpdate);
		PlayerInfoMgr.ins.off("item_change_update",self,self.onAddItem);
		EventMgr.ins.off("UPDATE_ALL_IMAGE",self,self.onUpdate);
		EventMgr.ins.off("PLAYER_LEVEL_UP",self,self.onLevelUp);
		EventMgr.ins.off("close_view",self,self.close_view);
		EventMgr.ins.off("SKILL_UPGRADE",self,self.onUpdateSkillPort);
		EventMgr.ins.off("SET_HALL_MAIL_RED",self,self.onUpdateMailRed);
		EventMgr.ins.off("UPDATE_WIFI_STATE",self,self.onUpdateWifiState);
		EventMgr.ins.off("disable_HallMainView",self,self.disable);
		EventMgr.ins.off("recv_showDoateTip",self,this.showDoateTip);
		EventMgr.ins.off("recv_QuestData",self,this.onQuestCmd);
		EventMgr.ins.off("enter_Mission",self,this.onEnterMission);
		EventMgr.ins.off("get_key",self,this.onGetKey);
		EventMgr.ins.off("close_QuestMainView",self,this.onEnterMission);
		EventMgr.ins.off("REMOVE_DESK_EFFECT",self,this.onRemoveDeskEffect);
		EventMgr.ins.off("U_QUEST_MSG",self,this.onQuestMsg)
		EventMgr.ins.off("UPDATE_FRIEND_CHAT",self,this.onSetFriendsSpot);
		EventMgr.ins.off("CLOSE_MIAN_MODE_CHOOSE_VIEW",self,this.closeModeView);
		EventMgr.ins.off("msg_chat_data_change",self,self.onSetFriendsSpot);
		EventMgr.ins.off("msg_update_system_info",self,self.onSetFriendsSpot);
		EventMgr.ins.off("recv_QuestMsgNum",self,self.onUpdateQuestMsgNum)
		EventMgr.ins.off("ACTIVITY_PLACARD_UPDATE",self,self.onOpenAplacarView)
		EventMgr.ins.off("change_guild_point",self,self.onChangeGuildPoint);
		InvitePayMgr.ins.off("InvitePayConst.EVENT_UPDATE_ALL",this,this.onUpdateInvitePay);
		this.clearBoxIconTween();
	}

	__proto.onEnterMission=function(value){
		this.isOpentask=((value instanceof component.NButton ));
		if(this.isOpentask){
			}else{
			if(this.aniFinger){
				this.boxTools.addChild(this.aniFinger);
				this.aniFinger.pos(this.btn_medal.x,this.btn_medal.y);
			}
		}
	}

	__proto.showBtnPanel=function(){
		this.stage.on("click",this,this.hideBtnPanel);
	}

	__proto.hideBtnPanel=function(evt){}
	__proto.onUpdate=function(){
		this.updateView();
		this.updateWinBox();
		this.addRoleAni();
		this.checkPVEOpen();
		if(PlayerInfo.instance.isShowAreaChange){
			UIMgr.ins.openView("ARENACHANGE");
		}
		this.updateMonthCardState();
		this.updataVipState();
	}

	__proto.updataVipState=function(){
		var vipLv=PlayerInfo.instance.vipLv;
		this.viplv.skin="assets/textrue/vip/ui_v"+vipLv+".png";
		if(vipLv>0){
			this.btn_vip.gray=false;
			this.viplv.gray=false;
			this.img_vipTipPoint.visible=!PlayerInfo.instance.isGetWeekReward;
		}
		else{
			this.btn_vip.gray=true;
			this.viplv.gray=true;
			this.img_vipTipPoint.visible=false;
		}
	}

	__proto.updateMonthCardState=function(){
		var allSpecialCardEndTimes=PlayerInfo.instance.allSpecialCardEndTimes;
		for(var cardType in allSpecialCardEndTimes){
			var deviationTime=TimeManager.Instance.checkTimeEndNum(allSpecialCardEndTimes[cardType]);
			if(deviationTime<=0){
				this.setMonthCardGray(cardType,true);
			}
			else {
				this.setMonthCardGray(cardType,false);
			}
		}
	}

	__proto.setMonthCardGray=function(type,isGray){
		type=int(type);
		switch(type){
			case 1 :
				this.yueCard.gray=isGray;
				break ;
			case 2 :
				break ;
			case 4 :
				this.master_Growing_Card.gray=isGray;
				break ;
			case 3 :
				this.master_Resource_Card.gray=isGray;
				break ;
			}
	}

	__proto.onShowArena=function(){
		SocketManager.Instance.record.iconClickRecords(16);
		UIMgr.ins.openView("PVPArena");
	}

	__proto.onShowPlayerMessage=function(){
		SocketManager.Instance.record.iconClickRecords(6);
		UIMgr.ins.openView("PlayerMessageView",Handler.create(this,function(view){
			view.setData();
		}));
	}

	__proto.onQuest=function(handler){
		UIMgr.ins.openView("Quest");
	}

	__proto.onShop=function(){
		SocketManager.Instance.record.iconClickRecords(7);
		UIMgr.ins.openView("ShopView");
	}

	__proto.onBadge=function(handler){
		this.onChangeGuildPoint(false);
		SocketManager.Instance.record.iconClickRecords(5);
		if(PlayerInfo.instance.consortiaID !="-1"){
			if(!handler){
				GuildMgr.ins.openGuildPage();
				}else{
				UIMgr.ins.openView("GuildInfoPage",handler);
			}
			}else{
			GuildShopMgr.ins.isShowRedPoint=false;
			UIMgr.ins.openView("GuildList");
		}
		EventMgr.ins.event("click_btnGuild");
	}

	__proto.onClickHandler=function(evt){
		if(this.tipsView.visible){
			if(evt.target.name !="master_Resource_Card" && evt.target.name !="master_Growing_Card"){
				this.tipsView.visible=false;
			}
		}
		switch(evt.target){
			case this.btn_addGems:
				SocketManager.Instance.record.iconClickRecords(7);
				ShopMgr.ins.selectedIndex=4;
				UIMgr.ins.openView("ShopView");
				break ;
			case this.btn_setup:
				SocketManager.Instance.record.iconClickRecords(18);
				UIMgr.ins.openView("SettingWindow");
				break ;
			case this.btnEmail:
				this.emailTipsPoint.visible=false;
				SocketManager.Instance.record.iconClickRecords(17);
				UIMgr.ins.openView("EmailMainView");
				break ;
			case this.btn_addFen:
				ShopMgr.ins.selectedIndex=2;
				UIMgr.ins.openView("ShopView");
				break ;
			case this.btnGold:
				ShopMgr.ins.selectedIndex=1;
				UIMgr.ins.openView("ShopView");
				break ;
			}
	}

	/**打开好友 **/
	__proto.onOpenFriendWindow=function(e){
		UIMgr.ins.openView("FriendsWindow");
		this.friendsTipsPoint.visible=false;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		HallWeakGuide.ins.clearHallWeakGuideStep(1);
		this.removeEvent();
		var i=0;
		var url;
		for (i=1;i <=16;i++){
			if(i<10){
				url="assets/textrue/badge/ui_icon_0"+i+".png";
				}else{
				url="assets/textrue/badge/ui_icon_"+i+".png";
			}
			Laya.loader.clearRes(url);
		};
		var url1;
		for (var j=1;j <=10;j++){
			if(i<10){
				url="assets/textrue/medal/duanwei_0"+j+"1.png";
				url1="assets/textrue/medal/duanwei_0"+j+"2.png";
				}else{
				url="assets/textrue/medal/duanwei_"+j+"1.png";
				url1="assets/textrue/medal/duanwei_"+j+"2.png";
			}
			Laya.loader.clearRes(url);
			Laya.loader.clearRes(url1);
			i<=4 && Laya.loader.clearRes(this['player_head_'+(i-1)]['skin']);
		}
		this.heroShowSkeleton.destroy();
		if(this.boxFree){
			this.boxFree.destroy(true);
			this.boxFree=null;
		}
		if(this._isBattleAni){
			this._isBattleAni.destroy(true);
			this._isBattleAni=null;
		}
		if(this.boxWin){
			this.boxWin.destroy(true);
			this.boxWin=null;
		}
		if(this._wifi){
			this._wifi.destroy(true);
			this._wifi=null;
		}
		UIMgr.ins.closeView("TreasureBoxDetailWindow");
		if(this._wxRwanBtn){
			this._wxRwanBtn.destroy();
			this._wxRwanBtn=null;
		}
		this.closeModeView();
		laya.ui.BaseView.prototype.destroy.call(this,destroyChild);
		this.removeSelf();
		PlacardControl.ins.clearTimes();
		if(this._downFreeBoxEffect)this._downFreeBoxEffect.destroy(true);this._downFreeBoxEffect=null;
		if(this._upFreeBoxEffect)this._upFreeBoxEffect.destroy(true);this._upFreeBoxEffect=null;
		if(this._downWinBoxEffect)this._downWinBoxEffect.destroy();this._downWinBoxEffect=null;
		if(this._upWinBoxEffect)this._upWinBoxEffect.destroy();this._upWinBoxEffect=null;
		if(this._levelBoxControl)this._levelBoxControl.dispose();this._levelBoxControl=null;
		this.heroShowSkeleton=null;
		this._mainScene=null;
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.scaleX=_bestFitWidth/1136;
		this.scaleY=_bestFitHeight/640;
	}

	__proto.onClickInvitePay=function(e){
		this.btnInvitePay.visible=InvitePayMgr.ins.payList.length > 0;
		if (InvitePayMgr.ins.payList.length > 0){
			UIMgr.ins.openView("InvitePayReceiveView");
		}
	}

	__proto.onUpdateInvitePay=function(){
		this.btnInvitePay.visible=InvitePayMgr.ins.payList.length > 0;
		if(this.btnInvitePay.visible){
			this.startInviteEffert();
			}else {
			this.clearBoxIconTween();
		}
	}

	/**邀请付费缓动 **/
	__proto.startInviteEffert=function(){
		Tween.clearAll(this.btnInvitePay);
		Tween.to(this.btnInvitePay,{y:414,alpha:0.5},800,null,Handler.create(this,this.tweenCompHandler));
	}

	__proto.tweenCompHandler=function(){
		Tween.to(this.btnInvitePay,{y:426,alpha:1},800,null,Handler.create(this,this.startInviteEffert));
	}

	/**清除宝箱缓动 **/
	__proto.clearBoxIconTween=function(){
		Tween.clearAll(this.btnInvitePay);
	}

	__getset(0,__proto,'modeChooseView',function(){
		return this._modeChooseView;
	});

	HallMainView.onGoldLabelComplete=function(label){
		Tween.clearAll(label);
		label.removeSelf();
		label.destroy(true);
		label=null;
	}

	__static(HallMainView,
	['GOLD_POS',function(){return this.GOLD_POS=new Point(0,0);}
	]);
	return HallMainView;
})(HallMainViewUI)


//class ui.vip.GetVIpRewardViewUI extends laya.ui.Window
var GetVIpRewardViewUI=(function(_super){
	function GetVIpRewardViewUI(){
		this.mPanel=null;
		this.Itemlist=null;
		this.btnGet=null;
		this.btnFb=null;
		GetVIpRewardViewUI.__super.call(this);
		var temp=GetVIpRewardViewUI.uiView;
		GetVIpRewardViewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(GetVIpRewardViewUI.uiView);
	}

	__class(GetVIpRewardViewUI,'ui.vip.GetVIpRewardViewUI',_super);
	var __proto=GetVIpRewardViewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.vip.view.item.RewardItem",RewardItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	GetVIpRewardViewUI.uiView="eJzdU11vmzAU/S/eqwOYBJLwtlZqVWmaqmXSWk1VZeAGrBmb2qY0i/LfZ75WljGVSXsaFkLXvuec63MvR2QOJaAIfWEilTXCqFSy1Cg6opqlJkcRIf4SoxxYlhsUrdbeCaMkZzxF0dfjgL4paAZj8MEC/S1GLyhaBHjgCsINRvobExaioKYqdTMwj3HmlCKzcM2+w7VilhotV9j3sb/CZOOhV31/uz2d8CxdQpbkHyjrhHK4s9cgf1WF19awPhdNpMgUNRWnhkmhW/V5VMRrrvM227jiMfPHSa8IacmDpsc9N6ciq2yqe5kzARrcaTG/V6MiyaW6t2U6wRDdtdFY/ZYK4GfivtfdzA+2P/sUNnvPVFlIMWAG17tB3CVKcn5B1a4rN5FFIYWb63a/M3RiQj8wbcb6ncaNgYJ3JwpKoMZWHk7BP7UeNOljElUJw4rmvJBpxUE7z6y0L9QOs6nOLygFIgX1uePrAtv6B7tGTbqojJHizKhl2E10EJLBnNiIa2jK1q8uuBV7zBSA6DvDaQx8ZwfbMnh9eEvTlNnTCC187DVrSLySwnqM3itG+bB3KblUtgr0bt8++A/fSccnB67/N9frN8etYounCqxPnImnasawzfcx3DRDxjSLuU3eU65h5OtV/LutB+Bc1v+Lr/uXfTzL0IfTD77M8xI=";
	return GetVIpRewardViewUI;
})(Window$2)


//class ui.vip.VipRewardPreviewUI extends laya.ui.Window
var VipRewardPreviewUI=(function(_super){
	function VipRewardPreviewUI(){
		this.img_bg=null;
		this.btn_close=null;
		this.img=null;
		this.txt_title=null;
		this.btn_ok=null;
		this.list_item=null;
		this.txt_onBtn=null;
		VipRewardPreviewUI.__super.call(this);
		var temp=VipRewardPreviewUI.uiView;
		VipRewardPreviewUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(VipRewardPreviewUI.uiView);
	}

	__class(VipRewardPreviewUI,'ui.vip.VipRewardPreviewUI',_super);
	var __proto=VipRewardPreviewUI.prototype;
	__proto.createUI=function(uiData){
		View.regComponent("modules.vip.view.item.PreviewItem",PreviewItem);
		ClassUtils.createByJson(uiData,this,this);
	}

	VipRewardPreviewUI.uiView="eJyFU7GO00AQ/RW0tFaIY8dnuyMNnHQgpCABQqdo7UzsUda71nqd5IhSUFAgUSDR0VGeTrq/iu43GNsXx8kFksZZe+bNm/ferpm5yYGF7APKqVoyi+Va5QUL1xuLxSmKKQs/r3dFlxlPoFPDblg46Fts1TyWODUpC70+/V9wTQ2YJZMooY5ijpLOscqyFyVODBYpzksuk14u6+/4BV5ppGksGFi2E1heYNn2kD6lgElqWOh4BBvzOIWXNJtFaDKes83Gaum9HZXGKHlE0LVrgm6wIxUZOYmFKuApr6gGmCTELMJHaoJHIKjmYNQpJXy/HuT5ne2fjlghlzVyF+6qnnHEu4GzvWGrrLNX1qwMqWhERcLAivRh2x/ftj/vHr7fbn997ejmUs9MSTMmiSuI5kT1Y8xeA1JlrISqMJ/z2YU97NObSFXGG12CxbjApF4ApAF9VgUyrZHBbWkP+3YrwwLzWujkH+4PHGvgWbZr2UFnB2J13mjHbqLoVAz2Vqv5oQlKVgQSDSD/5/AVFuZ4NaexxN9n3fVbRwQ1TNBAVo3LeQwfm1uhIQdu6ECCpONYKyFGXI8PCKVF/b7JxYmL907DAmF52aC3nHQpDWZVQaampYCiR/L2qspeRaR32KZBTkG/bxCbA218fSaGg+Dxgl/sc+gfxFDJkZH7GD78ud/e/+5e3GE3gOTuLoBvkLYu1Mw8+8SPkjirf20SZ1wUp6J4vfkLYrGFmw==";
	return VipRewardPreviewUI;
})(Window$2)


//class ui.hall.VipUpgradePageUI extends laya.ui.Window
var VipUpgradePageUI=(function(_super){
	function VipUpgradePageUI(){
		this.box=null;
		this.boxContent=null;
		this.txt=null;
		this.boxunLock=null;
		this.box_icon=null;
		this.img_vipIcon=null;
		this.img_prelevel=null;
		this.img_level=null;
		VipUpgradePageUI.__super.call(this);
		var temp=VipUpgradePageUI.uiView;
		VipUpgradePageUI.uiView=manager.JSMgr.convertUI(temp);
		this.createUI(VipUpgradePageUI.uiView);
	}

	__class(VipUpgradePageUI,'ui.hall.VipUpgradePageUI',_super);
	var __proto=VipUpgradePageUI.prototype;
	__proto.createUI=function(uiData){
		ClassUtils.createByJson(uiData,this,this);
	}

	VipUpgradePageUI.uiView="eJyVVMuO0zAU/RVkttY0ztPJkllApUFCAgEjVFVJ6iamaRwlTqdDlQViNXu2rFjwDfzQDPwF13k1TENbFCmRk+vzuPc4OyRvM4Y89I6nC3GDMMpykRXI26EbvpAx8ohhaxitRVmwN3EuygjeybxkGMWMR7FEnqtpFUZhzJMF8j7sOsRnYjuEu0WeaQHSFnk2hefGz6EoqIv8NIxFfo087cLqVu/r1XnAuqXXwEPYS5FKlko0hjBd+xF7hNFIIy4gtc4NA8QUK57CjoRtWFJmk5LPi5il0Uc+X/CLLI0ApeCf2POcAwPSMKUYbjrat8e2qgofpXZIza3bPbXtuGPUsgy4L8aJia2Yyd/U5pj7Kz9gySMJxG3t0719rW+n3EqolwweHvr14/vvr5/fTl+Rh7uf99++KCEyFyt2KRKhqp/S0AxI2L8HZ3tJhonREkbzGrTDB71Zwa6XPMxFIZbyybX/gnHYHXZ4yyVza19+wiPVkhAGy3JUVbNBZw9j4TQzBUsbXvAgYV1y+5CU6ZUIV/+ZEa1vkaNadDimgEfzIDocEtUxIRp2HOyagykRW6uO+iBNunXLGThZ+kkxtDLnoUjPdmI287b3aaejVprEjWad2JhYmDiQvIEZqp1K+4C6Ec/X0XzDs6nS32vwi4LJYqIyByObwHclR3lUtaSTE/oJq/8btF3Uvw2qkjE7oYMYtQ7DNI+cclYTnbJE2gNsuH07yf70KH9ZzmrwUwY3Wuus66d5sp8tuUHpv8jPYyYjzLP6+gNPDO69";
	return VipUpgradePageUI;
})(Window$2)


/**
*loading界面
*@author joe.liu
*
*/
//class modules.loading.view.LoadingView extends ui.menu.LoadUI
var LoadingView=(function(_super){
	function LoadingView(){
		this.index=0;
		LoadingView.__super.call(this);
		var idAry=JSMgr.getRandomTipsArray(1050);
		if(idAry.length >0){
			this.showGuildTips(idAry)
			Laya.timer.loop(2000,this,this.showGuildTips,[idAry]);
		}
		this.labVersion.text=LanguageMgr.Ins.GetLan("9070040");
		this.lab0.text=LanguageMgr.Ins.GetLan("9070041");
		this.lab1.text=LanguageMgr.Ins.GetLan("9070042");
	}

	__class(LoadingView,'modules.loading.view.LoadingView',_super);
	var __proto=LoadingView.prototype;
	__proto.showGuildTips=function(idList){
		this.lab_content.text=LanguageMgr.Ins.GetLan(idList[this.index++]);
		if(this.index >=idList.length)
			this.index=0;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		Laya.timer.clear(this,this.showGuildTips);
		laya.ui.BaseView.prototype.destroy.call(this,destroyChild);
	}

	return LoadingView;
})(LoadUI)


/**
*小loading界面
*@author weiqiang.huang
*
*/
//class modules.loading.view.SmallLoading extends ui.login.SmallLoadingUI
var SmallLoading=(function(_super){
	function SmallLoading(viewType){
		this.curViewType=null;
		SmallLoading.__super.call(this);
		this.curViewType=viewType;
		this.isOpenResize=true;
		LayerMgr.ins.addToLayer(this,1);
		this.btn_close.visible=false;
	}

	__class(SmallLoading,'modules.loading.view.SmallLoading',_super);
	var __proto=SmallLoading.prototype;
	// }
	__proto.setProgress=function($value){
		this._progressBar.value=$value;
		var progress=Math.floor($value *100);
		this.lab_number.text=StringUtils.formate("{0}%",progress);
	}

	__proto.onClose=function(){
		UIFactory.ins.stopLoadView(this.curViewType);
		this.destroy(true);
		this.curViewType=null;
	}

	return SmallLoading;
})(SmallLoadingUI)


//class modules.vs.VSScene extends modules.scene.BaseScene
var VSScene=(function(_super){
	function VSScene(sceneType,sceneData,needLoading){
		this.view=null;
		this._battleCreateMsg=null;
		this.battlePrepareMsg=null;
		this.createMsgs=[];
		this.isBattleLoadOver=false;
		this._battlePrepareMsg=null;
		this.resourceId=null;
		this.battleMapMsg=null;
		(needLoading===void 0)&& (needLoading=true);
		VSScene.__super.call(this,SceneType.VS_SCENE,sceneData,true);
		this._battleCreateMsg=sceneData[0];
		EventMgr.ins.on("vs_load_pk",this,this.checkEnterBattle);
		EventMgr.ins.on("recv_battlemapmsg",this,this.recvBattleMapMsg);
		EventMgr.ins.on("recv_battleQuitMatch",this,this.recvBattleQuitMatch);
		EventMgr.ins.on("SYNC_BATTLE_CREATE_MSG",this,this.syncBattleCreateMsg);
		EventMgr.ins.on("SYNC_BATTLE_PREPARE",this,this.syncBattlePrepare);
	}

	__class(VSScene,'modules.vs.VSScene',_super);
	var __proto=VSScene.prototype;
	__proto.recvBattleQuitMatch=function(res){
		HallMgr.ins.show(this._battleCreateMsg.battleType);
	}

	__proto.recvBattleMapMsg=function(battleMapMsg){
		this.battleMapMsg=battleMapMsg;
		this.checkEnterBattle();
	}

	__proto.init=function(){
		if(this._battleCreateMsg.battleType==11){
			this.view=new MulitPveVSMenu(this._battleCreateMsg);
		}
		else if(this._battleCreateMsg.battleType==3 || this._battleCreateMsg.battleType==8){
			this.view=new FourVSMenu(this._battleCreateMsg);
		}
		else if (this._battleCreateMsg.battleType==9){
			this.view=new PveMenu(this._battleCreateMsg);
		}
		else if(this._battleCreateMsg.battleType==10){
			this.view=new PvpVSMenu(this._battleCreateMsg);
		}
		else{
			this.view=new TwoVSMenu(this._battleCreateMsg);
		}
		this.addChild(this.view);
		this.view.initMenu();
		this.view.syncBattleCreateMsg(this._battleCreateMsg);
	}

	__proto.syncBattlePrepare=function(res){
		this.battlePrepareMsg=res;
	}

	__proto.syncBattleCreateMsg=function(res){
		this.createMsgs.push(res);
	}

	__proto.preLoadBattle=function(){
		var sceneVO=SceneModel.getSceneConfig(this._battlePrepareMsg.sceneId);
		this.resourceId=sceneVO.SceneResource;
		var res=[];
		res.push({url:StringUtils.formate("assets/atlas/scene/{0}.atlas",sceneVO.SceneResource),type:"atlas"});
		res.push({url:"assets/atlas/battle/menu.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/shuzi.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/biaoqing.atlas",type:"atlas"});
		res.push({url:"assets/maps/"+this.resourceId+"_1.map",type:"arraybuffer"});
		res.push({url:"assets/atlas/battle/menu/xt.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/menu/headhp.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/menu/rolehp.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/menu/ld.atlas",type:"atlas"});
		res.push({url:"assets/atlas/skillItem.atlas",type:"atlas"});
		res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/battle/menu.atlas",type:"atlas"});
		res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/battle/menu/ld.atlas",type:"atlas"});
		if (this.battlePrepareMsg){
			switch(this.battlePrepareMsg.battleType){
				case 9:{
						res.push({url:"assets/atlas/battle/menu/pve.atlas",type:"atlas"});
						res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/battle/menu/pve.atlas",type:"atlas"});
						break ;
					}
				}
		}
		Laya.loader.load(res,Handler.create(this,this.onBattleResLoaded));
	}

	__proto.onBattleResLoaded=function(){
		if(this.destroyed){
			HallMgr.ins.show();
			return;
		}
		this.isBattleLoadOver=true;
		var mapUrl=StringUtils.formate("assets/maps/{0}_1.map",this.resourceId);
		var buffer=Laya.loader.getRes(mapUrl);
		Laya.loader.clearRes(mapUrl,true);
		GC.triggerGC(1);
		if(buffer){
			var byteArray=new ByteArray();
			byteArray.writeArrayBuffer(buffer);
			byteArray.position=0;
			TileReader.readMap(byteArray);
			this.checkEnterBattle();
			}else{
			this.preLoadBattle();
		}
	}

	__proto.checkEnterBattle=function(){
		if(this.isBattleLoadOver && this.view.checkOk()&& this.battleMapMsg){
			Laya.timer.once(1000,this,this._enterBattle);
		}
	}

	__proto._enterBattle=function(){
		if(this.destroyed){
			HallMgr.ins.show();
			return;
		}
		VSScene.transition(Handler.create(this,this.__enterBattle));
	}

	__proto.__enterBattle=function(){
		if(this.destroyed){
			HallMgr.ins.show();
			return;
		}
		this.enterBattle(this._battlePrepareMsg,this.battleMapMsg,false);
	}

	__proto.enterBattle=function(res,battleMapMsg,needLoading){
		SceneMgr.ins.runWithSceneByType(SceneType.BATTLE_SCENE,[res,battleMapMsg],needLoading);
	}

	__proto.updateScene=function(){
		for(var i=0;i < this.createMsgs.length;i++){
			var msg=this.createMsgs[i];
			this.view.syncBattleCreateMsg(msg);
		}
		this.createMsgs.splice(0);
		if(this.battlePrepareMsg){
			this._battlePrepareMsg=this.battlePrepareMsg;
			this.view.syncBattlePrepare(this.battlePrepareMsg);
			this.preLoadBattle();
			this.battlePrepareMsg=null;
		}
	}

	__proto.exit=function(){
		EventMgr.ins.off("vs_load_pk",this,this.checkEnterBattle);
		EventMgr.ins.off("recv_battlemapmsg",this,this.recvBattleMapMsg);
		EventMgr.ins.off("recv_battleQuitMatch",this,this.recvBattleQuitMatch);
		EventMgr.ins.off("SYNC_BATTLE_CREATE_MSG",this,this.syncBattleCreateMsg);
		EventMgr.ins.off("SYNC_BATTLE_PREPARE",this,this.syncBattlePrepare);
		Laya.timer.clear(this,this._enterBattle);
		this.view && this.view.destroy();
		this.view=null;
		this._battleCreateMsg=null;
		this.battlePrepareMsg=null;
		this._battlePrepareMsg=null;
		this.battleMapMsg=null;
		this.createMsgs && (this.createMsgs.length=0);
		this.createMsgs=[];
		_super.prototype.exit.call(this);
	}

	__getset(0,__proto,'preloadRes',function(){
		var res=[];
		res.push({url:"assets/atlas/vs.atlas",type:"atlas"});
		res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/vs.atlas",type:"atlas"});
		return res;
	});

	VSScene.transition=function(handler){
		if(!VSScene.transImage){
			VSScene.transImage=new Image("assets/textrue/common/blank.png");
			VSScene.transImage.scale(ResizeMgr.bestFitWidth/10,ResizeMgr.bestFitHeight/10);
			VSScene.transImage.alpha=0;
			Tween.to(VSScene.transImage,{alpha:1},500,null,Handler.create(VSScene,VSScene.transEnd,[handler]));
			Laya.stage.addChild(VSScene.transImage);
			VSScene.transImage.zOrder=9999999999;
		}
	}

	VSScene.transEnd=function(handler){
		handler.run();
	}

	VSScene.unTransition=function(handler){
		if(VSScene.transImage){
			VSScene.transImage.alpha=1;
			Tween.to(VSScene.transImage,{alpha:0},500,null,Handler.create(VSScene,VSScene.unTransEnd,[handler]));
		}
	}

	VSScene.unTransEnd=function(handler){
		VSScene.transImage.removeSelf();
		VSScene.transImage.destroy(true);
		VSScene.transImage=null;
		handler.run();
	}

	VSScene.transImage=null;
	return VSScene;
})(BaseScene)


//class modules.newguide.view.GuideTalkView extends ui.newguide.GuideTalkUI
var GuideTalkView=(function(_super){
	function GuideTalkView(){
		/**大黄鸡 */
		this.bigChickAni=null;
		/**对话语言ID */
		this.talkLanIds=[];
		/**对白语言索引 0第一条对白，*/
		this.talkIdx=0;
		this.closeHander=null;
		this.initFingerY=0;
		GuideTalkView.__super.call(this);
		this.isCheckGuide=false;
		this.mouseEnabled=true;
		this.mouseThrough=true;
		this.init();
	}

	__class(GuideTalkView,'modules.newguide.view.GuideTalkView',_super);
	var __proto=GuideTalkView.prototype;
	__proto.init=function(){
		this.bigChickAni=new AniSkeleton("npc_xiaoji","guide");
		this.bigChickAni.x=150;
		this.bigChickAni.y=200;
		this.bottomBox.addChild(this.bigChickAni);
		this.blankBg.mouseEnabled=true;
		this.blankBg.on("click",this,this.onClick);
		this.initFingerY=this.mc_finger.y;
		this.toDown();
	}

	__proto.toUp=function(){
		Tween.to(this.mc_finger,{y:this.initFingerY-25},300,null,Handler.create(this,this.toDown));
	}

	__proto.toDown=function(){
		Tween.to(this.mc_finger,{y:this.initFingerY+25},300,null,Handler.create(this,this.toUp));
	}

	__proto.setData=function(closeHander,content,npcName){
		if(content==null)content="";
		if(npcName==null)npcName="";
		if(this.closeHander && this.closeHander["_id"] > 0){
			this.closeHander.recover();
			this.closeHander=null;
		}
		this.closeHander=closeHander;
		this.txtName.text=npcName;
		this.txtContent.text=content;
	}

	__proto.onClick=function(){
		if(this.closeHander){
			this.closeHander.run();
			this.closeHander=null;
		}
		UIMgr.ins.closeView("GuideTalkView");
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.bigChickAni){
			this.bigChickAni.stop();
			this.bigChickAni.removeSelf();
			this.bigChickAni.destroy();
			this.bigChickAni=null;
		}
		if(this.closeHander && this.closeHander["_id"] > 0){
			this.closeHander.recover();
			this.closeHander=null;
		}
		Tween.clearAll(this.mc_finger);
		laya.ui.BaseView.prototype.destroy.call(this,destroyChild);
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.blankBg.width=ResizeMgr.bestFitWidth;
		this.blankBg.height=ResizeMgr.bestFitHeight;
	}

	return GuideTalkView;
})(GuideTalkUI)


//class modules.room.view.PVPRoomView extends ui.room.PVPRoomViewUI
var PVPRoomView=(function(_super){
	function PVPRoomView(){
		this._lastCreatTime=NaN;
		this.aniSkeleton=null;
		this._inviteView=null;
		this.isHouseOwner=false;
		this.oneselfRoomPlayerMsg=null;
		PVPRoomView.__super.call(this);
		this.initUI();
		this.addEvents();
		this.isOpenResize=true;
	}

	__class(PVPRoomView,'modules.room.view.PVPRoomView',_super);
	var __proto=PVPRoomView.prototype;
	__proto.initUI=function(){
		this.aniSkeleton=new AniSkeleton("ui1","ui");
		this.startGameBtn_Effect.addChild(this.aniSkeleton);
		this.roomTitle.text=LanguageMgr.Ins.GetLan("9070023");
		this.roomTitle.text=LanguageMgr.Ins.GetLan("9070023");
		this.roleList.dataSource=RoomMgr.ins.roomPlayerList;
		this.updateStartBtnState();
		this.updateMeiLiBox();
		this.updateSkillState();
		var guideComp=this.startGameBtn;
		if(HallWeakGuide.ins.hallWeakGuideValue==2){
			HallWeakGuide.ins.hallWeakGuideStep(3,guideComp,new Point(guideComp.width*0.5,guideComp.height*0.5));
		}
		else{
			if(HallWeakGuide.ins.isOpenWeakGuide){
				Laya.timer.once(3000,HallWeakGuide.ins,HallWeakGuide.ins.hallWeakGuideStep,[3,guideComp,new Point(guideComp.width*0.5,guideComp.height*0.5)]);
			}
		}
	}

	__proto.getOneselfRoomPlayerMsg=function(){
		var info;
		for(var $each_info in RoomMgr.ins.roomPlayerList){
			info=RoomMgr.ins.roomPlayerList[$each_info];
			if(info.userId==PlayerInfo.instance.playerId){
				return info;
			}
		}
		return null
	}

	__proto.updateStartBtnState=function(){
		this.isHouseOwner=PlayerInfo.instance.playerId==RoomMgr.ins.masterId;
		if(this.isHouseOwner){
			this.btnIcon.skin="language/"+LanguageMgr.Ins.country+"/room/ui_kaishi.png";
			}else{
			if(this.isReady){
				this.btnIcon.skin="language/"+LanguageMgr.Ins.country+"/room/ui_quxiao.png";
				}else{
				this.btnIcon.skin="language/"+LanguageMgr.Ins.country+"/room/ui_zhunbei.png";
			}
		}
	}

	__proto.updateMeiLiBox=function(){
		this.oneselfRoomPlayerMsg=this.getOneselfRoomPlayerMsg();
		this.meiliLevelTxt.text="Lv "+this.oneselfRoomPlayerMsg.usercpLevel;
		var curFriendSkill=SkillModel.getFriendSkillByLevel(this.oneselfRoomPlayerMsg.usercpLevel);
		var nextSkill=SkillModel.getSkillConfigData(curFriendSkill.NextSkill);
		var isMaxLevel=nextSkill==null?true:false;
		if(isMaxLevel){
			this.meiliBar.value=1;
			this.meiliBarTxt.text=LanguageMgr.Ins.GetLan("9002314");
			}else{
			var percent=PlayerInfo.instance.friendValue/curFriendSkill.CostSkillPoint;
			this.meiliBar.value=percent;
			this.meiliBarTxt.text=PlayerInfo.instance.friendValue+"/"+curFriendSkill.CostSkillPoint;
		}
	}

	__proto.updateSkillState=function(){
		var active=this.getRoomOnlinePlayerNum()>=2;
		if(active){
			this.skillIcon1.gray=false;
			this.skillIcon2.gray=false;
			this.skillName1.text=LanguageMgr.Ins.GetLan("9002310");
			this.skillName2.text=LanguageMgr.Ins.GetLan("9001046");
			this.skillName1.color="#ffffff";
			this.skillName2.color="#ffffff";
			}else{
			this.skillIcon1.gray=true;
			this.skillIcon2.gray=true;
			this.skillName1.text=LanguageMgr.Ins.GetLan("9002309");
			this.skillName2.text=LanguageMgr.Ins.GetLan("9002309");
			this.skillName1.color="#ff5050";
			this.skillName2.color="#ff5050";
		}
	}

	__proto.addEvents=function(){
		this.returnBtn.on("click",this,this.onReturn);
		this.helpBtn.on("click",this,this.onHelp);
		this.tipBtn.on("click",this,this.onTips);
		this.skillCardBtn.on("click",this,this.onSkillCard);
		this.taskBtn.on("click",this,this.onTask);
		this.startGameBtn.on("click",this,this.onStartGame);
		this.skillBtn1.on("click",this,this.onFriendSkillTips1);
		this.skillBtn2.on("click",this,this.onFriendSkillTips2);
		EventMgr.ins.on("OpenPVPRoomInviteBox",this,this.openPVPRoomInviteBox);
		EventMgr.ins.on("recv_room_prepare",this,this.recvPrepareMsg);
		EventMgr.ins.on("recv_room_playerupdate",this,this.recvPlayerUpdate);
		EventMgr.ins.on("ROOM_KICKED_OUT",this,this.roomKickedOut);
	}

	__proto.removeEvent=function(){
		EventMgr.ins.off("OpenPVPRoomInviteBox",this,this.openPVPRoomInviteBox);
		EventMgr.ins.off("recv_room_prepare",this,this.recvPrepareMsg);
		EventMgr.ins.off("recv_room_playerupdate",this,this.recvPlayerUpdate);
		EventMgr.ins.off("ROOM_KICKED_OUT",this,this.roomKickedOut);
	}

	__proto.onReturn=function(){
		if(!this.isHouseOwner && this.isReady){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002336"));
			return;
		};
		var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
		msg.opType=2;
		SocketManager.Instance.sendSocketData(0x2745,msg);
		UIMgr.ins.closeView("PVPRoomView");
	}

	__proto.onHelp=function(){
		UIMgr.ins.openView("CommonHelpView",Handler.create(this,function(view){
			var mpTextTitle=LanguageMgr.Ins.GetLan("9070002");
			var mpTextDesc=LanguageMgr.Ins.GetLan("14300219")+LanguageMgr.Ins.GetLan("14300220")+LanguageMgr.Ins.GetLan("14300221")+LanguageMgr.Ins.GetLan("14300222")+LanguageMgr.Ins.GetLan("14300223")+LanguageMgr.Ins.GetLan("14300224");
			view.initView(mpTextTitle,mpTextDesc);
		}));
	}

	__proto.onTips=function(){
		UIMgr.ins.openView("HtmlHelpView",Handler.create(this,function(view){
			var mpTextDesc=LanguageMgr.Ins.GetLan("14300210")+"<br>"+LanguageMgr.Ins.GetLan("14300211")+"<br>"+
			LanguageMgr.Ins.GetLan("14300212")+"<br>"+LanguageMgr.Ins.GetLan("14300213")+"<br>"+LanguageMgr.Ins.GetLan("14300214")+"<br>"+
			LanguageMgr.Ins.GetLan("14300215")+"<br>"+LanguageMgr.Ins.GetLan("14300216")+"<br>"+LanguageMgr.Ins.GetLan("14300217")+"<br>"+
			LanguageMgr.Ins.GetLan("14300218");
			view.initHelp(LanguageMgr.Ins.GetLan("9002312"),mpTextDesc);
			view=null;
		}));
	}

	// }));
	__proto.onSkillCard=function(){
		if(Browser.now()-this._lastCreatTime < 1000){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("10001135"));
			return;
		}
		this._lastCreatTime=Browser.now();
		SocketManager.Instance.record.iconClickRecords(1);
		UIMgr.ins.openView("SkillSystem");
		EventMgr.ins.event("guide_resetSkillBtn");
	}

	__proto.onTask=function(){
		if(Browser.now()-this._lastCreatTime < 1000){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("10001135"));
			return;
		}
		UIMgr.ins.openView("Quest");
	}

	__proto.sendFriendType=function(){
		var msg=new com.road.ddt.proto.IntMsg();
		msg.value=2;
		SocketManager.Instance.sendSocketData(0x2802,msg);
	}

	__proto.onStartGame=function(){
		if(this.isHouseOwner){
			if(this.isAllReady){
				var battlePlayerNum=this.getBattlePlayerNum();
				var battleType=battlePlayerNum==1 ? 1 :10;
				if(this.getRoomOnlinePlayerNum()>=2){
					this.sendFriendType();
				};
				var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
				msg.opType=1;
				msg.battleType=battleType;
				SocketManager.Instance.sendSocketData(0x2745,msg);
			}
			else{
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300098"));
			}
		}
		else{
			if(this.isReady){
				var msg2=new com.road.ddt.proto.battle.BattleMatchOpMsg();
				msg2.opType=7;
				msg2.param1=0;
				SocketManager.Instance.sendSocketData(0x2745,msg2);
				}else{
				var msg1=new com.road.ddt.proto.battle.BattleMatchOpMsg();
				msg1.opType=7;
				msg1.param1=1;
				SocketManager.Instance.sendSocketData(0x2745,msg1);
			}
		}
	}

	__proto.onFriendSkillTips1=function(){
		var _$this=this;
		UIMgr.ins.openView("FriendSkillTips",Handler.create(this,function(view){
			var skill=SkillModel.getFriendSkillByLevel(PlayerInfo.instance.friendSkillLevel);
			var active=_$this.getRoomOnlinePlayerNum()>=2;
			view.initView(skill,1,active);
		}));
	}

	__proto.onFriendSkillTips2=function(){
		var _$this=this;
		UIMgr.ins.openView("FriendSkillTips",Handler.create(this,function(view){
			var skill=SkillModel.getFriendSkillByLevel(PlayerInfo.instance.friendSkillLevel);
			var active=_$this.getRoomOnlinePlayerNum()>=2;
			view.initView(skill,2,active);
		}));
	}

	/**
	*获取战斗人数 即战斗类型
	*@return
	*
	*/
	__proto.getBattlePlayerNum=function(){
		var num=0;
		var battlePlayerMsg;
		for(var $each_battlePlayerMsg in RoomMgr.ins.roomPlayerList){
			battlePlayerMsg=RoomMgr.ins.roomPlayerList[$each_battlePlayerMsg];
			if(battlePlayerMsg.siteState==1 || battlePlayerMsg.siteState==3 || battlePlayerMsg.siteState==4){
				num++;
			}
		}
		return num;
	}

	/**
	*获取房间当前在线人数
	*@return
	*
	*/
	__proto.getRoomOnlinePlayerNum=function(){
		var num=0;
		var battlePlayerMsg;
		for(var $each_battlePlayerMsg in RoomMgr.ins.roomPlayerList){
			battlePlayerMsg=RoomMgr.ins.roomPlayerList[$each_battlePlayerMsg];
			if(battlePlayerMsg.siteState==3 || battlePlayerMsg.siteState==4){
				num++;
			}
		}
		return num;
	}

	__proto.openPVPRoomInviteBox=function(){
		if(this._inviteView==null){
			this._inviteView=new PVPRoomInviteView();
			this._inviteView.right=0;
			this._inviteView.y=47;
			this.addChild(this._inviteView);
		}
		else{
			this._inviteView.visible=true;
		}
	}

	__proto.recvPrepareMsg=function(){
		this.roleList.refresh();
		this.updateStartBtnState();
		this.updateMeiLiBox();
		this.updateSkillState();
		if(this.getRoomOnlinePlayerNum()>=2){
			if(this._inviteView)this._inviteView.visible=false;
		}
	}

	__proto.recvPlayerUpdate=function(msg){
		this.roleList.refresh();
		this.updateStartBtnState();
		this.updateMeiLiBox();
		this.updateSkillState();
		if(this.getRoomOnlinePlayerNum()>=2){
			if(this._inviteView && !this._inviteView.destroyed)this._inviteView.visible=false;
		}
	}

	__proto.roomKickedOut=function(){
		UIMgr.ins.closeView("FriendSkillTips");
		UIMgr.ins.closeView("PVPRoomView");
	}

	__proto.hideView=function(isPlaySound){
		(isPlaySound===void 0)&& (isPlaySound=false);
		laya.ui.BaseView.prototype.hideView.call(this,isPlaySound);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		HallWeakGuide.ins.clearAllHallWeekGuide();
		this.removeEvent();
		if(this.aniSkeleton){
			this.aniSkeleton.removeSelf();
			this.aniSkeleton.destroy();
			this.aniSkeleton=null;
		}
		laya.ui.BaseView.prototype.destroy.call(this,destroyChild);
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		laya.ui.BaseView.prototype.onResize.call(this,_bestFitWidth,_bestFitHeight);
		this.scaleX=_bestFitWidth/1136;
		this.scaleY=_bestFitHeight/640;
		if(this._inviteView !=null){
			this._inviteView.right=0;
		}
	}

	__getset(0,__proto,'isAllReady',function(){
		var battlePlayerMsg;
		for(var $each_battlePlayerMsg in RoomMgr.ins.roomPlayerList){
			battlePlayerMsg=RoomMgr.ins.roomPlayerList[$each_battlePlayerMsg];
			if(battlePlayerMsg.siteState==2){
				return false;
			}
		}
		return true;
	});

	__getset(0,__proto,'isReady',function(){
		var bool=false;
		var battlePlayerMsg;
		for(var $each_battlePlayerMsg in RoomMgr.ins.roomPlayerList){
			battlePlayerMsg=RoomMgr.ins.roomPlayerList[$each_battlePlayerMsg];
			if(battlePlayerMsg.userId==PlayerInfo.instance.playerId){
				bool=battlePlayerMsg.siteState==3 ? true :false;
			}
		}
		return bool;
	});

	return PVPRoomView;
})(PVPRoomViewUI)


//class modules.room.view.QRView extends ui.room.QRViewUI
var QRView=(function(_super){
	function QRView(){
		QRView.__super.call(this);
		this.nickName.text=PlayerInfo.instance.nickName;
		this.descText1.text="邀请您进入房间";
		this.descText2.text="扫码进入";
		this.backBtn.on("click",this,this.onBackHandler);
	}

	__class(QRView,'modules.room.view.QRView',_super);
	var __proto=QRView.prototype;
	__proto.onBackHandler=function(){
		UIMgr.ins.closeView("QRView");
	}

	return QRView;
})(QRViewUI)


/**
*赛季继承动画
*/
//class modules.season.SeasonInhertPage extends ui.pvp.season.SeasonInheritPageUI
var SeasonInhertPage=(function(_super){
	function SeasonInhertPage(){
		this.starNum=0;
		this.seasonNum=0;
		this.skelton=null;
		this.aniArr=[];
		this.starArr=[];
		this.posArr=[];
		SeasonInhertPage.__super.call(this);
		this.isOpenResize=true;
		PvpMgr.ins.showSeasonResult=false;
		this.init();
		this.setData();
		this.show();
		this.bg.mouseEnabled=true;
		this.mouseThrough=false;
	}

	__class(SeasonInhertPage,'modules.season.SeasonInhertPage',_super);
	var __proto=SeasonInhertPage.prototype;
	__proto.show=function(){
		Tween.from(this.icon,{scaleX:4,scaleY:4},200,Ease.linearOut,Handler.create(this,this.tweenStar));
	}

	__proto.showRankImg=function(rankVo){
		var data=PathMgr.getMedalRes(rankVo);
		this.imgRank.skin=data.textRes;
		this.icon.skin=data.iconRes;
	}

	__proto.setData=function(){
		var star=PlayerInfo.instance.division==10 ? 1 :PlayerInfo.instance.currentStar;
		var srVo=PVPModel.getSeasonReward(PlayerInfo.instance.division,star,PvpMgr.ins.seasonNum);
		if(srVo){
			this.icon.skin=PathMgr.getDivisionIcon(srVo.SeasonChange);
			var rankVo=RankModel.getRankVO(srVo.SeasonChange);
			this.showRankImg(rankVo);
			this.starNum=srVo.SeasonStarNum;
		}
	}

	__proto.shareComplete=function(){
		TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002186"));
	}

	__proto.init=function(){
		this.img0.skin="language/"+LanguageMgr.Ins.country+"/pvp/ui_jixu.png";
		this.posArr[4]=[[118,25],[70,34],[166,34],[28,60],[210,60]];
		this.posArr[3]=[[30,60],[ 89,34],[151,34],[210,60]];
		this.posArr[2]=[[118,25],[70,34],[166,34]];
		this.posArr[1]=[[89,34],[ 151,34]];
		this.posArr[0]=[[118,25]];
		this.skelton=new AniSkeleton("shengjietx","ui",1,true);
		this.skelton.blendMode="add";
		this.skelton.pos(this.icon.x,this.icon.y+60);
		this.starBox.visible=false;
		this.btnClose.clickHandler=Handler.create(this,this.onClose,null,false);
		this.btnShare.clickHandler=Handler.create(this,this.onShare,null,false);
		this.btnClose.visible=false;
	}

	__proto.tweenStar=function(){
		this.addChildAt(this.skelton,2);
		if(PlayerInfo.instance.division>=10){
			this.maxBox.visible=true;
			this.txtMax.text="X"+this.starNum.toString();
			this.btnClose.visible=true;
			return;
		}
		this.maxBox.visible=false;
		var arr=this.posArr[this.starNum-1];
		for (var i=0;i < this.starNum;i++){
			var star=new MedalStar();
			star.pos(arr[i][0]-25,arr[i][1]-20);
			this.starBox.addChild(star);
			this.showStarAni(star,1);
		}
		this.starBox.visible=true;
		this.btnClose.visible=true;
	}

	__proto.showStarAni=function(tempStar,index){
		var tempAni=new AniSkeleton("starchange","ui",index,false,Handler.create(this,this.starShowEnd));
		tempAni.x=tempStar.width/2;
		tempAni.y=tempStar.height/2;
		tempStar.mpImgStar.visible=false;
		this.aniArr.push(tempAni);
		this.starArr.push(tempStar);
		tempStar.addChild(tempAni);
	}

	__proto.starShowEnd=function(){}
	// TODO Auto Generated method stub
	__proto.onShare=function(){
		EventMgr.ins.event("SHARE",[ShareConst.SEASON_RANK_SETTLE]);
	}

	__proto.onClose=function(){
		this.btnClose.visible=false;
		UIMgr.ins.closeView("SeasonInhert");
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.btnClose.clickHandler){
			this.btnClose.clickHandler.recover();
			this.btnClose.clickHandler=null;
		}
		Tween.clearAll(this.icon);
		Tween.clearAll(this.starBox);
		if(this.skelton){
			this.skelton.destroy();
		}
		for (var i=0;i < this.aniArr.length;i++){
			var ske=this.aniArr[i];
			if(ske){
				ske.destroy();
				ske=null;
			}
		}
		this.starArr.length=0;
		this.aniArr.length=0;
		this.aniArr=null;
		this.starArr=null;
		laya.ui.BaseView.prototype.destroy.call(this,destroyChild);
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.x=(ResizeMgr.bestFitWidth-1360)*0.5;
		this.y=(ResizeMgr.bestFitHeight-640)*0.5;
	}

	return SeasonInhertPage;
})(SeasonInheritPageUI)


/**
*赛季结算动画
*/
//class modules.season.SeasonResultPage extends ui.pvp.season.SeasonResultPageUI
var SeasonResultPage=(function(_super){
	function SeasonResultPage(){
		this.skelton=null;
		this._chestData=null;
		this.aniArr=[];
		this.starArr=[];
		this.curConfig=null;
		SeasonResultPage.__super.call(this);
		this.isOpenResize=true;
		PvpMgr.ins.showSeasonResult=true;
		this.init();
		this.setData();
		this.show();
		this.bg.mouseEnabled=true;
		this.mouseThrough=false;
	}

	__class(SeasonResultPage,'modules.season.SeasonResultPage',_super);
	var __proto=SeasonResultPage.prototype;
	__proto.show=function(){
		Tween.from(this.icon,{scaleX:4,scaleY:4},200,Ease.linearOut,Handler.create(this,this.updateReward));
	}

	__proto.showStarAni=function(tempStar,index,handler){
		var tempAni=new AniSkeleton("starchange","ui",index,false,handler);
		tempAni.x=tempStar.width/2;
		tempAni.y=tempStar.height/2;
		tempStar.mpImgStar.visible=false;
		this.aniArr.push(tempAni);
		this.starArr.push(tempStar);
		tempStar.addChild(tempAni);
	}

	__proto.initStar=function(star,maxStar){
		this.addChildAt(this.skelton,2);
		this.mpNodeStar.destroyChildren();
		var iconNum=maxStar;
		var isEven=iconNum % 2==1?0:1;
		for(var i=0;i < iconNum;i++){
			var tempStar=new StartItem();
			tempStar.anchorX=0.5
			tempStar.anchorY=0.5
			tempStar.mpBgStar.width=tempStar.mpImgStar.width=80;
			tempStar.mpBgStar.height=tempStar.mpImgStar.height=80;
			var offset=(i-Math.floor(iconNum / 2));
			tempStar.x=offset *(50)+isEven *50/2;
			if(isEven==1 && iconNum==4){
				if(i==1){
					offset=0;
					}else if(i==0){
					offset=-1;
				}
				}else if(isEven==1 && iconNum==2){
				offset=0;
			}
			tempStar.y=Math.abs(offset)*9;
			if(Math.abs(offset)==2){
				if(offset > 0){
					tempStar.x=tempStar.x-8;
					}else{
					tempStar.x=tempStar.x+8;
				}
				tempStar.y=tempStar.y+10;
			}
			if(star > i){
				tempStar.mpBgStar.visible=false;
				this.showStarAni(tempStar,1);
				}else{
				tempStar.mpImgStar.visible=false;
			}
			this.mpNodeStar.addChild(tempStar);
		}
		this.showBox();
	}

	__proto.onShare=function(){
		EventMgr.ins.event("SHARE",[ShareConst.SEASON_SETTLE]);
	}

	__proto.shareComplete=function(){
		TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002186"));
	}

	__proto.showRankImg=function(rankVo){
		var data=PathMgr.getMedalRes(rankVo);
		this.imgRank.skin=data.textRes;
		this.icon.skin=data.iconRes;
	}

	/**更新奖励 */
	__proto.updateReward=function(){
		var div=PlayerInfo.instance.division;
		var rankVo=RankModel.getRankVO(div);
		this.showRankImg(rankVo);
		this.curConfig=rankVo;
		var curStar=0;
		if(rankVo.Division < 10){
			curStar=PlayerInfo.instance.currentStar;
			this.maxBox.visible=false;
			this.initStar(PvpMgr.ins.starNum,rankVo.StarNum);
		}
		else{
			curStar=1;
			this.maxBox.visible=false;
			this.txtMax.text="x"+rankVo.Star;
			this.showBox();
		};
		var divName=LanguageMgr.Ins.GetLan(rankVo.Name);
		divName=divName.substr(2);
		var srVo=PVPModel.getSeasonReward(div,curStar,PvpMgr.ins.seasonNum);
		if(srVo){
			var arr=srVo.SeasonReward.split(",");
			if(arr){
				var chestArr=(arr [0]).split("|");
				var itemId=chestArr[0];
				this._chestData=ItemModel.getItemConfigData(itemId);
				this.img2.skin=PathMgr.getBoxIcon(this._chestData.Icon);
				divName=this._chestData.ItemID < 0 ? "" :divName;
				this.txt2.text=divName+LanguageMgr.Ins.GetLan(this._chestData.Name.toString());
				this.txtnum2.text=chestArr[1];
				if(arr.length>=2){
					this.box0.visible=true;
					this.box1.x=124;
					var gemArr=(arr [1]).split("|");
					var gemvo=ItemModel.getItemConfigData(gemArr[0]);
					this.txtnum1.text=gemArr[1]+"";
					this.txt1.text=LanguageMgr.Ins.GetLan(gemvo.Name.toString());
					this.img1.skin=PathMgr.getBoxIcon(gemvo.Icon);
					}else{
					this.box0.visible=false;
					this.box1.x=36;
				}
			}
			else {
				this.box0.visible=false;
				this.box1.visible=false;
			}
		}
		else {
			this.box0.visible=false;
			this.box1.visible=false;
		}
		srVo=null;
	}

	__proto.onClose=function(){
		this.btnClose.visible=false;
		UIMgr.ins.closeView("SeasonResult");
		UIMgr.ins.openView("SeasonInhert");
	}

	__proto.init=function(){
		this.skelton=new AniSkeleton("shengjietx","ui",1,true);
		this.skelton.blendMode="add";
		this.skelton.pos(this.icon.x,this.icon.y+60);
		this.titleImg.skin="language/"+LanguageMgr.Ins.country+"/pvp/ui-saijijiesuan.png";
		this.img0.skin="language/"+LanguageMgr.Ins.country+"/pvp/ui_jixu.png";
		this.itemBox.visible=false;
		this.btnClose.visible=false;
		this.btnClose.clickHandler=Handler.create(this,this.onClose,null,false);
		this.btnShare.clickHandler=Handler.create(this,this.onShare,null,false);
	}

	__proto.setData=function(){
		this.numClip.value=PvpMgr.ins.seasonNum.toString();
		if(LanguageMgr.Ins.country=="English"){
			this.imgS.x=PvpMgr.ins.seasonNum>9? 508-80 :546-83;
			this.numClip.x=508;
			}else{
			this.imgS.x=PvpMgr.ins.seasonNum>9? 508 :546;
		}
	}

	__proto.showBox=function(){
		Tween.from(this.itemBox,{y:540,alpha:0},300,Ease.linearOut,null);
		this.itemBox.visible=true;
		this.btnClose.visible=true;
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.x=(ResizeMgr.bestFitWidth-1360)*0.5;
		this.y=(ResizeMgr.bestFitHeight-640)*0.5;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.btnClose.clickHandler){
			this.btnClose.clickHandler.recover();
			this.btnClose.clickHandler=null;
		}
		Tween.clearAll(this.icon);
		Tween.clearAll(this.mpNodeStar);
		Tween.clearAll(this.itemBox);
		this.mpNodeStar.destroyChildren();
		if(this.skelton){
			this.skelton.destroy();
			this.skelton=null;
		}
		for (var i=0;i < this.aniArr.length;i++){
			var ske=this.aniArr[i];
			if(ske){
				ske.destroy();
				ske=null;
			}
		}
		this.starArr.length=0;
		this.aniArr.length=0;
		this.aniArr=null;
		this.starArr=null;
		this._chestData=null;
		this.curConfig=null;
		laya.ui.BaseView.prototype.destroy.call(this,destroyChild);
	}

	return SeasonResultPage;
})(SeasonResultPageUI)


//class modules.vs.VSMenu extends ui.vs.NewVSMenuUI
var VSMenu=(function(_super){
	function VSMenu(battleCreateMsg){
		this.battleCreateMsg=null;
		this._bestFitWidth=NaN;
		this._bestFitHeight=NaN;
		this.maxTime=0;
		this.matchRoles=[];
		this._tipsIndex=0;
		this.heroMsg=null;
		VSMenu.__super.call(this);
		this.battleCreateMsg=battleCreateMsg;
		this.getHero();
		this.mpBtnCancel.clickHandler=Handler.create(this,this.cancelMatch,null,false);
	}

	__class(VSMenu,'modules.vs.VSMenu',_super);
	var __proto=VSMenu.prototype;
	__proto.getHero=function(){
		var i=0,n=0;
		for (i=0,n=this.battleCreateMsg.attackList.length;i < n;i++){
			if (this.battleCreateMsg.attackList[i].userId==PlayerInfo.instance.playerId){
				this.heroMsg=this.battleCreateMsg.attackList[i];
				return;
			}
		}
		for (i=0,n=this.battleCreateMsg.defenceList.length;i < n;i++){
			if (this.battleCreateMsg.defenceList[i].userId==PlayerInfo.instance.playerId){
				this.heroMsg=this.battleCreateMsg.defenceList[i];
				return;
			}
		}
	}

	__proto.initMenu=function(){
		SoundMgr.instance.playSound(4002007);
		this.mpBoxMap.visible=false;
		this.mpBoxCancel.visible=true;
		this.maxTime=60;
		Laya.timer.loop(1000,this,this.coolCancelTime);
		this.mpTextLoading.text=LanguageMgr.Ins.GetLan("9070118");
		this.mpTextLoading.visible=false;
	}

	//定时随机tips提示
	__proto.initGuildTips=function(configId){
		var idList=JSMgr.getRandomTipsArray(configId);
		if (idList.length > 0){
			this.mpTextTip.visible=true;
			this.showGuildTips(idList);
			Laya.timer.loop(2000,this,this.showGuildTips,[idList]);
		}
		else{
			this.mpTextTip.visible=false;
		}
	}

	__proto.showGuildTips=function(idList){
		this.mpTextTip.text=LanguageMgr.Ins.GetLan(idList[this._tipsIndex++]);
		if (this._tipsIndex >=idList.length){
			this._tipsIndex=0;
		}
	}

	__proto.coolCancelTime=function(){
		this.maxTime=this.maxTime-1;
		this.mpTextTime.value=""+this.maxTime;
		if (this.maxTime <=0){
			Laya.timer.clear(this,this.coolCancelTime);
			this.mpBoxCancel.visible=false;
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9004143"));
			if (this.battleCreateMsg.battleType==3 || this.battleCreateMsg.battleType==8 || this.battleCreateMsg.battleType==10){
				if (PlayerInfo.instance.playerId==RoomMgr.ins.masterId){
					Laya.timer.once(1000,this,this.cancelMatch);
				}
			}
			else{
				this.cancelMatch();
			}
		}
	}

	// HallViewControl.instance.show(this.battleCreateMsg.battleType);
	__proto.cancelMatch=function(){}
	__proto.syncBattleCreateMsg=function(msg){}
	__proto._syncBattleCreateMsg=function(msg,isShowbei){
		this.refreshMatch(msg,isShowbei);
	}

	__proto.syncBattlePrepare=function(msg){
		Laya.timer.clear(this,this.coolCancelTime);
		this.mpBoxMap.visible=true;
		var sceneVO=SceneModel.getSceneConfig(msg.sceneId);
		this.mpImgMap.skin=this.getMapIcon(sceneVO.SceneResource);
		this.mpTextName.text=LanguageMgr.Ins.GetLan(sceneVO.Name);
		this.mpBoxCancel.visible=false;
		this.mpImgMatch.skin=LanguageMgr.Ins.getLanguagePath("vs/ui_pipeichenggong.png");
		this.mpTextLoading.visible=true;
		for (var i=0;i < this.matchRoles.length;i++){
			var matchRole=this.matchRoles[i];
			matchRole && matchRole.load();
		}
	}

	__proto.getMapIcon=function(SceneResource){
		var sceneId=SceneResource;
		if (sceneId=="201"){
			sceneId="1";
		}
		if (sceneId=="202"){
			sceneId="2";
		}
		if (sceneId=="203"){
			sceneId="3";
		}
		if (sceneId=="204"){
			sceneId="4";
		}
		return "assets/textrue/vsmap/"+sceneId+".png";
	}

	__proto.checkOk=function(){
		var isOk=true;
		for (var i=0;i < this.matchRoles.length;i++){
			var matchRole=this.matchRoles[i];
			if (matchRole && !matchRole.isOk){
				isOk=false;
				break ;
			}
		}
		return isOk;
	}

	__proto.refreshMatch=function(msg,isShowbei){
		var i=0,n=0;
		var battlePlayerMsg;
		var matchRole;
		var roleList=[];
		for (i=0,n=msg.attackList.length;i < n;i++){
			roleList.push(msg.attackList[i]);
		}
		for (i=0,n=msg.defenceList.length;i < n;i++){
			roleList.push(msg.defenceList[i]);
		}
		for (i=0,n=roleList.length;i < n;i++){
			battlePlayerMsg=roleList[i];
			matchRole=this.matchRoles[i];
			matchRole && matchRole.initRole(battlePlayerMsg,false);
		}
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.mpBoxAll.scaleX=_bestFitWidth / 1136;
		this.mpBoxAll.scaleY=_bestFitHeight / 640;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		Laya.timer.clear(this,this.coolCancelTime);
		Laya.timer.clear(this,this.showGuildTips);
		laya.ui.BaseView.prototype.destroy.call(this,destroyChild);
	}

	return VSMenu;
})(NewVSMenuUI)


/**
*活动界面
*@author baohua.chen
*
*/
//class modules.activity.view.ActivityView extends ui.activity.view.ActivityViewUI
var ActivityView=(function(_super){
	function ActivityView(){
		ActivityView.__super.call(this);
		this.addEvent();
		this.initView();
	}

	__class(ActivityView,'modules.activity.view.ActivityView',_super);
	var __proto=ActivityView.prototype;
	__proto.initView=function(){
		this.renderTitlteType();
	}

	__proto.addEvent=function(){
		this.btnClose.on("click",this,this.onClickHandlerClose);
		this.titlTabSet1.on("click",this,this.onClickHandlerNor1);
		this.titlTabSet2.on("click",this,this.onClickHandlerNor2);
		this.tabList.renderHandler=Handler.create(this,this.tabRendHander,null,false);
		EventMgr.ins.on("ACTIVITY_BUTTON_CLICK",this,this.upTabItemClick);
		EventMgr.ins.on("ACTIVITY_PLACARD_UPDATE",this,this.updatePlacardInfo);
		EventMgr.ins.on("ACTIVITY_COMMONACTIVITY_UPDATE",this,this.updateAvtivity);
	}

	__proto.updateAvtivity=function(){
		if(ActivityInfoMgr.ins.titleTab==0){
			this.tabList.dataSource=ActivityInfoMgr.ins.getTabListInfoByType(ActivityInfoMgr.ins.titleTab);
			this.tabList.refresh();
			this.upTabItemClick(true);
		}
	}

	__proto.updatePlacardInfo=function(){
		if(ActivityInfoMgr.ins.titleTab==1){
			this.tabList.dataSource=ActivityInfoMgr.ins.getTabListInfoByType(ActivityInfoMgr.ins.titleTab);
			this.tabList.refresh();
			this.upTabItemClick();
		}
	}

	__proto.upTabItemClick=function(isUpdate){
		(isUpdate===void 0)&& (isUpdate=false);
		ActivityViewControl.ins.closeView();
		var info=this.tabList.dataSource[ActivityInfoMgr.ins.currentTabIndex];
		if(!info)return;
		ActivityInfoMgr.ins.currentTabInfo=info;
		ActivityViewControl.ins.openView(this.infoView,info.activityType);
	}

	__proto.tabRendHander=function(item,index){
		if(index<this.tabList.dataSource.length){
			item.setData(this.tabList.dataSource[index],index);
		}
	}

	__proto.onClickHandlerNor1=function(){
		ActivityInfoMgr.ins.titleTab=0;
		this.renderTitlteType();
	}

	__proto.onClickHandlerNor2=function(){
		if(ActivityInfoMgr.ins.getTabListInfoByType(1).length<=0){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300081"));
			return;
		}
		ActivityInfoMgr.ins.titleTab=1;
		this.renderTitlteType();
	}

	__proto.renderTitlteType=function(){
		this.titlTabNor1.visible=this.titlTabSet1.visible=this.titlTabNor2.visible=this.titlTabSet2.visible=false;
		if(ActivityInfoMgr.ins.titleTab==0){
			this.titlTabNor1.visible=this.titlTabSet2.visible=true;
			}else{
			this.titlTabNor2.visible=this.titlTabSet1.visible=true;
		}
		ActivityInfoMgr.ins.currentTabIndex=0;
		this.tabList.dataSource=ActivityInfoMgr.ins.getTabListInfoByType(ActivityInfoMgr.ins.titleTab);
		this.tabList.refresh();
		this.upTabItemClick();
	}

	__proto.onClickHandlerClose=function(){
		RedDotMgr.ins.updateRedDotStatus("btn_activity",false);
		UIMgr.ins.closeView("ActivityView");
		EventMgr.ins.event("ACTIVITY_SET_RED");
	}

	__proto.removeEvent=function(){
		this.btnClose.off("click",this,this.onClickHandlerClose);
		this.titlTabSet1.off("click",this,this.onClickHandlerNor1);
		this.titlTabSet2.off("click",this,this.onClickHandlerNor2);
		EventMgr.ins.off("ACTIVITY_BUTTON_CLICK",this,this.upTabItemClick);
		EventMgr.ins.off("ACTIVITY_PLACARD_UPDATE",this,this.updatePlacardInfo);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		ActivityViewControl.ins.closeView();
		ActivityInfoMgr.ins.titleTab=0;
		this.removeEvent();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return ActivityView;
})(ActivityViewUI)


//class modules.activity.view.CommonRewardWindow extends ui.activity.view.commonActivity.CommonRewardWindowUI
var CommonRewardWindow=(function(_super){
	function CommonRewardWindow(){
		this._eventdispatch=null;
		CommonRewardWindow.__super.call(this);
	}

	__class(CommonRewardWindow,'modules.activity.view.CommonRewardWindow',_super);
	var __proto=CommonRewardWindow.prototype;
	__proto.init=function(){
		this._eventdispatch=new EventDispatcher();
		this.addEvent();
	}

	__proto.removeEvent=function(){}
	__proto.addEvent=function(){
		this.getBtn.clickHandler=Handler.create(this,this.onClose);
		this.list.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
	}

	__proto.onRenderHandler=function($item,$index){
		var data=this.list.array[$index];
		var arr=data.split(",");
		var vo=ItemModel.getItemConfigData(arr[0]);
		if(vo.ItemID===-50){
			$item.icon.skin='assets/textrue/language/'+LanguageMgr.Ins.country+'/itemicon/'+vo.Icon+'.png';
			}else {
			$item.icon.skin='assets/textrue/itemicon/'+vo.Icon+'.png';
		}
		$item.countText.text=""+arr[1];
		$item.nameText.text=LanguageMgr.Ins.GetLan((""+vo.Name));
	}

	/**
	*设置物品
	*@param $itemsStr :itemId,itemNum|itemId,itemNum...
	*/
	__proto.setItems=function($itemsStr){
		var arr=$itemsStr.split("|");
		this.list.array=arr;
		this.list.x=564-((((arr.length *(112+this.list.spaceX))-this.list.spaceX)>> 1));
	}

	/**关闭界面 **/
	__proto.onClose=function(){
		UIMgr.ins.closeView("CommonRewardWindow");
		EventMgr.ins.event("gm_active_op_result_by_commonactivity",ActivityViewControl.ins.curView);
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this);
		this.init();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
		this._eventdispatch=null;
	}

	return CommonRewardWindow;
})(CommonRewardWindowUI)


/**
*首充活动视图页面
**/
//class modules.activity.view.FirstRechargeView extends ui.activity.view.recharge.FirstRechargeViewUI
var FirstRechargeView=(function(_super){
	function FirstRechargeView(){
		FirstRechargeView.__super.call(this);
		this._spinBox=new Animation();
		this._spinPos=new Point;
		this.init();
	}

	__class(FirstRechargeView,'modules.activity.view.FirstRechargeView',_super);
	var __proto=FirstRechargeView.prototype;
	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this,$x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash);
	}

	__proto.init=function(){
		RedDotMgr.ins.updateHallDotStatus("btn_recharge",false);
		EventMgr.ins.event("ACTIVITY_SET_RED");
		this.btn_recharge.label=LanguageMgr.Ins.GetLan("14300387");
		this.showGetBtn(PlayerInfo.instance.firstCharge==1);
		this.addEvent();
		this.updateList();
		this._spinBox.loadAtlas("assets/animation/frames/uieffect/UI_scz.atlas",Handler.create(this,this.aniLoaded));
		this._spinBox.interval=100;
		this._spinBox.x=453;
		this._spinBox.y=298;
	}

	__proto.aniLoaded=function(){
		this.addChild(this._spinBox);
		this._spinBox.play();
		return;
	}

	__proto.updateList=function(){
		var data=ConfigModel.getFirstRechargeReward();
		this.list.array=data;
	}

	__proto.addEvent=function(){
		this.btn_close.clickHandler=Handler.create(this,this.onClose,null,false);
		this.btn_get.clickHandler=Handler.create(this,this.onGet);
		this.btn_recharge.clickHandler=Handler.create(this,this.onRecharge,null,false);
		this.list.renderHandler=Handler.create(this,this.onRender,null,false);
		EventMgr.ins.on("ACTIVITY_SET_RED",this,this.showGetBtn,[true]);
		this.list.mouseHandler=Handler.create(this,this.onRenderClick,null,false);
	}

	__proto.onRenderClick=function(e,$index){
		if(e.type !="click")return;
		var data=this.list.array[$index];
		if(!data)return;
		var itemVO=ItemModel.getItemConfigData(data.ItemID);
		TipsManager.Instance().addItemTip(itemVO,e);
	}

	__proto.showGetBtn=function(bool){
		(bool===void 0)&& (bool=false);
		this.btn_get.visible=bool;
		this.btn_recharge.visible=!bool;
	}

	__proto.onRender=function(item,index){
		if (index < this.list.array.length){
			item.setData(this.list.array[index]);
		}
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("FirstRechargeView");
	}

	__proto.onGet=function(){
		ActivityInfoMgr.ins.reqFirstRechargeReward();
		this.onClose();
	}

	__proto.onRecharge=function(){
		ShopMgr.ins.selectedIndex=4;
		UIMgr.ins.openView("ShopView");
	}

	__proto.removeEvent=function(){
		EventMgr.ins.off("ACTIVITY_SET_RED",this,this.showGetBtn);
		if(this.btn_close.clickHandler){
			this.btn_close.clickHandler.recover();
			this.btn_close.clickHandler=null;
		}
		if(this.btn_get.clickHandler){
			this.btn_get.clickHandler.recover();
			this.btn_get.clickHandler=null;
		}
		if(this.btn_recharge.clickHandler){
			this.btn_recharge.clickHandler.recover();
			this.btn_recharge.clickHandler=null;
		}
		if(this.list.renderHandler){
			this.list.renderHandler.recover();
			this.list.renderHandler=null;
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		this._spinBox.destroy();
		EventMgr.ins.event("Close_All_Tips");
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return FirstRechargeView;
})(FirstRechargeViewUI)


/**
*转盘活动
*@author qibo.chen
*/
//class modules.activity.view.LuckyWheelView extends ui.activity.view.LuckyWheelViewUI
var LuckyWheelView=(function(_super){
	function LuckyWheelView(){
		/**转速调整阀值*/
		this._limen=6;
		this._maxLimen=6;
		/**光圈位置*/
		this._index=0;
		/**转动1格的时间(ms)*/
		this._moveTime=40;
		/**时间差值(ms)*/
		this._timeIncrement=20;
		/**10连中间间隔时间(ms)*/
		this._stopTime=300;
		/**X轴平移距离*/
		this._distanceX=191;
		/**Y轴平移距离*/
		this._distanceY=120;
		/**X轴初始坐标*/
		this._initX=26;
		/**Y轴初始坐标*/
		this._initY=50;
		/**玩家钻石*/
		this._playerDiamond=0;
		/**玩家抽奖次数*/
		this.playerLottery=0;
		/**玩家累抽奖励领取*/
		this.playerAwardBoxIndex=0;
		/**活动时间*/
		this._activityTime=NaN;
		this._endTime=NaN;
		this._rewardItem=null;
		/**1次抽奖消耗*/
		this._oneCost=0;
		/**10次抽奖消耗*/
		this._tenCost=0;
		/**请求转盘活动抽奖*/
		this.REQUEST_TURN_INFO=1;
		/**请求转盘活动累抽奖励*/
		this.REQUEST_AWARD_BOX_INFO=2;
		/**转盘活动抽奖单抽参数*/
		this.TURN_ONCE=1;
		/**转盘活动抽奖十连参数*/
		this.TURN_TEN=10;
		this.UIVIEW_PRE="lucky_item";
		/**累抽需要的数量*/
		this._award0=0;
		this._award1=0;
		this._award2=0;
		this._award3=0;
		this._award4=0;
		/**单抽还是十连*/
		this._isOnce=true;
		this._oldValue=0;
		//进度条缓动
		this.posArr=[242,390,538,686,834];
		this._timeLine=new TimeLine();
		this._halo=new Animation();
		this._shade=new Image("common/alpha.png");
		this._tween=new Tween();
		LuckyWheelView.__super.call(this);
		this.createView(LuckyWheelViewUI.uiView);
		this.initView();
		this.addEvent();
	}

	__class(LuckyWheelView,'modules.activity.view.LuckyWheelView',_super);
	var __proto=LuckyWheelView.prototype;
	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this);
		this.renderPlayerInfo();
		var arr=LuckyTurnActiveItemInfo.Ins.itemList.sort(this.sortFunc);
		this.list_item.array=arr;
		this.list_box.dataSource=LuckyTurnActiveItemInfo.Ins.boxList.sort(this.sortFunc);
		this.initProgressBar();
	}

	__proto.initView=function(){
		this.label_UI_desc1.text=LanguageMgr.Ins.GetLan("14300154");
		var textStr=LanguageMgr.Ins.GetLan("14300155");
		if(textStr.length>36){
			textStr=textStr.slice(0,36)+"\n"+textStr.slice(36);
		}
		this.label_UI_desc2.text=textStr;
		this.label_time_des.text=LanguageMgr.Ins.GetLan("14300156");
		this.label_box_desc2.text=LanguageMgr.Ins.GetLan("14300157");
		this.label_box_desc3.text=LanguageMgr.Ins.GetLan("14300158");
		this.label_box_desc4.text=LanguageMgr.Ins.GetLan("14300159");
		this.label_player_diamond1.text=this.label_player_diamond2.text=LanguageMgr.Ins.GetLan("14300160");
		var costConfig=String(ConfigModel.getConfigData(1133).ConfigValue).split(",");
		this._oneCost=costConfig[0];
		this._tenCost=costConfig[1];
		this.fontClip_once_consume.value=this._oneCost+"";
		this.fontClip_ten_consume.value=this._tenCost+"";
		var time=TimeManager.Instance.NowTime()
		this._activityTime=LuckyTurnActiveItemInfo.Ins.endTime-time;
		this._endTime=LuckyTurnActiveItemInfo.Ins.interValTime-time;
		this.label_activity_time.text=this.timeStr(this._activityTime);
		this.label_end_time.text=this.timeStr(this._endTime);
		if(this._activityTime>1*1000){
			Laya.timer.loop(1000,this,this.onUpdateTime);
			}else {
			Laya.timer.clear(this,this.onUpdateTime);
		}
		if(this._endTime>1*1000){
			Laya.timer.loop(1000,this,this.onUpdateEndTime);
			}else {
			Laya.timer.clear(this,this.onUpdateEndTime);
		}
		this._halo.loadAtlas("assets/atlas/activity/luckyWheel/ani.atlas");
		this._halo.interval=100;
	}

	__proto.onUpdateTime=function(){
		this._activityTime-=1*1000;
		this.label_activity_time.text=this.timeStr(this._activityTime);
	}

	__proto.onUpdateEndTime=function(){
		this._endTime-=1*1000;
		this.label_end_time.text=this.timeStr(this._endTime);
	}

	__proto.timeStr=function(timeNumber){
		if(this._activityTime<=1*1000){
			Laya.timer.clear(this,this.onUpdateTime);
			this.removeBtn();this._halo.destroy();this._tween &&(this._tween=null);
			this._shade.x=0;
			this._shade.y=16;
			this._shade.width=728;
			this._shade.height=417;
			this._shade.mouseThrough=false;
			this._shade.mouseEnabled=true;
			this.addChild(this._shade);
			this.label_activity_time.text=LanguageMgr.Ins.GetLan("14300153");
		}
		if(this._endTime<=1*1000){
			this.destroy();
			ActivityInfoMgr.ins.model._luckyWheelInfo=null;
		};
		var hour=int(timeNumber/(60*60*1000));
		var hourStr=this.SpliceTimeStr(hour);
		var minutes=int((timeNumber%(60*60*1000))/(60*1000));
		var minutesStr=this.SpliceTimeStr(minutes);
		var seconds=int(((timeNumber%(60*60*1000))%(60*1000))/1000);
		var secondsStr=this.SpliceTimeStr(seconds);
		return hourStr+":"+minutesStr+":"+secondsStr;
	}

	__proto.SpliceTimeStr=function(timeStr){
		return timeStr>9?""+timeStr:"0"+timeStr;
	}

	__proto.addEvent=function(){
		EventMgr.ins.on("ACTIVITY_WHEEL_UPDATE",this,this.updateRedDot);
		this.btn_once.clickHandler=Handler.create(this,this.onclickOne,null,false);
		this.btn_ten.clickHandler=Handler.create(this,this.onclickTen,null,false);
		this.btn_close.clickHandler=Handler.create(this,this.onClose,null,false);
		this.list_box.renderHandler=Handler.create(this,this.boxUIRender,null,false);
		this.list_box.mouseHandler=Handler.create(this,this.onShowAward,null,false);
		this.list_boxInfo.renderHandler=Handler.create(this,this.awardItemRender,null,false);
		this.list_item.renderHandler=Handler.create(this,this.itemUIRender,null,false);
		EventMgr.ins.on("get_wheel_award",this,this.getWheelAward);
		EventMgr.ins.on("turn_wheel",this,this.turnWheel);
		EventMgr.ins.on("update_data",this,this.renderPlayerInfo);
		this._timeLine.on("complete",this,this.onOpenRewardWindow);
		this.on("click",this,this.onClickStage);
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("LuckyWheelView");
	}

	__proto.itemUIRender=function(item,index){
		var data=item.dataSource;
		item.item_rare.visible=item.item_rare_tie.visible=data.isSpecial;
		item.item_normal.visible=!data.isSpecial;
		var vo=ItemModel.getItemConfigData(data.itemId);
		item.item_icon.skin="assets/textrue/itemicon/"+vo.Icon+".png";
		item.item_icon.width=75;
		item.item_icon.height=75;
		item.item_number.text=data.itemCount.toString();
		item.item_name.text=LanguageMgr.Ins.GetLan(vo.Name);
	}

	__proto.boxUIRender=function(box,index){
		box.img_box.skin="activity/luckyWheel/ui_box"+(index+1)+".png";
		box.img_box_light01.visible=false;
		box.img_box_hasget.visible=false;
		box.label_box_desc4.text=LanguageMgr.Ins.GetLan("14300158");
		var data=box.dataSource;
		box.fontClip_number.value=data.needCount.toString();
		if(this.playerLottery>=data.needCount){
			this.boxShow(box,data.index);
		}
	}

	__proto.awardItemRender=function(item,index){
		item.label_count.text=item.dataSource.itemCount ? item.dataSource.itemCount.toString():"0";
		var itemVo=ItemModel.getItemConfigData(item.dataSource.itemId);
		if(itemVo.ItemID===-50){
			item.img_icon.skin='assets/textrue/language/'+LanguageMgr.Ins.country+'/itemicon/'+itemVo.Icon+'.png';
			}else {
			item.img_icon.skin='assets/textrue/itemicon/'+itemVo.Icon+'.png';
		}
	}

	__proto.boxShow=function(box,index){
		if(((1<<index)&this.playerAwardBoxIndex)==0){
			RedDotMgr.ins.updateRedDotStatus("LUCKY_WHEEL",true);
			box.img_box_light01.visible=true;
			}else{
			box.img_box_light01.visible=false;
			box.img_box_hasget.visible=true;
		}
		this.updateRedDot(0);
	}

	//光圈初始化
	__proto.initImage=function(index){
		(index===void 0)&& (index=0);
		this._index=index;
		this.addChild(this._halo);
		this._halo.play();
		switch(index){
			case 0:
			case 1:
			case 2:
			case 3:
			case 4:
				this._halo.x=this._initX+index*this._distanceX+3;
				this._halo.y=this._initY;
				break ;
			case 5:
			case 6:
			case 7:
				this._halo.x=this._initX+4*this._distanceX;
				this._halo.y=this._initY+(index-4)*this._distanceY;
				break ;
			case 8:
			case 9:
			case 10:
			case 11:
				this._halo.x=this._initX+(11-index)*this._distanceX;
				this._halo.y=this._initY+3*this._distanceY;
				break ;
			case 12:
			case 13:
				this._halo.x=this._initX+5;
				this._halo.y=this._initY+(14-index)*this._distanceY;
				break ;
			}
	}

	__proto.renderPlayerInfo=function(){
		var playInfo=LuckyTurnUserDataInfo.Ins;
		this._playerDiamond=this.playerDiamond;
		this.label_user_diamond01.text=this.label_user_diamond02.text=this._playerDiamond.toString();
		this.fontClip_user_lucky_value.value=playInfo.lucky.toString();
		this.playerLottery=playInfo.count;
		this.fontClip_user_lottery_value.value=this.playerLottery.toString();
		this._index=playInfo.lastIndex;
		this.playerAwardBoxIndex=playInfo.index;
		if(this._activityTime>1*1000){
			this.initImage(playInfo.lastIndex);
		}
	}

	__proto.initProgressBar=function(){
		if(this._award0==0){
			this._award0=this.list_box.dataSource[0].needCount;
		}
		if(this._award1==0){
			this._award1=this.list_box.dataSource[1].needCount;
		}
		if(this._award2==0){
			this._award2=this.list_box.dataSource[2].needCount;
		}
		if(this._award3==0){
			this._award3=this.list_box.dataSource[3].needCount;
		}
		if(this._award4==0){
			this._award4=this.list_box.dataSource[4].needCount;
		}
		if(this.playerLottery>this._award4){
			return;
			}else if(this.playerLottery>this._award3){
			this._tween.to(this.progress_bar,{value:(this.playerLottery-this._award3)/(this._award4-this._award3)*(235/430/4)+(124/430)*3},this._isOnce?500:1000);
			}else if(this.playerLottery>this._award2){
			this._tween.to(this.progress_bar,{value:(this.playerLottery-this._award2)/(this._award3-this._award2)*(235/430/4)+(124/430)*2},this._isOnce?500:1000);
		}
		else if(this.playerLottery>this._award1){
			this._tween.to(this.progress_bar,{value:(this.playerLottery-this._award1)/(this._award2-this._award1)*(235/430/4)+(124/430)*1},this._isOnce?500:1000);
		}
		else if(this.playerLottery>this._award0){
			this._tween.to(this.progress_bar,{value:(this.playerLottery-this._award0)/(this._award1-this._award0)*(235/430/4)},this._isOnce?500:1000);
		}
		else{
			this.progress_bar.value=0;
		}
	}

	// 领累抽
	__proto.getWheelAward=function(res){
		this.playerAwardBoxIndex=res.param1;
		for(var i=0;i<this.list_box.length;i++){
			if(Number(this.fontClip_user_lottery_value.value)>=Number((this.list_box.getCell(i)).fontClip_number.value)){
				this.boxShow((this.list_box.getCell(i)),i);
			}
		}
		this._rewardItem=res.param4;
		this._isOnce=true;
		this.openRewardWindow();
		this._playerDiamond=this.playerDiamond;
		this.label_user_diamond01.text=this.label_user_diamond02.text=this._playerDiamond.toString();
	}

	//转转盘
	__proto.turnWheel=function(res){
		this.btn_ten.mouseEnabled=this.btn_once.mouseEnabled=false;
		this._timeLine.gotoLabel("end");
		this._timeLine.reset();
		this.hideImage();
		this._limen=this._maxLimen;
		this._isOnce=(res.indexs.length==1);
		this.turnAni(res.indexs);
		this._rewardItem=res.param4;
		this._playerDiamond=this.playerDiamond;
		this.playerLottery=Number(res.param3);
		this.label_user_diamond01.text=this.label_user_diamond02.text=this._playerDiamond.toString();
		this.fontClip_user_lucky_value.value=res.param1+"";
		this.fontClip_user_lottery_value.value=res.param3+"";
		this.initProgressBar();
		for(var i=0;i<this.list_box.length;i++){
			var box=(this.list_box.getCell(i));
			if(res.param3>=Number(box.fontClip_number.value)&&box.img_box_hasget.visible==false){
				box.img_box_light01.visible=true;
				console.log("indexTurn:"+i);
				this.updateRedDot(1);
			}
		}
	}

	//如果type是1表示有奖励可以领取
	__proto.updateRedDot=function(type){
		if(type){
			RedDotMgr.ins.updateRedDotStatus("LUCKY_WHEEL",true);
			}else{
			for(var i=0;i<this.list_box.length;i++){
				var box=(this.list_box.getCell(i));
				if(box.img_box_light01.visible && !box.img_box_hasget.visible){
					RedDotMgr.ins.updateRedDotStatus("LUCKY_WHEEL",true);
					EventMgr.ins.event("ACTIVITY_REDDOT_UPDATE","LUCKY_WHEEL");
					return;
				}
			}
			RedDotMgr.ins.updateRedDotStatus("LUCKY_WHEEL",false);
		}
		EventMgr.ins.event("ACTIVITY_REDDOT_UPDATE","LUCKY_WHEEL");
	}

	__proto.hideImage=function(){
		for(var index=0;index<this.list_item.length;index++){
			var luckyWheelItemUI=this.list_item.getCell(index);
			luckyWheelItemUI.item_select.alpha=0;
		}
	}

	/**
	*转盘动画(时间轴缓动动画)
	*@Param frames:转动格数 luckyValue:幸运值 lotteryValue:抽奖次数
	*/
	__proto.turnAni=function(frames){
		var firstIndex=frames.shift();
		var turnIndex=14-this._index+firstIndex;
		if(turnIndex<=0)return;
		if(turnIndex<14)turnIndex+=14;
		for(;turnIndex>0;turnIndex--){
			this.adjustSpeed(turnIndex,frames.length);
			this.turnOneAni();
		}
		var fram;
		for(var $each_fram in frames){
			fram=frames[$each_fram];
			var item=this.list_item.getCell(this._index);
			this._timeLine.to(item.item_select,{alpha:1},this._stopTime);
			var stopIndex=fram;
			var stopfaem=0;
			if(stopIndex>this._index){
				stopfaem=stopIndex-this._index;
				}else{
				stopfaem=14-this._index+stopIndex;
			}
			for(this._limen=this._maxLimen/3;stopfaem>0;stopfaem--){
				this.turnOneAni();
			}
		}
		this._timeLine.to(this._halo,{},500);
		this._timeLine.addLabel("end",0);
		this._timeLine.play();
	}

	/**光圈转动一格缓动*/
	__proto.turnOneAni=function(){
		switch(this._index){
			case 0:
			case 1:
			case 2:
			case 3:
				this._timeLine.to(this._halo,{x:this._initX+(this._index+1)*this._distanceX},this._moveTime+this._limen*this._timeIncrement);
				break ;
			case 4:
			case 5:
			case 6:
				this._timeLine.to(this._halo,{y:this._initY+(this._index-3)*this._distanceY},this._moveTime+this._limen*this._timeIncrement);
				break ;
			case 7:
			case 8:
			case 9:
			case 10:
				this._timeLine.to(this._halo,{x:this._initX+(10-this._index)*this._distanceX},this._moveTime+this._limen*this._timeIncrement);
				break ;
			case 11:
			case 12:
			case 13:
				this._timeLine.to(this._halo,{y:this._initY+(13-this._index)*this._distanceY},this._moveTime+this._limen*this._timeIncrement);
				break ;
			}
		this._index=(this._index+1)%14;
	}

	/**调整转速 (单抽减速十连不减速)*/
	__proto.adjustSpeed=function(frames,needSlowdown){
		if(this._limen>0&&frames>this._maxLimen+1){
			this._limen--;
		}
		if(needSlowdown==0&&frames<this._maxLimen+1){
			this._limen++;
		}
	}

	__proto.sortFunc=function(a,b){
		return a.index-b.index;
	}

	__proto.onOpenRewardWindow=function(){
		this.btn_ten.mouseEnabled=this.btn_once.mouseEnabled=true;
		this.hideImage();
		this.openRewardWindow();
	}

	__proto.openRewardWindow=function(){
		var _$this=this;
		this.btn_close.disabled=false;
		UIMgr.ins.openView("LevelBoxRewardWindow",Handler.create(this,function(view){
			if(!_$this._isOnce){
				view.list.repeatX=5;
				view.list.repeatY=2;
				view.list.left=280;
				view.list.y=160;
			}
			else{
				view.list.y=240;
			}
			view.getBtn.y=460;
			view.setItems(_$this._rewardItem);
			view.anchorY=0.1;
		}));
	}

	__proto.onclickOne=function(){
		if(this._playerDiamond>=this._oneCost){
			ActivityInfoMgr.ins.requestActivityInfo(ActivityInfoMgr.ins.model.luckyWheelInfo.activityType,this.REQUEST_TURN_INFO,this.TURN_ONCE);
			this.btn_close.disabled=true;
			}else{
			TipsManager.Instance().showAlertDialog(
			LanguageMgr.Ins.GetLan("9007368")
			,LanguageMgr.Ins.GetLan("14300142",LanguageMgr.Ins.GetLan("9007002"))
			,LanguageMgr.Ins.GetLan("9007390")
			,LanguageMgr.Ins.GetLan("9007389")
			,Handler.create(this,this.onRecharge));
		}
	}

	__proto.onclickTen=function(){
		if(this._playerDiamond>=this._oneCost){
			ActivityInfoMgr.ins.requestActivityInfo(ActivityInfoMgr.ins.model.luckyWheelInfo.activityType,this.REQUEST_TURN_INFO,this.TURN_TEN);
			this.btn_close.disabled=true;
			}else{
			TipsManager.Instance().showAlertDialog(
			LanguageMgr.Ins.GetLan("9007368")
			,LanguageMgr.Ins.GetLan("14300142",LanguageMgr.Ins.GetLan("9007002"))
			,LanguageMgr.Ins.GetLan("9007390")
			,LanguageMgr.Ins.GetLan("9007389")
			,Handler.create(this,this.onRecharge));
		}
	}

	__proto.onRecharge=function(){
		ShopMgr.ins.selectedIndex=4;
		UIMgr.ins.openView("ShopView");
	}

	__proto.onShowAward=function(e,index){
		if (e.type !="click")return;
		var box=e.currentTarget;
		if(this.playerLottery>=Number(box.fontClip_number.value)&&box.img_box_hasget.visible==false){
			ActivityInfoMgr.ins.requestActivityInfo(ActivityInfoMgr.ins.model.luckyWheelInfo.activityType,this.REQUEST_AWARD_BOX_INFO,index);
		}
		this.boxTips.visible=true;
		this.list_boxInfo.dataSource=[box.dataSource];
		this.boxTips.x=this.posArr[index];
		e.stopPropagation();
	}

	__proto.onClickStage=function(e){
		this.boxTips.visible=false;
	}

	__proto.removeBtn=function(){
		this.btn_once.mouseEnabled=false;
		this.btn_ten.mouseEnabled=false;
		if(this.btn_once.clickHandler){
			this.btn_once.clickHandler.recover();
			this.btn_once.clickHandler=null;
		}
		if(this.btn_close.clickHandler){
			this.btn_close.clickHandler.recover();
			this.btn_close.clickHandler=null;
		}
		if(this.btn_ten.clickHandler){
			this.btn_ten.clickHandler.recover();
			this.btn_ten.clickHandler=null;
		}
	}

	__proto.removeEvent=function(){
		this.removeBtn();
		if(this.list_box.mouseHandler){
			this.list_box.mouseHandler.recover();
			this.list_box.mouseHandler=null;
		}
		if(this.list_item.renderHandler){
			this.list_item.renderHandler.recover();
			this.list_item.renderHandler=null;
		}
		if(this.list_box.renderHandler){
			this.list_box.renderHandler.recover();
			this.list_box.renderHandler=null;
		}
		if(this.list_boxInfo.renderHandler){
			this.list_boxInfo.renderHandler.recover();
			this.list_boxInfo.renderHandler=null;
		}
		EventMgr.ins.off("get_wheel_award",this,this.getWheelAward);
		EventMgr.ins.off("turn_wheel",this,this.turnWheel);
		EventMgr.ins.off("update_data",this,this.renderPlayerInfo);
		this._timeLine.off("complete",this,this.onOpenRewardWindow);
		this.off("click",this,this.onClickStage);
		for(var i=0;i<this.list_box.length;i++){
			var box=this.list_box.getCell(i);
			box.off("click",box,this.onShowAward,[box])
		}
		Laya.timer.clear(this,this.onUpdateTime);
		Laya.timer.clear(this,this.onUpdateEndTime);
		this._timeLine && this._timeLine.destroy();
		this._timeLine=null;
		this._tween &&(this._tween=null);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		EventMgr.ins.off("ACTIVITY_WHEEL_UPDATE",this,this.updateRedDot);
		this.removeEvent();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	__getset(0,__proto,'playerDiamond',function(){
		return PlayerInfo.instance.diamond;
	});

	return LuckyWheelView;
})(LuckyWheelViewUI)


//class modules.battle.view.menu.NewBattleWin extends ui.menu.battle.NewBattleWinUI
var NewBattleWin=(function(_super){
	function NewBattleWin(){
		NewBattleWin.__super.call(this);
		this.addEvents();
		this.mpTextNext.text=LanguageMgr.Ins.GetLan("9070129");
	}

	__class(NewBattleWin,'modules.battle.view.menu.NewBattleWin',_super);
	var __proto=NewBattleWin.prototype;
	__proto.addEvents=function(){
		this.on("click",this,this.onClickBack);
	}

	__proto.removeEvents=function(){
		this.on("click",this,this.onClickBack);
	}

	__proto.onClickBack=function(){
		HallMgr.ins.show();
	}

	__proto.setData=function(resultType){
		this.mpImgWin.visible=resultType==1;
		this.mpImgLose.visible=resultType==2;
		this.mpImgDraw.visible=resultType==0;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvents();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return NewBattleWin;
})(NewBattleWinUI)


//class modules.battle_apple.view.BeyondFriend extends ui.menu.battle.BeyondFriendUI
var BeyondFriend=(function(_super){
	function BeyondFriend(){
		this.beyondType=null;
		this.battleType=null;
		this.item2=null;
		this.item1=null;
		this._friendInfoMsg=null;
		this.icon=null;
		this.callBack=null;
		this.path=UrlParam.ROOTURL+"index.html?_wv=183040&_wwv=2048"+'&playerId='+PlayerInfo.instance.playerId+'&openId='+PlayerInfo.instance.openid;
		BeyondFriend.__super.call(this);
		this.addEvent();
	}

	__class(BeyondFriend,'modules.battle_apple.view.BeyondFriend',_super);
	var __proto=BeyondFriend.prototype;
	__proto.init=function(battleType,beyondType,friendInfoMsg,callBack){
		this.battleType=battleType;
		this.beyondType=beyondType;
		this._friendInfoMsg=friendInfoMsg;
		console.log("-------------friendInfoMsg:",friendInfoMsg);
		this.callBack=callBack;
		this.labName.text=PlayerInfo.instance.nickName;
		QRMgr.ins.toQRBase64(this.path,150,150,Handler.create(this,function(base64URL){
			this.imgIcon.skin=base64URL;
		}));
		if(UrlParam.PARAMS["PLID"]=="qq"){
			this.imgIcon.visible=this.labName.visible=true;
			}else if(UrlParam.PARAMS["PLID"]=="wx"){
			this.imgIcon.visible=this.labName.visible=false;
			}else if(UrlParam.PARAMS["PLID"]=="fb"){
			this.imgIcon.visible=this.labName.visible=false;
		}
		this.imgIcon.visible=this.labName.visible=false;
		this.item1=new BeyondItem();
		this.item1.zOrder=666;
		this.item2=new BeyondItem();
		this.item2.zOrder=666;
		this.addChild(this.item1);
		this.addChild(this.item2);
		this.item1.x=245;
		this.item1.y=424;
		this.item2.x=542;
		this.item2.y=424;
		console.log("-------------beyondType:",beyondType);
		if(beyondType==1){
			this.item2.initMyself(battleType==6?1:2);
			this.item1.initFriend(this._friendInfoMsg,battleType==6?1:2);
			}else if(beyondType==2){
			this.item2.initMyself(battleType==6?1:2);
			this.item1.initHistory(battleType==6?1:2,battleType==6?PlayerInfo.instance.histroyAppleScore:PlayerInfo.instance.histroyTrophy);
		}
		this.back.visible=false;
		this.back.alpha=0;
		this.xuanyao.visible=false;
		this.xuanyao.alpha=0;
		this.playAni();
		var decStr=LanguageMgr.Ins.GetLan("12300003",200);
		this.shareTips.setTipData(decStr,250);
		this.shareTips.visible=false;
		this.isOpenResize=true;
	}

	__proto.playAni=function(){
		this.xiaoji.scaleX=0.1;
		this.xiaoji.scaleY=0.1;
		Tween.to(this.xiaoji,{scaleX:1.2,scaleY:1.2},5/30*1000,null,Handler.create(this,this.scale1));
	}

	__proto.scale1=function(){
		Tween.to(this.xiaoji,{scaleX:1.0,scaleY:1.0},3/30*1000,null,Handler.create(this,this.scale2));
	}

	__proto.scale2=function(){
		Tween.to(this.light,{rotation:360*10},60 *1000,null);
		Tween.to(this.item1,{x:542,y:424},500);
		Tween.to(this.item2,{x:245,y:424},500,null,Handler.create(this,this.trans));
	}

	__proto.trans=function(){
		this.icon=new Image("appleGame/chaoyue/ui_shangshen.png");
		this.icon.x=191;
		this.icon.y=520;
		this.icon.alpha=0;
		this.addChild(this.icon);
		Tween.to(this.icon,{x:191,y:452,alpha:1.0},5/30 *1000,null,Handler.create(this,this.allEnd));
	}

	__proto.allEnd=function(){
		this.back.visible=true;
		this.xuanyao.visible=true;
		Tween.to(this.back,{alpha:1.0},5/30 *1000);
		Tween.to(this.xuanyao,{alpha:1.0},5/30 *1000);
	}

	__proto.addEvent=function(){
		this.back.on("click",this,this.onClose);
		this.xuanyao.on("click",this,this.onShare);
	}

	__proto.onShare=function(){
		EventMgr.ins.event("SHARE",[ShareConst.APPLE_GAME_SHARED]);
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("BeyondFriend");
		if(this.callBack!=null){
			this.callBack.run();
		}
	}

	__proto.closeHandler=function(e){}
	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		laya.ui.Window.prototype.onResize.call(this,_bestFitWidth,_bestFitHeight);
		var scale=_bestFitWidth/1136;
		this.scale(scale,scale);
	}

	return BeyondFriend;
})(BeyondFriendUI)


//class modules.battle_apple.view.LocalBattleResult extends ui.menu.battle.BattleResultUI
var LocalBattleResult=(function(_super){
	function LocalBattleResult(){
		this.path=UrlParam.ROOTURL+"index.html?_wv=183040&_wwv=2048"+'&playerId='+PlayerInfo.instance.playerId+'&openId='+PlayerInfo.instance.openid;
		LocalBattleResult.__super.call(this);
		this.addEvent();
		this.initView();
	}

	__class(LocalBattleResult,'modules.battle_apple.view.LocalBattleResult',_super);
	var __proto=LocalBattleResult.prototype;
	__proto.initView=function(){
		SoundMgr.instance.playSound(4006062);
		this.updateShareTips();
		LocalBattleMgr.getInstance().resetPlayerInfo()
		this.goTohall.visible=!LocalBattleMgr.getInstance().isNew;
		this.goToShare.visible=!LocalBattleMgr.getInstance().isNew;
		this.rewardBg.visible=!LocalBattleMgr.getInstance().isNew;
		this.maxScoreNum.text=String(LocalBattleMgr.getInstance().getMaxScore());
		this.scoreNum.text=String(LocalBattleMgr.getInstance().getScoreNum());
		this.maxScoreImg.visible=LocalBattleMgr.getInstance().isMaxScore();
		this.overStepText.text=LocalBattleMgr.getInstance().getOverPercentByScore();
		var rewardNum=LocalBattleMgr.getInstance().getRewardByScore();
		var isLimit=LocalBattleMgr.getInstance().checkGoldLimit();
		if(!isLimit){
			this.rewardText.text=String(rewardNum);
			this.rewardIcon.visible=true;
		}
		else{
			this.rewardText.text=LanguageMgr.Ins.GetLan("9002248");
			this.rewardIcon.visible=false;
		}
		this.mpImgDouble.visible=LocalBattleMgr.getInstance().hasItem(6007001);
		this.labName.text=PlayerInfo.instance.nickName;
		QRMgr.ins.toQRBase64(this.path,150,150,Handler.create(this,function(base64URL){
			this.imgIcon.skin=base64URL;
		}));
		this.labName.visible=!LocalBattleMgr.getInstance().isNew;
		this.imgIcon.visible=!LocalBattleMgr.getInstance().isNew;
		if(UrlParam.PARAMS["PLID"]=="fb"||UrlParam.PARAMS["PLID"]=="wx"){
			this.imgIcon.visible=false;
			this.labName.visible=false
		}
		if(LoginControl.instance.isNewUser==1){
			if(LocalBattleMgr.getInstance().getScoreNum()< LocalBattleMgr.getInstance().passScore){
				this.goToShare.visible=false;
				}else{
				this.mouseEnabled=false;
				this.playAgin.visible=false;
				EventMgr.ins.event("showNewWord");
			}
		}
		this.labName.visible=false;
		this.imgIcon.visible=false;
		this.reSizeView();
	}

	//JSMgr.playPlacement();
	__proto.reSizeView=function(){
		if(LanguageMgr.Ins.isChinese){
			this.overStepText.x=159;
			this.overStepText.y=12;
			}else{
			this.overStepText.x=222;
			this.overStepText.y=16;
		}
	}

	__proto.updateShareTips=function(){
		var decStr=LanguageMgr.Ins.GetLan("12300003",200);
		this.shareTips.setTipData(decStr,250);
		this.shareTips.visible=false;
	}

	// shareTips.setTipData("分享可获200粉钻");
	__proto.onShareResponse=function(res){}
	/*var info:ShareUserInfo=res.shareUserInfo;
	if(info && info.type==ActivityType.PVE_SETTLE){
		updateShareTips();
	}*/

	__proto.refreshData=function(msg){
		this.scoreNum.text=msg.score+"";
		this.maxScoreNum.text=msg.maxScore+"";
		if(msg.goldLimit){
			this.rewardText.text=LanguageMgr.Ins.GetLan("9002248");
			this.rewardIcon.visible=false;
		}
		else{
			this.rewardText.text=msg.gold+"";
			this.rewardIcon.visible=true;
		}
		this.mpImgDouble.visible=LocalBattleMgr.getInstance().hasItem(6007001);
	}

	__proto.closeHandler=function(e){
		if(LoginControl.instance.isNewUser==1){
			if(LocalBattleMgr.getInstance().getScoreNum()< LocalBattleMgr.getInstance().passScore){
				this.goToShare.visible=false;
				}else{
				this.mouseEnabled=false;
				EventMgr.ins.event("showNewWord");
				return;
			}
		}
		laya.ui.Window.prototype.closeHandler.call(this,e);
	}

	__proto.addEvent=function(){
		EventMgr.ins.event("BATTLE_PAUSE");
		EventMgr.ins.on("REFRESH_DATA",this,this.refreshData);
		this.goTohall.on("click",this,this.showHall);
		this.goToShare.on("click",this,this.showShare);
		this.playAgin.on("click",this,this.goToPlayAgin);
	}

	// EventMgr.ins.on("UPDATE_SHARE_RESPONSE",this,this.onShareResponse);
	__proto.removeEvent=function(){
		EventMgr.ins.off("REFRESH_DATA",this,this.refreshData);
		this.goTohall.off("click",this,this.showHall);
		this.playAgin.off("click",this,this.goToPlayAgin);
	}

	// EventMgr.ins.off("UPDATE_SHARE_RESPONSE",this,this.onShareResponse);
	__proto.goToPlayAgin=function(){
		LocalBattleMgr.getInstance().removeAllItem();
		LocalBattleMgr.getInstance().playAgain();
		UIMgr.ins.closeView("LocalBattleResult");
		SoundMgr.instance.playSound(LocalBattleMgr.getInstance().singleScene.soundId);
	}

	__proto.showShare=function(){
		EventMgr.ins.event("SHARE",[ShareConst.PVE_SETTLE]);
	}

	__proto.showHall=function(){
		UIMgr.ins.openView("AppleGameRoom",Handler.create(this,function(view){
			UIMgr.ins.closeView("LocalBattleResult");
		}));
	}

	//view:initView();
	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		laya.ui.Window.prototype.onResize.call(this,_bestFitWidth,_bestFitHeight);
		var scale=_bestFitWidth/1136;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return LocalBattleResult;
})(BattleResultUI)


//class modules.battle_apple.view.room.AppleGameHelp extends ui.room.AppleGameHelpUI
var AppleGameHelp=(function(_super){
	function AppleGameHelp(){
		this.descs=[{
			type:3,
			title:LanguageMgr.Ins.GetLan("9070057"),
			desc:LanguageMgr.Ins.GetLan("9070058")+"|"+
			LanguageMgr.Ins.GetLan("9070059")+"|"+
			LanguageMgr.Ins.GetLan("9070060")+"|"+
			LanguageMgr.Ins.GetLan("9070061")+"|"+
			LanguageMgr.Ins.GetLan("9070062")
		},];
		this.texts=null;
		AppleGameHelp.__super.call(this);
		this.listpannel.vScrollBar.hide=true;
		this.desclist.renderHandler=Handler.create(this,this.renderCallback,null,false);
	}

	__class(AppleGameHelp,'modules.battle_apple.view.room.AppleGameHelp',_super);
	var __proto=AppleGameHelp.prototype;
	__proto.renderCallback=function(item,index){
		if(index < this.desclist.array.length){
			item.helptext.color="#f6ebdc";
			item.init(this.texts[index]);
		}
	}

	__proto.initHelp=function(type){
		var data=this.getData(type);
		var title=data.title;
		var desc=data.desc;
		this.labTitle.color="#f6ebdc";
		this.texts=desc.split("|");
		this.labTitle.text=title;
		this.desclist.array=this.texts;
		this.desclist.repeatY=this.texts.length;
		this.desclist.refresh();
		if(type==3){
			this.initAppleReward();
		}
		this.mpTextTitle.text=LanguageMgr.Ins.GetLan("9070107");
	}

	__proto.initAppleReward=function(){
		var appleReward=new AppleRewardUI();
		appleReward.mpListView.scrollBar.visible=false;
		this.listpannel.addChild(appleReward);
		appleReward.y=this.desclist.height;
		appleReward.mpListView.renderHandler=new Handler(this,this.onDataFiller,null,false);
	}

	/*appleReward.mpListView.array=LocalBattleMgr.getInstance().getRankRewardConfig();*/
	__proto.onDataFiller=function(item,index){}
	/*var curData:Array=LocalBattleMgr.getInstance().getRankRewardConfig();
	if(index < curData.length){
		item.setData(curData[index]);
	}*/

	__proto.getData=function(type){
		for(var i=0;i < this.descs.length;i++){
			var data=this.descs[i];
			if(data.type==type){
				return data;
			}
		}
		return null;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return AppleGameHelp;
})(AppleGameHelpUI)


//class modules.battle.view.menu.FourBattleMenu extends modules.battle.view.menu.BattleMenu
var FourBattleMenu=(function(_super){
	function FourBattleMenu(hero,enemys,battleScene){
		// private var fourRolehp:Box;
		this.TARGET_SCORE=0;
		this.SOON_TARGET_SCORE=0;
		this.selectRole=0;
		this.heads=[];
		this.tuoguangs=[];
		this.infos=[];
		this.jifens=[];
		this.isShowBB={};
		this.meleeView=null;
		//wifi信号显示
		this._wifi=null;
		this.isShowGet=false;
		this.isShowLost=false;
		this.showArray=[];
		this.lostArray=[];
		this.mvpRole=null;
		this.isFirstGet=true;
		this.isFirstLost=true;
		this.orderShow=null;
		this._playerMsg=null;
		/**手指动画 */
		this._aniFinge=null;
		this.reportList=[];
		this.showReportList=[];
		// private var gTextList:Array=[];
		this.isShowing=false;
		FourBattleMenu.__super.call(this,hero,enemys,battleScene);
		this.TARGET_SCORE=battleScene.battlePrepareMsg.winScore;
		this.SOON_TARGET_SCORE=battleScene.battlePrepareMsg.soonWinScore;
		EventMgr.ins.on("sync_mulit_damage",this,this.syncMulitDamage);
		EventMgr.ins.on("sync_mulit_info",this,this.syncMulitInfo);
		EventMgr.ins.on("UPDATE_WIFI_STATE",this,this.onUpdateWifiState);
		EventMgr.ins.on("recv_battle_fire",this,this.changeFlag);
		EventMgr.ins.on("recv_melee_score",this,this.refreshMeleeScore);
		EventMgr.ins.on("recv_kill_report",this,this.recvKillReport);
		EventMgr.ins.on("die_revive",this,this.goToShowKillReport);
		Laya.stage.on("click",this,this.onClickStage);
	}

	__class(FourBattleMenu,'modules.battle.view.menu.FourBattleMenu',_super);
	var __proto=FourBattleMenu.prototype;
	__proto.initChat=function(){
		this._chatView=new ChatBriefBattleView();
		this.addChild(this._chatView);
		this._chatView.pos(10,100);
		this.chat.y=230;
	}

	__proto.myturn=function(msg,turnMsg){
		_super.prototype.myturn.call(this,msg,turnMsg);
		if(!this.isMyTurn)return;
		this.showAnifinger();
	}

	__proto.overturn=function(){
		if(this.isMyTurn){
			if(this._aniFinge)this.removeChild(this._aniFinge);
		}
		_super.prototype.overturn.call(this);
	}

	__proto.useCard=function(index,skillId,gray){
		if(this._aniFinge)
			this.removeChild(this._aniFinge);
		_super.prototype.useCard.call(this,index,skillId,gray);
	}

	__proto.recvKillReport=function(msg){
		this.reportList.push(msg);
		if(this.reportList.length > 0){
			for(var i=0;i < this.reportList.length;i++){
				var _msg=this.reportList[0];
				var callback=Handler.create(this,this.delayShowKillReport,[_msg]);
				this.showReportList.push(callback);
			}
			this.reportList.splice(0);
		}
	}

	__proto.goToShowKillReport=function(){
		if(!this.battleScene.allLivings || this.battleScene.allLivings.length==0){
			return
		}
		if(!this.isShowing){
			this.isShowing=true;
			this.checkShowKillReport();
		}
	}

	__proto.checkShowKillReport=function(){
		if(this.battleScene.isOver){
			this.showReportList.splice(0);
		}
		if(this.showReportList.length > 0){
			var callBack=this.showReportList[0];
			callBack.run();
			this.showReportList.splice(0,1);
			}else{
			this.isShowing=false;
		}
	}

	__proto.delayShowKillReport=function(msg){
		var value=msg.param1;
		var killingId=msg.param2;
		var killedId=msg.param3;
		var killingRole=this.battleScene.getRole(killingId);
		var killedRole=this.battleScene.getRole(killedId);
		if(value !=1 && value !=2){
			this.showDropItem(killingRole,killedRole);
		}
		this.showKillEffect(killingRole.headurl,killedRole.headurl,value,Handler.create(this,this.checkShowKillReport));
		this.showKillReport(killingRole.nickName,killedRole.nickName,value);
	}

	__proto.getReportText=function(killingName,killedName,value){
		if(killingName==killedName){
			return StringUtils.formate(LanguageMgr.Ins.GetLan("9040045"),killingName);
			}else{
			if(value==1){
				return StringUtils.formate(LanguageMgr.Ins.GetLan("9040035"),killingName,LanguageMgr.Ins.GetLan("9040038"));
				}else if(value==2){
				return StringUtils.formate(LanguageMgr.Ins.GetLan("9040035"),killingName,LanguageMgr.Ins.GetLan("9040039"));
				}else if(value==4){
				return StringUtils.formate(LanguageMgr.Ins.GetLan("9040037"),killingName,killedName);
				}else{
				return StringUtils.formate(LanguageMgr.Ins.GetLan("9040036"),killingName,killedName);
			}
		}
		return "";
	}

	__proto.showKillReport=function(killingName,killedName,value){
		var content=this.getReportText(killingName,killedName,value);
		ChatMgr.ins.sendSysMsg(content,'battle');
	}

	// }
	__proto.showDropItem=function(killingRole,killedRole){
		if(killedRole && killingRole && (killedRole.livingId !=killingRole.livingId)&& !killedRole.isDestroy && !killingRole.isDestroy){
			SoundMgr.instance.playSound(4006022);
			DropItemUtil.showEffect("KillScore",0,killedRole.localToGlobal(new Point(0,0)),killingRole.localToGlobal(new Point(0,0)),20);
		}
	}

	__proto.showKillEffect=function(leftUrl,rightUrl,value,handler){
		var effect=new KillReportEffect(leftUrl,rightUrl,value,handler);
		this.addChild(effect);
	}

	__proto.showAnifinger=function(){}
	// }
	__proto.onUpdateWifiState=function(type){
		if(this._wifi){
			this._wifi.play(type,true);
		}
	}

	__proto.updateBattleTurn=function(turn,turnMsg){
		_super.prototype.updateBattleTurn.call(this,turn,turnMsg);
		this.meleeView.mpClipRound.value=this.battletime.value;
		this.updateOrderShow(turnMsg);
	}

	__proto.updateOrderShow=function(turnMsg){
		if(turnMsg){
			for(var i=0;i < turnMsg.livingList.length;i++){
				var livingTurnMsg=turnMsg.livingList[i];
				var role=this.battleScene.getRole(livingTurnMsg.livingID);
				if(!role){
					return;
				}
			}
			if (!this.orderShow){
				this.orderShow=new OrderShowEffect(-85,43,turnMsg);
				this.orderShow.x=0;
				this.orderShow.y=0;
				this.meleeView.mpBoxOrder.addChild(this.orderShow);
				}else{
				this.orderShow.updateData(turnMsg);
			}
		}
	}

	__proto.syncMulitInfo=function(sourceLivingId,sourceKillNum,sourceScore,targetLivingId,targetScore,targetDeath){
		var info=this.getInfo(sourceLivingId);
		if(info){
			info.sharen=sourceKillNum;
			var temp=info.score;
			info.score=sourceScore;
			if(this.hero.livingId==sourceLivingId){
				this.showGetLostScore(info.score-temp);
			}
		}
		info=this.getInfo(targetLivingId);
		if(info){
			info.siwang=targetDeath;
			var temp=info.score;
			info.score=targetScore;
			if(this.hero.livingId==targetLivingId){
				this.showGetLostScore(info.score-temp);
			}
		}
		this.refreshJifen();
	}

	__proto.syncMulitDamage=function(livingId,damage){
		var info=this.getInfo(livingId);
		if(info){
			info.damage=info.damage+damage;
		}
	}

	__proto.getInfo=function(livingId){
		for(var i=0;i < this.infos.length;i++){
			var data=this.infos[i];
			if(livingId==data.livingId){
				return data;
			}
		}
		return null;
	}

	__proto.initMeleeView=function(){
		this.battletimenode.visible=false;
		this.fenliandtime.y=200;
		this.meleeView=new MeleeBattleMenuUI();
		this.addChild(this.meleeView)
		this._wifi=new AniSkeleton("ui_wifi","ui",2);
		this._wifi.x=-15;
		this._wifi.y=30;
		this.meleeView.mpBoxScore.addChild(this._wifi);
		this.meleeView.mpTextScore.text=this.TARGET_SCORE+"";
		var effect=new LeftToRightTween(StringUtils.formate(LanguageMgr.Ins.GetLan("9070105"),this.TARGET_SCORE));
		this.addChild(effect);
		for(var i=0;i < 3;i++){
			this.meleeView["mpGText"+i].visible=false;
		}
	}

	__proto.initMenu=function(){
		_super.prototype.initMenu.call(this);
		this.initMeleeView();
		this.sortRole();
		this.infos.push({livingId:this.hero.livingId,sharen:this.hero.killNum,siwang:this.hero.dieNum,damage:this.hero.damageNum,score:this.hero.score});
		for(var k=0;k < this.enemys.length;k++){
			var role=this.enemys[k];
			this.infos.push({livingId:role.livingId,sharen:role.killNum,siwang:role.dieNum,damage:role.damageNum,score:role.score});
		}
		for(var i=0;i < this.enemys.length+1;i++){
			var scoreBar=new ScoreBar();
			scoreBar.x=20;
			scoreBar.y=i *32+10;
			this.meleeView.mpBoxScore.addChild(scoreBar);
			this.jifens.push({nickname:scoreBar.mpTextNum,jifen:scoreBar.mpTextScore,view:scoreBar});
		}
		this.refreshDistance();
		this.refreshJifen();
		this.syncHp();
		this.syncHDHp(this.hero.hdpercent,this.hero.side,this.hero.livingId);
		for(var j=0;j < this.enemys.length;j++){
			var enemy=this.enemys[j];
			this.syncHDHp(enemy.hdpercent,enemy.side,enemy.livingId);
		}
		this.isOpenResize=true;
	}

	__proto.onClickStage=function(e){
		if(e.target !=PlayerMsgTips && e.target.name !="enemyHead"){
			if(this._playerMsg){
				this._playerMsg.visible=false;
			}
		}
	}

	__proto.sortRole=function(){
		var list=[];
		list.push(this.hero);
		for(var i=0;i < this.enemys.length;i++){
			var role=this.enemys[i];
			for(var j=0;j < list.length;j++){
				if(role.livingId < list[j].livingId){
					list.splice(j,0,role);
					break ;
					}else if(j==list.length-1){
					list.push(role);
					break ;
				}
			}
		};
		var first=list.splice(0,1);
		while(first[0] !=this.hero){
			list.push(first[0]);
			first=list.splice(0,1);
		}
		this.hero=first [0];
		this.enemys=list;
	}

	__proto.refreshMeleeScore=function(msg){
		if(msg.livingID > 0){
			var info=this.getInfo(msg.livingID);
			if(info){
				var temp=info.score;
				info.score=msg.damageScore;
				info.sharen=msg.killNum;
				if(this.hero.livingId==msg.livingID){
					this.showGetLostScore(info.score-temp);
				}
			}
		}
		if(msg.targetID > 0){
			var info=this.getInfo(msg.targetID);
			if(info){
				var temp=info.score;
				info.score=msg.targetScore;
				info.siwang=msg.dieNum;
				if(this.hero.livingId==msg.targetID){
					this.showGetLostScore(info.score-temp);
				}
			}
		}
		this.refreshJifen();
	}

	__proto.refreshJifen=function(){
		var sort=[];
		for(var i=0;i < this.infos.length;i++){
			var data=this.infos[i];
			if(sort.length <=0){
				sort.push(data);
				}else{
				for(var j=0;j < sort.length;j++){
					var temp=sort[j];
					if(data.score > temp.score){
						sort.splice(j,0,data);
						break ;
						}else if(j==sort.length-1){
						sort.push(data);
						break ;
					}
				}
			}
		};
		var topRole;
		for(var k=0;k < sort.length;k++){
			var data=sort[k];
			var item=this.jifens[k];
			var role=this.getRole(data.livingId);
			item.nickname.text=role.nickName.length > 8 ? role.nickName.substring(0,8)+".." :role.nickName;
			item.jifen.text=""+data.score;
			item.view.mpImgRank.skin="battle/menu/ld/ui_"+k+".png";
			item.view.mpBarPro.skin="battle/menu/ld/ui_bar_"+k+".png";
			if(data.score <=this.TARGET_SCORE){
				item.view.mpBarPro.width=item.view.mpBarBg.width *data.score / this.TARGET_SCORE;
				}else{
				item.view.mpBarPro.width=item.view.mpBarBg.width-6;
			}
			item.view.showLight(data.score >=this.SOON_TARGET_SCORE)
			if(k==0){
				topRole=role;
				var isSoonWin=data.score >=this.SOON_TARGET_SCORE;
				EventMgr.ins.event("changeCrown",[data.livingId,isSoonWin]);
			}
			if(role==this.hero){
				(item.nickname).color="#0ddde7";
				(item.jifen).color="#0ddde7";
				}else{
				(item.nickname).color="#f9f7f8";
				(item.jifen).color="#f9f7f8";
			}
		}
		this.checkShowBBEffect(topRole,item);
	}

	__proto.checkShowBBEffect=function(topRole,item){
		if (topRole.score >=this.SOON_TARGET_SCORE){
			if (!this.mvpRole){
				this.isShowBB[topRole.userId]=false;
				this.realShowBB(topRole);
				}else{
				if (this.mvpRole.userId !=topRole.userId){
					this.isShowBB[this.mvpRole.userId]=true;
					this.realShowBB(topRole);
				}
			}
		}
	}

	__proto.realShowBB=function(topRole){
		if (!this.isShowBB[topRole.userId]){
			var bb=new ShowBBEffect(this.width/2+60,this.height/4,topRole.nickName,LanguageMgr.Ins.GetLan("9004120"),topRole==this.hero);
			Laya.timer.once(3000,this,this.destroyBBEffect,[bb]);
			this.addChild(bb);
			this.isShowBB[topRole.userId]=true;
			this.mvpRole=topRole;
		}
	}

	__proto.destroyBBEffect=function(bb){
		if (bb && !bb.destroyed){
			bb.destroy(true);
		}
	}

	__proto.getRole=function(livingId){
		if(this.hero.livingId==livingId)
			return this.hero;
		for(var i=0;i < this.enemys.length;i++){
			var role=this.enemys[i];
			if(role.livingId==livingId){
				return role;
			}
		}
		return null;
	}

	__proto.refreshDistance=function(){}
	//distanceUI.visible=false;
	__proto.checkHeadPos=function(){
		var enemy=this.enemys[this.selectRole];
		return this.hero.x <=enemy.x;
	}

	__proto.syncHp=function(){
		_super.prototype.syncHp.call(this);
	}

	__proto.checkNeedRedBox=function(){
		var precent=this.hero.hp / this.hero.maxHp;
		if (precent <=0.2){
			return true;
		}
		return false;
	}

	__proto.checkNeedCoundDown=function(){
		return true;
	}

	__proto.syncHDHp=function(hp,side,livingId){
		_super.prototype.syncHDHp.call(this);
	}

	__proto.syncManDate=function(isMandate,side,livingId){}
	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		_super.prototype.onResize.call(this,_bestFitWidth,_bestFitHeight);
		if(UrlParam.PARAMS["PLID"]=="wx"){
			this.meleeView.mpBoxScore.x=_bestFitWidth-60;
			this.meleeView.mpBoxScore.y=-12;
			}else{
			this.meleeView.mpBoxScore.x=_bestFitWidth;
			this.meleeView.mpBoxScore.y=-12;
		}
		this.fenliandtime.x=_bestFitWidth/2-65;
		this.fenliandtime.y=80;
	}

	__proto.destroyMenu=function(){
		EventMgr.ins.off("sync_mulit_damage",this,this.syncMulitDamage);
		EventMgr.ins.off("sync_mulit_info",this,this.syncMulitInfo);
		EventMgr.ins.off("UPDATE_WIFI_STATE",this,this.onUpdateWifiState);
		EventMgr.ins.off("recv_battle_fire",this,this.changeFlag);
		EventMgr.ins.off("recv_melee_score",this,this.refreshMeleeScore);
		EventMgr.ins.off("recv_kill_report",this,this.recvKillReport);
		EventMgr.ins.off("die_revive",this,this.goToShowKillReport);
		Laya.stage.off("click",this,this.onClickStage);
		if(this._aniFinge){
			this._aniFinge.destroy();
			this._aniFinge=null;
		}
		if (this.orderShow && !this.orderShow.destroyed){
			this.orderShow.destroyAll();
		}
		if(this._wifi){
			this._wifi.destroy(true);
			this._wifi=null;
		}
		_super.prototype.destroyMenu.call(this);
	}

	__proto.addSkillIcon=function(skillId,livingId){}
	__proto.cleanSkillIcons=function(){}
	// }
	__proto.showGetLostScore=function(score){
		if(score==0)
			return;
		var getlost=new GetLostScore(score);
		this.addChild(getlost);
		var posx=this._bestFitWidth-364;
		var posy=score > 0?this._bestFitHeight-250:this._bestFitHeight-180;
		if (score > 0){
			if (this.isFirstGet){
				this.realShowChange(getlost,posx,posy,1);
				this.isFirstGet=false;
				}else{
				this.showArray.push({obj:getlost,posx:posx,posy:posy});
				this.checkShowGetLostScore(1);
			}
			}else{
			if (this.isFirstLost){
				this.realShowChange(getlost,posx,posy,2);
				this.isFirstLost=false;
				}else{
				this.lostArray.push({obj:getlost,posx:posx,posy:posy});
				this.checkShowGetLostScore(2);
			}
		}
	}

	__proto.checkShowGetLostScore=function(type){
		if(this.showArray.length > 0 && type==1){
			var data=this.showArray[0];
			var showObj=data.obj;
			this.realShowChange(showObj,data.posx,data.posy,type);
			this.showArray.splice(0,1);
		}
		if(this.lostArray.length > 0 && type==2){
			var data=this.lostArray[0];
			var showObj=data.obj;
			this.realShowChange(showObj,data.posx,data.posy,type);
			this.lostArray.splice(0,1);
		}
	}

	__proto.realShowChange=function(showObj,posx,posy,type){
		showObj.show(posx,posy,Handler.create(this,this.checkShowGetLostScore,[type]));
	}

	__proto.changeFlag=function(){
		this.isFirstLost=true;
		this.isFirstGet=true;
	}

	return FourBattleMenu;
})(BattleMenu)


//class modules.battle.view.menu.MulitPveBattleMenu extends modules.battle.view.menu.BattleMenu
var MulitPveBattleMenu=(function(_super){
	function MulitPveBattleMenu(hero,allLivings,battleScene){
		this.pveTopUI=null;
		this._wifi=null;
		this._playerMsg=null;
		this.allLivings=null;
		this.infos=[];
		this.friendSides=[];
		this.enemySides=[];
		this.itemList=[];
		this.touxiang_effect=null;
		this.touxiang_text=null;
		this.allLivings=allLivings;
		for (var i=0;i < allLivings.length;i++){
			var role=allLivings[i];
			if (role.type==Fighter.HERO||role.type==Fighter.ROLE){
				this.friendSides.push(role);
				this.infos.push({livingId:role.livingId,damage:role.damageNum});
			}
			else{
				this.enemySides.push(role);
			}
		}
		MulitPveBattleMenu.__super.call(this,hero,allLivings,battleScene);
		EventMgr.ins.on("UPDATE_WIFI_STATE",this,this.onUpdateWifiState);
		EventMgr.ins.on("sync_mulit_damage",this,this.syncMulitDamage);
	}

	__class(MulitPveBattleMenu,'modules.battle.view.menu.MulitPveBattleMenu',_super);
	var __proto=MulitPveBattleMenu.prototype;
	__proto.initMenu=function(){
		_super.prototype.initMenu.call(this);
		this.pveTopUI=new PveBattleMelleMenuUI();
		this.pveTopUI.mouseThrough=true;
		this.addChild(this.pveTopUI);
		var roleDatas=this.friendSides;
		var len=roleDatas.length;
		var tempRole;
		for (var i=0;i < 4;i++){
			if(i<len){
				this.pveTopUI["roleHeadNode"+i].visible=true;
				tempRole=roleDatas[i];
				this.updateRoleHeadHp(tempRole,this.pveTopUI["roleHeadNode"+i]);
				this.syncHDHp(tempRole.hdpercent,tempRole.side,tempRole.livingId);
				var scoreBar=new ScoreBar();
				scoreBar.x=20;
				scoreBar.y=i *32+10;
				this.pveTopUI.mpBoxScore.addChild(scoreBar);
				this.itemList.push(scoreBar);
				}else{
				this.pveTopUI["roleHeadNode"+i].visible=false;
			}
		};
		var campaignVO=CampaignModel.getConfigData(Cache.ins.battle.battlePrepareMsg.campaignId);
		this.updateMonstarHead(campaignVO.GroupID);
		this.refreshDistance();
		this.syncHp();
		this.syncHDHp(this.hero.hdpercent,this.hero.side,this.hero.livingId);
		this.isOpenResize=true;
		this.feiji.visible=false;
		this.friendskil.visible=false;
		this.fengli.visible=false;
		this.battletimenode.visible=false;
		this._wifi=new AniSkeleton("ui_wifi","ui",2);
		this._wifi.x=825;
		this._wifi.y=105;
		this.pveTopUI.addChild(this._wifi);
		this.refreshDamage();
	}

	__proto.syncMulitDamage=function(livingId,damage){
		for(var i=0;i<this.infos.length;i+=1){
			if(this.infos[i].livingId==livingId){
				this.infos[i].damage=this.infos[i].damage+damage;
			}
		}
		this.refreshDamage();
	}

	__proto.refreshDamage=function(){
		var sort=[];
		for(var i=0;i < this.infos.length;i++){
			var data=this.infos[i];
			if(sort.length <=0){
				sort.push(data);
				}else{
				for(var j=0;j < sort.length;j++){
					var temp=sort[j];
					if(data.damage > temp.damage){
						sort.splice(j,0,data);
						break ;
						}else if(j==sort.length-1){
						sort.push(data);
						break ;
					}
				}
			}
		};
		var topRole;
		for(var k=0;k < sort.length;k++){
			var item=this.itemList[k];
			var role=this.getRole(sort[k].livingId);
			item.mpTextNum.text=role.nickName.length > 8 ? role.nickName.substring(0,8)+".." :role.nickName;
			item.mpTextScore.text=""+sort[k].damage;
			item.mpImgRank.skin="battle/menu/ld/ui_"+k+".png";
			item.mpBarPro.visible=false;
			if(role==this.hero){
				(item.mpTextNum).color="#0ddde7";
				(item.mpTextScore).color="#0ddde7";
				}else{
				(item.mpTextNum).color="#f9f7f8";
				(item.mpTextScore).color="#f9f7f8";
			}
		}
	}

	__proto.getRole=function(livingId){
		if(this.hero.livingId==livingId)
			return this.hero;
		for(var i=0;i < this.friendSides.length;i++){
			var role=this.friendSides[i];
			if(role.livingId==livingId){
				return role;
			}
		}
		return null;
	}

	__proto.onUpdateWifiState=function(type){
		if(this._wifi){
			this._wifi.play(type,true);
		}
	}

	__proto.updateMonstarHead=function(monsterId){
		(monsterId===void 0)&& (monsterId=9020008);
		var role=this.enemySides[0];
		role.headurl="assets/textrue/aihead/"+monsterId+".png";
		this.pveTopUI.monster.name=role.livingId+"";
		var headnode=this.pveTopUI.monster.getChildByName("headnode");
		var head=headnode.getChildByName("head");
		role.headurl && PlayerInfoMgr.ins.getHeadImgUrl(role.headurl,Handler.create(this,function(url){
			head.skin=url;
		}));
	}

	__proto.updateRoleHeadHp=function(_role,roleHeadNode){
		if(!_role.headurl){
			_role.headurl="";
		}
		if(_role.headurl.indexOf("http")==-1 && _role.headurl !=""){
			_role.headurl="assets/textrue/aihead/"+_role.headurl+".png";
		}
		roleHeadNode.name=_role.livingId+"";
		var headnode=roleHeadNode.getChildByName("headnode");
		var head=headnode.getChildByName("head");
		_role.headurl && PlayerInfoMgr.ins.getHeadImgUrl(_role.headurl,Handler.create(this,function(url){
			head.skin=url;
		}));
		if(_role !=this.hero){
			headnode.on("mousedown",this,this.onShowPlayerMsg,[_role,headnode,roleHeadNode]);
		}
	}

	__proto.onShowPlayerMsg=function(enemy,headnode,img){
		if(this._playerMsg==null){
			this._playerMsg=new PlayerMsgTips();
		}
		img.addChild(this._playerMsg);
		this._playerMsg.x=headnode.x-15;
		this._playerMsg.y=headnode.y+headnode.height-13;
		this._playerMsg.setData(enemy);
		this._playerMsg.visible=true;
	}

	__proto.checkNeedRedBox=function(){
		var precent=this.hero.hp / this.hero.maxHp;
		if (precent <=0.2){
			return true;
		}
		return false;
	}

	__proto.checkNeedCoundDown=function(){
		return true;
	}

	__proto.addSkillIcon=function(skillId,livingId){
		var skillData=SkillModel.getSkillConfigData(skillId);
		var skillPerData=SkillModel.getSkillPerformanceBySkillId(skillData.Display);
		var imagenode=new SkillCardMin();
		imagenode.skillVo=skillData;
		imagenode.scale(0.6,0.6);
		this.skillIcons.push(imagenode);
		this.cardbox.addChild(imagenode);
		var x=(600-this.skillIcons.length *65)/2;
		var y=-55;
		for(var i=0;i < this.skillIcons.length;i++){
			var px=x+i *45;
			var py=y;
			var node=this.skillIcons[i];
			Tween.to(node,{x:px,y:py,alpha:1},3/30 *1000,null,null,i *3/30*1000);
		}
	}

	__proto.cleanSkillIcons=function(){
		for (var i=0;i < this.skillIcons.length;i++){
			var image=this.skillIcons[i];
			image.removeSelf();
			image.destroy(true);
		}
		this.skillIcons.splice(0);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		EventMgr.ins.off("UPDATE_WIFI_STATE",this,this.onUpdateWifiState);
		EventMgr.ins.off("sync_mulit_damage",this,this.syncMulitDamage);
		if(this.touxiang_effect){
			this.touxiang_effect.removeSelf();
			this.touxiang_effect.destroy();
			this.touxiang_effect=null;
		}
		laya.ui.BaseView.prototype.destroy.call(this,destroyChild);
	}

	__proto.updateWind=function(wind){
		wind=wind / 10;
		var temp=wind;
		if (wind < 0){
			temp=wind *-1;
		}
		this._$9_createFengli();
		this.pveTopUI.txtFengli.text=""+temp;
		if (wind < 0){
			this.fengliani.scale(-1.0,1.0);
		}
		else{
			this.fengliani.scale(1.0,1.0);
		}
	}

	__proto._$9_createFengli=function(){
		if (!this.fengliani){
			this.fengliani=new AniSkeleton("assets/animation/uieffect/ui8.sk",null,0,true);
			this.fengliani.x=0;
			this.fengliani.y=0;
			this.fengliani.zOrder=-1;
			this.pveTopUI.boxFengli.addChild(this.fengliani);
		}
	}

	__proto.updateBattleTurn=function(turn,turnMsg){
		_super.prototype.updateBattleTurn.call(this,turn,turnMsg);
		this.pveTopUI.battletime.value=this.battletime.value;
		this.pveTopUI.battletime.y=this.pveTopUI.battletimeTexeImg.y+this.pveTopUI.battletimeTexeImg.height+16;
		if(turnMsg){
			var curLivingId=turnMsg.livingList[0].livingID;
			var curRoleHeadNode=this.pveTopUI.getChildByName(curLivingId+"");
			if(curRoleHeadNode){
				if(this.touxiang_effect==null){
					this.touxiang_effect=new AniSkeleton("ui_touxiangfaguang02","ui");
					this.touxiang_effect.x=37;
					this.touxiang_effect.y=37;
				}
				curRoleHeadNode.addChild(this.touxiang_effect);
				if(this.touxiang_text==null){
					this.touxiang_text=new Label();
					this.touxiang_text.fontSize=16;
					this.touxiang_text.color="#FFFC9D";
					this.touxiang_text.stroke=2;
					this.touxiang_text.strokeColor="#DA3E00";
					this.touxiang_text.text=LanguageMgr.Ins.GetLan(9070104);
					this.touxiang_text.align="center";
					this.touxiang_text.anchorX=0.5;
					this.touxiang_text.x=37;
					this.touxiang_text.y=70;
				}
				curRoleHeadNode.addChild(this.touxiang_text);
			}
		}
	}

	__proto.destroyMenu=function(){
		for (var i=0;i < 4;i++){
			var headnode=this.pveTopUI["roleHeadNode"+i].getChildByName("headnode");
			headnode.off("mousedown",this,this.onShowPlayerMsg)
		}
		this.pveTopUI && this.pveTopUI.destroy();
		this.pveTopUI=null;
		_super.prototype.destroyMenu.call(this);
	}

	return MulitPveBattleMenu;
})(BattleMenu)


//class modules.battle.view.menu.PveBattleMenu extends modules.battle.view.menu.BattleMenu
var PveBattleMenu=(function(_super){
	function PveBattleMenu(hero,enemys,battleScene){
		this.boxReward=null;
		PveBattleMenu.__super.call(this,hero,enemys,battleScene);
	}

	__class(PveBattleMenu,'modules.battle.view.menu.PveBattleMenu',_super);
	var __proto=PveBattleMenu.prototype;
	__proto.initMenu=function(){
		_super.prototype.initMenu.call(this);
		this.boxReward=new PveBoxReward();
		this.addChild(this.boxReward);
		this.boxReward.mouseEnabled=true;
		this.boxReward.mouseThrough=true;
		var stage=Cache.ins.battle.battleCreateMsg.params.params[0];
		this.boxReward.dataSource={"stage":stage};
		this.refreshDistance();
		this.syncHp();
		this.syncHDHp(this.hero.hdpercent,this.hero.side,this.hero.livingId);
		this.isOpenResize=true;
		this.feiji.visible=false;
		this.friendskil.visible=false;
		this.battletimenode.visible=stage % 5 !=0;
		this.fengli.visible=false;
	}

	__proto.checkNeedRedBox=function(){
		var precent=this.hero.hp / this.hero.maxHp;
		if (precent <=0.2){
			return true;
		}
		return false;
	}

	__proto.checkNeedCoundDown=function(){
		return true;
	}

	__proto.updateBattleTurn=function(turn,turnMsg){
		this.boxReward.setProgress(turn);
		_super.prototype.updateBattleTurn.call(this,turn,turnMsg);
	}

	__proto.updateWind=function(wind){
		wind=wind / 10;
		var temp=wind;
		if (wind < 0){
			temp=wind *-1;
		}
		this._$9_createFengli();
		this.boxReward.txtFengli.text=""+temp;
		if (wind < 0){
			this.fengliani.scale(-1.0,1.0);
		}
		else{
			this.fengliani.scale(1.0,1.0);
		}
	}

	__proto._$9_createFengli=function(){
		if (!this.fengliani){
			this.fengliani=new AniSkeleton("assets/animation/uieffect/ui8.sk",null,0,true);
			this.fengliani.x=0;
			this.fengliani.y=0;
			this.fengliani.zOrder=-1;
			this.boxReward.boxFengli.addChild(this.fengliani);
		}
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		_super.prototype.onResize.call(this,_bestFitWidth,_bestFitHeight);
		this.boxReward.x=0;
		this.boxReward.y=0;
	}

	__proto.addSkillIcon=function(skillId,livingId){
		var skillData=SkillModel.getSkillConfigData(skillId);
		var skillPerData=SkillModel.getSkillPerformanceBySkillId(skillData.Display);
		var imagenode=new SkillCardMin();
		imagenode.skillVo=skillData;
		imagenode.scale(0.6,0.6);
		this.skillIcons.push(imagenode);
		this.cardbox.addChild(imagenode);
		var x=(600-this.skillIcons.length *65)/2;
		var y=-55;
		for(var i=0;i < this.skillIcons.length;i++){
			var px=x+i *45;
			var py=y;
			var node=this.skillIcons[i];
			Tween.to(node,{x:px,y:py,alpha:1},3/30 *1000,null,null,i *3/30*1000);
		}
	}

	__proto.cleanSkillIcons=function(){
		for (var i=0;i < this.skillIcons.length;i++){
			var image=this.skillIcons[i];
			image.removeSelf();
			image.destroy(true);
		}
		this.skillIcons.splice(0);
	}

	__proto.destroyMenu=function(){
		this.boxReward && this.boxReward.destroy();
		this.boxReward=null;
		_super.prototype.destroyMenu.call(this);
	}

	return PveBattleMenu;
})(BattleMenu)


//class modules.battle.view.menu.PvpBattleMenu extends modules.battle.view.menu.BattleMenu
var PvpBattleMenu=(function(_super){
	function PvpBattleMenu(hero,allLivings,battleScene){
		this.pvpRoleHpUI=null;
		this._wifi=null;
		this._playerMsg=null;
		this.allLivings=null;
		this.friendSides=null;
		this.enemySides=null;
		this.touxiang_effect=null;
		this.touxiang_text=null;
		this.allLivings=allLivings;
		var lans=[];
		var hongs=[];
		for (var i=0;i < allLivings.length;i++){
			var role=allLivings[i];
			if (role.teamType==1){
				lans.push(role);
			}
			else{
				hongs.push(role);
			}
		}
		if(hero.side==Fighter.DIR_LEFT){
			this.friendSides=lans;
			this.enemySides=hongs;
		}
		else{
			this.friendSides=hongs;
			this.enemySides=lans;
		}
		PvpBattleMenu.__super.call(this,hero,allLivings,battleScene);
		EventMgr.ins.on("UPDATE_WIFI_STATE",this,this.onUpdateWifiState);
		EventMgr.ins.on("fighter_die",this,this.dead);
		Laya.stage.on("click",this,this.onClickStage);
	}

	__class(PvpBattleMenu,'modules.battle.view.menu.PvpBattleMenu',_super);
	var __proto=PvpBattleMenu.prototype;
	__proto.onClickStage=function(e){
		if(!((e.target instanceof modules.battle.view.menu.PlayerMsgTips ))
			&& e.target !=this.pvpRoleHpUI.roleHeadNode0.getChildByName("headnode")&& e.target !=this.pvpRoleHpUI.roleHeadNode1.getChildByName("headnode")
		&& e.target !=this.pvpRoleHpUI.roleHeadNode2.getChildByName("headnode")&& e.target !=this.pvpRoleHpUI.roleHeadNode3.getChildByName("headnode")){
			if(this._playerMsg){
				this._playerMsg.visible=false;
			}
		}
	}

	__proto.onUpdateWifiState=function(type){
		if(this._wifi){
			this._wifi.play(type,true);
		}
	}

	__proto.dead=function(fighter,delay){
		(delay===void 0)&& (delay=0);
		var roleHeadNode;
		var headnode;
		for (var i=0;i < this.allLivings.length;i++){
			if (this.allLivings[i]==fighter){
				roleHeadNode=this.pvpRoleHpUI.getChildByName(fighter.livingId+"");
				headnode=roleHeadNode ? roleHeadNode.getChildByName("headnode"):null;
				if(headnode){
					headnode.filters=[FilterUtils.darkFilter(0.4)];
				}
			}
		}
	}

	__proto.initMenu=function(){
		_super.prototype.initMenu.call(this);
		this.battletimenode.visible=false;
		this.fengli.y=-32;
		this.pvpRoleHpUI=new PvpRoleHpUI();
		this.addChild(this.pvpRoleHpUI);
		this.syncHp();
		var roleDatas=[].concat(this.friendSides).concat(this.enemySides);
		var len=roleDatas.length;
		var tempRole;
		for (var i=0;i < len;i++){
			tempRole=roleDatas[i];
			this.updateRoleHeadHp(tempRole,this.pvpRoleHpUI["roleHeadNode"+i]);
			this.syncHDHp(tempRole.hdpercent,tempRole.side,tempRole.livingId);
		}
		this.refreshDistance();
		this.isOpenResize=true;
		this._wifi=new AniSkeleton("ui_wifi","ui",2);
		this._wifi.x=860;
		this._wifi.y=35;
		this.pvpRoleHpUI.addChild(this._wifi);
		this.friendskil.visible=true;
	}

	// this.feiji.y=this.friendskil.y;
	__proto.updateRoleHeadHp=function(_role,roleHeadNode){
		if(!_role.headurl){
			_role.headurl="";
		}
		if(_role.headurl.indexOf("http")==-1 && _role.headurl !=""){
			_role.headurl="assets/textrue/aihead/"+_role.headurl+".png";
		}
		roleHeadNode.name=_role.livingId+"";
		var headnode=roleHeadNode.getChildByName("headnode");
		var head=headnode.getChildByName("head");
		_role.headurl && PlayerInfoMgr.ins.getHeadImgUrl(_role.headurl,Handler.create(this,function(url){
			head.skin=url;
		}));
		if(_role !=this.hero){
			headnode.on("mousedown",this,this.onShowPlayerMsg,[_role,headnode,roleHeadNode]);
		}
	}

	__proto.onShowPlayerMsg=function(enemy,headnode,img){
		if(this._playerMsg==null){
			this._playerMsg=new PlayerMsgTips();
		}
		img.addChild(this._playerMsg);
		this._playerMsg.x=headnode.x-15;
		this._playerMsg.y=headnode.y+headnode.height-13;
		this._playerMsg.setData(enemy);
		this._playerMsg.visible=true;
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		_super.prototype.onResize.call(this,_bestFitWidth,_bestFitHeight);
		this.pvpRoleHpUI.x=(_bestFitWidth-852)/2;
		this.pvpRoleHpUI.y=0;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		EventMgr.ins.off("UPDATE_WIFI_STATE",this,this.onUpdateWifiState);
		EventMgr.ins.off("fighter_die",this,this.dead);
		if(this.touxiang_effect){
			this.touxiang_effect.removeSelf();
			this.touxiang_effect.destroy();
			this.touxiang_effect=null;
			console.log("移除touxiang_effect");
		}
		laya.ui.BaseView.prototype.destroy.call(this,destroyChild);
	}

	__proto.updateBattleTurn=function(turn,turnMsg){
		_super.prototype.updateBattleTurn.call(this,turn,turnMsg);
		if(turnMsg){
			var curLivingId=turnMsg.livingList[0].livingID;
			var curRoleHeadNode=this.pvpRoleHpUI.getChildByName(curLivingId+"");
			if(curRoleHeadNode){
				if(this.touxiang_effect==null){
					this.touxiang_effect=new AniSkeleton("ui_touxiangfaguang02","ui");
					this.touxiang_effect.x=37;
					this.touxiang_effect.y=37;
				}
				curRoleHeadNode.addChild(this.touxiang_effect);
				if(this.touxiang_text==null){
					this.touxiang_text=new Label();
					this.touxiang_text.fontSize=16;
					this.touxiang_text.color="#FFFC9D";
					this.touxiang_text.stroke=2;
					this.touxiang_text.strokeColor="#DA3E00";
					this.touxiang_text.text=LanguageMgr.Ins.GetLan(9070104);
					this.touxiang_text.align="center";
					this.touxiang_text.anchorX=0.5;
					this.touxiang_text.x=37;
					this.touxiang_text.y=70;
				}
				curRoleHeadNode.addChild(this.touxiang_text);
			}
		}
	}

	return PvpBattleMenu;
})(BattleMenu)


//class modules.battle.view.menu.TwoBattleMenu extends modules.battle.view.menu.BattleMenu
var TwoBattleMenu=(function(_super){
	function TwoBattleMenu(hero,enemys,battleScene){
		this.twoRoleHp=null;
		this.enemy=null;
		this._wifi=null;
		this._playerMsg=null;
		TwoBattleMenu.__super.call(this,hero,enemys,battleScene);
		this.enemy=enemys[0];
		EventMgr.ins.on("UPDATE_WIFI_STATE",this,this.onUpdateWifiState);
		Laya.stage.on("click",this,this.onClickStage);
	}

	__class(TwoBattleMenu,'modules.battle.view.menu.TwoBattleMenu',_super);
	var __proto=TwoBattleMenu.prototype;
	__proto.onClickStage=function(e){
		if(!((e.target instanceof modules.battle.view.menu.PlayerMsgTips ))&& e.target !=this.twoRoleHp.left_headnode && e.target !=this.twoRoleHp.right_headnode){
			if(this._playerMsg){
				this._playerMsg.visible=false;
			}
		}
	}

	__proto.initMenu=function(){
		var _$this=this;
		_super.prototype.initMenu.call(this);
		this.battletimenode.visible=false;
		this.fengli.y=-32;
		this.twoRoleHp=new TwoRoleHpUI();
		this.addChild(this.twoRoleHp);
		if(!this.enemy.headurl){
			this.enemy.headurl="";
		}
		if(this.enemy.headurl.indexOf("http")==-1 && this.enemy.headurl !=""){
			this.enemy.headurl="assets/textrue/aihead/"+this.enemy.headurl+".png";
		}
		PlayerInfoMgr.ins.getHeadImgUrl(this.enemy.headurl,Handler.create(this,function(url){
			if(_$this.hero.side==Fighter.DIR_RIGHT){
				_$this.twoRoleHp.right_head.skin=url;
				}else {
				_$this.twoRoleHp.left_head.skin=url;
			}
		}));
		this.hero.headurl && PlayerInfoMgr.ins.getHeadImgUrl(this.hero.headurl,Handler.create(this,function(url){
			if(_$this.hero.side==Fighter.DIR_RIGHT){
				_$this.twoRoleHp.left_head.skin=url;
				}else {
				_$this.twoRoleHp.right_head.skin=url;
			}
		}));
		if(this.hero.side==Fighter.DIR_RIGHT){
			this.twoRoleHp.right_headnode.on("mousedown",this,this.onShowPlayerMsg,[this.enemy,this.twoRoleHp.right_headnode,this.twoRoleHp.hong]);
			}else {
			this.twoRoleHp.left_headnode.on("mousedown",this,this.onShowPlayerMsg,[this.enemy,this.twoRoleHp.left_headnode,this.twoRoleHp.lan]);
		}
		this.refreshDistance();
		this.syncHp();
		this.syncHDHp(this.hero.hdpercent,this.hero.side,this.hero.livingId);
		this.syncHDHp(this.enemy.hdpercent,this.enemy.side,this.enemy.livingId);
		this.isOpenResize=true;
		this._wifi=new AniSkeleton("ui_wifi","ui",2);
		this._wifi.x=860;
		this._wifi.y=35;
		this.twoRoleHp.addChild(this._wifi);
		this.friendskil.visible=false;
	}

	// this.feiji.y=this.friendskil.y;
	__proto.onShowPlayerMsg=function(enemy,headnode,img){
		if(this._playerMsg==null){
			this._playerMsg=new PlayerMsgTips();
		}
		img.addChild(this._playerMsg);
		this._playerMsg.x=headnode.x-15;
		this._playerMsg.y=headnode.y+headnode.height-13;
		this._playerMsg.setData(enemy);
		this._playerMsg.visible=true;
	}

	__proto.onUpdateWifiState=function(type){
		if(this._wifi){
			this._wifi.play(type,true);
		}
	}

	__proto.refreshDistance=function(){}
	// calcHeadPos();
	__proto.checkHeadPos=function(){
		return this.hero.x <=this.enemy.x;
	}

	// }
	__proto.syncManDate=function(isMandate,side,livingId){
		if(isMandate){
			if(!this.tuoguan){
				this.tuoguan=new Image(LanguageMgr.Ins.getBattleLanguagePath("ui_tuogz.png"));
				this.tuoguan.anchorX=0.5;
				this.tuoguan.anchorY=0.5;
				var parent=null;
				if(side==Fighter.DIR_RIGHT){
					parent=this.twoRoleHp.lan;
					this.userHead=this.twoRoleHp.left_head;
					this.tuoguan.x=40;
					this.tuoguan.y=40;
					}else{
					parent=this.twoRoleHp.hong;
					this.userHead=this.twoRoleHp.right_head;
					this.tuoguan.x=40;
					this.tuoguan.y=40;
					this.tuoguan.scale(-1.0,1.0);
				}
				parent.addChild(this.tuoguan);
				this.userHead.filters=[new ColorFilter([
				0.4,0,0,0,0,
				0,0.4,0,0,0,
				0,0,0.4,0,0,
				0,0,0,1,0])];
			}
			}else{
			if(this.tuoguan){
				this.tuoguan.destroy(true);
				this.tuoguan.removeSelf();
				this.tuoguan=null;
				this.userHead.filters=null;
			}
		}
	}

	// }
	__proto.checkNeedRedBox=function(){
		var precent=this.hero.hp / this.hero.maxHp;
		if (precent <=0.2){
			return true;
		}
		return false;
	}

	__proto.checkNeedCoundDown=function(){
		return true;
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		_super.prototype.onResize.call(this,_bestFitWidth,_bestFitHeight);
		this.twoRoleHp.x=(_bestFitWidth-852)/2;
		this.twoRoleHp.y=0;
	}

	__proto.addSkillIcon=function(skillId,livingId){
		var skillData=SkillModel.getSkillConfigData(skillId);
		var skillPerData=SkillModel.getSkillPerformanceBySkillId(skillData.Display);
		var imagenode=new SkillCardMin();
		imagenode.skillVo=skillData;
		imagenode.scale(0.6,0.6);
		this.skillIcons.push(imagenode);
		this.cardbox.addChild(imagenode);
		var x=(600-this.skillIcons.length *65)/2;
		var y=-55;
		for(var i=0;i < this.skillIcons.length;i++){
			var px=x+i *45;
			var py=y;
			var node=this.skillIcons[i];
			Tween.to(node,{x:px,y:py,alpha:1},3/30 *1000,null,null,i *3/30*1000);
		}
	}

	__proto.cleanSkillIcons=function(){
		for(var i=0;i < this.skillIcons.length;i++){
			var image=this.skillIcons[i];
			image.removeSelf();
			image.destroy(true);
		}
		this.skillIcons.splice(0);
	}

	__proto.destroyMenu=function(){
		EventMgr.ins.off("UPDATE_WIFI_STATE",this,this.onUpdateWifiState);
		Laya.stage.off("click",this,this.onClickStage);
		if(this._wifi){
			this._wifi.destroy(true);
			this._wifi=null;
		}
		_super.prototype.destroyMenu.call(this);
	}

	return TwoBattleMenu;
})(BattleMenu)


//class modules.battle_apple.view.LocalBattleScene extends modules.battle.view.BattleScene
var LocalBattleScene=(function(_super){
	function LocalBattleScene(sceneType,arr,needLoading){
		this._$9_delayExecuteTime=0;
		this.prepareMsg=null;
		this.mapMsg=null;
		this.fireMsgs=[];
		this.preludeAni=null;
		(needLoading===void 0)&& (needLoading=true);
		var _prepareMsg=arr[0];
		var _mapMsg=arr[1];
		this.prepareMsg=_prepareMsg;
		this.mapMsg=_mapMsg;
		var sceneVO=SceneModel.getSceneConfig(this.prepareMsg.sceneId);
		this.resourceId=sceneVO.SceneResource;
		LocalBattleScene.__super.call(this,SceneType.APPLE_GAME_SCENE,arr,needLoading);
		this._sceneType=SceneType.APPLE_GAME_SCENE;
	}

	__class(LocalBattleScene,'modules.battle_apple.view.LocalBattleScene',_super);
	var __proto=LocalBattleScene.prototype;
	//覆盖场景类型
	__proto.addPublicEvents=function(){
		EventMgr.ins.on("DIG_CRATER_LOCAL",this,this.localCrater);
		EventMgr.ins.on("SEND_LOCAL_FIRE",this,this.sendLocalFire);
		EventMgr.ins.on("MOVE_NPC_POS",this,this.npcPosChange);
		EventMgr.ins.on("UPDATE_SCENE_WIND",this,this.updateBattleWind);
		EventMgr.ins.on("SHOW_PRELUDE",this,this.showPrelude);
		EventMgr.ins.on("HIDE_PRELUDE",this,this.hidePrelude);
		EventMgr.ins.on("LOCAL_BATTLE_MOVE",this,this.recvLocalBattleMove);
	}

	__proto.removePublicEvents=function(){
		EventMgr.ins.off("DIG_CRATER_LOCAL",this,this.localCrater);
		EventMgr.ins.off("SEND_LOCAL_FIRE",this,this.sendLocalFire);
		EventMgr.ins.off("MOVE_NPC_POS",this,this.npcPosChange);
		EventMgr.ins.off("UPDATE_SCENE_WIND",this,this.updateBattleWind);
		EventMgr.ins.off("SHOW_PRELUDE",this,this.showPrelude);
		EventMgr.ins.off("HIDE_PRELUDE",this,this.hidePrelude);
		EventMgr.ins.off("LOCAL_BATTLE_MOVE",this,this.recvLocalBattleMove);
	}

	__proto.recvLocalBattleMove=function(msg){
		var fighter=this.getFighter(msg.livingID);
		if(fighter){
			var dir=fighter.x-msg.posX > 0?Fighter.DIR_LEFT:Fighter.DIR_RIGHT;
			if(fighter.x==msg.posX){
				dir=msg.direction;
			}
			EventMgr.ins.event("ROLE_MOVING")
			fighter.autoMove(msg.posX,this.height-msg.posY,dir);
		}
	}

	__proto.npcPosChange=function(msg){
		for(var i=0;i < msg.livingList.length;i++){
			var npcMsg=msg.livingList[i];
			var npc=this.getNpc(npcMsg.livingId);
			if(npc){
				npc.refreshNpc(npcMsg);
				EventMgr.ins.event("REFRESH_COLLIDE_AREA");
			}
		}
	}

	__proto.showPrelude=function(){
		if(!this.menuView){
			this.hidePrelude();
			return;
		}
		if(this.preludeAni){
			this.preludeAni.removeSelf();
			this.preludeAni.destroy(true);
			this.preludeAni=null;
		}
		this.preludeAni=new AniSkeleton("assets/animation/uieffect/xumu.sk",null,0,false,Handler.create(this,this.playEnd));
		this.preludeAni.x=ResizeMgr.bestFitWidth/2;
		this.preludeAni.y=ResizeMgr.bestFitHeight/2;
		this.preludeAni.zOrder=999999999;
		this.menuView.addChild(this.preludeAni);
		this.preludeAni.visible=true;
		this.preludeAni.play("animation",false);
		Laya.timer.once(500,this,this.refreshNextTurnUI);
	}

	__proto.refreshNextTurnUI=function(){
		EventMgr.ins.event("REFRESH_NPC");
	}

	__proto.playEnd=function(){
		this.hidePrelude();
	}

	__proto.hidePrelude=function(){
		EventMgr.ins.event("HIDE_PRELUDE_COMPLETE",true)
	}

	__proto.updateBattleWind=function(_wind){
		this.wind=_wind;
	}

	__proto.sendLocalFire=function(msg){
		this.fireMsgs.push(msg);
		if(this.ballisticGuide){
			this.ballisticGuide.graphics.clear();
		}
	}

	__proto.localCrater=function(data){
		this.crater(data.layerId,data.crackId,data.x,data.y,data.bombLivingID);
	}

	__proto.initCurPvpConfig=function(){
		return null;
	}

	__proto.init=function(){
		_super.prototype.init.call(this);
		this.hero.hideHpProgress();
		this.hero.changeWeapon(26);
	}

	//切换标枪武器
	__proto.addBattleRes=function(res){
		res.push({url:"assets/atlas/battle/menu.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/shuzi.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/biaoqing.atlas",type:"atlas"});
		res.push({url:"assets/maps/"+this.resourceId+"_1.map",type:"arraybuffer"});
		res.push({url:"assets/atlas/battle/menu/xt.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/menu/headhp.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/menu/rolehp.atlas",type:"atlas"});
		res.push({url:"assets/atlas/appleGame/fruit.atlas",type:"atlas"});
		res.push({url:"assets/atlas/skillItem.atlas",type:"atlas"});
		res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/battle/menu.atlas",type:"atlas"});
		res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/battle/menu/fruit.atlas",type:"atlas"});
		res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/battle/menu/melee.atlas",type:"atlas"});
		res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/room.atlas",type:"atlas"});
	}

	//res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/room/fruit.atlas",type:Loader.ATLAS});
	__proto.clearBattleMenuRes=function(){
		var res=[];
		res.push({url:"assets/atlas/battle/menu.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/shuzi.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/biaoqing.atlas",type:"atlas"});
		res.push({url:"assets/maps/"+this.resourceId+"_1.map",type:"arraybuffer"});
		res.push({url:"assets/atlas/battle/menu/xt.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/menu/headhp.atlas",type:"atlas"});
		res.push({url:"assets/atlas/battle/menu/rolehp.atlas",type:"atlas"});
		res.push({url:"assets/atlas/room.atlas",type:"atlas"});
		res.push({url:"assets/atlas/room/fruit.atlas",type:"atlas"});
		res.push({url:"assets/atlas/appleGame/fruit.atlas",type:"atlas"});
		res.push({url:"assets/atlas/skillItem.atlas",type:"atlas"});
		res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/battle/menu.atlas",type:"atlas"});
		res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/battle/menu/fruit.atlas",type:"atlas"});
		res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/battle/menu/melee.atlas",type:"atlas"});
		res.push({url:"assets/atlas/language/"+LanguageMgr.Ins.country+"/room.atlas",type:"atlas"});
		var obj;
		for(var $each_obj in res){
			obj=res[$each_obj];
			Laya.loader.clearRes(obj.url,true);
		}
	}

	__proto.getSampleCount=function(){
		var data=LocalBattleMgr.getInstance().getDataByRound();
		return data.LineLength;
	}

	__proto.updateScene=function(){
		this._$9_delayExecuteTime+=1/30 *1000;
		if(this._$9_delayExecuteTime > 400){
			this._$9_delayExecuteTime=0;
			if(this.fireMsgs.length > 0){
				var msg=this.fireMsgs.splice(0,1);
				new SkillAnimationExecutor(msg[0],this);
			}
		}
	}

	__proto.exit=function(){
		SkillAnimationExecutor.clearAll();
		LocalBattleMgr.getInstance().onExitSingleBattle();
		_super.prototype.exit.call(this);
	}

	__proto.enter=function(){
		_super.prototype.enter.call(this);
		if(!LocalBattleMgr.getInstance().isNew){
			EventMgr.ins.event("HIDE_PRELUDE_COMPLETE");
		}
	}

	__proto.showSceneShake=function(ball){}
	return LocalBattleScene;
})(BattleScene)


//class modules.chat.view.ChatSetView extends ui.chat.ChatSetViewUI
var ChatSetView=(function(_super){
	function ChatSetView(){
		this.clickCached=false
		ChatSetView.__super.call(this);
		for(var i=0;i < 4;i++){
			var settingCheckBox=this._body.getChildAt(i);
			var name_;
			switch(i){
				case 0:
					name_='world';
					settingCheckBox.desc.text=LanguageMgr.Ins.GetLan("9070079");
					break ;
				case 1:
					name_='guild';
					settingCheckBox.desc.text=LanguageMgr.Ins.GetLan("9070080");
					break ;
				case 2:
					name_='system';
					settingCheckBox.desc.text=LanguageMgr.Ins.GetLan("9070081");
					break ;
				case 3:
					name_='room';
					settingCheckBox.desc.text=LanguageMgr.Ins.GetLan("9070082");
					break ;
				};
			var isVisible=ChatMgr.ins.getChannelFilter(name_);
			settingCheckBox.gouxuan.visible=isVisible;
			settingCheckBox.on("click",this,this.onToggleCheckBox,[settingCheckBox,name_]);
		}
		this._sxuan.text=LanguageMgr.Ins.GetLan("9070084");
		this._close.on("click",this,this.onCloseChatSetView);
	}

	__class(ChatSetView,'modules.chat.view.ChatSetView',_super);
	var __proto=ChatSetView.prototype;
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		for(var i=0;i < 4;i++){
			var settingCheckBox=this._body._childs[i]
			settingCheckBox.off("click",this,this.onToggleCheckBox)
		}
		this._close.off("click",this,this.onCloseChatSetView)
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	__proto.onCloseChatSetView=function(){
		UIMgr.ins.closeView("ChatSetView");
	}

	__proto.onToggleCheckBox=function(settingCheckBox,name_){
		var _$this=this;
		if(!this.clickCached){
			this.clickCached=true
			Laya.timer.once(100,this,function(){
				_$this.clickCached=false
			});
			var ori=ChatMgr.ins.getChannelFilter(name_);
			settingCheckBox.gouxuan.visible=!ori;
			ChatMgr.ins.setChannelFilter(name_,!ori);
		}
	}

	return ChatSetView;
})(ChatSetViewUI)


//class modules.battle_apple.view.menu.LocalBattleMenu extends modules.battle.view.menu.BattleMenu
var LocalBattleMenu=(function(_super){
	function LocalBattleMenu(hero,enemys,battleScene){
		this.dieIconArr=[];
		this.iconPos=[];
		this.tweens=[];
		this.curNpcPos=null;
		this.frameNum=0;
		this.isAdd=true;
		this.roundId=0;
		this.lastChance=null;
		this.mpAniApple=null;
		this.resumeTime=0;
		this.localUI=null;
		this.mpIconExit=null;
		this.distanceUI=null;
		this.fragmentArr=[];
		this.hasAddExtra=false;
		this.itemViews=[];
		this.isMoveOver=true;
		this.hasShowLast=false
		LocalBattleMenu.__super.call(this,hero,enemys,battleScene);
	}

	__class(LocalBattleMenu,'modules.battle_apple.view.menu.LocalBattleMenu',_super);
	var __proto=LocalBattleMenu.prototype;
	__proto.initEvent=function(){
		EventMgr.ins.on(0x3AA1,this,this.overturn);
		EventMgr.ins.on("REFRESH_DIE_NUM",this,this.refreshDieNum);
		EventMgr.ins.on(0x0026,this,this.onNextTurn);
		EventMgr.ins.on(0x0022,this,this.fireMoveOver);
		EventMgr.ins.on("BATTLE_PAUSE",this,this.onBattlePause);
		EventMgr.ins.on("BATTLE_RESUME",this,this.onBattleResume);
		EventMgr.ins.on("BATTLE_START",this,this.onBattleStart);
		EventMgr.ins.on("SHOW_PLAY_AGAIN",this,this.onShowPlayAgain);
		EventMgr.ins.on("SHOOT_APPLE",this,this.onShootFruit);
		EventMgr.ins.on("HIDE_PRELUDE_COMPLETE",this,this.clearFragmentAni);
		EventMgr.ins.on("PLAY_AGAIN",this,this.initPlayAgain);
		EventMgr.ins.on("REMOVE_ITEM",this,this.resetExtraItem);
		EventMgr.ins.on("INIT_APPLE",this,this.initApple);
		if(this.mpIconExit){
			this.mpIconExit.on("click",this,this.onExitClick);
			if(LocalBattleMgr.getInstance().isNew){
				this.mpIconExit.visible=false;
			}
		}
		EventMgr.ins.on("REFRESH_MENUVIEW",this,this.initMenuView);
		EventMgr.ins.on("REFRESH_NPC",this,this.onRefreshNpc);
		EventMgr.ins.on("REFRESH_SCORE",this,this.refreshScoreNum);
	}

	__proto.removeEvents=function(){
		EventMgr.ins.off(0x3AA1,this,this.overturn);
		EventMgr.ins.off("REFRESH_DIE_NUM",this,this.refreshDieNum);
		EventMgr.ins.off(0x0026,this,this.onNextTurn);
		EventMgr.ins.off(0x0022,this,this.fireMoveOver);
		EventMgr.ins.off("BATTLE_PAUSE",this,this.onBattlePause);
		EventMgr.ins.off("BATTLE_RESUME",this,this.onBattleResume);
		EventMgr.ins.off("BATTLE_START",this,this.onBattleStart);
		EventMgr.ins.off("SHOW_PLAY_AGAIN",this,this.onShowPlayAgain);
		EventMgr.ins.off("SHOOT_APPLE",this,this.onShootFruit);
		EventMgr.ins.off("HIDE_PRELUDE_COMPLETE",this,this.clearFragmentAni);
		EventMgr.ins.off("PLAY_AGAIN",this,this.initPlayAgain);
		EventMgr.ins.off("REMOVE_ITEM",this,this.resetExtraItem);
		EventMgr.ins.off("INIT_APPLE",this,this.initApple);
		if(this.mpIconExit){
			this.mpIconExit.off("click",this,this.onExitClick);
		}
		EventMgr.ins.off("REFRESH_MENUVIEW",this,this.initMenuView);
		EventMgr.ins.off("REFRESH_NPC",this,this.onRefreshNpc);
		EventMgr.ins.off("REFRESH_SCORE",this,this.refreshScoreNum);
	}

	__proto.onNextTurn=function(msg){
		if(this.hero && !this.isMyTurn){
			this.hero.myturn();
			this.myturn(null,null);
			this.roundId++;
			if(this.roundId >=5){
				LocalBattleMgr.getInstance().removeItem(6007002);
				this.resetExtraItem();
			}
		}
	}

	__proto.onRefreshNpc=function(){
		this.refreshDistance();
		this.refreshScoreNum();
		LocalBattleMgr.getInstance().clearAllPoints();
		EventMgr.ins.event("NEXT_TURN");
		this.updateWind(LocalBattleMgr.getInstance().getCurWind());
	}

	__proto.onShowPlayAgain=function(handler){
		var sidou=new SiDouEffect(this.width/2,this.height/2,handler,LanguageMgr.Ins.getBattleLanguagePath("fruit/ui_zctz_zi.png"));;
		Laya.timer.once(2000,this,this.destroySiDou,[sidou,handler]);
		this.addChild(sidou);
	}

	__proto.destroySiDou=function(sidou,handler){
		_super.prototype.destroySiDou.call(this,sidou,handler);
		this.initPlayAgain();
	}

	__proto.onBattleStart=function(){
		this.resumeTime=0;
		var data=LocalBattleMgr.getInstance().getDataByRound();
		this._time=data.TimeOut;
	}

	__proto.onBattlePause=function(){
		this.resumeTime=this._time;
		if(this.hero){
			this.hero.overturn();
		}
		Laya.timer.clear(this,this.cooldown);
	}

	__proto.onBattleResume=function(){
		this._time=this.resumeTime;
		if(this.hero){
			this.hero.myturn();
		}
		Laya.timer.frameLoop(30,this,this.cooldown);
	}

	__proto.initMenu=function(){
		_super.prototype.initMenu.call(this);
		this.distanceUI=new DistanceUI();
		this.addChild(this.distanceUI);
		this.distanceUI.x=this.width-this.distanceUI.width;
		this.initView();
		this.initEvent();
		this.initExtraItem();
		this.isOpenResize=true;
	}

	__proto.initExtraItem=function(){
		var idList=LocalBattleMgr.getInstance().getItemList();
		var offsetX=20;
		var offsetY=120;
		for(var i=0;i < idList.length;i++){
			var id=idList[i];
			var data=ItemModel.getItemConfigData(id);
			var img=new Image(PathMgr.getItemIcon(data));
			img.x=offsetX+60*i;
			img.y=offsetY;
			img.name=id+"";
			img.scale(0.6,0.6);
			this.itemViews.push(img);
			this.addChild(img);
		}
	}

	__proto.clearExtraItem=function(){
		for(var i=0;i < this.itemViews.length;i++){
			var img=this.itemViews[i];
			if(img){
				img.removeSelf();
				img.destroy(true);
			}
		}
	}

	__proto.resetExtraItem=function(){
		this.clearExtraItem();
		this.initExtraItem();
	}

	__proto.overturn=function(){
		_super.prototype.overturn.call(this);
		if (this.hero){
			this.hero.overturn();
		}
		LocalBattleMgr.getInstance().addRoundId();
	}

	__proto.fireMoveOver=function(){}
	__proto.onExitClick=function(){
		if(!LocalBattleMgr.getInstance().isNew){
			HallMgr.ins.show();
			LocalBattleMgr.getInstance().removeAllItem();
		}
	}

	__proto.updateWind=function(wind){
		_super.prototype.updateWind.call(this,wind);
		if(this.fengliani){
			this.fengliani.visible=false;
		}
		EventMgr.ins.event("UPDATE_SCENE_WIND",wind);
	}

	__proto.initView=function(){
		this.localUI=new LocalBattleMenuUI();
		this.addChild(this.localUI);
		this.initLocalUI();
		this.refreshDieNum();
		this.initApple();
		this.initExitIcon();
		this.localUI.visible=true;
		this.move.visible=false;
		this.cardbox.visible=false;
		this.visibleBtn.visible=false;
		this.battletimenode.visible=false;
		this.btnUnlock.visible=false;
		this.btnlock.visible=false;
		this.chat.visible=false;
		this.fenliandtime.visible=true;
		this.fenglinum.visible=false;
		this.skillbox.visible=false;
		if(this.distanceUI)this.distanceUI.enemyhead.skin="appleGame/fruit/ui_daocaoren.png";
		if(this.hero){
			this.hero.myturn();
			this.myturn(null,null);
		}
	}

	__proto.getLabel=function(data){
		var label=new Label(data.str);
		label.fontSize=data.fontSize;
		label.bold=data.isBlod;
		label.color=data.color;
		label.stroke=data.stroke;
		label.strokeColor=data.strokeColor;
		return label;
	}

	__proto.initApple=function(){
		this.localUI.mpImgApple.mpImgExtra.visible=false;
		this.localUI.mpImgApple.mpBoxFragment.visible=true;
		for(var i=1;i < 6;i++){
			var img=this.localUI.mpImgApple.mpBoxFragment.getChildByName("mpFragment"+i);
			img.visible=false;
		}
	}

	__proto.initPlayAgain=function(){
		this.roundId=0;
		this.initLocalUI();
		this.refreshDieNum();
		this.initApple();
		this.resetExtraItem();
		this.hasAddExtra=false;
		this.hasShowLast=false;
		this.destroyRedBox();
	}

	__proto.onShootFruit=function(){
		this.initAniFragment();
		this.showAddScore();
	}

	__proto.showAddScore=function(){
		var addNum=LocalBattleMgr.getInstance().getUnitSocreConstant();
		var npcMan=LocalBattleMgr.getInstance().collideFighterArray[0];
		var pos=npcMan.localToGlobal(new Point(0,0));
		var scoreText=this.getLabel({str:"+"+addNum,fontSize:32,isBlod:true,color:"#ffffff",stroke:2,strokeColor:"#d24a00"});
		scoreText.x=pos.x+20;
		scoreText.y=pos.y-100;
		this.addChild(scoreText);
		Laya.timer.once(1000,this,this.playAddTweenEnd,[scoreText]);
	}

	// }
	__proto.playAddTweenEnd=function(label){
		if(label){
			label.removeSelf();
			label.destroy(true);
		}
	}

	__proto.initAniFragment=function(){
		var num=LocalBattleMgr.getInstance().getCurFragment();
		if(num==-1){
			this.showAniApple(true);
			}else{
			if(LocalBattleMgr.getInstance().isCanShowFragment()){
				this.hideAniApple();
				this.isMoveOver=false;
				var fragment=new AniSkeleton("ui_jiqi"+num,"ui",0,true);
				var npcMan=LocalBattleMgr.getInstance().collideFighterArray[0];
				var pos=npcMan.localToGlobal(new Point(0,0));
				fragment.x=pos.x;
				fragment.y=pos.y;
				this.fragmentArr.push(fragment);
				this.addChild(fragment);
				SoundMgr.instance.playSound(4006061);
				Laya.timer.once(100,this,this.showFragmentTween,[fragment]);
			}
		}
	}

	__proto.showAniApple=function(_show){
		(_show===void 0)&& (_show=true);
		if(!this.mpAniApple){
			this.mpAniApple=new AniSkeleton("ui_jiqi6","ui",0,true);
			this.mpAniApple.x=44;
			this.mpAniApple.y=62;
			this.localUI.mpImgApple.addChild(this.mpAniApple);
		}
		this.mpAniApple.visible=_show;
		this.localUI.mpImgApple.mpImgExtra.visible=_show;
	}

	__proto.hideAniApple=function(){
		if(this.mpAniApple){
			this.mpAniApple.removeSelf();
			this.mpAniApple.destroy(true);
			this.mpAniApple=null;
		}
		this.localUI.mpImgApple.mpImgExtra.visible=false;
	}

	__proto.isMoveEnd=function(){
		return this.isMoveOver;
	}

	__proto.showFragmentTween=function(fragment){
		var num=LocalBattleMgr.getInstance().getCurFragment();
		var img=this.localUI.mpImgApple.mpBoxFragment.getChildByName("mpFragment"+num);
		var pos=this.localUI.mpImgApple.localToGlobal(new Point(img.x,img.y));
		Tween.to(fragment,{x:pos.x,y:pos.y},1000,null,Handler.create(this,this.playEnd));
	}

	__proto.playEnd=function(){
		var num=LocalBattleMgr.getInstance().getCurFragment();
		var img=(this.localUI.mpImgApple.mpBoxFragment.getChildByName("mpFragment"+num));
		img.visible=true;
		this.isMoveOver=true;
		LocalBattleMgr.getInstance().reqNextTurn(true);
	}

	__proto.clearFragmentAni=function(){
		for(var i=0;i < this.fragmentArr.length;i++){
			var tempFragment=this.fragmentArr[i];
			if(tempFragment){
				tempFragment.removeSelf();
				tempFragment.destroy(true);
			}
		};
		var num=LocalBattleMgr.getInstance().getCurFragment();
		if(num==5){
			this.showAniApple(true);
			if(!this.hasAddExtra){
				this.hasAddExtra=true;
				LocalBattleMgr.getInstance().setHasCollected();
				LocalBattleMgr.getInstance().addExtraChange();
			}
		}
	}

	__proto.initExitIcon=function(){
		this.mpIconExit=new Image("battle/menu/ui_tuichu.png");
		this.addChild(this.mpIconExit);
	}

	__proto.initLocalUI=function(){
		this.localUI.mpBgScore.visible=true;
		this.dieIconArr=[];
		this.iconPos=[];
		if(LocalBattleMgr.getInstance().hasItem(6007003)){
			this.dieIconArr.push(this.localUI.mpImgArrow1);
			this.dieIconArr.push(this.localUI.mpImgArrow2);
			this.dieIconArr.push(this.localUI.mpImgArrow3);
			this.dieIconArr.push(this.localUI.mpImgArrow4);
			this.iconPos.push({pos:new Point(this.localUI.mpImgArrow1.x,this.localUI.mpImgArrow1.y),skewX:5});
			this.iconPos.push({pos:new Point(this.localUI.mpImgArrow2.x,this.localUI.mpImgArrow2.y),skewX:0});
			this.iconPos.push({pos:new Point(this.localUI.mpImgArrow3.x,this.localUI.mpImgArrow3.y),skewX:0});
			this.iconPos.push({pos:new Point(this.localUI.mpImgArrow4.x,this.localUI.mpImgArrow4.y),skewX:-5});
			}else{
			this.dieIconArr.push(this.localUI.mpImgArrow1);
			this.dieIconArr.push(this.localUI.mpImgArrow2);
			this.dieIconArr.push(this.localUI.mpImgArrow3);
			this.localUI.mpImgArrow4.alpha=0;
			this.iconPos.push({pos:new Point(314,0),skewX:10});
			this.iconPos.push({pos:new Point(297,-1),skewX:0});
			this.iconPos.push({pos:new Point(281,0),skewX:-10});
		}
	}

	__proto.refreshScoreNum=function(){
		this.localUI.mpNumScore.text=String(LocalBattleMgr.getInstance().getScoreNum());
	}

	__proto.refreshDieNum=function(){
		var dieNum=LocalBattleMgr.getInstance().getDieNum();
		var maxNum=LocalBattleMgr.getInstance().getMaxDieNum();
		if (dieNum > this.dieIconArr.length)dieNum=this.dieIconArr.length;
		if(dieNum==0){
			for (var i=0;i < this.dieIconArr.length;i++){
				var posData=this.iconPos[i];
				this.dieIconArr[i].alpha=1;
				this.dieIconArr[i].x=posData.pos.x;
				this.dieIconArr[i].y=posData.pos.y;
				this.dieIconArr[i].skewX=posData.skewX;
			}
		}
		for (i=0;i < this.dieIconArr.length;i++){
			var data=this.iconPos[i];
			this.dieIconArr[i].alpha=1;
			if (i < dieNum){
				if(this.hasAddExtra){
					this.hasAddExtra=false;
					this.initApple();
					LocalBattleMgr.getInstance().resetFragment();
					LocalBattleMgr.getInstance().subDieNum();
					dieNum=LocalBattleMgr.getInstance().getDieNum();
					LocalBattleMgr.getInstance().subExtraChange();
					}else{
					Tween.to(this.dieIconArr[i],{alpha:0,y:data.pos.y-200},200);
				}
			}
		}
		this.hideAniApple();
	}

	__proto.showLastChance=function(){
		if(!this.lastChance && !this.hasShowLast){
			SoundMgr.instance.playSound(4006060);
			this.hasShowLast=true;
			this.lastChance=new AniSkeleton("lastchance","ui",0,false,Handler.create(this,this.destroyLastChance),null,true);
			this.lastChance.x=42;
			this.lastChance.y=150;
			this.lastChance.zOrder=999999;
			this.fengli.addChild(this.lastChance);
		}
	}

	__proto.showYourTurn=function(){}
	__proto.myturn=function(msg,turnMsg){
		_super.prototype.myturn.call(this);
		this.initMenuView();
		this.clearFragmentAni();
	}

	__proto.initMenuView=function(){
		var data=LocalBattleMgr.getInstance().getDataByRound();
		var dieNum=LocalBattleMgr.getInstance().getDieNum();
		if (dieNum==LocalBattleMgr.getInstance().getMaxDieNum()-1){
			this.showLastChance();
			this.updateRedBox();
		}
		this.angleUi.x=this.hero.x *this._bestFitWidth / 2000-100;
		this.angleUi.y=180;
		this.setExitVisible(true)
		if(LocalBattleMgr.getInstance().isNew){
			this.mpIconExit.visible=false;
		}
		this.refreshDistance();
	}

	__proto.setExitVisible=function(isShow){
		this.mpIconExit.visible=isShow;
	}

	__proto.initTime=function(timeInt){
		(timeInt===void 0)&& (timeInt=15);
		var data=LocalBattleMgr.getInstance().getDataByRound();
		timeInt=data.TimeOut;
		_super.prototype.initTime.call(this,timeInt);
	}

	__proto.refreshDistance=function(){
		var mapNpc=LocalBattleMgr.getInstance().collideFighterArray[0];
		if(mapNpc){
			var pos=LocalBattleMgr.getInstance().getMapNpcPos();
			this.frameNum=0;
			var vx=Math.abs(this.hero.x-pos.x);
			if(this.distanceUI){
				this.distanceUI.vx.text=this.getOne(vx/100)+"m";
			}
		}
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		_super.prototype.onResize.call(this,_bestFitWidth,_bestFitHeight);
		this.calcHeadPos();
		if(this.mpIconExit){
			this.mpIconExit.x=_bestFitWidth-42;
		}
		if(this.distanceUI){
			this.distanceUI.x=_bestFitWidth-136;
			this.distanceUI.y=0;
		}
		this.fengli.y=100;
		this.time.y=180;
		this.angleUi.x=this.hero.x *_bestFitWidth / 2000-100;
		this.angleUi.y=180;
		this.localUI.mpBgScore.x=_bestFitWidth / 2;
		this.localUI.mpBgScore.y=0;
	}

	__proto.checkNeedCoundDown=function(){
		return false;
	}

	__proto.refreshPoint=function(msg,turnMsg){}
	__proto.cooldown=function(){
		_super.prototype.cooldown.call(this);
		if(this._time <=0){
			LocalBattleMgr.getInstance().addDieNum();
			EventMgr.ins.event("SEND_RESULT_TO_SERVER",false);
			LocalBattleMgr.getInstance().checkNextRound();
		}
	}

	__proto.destroyLastChance=function(){
		if(this.lastChance){
			this.lastChance.removeSelf();
			this.lastChance.destroy(true);
			this.lastChance=null;
		}
	}

	__proto.destroyMenu=function(){
		this.removeEvents();
		this.hideAniApple();
		this.destroyLastChance();
		Laya.timer.clear(this,this.cooldown);
		_super.prototype.destroyMenu.call(this);
		this.distanceUI && this.distanceUI.destroy();
		this.distanceUI=null;
	}

	__proto.calcHeadPos=function(){
		var width=this._bestFitWidth==0?Laya.stage.width:this._bestFitWidth;
		if(this.checkHeadPos()){
			this.distanceUI.x=width-100;
			this.distanceUI.y=200;
			this.distanceUI.headbox.x=12;
			this.distanceUI.headbox.y=5;
			this.distanceUI.vx.x=2;
			this.distanceUI.vx.y=50;
			this.distanceUI.bg.scale(1.0,1.0);
			}else{
			this.distanceUI.x=50;
			this.distanceUI.y=200;
			this.distanceUI.headbox.x=29;
			this.distanceUI.headbox.y=5;
			this.distanceUI.vx.x=20;
			this.distanceUI.vx.y=50;
			this.distanceUI.bg.scale(-1.0,1.0);
		}
	}

	return LocalBattleMenu;
})(BattleMenu)


//class modules.email.view.EmailMainView extends ui.email.view.EmailMainViewUI
var EmailMainView=(function(_super){
	function EmailMainView(){
		this.lastSelect=-1;
		this.currInfo=null;
		EmailMainView.__super.call(this);
		this.init();
		this.addEvent();
	}

	__class(EmailMainView,'modules.email.view.EmailMainView',_super);
	var __proto=EmailMainView.prototype;
	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this,$x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName);
		this.updateView();
	}

	__proto.init=function(){
		(this.btnAllGet.getChildAt(0)).text=LanguageMgr.Ins.GetLan("9070045");
		(this.btn_get.getChildAt(0)).text=LanguageMgr.Ins.GetLan("9070046");
		(this.btn_del.getChildAt(0)).text=LanguageMgr.Ins.GetLan("9070085");
		this.mPanel.vScrollBar.hide=true;
		this.lists.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
		this.lists.selectEnable=true;
		this.lists.selectHandler=Handler.create(this,this.onSelectHandler,null,false);
		this.boxContent.visible=false;
		this.boxNoMail.visible=true;
		this.img_battleRecord_new.visible=false;
		this.updateData();
	}

	/**
	*更新界面
	*/
	__proto.updateView=function(){
		this.labNoEmail.text=LanguageMgr.Ins.GetLan("9070122");
		this.btn_get.visible=false;
		this.btn_del.visible=false;
		this.updateData(1);
	}

	/**
	*更新数据
	*/
	__proto.updateData=function(type){
		(type===void 0)&& (type=0);
		if(EmailMgr.ins.allMainArr.length > 0){
			this.boxNoMail.visible=false;
			if(type==3 || type==2){
				var oldItem=(this.lists.getCell(this.lastSelect));
				if(oldItem !=null){
					if(oldItem.info.attachItems !="" && oldItem.info.attachItems !=null){
						oldItem.setBGSkin(1);
					}
					else{
						oldItem.setBGSkin(3);
					}
				}
				if(this.lastSelect==0){
					this.lists.selectedIndex=-1;
				}
				EmailMgr.ins.isOneClick=false;
				this.lastSelect=0;
			}
			else if(type==1){
				this.lists.array=EmailMgr.ins.allMainArr;
				this.lists.repeatY=this.lists.array.length;
				this.lists.refresh();
				this.setEmailItemState(this.lastSelect);
			}
			if(this.lastSelect < 0){
				EmailMgr.ins.isOneClick=false;
				this.lastSelect=0;
			}
			if(type==2 || type==3 || type==0)EmailMgr.ins.allMainArr.sort(this.sortHandler);
			this.lists.array=EmailMgr.ins.allMainArr;
			this.lists.repeatY=this.lists.array.length;
			if(type !=2)this.lists.selectedIndex=this.lastSelect;
			this.lists.refresh();
			this.mPanel.refresh();
			this.mPanel.visible=true;
			this.btnAllGet.disabled=false;
			this.labCount.text=this.lists.array.length+"/100";
		}
		else{
			this.mPanel.visible=false;
			this.boxContent.visible=false;
			this.boxNoMail.visible=true;
			this.btnAllGet.disabled=true;
			this.btn_del.visible=false;
			this.btn_get.visible=false;
			this.labCount.text="0/100";
		}
	}

	__proto.sortHandler=function(data1,data2){
		var value1=data1.isRead ? 1 :0;
		var value2=data2.isRead ? 1 :0;
		if(value1==value2){
			return parseInt(data2.timestamp)-parseInt(data1.timestamp);
		}
		return value1-value2;
	}

	__proto.onSelectHandler=function(index){
		if(index !=-1){
			if(this.lastSelect !=-1){
				var oldItem=(this.lists.getCell(this.lastSelect));
				if(oldItem.info.attachItems !="" && oldItem.info.attachItems !=null){
					oldItem.setBGSkin(1);
				}
				else{
					oldItem.setBGSkin(3);
				}
			}
			this.setEmailItemState(index);
			this.lastSelect=index;
		}
		else{
			if(this.lists.array !=null){
				for (var i=0;i < this.lists.array.length;i++){
					var itemEmail=(this.lists.getCell(i));
					if(itemEmail.info.attachItems !="" && itemEmail.info.attachItems !=null){
						itemEmail.setBGSkin(1);
					}
					else{
						itemEmail.setBGSkin(3);
					}
				}
			}
		}
	}

	__proto.setEmailItemState=function(index){
		var item=(this.lists.getCell(index));
		if(item !=null){
			this.currInfo=item.info;
			this.msgView.setData(item.info);
			this.boxContent.visible=true;
			item.setBGSkin(2);
			if(this.currInfo.attachItems=="" || this.currInfo.attachItems==null){
				this.btn_get.visible=false;
				this.btn_del.visible=true;
			}
			else{
				this.btn_get.visible=true;
				this.btn_del.visible=false;
			}
		}
	}

	__proto.onRenderHandler=function(item,index){
		if(index < this.lists.array.length){
			item.setData(this.lists.array[index]);
		}
	}

	__proto.addEvent=function(){
		this.on("click",this,this.onClickHandler);
		this.topBar.btnBackCallBack=Handler.create(this,this.closeViewHandler);
		EventMgr.ins.on("UPDATE_MAIL",this,this.onUpdate);
	}

	__proto.onUpdate=function(type){
		this.updateData(type);
	}

	__proto.onClickHandler=function(evt){
		switch(evt.target){
			case this.btnAllGet:
				SocketManager.Instance.out.sendGetAllMail();
				break ;
			case this.btn_get:
				if(this.currInfo !=null){
					this.lists.selectedIndex=-1;
					SocketManager.Instance.out.sendGetMailGoods(this.currInfo.mailId);
				}
				break ;
			case this.btn_del:
				this.delEmail();
				break ;
			case this.btnHelp:
				UIMgr.ins.openView("HelpDescriptionView",Handler.create(this,function(view){
					view.initHelp(1);
				}));
				break ;
			case this.btn_open_battleRecord:
				UIMgr.ins.openView("BattleRecordView");
				break ;
			}
	}

	/**
	*删除单个邮件
	*/
	__proto.delEmail=function(){
		var _$this=this;
		if(this.currInfo !=null){
			this.boxContent.visible=false;
			this.btn_del.visible=false;
			this.btn_get.visible=false;
			if(this.currInfo.attachItems !="" && this.currInfo.attachItems !=null){
				TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("9002239"),LanguageMgr.Ins.GetLan("9002240"),LanguageMgr.Ins.GetLan("9002241"),Handler.create(this,function(){
					SocketManager.Instance.out.sendDelMail(_$this.currInfo.mailId);
				}));
			}
			else{
				SocketManager.Instance.out.sendDelMail(this.currInfo.mailId);
			}
		}
	}

	__proto.closeHandler=function(e){
		this.closeViewHandler();
	}

	//super.closeHandler(e);
	__proto.closeViewHandler=function(){
		this.lastSelect=-1;
		this.lists.selectedIndex=-1;
		UIMgr.ins.closeView("EmailMainView");
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
		this.off("click",this,this.onClickHandler);
		EventMgr.ins.off("UPDATE_MAIL",this,this.onUpdate);
		if(this.lists.renderHandler){
			this.lists.renderHandler.recover();
			this.lists.renderHandler=null;
		}
		if(this.lists.selectHandler){
			this.lists.selectHandler.recover();
			this.lists.selectHandler=null;
		}
	}

	return EmailMainView;
})(EmailMainViewUI)


//class modules.email.view.HelpDescriptionView extends ui.help.HelpDescriptionViewUI
var HelpDescriptionView=(function(_super){
	function HelpDescriptionView(){
		this.texts=null;
		HelpDescriptionView.__super.call(this);
		this.listpannel.vScrollBar.hide=true;
	}

	__class(HelpDescriptionView,'modules.email.view.HelpDescriptionView',_super);
	var __proto=HelpDescriptionView.prototype;
	__proto.getDesc=function(){
		var mpTextDesc=LanguageMgr.Ins.GetLan("14300210")+"|"+LanguageMgr.Ins.GetLan("14300211")+"|"+
		LanguageMgr.Ins.GetLan("14300212")+"|"+LanguageMgr.Ins.GetLan("14300213")+"|"+
		LanguageMgr.Ins.GetLan("14300214")+"|"+LanguageMgr.Ins.GetLan("14300215")+"|"+
		LanguageMgr.Ins.GetLan("14300216")+"|"+LanguageMgr.Ins.GetLan("14300217")+"|"+
		LanguageMgr.Ins.GetLan("14300218");
		return [{
			type:1,
			title:LanguageMgr.Ins.GetLan("9070047"),
			desc:LanguageMgr.Ins.GetLan("9070048")+"|"+LanguageMgr.Ins.GetLan("9070049")+"|"+LanguageMgr.Ins.GetLan("9070050")
			},{
			type:4,
			title:LanguageMgr.Ins.GetLan("9070063"),
			desc:LanguageMgr.Ins.GetLan("9070064")+"|"+LanguageMgr.Ins.GetLan("9070065")+"|"+LanguageMgr.Ins.GetLan("9070066")+"|"+LanguageMgr.Ins.GetLan("9070067")
			},{
			type:5,
			title:LanguageMgr.Ins.GetLan("9070068"),
			desc:LanguageMgr.Ins.GetLan("9070069")+"|"+LanguageMgr.Ins.GetLan("9070070")+"|"+LanguageMgr.Ins.GetLan("9070071")
			},{
			type:6,
			title:LanguageMgr.Ins.GetLan("9070072"),
			desc:LanguageMgr.Ins.GetLan("9070073")+"|"+LanguageMgr.Ins.GetLan("9070074")+"|"+LanguageMgr.Ins.GetLan("9070075")+"|"+LanguageMgr.Ins.GetLan("9070076")
			},{
			type:7,
			title:LanguageMgr.Ins.GetLan("9002312"),
			desc:mpTextDesc
			},{
			type:8,
			title:LanguageMgr.Ins.GetLan("14300134"),
			desc:LanguageMgr.Ins.GetLan("14300135")+"|"+LanguageMgr.Ins.GetLan("14300136")+"|"+LanguageMgr.Ins.GetLan("14300137")
			},{
			type:9,
			title:LanguageMgr.Ins.GetLan("9070149"),
			desc:LanguageMgr.Ins.GetLan("9070150")+"|"+LanguageMgr.Ins.GetLan("9070151")+"|"+LanguageMgr.Ins.GetLan("9070152")+"|"+LanguageMgr.Ins.GetLan("9070153")+"|"+LanguageMgr.Ins.GetLan("9070154")+"|"+LanguageMgr.Ins.GetLan("9070155")
		}
		,{
			type:10
			,title:LanguageMgr.Ins.GetLan("14300257")
			,desc:LanguageMgr.Ins.GetLan("14300258")+"|"+LanguageMgr.Ins.GetLan("14300259")+"|"+LanguageMgr.Ins.GetLan("14300260",GuildLevelModel.getItemDataById(8410000).DonationPoints[0],
			GuildLevelModel.getItemDataById(8410000).DonationPoints[1],
			GuildLevelModel.getItemDataById(8410000).DonationPoints[2],
			GuildLevelModel.getItemDataById(8410000).DonationPoints[3])+"|"+LanguageMgr.Ins.GetLan("14300261")
		}
		,{
			type:11
			,title:LanguageMgr.Ins.GetLan("14300407")
			,desc:LanguageMgr.Ins.GetLan("14300408")+"|"+LanguageMgr.Ins.GetLan("14300409")+"|"+LanguageMgr.Ins.GetLan("14300410")+"|"+LanguageMgr.Ins.GetLan("14300411")+"|"+LanguageMgr.Ins.GetLan("14300412")
		}];
	}

	//this.desclist.renderHandler=Handler.create(this,this.renderCallback,null,false);
	__proto.renderCallback=function(item,index){}
	// }
	__proto.initHelp=function(type){
		this.on("click",this,this.onClickHandler);
		var data=this.getData(type);
		var title=data.title;
		var desc=data.desc;
		this.texts=desc.split("|");
		this.labTitle.text=title;
		var text="";
		for(var i=0;i < this.texts.length;i++){
			text+=this.texts[i];
			text+="\n\n";
		}
		this.helptext.text=text;
	}

	// this.desclist.refresh();
	__proto.getData=function(type){
		var descs=this.getDesc();
		for(var i=0;i < descs.length;i++){
			var data=descs[i];
			if(data.type==type){
				return data;
			}
		}
		return null;
	}

	__proto.onClickHandler=function(evt){
		switch(evt.target){
			case this.btnOK:
			case this.btnClose:
				UIMgr.ins.closeView("HelpDescriptionView");
				break ;
			}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.off("click",this,this.onClickHandler);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return HelpDescriptionView;
})(HelpDescriptionViewUI)


//class modules.email.view.HtmlHelpView extends ui.help.HtmlHelpViewUI
var HtmlHelpView=(function(_super){
	function HtmlHelpView(){
		HtmlHelpView.__super.call(this);
	}

	__class(HtmlHelpView,'modules.email.view.HtmlHelpView',_super);
	var __proto=HtmlHelpView.prototype;
	__proto.initHelp=function(title,desc){
		this.on("click",this,this.onClickHandler);
		this.labTitle.text=title;
		this.content.text=desc;
	}

	__proto.onClickHandler=function(evt){
		switch(evt.target){
			case this.btnOK:
			case this.btnClose:
				UIMgr.ins.closeView("HtmlHelpView");
				break ;
			}
	}

	return HtmlHelpView;
})(HtmlHelpViewUI)


//class modules.friends.windows.AddFriendWindow extends ui.friends.AddFriendWindowUI
var AddFriendWindow=(function(_super){
	function AddFriendWindow(){
		this._eventdispatch=null;
		AddFriendWindow.__super.call(this);}
	__class(AddFriendWindow,'modules.friends.windows.AddFriendWindow',_super);
	var __proto=AddFriendWindow.prototype;
	__proto.init=function(){
		var self=this;
		self._eventdispatch=new EventDispatcher();
		self.inputText.prompt=LanguageMgr.Ins.GetLan("14300040");
		self.tipsText.text=LanguageMgr.Ins.GetLan("14300110");
		self.onGetInquirePlayer([]);
		self.addEvent();
	}

	__proto.addEvent=function(){
		var self=this;
		self.closeBtn.clickHandler=Handler.create(self,self.onClose);
		self.inquireBtn.clickHandler=Handler.create(self,self.onInquireHandler,null,false);
		self.list.renderHandler=Handler.create(self,self.onRenderList,null,false);
		EventMgr.ins.on("msg_get_inquire_player",self,self.onGetInquirePlayer);
	}

	__proto.removeEvent=function(){
		var self=this;
		EventMgr.ins.off("msg_get_inquire_player",self,self.onGetInquirePlayer);
	}

	__proto.onRenderList=function($item,$index){
		$item.data=this.list.array[$index];
	}

	__proto.onGetInquirePlayer=function($data){
		var self=this;
		var arr=$data.arr;
		var flag=(!arr || arr.length==0);
		self.tipsImg.visible=flag;
		self.tipsText.visible=flag;
		self.list.array=arr;
	}

	/**
	*查询
	*/
	__proto.onInquireHandler=function(){
		var str=this.inputText.text;
		if(!str || str==""){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300041"));
			return;
		}
		this.onGetInquirePlayer({arr:[]});
		FriendsMgr.ins.sendInquirePlayer(str);
	}

	/**关闭界面 **/
	__proto.onClose=function(){
		UIMgr.ins.closeView("AddFriendWindow",true,false);
	}

	__proto.closeHandler=function(e){
		this.onClose();
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this);
		this.init();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return AddFriendWindow;
})(AddFriendWindowUI)


//class modules.friends.windows.FriendshipWarAlert extends ui.friends.FriendshipWarAlertUI
var FriendshipWarAlert=(function(_super){
	function FriendshipWarAlert(){
		this._eventdispatch=null;
		this._data=null;
		this._timeNum=0;
		FriendshipWarAlert.__super.call(this);}
	__class(FriendshipWarAlert,'modules.friends.windows.FriendshipWarAlert',_super);
	var __proto=FriendshipWarAlert.prototype;
	__proto.init=function($data){
		var self=this;
		self._eventdispatch=new EventDispatcher();
		self._data=$data;
		self.nameText.text=self._data.nickName;
		self.tipsText_1.text=LanguageMgr.Ins.GetLan("14300047");
		self.tipsText_2.text=LanguageMgr.Ins.GetLan("14300048");
		self._timeNum=20;
		self.timerText.text=LanguageMgr.Ins.GetLan("14300049",self._timeNum);
		self.addEvent();
		Laya.timer.loop(1000,self,self.onTimer);
	}

	__proto.addEvent=function(){
		var self=this;
		self.yesBtn.clickHandler=Handler.create(self,self.onSendControl,[true]);
		self.noBtn.clickHandler=Handler.create(self,self.onSendControl,[false]);
	}

	__proto.removeEvent=function(){
		Laya.timer.clearAll(this);
	}

	/**同意/拒绝 **/
	__proto.onSendControl=function($agree){
		FriendsMgr.ins.sendFriendBattle(this._data.playerId,$agree);
		this.onClose();
	}

	__proto.onTimer=function(){
		var self=this;
		self._timeNum--;
		self.timerText.text=LanguageMgr.Ins.GetLan("14300049",self._timeNum);
		if(self._timeNum <=0){
			self.onSendControl(false);
			self.onClose();
		}
	}

	/**关闭界面 **/
	__proto.onClose=function(){
		UIMgr.ins.closeView("FriendshipWarAlert",true,false);
	}

	__proto.closeHandler=function(e){
		this.onSendControl(false);
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
		self._eventdispatch=null;
		self._data=null;
	}

	return FriendshipWarAlert;
})(FriendshipWarAlertUI)


//class modules.friends.windows.FriendshipWarWindow extends ui.friends.FriendshipWarWindowUI
var FriendshipWarWindow=(function(_super){
	function FriendshipWarWindow(){
		this._eventdispatch=null;
		this._data=null;
		this._mapIds=[];
		this._mapNames=[];
		this._pageIndex=0;
		this._isInviteBattleing=false;
		FriendshipWarWindow.__super.call(this);}
	__class(FriendshipWarWindow,'modules.friends.windows.FriendshipWarWindow',_super);
	var __proto=FriendshipWarWindow.prototype;
	__proto.init=function($data){
		var self=this;
		self._eventdispatch=new EventDispatcher();
		self._data=$data;
		self.titleText.text=LanguageMgr.Ins.GetLan("14300042");
		self.tipsText.text=LanguageMgr.Ins.GetLan("14300043");
		self.tipTitleText.text=LanguageMgr.Ins.GetLan("9002138");
		self.tiplvTitleText.text=LanguageMgr.Ins.GetLan("9002139");
		self.tipCardTitleText_0.text=LanguageMgr.Ins.GetLan("9002140");
		self.tipCardTitleText_1.text=LanguageMgr.Ins.GetLan("9002141");
		self.tipCardTitleText_2.text=LanguageMgr.Ins.GetLan("9002142");
		self.tipCardTitleText_3.text=LanguageMgr.Ins.GetLan("9002143");
		var vo=ConfigModel.getConfigData(1015);
		var arr=vo.ConfigValue.split(",");
		self.tiplvText.text=arr[0];
		self.tipCardLvText_0.text=arr[1];
		self.tipCardLvText_1.text=arr[2];
		self.tipCardLvText_2.text=arr[3];
		self.tipCardLvText_3.text=arr[4];
		self.mapNameText.text="";
		self.cancelBtn.visible=false;
		self.startBtn.visible=true;
		self.tipsBox.visible=false;
		var pvpVo=PVPModel.getDivison(3,1);
		var sceneArr=pvpVo.SceneID.split("|"),itemData;
		for (var i=0,len=sceneArr.length;i < len;i++){
			itemData=SceneModel.getSceneConfig(sceneArr[i].split(",")[0]);
			self._mapIds.push(itemData.ID);
			self._mapNames.push(LanguageMgr.Ins.GetLan(itemData.Name));
		}
		self._pageIndex=0;
		self.onChangeMap(0);
		self.addEvent();
	}

	//是否正在邀请战斗
	__proto.addEvent=function(){
		var self=this;
		self.closeBtn.clickHandler=Handler.create(self,self.onClose);
		self.leftBtn.clickHandler=Handler.create(self,self.onChangeMap,[-1],false);
		self.rightBtn.clickHandler=Handler.create(self,self.onChangeMap,[1],false);
		self.cancelBtn.clickHandler=Handler.create(self,self.onCancelBattle,null,false);
		self.startBtn.clickHandler=Handler.create(self,self.onStartBattle,null,false);
		self.tipsBtn.clickHandler=Handler.create(self,self.onTipsHandler,null,false);
		self.on("click",self,self.onClickStage);
		EventMgr.ins.on("msg_refuse_friend_battle",self,self.onRefuseFriendBattle);
	}

	__proto.removeEvent=function(){
		var self=this;
		self.off("click",self,self.onClickStage);
		EventMgr.ins.off("msg_refuse_friend_battle",self,self.onRefuseFriendBattle);
	}

	__proto.onClickStage=function(e){
		if(e.target.name==""){
			this.tipsBox.visible=false;
		}
	}

	/**被拒绝友谊战 **/
	__proto.onRefuseFriendBattle=function(){
		var self=this;
		self._isInviteBattleing=false;
		self.closeBtn.visible=true;
		self.cancelBtn.visible=false;
		self.startBtn.visible=true;
	}

	/**开始友谊战 **/
	__proto.onStartBattle=function(){
		var self=this;
		self._isInviteBattleing=true;
		self.closeBtn.visible=false;
		self.cancelBtn.visible=true;
		self.startBtn.visible=false;
		FriendsMgr.ins.sendFriendsBattle(true,self._data,self._mapIds[self._pageIndex]);
	}

	/**取消友谊战 **/
	__proto.onCancelBattle=function(){
		var self=this;
		self.onRefuseFriendBattle();
		FriendsMgr.ins.sendFriendsBattle(false,self._data,0);
	}

	/**提示按钮点击 **/
	__proto.onTipsHandler=function(){
		this.tipsBox.visible=!this.tipsBox.visible;
	}

	/**切换地图选择 **/
	__proto.onChangeMap=function($addPage){
		var self=this;
		self._pageIndex+=$addPage;
		self.mapNameText.text=self._mapNames[self._pageIndex];
		self.leftBtn.disabled=(self._pageIndex==0);
		self.rightBtn.disabled=(self._pageIndex >=(self._mapNames.length-1));
	}

	/**关闭界面 **/
	__proto.onClose=function(){
		if(this._isInviteBattleing)return;
		UIMgr.ins.closeView("FriendshipWarWindow",true,false);
	}

	__proto.closeHandler=function(e){
		this.onClose();
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return FriendshipWarWindow;
})(FriendshipWarWindowUI)


//class modules.friends.windows.FriendsWindow extends ui.friends.FriendsWindowUI
var FriendsWindow=(function(_super){
	function FriendsWindow(){
		this._tabSetPosArr=[74,187,299,412];
		this._leftMediator=null;
		this._rightMediator=null;
		this._leftMediatorList=[];
		this._rightMediatorList=[];
		this._eventdispatch=null;
		this._index=-1;
		FriendsWindow.__super.call(this);}
	__class(FriendsWindow,'modules.friends.windows.FriendsWindow',_super);
	var __proto=FriendsWindow.prototype;
	__proto.init=function(){
		var self=this;
		self._eventdispatch=new EventDispatcher();
		var obj=FriendsMgr.ins.chatChangeData;
		var flag;
		for(var $each_flag in obj){
			flag=obj[$each_flag];
			if(flag){
				break ;
			}
		}
		self.myFriendTipsPoint.visible=flag;
		self.systemInfoTipsPoint.visible=FriendsMgr.ins.newSystemFlag;
		self.onChangeTab(0);
		self.addEvent();
	}

	__proto.addEvent=function(){
		var self=this;
		self.closeBtn.clickHandler=Handler.create(self,self.onClose);
		self.item0.clickHandler=Handler.create(self,self.onChangeTab,[0],false);
		self.item1.clickHandler=Handler.create(self,self.onChangeTab,[1],false);
		self.item2.clickHandler=Handler.create(self,self.onChangeTab,[2],false);
		self.item3.clickHandler=Handler.create(self,self.onChangeTab,[3],false);
		self.on("click",self,self.onClickStage);
		EventMgr.ins.on("msg_chat_data_change",self,self.onChatDataChange);
		EventMgr.ins.on("msg_update_system_info",self,self.onUpdateSystemInfo);
	}

	__proto.removeEvent=function(){
		var self=this;
		self.off("click",self,self.onClickStage);
		EventMgr.ins.off("msg_chat_data_change",self,self.onChatDataChange);
		EventMgr.ins.off("msg_update_system_info",self,self.onUpdateSystemInfo);
	}

	__proto.onClickStage=function(e){
		if(e.target.name==""){
			if(this._leftMediator && this._leftMediator["onClickStage"])this._leftMediator["onClickStage"]();
			if(this._rightMediator && this._rightMediator["onClickStage"])this._rightMediator["onClickStage"]();
		}
	}

	/**聊天消息更新 **/
	__proto.onChatDataChange=function(){
		if(this._index==0)return;
		this.myFriendTipsPoint.visible=true;
	}

	/**聊天消息更新 **/
	__proto.onUpdateSystemInfo=function(){
		if(this._index==3)return;
		this.systemInfoTipsPoint.visible=true;
	}

	/**
	*改变tab标签
	*@param $tabIndex
	*/
	__proto.onChangeTab=function($index){
		var self=this;
		if(self._index==$index)return;
		self._index=$index;
		self.selectBox.y=this._tabSetPosArr[self._index];
		self.selfctTextImg.skin="language/"+LanguageMgr.Ins.country+"/friends/ui_friendSelect_"+self._index+".png";
		self._leftMediator && self._leftMediator.hide();
		self._rightMediator && self._rightMediator.hide();
		self._leftMediator=self._leftMediatorList[self._index];
		self._rightMediator=self._rightMediatorList[self._index];
		switch(self._index){
			case 0:
				if(!self._leftMediator){
					self._leftMediator=new MyFriendViewMediator(self.viewLeftBox,self._eventdispatch);
					self._leftMediatorList[self._index]=self._leftMediator;
				}
				if(!self._rightMediator){
					self._rightMediator=new PrivateChatViewMediator(self.viewRightBox,self._eventdispatch);
					self._rightMediatorList[self._index]=self._rightMediator;
				}
				this.myFriendTipsPoint.visible=false;
				break ;
			case 1:
				if(!self._leftMediator){
					self._leftMediator=new FacebookFriendViewMediator(self.viewLeftBox,self._eventdispatch);
					self._leftMediatorList[self._index]=self._leftMediator;
				}
				if(!self._rightMediator){
					self._rightMediator=new TipsViewMediator(self.viewRightBox,self._eventdispatch);
					self._rightMediatorList[self._index]=self._rightMediator;
				}
				break ;
			case 2:
				if(!self._leftMediator){
					self._leftMediator=new GuildFriendViewMediator(self.viewLeftBox,self._eventdispatch);
					self._leftMediatorList[self._index]=self._leftMediator;
				}
				if(!self._rightMediator){
					self._rightMediator=new TipsViewMediator(self.viewRightBox,self._eventdispatch);
					self._rightMediatorList[self._index]=self._rightMediator;
				}
				break ;
			case 3:
				if(!self._leftMediator){
					self._leftMediator=new SystemInfoViewMediator(self.viewLeftBox,self._eventdispatch);
					self._leftMediatorList[self._index]=self._leftMediator;
				}
				if(!self._rightMediator){
					self._rightMediator=new SystemInfoDisplayViewMediator(self.viewRightBox,self._eventdispatch);
					self._rightMediatorList[self._index]=self._rightMediator;
				}
				this.systemInfoTipsPoint.visible=false;
				break ;
			}
		self._rightMediator.show();
		self._leftMediator.show();
	}

	/**
	*设置切换tab页
	*@param $index
	*/
	__proto.setChangeTab=function($index){
		this.onChangeTab($index);
		if($index==3){
			(this._leftMediator).changeInfoType(1);
		}
	}

	/**
	*通过ID选中我的好友某个好友项
	*@param $id
	*/
	__proto.selectMyFriendItem=function($id){
		this.onChangeTab(0);
		(this._leftMediator).selectFriendsItem($id);
	}

	/**关闭界面 **/
	__proto.onClose=function(){
		UIMgr.ins.closeView("FriendsWindow");
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this);
		this.init();
		FriendsMgr.ins.sendGetFriendsList();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		self._leftMediator=null;
		self._rightMediator=null;
		var mediator
		while(self._leftMediatorList.length){
			mediator=self._leftMediatorList.pop();
			mediator && mediator.dispose();
			mediator=null;
		}
		while(self._rightMediatorList.length){
			mediator=self._rightMediatorList.pop();
			mediator && mediator.dispose();
			mediator=null;
		}
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return FriendsWindow;
})(FriendsWindowUI)


/**
*捐赠技能页面
*/
//class modules.guild.view.chat.GuildDonatePage extends ui.guild.view.GuildDonatePageUI
var GuildDonatePage=(function(_super){
	function GuildDonatePage(){
		this.lastSelect=-1;
		this.currSelect=-1;
		this.curItem=null;
		/**段位 */
		this._arena=1;
		GuildDonatePage.__super.call(this);
		this.init();
	}

	__class(GuildDonatePage,'modules.guild.view.chat.GuildDonatePage',_super);
	var __proto=GuildDonatePage.prototype;
	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this,this.width/2,this.height/2,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName);
		Tween.from(this,{scaleX:1.2,scaleY:1.2},200);
		var rankVO=RankModel.getDivison(PlayerInfo.instance.trophy);
		var vo=GuildModel.getGuildDonateCfgByDivison(rankVO.Division);
		if(vo){
			var divname=LanguageMgr.Ins.GetLan(rankVO.Name);
			this.lab_0.text=LanguageMgr.Ins.GetLan("9002134",divname,vo.RequireCommons,vo.RequireRares);
		}
		this.list.array=SkillMgr.ins.getSkillDonate();
		this.on("click",this,this.onClickView);
	}

	__proto.onClickView=function(e){
		if(!((e.target instanceof modules.guild.item.chat.DonateCardItem ))&& this.curItem && !this.curItem.contains(e.target)){
			this.curItem.reset();
			this.list.selectedIndex=-1;
		}
		e.stopPropagation()
	}

	__proto.init=function(){
		this.btnClose.clickHandler=Handler.create(this,this.onClose,null,false);
		this.list.renderHandler=Handler.create(this,this.onRender,null,false);
		this.list.selectHandler=Handler.create(this,this.onSelectList,null,false);
		this.list.scrollBar.visible=false;
		this.list.selectEnable=true;
		this.list.scrollBar.elasticBackTime=600;
		this.list.scrollBar.elasticDistance=200;
		this.txtTitle.skin="language/"+LanguageMgr.Ins.country+"/chat/hall/full/ui_choose.png";
	}

	__proto.onSelectList=function(index){
		if(index !=-1){
			if(this.lastSelect !=-1){
				(this.list.getCell(this.lastSelect)).reset();
			}
			this.curItem=(this.list.getCell(index));
			this.curItem.cardShow();
			this.curItem.parent.setChildIndex(this.curItem,this.curItem.parent.numChildren-1);
			this.currSelect=index;
		}
		this.lastSelect=index;
	}

	__proto.onRender=function(item,index){
		if(index < this.list.array.length){
			item.setData(this.list.array[index]);
		}
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("GuildDonatePage");
		if(UrlParam.PARAMS["PLID"]=="qq"){
			var title=LanguageMgr.Ins.GetLan("12000302");
			var arr=title.split("|");
			modules.qqsdk && modules.qqsdk.H5jssdkManager.instance.sendQQGroupMsg(GuildMgr.ins.myGuildInfo.groupId,arr[0],arr[1],2004);
		}
	}

	__proto.closeHandler=function(e){
		this.onClose();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.btnClose.clickHandler){
			this.btnClose.clickHandler.recover();
			this.btnClose.clickHandler=null;
		}
		if(this.list.renderHandler){
			this.list.renderHandler.recover();
			this.list.renderHandler=null;
		}
		if(this.list.selectHandler){
			this.list.selectHandler.recover();
			this.list.selectHandler=null;
		}
		this.off("mousedown",this,this.onClickView);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
		this.curItem=null;
	}

	return GuildDonatePage;
})(GuildDonatePageUI)


/**
*公会友谊战
*/
//class modules.guild.view.chat.GuildFriendBattlePage extends ui.guild.view.GuildFriendlBattlePageUI
var GuildFriendBattlePage=(function(_super){
	function GuildFriendBattlePage(){
		this.mapIndex=1;
		this.txtContent=null;
		GuildFriendBattlePage.__super.call(this);
		this.init();
	}

	__class(GuildFriendBattlePage,'modules.guild.view.chat.GuildFriendBattlePage',_super);
	var __proto=GuildFriendBattlePage.prototype;
	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this,this.width/2,this.height/2,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName);
		Tween.from(this,{scaleX:1.2,scaleY:1.2},200);
		this.txtContent.text="";
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("GuildFriendBattlePage",true);
		if(!LayaEX.isWXAPP && UrlParam.PARAMS["PLID"]=="qq"){
			var title=LanguageMgr.Ins.GetLan("12000301");
			var arr=title.split("|");
			modules.qqsdk && modules.qqsdk.H5jssdkManager.instance.sendQQGroupMsg(GuildMgr.ins.myGuildInfo.groupId,arr[0],arr[1],2004);
		}
	}

	__proto.closeHandler=function(e){
		this.onClose();
	}

	__proto.hideView=function(isPlaySound){
		(isPlaySound===void 0)&& (isPlaySound=false);
		laya.ui.Window.prototype.hideView.call(this);
		this.tip.visible=false;
	}

	__proto.init=function(){
		this.btnClose.clickHandler=Handler.create(this,this.onClose,null,false);
		this.btnCancel.clickHandler=Handler.create(this,this.onClose,null,false);
		this.btnBattle.clickHandler=Handler.create(this,this.onMap,[this.btnBattle],false);
		this.btnTip.clickHandler=Handler.create(this,this.onMap,[this.btnTip],false);
		this.tip.visible=false;
		this.on("click",this,this.onClickStage);
		var vo=ConfigModel.getConfigData(1015);
		var arr=vo.ConfigValue.split(",");
		this.txtLevel.text=arr[0];
		this.txtLevel0.text=arr[1];
		this.txtLevel1.text=arr[2];
		this.txtLevel2.text=arr[3];
		this.txtLevel3.text=arr[4];
		this.lab0.text=LanguageMgr.Ins.GetLan("9002135");
		this.lab1.text=LanguageMgr.Ins.GetLan("9002137");
		this.lab_0.text=LanguageMgr.Ins.GetLan("9002138");
		this.lab_1.text=LanguageMgr.Ins.GetLan("9002139");
		this.lab_2.text=LanguageMgr.Ins.GetLan("9002140");
		this.lab_3.text=LanguageMgr.Ins.GetLan("9002141");
		this.lab_4.text=LanguageMgr.Ins.GetLan("9002142");
		this.lab_5.text=LanguageMgr.Ins.GetLan("9002143");
		this.title.skin="language/"+LanguageMgr.Ins.country+"/chat/hall/full/ui_friendly.png";
		this.txtF.skin="language/"+LanguageMgr.Ins.country+"/chat/hall/full/ui_gonghui_yys_but_wz.png";
		this.txtNo.skin="language/"+LanguageMgr.Ins.country+"/chat/hall/full/ui_gonghui_qx_but_wz.png";
		this.txtContent=new TextInput();
		this.txtContent.prompt=LanguageMgr.Ins.GetLan("9002136");
		this.txtContent.maxChars=15;
		this.txtContent.color="#8b5019";
		this.txtContent.fontSize=30;
		this.txtContent.width=525;
		this.txtContent.height=114;
		this.txtContent.wordWrap=true;
		this.addChild(this.txtContent);
		this.txtContent.x=79;
		this.txtContent.y=153;
		vo=null;
		arr=null;
	}

	__proto.onClickStage=function(evt){
		if(evt.target !=this.btnTip){
			this.tip.visible=false;
		}
		evt.stopPropagation()
	}

	__proto.onMap=function(btn){
		switch(btn){
			case this.btnBattle:{
					var pvpVo=PVPModel.getPvpConfigByTypeAndDivison(3,1);
					var mapId=pvpVo.SceneID;
					var arr;
					if(mapId.indexOf("|")>-1){
						arr=mapId.split("|");
						var idx=Math.floor(arr.length *Math.random());
						var mapstr=arr[idx];
						arr=mapstr.split(",");
						}else{
						arr=mapId.split(",");
					};
					var str=this.txtContent.text;
					if(str=="")
						str=LanguageMgr.Ins.GetLan("9002136");
					SocketManager.Instance.out.sendGuildBattle(arr[0],str);
					this.onClose();
					break ;
				}
			case this.btnTip:{
					this.tip.visible=true;
					break ;
				}
			}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.off("click",this,this.onClickStage);
		if(this.btnClose.clickHandler){
			this.btnClose.clickHandler.recover();
			this.btnClose.clickHandler=null;
		}
		if(this.btnCancel.clickHandler){
			this.btnCancel.clickHandler.recover();
			this.btnCancel.clickHandler=null;
		}
		if(this.btnBattle.clickHandler){
			this.btnBattle.clickHandler.recover();
			this.btnBattle.clickHandler=null;
		}
		if(this.btnTip.clickHandler){
			this.btnTip.clickHandler.recover();
			this.btnTip.clickHandler=null;
		}
		this.txtContent=null;
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return GuildFriendBattlePage;
})(GuildFriendlBattlePageUI)


/**
*公会创建和设置页面
*/
//class modules.guild.view.GuildCreatePage extends ui.guild.view.GuildCreatePageUI
var GuildCreatePage=(function(_super){
	function GuildCreatePage(){
		/**0创建 1设置 */
		this._type=0;
		/**段位 */
		this._div=1;
		this.txtInput=null;
		GuildCreatePage.__super.call(this);
		this.init();
		this.addEvent();
	}

	__class(GuildCreatePage,'modules.guild.view.GuildCreatePage',_super);
	var __proto=GuildCreatePage.prototype;
	__proto.addEvent=function(){
		this.btnClose.clickHandler=Handler.create(this,this.onClose);
		this.btnLeft0.clickHandler=Handler.create(this,this.onType,[this.btnLeft0],false);
		this.btnRight0.clickHandler=Handler.create(this,this.onType,[this.btnRight0],false);
		this.btnLeft1.clickHandler=Handler.create(this,this.onTrophies,[this.btnLeft1],false);
		this.btnRight1.clickHandler=Handler.create(this,this.onTrophies,[this.btnRight1],false);
		this.icon.on("click",this,this.onSelectIcon);
		this.list.renderHandler=Handler.create(this,this.onRender,null,false);
		this.list.selectHandler=Handler.create(this,this.onSelect,null,false);
		this.on("click",this,this.onClickStage);
	}

	__proto.init=function(){
		this.initList();
		this.createText();
		this.list.selectEnable=true;
		this.selectbox.visible=false;
		this.badgeBox.visible=false;
		this.txtExist.visible=false;
		this.list.scrollBar.visible=false;
		this.lab_name.text=LanguageMgr.Ins.GetLan("9002109");
		this.lab_badge.text=LanguageMgr.Ins.GetLan("9002110");
		this.lab_type.text=LanguageMgr.Ins.GetLan("9002104");
		this.lab_trophy.text=LanguageMgr.Ins.GetLan("9002103");
		this.txtCreate.text=LanguageMgr.Ins.GetLan("9002150");
		this.txtNeedCoin.text=ConfigModel.getConfigData(12).ConfigValue.split("|")[1];
		this.btnSave.label=LanguageMgr.Ins.GetLan("9002133");
	}

	__proto.initList=function(){
		var arr=[];
		for (var i=1;i < 17;i++){
			if(i < 10){
				arr.push("0"+i);
				}else{
				arr.push(i);
			}
		}
		this.list.array=arr;
	}

	__proto.createText=function(){
		this.txtInput=new TextInput();
		this.txtInput.prompt=LanguageMgr.Ins.GetLan("9001203");
		this.txtInput.maxChars=7;
		this.txtInput.color="#ae6e4b";
		this.txtInput.promptColor="#ad7952";
		this.txtInput.fontSize=22;
		this.txtInput.width=300;
		this.txtInput.height=28;
		this.addChildAt(this.txtInput,3);
		this.txtInput.x=500;
		this.txtInput.y=130;
	}

	__proto.updataType=function(type){
		this.badgeBox.visible=false;
		this._type=type;
		this.title.skin=this._type==0? "language/"+LanguageMgr.Ins.country+"/guild/ui_chuanjian_bt_text.png":"language/"+LanguageMgr.Ins.country+"/guild/ui_shezhi_bt_text.png";
		if(this._type==0){
			this.txtType.text=GuildMgr.ins.typeArr[0];
			this.txtInput.editable=true;
			this.btnCreate.visible=true;
			this.btnSave.visible=false;
			this.btnCreate.clickHandler=Handler.create(this,this.onCreate,null,false);
			this.list.selectedIndex=0;
			this.txtInput.text="";
			}else{
			this.btnCreate.visible=false;
			this.btnSave.visible=true;
			this.btnSave.clickHandler=Handler.create(this,this.onCreate,null,false);
			var msg=GuildMgr.ins.myGuildInfo;
			this.txtInput.editable=false;
			this.txtInput.mouseEnabled=false;
			this.txtInput.gray=true;
			this.txtInput.text=msg.guildName;
			this.list.selectedIndex=msg.iconID-1;
			this.txtType.text=GuildMgr.ins.typeArr[msg.type];
			this._div=RankModel.getDivisionByTrophy(msg.limitCondition);
		};
		var lanId=RankModel.getRankVO(this._div).Name;
		this.txtTrophy.text=LanguageMgr.Ins.GetLan(lanId);
	}

	__proto.onClickStage=function(evt){
		if(!evt.target.parent||!evt.target.parent.parent||!evt.target.parent.parent.parent||!evt.target.parent.parent.parent.parent)return;
		var obj=evt.target.parent.parent.parent.parent;
		if((obj&&obj.name=="badgeBox")||(evt.target.parent.name=="badgeBox"))return;
		if(evt.target.name !="badgeBox" && evt.target !=this.icon){
			this.badgeBox.visible=false;
		}
	}

	__proto.onSelectIcon=function(){
		this.badgeBox.visible=true;
	}

	__proto.onSelect=function(index){
		if(index==-1)return;
		var idx=index<9?"0"+(index+1):(index+1).toString();
		this.icon.skin="assets/textrue/badge/ui_icon_"+idx+".png";
		this.selectbox.visible=true;
	}

	__proto.onRender=function(item,index){
		if(this.list.length > index){
			var idx=index<9?"0"+(index+1):(index+1).toString();
			(item.getChildByName("icon")).skin="assets/textrue/badge/ui_icon_"+idx+".png";
		}
	}

	__proto.onTrophies=function(target){
		if(target==this.btnLeft1){
			this._div--
			if(this._div <1){
				this._div=1;
			}
			}else{
			this._div++;
			if(this._div >10){
				this._div=10;
			}
		};
		var lanId=RankModel.getRankVO(this._div).Name;
		this.txtTrophy.text=LanguageMgr.Ins.GetLan(lanId);
	}

	__proto.onType=function(target){
		if(this.txtType.text==GuildMgr.ins.typeArr[0]){
			this.txtType.text=GuildMgr.ins.typeArr[1];
			}else if(this.txtType.text==GuildMgr.ins.typeArr[1]){
			this.txtType.text=GuildMgr.ins.typeArr[2];
			}else{
			this.txtType.text=GuildMgr.ins.typeArr[0];
		}
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("GuildCreatePage");
	}

	__proto.onCreate=function(){
		var guildName=this.txtInput.text;
		if(guildName=="" && this._type==0){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002107"));
			return;
		}
		if(FuckUtils.hasFuck(guildName)){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007411"));
			return;
		}
		if(this._type==0){
			if(PlayerInfo.instance.gold < 1000){
				TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9001137"));
				return;
			}
		};
		var trophy=RankModel.getTrophyByDivision(this._div);
		SocketManager.Instance.out.sendCreateGuild(guildName,
		this.list.selectedIndex+1,
		GuildMgr.ins.typeArr.indexOf(this.txtType.text),
		trophy,
		this._type==0);
		this.onClose();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.btnClose.clickHandler){
			this.btnClose.clickHandler.recover();
			this.btnClose.clickHandler=null;
		}
		if(this.btnLeft0.clickHandler){
			this.btnLeft0.clickHandler.recover();
			this.btnLeft0.clickHandler=null;
		}
		if(this.btnRight0.clickHandler){
			this.btnRight0.clickHandler.recover();
			this.btnRight0.clickHandler=null;
		}
		if(this.btnLeft1.clickHandler){
			this.btnLeft1.clickHandler.recover();
			this.btnLeft1.clickHandler=null;
		}
		if(this.btnRight1.clickHandler){
			this.btnRight1.clickHandler.recover();
			this.btnRight1.clickHandler=null;
		}
		if(this.list.renderHandler){
			this.list.renderHandler.recover();
			this.list.renderHandler=null;
		}
		if(this.list.selectHandler){
			this.list.selectHandler.recover();
			this.list.selectHandler=null;
		}
		this.icon.off("click",this,this.onSelectIcon);
		this.off("click",this,this.onClickStage);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
		this.txtInput=null;
	}

	return GuildCreatePage;
})(GuildCreatePageUI)


//class modules.guild.view.GuildDonateWindow extends ui.guild.view.GuildDonateWindowUI
var GuildDonateWindow=(function(_super){
	function GuildDonateWindow(){
		this._eventdispatch=null;
		GuildDonateWindow.__super.call(this);}
	__class(GuildDonateWindow,'modules.guild.view.GuildDonateWindow',_super);
	var __proto=GuildDonateWindow.prototype;
	__proto.init=function(){
		var self=this;
		self._eventdispatch=new EventDispatcher();
		self.donateTitleText.text=LanguageMgr.Ins.GetLan("14300262");
		self.donateNumText.text="0/"+GuildMgr.ins.MAX_DONATE_NUM;
		self.addEvent();
		self.initCard();
		self.onUpdateDonateNum();
	}

	__proto.removeEvent=function(){
		var self=this;
		PlayerInfoMgr.ins.off("player_info_change",self,self.onUpdateDonateNum);
		EventMgr.ins.off("SKILL_UPGRADE",self,self.initCard);
	}

	__proto.addEvent=function(){
		var self=this;
		self.closeBtn.clickHandler=Handler.create(self,self.onClose,null,false);
		self.helpBtn.clickHandler=Handler.create(self,self.onHelpClick,null,false);
		self.list.renderHandler=Handler.create(self,self.onRenderList,null,false);
		PlayerInfoMgr.ins.on("player_info_change",self,self.onUpdateDonateNum);
		EventMgr.ins.on("SKILL_UPGRADE",self,self.initCard);
	}

	/**更新公会可捐献数量 **/
	__proto.onUpdateDonateNum=function(){
		this.donateNumText.text=(GuildMgr.ins.MAX_DONATE_NUM-PlayerInfo.instance.todayDonateTimes)+"/"+GuildMgr.ins.MAX_DONATE_NUM;
	}

	__proto.initCard=function(){
		var skillAll=SkillMgr.ins.getCardListByType(0);
		var skillVO,skillList=[];;
		for (var i=0,len=skillAll.length;i < len;i++){
			skillVO=skillAll[i];
			if(skillVO.skillCard < 2)continue ;
			skillList.push(skillVO);
		}
		this.list.array=skillList;
	}

	__proto.onRenderList=function($item,$index){
		$item.data=this.list.array[$index];
	}

	__proto.onHelpClick=function(){
		UIMgr.ins.openView("HelpDescriptionView",Handler.create(this,function(view){
			view.initHelp(10);
			view=null;
		}));
	}

	/**关闭界面 **/
	__proto.onClose=function(){
		UIMgr.ins.closeView("GuildDonateWindow",false);
	}

	__proto.closeHandler=function(e){
		this.onClose();
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this);
		this.init();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return GuildDonateWindow;
})(GuildDonateWindowUI)


/**
*公会信息页面
*/
//class modules.guild.view.GuildInfoPage extends ui.guild.view.GuildInfoPageUI
var GuildInfoPage=(function(_super){
	function GuildInfoPage(){
		this._guildMsg=null;
		/**是否退出公会 */
		this._isExitGuild=false;
		this._fromChatPage=null;
		/**公会信息子页面 */
		this._memberPage=null;
		this._boxPage=null;
		this._guildBuffPage=null;
		this._guildShopPage=null;
		GuildInfoPage.__super.call(this);
	}

	__class(GuildInfoPage,'modules.guild.view.GuildInfoPage',_super);
	var __proto=GuildInfoPage.prototype;
	/**注入公会信息数据 */
	__proto.setData=function(guildMsg,isFromChat){
		(isFromChat===void 0)&& (isFromChat=false);
		this._fromChatPage=isFromChat;
		this._guildMsg=guildMsg;
		this._memberPage.setData(this._guildMsg);
		this.onDetectionTransferGuildData();
	}

	/**收到退出公会 */
	__proto.onExitGuild=function(param){
		if(param !="-1"){
			SocketManager.Instance.out.requestGuildInfo(PlayerInfo.instance.consortiaID,true);
			}else{
			this._isExitGuild=true;
			this.onClose();
		}
	}

	/**默认自己的公会，需要显示别人的公会请穿公会ID */
	__proto.init=function(guildiD){
		(guildiD===void 0)&& (guildiD="");
		this.addEvent();
		this.shopRedPoint.visible=GuildShopMgr.ins.isShowRedPoint;
		this.buffRedPoint.visible=GuildBuffMgr.ins.isShowRedPoint;
		this.updatePassjoin();
		GuildMgr.ins.isOpenGuildInfoPage=true;
		var ismy=guildiD=="";
		if(ismy){
			guildiD=PlayerInfo.instance.consortiaID;
			this.tipIcon.visible=GuildMgr.ins.hasBoxAct;
			this.onDetectionTransferGuildData();
		}
		else {
			this.tipIcon.visible=false;
		}
		SocketManager.Instance.out.requestOneGuildData(guildiD);
		this.tab.selectedIndex=0;
	}

	__proto.onDetectionTransferGuildData=function(){
		if(!GuildMgr.ins.myGuildInfo || !GuildMgr.ins.myGuildInfo.hasNewChairmanId)return;
		if(GuildMgr.ins.isShowTransferTips){
			TipsManager.Instance().showAlertDialog(
			LanguageMgr.Ins.GetLan("9007368")
			,LanguageMgr.Ins.GetLan("14300263",GuildMgr.ins.myGuildInfo.currentChairmanNickName)
			,LanguageMgr.Ins.GetLan("9007390")
			,LanguageMgr.Ins.GetLan("9007389")
			,Handler.create(this,this.onAgree)
			,Handler.create(this,this.onRefuse));
		}
	}

	__proto.onAgree=function(){
		SocketManager.Instance.out.sendGuildOption(13,"",1,0,"");
	}

	__proto.onRefuse=function(){
		SocketManager.Instance.out.sendGuildOption(13,"",0,0,"");
	}

	__proto.addEvent=function(){
		this.topbar.btnBackCallBack=Handler.create(this,this.onClose,null,false);
		EventMgr.ins.on("recv_guild_passjoin",this,this.updatePassjoin);
		EventMgr.ins.on("recv_guild_info",this,this.setData);
		EventMgr.ins.on("close_GuildInfoPage",this,this.onClose);
		EventMgr.ins.on("recv_exitGuild",this,this.onExitGuild);
		EventMgr.ins.on("GUILD_SHOW_RED_POINT",this,this.showRedPoint);
		this.on("click",this,this.onClickStage);
		this.tab.selectHandler=Handler.create(this,this.onTab,null,false);
		EventMgr.ins.on("recv_transfer_guild",this,this.onDetectionTransferGuildData);
		this.btnHelp.clickHandler=Handler.create(this,this.onHelp,null,false);
	}

	//对公会界面的说明
	__proto.onHelp=function(){
		UIMgr.ins.openView("HelpDescriptionView",Handler.create(this,function(view){
			view.initHelp(11);
		}));
	}

	/**显示小红点 1 公会商店小红点 2 公会科技小红点**/
	__proto.showRedPoint=function(type){
		switch(type){
			case 1 :
				if(!this._guildShopPage || !this._guildShopPage.visible){
					this.shopRedPoint.visible=true;
				}
				break ;
			case 2 :
				if(!this._guildBuffPage || !this._guildBuffPage.visible){
					this.buffRedPoint.visible=true;
				}
				break ;
			}
	}

	/**点击空白 隐藏tip菜单 */
	__proto.onClickStage=function(evt){
		if(evt.target.name==""){
			if(this._boxPage && this._boxPage.visible){
				this._boxPage.hideTip();
			}
			else if(this._memberPage && this._memberPage.visible){
				this._memberPage.hideTip();
			}
		}
	}

	__proto.updatePassjoin=function(){
		var hasGuild=PlayerInfo.instance.consortiaID !="-1";
		this.tab.labels=hasGuild ? LanguageMgr.Ins.GetLan("9002265"):LanguageMgr.Ins.GetLan("9002118");
		if(this._memberPage){
			SocketManager.Instance.out.requestGuildInfo(PlayerInfo.instance.consortiaID,true);
			this._memberPage.btnJoin.visible=!hasGuild;
			this._memberPage.btnExit.visible=hasGuild;
		}
	}

	__proto.onTab=function(index){
		switch(index){
			case 0:
				if(this._boxPage){
					this._boxPage.visible=false;
				}
				if(this._guildBuffPage){
					this._guildBuffPage.visible=false;
				}
				if(this._guildShopPage){
					this._guildShopPage.visible=false;
				}
				if(this._memberPage){
					this._memberPage.setData(this._guildMsg);
					this._memberPage.visible=true;
					this._memberPage.hideTip();
					}else{
					this._memberPage=new GuildMemberPage();
					this._memberPage.pos(26,148);
					this.addChild(this._memberPage);
				}
				break ;
			case 1:
				if(this._memberPage){
					this._memberPage.visible=false;
				}
				if(this._guildBuffPage){
					this._guildBuffPage.visible=false;
				}
				if(this._guildShopPage){
					this._guildShopPage.visible=false;
				}
				if(!this._boxPage){
					this._boxPage=new GuildBoxPage();
					this.addChild(this._boxPage);
					this._boxPage.pos(0,168);
					}else{
					this._boxPage.visible=true;
					this._boxPage.hideTip();
				}
				if(GuildMgr.ins.hasBoxAct){
					GuildMgr.ins.hasBoxAct=false;
					this.tipIcon.visible=false;
					SocketManager.Instance.out.reqActivityNotice(1,GuildMgr.ins.hasBoxAct);
					EventMgr.ins.event("change_guild_point");
				}
				SocketManager.Instance.out.reqGuildChestInfo(1);
				break ;
			case 2:
				if(this._memberPage){
					this._memberPage.visible=false;
				}
				if(this._boxPage){
					this._boxPage.visible=false;
				}
				if(this._guildBuffPage){
					this._guildBuffPage.visible=false;
				}
				if(!this._guildShopPage){
					this._guildShopPage=new GuildShopPage();
					this.addChild(this._guildShopPage);
					this._guildShopPage.pos(6,131);
				}
				else {
					this._guildShopPage.visible=true;
				}
				GuildShopMgr.ins.isShowRedPoint=this.shopRedPoint.visible=false;
				EventMgr.ins.event("change_guild_point",1);
				break ;
			case 3:
				if(this._memberPage){
					this._memberPage.visible=false;
				}
				if(this._boxPage){
					this._boxPage.visible=false;
				}
				if(this._guildShopPage){
					this._guildShopPage.visible=false;
				}
				if(!this._guildBuffPage){
					this._guildBuffPage=new GuildBuffPage();
					this.addChild(this._guildBuffPage);
					this._guildBuffPage.pos(6,132);
				}
				else {
					this._guildBuffPage.visible=true;
				}
				GuildBuffMgr.ins.isShowRedPoint=this.buffRedPoint.visible=false;
				EventMgr.ins.event("change_guild_point",1);
				break ;
			}
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("GuildInfoPage");
		GuildMgr.ins.isOpenGuildInfoPage=false;
		if(this._isExitGuild){
			this._fromChatPage=null;
			return;
		};
		var isString=typeof(this._fromChatPage)==='string'
		if (!isString){
			if(!this._fromChatPage){
				if(PlayerInfo.instance.consortiaID=="-1")
					UIMgr.ins.openView("GuildList");
			}
		}
		this._fromChatPage=null;
	}

	__proto.removeEvent=function(){
		if(this.topbar.btnBackCallBack){
			this.topbar.btnBackCallBack.recover();
			this.topbar.btnBackCallBack=null;
		}
		if(this.tab.selectHandler){
			this.tab.selectHandler.recover();
			this.tab.selectHandler=null;
		}
		this.off("click",this,this.onClickStage);
		EventMgr.ins.off("recv_guild_passjoin",this,this.updatePassjoin);
		EventMgr.ins.off("recv_exitGuild",this,this.onExitGuild);
		EventMgr.ins.off("close_GuildInfoPage",this,this.onClose);
		EventMgr.ins.off("recv_guild_info",this,this.setData);
		EventMgr.ins.off("recv_transfer_guild",this,this.onDetectionTransferGuildData);
	}

	__proto.closeHandler=function(e){
		this.onClose();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		if(this._memberPage){
			this._memberPage.destroy();
		}
		if(this._boxPage){
			this._boxPage.destroy();
		}
		if(this._guildBuffPage){
			this._guildBuffPage.destroy();
		}
		if(this._guildShopPage){
			this._guildShopPage.destroy();
		}
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
		this._guildMsg=null;
		this._memberPage=null;
		this._boxPage=null;
		this._guildBuffPage=null;
		this._guildShopPage=null;
	}

	return GuildInfoPage;
})(GuildInfoPageUI)


/**
*公会列表页面
*/
//class modules.guild.view.GuildMainPage extends ui.guild.view.GuildListPageUI
var GuildMainPage=(function(_super){
	function GuildMainPage(){
		this.txtInput=null;
		this.key=null;
		this.oldkey=null;
		this.canclick=true;
		this._data=null;
		GuildMainPage.__super.call(this);
		this.init();
		SocketManager.Instance.out.requestGuildList();
	}

	__class(GuildMainPage,'modules.guild.view.GuildMainPage',_super);
	var __proto=GuildMainPage.prototype;
	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this,$x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName);
		EventMgr.ins.event("enter_guild");
	}

	__proto.updateSearchList=function(res){
		if(res.hasKey){
			if(res.key==this.key){
				if(!this._data)
					this._data=[];
				if(this.oldkey !=this.key){
					this._data.length=0;
					this.oldkey=this.key;
				}
				this._data=this._data.concat(res.list.list);
				this.list.array=this._data;
			}
		}
	}

	__proto.updateGuildList=function(msg){
		this.list.array=msg;
	}

	__proto.init=function(){
		this.addEvent();
		this.list.scrollBar.visible=false;
		this.list.selectEnable=true;
		this.list.scrollBar.elasticBackTime=600;
		this.list.scrollBar.elasticDistance=200;
		this.list.array=[];
		this.txtChange.skin="language/"+LanguageMgr.Ins.country+"/guild/ui_hyp.png";
		this.txtCreate.skin="language/"+LanguageMgr.Ins.country+"/guild/ui_chuanjiangh_text.png";
		this.lab_01.text=LanguageMgr.Ins.GetLan("9002108");
		this.lab_02.text=LanguageMgr.Ins.GetLan("9002159");
		this.lab_1.text=LanguageMgr.Ins.GetLan("9002101");
		this.lab_2.text=LanguageMgr.Ins.GetLan("9002102");
		this.lab_3.text=LanguageMgr.Ins.GetLan("9002103");
		this.lab_4.text=LanguageMgr.Ins.GetLan("9002104");
		this.txtInput=new TextInput();
		this.txtInput.prompt=LanguageMgr.Ins.GetLan("9002107");
		this.txtInput.maxChars=24;
		this.txtInput.color="#ae6e4b";
		this.txtInput.promptColor="#ad7952";
		this.txtInput.fontSize=22;
		this.txtInput.width=450;
		this.txtInput.height=28;
		this.addChild(this.txtInput);
		this.txtInput.x=133;
		this.txtInput.y=109;
		this.txtInput.on("enter",this,this.onSearch);
	}

	__proto.onRefresh=function(){
		if(this.canclick){
			this.canclick=false;
			SocketManager.Instance.out.requestGuildList();
			Laya.timer.once(2000,this,this.reset)
			}else{
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002187"));
		}
	}

	__proto.reset=function(){
		this.canclick=true;
	}

	__proto.onSearch=function(){
		if(this.txtInput.text !=""){
			if(this.key==""){
				this.key=this.txtInput.text;
				this.oldkey=this.key;
				}else{
				if(this.key==this.txtInput.text){
					return;
					}else{
					this.oldkey=this.key;
					this.key=this.txtInput.text;
				}
			}
			SocketManager.Instance.out.sendSearchGuild(this.txtInput.text);
		}
	}

	__proto.onSelectList=function(index){
		if(index==-1)return;
		var msg=this.list.array [index];
		UIMgr.ins.closeView("GuildList");
		UIMgr.ins.openView("GuildInfoPage",Handler.create(this,function(view){
			view.init(msg.guildIdStr);
			view.setData(msg);
		}));
	}

	__proto.onRender=function(item,index){
		if(index < this.list.array.length){
			item.setData(this.list.array[index],index);
		}
	}

	__proto.onCreate=function(){
		GuildMgr.ins.showCreatePage(0);
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("GuildList",true);
	}

	__proto.closeHandler=function(e){
		this.onClose();
	}

	__proto.addEvent=function(){
		EventMgr.ins.on("close_GuildMainPage",this,this.onClose);
		EventMgr.ins.on("recv_guild_list",this,this.updateGuildList);
		EventMgr.ins.on("recv_search_list",this,this.updateSearchList);
		this.topbar.btnBackCallBack=Handler.create(this,this.onClose,null,false);
		this.btnCreate.clickHandler=Handler.create(this,this.onCreate,null,false);
		this.btnSearch.clickHandler=Handler.create(this,this.onSearch,null,false);
		this.btnRefresh.clickHandler=Handler.create(this,this.onRefresh,null,false);
		this.list.renderHandler=Handler.create(this,this.onRender,null,false);
		this.list.selectHandler=Handler.create(this,this.onSelectList,null,false);
	}

	__proto.removeEvent=function(){
		if(this.topbar.btnBackCallBack){
			this.topbar.btnBackCallBack.recover();
			this.topbar.btnBackCallBack=null;
		}
		if(this.btnCreate.clickHandler){
			this.btnCreate.clickHandler.recover();
			this.btnCreate.clickHandler=null;
		}
		if(this.btnSearch.clickHandler){
			this.btnSearch.clickHandler.recover();
			this.btnSearch.clickHandler=null;
		}
		if(this.btnRefresh.clickHandler){
			this.btnRefresh.clickHandler.recover();
			this.btnRefresh.clickHandler=null;
		}
		if(this.list.renderHandler){
			this.list.renderHandler.recover();
			this.list.renderHandler=null;
		}
		if(this.list.selectHandler){
			this.list.selectHandler.recover();
			this.list.selectHandler=null;
		}
		if(this.txtInput){
			this.txtInput.off("enter",this,this.onSearch);
		}
		EventMgr.ins.off("close_GuildMainPage",this,this.onClose);
		EventMgr.ins.off("recv_guild_list",this,this.updateGuildList);
		EventMgr.ins.off("recv_search_list",this,this.updateSearchList);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		if(this._data){
			this._data.length=0;
			this._data=null;
		}
		this.txtInput=null;
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return GuildMainPage;
})(GuildListPageUI)


/**
*公会公告编辑界面
*/
//class modules.guild.view.GuildNoticePage extends ui.guild.view.GuildNoticePageUI
var GuildNoticePage=(function(_super){
	function GuildNoticePage(){
		this.okHandler=null;
		this.txtContent=null;
		GuildNoticePage.__super.call(this);
		this.txtContent=new TextInput();
		this.txtContent.multiline=true;
		this.txtContent.color="#8c5520";
		this.txtContent.fontSize=24;
		this.txtContent.align="center";
		this.txtContent.wordWrap=true;
		this.txtContent.maxChars=60;
		this.addChild(this.txtContent);
		this.txtContent.x=71;
		this.txtContent.y=123;
		this.txtContent.width=474;
		this.txtContent.height=118;
		this.txtTitle.text=LanguageMgr.Ins.GetLan("9002111");
		this.txtContent.prompt=LanguageMgr.Ins.GetLan("9002151");
		this.btnYes.label=LanguageMgr.Ins.GetLan("9002152");
		this.btnNo.clickHandler=Handler.create(this,this.onClose,null,false);
		this.btnYes.clickHandler=Handler.create(this,this.onYes,null,false);
	}

	__class(GuildNoticePage,'modules.guild.view.GuildNoticePage',_super);
	var __proto=GuildNoticePage.prototype;
	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this,this.width/2,this.height/2,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName);
		Tween.from(this,{scaleX:0,scaleY:0},500,Ease.backOut);
	}

	__proto.init=function(callback){
		this.okHandler=callback;
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("GuildNoticePage",true);
	}

	__proto.onYes=function(){
		if(this.txtContent.text==""){
			this.onClose();
			return;
		}
		if(this.okHandler){
			this.okHandler.runWith(this.txtContent.text);
		}
		SocketManager.Instance.out.sendGuildNotice(this.txtContent.text);
		this.okHandler=null;
		this.onClose();
	}

	__proto.closeHandler=function(e){
		this.onClose();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.btnNo.clickHandler){
			this.btnNo.clickHandler.recover();
			this.btnNo.clickHandler=null;
		}
		if(this.btnYes.clickHandler){
			this.btnYes.clickHandler.recover();
			this.btnYes.clickHandler=null;
		}
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
		if(this.okHandler){
			this.okHandler.recover();
		}
		this.okHandler=null;
		this.txtContent=null;
	}

	return GuildNoticePage;
})(GuildNoticePageUI)


//class modules.guild.view.GuildRewardWindow extends ui.guild.view.GuildRewardWindowUI
var GuildRewardWindow=(function(_super){
	function GuildRewardWindow(){
		this._eventdispatch=null;
		GuildRewardWindow.__super.call(this);}
	__class(GuildRewardWindow,'modules.guild.view.GuildRewardWindow',_super);
	var __proto=GuildRewardWindow.prototype;
	__proto.init=function(){
		var self=this;
		self._eventdispatch=new EventDispatcher();
		self.titleText.text=LanguageMgr.Ins.GetLan("14300273");
		self.addEvent();
	}

	__proto.removeEvent=function(){
		var self=this;
	}

	__proto.addEvent=function(){
		var self=this;
		self.getBtn.clickHandler=Handler.create(self,self.onClose);
		self.list.renderHandler=Handler.create(self,self.onRenderHandler,null,false);
	}

	__proto.onRenderHandler=function($item,$index){
		var data=this.list.array[$index];
		var vo=ItemModel.getItemConfigData(data.itemId);
		if(vo.ItemID===-50){
			$item.icon.skin='assets/textrue/language/'+LanguageMgr.Ins.country+'/itemicon/'+vo.Icon+'.png';
			}else {
			$item.icon.skin='assets/textrue/itemicon/'+vo.Icon+'.png';
		}
		$item.countText.text=""+data.count;
		$item.nameText.text=LanguageMgr.Ins.GetLan((""+vo.Name));
	}

	/**
	*设置物品
	*@param $items :[ItemPairMsg,ItemPairMsg,ItemPairMsg,ItemPairMsg...]
	*/
	__proto.setItems=function($items){
		this.list.array=$items;
	}

	/**关闭界面 **/
	__proto.onClose=function(){
		UIMgr.ins.closeView("GuildRewardWindow");
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this);
		this.init();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
		self._eventdispatch=null;
	}

	return GuildRewardWindow;
})(GuildRewardWindowUI)


//class modules.guild.view.GuildShopAlertWindow extends ui.guild.view.GuildShopAlertViewUI
var GuildShopAlertWindow=(function(_super){
	function GuildShopAlertWindow(){
		this.data=null;
		GuildShopAlertWindow.__super.call(this);
		var self=this;
		self.init();
		self.addEvnet();
	}

	__class(GuildShopAlertWindow,'modules.guild.view.GuildShopAlertWindow',_super);
	var __proto=GuildShopAlertWindow.prototype;
	__proto.init=function(){
		var self=this;
		self.titleText.text=LanguageMgr.Ins.GetLan("14300141");
	}

	//购买
	__proto.addEvnet=function(){
		var self=this;
		self.closeBtn.clickHandler=Handler.create(self,self.onClose);
		self.buyBtn.clickHandler=Handler.create(self,self.onBuyItem,null,false);
		self.cardProList.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
	}

	__proto.onRenderHandler=function(cell,index){
		var data=this.cardProList.array[index];
		var attArr=data.split("|");
		cell.icon.skin="assets/textrue/common/icon/"+attArr[0]+".png";
		cell.contentText.text=LanguageMgr.Ins.GetLan(attArr[1]);
		var dec=attArr[2];
		if (dec.indexOf("%")!=-1){
			cell.proCountText.text=dec;
		}
		else {
			if (parseInt(dec)> 100000){
				cell.proCountText.text=LanguageMgr.Ins.GetLan(dec);
			}
			else {
				cell.proCountText.text=dec;
			}
		}
	}

	/**购买商品**/
	__proto.onBuyItem=function(){
		var self=this;
		GuildShopMgr.ins.sendBuyOp(self.data.index);
		self.onClose();
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("GuildShopAlertView",true,false);
	}

	__proto.removeEvent=function(){
		var self=this;
		self.closeBtn.clickHandler.recover();
		self.closeBtn.clickHandler=null;
		self.buyBtn.clickHandler.recover();
		self.buyBtn.clickHandler=null;
		self.cardProList.renderHandler.recover();
		self.cardProList.renderHandler=null;
	}

	__proto.setData=function(data,type){
		var self=this;
		self.data=data;
		self.icon.skin=self.data.itemIcon;
		self.itemNameText.text=self.data.itemName;
		self.priceText.text=""+data.price;
		if(self.data.skillId !=0){
			self.descText.visible=false;
			self.cardProList.visible=true;
			var skillVo=SkillModel.getSkillConfigData(self.data.skillId);
			var skillPerData=SkillModel.getSkillPerformanceBySkillId(skillVo.Display);
			var attributes=skillPerData.AttributeDescription.split(",");
			attributes.length > 4 && (attributes.length=4);
			self.cardProList.array=attributes;
			self.starList.visible=true;
			var qualiity="aaaaaa";
			self.starList.value=qualiity.substr(0,skillVo.Quality+1);
		}
		else {
			self.descText.visible=true;
			self.cardProList.visible=false;
			self.descText.text=self.data.desc;
			self.starList.visible=false;
		}
		self.countText.text="x"+self.data.count;
		if(type==0){
			self.titleText.text=LanguageMgr.Ins.GetLan("14300141");
			self.buyBtn,this.visible=true;
			self.bg.height=416;
		}
		else {
			self.titleText.text=LanguageMgr.Ins.GetLan("9002161");
			self.buyBtn.visible=false;
			self.bg.height=366;
		}
	}

	__proto.closeHandler=function(e){
		this.onClose();
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return GuildShopAlertWindow;
})(GuildShopAlertViewUI)


//class modules.hall.view.AdvertisingView extends ui.hall.AdvertisingViewUI
var AdvertisingView=(function(_super){
	function AdvertisingView(){
		this.tempFilePath=null;
		AdvertisingView.__super.call(this);
		this.addEvent();
	}

	__class(AdvertisingView,'modules.hall.view.AdvertisingView',_super);
	var __proto=AdvertisingView.prototype;
	__proto.addEvent=function(){
		this.btnClose.on("click",this,this.onClose);
		this.btnDow.on("click",this,this.dowIcon);
	}

	__proto.dowIcon=function(){
		if(LayaEX.isWXAPP){
			var fileUrl=JSMgr.instance.rootUrl+"assets/textrue/wxshared/ddt.png";
			this.saveImageToPhotosAlbum(fileUrl);
		}
		UserCache.ins.setItem("btn_advertising","true");
	}

	__proto.saveImageToPhotosAlbum=function(imagePath){
		wx.previewImage({current:imagePath,urls:[imagePath]});
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("AdvertisingView",true);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.btnClose.off("click",this,this.onClose);
		this.btnDow.off("click",this,this.dowIcon);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return AdvertisingView;
})(AdvertisingViewUI)


/**
*新版创建角色界面
*@author weiqiang.huang
*
*/
//class modules.hall.view.CreateUserView extends ui.hall.CreateUserViewUI
var CreateUserView=(function(_super){
	function CreateUserView(){
		CreateUserView.__super.call(this);
		this.initView();
	}

	__class(CreateUserView,'modules.hall.view.CreateUserView',_super);
	var __proto=CreateUserView.prototype;
	__proto.initView=function(){
		this.txtInput.text=PlayerInfoMgr.ins.stringCut(PlayerInfo.instance.qqNickName,14);
		this.txtInput.on("input",this,this.onTxtInput);
		this.btn_start.clickHandler=Handler.create(this,this.onStartGame,null,false);
		this.btn_close.clickHandler=Handler.create(this,this.onCloseName,null,false);
	}

	__proto.onTxtInput=function(e){
		this.txtInput.text=PlayerInfoMgr.ins.stringCut(this.txtInput.text,14);
	}

	__proto.onCloseName=function(){
		this.txtInput.text="";
	}

	__proto.onStartGame=function(){
		var msg=StringTool.trim(this.txtInput.text);
		if(msg==""){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9001204"));
			return;
		}
		else if(FuckUtils.hasFuck(msg)){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9001205"));
			return;
		}
		PlayerInfo.instance.nickName=msg;
		LoginControl.instance.login(msg);
		UIMgr.ins.closeView("CreateUserView");
		EventMgr.ins.event("createRole");
	}

	__proto.closeHandler=function(e){}
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.txtInput.off("input",this,this.onTxtInput);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return CreateUserView;
})(CreateUserViewUI)


//class modules.hall.view.MainMonthTips extends ui.hall.sonView.MonthTipsUI
var MainMonthTips=(function(_super){
	function MainMonthTips(){
		MainMonthTips.__super.call(this);
		this.initView();
	}

	__class(MainMonthTips,'modules.hall.view.MainMonthTips',_super);
	var __proto=MainMonthTips.prototype;
	__proto.initView=function(){
		var self=this;
		self.statTxtKey.text=LanguageMgr.Ins.GetLan("9002338")+":";
		self.getKey.text=LanguageMgr.Ins.GetLan("9002340")+":";
		self.lastKey.text=LanguageMgr.Ins.GetLan("9002342")+":";
		self.openBtn.label=LanguageMgr.Ins.GetLan("9002344");
		var vo=QuestConditionModel.getInfoById("9201100");
		var count=!vo?0:vo.Rewards.split("|")[1];
		self.lastValue.text=LanguageMgr.Ins.GetLan("9002338");
		var msg=LanguageMgr.Ins.GetLan("9002341",count);
		var myPattern=/<img src=\"/;
		var changeStr='<img src="'+URL.rootPath;
		msg=msg.replace(myPattern,changeStr);
		self.getValue.text=msg;
		var deviationTime=TimeManager.Instance.checkTimeEndNum(PlayerInfo.instance.allSpecialCardEndTimes[1]);
		if(deviationTime<=0){
			self.statTxtValue.text=LanguageMgr.Ins.GetLan("9002343");
			self.lastValue.text=LanguageMgr.Ins.GetLan("9002338");
			self.lastKey.visible=self.lastValue.visible=false;
			self.openBtn.visible=true;
			self.statTxtValue.color="#ff1818";
			}else{
			self.statTxtValue.text=LanguageMgr.Ins.GetLan("9002339");
			self.lastValue.text=this.getLeftOverTime()+"";
			self.lastKey.visible=self.lastValue.visible=true;
			self.openBtn.visible=false;
			self.statTxtValue.color="#ffd67f";
		}
		self.statTxtValue.x=self.statTxtKey.x+self.statTxtKey.textWidth+5;
		self.getValue.x=self.getKey.x+self.getKey.textWidth+5;
		self.lastValue.x=self.lastKey.x+self.lastKey.textWidth+5;
		self.openBtn.on("click",self,self.onClickHandler);
	}

	__proto.onClickHandler=function(){
		UIMgr.ins.closeView("MAIN_MONTH_CARD_TIPS");
		UIMgr.ins.openView("ShopView");
	}

	__proto.getLeftOverTime=function(){
		var deviationTime=TimeManager.Instance.checkTimeEndNum(PlayerInfo.instance.allSpecialCardEndTimes[1])/1000;
		var day=Math.ceil(deviationTime/(24*60*60));
		return int(day);
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this,145,-118,"left","left",$isPopUp,0,$blurDisplayName,true);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.openBtn.off("click",self,self.onClickHandler);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return MainMonthTips;
})(MonthTipsUI)


//class modules.levelBox.windows.LevelBoxRewardWindow extends ui.levelBox.LevelBoxRewardWindowUI
var LevelBoxRewardWindow=(function(_super){
	function LevelBoxRewardWindow(){
		this._eventdispatch=null;
		LevelBoxRewardWindow.__super.call(this);}
	__class(LevelBoxRewardWindow,'modules.levelBox.windows.LevelBoxRewardWindow',_super);
	var __proto=LevelBoxRewardWindow.prototype;
	__proto.init=function(){
		var self=this;
		self._eventdispatch=new EventDispatcher();
		self.addEvent();
	}

	__proto.removeEvent=function(){
		var self=this;
	}

	__proto.addEvent=function(){
		var self=this;
		self.getBtn.clickHandler=Handler.create(self,self.onClose);
		self.list.renderHandler=Handler.create(self,self.onRenderHandler,null,false);
	}

	__proto.onRenderHandler=function($item,$index){
		var data=this.list.array[$index];
		var arr=data.split(",");
		var vo=ItemModel.getItemConfigData(arr[0]);
		if(vo.ItemID===-50){
			$item.icon.skin='assets/textrue/language/'+LanguageMgr.Ins.country+'/itemicon/'+vo.Icon+'.png';
			}else {
			$item.icon.skin='assets/textrue/itemicon/'+vo.Icon+'.png';
		}
		$item.countText.text=""+arr[1];
		$item.nameText.text=LanguageMgr.Ins.GetLan((""+vo.Name));
	}

	/**
	*设置物品
	*@param $itemsStr :itemId,itemNum|itemId,itemNum...
	*/
	__proto.setItems=function($itemsStr){
		var arr=$itemsStr.split("|");
		this.list.array=arr;
		this.list.x=564-((((arr.length *(112+this.list.spaceX))-this.list.spaceX)>> 1));
	}

	/**关闭界面 **/
	__proto.onClose=function(){
		UIMgr.ins.closeView("LevelBoxRewardWindow");
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this);
		this.init();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
		self._eventdispatch=null;
	}

	return LevelBoxRewardWindow;
})(LevelBoxRewardWindowUI)


//class modules.levelBox.windows.LevelBoxWindow extends ui.levelBox.LevelBoxWindowUI
var LevelBoxWindow=(function(_super){
	function LevelBoxWindow(){
		this._eventdispatch=null;
		LevelBoxWindow.__super.call(this);}
	__class(LevelBoxWindow,'modules.levelBox.windows.LevelBoxWindow',_super);
	var __proto=LevelBoxWindow.prototype;
	__proto.init=function(){
		var self=this;
		self._eventdispatch=new EventDispatcher();
		self.addEvent();
		self.onLevelBoxUpdate();
	}

	__proto.removeEvent=function(){
		var self=this;
		EventMgr.ins.off("level_box_update",self,self.onLevelBoxUpdate);
	}

	// Laya.timer.clearAll(self);
	__proto.addEvent=function(){
		var self=this;
		self.closeBtn.clickHandler=Handler.create(self,self.onClose);
		self.list.renderHandler=Handler.create(self,self.onRenderHandler,null,false);
		EventMgr.ins.on("level_box_update",self,self.onLevelBoxUpdate);
	}

	// Laya.timer.loop(1000,self,self.update);
	__proto.onLevelBoxUpdate=function(){
		this.list.array=LevelBoxMgr.ins.levelBoxDataList;
	}

	__proto.onRenderHandler=function($item,$index){
		$item.data=this.list.array[$index];
	}

	/**关闭界面 **/
	__proto.onClose=function(){
		UIMgr.ins.closeView("LevelBoxWindow");
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this);
		this.init();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
		self._eventdispatch=null;
		EventMgr.ins.event("Close_All_Tips");
	}

	return LevelBoxWindow;
})(LevelBoxWindowUI)


/**
*升级页面
**/
//class modules.levelup.LevelUpPage extends ui.hall.LevelUpPageUI
var LevelUpPage=(function(_super){
	function LevelUpPage(){
		this.skBG=null;
		this.skCenter=null;
		this.skNameEffect=null;
		this.funOpenLevelArray=[ 6,
		8,
		10,
		20,
		15,
		25];
		LevelUpPage.__super.call(this);
		SoundMgr.instance.playSound(4006018);
		this.isOpenResize=true;
		Tween.from(this.box,{scaleX:0.5,scaleY:0.5},300,Ease.backOut);
		this._layer=LayerMgr.ins.flyWordLayer;
		this.boxUnlock.visible=false;
		var levelShare=parseInt(ConfigModel.getConfigData(1095).ConfigValue);
		this.btn_share.visible=PlayerInfo.instance.grade >=levelShare;
		this.btn_share.on("click",this,this.onShareHandler);
		this.on("click",this,this.onClickClose);
	}

	__class(LevelUpPage,'modules.levelup.LevelUpPage',_super);
	var __proto=LevelUpPage.prototype;
	__proto.onClickClose=function(e){
		if(e.target !=this.btn_share){
			Tween.clearTween(this.box);
			Tween.clearAll(this.box);
			UIMgr.ins.closeView("LevelUp");
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.off("click",this,this.onClickClose);
		this.btn_share.off("click",this,this.onShareHandler);
		if(this.skBG)this.skBG.destroy(true);this.skBG=null;
		if(this.skCenter)this.skCenter.destroy(true);this.skCenter=null;
		if(this.skNameEffect)this.skNameEffect.destroy(true);this.skNameEffect=null;
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	__proto.onShareHandler=function(){
		UIMgr.ins.openView("LevelUpShareView");
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.8);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this,$x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,"LevelUp");
		this.updateView();
	}

	__proto.hideView=function(isPlaySound){
		(isPlaySound===void 0)&& (isPlaySound=false);
		laya.ui.Window.prototype.hideView.call(this,isPlaySound);
		if(this.skBG)this.skBG.destroy(true);this.skBG=null;
		if(this.skCenter)this.skCenter.destroy(true);this.skCenter=null;
		if(this.skNameEffect)this.skNameEffect.destroy(true);this.skNameEffect=null;
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		Align.singleViewAlign(this);
	}

	__proto.updateView=function(){
		this.boxContent.zOrder=5;
		this.level0.value=PlayerInfo.instance.level_up.toString();
		this.level1.value=PlayerInfo.instance.grade.toString();
		this.txtHp.text="+"+PlayerInfo.instance.add_blood.toString();
		this.txtDamage.text="+"+PlayerInfo.instance.add_damage.toString();
		this.txtSpeed.text="+"+PlayerInfo.instance.add_speed.toString();
		this.skBG=new AniSkeleton("juesheshengji_3","ui");
		this.skBG.x=366;
		this.skBG.y=229;
		this.skBG.blendMode="add";
		this.box.addChild(this.skBG);
		this.skCenter=new AniSkeleton("juesheshengji_2","ui",0,false,null,null,true);
		this.skCenter.x=355;
		this.skCenter.y=208;
		this.box.addChild(this.skCenter);
		this.skNameEffect=new AniSkeleton("juesheshengji_1","ui",0,true,null,null,true);
		this.skNameEffect.x=363;
		this.skNameEffect.y=200;
		this.skNameEffect.blendMode="add";
		this.box.addChild(this.skNameEffect);
		var array=ConfigModel.getConfigData(1096).ConfigValue.split(",");
		var gemsCount=array[0].split("|")[1];
		var decStr=LanguageMgr.Ins.GetLan("12300003",gemsCount);
		this.shareTips.setTipData(decStr,250);
		this.checkNewFunOpen(PlayerInfo.instance.level_up,PlayerInfo.instance.grade);
		var unlockIconUrl=this.getUnlockIconUrl(PlayerInfo.instance.grade);
		if(unlockIconUrl){
			this.boxunLock.visible=true;
			this.unlock_Icon.skin=unlockIconUrl;
		}
	}

	__proto.checkNewFunOpen=function(level0,level1){
		var bool=false;
		var level;
		for(var $each_level in this.funOpenLevelArray){
			level=this.funOpenLevelArray[$each_level];
			if(level0 < level && level <=level1){
				LevelGuideMgr.ins.addWaitCheckLevelNode(level);
				bool=true;
			}
		}
		return bool;
	}

	__proto.getUnlockIconUrl=function(level){
		var str;
		if(level==6){
			str="language/"+LanguageMgr.Ins.country+"/levelup/ui_srhz_kaiqiicon.png";
		}
		else if(level==8){
			str="language/"+LanguageMgr.Ins.country+"/levelup/ui_gh_kaiqiicon.png";
		}
		else if(level==10){
			str="language/"+LanguageMgr.Ins.country+"/levelup/ui_mxms_kaiqiicon.png";
		}
		else if(level==20){
			str="language/"+LanguageMgr.Ins.country+"/levelup/ui_drfb_kaiqiicon.png";
		}
		return str;
	}

	return LevelUpPage;
})(LevelUpPageUI)


//class modules.levelUpShare.LevelUpShareView extends ui.LevelUpShare.LevelUpShareViewUI
var LevelUpShareView=(function(_super){
	function LevelUpShareView(){
		this.path=UrlParam.ROOTURL+"index.html?_wv=183040&_wwv=2048"+'&playerId='+PlayerInfo.instance.playerId+'&openId='+PlayerInfo.instance.openid;
		LevelUpShareView.__super.call(this);
		this._layer=LayerMgr.ins.flyWordLayer;
		this.initView();
		this.addEvent();
	}

	__class(LevelUpShareView,'modules.levelUpShare.LevelUpShareView',_super);
	var __proto=LevelUpShareView.prototype;
	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		laya.ui.Window.prototype.onResize.call(this,_bestFitWidth,_bestFitHeight);
	}

	__proto.initView=function(){
		this.lab_cpdeName.text=PlayerInfo.instance.nickName;
		this.lab_nickName.text=this.lab_cpdeName.text;
		QRMgr.ins.toQRBase64(this.path,150,150,Handler.create(this,function(base64URL){
			this.imgCode.skin=base64URL;
		}));
		if(UrlParam.PARAMS["PLID"]=="fb"||UrlParam.PARAMS["PLID"]=="wx"){
			this.imgCode.visible=false;
			this.lab_cpdeName.visible=false;
		}
		this.currLevel.value=PlayerInfo.instance.level_up.toString();
		this.toLevel.value=PlayerInfo.instance.grade.toString();
		this.lab_blood.text="+"+PlayerInfo.instance.add_blood.toString();
		this.lab_damage.text="+"+PlayerInfo.instance.add_damage.toString();
		this.imgHead.skin=PlayerInfo.instance.avatar;
		this.btn_shareSpace.visible=this.btn_shareFriend.visible=this.btn_sharefacebook.visible=false;
		if(UrlParam.PARAMS["PLID"]=="qq"){
			this.btn_shareSpace.visible=this.btn_shareFriend.visible=true;
			}else if(UrlParam.PARAMS["PLID"]=="fb"){
			this.btn_sharefacebook.visible=true;
			}else if(UrlParam.PARAMS["PLID"]=="wx"){
			this.btn_shareFriend.visible=true;
		}
	}

	__proto.addEvent=function(){
		this.btn_back.clickHandler=new Handler(this,this.onClickBack);
		this.btn_shareSpace.clickHandler=new Handler(this,this.onShareSpace);
		this.btn_shareFriend.clickHandler=new Handler(this,this.onShareFriend);
		this.btn_sharefacebook.clickHandler=new Handler(this,this.onShareFriend);
		EventMgr.ins.on("SHARE_BREAK_TO_VIEW",this,this.shareCompleteFriends);
	}

	__proto.onShareSpace=function(){
		if(UrlParam.PARAMS["PLID"]=="qq"){
			modules.qqsdk.H5jssdkManager.instance.sendShare(Handler.create(this,this.shareComplete,null,false));
		}
	}

	__proto.onShareFriend=function(){
		this.boxDown.visible=false;
		EventMgr.ins.event("SHARE",[ShareConst.LEVEL_UP]);
	}

	__proto.shareCompleteFriends=function(){
		UIMgr.ins.closeView("LevelUpShareView");
		this.boxDown.visible=true;
	}

	__proto.onClickBack=function(){
		UIMgr.ins.closeView("LevelUpShareView");
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		EventMgr.ins.off("SHARE_BREAK_TO_VIEW",this,this.shareCompleteFriends);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return LevelUpShareView;
})(LevelUpShareViewUI)


/**
*排队系统
*@author weiqiang.huang
*
*/
//class modules.loading.QueueUpView extends ui.login.QueueUpViewUI
var QueueUpView=(function(_super){
	function QueueUpView(){
		this.mTimeCount=0;
		this.index=0;
		QueueUpView.__super.call(this);
		this.init();
	}

	__class(QueueUpView,'modules.loading.QueueUpView',_super);
	var __proto=QueueUpView.prototype;
	__proto.init=function(){
		this.btnClose.clickHandler=new Handler(this,this.onClickClose);
	}

	__proto.onClickClose=function(){
		this.mTimeCount=0;
		Laya.timer.clear(this,this.onTimeHandler);
		importJS("js/modules/qqsdk.js?v=2.0.0",function(){
			modules.qqsdk.H5jssdkManager.instance.sendCloseWindow();
		});
		UIMgr.ins.closeView("QueueUpView");
	}

	__proto.setData=function(number){
		this.curIndex.value=number+"";
		this.mHbox.refresh();
		Laya.timer.once(500,this,function(){
			this.mHbox.x=(this.width-this.mHbox.width)/ 2;
		});
		var time=parseInt(ConfigModel.getConfigData(1040).ConfigValue.split(",")[3])*60000*number;
		this.labTime0.text=TimeManager.Instance.getTimemilSecTxt(time);
		this.onTimeHandler();
		Laya.timer.loop(1000,this,this.onTimeHandler);
	}

	__proto.onTimeHandler=function(){
		this.mTimeCount+=1000;
		this.labTime1.text=TimeManager.Instance.getTimemilSecTxt(this.mTimeCount);
		this.index++;
		if(this.index >=10){
			this.index=0;
			LoginControl.instance.login(PlayerInfo.instance.nickName);
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.mTimeCount=0;
		Laya.timer.clear(this,this.onTimeHandler);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	__proto.closeHandler=function(e){}
	return QueueUpView;
})(QueueUpViewUI)


//class modules.mysteryshop.MysteryShopAlertWindow extends ui.mysteryShop.MysteryShopAlertWindowUI
var MysteryShopAlertWindow=(function(_super){
	function MysteryShopAlertWindow(){
		this._eventdispatch=null;
		this._refreshTimer=0;
		//刷新剩余时间
		this._usePrice=0;
		this._data=null;
		MysteryShopAlertWindow.__super.call(this);}
	__class(MysteryShopAlertWindow,'modules.mysteryshop.MysteryShopAlertWindow',_super);
	var __proto=MysteryShopAlertWindow.prototype;
	//购买费用
	__proto.init=function(){
		var self=this;
		self._eventdispatch=new EventDispatcher();
		self.titleText.text=LanguageMgr.Ins.GetLan("14300141");
		self.addEvent();
	}

	__proto.removeEvent=function(){
		var self=this;
	}

	__proto.addEvent=function(){
		var self=this;
		self.closeBtn.clickHandler=Handler.create(self,self.onClose);
		self.buyBtn.clickHandler=Handler.create(self,self.onBuyItem,null,false);
		self.cardProList.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
	}

	__proto.onRenderHandler=function($item,$index){
		var data=this.cardProList.array[$index];
		var attArr=data.split("|");
		$item.icon.skin="assets/textrue/common/icon/"+attArr[0]+".png";
		$item.contentText.text=LanguageMgr.Ins.GetLan(attArr[1]);
		var dec=attArr[2];
		if (dec.indexOf("%")!=-1){
			$item.proCountText.text=dec;
		}
		else {
			if (parseInt(dec)> 100000){
				$item.proCountText.text=LanguageMgr.Ins.GetLan(dec);
			}
			else {
				$item.proCountText.text=dec;
			}
		}
	}

	/**
	*设置商品数据
	*@param $value :商品数据
	*@param type :类型:0:商品购买 1:商品信息
	*/
	__proto.setData=function($value,type){
		var self=this;
		self._data=$value;
		self.icon.skin=self._data.itemIcon;
		self.itemNameText.text=self._data.itemName;
		self._usePrice=Math.ceil(self._data.price *(self._data.offNum/100));
		self.priceTypeIcon.skin=MysteryShopMgr.ins.getPriceTypeSkin(self._data.priceType);
		self.priceText.text=""+self._usePrice;
		if(self._data.skillId !=0){
			self.descText.visible=false;
			self.cardProList.visible=true;
			var skillVo=SkillModel.getSkillConfigData(self._data.skillId);
			var skillPerData=SkillModel.getSkillPerformanceBySkillId(skillVo.Display);
			var attributes=skillPerData.AttributeDescription.split(",");
			attributes.length > 4 && (attributes.length=4);
			self.cardProList.array=attributes;
			self.starList.visible=true;
			var qualiity="aaaaaa";
			self.starList.value=qualiity.substr(0,skillVo.Quality+1);
		}
		else {
			self.descText.visible=true;
			self.cardProList.visible=false;
			self.descText.text=self._data.desc;
			self.starList.visible=false;
		}
		self.countText.text="x"+self._data.count;
		if(type==0){
			self.titleText.text=LanguageMgr.Ins.GetLan("14300141");
			self.buyBtn,this.visible=true;
			self.bg.height=416;
		}
		else {
			self.titleText.text=LanguageMgr.Ins.GetLan("9002161");
			self.buyBtn.visible=false;
			self.bg.height=366;
		}
	}

	/**
	*购买物品
	*/
	__proto.onBuyItem=function(){
		var self=this;
		var hasNum=0,pinkName="";
		switch(self._data.priceType){
			case-60:
				hasNum=PlayerInfo.instance.pinkDiamond;
				pinkName=LanguageMgr.Ins.GetLan("9007007");
				break ;
			case-10:
				hasNum=PlayerInfo.instance.gold;
				pinkName=LanguageMgr.Ins.GetLan("9007001");
				break ;
			case-20:
				hasNum=PlayerInfo.instance.diamond;
				pinkName=LanguageMgr.Ins.GetLan("9007002");
				break ;
			}
		if(hasNum < self._usePrice){
			TipsManager.Instance().showAlertDialog(
			LanguageMgr.Ins.GetLan("9007368")
			,LanguageMgr.Ins.GetLan("14300142",pinkName)
			,LanguageMgr.Ins.GetLan("9007390")
			,LanguageMgr.Ins.GetLan("9007389")
			,Handler.create(self,self.onRecharge));
			return;
		}
		MysteryShopMgr.ins.sendBuyShopItem(self._data.index);
		self.onClose();
	}

	__proto.onRecharge=function(){
		switch(this._data.priceType){
			case-10:
				ShopMgr.ins.selectedIndex=1;
				break ;
			case-60:
				ShopMgr.ins.selectedIndex=2;
				break ;
			case-20:
				ShopMgr.ins.selectedIndex=4;
				break ;
			}
		UIMgr.ins.openView("ShopView");
	}

	/**关闭界面 **/
	__proto.onClose=function(){
		UIMgr.ins.closeView("MysteryShopAlertWindow",true,false);
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this);
		this.init();
	}

	__proto.closeHandler=function(e){
		this.onClose();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
		self._data=null;
		self._eventdispatch=null;
	}

	return MysteryShopAlertWindow;
})(MysteryShopAlertWindowUI)


//class modules.mysteryshop.MysteryShopWindow extends ui.mysteryShop.MysteryShopWindowUI
var MysteryShopWindow=(function(_super){
	function MysteryShopWindow(){
		this._eventdispatch=null;
		this._refreshTimer=0;
		MysteryShopWindow.__super.call(this);}
	__class(MysteryShopWindow,'modules.mysteryshop.MysteryShopWindow',_super);
	var __proto=MysteryShopWindow.prototype;
	//刷新剩余时间
	__proto.init=function(){
		if(!ShopMgr.ins.IS_OPEN_PAY){
			this.addDiamondBtn.visible=false;
			this.addDiamondBtn.disabled=true;
		};
		var self=this;
		self._eventdispatch=new EventDispatcher();
		self.itemList.array=MysteryShopMgr.ins.mysteryShopItemList;
		self.refreshTypeIcon.skin=MysteryShopMgr.ins.getPriceTypeSkin(MysteryShopMgr.ins.refreshType);
		self.refreshNumText.text=""+MysteryShopMgr.ins.refreshUseNum;
		self.onUpdateResNum();
		self.onUpdateBuyNum();
		self._refreshTimer=0;
		self.timerText.text=LanguageMgr.Ins.GetLan("14300128",TimeManager.Instance.convertTimeToStr(self._refreshTimer));
		self.addEvent();
	}

	__proto.removeEvent=function(){
		var self=this;
		PlayerInfoMgr.ins.off("player_info_change",self,self.onUpdateResNum);
		EventMgr.ins.off("mystery_shop_item_update",self,self.onMysteryShopItemUpdate);
		Laya.timer.clearAll(self);
	}

	__proto.addEvent=function(){
		var self=this;
		self.closeBtn.clickHandler=Handler.create(self,self.onClose);
		self.addDiamondBtn.clickHandler=Handler.create(self,self.onAddDiamond,null,false);
		self.refreshBtn.clickHandler=Handler.create(self,self.onRefresh,null,false);
		self.itemList.renderHandler=Handler.create(self,self.onRenderHandler,null,false);
		PlayerInfoMgr.ins.on("player_info_change",self,self.onUpdateResNum);
		EventMgr.ins.on("mystery_shop_item_update",self,self.onMysteryShopItemUpdate);
	}

	/**
	*更新刷新次数显示
	*/
	__proto.onUpdateBuyNum=function(){
		var textColor=MysteryShopMgr.ins.lastRefreshNum > 0 ? "#a67153" :"#ff0000";
		var str;
		if(MysteryShopMgr.ins.isFreeRefresh){
			this.refreshNumText.text=" 0 ";
			str="<span style='color:#a67153'>"+LanguageMgr.Ins.GetLan(9020032)+"</span>";
		}
		else{
			this.refreshNumText.text=""+MysteryShopMgr.ins.refreshUseNum;
			str=LanguageMgr.Ins.GetLan("14300127")+"<span style='color:"+textColor+"'>"+MysteryShopMgr.ins.lastRefreshNum+"</span>"+"<span style='color:#a67153'>/"+MysteryShopMgr.ins.maxRefreshNum+"</span>";
		}
		this.refreshTipsText.text=str;
	}

	/**
	*神秘商店数据刷新
	*/
	__proto.onMysteryShopItemUpdate=function(){
		var self=this;
		self.onUpdateBuyNum();
		self.itemList.array=MysteryShopMgr.ins.mysteryShopItemList;
		self._refreshTimer=MysteryShopMgr.ins.refreshTime;
		self.updateTimer();
	}

	/**
	*更新刷新时间
	*/
	__proto.updateTimer=function(){
		var self=this;
		self.timerText.text=LanguageMgr.Ins.GetLan("14300128",TimeManager.Instance.convertTimeToStr(self._refreshTimer));
		if(self._refreshTimer > 0){
			Laya.timer.loop(1000,self,self.onTimer);
			self.onTimer();
		}
		else {
			Laya.timer.clearAll(self);
		}
	}

	__proto.onTimer=function(){
		var self=this;
		self._refreshTimer--;
		self.timerText.text=LanguageMgr.Ins.GetLan("14300128",TimeManager.Instance.convertTimeToStr(self._refreshTimer));
		if(self._refreshTimer <=0){
			Laya.timer.clearAll(self);
			MysteryShopMgr.ins.sendGetMysteryShopData();
			return;
		}
	}

	/**
	*更新资源数量
	*/
	__proto.onUpdateResNum=function(){
		var self=this;
		self.goldNumText.text=""+PlayerInfo.instance.gold;
		self.pinkDiamondNumText.text=""+PlayerInfo.instance.pinkDiamond;
		self.diamondNumText.text=""+PlayerInfo.instance.diamond;
	}

	/**
	*刷新
	*/
	__proto.onRefresh=function(){
		MysteryShopMgr.ins.sendRefresh();
	}

	/**
	*打开商店购买钻石
	*/
	__proto.onAddDiamond=function(){
		SocketManager.Instance.record.iconClickRecords(7);
		ShopMgr.ins.selectedIndex=4;
		UIMgr.ins.openView("ShopView");
	}

	/**
	*刷新神秘商店物品
	*/
	__proto.onRenderHandler=function($item,$index){
		$item.eventdispatch=this._eventdispatch;
		$item.data=this.itemList.array[$index];
	}

	/**关闭界面 **/
	__proto.onClose=function(){
		UIMgr.ins.closeView("MysteryShopWindow");
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this);
		this.init();
		MysteryShopMgr.ins.isRefresh=false;
		EventMgr.ins.event("ACTIVITY_SET_RED","btn_mysteryshop");
		MysteryShopMgr.ins.sendGetMysteryShopData();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
		self._eventdispatch=null;
	}

	return MysteryShopWindow;
})(MysteryShopWindowUI)


/**
*改名卡and变形卡
*@author weiqiang.huang
*
*/
//class modules.player.view.ChangeCardView extends ui.player.ChangeCardViewUI
var ChangeCardView=(function(_super){
	function ChangeCardView(){
		ChangeCardView.__super.call(this);
		this.btnClose.on("click",this,this.onCloseView);
	}

	__class(ChangeCardView,'modules.player.view.ChangeCardView',_super);
	var __proto=ChangeCardView.prototype;
	/**
	*改名
	*/
	__proto.setRenameCardData=function(){
		this.boxRename.visible=true;
		this.labSex.visible=this.btnSex.visible=false;
		this.labTitle.text=LanguageMgr.Ins.GetLan("9070135");
		this.labOldName.text=PlayerInfo.instance.nickName;
		var itemInfo=PlayerInfoMgr.ins.itemIdDic["6007004"];
		var item=ItemModel.getItemConfigData(6007004);
		this.labCardName.text=LanguageMgr.Ins.GetLan(item.Name);
		this.labCount.text=itemInfo==null ? "0" :itemInfo.count+"/1";
		this.labCurName.text=LanguageMgr.Ins.GetLan("9070136");
		this.txtInput.prompt=LanguageMgr.Ins.GetLan("9070137");
		this.labTips.text=LanguageMgr.Ins.GetLan("9070138");
		this.txtInput.on("input",this,this.onTxtInput);
		this.btnRename.on("click",this,this.onSendRename);
	}

	__proto.onTxtInput=function(e){
		this.txtInput.text=PlayerInfoMgr.ins.stringCut(this.txtInput.text,14);
	}

	/**
	*发送改名
	*/
	__proto.onSendRename=function(){
		if(this.txtInput.text==""){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9070142"));
			return;
		}
		if(this.txtInput.text==PlayerInfo.instance.nickName){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9070141"));
			return;
		}
		SocketManager.Instance.out.sendRename(this.txtInput.text);
		this.onCloseView();
	}

	/**
	*设置修改性别数据
	*/
	__proto.setSexData=function(){
		this.boxRename.visible=false;
		this.labSex.visible=this.btnSex.visible=true;
		this.labTitle.text=LanguageMgr.Ins.GetLan("9070140");
		this.labSex.text=LanguageMgr.Ins.GetLan("9070139");
		var itemInfo=PlayerInfoMgr.ins.itemIdDic["6007005"];
		var item=ItemModel.getItemConfigData(6007005);
		this.labCardName.text=LanguageMgr.Ins.GetLan(item.Name);
		this.labCount.text=itemInfo==null ? "0" :itemInfo.count+"/1";
		this.btnSex.on("click",this,this.onSendSex);
	}

	/**
	*发送改变性别
	*/
	__proto.onSendSex=function(){
		SocketManager.Instance.out.sendSexChange();
		TipsManager.Instance().showAlertDialog(LanguageMgr.Ins.GetLan("9007368"),LanguageMgr.Ins.GetLan("9070144"),LanguageMgr.Ins.GetLan("9002152"));
		this.onCloseView();
	}

	__proto.onCloseView=function(){
		UIMgr.ins.closeView("ChangeCardView");
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.txtInput.off("input",this,this.onTxtInput);
		this.btnRename.off("click",this,this.onSendRename);
		this.btnClose.off("click",this,this.onCloseView);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return ChangeCardView;
})(ChangeCardViewUI)


/**
*人物信息界面
*@author weiqiang.huang
*@modify zhihua.zhou 增加查看其它玩家的资料
*/
//class modules.playerMsg.PlayerMessageView extends ui.hall.PlayerMessageViewUI
var PlayerMessageView=(function(_super){
	function PlayerMessageView(){
		/**是否查看自己的个人信息 */
		this._isMyInfo=true;
		this._guildInfo=null;
		this._playerInfoMsg=null;
		this.heroShowSkeleton=null;
		PlayerMessageView.__super.call(this);
		this.isOpenResize=true;
		this.init();
		this.boxGuild.visible=false;
		this.btn_guild.on("click",this,this.onOpenGuild);
		this.on("click",this,this.stopPropagation);
		this.btnSex.on("click",this,this.onOpenRenameAndSex,[6007005,2]);
		this.btnRename.on("click",this,this.onOpenRenameAndSex,[6007004,1]);
		PlayerInfoMgr.ins.on("player_info_change",this,this.onUpdate);
		this.addFriendBtn.clickHandler=Handler.create(this,this.onAddFriend,null,false);
		this.addFriendText.text=LanguageMgr.Ins.GetLan("9004137");
		this.btn_vipIcon.on("click",this,this.onClickVip);
	}

	__class(PlayerMessageView,'modules.playerMsg.PlayerMessageView',_super);
	var __proto=PlayerMessageView.prototype;
	__proto.onClickVip=function(){
		if(this._isMyInfo){
			UIMgr.ins.openView("VipView");
		}
	}

	__proto.onAddFriend=function(){
		FriendsMgr.ins.sendAddFriend(this._playerInfoMsg.playerId,this._playerInfoMsg.nickName);
	}

	__proto.onUpdate=function(){
		this.lab_name.text=PlayerInfo.instance.nickName;
		this.updateSex(PlayerInfo.instance.sex);
		this.vipIcon.skin="assets/textrue/vip/ui_icon_vip"+PlayerInfo.instance.vipLv+".png";
		this.showRole();
	}

	__proto.stopPropagation=function(e){
		e.stopPropagation()
	}

	__proto.onOpenRenameAndSex=function(itemID,type){
		var itemInfo=PlayerInfoMgr.ins.itemIdDic[itemID];
		if(itemInfo !=null){
			UIMgr.ins.openView("ChangeCardView",new Handler(this,function(view){
				if(itemID==6007005)
					view.setSexData();
				else
				view.setRenameCardData();
			}));
		}
		else{
			UIMgr.ins.openView("CardTips",new Handler(this,function(view){
				view.setData(itemID,type);
			}));
		}
	}

	__proto.setData=function(isme,msg){
		(isme===void 0)&& (isme=true);
		if(msg){
			if(msg.playerInfo.playerId==PlayerInfo.instance.playerId){
				isme=true;
				}else{
				isme=false;
			}
		}
		this._isMyInfo=isme;
		if(isme){
			this.updateView();
			this.showRole();
			this._basicDataView.updateView();
			this._moreDataView.updateView();
			this._guildInfo=GuildMgr.ins.myGuildInfo;
			this.addFriendBtn.visible=this.addFriendText.visible=false;
			}else{
			this.updateOtherPlayerInfo(msg);
			this.btn_vipIcon.mouseEnabled=false;
		}
		this.btn_close.visible=this._tab.visible=!PlayerInfoMgr.ins.IsPlayerShare;
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		if(PlayerInfoMgr.ins.IsPlayerShare==true){
			$maskAlpha=0;
			this.scale(0.7,0.7);
			$isShowMash=false;
		}
		else{
			this.scale(0.8,0.8);
			$isShowMash=true;
		}
		laya.ui.Window.prototype.showView.call(this,$x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash);
	}

	/**查看其他玩家信息 */
	__proto.updateOtherPlayerInfo=function(msg){
		this._playerInfoMsg=msg.playerInfo;
		this._isMyInfo=false;
		if(this._playerInfoMsg.consortiaID !="-1"){
			this.boxGuild.visible=true;
			EventMgr.ins.off("recv_guild_info",this,this.updateGuildInfo);
			EventMgr.ins.on("recv_guild_info",this,this.updateGuildInfo);
			SocketManager.Instance.out.requestGuildInfo(this._playerInfoMsg.consortiaID,true);
		};
		var vipLv=this._playerInfoMsg.vipLevel;
		this.vipIcon.skin="assets/textrue/vip/ui_icon_vip"+vipLv+".png";
		this.btn_vipIcon.x=this.lab_name.x-this.lab_name.width/2-20;
		this.lab_name.text=this._playerInfoMsg.nickName;
		this.lab_level.text=this._playerInfoMsg.level.toString();
		this.lab_uid.text="UID:"+this._playerInfoMsg.playerId.toString();
		this.lab_league.text=LanguageMgr.Ins.GetLan("9007327");
		var maxExp=PlayerInfoMgr.ins.getPlayerExp(this._playerInfoMsg.level);
		var currExp=this._playerInfoMsg.exp;
		this.pro_exp.value=currExp / maxExp;
		this.lab_progressNum.text=currExp+"/"+maxExp;
		this._tab.labels=LanguageMgr.Ins.GetLan("9007366");
		this.showRole(this._isMyInfo,this._playerInfoMsg.sex);
		var arr=msg.skillls.skills;
		this._basicDataView.updateOtherView(this._playerInfoMsg,arr);
		this._moreDataView.updateOtherPlayerView(this._playerInfoMsg);
		this.btnRename.visible=false;
		this.btnSex.visible=false;
		this.imgCurrSex.visible=false;
		this.imgSex.visible=false;
		this.addFriendBtn.visible=this.addFriendText.visible=(!FriendsMgr.ins.getIsMyFriend(this._playerInfoMsg.playerId));
	}

	__proto.updateView=function(){
		this.btnRename.visible=true;
		this.btnSex.visible=true;
		this.imgCurrSex.visible=true;
		this.imgSex.visible=true;
		if(PlayerInfo.instance.consortiaID > 0){
			EventMgr.ins.off("recv_guild_info",this,this.updateGuildInfo);
			EventMgr.ins.on("recv_guild_info",this,this.updateGuildInfo);
			SocketManager.Instance.out.requestGuildInfo(PlayerInfo.instance.consortiaID,true);
		};
		var vipLv=PlayerInfo.instance.vipLv;
		this.vipIcon.skin="assets/textrue/vip/ui_icon_vip"+vipLv+".png";
		this.btn_vipIcon.x=this.lab_name.x-this.lab_name.width/2-20;
		this.lab_name.text=PlayerInfo.instance.nickName;
		this.lab_level.text=PlayerInfo.instance.grade.toString();
		this.lab_uid.text="UID:"+PlayerInfo.instance.playerId.toString();
		this.lab_league.text=LanguageMgr.Ins.GetLan("9007327");
		var maxExp=PlayerInfoMgr.ins.getPlayerExp(PlayerInfo.instance.grade);
		var currExp=PlayerInfo.instance.exp;
		this.pro_exp.value=currExp / maxExp;
		this.lab_progressNum.text=currExp+"/"+maxExp;
		this._tab.labels=LanguageMgr.Ins.GetLan("9007366");
		this.boxGuild.visible=false;
		this.updateSex(PlayerInfo.instance.sex);
	}

	__proto.updateSex=function(sex){
		if(sex==0){
			this.imgCurrSex.skin="playerMessage/ui_nv1.png";
			this.imgSex.skin="playerMessage/ui_nan2.png";
		}
		else{
			this.imgCurrSex.skin="playerMessage/ui_nan1.png";
			this.imgSex.skin="playerMessage/ui_nv2.png";
		}
	}

	__proto.updateGuildInfo=function(res){
		this._guildInfo=res;
		var iconName=res.iconID < 10 ? "0"+res.iconID :res.iconID.toString();
		this.btn_guild.skin="assets/textrue/badge/ui_icon_"+iconName+".png";
		this.lab_league.text=res.guildName;
		this.boxGuild.visible=true;
	}

	__proto.init=function(){
		this._tab.selectedIndex=0;
		this._tab.selectHandler=Handler.create(this,this.onSelectHandler,null,false);
		this.btn_close.clickHandler=Handler.create(this,this.onClickClose,null,false);
	}

	__proto.onSelectHandler=function(index){
		SoundMgr.instance.playBtttonSound();
		switch(index){
			case 0:
				this._basicDataView.visible=true;
				this._moreDataView.visible=false;
				break ;
			case 1:
				this._basicDataView.visible=false;
				this._moreDataView.visible=true;
				break ;
			}
	}

	__proto.showRole=function(isMy,sex){
		(isMy===void 0)&& (isMy=true);
		(sex===void 0)&& (sex=true);
		if(isMy){
			sex=PlayerInfo.instance.sex;
		};
		var type=sex ? RoleModelType.ManModel :RoleModelType.WamanModel;
		if(this.heroShowSkeleton){
			this.heroShowSkeleton.destroy(true);
			this.heroShowSkeleton=null;
		}
		this.heroShowSkeleton=new HeroShowSkeleton(type);
		this.heroShowSkeleton.x=225;
		this.heroShowSkeleton.y=467;
		this.heroShowSkeleton.scale(0.7,0.7);
		this.addChild(this.heroShowSkeleton);
	}

	__proto.getRate=function(value1,value2){
		var rate=(value1 / value2)*100;
		if(rate > 0 && rate < 1)rate=1;
		return int(rate);
	}

	/**
	*进入公会
	*/
	__proto.onOpenGuild=function(){
		var _$this=this;
		if (UIMgr.ins.hasView("Ranking")){
			UIMgr.ins.closeView("PlayerMessageView");
			RankingMgr.ins.btnTribeClicked=true;
			EventMgr.ins.event("recv_guild_info",[this._guildInfo]);
			}else {
			UIMgr.ins.closeView("PlayerMessageView");
			if(GuildMgr.ins.isOpenGuildInfoPage)return;
			if(PlayerInfo.instance.consortiaID !="-1" && this._isMyInfo){
				UIMgr.ins.openView("GuildInfoPage",Handler.create(this,function(view){
					view.init(_$this._guildInfo.guildIdStr);
					view.setData(_$this._guildInfo);
				}));
				}else{
				if(this._guildInfo){
					UIMgr.ins.openView("GuildInfoPage",Handler.create(this,function(view){
						view.init(_$this._guildInfo.guildIdStr);
						view.setData(_$this._guildInfo);
					}));
					}else{
					UIMgr.ins.openView("GuildList");
				}
			}
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		EventMgr.ins.off("recv_guild_info",this,this.updateGuildInfo);
		this.btn_guild.off("click",this,this.onOpenGuild);
		this.off("click",this,this.stopPropagation);
		this.btnSex.off("click",this,this.onOpenRenameAndSex,[6007005,2]);
		this.btnRename.off("click",this,this.onOpenRenameAndSex,[6007004,1]);
		PlayerInfoMgr.ins.off("player_info_change",this,this.onUpdate);
		this.btn_vipIcon.off("click",this,this.onClickVip);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	__proto.closeHandler=function(e){
		if(!PlayerInfoMgr.ins.IsPlayerShare){
			this.onClickClose();
		}
	}

	__proto.onClickClose=function(){
		if(this.heroShowSkeleton){
			this.heroShowSkeleton.destroy(true);
			this.heroShowSkeleton=null;
		}
		UIMgr.ins.closeView("PlayerMessageView",true);
	}

	return PlayerMessageView;
})(PlayerMessageViewUI)


//class modules.playerMsgShare.PlayerMsgShareView extends ui.playerMsgShare.PlayerMsgShareViewUI
var PlayerMsgShareView=(function(_super){
	function PlayerMsgShareView(){
		this.path=UrlParam.ROOTURL+"index.html?_wv=183040&_wwv=2048"+'&playerId='+PlayerInfo.instance.playerId+'&openId='+PlayerInfo.instance.openid;
		PlayerMsgShareView.__super.call(this);
		this.initView();
	}

	__class(PlayerMsgShareView,'modules.playerMsgShare.PlayerMsgShareView',_super);
	var __proto=PlayerMsgShareView.prototype;
	__proto.initView=function(){
		this.labName.text=PlayerInfo.instance.nickName;
		this.btn_sharefacebook.visible=this.btn_shareSpace.visible=this.btn_shareFriend.visible=false;
		if(UrlParam.PARAMS["PLID"]=="qq"){
			this.btn_shareSpace.visible=this.btn_shareFriend.visible=true;
			}else if(UrlParam.PARAMS["PLID"]=="fb"){
			this.btn_sharefacebook.visible=true;
			}else if(UrlParam.PARAMS["PLID"]=="wx"){
			this.btn_shareFriend.visible=true;
		}
		QRMgr.ins.toQRBase64(this.path,150,150,Handler.create(this,function(base64URL){
			this.imgTwo.skin=base64URL;
		}));
		if(UrlParam.PARAMS["PLID"]=="fb"||UrlParam.PARAMS["PLID"]=="wx"){
			this.imgTwo.visible=false;
			this.labName.visible=false;
		}
		UIMgr.ins.openView("PlayerMessageView",Handler.create(this,function(view){
			view.setData();
		}));
		this.btn_back.clickHandler=new Handler(this,this.onClickBack);
		this.btn_shareSpace.clickHandler=new Handler(this,this.onShareSpace);
		this.btn_shareFriend.clickHandler=new Handler(this,this.onShareFriend);
		this.btn_sharefacebook.clickHandler=new Handler(this,this.onShareFriend);
		EventMgr.ins.on("SHARE_BREAK_TO_VIEW",this,this.shareCompleteFriends);
		this.onResizeView();
	}

	__proto.onShareSpace=function(){
		if(UrlParam.PARAMS["PLID"]=="qq"){
			modules.qqsdk.H5jssdkManager.instance.sendShare(Handler.create(this,this.shareComplete,null,false));
		}
	}

	__proto.onShareFriend=function(){
		this.boxDown.visible=false;
		EventMgr.ins.event("SHARE",[ShareConst.SKILL_GROUP]);
	}

	__proto.shareCompleteFriends=function(){
		this.boxDown.visible=true;
	}

	__proto.onClickBack=function(){
		PlayerInfoMgr.ins.IsPlayerShare=false;
		UIMgr.ins.closeView("PlayerMessageView");
		UIMgr.ins.closeView("PlayerMsgShareView");
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		PlayerInfoMgr.ins.IsPlayerShare=false;
		this.btn_back.clickHandler.clear();
		this.btn_shareSpace.clickHandler.clear();
		this.btn_shareFriend.clickHandler.clear();
		this.btn_sharefacebook.clickHandler.clear();
		EventMgr.ins.off("SHARE_BREAK_TO_VIEW",this,this.shareCompleteFriends);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	__proto.onResizeView=function(){
		var _bestFitWidth=ResizeMgr.bestFitWidth;
		var _bestFitHeight=ResizeMgr.bestFitHeight;
		var value=-(_bestFitHeight-this.height);
		var valueH=-(_bestFitWidth-this.width);
		this.imgIcon.x=valueH-50;
		this.imgIcon.y=value-45;
		this.boxDown.y=_bestFitHeight-this.boxDown.height+20;
		this.imgTwo.y=value-30;
		this.imgTwo.x=_bestFitWidth-this.imgTwo.width+80;
		this.labName.y=value+this.imgTwo.height-30;
		this.labName.x=_bestFitWidth-this.labName.width+100;
	}

	return PlayerMsgShareView;
})(PlayerMsgShareViewUI)


/**
*段位升降页面
*/
//class modules.pvp.view.ArenaChangePage extends ui.pvp.ArenaChangePageUI
var ArenaChangePage=(function(_super){
	function ArenaChangePage(){
		this.skelton=null;
		ArenaChangePage.__super.call(this);
	}

	__class(ArenaChangePage,'modules.pvp.view.ArenaChangePage',_super);
	var __proto=ArenaChangePage.prototype;
	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this,$x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash);
		this.isOpenResize=true;
		this.skelton=new AniSkeleton("duanweitisheng","ui");
		this.bg.addChild(this.skelton);
		this.skelton.play(0,true);
		this.init();
		this.addEvent();
		Tween.from(this.icon,{scaleX:3,scaleY:3},300);
	}

	__proto.init=function(){
		if(PlayerInfo.instance.division >=10){
			this.icon.skin="assets/textrue/medal/duanwei_"+PlayerInfo.instance.division+"1.png";
			}else{
			this.icon.skin="assets/textrue/medal/duanwei_0"+PlayerInfo.instance.division+"1.png";
		};
		var glowFilter;
		if(PlayerInfo.instance.isDivisonUp){
			this.upbox.visible=true;
			this.downbox.visible=false;
			glowFilter=new GlowFilter("#f4b208",10,0,0);
			}else{
			this.upbox.visible=false;
			this.downbox.visible=true;
			glowFilter=new GlowFilter("#15f3ea",10,0,0);
		};
		var rankVo=RankModel.getRankVO(PlayerInfo.instance.division);
		this.txtArena.text=LanguageMgr.Ins.GetLan(rankVo.Name);
		this.txtDown.text=LanguageMgr.Ins.GetLan(rankVo.Name);
		this.icon.filters=[glowFilter];
	}

	__proto.addEvent=function(){
		this.mouseEnabled=true;
		this.bg1.on("mousedown",this,this.onClick);
		this.btnShare.clickHandler=Handler.create(this,this.onShare,null,false);
	}

	__proto.onShare=function(){
		EventMgr.ins.event("SHARE",[ShareConst.DIVIDE_UP]);
	}

	__proto.onClick=function(){
		HallMgr.ins.show();
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.x=(ResizeMgr.bestFitWidth-1136)*0.5;
		this.y=(ResizeMgr.bestFitHeight-640)*0.5;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		PlayerInfo.instance.isShowAreaChange=false;
		if(this.skelton)this.skelton.destroy();
		this.skelton=null;
		this.bg1.off("mousedown",this,this.onClick);
		laya.ui.Window.prototype.destroy.call(this);
	}

	return ArenaChangePage;
})(ArenaChangePageUI)


/**
*段位预览页面
**/
//class modules.pvp.view.PVPArenaPage extends ui.pvp.PVPArenaPageUI
var PVPArenaPage=(function(_super){
	function PVPArenaPage(){
		this.data=[];
		this._arena=1;
		this.curSkillVo=null;
		this.division=0;
		this._chestData=null;
		this.divName=null;
		this._curStar=0;
		this._isOpen=false;
		PVPArenaPage.__super.call(this);
		this.init();
		EventMgr.ins.on("recv_season_info",this,this.onSeasonInfo);
		SocketManager.Instance.out.reqSeasonInfo();
	}

	__class(PVPArenaPage,'modules.pvp.view.PVPArenaPage',_super);
	var __proto=PVPArenaPage.prototype;
	/**赛季信息 */
	__proto.onSeasonInfo=function(){
		var stratTime=TimeManager.Instance.checkTimeEndNum(PvpMgr.ins.startTime);
		var endTime=TimeManager.Instance.checkTimeEndNum(PvpMgr.ins.endTime);
		if(stratTime > 0){
			this.isOpen=false;
			}else if(endTime >0){
			this.isOpen=true;
			}else{
			this.isOpen=false;
		}
	}

	__proto.init=function(){
		this._arena=PlayerInfo.instance.division;
		this.division=this._arena;
		this.adddEvent();
		this.update();
		this.tab.selectedIndex=0;
		this.txtUnopen.text=LanguageMgr.Ins.GetLan("9007418");
		this.txtOpen.text=LanguageMgr.Ins.GetLan("9007417");
	}

	__proto.createTimer=function(time){
		Laya.timer.clear(this,this.onTimeHandler);
		Laya.timer.loop(1000,this,this.onTimeHandler,[time]);
	}

	__proto.onTimeHandler=function(time){
		var endTime=TimeManager.Instance.checkTimeEndNum(time);
		if(endTime>0){
			this.txtTime.text=TimeManager.Instance.getTimemilSecTxt(endTime);
			}else{
			Laya.timer.clear(this,this.onTimeHandler);
		}
	}

	/**更新奖励 */
	__proto.updateReward=function(){
		var star=PVPModel.getMaxStar(this._arena,PvpMgr.ins.seasonNum);
		var srVo=PVPModel.getSeasonReward(this._arena,star,PvpMgr.ins.seasonNum);
		if(srVo){
			var arr=srVo.SeasonReward.split(",");
			if(arr){
				var chestArr=(arr [0]).split("|");
				var itemId=chestArr[0];
				this._chestData=ItemModel.getItemConfigData(itemId);
				var path=StringUtils.formate("assets/textrue/itemicon/{0}.png",this._chestData.Icon);
				this.btnChest.skin=path;
				this.txt0.text=chestArr[1]+"";
				this.txt0.visible=this.txt0.text !="1";
				if(arr.length>=2){
					this.box0.visible=true;
					this.box1.visible=true;
					var gemArr=(arr [1]).split("|");
					var gemvo=ItemModel.getItemConfigData(gemArr[0]);
					this.txtDmd.text=gemArr[1]+"";
					this.img2.skin=StringUtils.formate("assets/textrue/itemicon/{0}.png",gemvo.Icon);
					this.img2.visible=this.txtDmd.visible=true;
					}else{
					this.box1.visible=false;
					this.box0.visible=true;
				}
				}else{
				this.box1.visible=this.box0.visible=false;
			}
			}else{
			this.box1.visible=this.box0.visible=false;
		}
		srVo=null;
	}

	/**显示几颗心 */
	__proto.updateStar=function(num){
		for (var i=0;i < 5;i++){
			(this ["star"+i]).visible=false;
		}
		num=num >5? 5 :num;
		for (var j=0;j < num;j++){
			(this ["star"+j]).visible=true;
		}
		if(num==4 || num==2){
			this.starBox.x=173;
			}else if(num==5 || num==3){
			this.starBox.x=157;
		}
	}

	/**更新捐赠信息 */
	__proto.updateDonate=function(){
		var vo=GuildModel.getGuildDonateCfgByDivison(this._arena);
		if(vo){
			var str;
			if(LanguageMgr.Ins.country=="English"){
				str=this.divName;
				}else{
				str=this.divName.substr(2);
			}
		}
		vo=null;
	}

	__proto.adddEvent=function(){
		this.btnClose.clickHandler=Handler.create(this,this.onClose,null,false);
		this.btnHelp.clickHandler=Handler.create(this,this.onDesc,null,false);
		this.btnLeft.clickHandler=Handler.create(this,this.onLeft,null,false);
		this.btnRight.clickHandler=Handler.create(this,this.onRight,null,false);
		this.skillList.renderHandler=Handler.create(this,this.onRenderList,null,false);
		this.skillList.selectHandler=Handler.create(this,this.onSelectList,null,false);
		this.tab.selectHandler=Handler.create(this,this.onTab,null,false);
		this.skillList.selectEnable=true;
		this.box0.on("click",this,this.onChest);
		Laya.stage.on("click",this,this.onClickStage);
	}

	__proto.onDesc=function(){
		UIMgr.ins.openView("HelpDescriptionView",Handler.create(this,function(view){
			view.initHelp(6);
			view=null;
		}));
	}

	__proto.onChest=function(){
		var _$this=this;
		var view=UIMgr.ins.getView("TreasureBoxDetailTips");
		if(view){
			UIMgr.ins.closeView("TreasureBoxDetailTips");
		}
		else{
			if(this._chestData.Type==4){
				UIMgr.ins.openView("TreasureBoxDetailTips"
				,Handler.create(this,function(view){
					view.setData(_$this._chestData);
				}));
			}
		}
	}

	__proto.onClickStage=function(evt){}
	__proto.onTab=function(index){
		this.skillList.visible=index==0;
		this.chestBox.visible=index!=0;
		if(index==0){
			}else{
			this.chestBox.update(this._arena,this.divName);
		}
	}

	__proto.onSelectList=function(index){
		if(index==-1)return;
		var skillId=this.skillList.getItem(index);
		this.curSkillVo=SkillModel.getSkillConfigData(skillId);
		this.curSkillVo.IsHave=false;
		SkillMgr.ins.showDown=false;
		SkillMgr.ins.currentInfo=this.curSkillVo;
		this.skillList.selectedIndex=-1;
		UIMgr.ins.openView("CardShowMessageView");
	}

	__proto.onRenderList=function(item,index){
		if(index < this.skillList.length){
			item.skillVo=SkillModel.getSkillConfigData(this.skillList.array[index]);
		}
	}

	__proto.onRight=function(){
		this._arena++;
		if(this._arena > 10){
			this._arena=1;
		}
		this.update();
	}

	__proto.onLeft=function(){
		this._arena--;
		if(this._arena <1){
			this._arena=10;
		}
		this.update();
	}

	__proto.update=function(){
		this.icon.skin="";
		var rankVo=RankModel.getRankVO(this._arena);
		this.divName=LanguageMgr.Ins.GetLan(rankVo.Name);
		this.txtArena.text=this.divName;
		this.data=PvpMgr.ins.getUnlockSkill(this._arena);
		this.skillList.array=this.data;
		this.icon.skin=PathMgr.getDivisionIcon(this._arena);
		this.skillList.gray=this.division < this._arena;
		this.updateReward();
		this.updateDonate();
		this.updateStar(rankVo.StarNum);
		this.chestBox.update(this._arena,this.divName);
		if(this._arena >6){
			this.tab.labels=LanguageMgr.Ins.GetLan("9010014");
			this.tab.selectedIndex=0;
			this.skillList.visible=false;
			this.chestBox.visible=true;
			}else{
			this.tab.labels=LanguageMgr.Ins.GetLan("9010013")+","+LanguageMgr.Ins.GetLan("9010014");
			if(this.chestBox.visible){
				this.tab.selectedIndex=1;
			}
		}
		rankVo=null;
	}

	__proto.closeHandler=function(e){
		this.onClose();
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("PVPArena",true);
	}

	__proto.removeEvent=function(){
		if(this.skillList.renderHandler){
			this.skillList.renderHandler.recover();
			this.skillList.renderHandler=null;
		}
		if(this.skillList.selectHandler){
			this.skillList.selectHandler.recover();
			this.skillList.selectHandler=null;
		}
		if(this.tab.selectHandler){
			this.tab.selectHandler.recover();
			this.tab.selectHandler=null;
		}
		if(this.btnClose.clickHandler){
			this.btnClose.clickHandler.recover();
			this.btnClose.clickHandler=null;
		}
		if(this.btnHelp.clickHandler){
			this.btnHelp.clickHandler.recover();
			this.btnHelp.clickHandler=null;
		}
		if(this.btnLeft.clickHandler){
			this.btnLeft.clickHandler.recover();
			this.btnLeft.clickHandler=null;
		}
		if(this.btnRight.clickHandler){
			this.btnRight.clickHandler.recover();
			this.btnRight.clickHandler=null;
		}
		EventMgr.ins.off("recv_season_info",this,this.onSeasonInfo);
		this.box0.off("click",this,this.onChest);
		Laya.timer.clear(this,this.onTimeHandler);
		Laya.stage.off("click",this,this.onClickStage);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		SkillMgr.ins.showDown=true;
		this.removeEvent();
		this.curSkillVo=null;
		if(this.data){
			this.data.length=0;
			this.data=null;
		}
		this._chestData=null;
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	/**赛季是否开启 */
	__getset(0,__proto,'isOpen',null,function(value){
		this._isOpen=value;
		if(this._isOpen){
			this.txtUnopen.visible=false;
			this.txtTime.visible=true;
			this.createTimer(PvpMgr.ins.endTime);
			}else{
			this.txtUnopen.visible=true;
			this.txtTime.visible=this.txtOpen.visible=false;
		}
	});

	return PVPArenaPage;
})(PVPArenaPageUI)


//class modules.pvp.view.RewardLimitDlg extends ui.pvp.RewardLimitDlgUI
var RewardLimitDlg=(function(_super){
	function RewardLimitDlg(){
		this.bg=null;
		RewardLimitDlg.__super.call(this);
		this.init();
		this.on("display",this,this.addStageHandler);
	}

	__class(RewardLimitDlg,'modules.pvp.view.RewardLimitDlg',_super);
	var __proto=RewardLimitDlg.prototype;
	__proto.addStageHandler=function(){
		Align.singleViewAlign(this);
		this.x+=this.width/2;
		this.y+=this.height/2;
		Tween.from(this,{scaleX:0,scaleY:0},500,Ease.backOut);
	}

	__proto.init=function(){
		this.lab_title.text=LanguageMgr.Ins.GetLan("9007356");
		this.lab_dec.text=LanguageMgr.Ins.GetLan("9007357");
		this.btnYes.label=LanguageMgr.Ins.GetLan("9007358");
		this.btnClose.clickHandler=new Handler(this,this.onClose);
		this.btnYes.clickHandler=new Handler(this,this.onYes);
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("RewardLimit");
	}

	__proto.onYes=function(){
		this.onClose();
	}

	// UIMgr.ins.openView(ViewType.MatchingView);
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.btnClose.clickHandler){
			this.btnClose.clickHandler.recover();
			this.btnClose.clickHandler=null;
		}
		if(this.btnYes.clickHandler){
			this.btnYes.clickHandler.recover();
			this.btnYes.clickHandler=null;
		}
		this.off("display",this,this.addStageHandler);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return RewardLimitDlg;
})(RewardLimitDlgUI)


/**
*成就和任务 主界面
*/
//class modules.quest.QuestMainView extends ui.quest.QuestMainViewUI
var QuestMainView=(function(_super){
	function QuestMainView(){
		this._index=0;
		QuestMainView.__super.call(this);
		this.index=0;
		this.tab_rw.glText.text=this.tab_rw.grText.text=LanguageMgr.Ins.GetLan("14300166");
		this.tab_cj.glText.text=this.tab_cj.grText.text=LanguageMgr.Ins.GetLan("14300167");
		this.bindEvents();
	}

	__class(QuestMainView,'modules.quest.QuestMainView',_super);
	var __proto=QuestMainView.prototype;
	__proto._render=function(){
		switch (this._index){
			case 0:
				this.view_rw.visible=this.tab_cj.gr.visible=this.tab_rw.gl.visible=true;
				this.view_cj.visible=this.tab_cj.gl.visible=this.tab_rw.gr.visible=false;
				break ;
			case 1:
				this.view_rw.visible=this.tab_cj.gr.visible=this.tab_rw.gl.visible=false;
				this.view_cj.visible=this.tab_cj.gl.visible=this.tab_rw.gr.visible=true;
				break ;
			}
	}

	__proto.bindEvents=function(){
		this.tab_rw.on("click",this,this.setIndex,[0])
		this.tab_cj.on("click",this,this.setIndex,[1])
		this.topBar.btnBackCallBack=Handler.create(this,this.closeView);
		this.on("click",this,this.closeTipView)
		EventMgr.ins.on("recv_QuestMsgNum",this,this.addQuestMsg)
		EventMgr.ins.on("close_getGoodsView",this,this.close_getGoodsView);
		EventMgr.ins.on("quest_item_update",this,this.updateItem);
		EventMgr.ins.on("quest_list_update",this,this.updateList);
		this.addQuestMsg()
	}

	__proto.updateItem=function(type){
		switch(type){
			case 1:
				this.view_cj._list.dataSource=QuestData.instance.achievementDisplayData;
				break ;
			case 2:
				this.view_rw._list.dataSource=QuestData.instance.taskDisplayData;
				break ;
			case 3:
				this.view_rw.initDay()
				break ;
			case 4:
				this.view_rw.initWeek()
				break ;
			}
	}

	__proto.updateList=function(){
		this.view_cj._list.dataSource=QuestData.instance.achievementDisplayData;
		this.view_rw._list.dataSource=QuestData.instance.taskDisplayData;
		this.view_rw.initDay();
		this.view_rw.initWeek();
	}

	__proto.close_getGoodsView=function(){
		Laya.timer.frameOnce(1,this,function(){
			if(!UIMgr.ins.getView("ShowGetGoodsView")&& PlayerInfoMgr.ins.IsLevelUp){
				PlayerInfoMgr.ins.IsLevelUp=false;
				UIMgr.ins.openView("LevelUp");
			}
		})
	}

	__proto.addQuestMsg=function(){
		this.tabXiaoHongDianDisplay();
		this.tab_cj.quest_msg_text.text=QuestData.instance.availableBtnLength[0]+'';
		this.tab_rw.quest_msg_text.text=QuestData.instance.availableBtnLength[1]+'';
	}

	__proto.closeTipView=function(){
		this.view_rw._25.libao_desc_x.visible=false
		this.view_rw._75.libao_desc_x.visible=false
		this.view_rw._50.libao_desc_x.visible=false
		this.view_rw._100.libao_desc_x.visible=false
		this.view_rw.week_left.libao_desc_x.visible=false
		this.view_rw.week_right.libao_desc_x.visible=false
	}

	__proto.setIndex=function(i){
		this.index=i
		this.tabXiaoHongDianDisplay()
		SoundMgr.instance.playBtttonSound();
	}

	__proto.tabXiaoHongDianDisplay=function(){
		this.tab_cj.xiao_hong_dian.visible=QuestData.instance.availableBtnLength[0] !=0;
		this.tab_rw.xiao_hong_dian.visible=QuestData.instance.availableBtnLength[1] !=0;
	}

	__proto.closeView=function(){
		EventMgr.ins.event("close_QuestMainView",1);
		UIMgr.ins.closeView("Quest")
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		laya.ui.Window.prototype.destroy.call(this,destroyChild)
		this.tab_cj.off("click",this,this.setIndex)
		this.tab_rw.off("click",this,this.setIndex)
		this.off("click",this,this.closeTipView)
		EventMgr.ins.off("recv_QuestMsgNum",this,this.addQuestMsg)
		EventMgr.ins.off("close_getGoodsView",this,this.close_getGoodsView)
		EventMgr.ins.off("quest_item_update",this,this.updateItem);
		EventMgr.ins.off("quest_list_update",this,this.updateList);
	}

	__getset(0,__proto,'index',null,function(val){
		this._index=val
		this._render()
	});

	return QuestMainView;
})(QuestMainViewUI)


//class modules.quest.view.QuestExtraRewardView extends ui.quest.view.QuestExtraRewardViewUI
var QuestExtraRewardView=(function(_super){
	function QuestExtraRewardView(){
		this.isBtnClicked=false
		QuestExtraRewardView.__super.call(this);
		var config=ConfigModel.getConfigData(1060).ConfigValue;
		var data=config.split('|')
		var item=ItemModel.getItemConfigData(data[0]);
		this.icon.skin='assets/textrue/itemicon/'+item.Icon+'.png'
		this.num.text=data[1]
		this.btn.on("click",this,this.onShareEventClick)
		Laya.stage.on("click",this,this.onCloseHandler)
	}

	__class(QuestExtraRewardView,'modules.quest.view.QuestExtraRewardView',_super);
	var __proto=QuestExtraRewardView.prototype;
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.btn.off("click",this,this.onShareEventClick);
		Laya.stage.off("click",this,this.onCloseHandler);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	__proto.onCloseHandler=function(){
		if(!this.isBtnClicked){
			UIMgr.ins.closeView("QuestExtraRewardView")
		}
		this.isBtnClicked=false
	}

	__proto.onShareEventClick=function(){
		this.isBtnClicked=true;
		EventMgr.ins.event("SHARE",[ShareConst.ACTIVE_FULL]);
		UIMgr.ins.closeView("QuestExtraRewardView")
	}

	return QuestExtraRewardView;
})(QuestExtraRewardViewUI)


//class modules.ranking.view.RankingView extends ui.ranking.view.RankingViewUI
var RankingView=(function(_super){
	function RankingView(){
		this.lastItem=null;
		this.trigger=null;
		RankingView.__super.call(this);
		this.addEvent();
		this.initView();
		if(!RankingMgr.ins.isFristSendAll){
			RankingMgr.ins.sendSeverRankInfo("1");
			RankingMgr.ins.sendSeverRankInfo("4");
			RankingMgr.ins.isFristSendAll=true;
		}
	}

	__class(RankingView,'modules.ranking.view.RankingView',_super);
	var __proto=RankingView.prototype;
	__proto.initView=function(){
		this.list.scrollBar.visible=false;
		this.mTab.labels=LanguageMgr.Ins.GetLan("9004127");
		this.tipView._desc.text=LanguageMgr.Ins.GetLan("9004128");
		this.tipView.txt.text=LanguageMgr.Ins.GetLan("9004135");
		this.tipView._seasontime.width=this.tipView.txt.width+40;
		this.onTabSelectHandler(this.mTab.selectedIndex);
	}

	__proto.addEvent=function(){
		this.topbar.btnBackCallBack=Handler.create(this,this.onClickHandler,null,false);
		this.list.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
		this.list.mouseHandler=Handler.create(this,this.onSelectHandler,null,false);
		this.mTab.selectHandler=Handler.create(this,this.onTabSelectHandler,null,false);
		EventMgr.ins.on("update_playerAll_ranking",this,this.onTabSelectHandler,[this.mTab.selectedIndex]);
		this.on("click",this,this.onClickStage);
	}

	__proto.removeEvent=function(){
		if(this.topbar.btnBackCallBack){
			this.topbar.btnBackCallBack.recover();
			this.topbar.btnBackCallBack=null;
		}
		EventMgr.ins.off("update_playerAll_ranking",this,this.onTabSelectHandler);
		this.off("click",this,this.onClickStage);
	}

	__proto.onClickStage=function(e){
		if(e.target.name==""){
			if(this.lastItem){
				this.lastItem.ranking_item_ht_bg.visible=false;
				this.lastItem=null;
			}
			this.playerWidget.hide();
		}
	}

	__proto.selectIndex=function(idx){
		Laya.timer.once(200,this,this.delaySelect,[idx]);
	}

	__proto.delaySelect=function(idx){
		this.mTab.selectedIndex=idx;
	}

	__proto.onTabSelectHandler=function(index){
		SoundMgr.instance.playBtttonSound();
		this.list.array=[];
		switch(index){
			case 0:
				this.list.array=RankingMgr.ins.model.allList;
				break ;
			case 1:
				this.list.array=RankingMgr.ins.model.greenAll;
				break ;
			}
		this.list.refresh();
		var rank=RankingMgr.ins.model.getMyRank(index);
		var info=info?info:RankingMgr.ins.model.myInfo;
		info.type=index==0?1:4;
		this.bottomItem.setData(rank,info);
		this.bottomItem.ranking_item_bot_bg.visible=true;
		this.bottomItem.ranking_item_bt_bg.visible=false;
		this.bottomItem.ranking_item_ht_bg.visible=false;
	}

	__proto.onSelectHandler=function(e,index){
		var data;
		switch (e.type){
			case "click":
				if(this.lastItem){
					this.lastItem.ranking_item_ht_bg.visible=false;
					this.lastItem=null;
					this.playerWidget.hide();
				}
				e.stopPropagation()
				this.lastItem=this.list.getCell(index);
				this.lastItem.ranking_item_ht_bg.visible=true;
				this.playerWidget.scaleX=this.playerWidget.scaleY=1;
				this.playerWidget.show()
				data=this.lastItem.data;
				this.playerWidget.setName(data.nikeName)
				this.playerWidget.setTrophy(data.trophy+"")
				this.playerWidget.setGuildName(data.guildName)
				var btnList=[
				{name:LanguageMgr.Ins.GetLan("9004136"),handler:Handler.create(this,function(playerId){
						SocketManager.Instance.out.requestPlayerInfo(playerId);
						Laya.timer.frameOnce(1,this,function(){
							UIMgr.ins.closeView("Ranking",true);
						})
				},[data.playerId])}]
				if(data.guildId !="0" && data.guildName){
					btnList.push({
						name:LanguageMgr.Ins.GetLan("9004138"),handler:Handler.create(this,function(guildId){
							RankingMgr.ins.btnTribeClicked=true;
							UIMgr.ins.closeView("Ranking",true);
							UIMgr.ins.openView("GuildInfoPage",Handler.create(this,function(view){
								view.init(guildId);
							}));
						},[data.guildId])
					})
				}
				if(!FriendsMgr.ins.getIsMyFriend(data.playerId)){
					btnList.push({
						name:LanguageMgr.Ins.GetLan("9070093"),handler:Handler.create(this,function(playerId,nikeName){
							FriendsMgr.ins.sendAddFriend(playerId,nikeName);
						},[data.playerId,data.nikeName])
					})
				}
				this.playerWidget.setBtnList(btnList);
				this.playerWidget.x=e.stageX-this.x
				this.playerWidget.y=e.stageY-this.y
				break ;
			case "mouseover":
				if(this.lastItem){
					this.lastItem.ranking_item_ht_bg.visible=false;
					this.lastItem=null;
					this.playerWidget.hide();
				}
				break ;
			}
	}

	__proto.onRenderHandler=function(item,index){
		item.setData(index,this.list.array[index]);
	}

	__proto.onClickHandler=function(){
		UIMgr.ins.closeView("Ranking",true);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.lastItem){
			this.lastItem=null;
		}
		this.removeEvent();
		laya.ui.Window.prototype.destroy.call(this,destroyChild)
	}

	return RankingView;
})(RankingViewUI)


//class modules.room.view.CommonHelpView extends ui.room.CommonHelpViewUI
var CommonHelpView=(function(_super){
	function CommonHelpView(){
		CommonHelpView.__super.call(this);
		this.mpListPannel.vScrollBar.visible=false;
	}

	__class(CommonHelpView,'modules.room.view.CommonHelpView',_super);
	var __proto=CommonHelpView.prototype;
	__proto.initView=function(title,content){
		this.mpTextTitle.text=title;
		this.mpTextDesc.text=content;
	}

	return CommonHelpView;
})(CommonHelpViewUI)


//class modules.room.view.FriendSkillTips extends ui.room.FriendSkillTipsUI
var FriendSkillTips=(function(_super){
	function FriendSkillTips(){
		FriendSkillTips.__super.call(this);
	}

	__class(FriendSkillTips,'modules.room.view.FriendSkillTips',_super);
	var __proto=FriendSkillTips.prototype;
	__proto.initView=function(skill,type,isActivate){
		(isActivate===void 0)&& (isActivate=true);
		this.skillName.text=type==1?LanguageMgr.Ins.GetLan("9002310"):LanguageMgr.Ins.GetLan("9001046");
		this.skillState.text=isActivate ? "" :LanguageMgr.Ins.GetLan("9002309");
		this.skillState.x=this.skillName.x+this.skillName.textWidth+6;
		var descv=SkillModel.getSkillPerformanceBySkillId(skill.Display).Description.split(",");
		this.skillType.text=LanguageMgr.Ins.GetLan(type==1?"9002078":"9002079");
		this.skillDesc.text=LanguageMgr.Ins.GetLan(type==1?descv[0]:descv[1]);
		this.lineImg.y=this.skillDesc.y+this.skillDesc["measureHeight"]+4;
		this.nextLevel.text=LanguageMgr.Ins.GetLan("9002080");
		this.nextLevel.y=this.lineImg.y+this.lineImg.height+4;
		this.nextLevelSkillDesc.y=this.nextLevel.y+this.nextLevel.height+4;
		var nextSkill=SkillModel.getSkillConfigData(skill.NextSkill);
		if(nextSkill){
			descv=SkillModel.getSkillPerformanceBySkillId(nextSkill.Display).Description.split(",");
			this.nextLevelSkillDesc.text=LanguageMgr.Ins.GetLan(type==1?descv[0]:descv[1]);
			}else{
			this.nextLevelSkillDesc.text=LanguageMgr.Ins.GetLan("10001187");
		}
		this.skillTipBg.height=this.nextLevelSkillDesc.y+this.nextLevelSkillDesc["measureHeight"]+10;
		this.alignView(false,"center","center",type==1 ? 90 :120,120);
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this,90,120,$hAlign,$vAlign,$isPopUp,0,$blurDisplayName,$isShowMash);
	}

	return FriendSkillTips;
})(FriendSkillTipsUI)


//class modules.room.view.InviteDialog extends ui.room.InviteDialogUI
var InviteDialog=(function(_super){
	function InviteDialog(){
		//30秒
		this.remainderTime=0;
		this.waitListData=null;
		this.curBattleInviteInfoMsg=null;
		InviteDialog.__super.call(this);
		this.initUI();
		this.addEvent();
	}

	__class(InviteDialog,'modules.room.view.InviteDialog',_super);
	var __proto=InviteDialog.prototype;
	__proto.closeHandler=function(e){}
	__proto.initUI=function(){
		this.reject.label=LanguageMgr.Ins.GetLan("14300092");
		this.agree.label=LanguageMgr.Ins.GetLan("14300093");
		this.desc.text="";
		this.waitList.selectHandler=Handler.create(this,this.selectWaitItemHandler,null,false);
	}

	__proto.addEvent=function(){
		this.agree.on("click",this,this.onAgree);
		this.reject.on("click",this,this.onReject);
		this.closeBtn.on("click",this,this.closeInviteDialog);
	}

	__proto.selectWaitItemHandler=function(index){
		this.curBattleInviteInfoMsg=this.waitListData[index];
		if(this.curBattleInviteInfoMsg){
			this.headImg.skin=this.curBattleInviteInfoMsg.headUrl;
			this.nickname.text=this.curBattleInviteInfoMsg.nickName;
			if (this.curBattleInviteInfoMsg.battleType==11){
				var campaignVO=CampaignModel.getConfigData(this.curBattleInviteInfoMsg.campaignId);
				if (campaignVO){
					this.desc.text=LanguageMgr.Ins.GetLan(14300172,LanguageMgr.Ins.GetLan(campaignVO.Name)+"-"+LanguageMgr.Ins.GetLan(CampaignConst.DifficultLan[campaignVO.Difficult]));
					}else {
					this.desc.text=LanguageMgr.Ins.GetLan(14300143);
				}
				}else {
				this.desc.text=LanguageMgr.Ins.GetLan(14300104);
			}
			this.remainderTime=InviteDialog.CDTIME-Math.round((Browser.now()-this.curBattleInviteInfoMsg["inviteTime"])/1000);
			this.coolTime();
			Laya.timer.loop(1000,this,this.coolTime);
		}
	}

	__proto.onReject=function(){
		var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
		msg.opType=6;
		msg.param2=this.curBattleInviteInfoMsg.roomId;
		msg.param3=PlayerInfo.instance.nickName;
		msg.param4=this.curBattleInviteInfoMsg.matchServerId;
		SocketManager.Instance.sendSocketData(0x2745,msg);
		var idx=this.waitListData.indexOf(this.curBattleInviteInfoMsg);
		this.waitListData.splice(idx,1);
		if(this.waitListData.length > 0){
			this.waitList.refresh();
			this.updateListIndex(0);
		}
		else{
			this.closeInviteDialog();
		}
	}

	__proto.onAgree=function(){
		if (this.curBattleInviteInfoMsg.battleType==11){
			if (CampaignMgr.ins.checkCampaignEnable(this.curBattleInviteInfoMsg.campaignId)){
				RoomMgr.ins.enterRoom(this.curBattleInviteInfoMsg.roomId,this.curBattleInviteInfoMsg.matchServerId);
				}else {
				TipsManager.Instance().showLanTips(14300174);
				this.onReject();
				return;
			}
		}
		else{
			RoomMgr.ins.enterRoom(this.curBattleInviteInfoMsg.roomId,this.curBattleInviteInfoMsg.matchServerId);
		}
		this.closeInviteDialog();
	}

	/**
	*
	*@param arr [BattleInviteInfoMsg]
	*
	*/
	__proto.init=function(arr){
		this.waitListData=arr;
		this.waitList.dataSource=this.waitListData;
		this.updateListIndex(this.waitListData.length-1);
		this.checkInviteDatas(true);
	}

	__proto.updateListIndex=function(newIndex){
		if(this.waitList.selectedIndex==newIndex){
			this.selectWaitItemHandler(newIndex);
		}
		else{
			this.waitList.selectedIndex=newIndex;
		}
	}

	__proto.checkInviteDatas=function(isFrist){
		(isFrist===void 0)&& (isFrist=false);
		var temp;
		var tempTime=0;
		for (var i=this.waitListData.length-1;i >=0;i--){
			temp=this.waitListData[i];
			tempTime=InviteDialog.CDTIME-Math.round((Browser.now()-temp["inviteTime"])/1000);
			if(tempTime <=0){
				this.waitListData.splice(i,1);
				if(this.waitListData.length > 0){
					this.waitList.refresh();
					this.updateListIndex(0);
				}
				else{
					this.closeInviteDialog();
				}
			}
			else{
				if(isFrist)Laya.timer.once(tempTime*1000,this,this.checkInviteDatas,null,false);
			}
		}
	}

	__proto.coolTime=function(){
		this.remainderTime=this.remainderTime-1;
		this.time.text=LanguageMgr.Ins.GetLan("14300090",this.remainderTime);
	}

	__proto.closeInviteDialog=function(){
		UIMgr.ins.closeView("InviteDialog",true);
		Laya.timer.clear(this,this.coolTime);
		RoomMgr.ins.inviteInfos.length=0;
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.agree.off("click",this,this.onAgree);
		this.reject.off("click",this,this.onReject);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	InviteDialog.filterTimeout=function(arr){
		var temp;
		var tempTime=0;
		for (var i=arr.length-1;i >=0;i--){
			temp=arr[i];
			tempTime=InviteDialog.CDTIME-Math.round((Browser.now()-temp["inviteTime"])/1000);
			if(tempTime <=0){
				arr.splice(i,1);
			}
		}
	}

	InviteDialog.CDTIME=30;
	return InviteDialog;
})(InviteDialogUI)


/**
*赛季页面
**/
//class modules.season.SeasonPage extends ui.pvp.season.SeasonPageUI
var SeasonPage=(function(_super){
	function SeasonPage(){
		this._isOpen=false;
		this._data=[];
		SeasonPage.__super.call(this);
		this.txtEnd.text=LanguageMgr.Ins.GetLan("9010015");
		this.adddEvent();
		this.list.array=[];
		SocketManager.Instance.out.reqSeasonInfo();
		SocketManager.Instance.out.reqSeasonRank();
	}

	__class(SeasonPage,'modules.season.SeasonPage',_super);
	var __proto=SeasonPage.prototype;
	__proto.setData=function(){
		this._data=PVPModel.getSeasonList(PvpMgr.ins.seasonNum);
		this.list.array=this._data;
	}

	__proto.onSeasonRank=function(){
		this.btnRank.visible=PvpMgr.ins.rankArr.length>0;
	}

	/**显示赛季信息 */
	__proto.onSeasonInfo=function(){
		this.setData();
		var stratTime=TimeManager.Instance.checkTimeEndNum(PvpMgr.ins.startTime);
		var endTime=TimeManager.Instance.checkTimeEndNum(PvpMgr.ins.endTime);
		if(stratTime > 0){
			this.isOpen=false;
			}else if(endTime >0){
			this.isOpen=true;
			}else{
			this.isOpen=false;
		}
		this.numClip.value=PvpMgr.ins.seasonNum.toString();
		if(LanguageMgr.Ins.country=="English"){
			this.imgS.x=PvpMgr.ins.seasonNum>9? 407-30 :425;
			this.numClip.x=PvpMgr.ins.seasonNum>9? 462-30 :483;
			}else{
			this.imgS.x=PvpMgr.ins.seasonNum>9? 407 :425;
			this.numClip.x=PvpMgr.ins.seasonNum>9? 462 :483;
		}
		this.labDes.text=LanguageMgr.Ins.GetLan("9070013");
	}

	/**赛季倒计时 */
	__proto.createTimer=function(time){
		Laya.timer.clear(this,this.onTimeHandler);
		Laya.timer.loop(1000,this,this.onTimeHandler,[time]);
	}

	__proto.onTimeHandler=function(time){
		var endTime=TimeManager.Instance.checkTimeEndNum(time);
		var sec=Math.floor(endTime/1000);
		if(sec>0){
			this.count_day.visible=this.count_hour.visible=true;
			var day=Math.floor(sec / 86400);
			var hour=Math.floor((sec-day*86400)/3600);
			var min=Math.floor((sec-day*86400-hour*3600)/60);
			this.count_day.value=day.toString();
			this.count_hour.value=hour.toString();
			if(!day && !hour){
				this.count_day.visible=false;
				this.imgDay.visible=false;
				this.imgHour.visible=false;
				this.imgMin.visible=true;
				this.count_hour.value=min.toString();
				}else{
				this.imgMin.visible=false;
			}
			}else{
			Laya.timer.clear(this,this.onTimeHandler);
			this.isOpen=false;
		}
	}

	__proto.adddEvent=function(){
		EventMgr.ins.on("recv_season_info",this,this.onSeasonInfo);
		EventMgr.ins.on("recv_season_rank",this,this.onSeasonRank);
		this.btnClose.on("click",this,this.onClose);
		this.btnRank.clickHandler=Handler.create(this,this.onRank,null,false);
		this.list.renderHandler=Handler.create(this,this.onRenderList,null,false);
		this.list.scrollBar.visible=false;
		this.list.selectEnable=true;
		EventMgr.ins.on("Close_All_Tips",this,this.onStageClick);
	}

	__proto.onStageClick=function(){
		var view=UIMgr.ins.getView("TreasureBoxDetailWindow");
		if(view){
			UIMgr.ins.closeView("TreasureBoxDetailWindow");
		}
	}

	// }
	__proto.onRenderList=function(item,index){
		if(index < this.list.length){
			item.setData(this.list.array[index]);
		}
	}

	__proto.onRank=function(){
		UIMgr.ins.openView("SeasonRank");
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("SeasonPage");
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.btnClose.off("click",this,this.onClose);
		if(this.btnRank.clickHandler){
			this.btnRank.clickHandler.recover();
			this.btnRank.clickHandler=null;
		}
		if(this.list.renderHandler){
			this.list.renderHandler.recover();
			this.list.renderHandler=null;
		}
		EventMgr.ins.off("Close_All_Tips",this,this.onStageClick);
		EventMgr.ins.off("recv_season_info",this,this.onSeasonInfo);
		EventMgr.ins.off("recv_season_rank",this,this.onSeasonRank);
		Laya.timer.clear(this,this.onTimeHandler);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
		this._data=null;
	}

	/**赛季是否开启 */
	__getset(0,__proto,'isOpen',null,function(value){
		this._isOpen=value;
		this.unopen.visible=!this._isOpen;
		this.openBox.visible=!this.unopen.visible;
		if(this._isOpen){
			this.createTimer(PvpMgr.ins.endTime);
			this.count_day.visible=this.count_hour.visible=false;
		}
	});

	return SeasonPage;
})(SeasonPageUI)


/**
*赛季名人堂页面
**/
//class modules.season.SeasonRankPage extends ui.pvp.season.SeasonRankPageUI
var SeasonRankPage=(function(_super){
	function SeasonRankPage(){
		this._len=0;
		this._rankArr=null;
		//当前赛季
		this._season=1;
		SeasonRankPage.__super.call(this);
		this.adddEvent();
		this.setData();
	}

	__class(SeasonRankPage,'modules.season.SeasonRankPage',_super);
	var __proto=SeasonRankPage.prototype;
	__proto.setData=function(){
		this._rankArr=PvpMgr.ins.rankArr;
		this._season=PvpMgr.ins.seasonNum;
		if(this._rankArr){
			this._len=this._rankArr.length;
			if(this._len <2){
				this.btnLeft.visible=this.btnRight.visible=false;
			}
			if(this._len >0){
				this.update();
			}
		}
	}

	__proto.adddEvent=function(){
		this.btnClose.clickHandler=Handler.create(this,this.onClose,null,false);
		this.btnLeft.clickHandler=Handler.create(this,this.onLeft,null,false);
		this.btnRight.clickHandler=Handler.create(this,this.onRight,null,false);
		this.list.renderHandler=Handler.create(this,this.onRenderList,null,false);
		this.list.selectHandler=Handler.create(this,this.onSelectList,null,false);
		this.list.selectEnable=true;
	}

	/**降序排序 */
	__proto.sortHandler=function(a,b){
		if(a.rank > b.rank){
			return 1;
		}
		else if(a.rank < b.rank){
			return-1;
		}
		return 0;
	}

	__proto.onSelectList=function(index){
		if(index==-1)return;
		var vo=this.list.array [index];
		SocketManager.Instance.out.requestPlayerInfo(vo.playerId.toString());
		this.list.selectedIndex=-1;
	}

	__proto.onRenderList=function(item,index){
		if(index < this.list.length){
			item.setData(this.list.array[index],index);
		}
	}

	__proto.update=function(){
		if(this._season >=this._len){
			this._season=this._len;
			this.btnRight.visible=false;
		};
		var msg;
		if(this._rankArr[this._season-1]){
			msg=this._rankArr [this._season-1];
			}else{
			msg=this._rankArr [0];
		}
		if(msg){
			this.numClip.value=msg.seasonNum.toString();
			var arr=msg.personalInfo;
			arr.sort(this.sortHandler);
			this.list.array=arr.length>3?arr.slice(0,3):arr;
			arr=null;
		}
	}

	__proto.onRight=function(){
		this._season++;
		if(this._season >=this._len){
			this._season=this._len;
			this.btnRight.visible=false;
			if(this._len >1)
				this.btnLeft.visible=true;
			}else{
			this.btnLeft.visible=true;
		}
		this.update();
	}

	__proto.onLeft=function(){
		this._season--;
		if(this._season <=1){
			this._season=1;
			this.btnLeft.visible=false;
			if(this._len >1)
				this.btnRight.visible=true;
			}else{
			this.btnRight.visible=true;
		}
		this.update();
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("SeasonRank");
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.btnClose.clickHandler){
			this.btnClose.clickHandler.recover();
			this.btnClose.clickHandler=null;
		}
		if(this.btnLeft.clickHandler){
			this.btnLeft.clickHandler.recover();
			this.btnLeft.clickHandler=null;
		}
		if(this.btnRight.clickHandler){
			this.btnRight.clickHandler.recover();
			this.btnRight.clickHandler=null;
		}
		if(this.list.renderHandler){
			this.list.renderHandler.recover();
			this.list.renderHandler=null;
		}
		if(this.list.selectHandler){
			this.list.selectHandler.recover();
			this.list.selectHandler=null;
		}
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return SeasonRankPage;
})(SeasonRankPageUI)


//class modules.setting.SettingWindow extends ui.hall.SettingWindowUI
var SettingWindow=(function(_super){
	function SettingWindow(){
		this._isMusicMuted=false;
		this._isSoundMuted=false;
		this._isOpenFriendReq=false;
		this._isRecvBarrage=false;
		this._isOpenWorldChannel=false;
		this._isOpenSysChannel=false;
		this._isOpenGuildChannel=false;
		this._isOpenRoomChannel=false;
		SettingWindow.__super.call(this);}
	__class(SettingWindow,'modules.setting.SettingWindow',_super);
	var __proto=SettingWindow.prototype;
	__proto.init=function(){
		var self=this;
		self.languageText.text=LanguageMgr.Ins.GetLan("9002327",UrlParam.maxVersion);
		self.musicTitleText.text=LanguageMgr.Ins.GetLan("9002328");
		self.soundTitleText.text=LanguageMgr.Ins.GetLan("9002329");
		self.InfoText.text=LanguageMgr.Ins.GetLan("9070084");
		self.worldChannelText.text=LanguageMgr.Ins.GetLan("9070079");
		self.guildChannelText.text=LanguageMgr.Ins.GetLan("9070080");
		self.sysChannelText.text=LanguageMgr.Ins.GetLan("9070081");
		self.roomChannelText.text=LanguageMgr.Ins.GetLan("9070082");
		self.reqFriendTitleText.text=LanguageMgr.Ins.GetLan("14300360");
		self.recvBarrageTitleText.text=LanguageMgr.Ins.GetLan("14300361");
		self.lanBtnText.text=LanguageMgr.Ins.countryAry[0];
		self.lanList.visible=false;
		self.lanList.array=LanguageMgr.Ins.countryAry;
		self.lanList.repeatY=LanguageMgr.Ins.countryAry.length;
		self.onSelectHandler(true,LanguageMgr.Ins.countryIndex);
		self._isOpenFriendReq=PlayerInfo.instance.friendState==0? true :false;
		this.changeFriendReq();
		self._isMusicMuted=PlayerInfo.instance.isOn(7);
		self.changeMusicOpen();
		self._isSoundMuted=PlayerInfo.instance.isOn(8);
		self.changeSoundOpen();
		self._isRecvBarrage=PlayerInfo.instance.isOn(13);
		self.changeRecvBarrage();
		var name='world';
		self._isOpenWorldChannel=ChatMgr.ins.getChannelFilter(name);
		self.changeWorldChannel();
		name='system';
		self._isOpenSysChannel=ChatMgr.ins.getChannelFilter(name);
		self.changeSysChannel();
		name='guild';
		self._isOpenGuildChannel=ChatMgr.ins.getChannelFilter(name);
		self.changeGuildChannel();
		name='room';
		self._isOpenRoomChannel=ChatMgr.ins.getChannelFilter(name);
		self.changeRoomChannel();
		self.addEvent();
	}

	__proto.addEvent=function(){
		var self=this;
		self.btnClose.clickHandler=Handler.create(self,self.onClose);
		self.musicOpenBtn.clickHandler=Handler.create(self,self.onMusicHandler,[true],false);
		self.musicCloseBtn.clickHandler=Handler.create(self,self.onMusicHandler,[false],false);
		self.soundOpenBtn.clickHandler=Handler.create(self,self.onSoundHandler,[true],false);
		self.soundCloseBtn.clickHandler=Handler.create(self,self.onSoundHandler,[false],false);
		self.reqFriendOpenBtn.clickHandler=Handler.create(self,self.onFriendHandler,[false],false);
		self.reqFriendCloseBtn.clickHandler=Handler.create(self,self.onFriendHandler,[true],false);
		self.recvBarrageOpenBtn.clickHandler=Handler.create(self,self.onBarrageHandler,[true],false);
		self.recvBarrageCloseBtn.clickHandler=Handler.create(self,self.onBarrageHandler,[false],false);
		self.worldChannelOpenBtn.clickHandler=Handler.create(self,self.onWorldChannelHandler,[false],false);
		self.worldChannelCloseBtn.clickHandler=Handler.create(self,self.onWorldChannelHandler,[true],false);
		self.sysChannelOpenBtn.clickHandler=Handler.create(self,self.onSysChannelHandler,[false],false);
		self.sysChannelCloseBtn.clickHandler=Handler.create(self,self.onSysChannelHandler,[true],false);
		self.guildChannelOpenBtn.clickHandler=Handler.create(self,self.onGuildChannelHandler,[false],false);
		self.guildChannelCloseBtn.clickHandler=Handler.create(self,self.onGuildChannelHandler,[true],false);
		self.roomChannelOpenBtn.clickHandler=Handler.create(self,self.onRoomChannelHandler,[false],false);
		self.roomChannelCloseBtn.clickHandler=Handler.create(self,self.onRoomChannelHandler,[true],false);
		self.lanBtn.on("click",self,self.onClickLanBtn);
		self.lanList.renderHandler=Handler.create(self,self.onRenderLanList,null,false);
		self.lanList.selectHandler=Handler.create(self,self.onSelectHandler,[false],false);
		self.lanList.selectEnable=true;
		self.on("click",self,self.onClickStage);
		if(LayaEX.isWXAPP){
			this.lanText.visible=false;
			this.lanBtn.visible=false;
			this.txt1.text="腾讯游戏用户协议";
			this.txt2.text="腾讯游戏隐私政策";
			this.txt1.visible=true;
			this.txt2.visible=true;
			this.txt1.on("click",this,this.onTxt1);
			this.txt2.on("click",this,this.onTxt2);
		}
	}

	__proto.onTxt1=function(){
		H5SDK.openTencentGameContract();
	}

	__proto.onTxt2=function(){
		H5SDK.openTencentPrivacyContract();
	}

	__proto.removeEvent=function(){
		var self=this;
		self.lanBtn.off("click",self,self.onClickLanBtn);
		self.off("click",self,self.onClickStage);
	}

	__proto.onClickStage=function(e){
		if(e.target.name==""){
			this.lanList.visible=false;
		}
	}

	__proto.onClickLanBtn=function(e){
		var self=this;
		self.lanList.visible=!self.lanList.visible;
	}

	__proto.onRenderLanList=function($item,$index){
		$item.label="";
		($item.getChildByName("btnText")).text=this.lanList.array[$index];
	}

	/**选择语言 **/
	__proto.onSelectHandler=function(isInit,index){
		var self=this;
		if(index==-1)return;
		if (!isInit){
			LanguageMgr.Ins.countryLast=LanguageMgr.Ins.country;
			LanguageMgr.Ins.country=LanguageMgr.Ins.countrySet[index];
		}
		self.lanBtnText.text=LanguageMgr.Ins.countryAry[index];
		self.lanText.text=LanguageMgr.Ins.GetLan("9007343");
		self.lanList.visible=false;
		if(!isInit && LanguageMgr.Ins.countryLast !=LanguageMgr.Ins.country){
			self.reload();
			EventMgr.ins.event("changeLanguage");
			SocketManager.Instance.out.sendUserSetting(false,index);
		}
	}

	/**
	*加载对应国家资源
	*/
	__proto.reload=function(){
		LoaderResMgr.loadLanguageRes(Handler.create(this,this.onResLoaded));
	}

	__proto.onResLoaded=function(){
		if(this._destroyed)return;
		this.updateView();
		this.lanList.visible=false;
		EventMgr.ins.event("UPDATE_ALL_IMAGE");
	}

	__proto.updateView=function(){
		var self=this;
		self.languageText.text=LanguageMgr.Ins.GetLan("9002327",UrlParam.maxVersion);
		self.musicTitleText.text=LanguageMgr.Ins.GetLan("9002328");
		self.soundTitleText.text=LanguageMgr.Ins.GetLan("9002329");
		self.InfoText.text=LanguageMgr.Ins.GetLan("9070084");
		self.worldChannelText.text=LanguageMgr.Ins.GetLan("9070079");
		self.guildChannelText.text=LanguageMgr.Ins.GetLan("9070080");
		self.sysChannelText.text=LanguageMgr.Ins.GetLan("9070081");
		self.roomChannelText.text=LanguageMgr.Ins.GetLan("9070082");
		self.reqFriendTitleText.text=LanguageMgr.Ins.GetLan("14300360");
		self.recvBarrageTitleText.text=LanguageMgr.Ins.GetLan("14300361");
	}

	/**修改声音 **/
	__proto.onMusicHandler=function($isMuted){
		this._isMusicMuted=$isMuted;
		this.changeMusicOpen();
	}

	/**修改音效 **/
	__proto.onSoundHandler=function($isMuted){
		this._isSoundMuted=$isMuted;
		this.changeSoundOpen();
	}

	__proto.onFriendHandler=function($isOpen){
		this._isOpenFriendReq=$isOpen;
		this.changeFriendReq();
	}

	__proto.onBarrageHandler=function($isOpen){
		this._isRecvBarrage=$isOpen;
		this.changeRecvBarrage();
	}

	__proto.onWorldChannelHandler=function($isOpen){
		this._isOpenWorldChannel=$isOpen;
		this.changeWorldChannel();
	}

	__proto.onSysChannelHandler=function($isOpen){
		this._isOpenSysChannel=$isOpen;
		this.changeSysChannel();
	}

	__proto.onGuildChannelHandler=function($isOpen){
		this._isOpenGuildChannel=$isOpen;
		this.changeGuildChannel();
	}

	__proto.onRoomChannelHandler=function($isOpen){
		this._isOpenRoomChannel=$isOpen;
		this.changeRoomChannel();
	}

	/**更新声音开启 **/
	__proto.changeMusicOpen=function(){
		var self=this;
		self.musicOpenBtn.visible=!self._isMusicMuted;
		self.musicCloseBtn.visible=self._isMusicMuted;
		SoundMgr.instance.musicMuted(self._isMusicMuted);
		SettingMgr.ins.sendUserSettingMusic(self._isMusicMuted);
	}

	/**更新声音开启 **/
	__proto.changeSoundOpen=function(){
		var self=this;
		self.soundOpenBtn.visible=!self._isSoundMuted;
		self.soundCloseBtn.visible=self._isSoundMuted;
		SettingMgr.ins.sendUserSettingSound(self._isSoundMuted);
		SoundMgr.instance.soundMuted(self._isSoundMuted);
	}

	__proto.changeFriendReq=function(){
		var self=this;
		var type=self._isOpenFriendReq ? 0 :2;
		self.reqFriendOpenBtn.visible=self._isOpenFriendReq;
		self.reqFriendCloseBtn.visible=!self._isOpenFriendReq;
		SettingMgr.ins.sendSetFriendState(type);
	}

	/**
	*接收弹幕开关按钮
	*/
	__proto.changeRecvBarrage=function(){
		var self=this;
		self.recvBarrageOpenBtn.visible=!self._isRecvBarrage;
		self.recvBarrageCloseBtn.visible=self._isRecvBarrage;
		SettingMgr.ins.sendUserSettingRecvBarrage(self._isRecvBarrage);
		if(!self._isRecvBarrage){
			BarrageMgr.ins.openBarrage();
		}
		else{
			BarrageMgr.ins.removeBarrage();
		}
	}

	__proto.changeWorldChannel=function(){
		var self=this;
		var name='world';
		self.worldChannelOpenBtn.visible=self._isOpenWorldChannel;
		self.worldChannelCloseBtn.visible=!self._isOpenWorldChannel;
		ChatMgr.ins.setChannelFilter(name,self._isOpenWorldChannel);
	}

	__proto.changeSysChannel=function(){
		var self=this;
		var name='system';
		self.sysChannelOpenBtn.visible=self._isOpenSysChannel;
		self.sysChannelCloseBtn.visible=!self._isOpenSysChannel;
		ChatMgr.ins.setChannelFilter(name,self._isOpenSysChannel);
	}

	__proto.changeGuildChannel=function(){
		var self=this;
		var name='guild';
		self.guildChannelOpenBtn.visible=self._isOpenGuildChannel;
		self.guildChannelCloseBtn.visible=!self._isOpenGuildChannel;
		ChatMgr.ins.setChannelFilter(name,self._isOpenGuildChannel);
	}

	__proto.changeRoomChannel=function(){
		var self=this;
		var name='room';
		self.roomChannelOpenBtn.visible=self._isOpenRoomChannel;
		self.roomChannelCloseBtn.visible=!self._isOpenRoomChannel;
		ChatMgr.ins.setChannelFilter(name,self._isOpenRoomChannel);
	}

	/**
	*好友验证开启/关闭
	*@param index
	*/
	__proto.onSetFriendState=function(index){
		var type=index==0 ? 0 :2;
		SettingMgr.ins.sendSetFriendState(type);
	}

	/**关闭界面 **/
	__proto.onClose=function(){
		UIMgr.ins.closeView("SettingWindow");
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this);
		this.init();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return SettingWindow;
})(SettingWindowUI)


//class modules.shareGift.view.ShareGiftView extends ui.shareGift.ShareGiftViewUI
var ShareGiftView=(function(_super){
	function ShareGiftView(){
		this.shareName=null;
		this.shareDes=null;
		this._time=NaN;
		ShareGiftView.__super.call(this);
		this.initView();
		this.addEvent();
		ShareGiftMgr.ins.sendGiftMsg(1,0,"");
	}

	__class(ShareGiftView,'modules.shareGift.view.ShareGiftView',_super);
	var __proto=ShareGiftView.prototype;
	__proto.initView=function(){
		this.labNextShare.text=LanguageMgr.Ins.GetLan("9070130");
		this.lab_des.text=LanguageMgr.Ins.GetLan("9070119");
		this.btn_share.disabled=false;
		this.lab_des.visible=true;
		this.boxTime.visible=false;
	}

	__proto.onRender=function(item,index){
		if(index < this.cardList.array.length){
			var shareGiftVO=ShareGiftModel.getShareGiftConfig(this.cardList.array[index]);
			if(ShareGiftMgr.ins.currentShareId==0&&index==0){
				ShareGiftMgr.ins.currentSkillId=SkillModel.getSkillConfigData(ItemModel.getItemConfigData(shareGiftVO.ItemId).Param1).SkillID;
				ShareGiftMgr.ins.currentShareId=shareGiftVO.ID;
			}
			item.setData(shareGiftVO);
		}
	}

	__proto.onTimeHandler=function(){
		var endTime=TimeManager.Instance.checkTimeEndNum(this._time);
		if(endTime>0){
			this.lab_time.text=TimeManager.Instance.getTimemilSecTxt(endTime);
		}
		else{
			this.btn_share.disabled=false;
			this.lab_des.visible=true;
			this.boxTime.visible=false;
			this.lab_time.text="00:00:00";
			Laya.timer.clear(this,this.onTimeHandler);
		}
	}

	__proto.addEvent=function(){
		this.btn_close.on("click",this,this.onClickClose);
		this.cardList.renderHandler=Handler.create(this,this.onRender,null,false);
		this.btn_share.clickHandler=Handler.create(this,this.onShareHandler,null,false);
		this.btn_help.clickHandler=Handler.create(this,this.onShowHelp,null,false);
		EventMgr.ins.on("UPDATE_SHAREGIFT_INFO",this,this.onUpdateInfo);
	}

	__proto.onShowHelp=function(){
		UIMgr.ins.openView("HelpDescriptionView",Handler.create(this,function(view){
			view.initHelp(5);
		}));
	}

	__proto.onUpdateInfo=function(){
		this._time=ShareGiftMgr.ins.showTimes;
		this.cardList.array=ShareGiftMgr.ins.showSkillList;
		this.cardList.refresh();
		var endTime=TimeManager.Instance.checkTimeEndNum(this._time);
		if(endTime>0){
			this.btn_share.disabled=true;
			this.lab_des.visible=false;
			this.boxTime.visible=true;
			this.onTimeHandler();
			Laya.timer.clear(this,this.onTimeHandler);
			Laya.timer.loop(1000,this,this.onTimeHandler);
		}
		else{
			this.btn_share.disabled=false;
			this.lab_des.visible=true;
			this.boxTime.visible=false;
		}
	}

	__proto.onShareHandler=function(){
		if(ShareGiftMgr.ins.currentSkillId !=0){
			var skillVo=SkillModel.getSkillConfigData(ShareGiftMgr.ins.currentSkillId);
			if(skillVo !=null){
				var skillPer=SkillModel.getSkillPerformanceBySkillId(skillVo.Display);
				ShareGiftMgr.ins.shareCardID=skillVo.SkillID;
				this.shareDes=LanguageMgr.Ins.GetLan(skillPer.Description);
				var url=URL.rootPath+"assets/textrue/share/skill/"+skillPer.Icon;
				var param={};
				param.addPath="&shareCardId="+ShareGiftMgr.ins.currentShareId;
				param.param=ShareGiftMgr.ins.currentShareId;
				param.imgURL=url;
				param.titleStr=this.shareDes;
				var arr=[];
				arr[0]=ShareConst.CARD;
				arr[1]=param;
				EventMgr.ins.event("SHARE",[arr]);
			}
		}
		else{
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9002236"));
		}
	}

	__proto.onClickClose=function(){
		UIMgr.ins.closeView("ShareGiftView");
	}

	__proto.closeHandler=function(e){
		this.onClickClose();
		laya.ui.Window.prototype.closeHandler.call(this,e);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		ShareGiftMgr.ins.currentSkillId=0;
		ShareGiftMgr.ins.currentShareId=0;
		EventMgr.ins.off("UPDATE_SHAREGIFT_INFO",this,this.onUpdateInfo);
		if(this.cardList.renderHandler){
			this.cardList.renderHandler.recover();
			this.cardList.renderHandler=null;
		}
		if(this.cardList.selectHandler){
			this.cardList.selectHandler.recover();
			this.cardList.selectHandler=null;
		}
		this.btn_close.off("click",this,this.onClickClose);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return ShareGiftView;
})(ShareGiftViewUI)


//class modules.shareNewCard.ShareCardsView extends ui.shareNewCard.ShareCardsViewUI
var ShareCardsView=(function(_super){
	function ShareCardsView(){
		this.type=0;
		this._vo=null;
		this.path=UrlParam.ROOTURL+"index.html?_wv=183040&_wwv=2048"+'&playerId='+PlayerInfo.instance.playerId+'&openId='+PlayerInfo.instance.openid;
		ShareCardsView.__super.call(this);
		this.initView();
		this.addEvent();
	}

	__class(ShareCardsView,'modules.shareNewCard.ShareCardsView',_super);
	var __proto=ShareCardsView.prototype;
	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		laya.ui.Window.prototype.onResize.call(this,_bestFitWidth,_bestFitHeight);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		EventMgr.ins.off("SHARE_BREAK_TO_VIEW",this,this.shareCompleteFriend);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	__proto.initView=function(){
		QRMgr.ins.toQRBase64(this.path,150,150,Handler.create(this,function(base64URL){
			this.imgTwo.skin=base64URL;
		}));
		if(UrlParam.PARAMS["PLID"]=="fb"||UrlParam.PARAMS["PLID"]=="wx")
			this.btn_shareSpace.visible=this.btn_shareFriend.visible=this.btn_sharefacebook.visible=false;
		if(UrlParam.PARAMS["PLID"]=="qq"){
			this.btn_shareSpace.visible=this.btn_shareFriend.visible=true;
			}else if(UrlParam.PARAMS["PLID"]=="fb"){
			this.btn_sharefacebook.visible=true;
			}else if(UrlParam.PARAMS["PLID"]=="wx"){
			this.btn_shareFriend.visible=true;
		}
	}

	__proto.addEvent=function(){
		this.btn_back.clickHandler=new Handler(this,this.onClickBack);
		this.btn_shareSpace.clickHandler=new Handler(this,this.onShareSpace);
		this.btn_shareFriend.clickHandler=new Handler(this,this.onShareFriend);
		this.btn_sharefacebook.clickHandler=new Handler(this,this.onShareFriend);
		EventMgr.ins.on("SHARE_BREAK_TO_VIEW",this,this.shareCompleteFriend);
	}

	__proto.showShareCard=function(vo){
		this._vo=vo;
		this.type=0;
		this.boxSeason.visible=false;
		this.boxCard.visible=true;
		this.img_weapon.visible=vo.Type==2;
		if(vo.Quality >=3){
			this.img_cardBG.width=122;
			this.img_cardBG.height=154;
			this.img_cardBG.skin="assets/textrue/common/skillFrame/ui_card_3.png";
		}
		else{
			this.img_cardBG.width=120;
			this.img_cardBG.height=145;
			this.img_cardBG.skin="assets/textrue/common/skillFrame/ui_card_"+vo.Quality+".png";
		}
		this.lab_cardName.text=LanguageMgr.Ins.GetLan(SkillModel.getSkillPerformanceBySkillId(vo.Display).NameDisplay);
		this.lab_que.text=LanguageMgr.Ins.GetLan("9007312").split(",")[vo.Quality];
		this.lab_type.text=LanguageMgr.Ins.GetLan("9007313").split(",")[vo.Type];
		this.lab_txtQue.text=LanguageMgr.Ins.GetLan("9007323");
		this.lab_txtType.text=LanguageMgr.Ins.GetLan("9007322");
		var skillPer=SkillModel.getSkillPerformanceBySkillId(vo.Display);
		this.lab_dec.text=LanguageMgr.Ins.GetLan(skillPer.Description);
		this.img_cardIcon.skin="assets/textrue/itemicon/"+skillPer.Icon;
	}

	__proto.showSeasonResult=function(){
		this.type=1;
		this.boxSeason.visible=true;
		this.boxCard.visible=false;
		var div=PlayerInfo.instance.division;
		var rankVO=RankModel.getRankVO(div);
		var data=PathMgr.getMedalRes(rankVO);
		this.imgRank.skin=data.textRes;
		this.icon.skin=data.iconRes;
		if(rankVO.Division < 10){
			this.maxBox.visible=false;
			this.initStar(PvpMgr.ins.starNum,rankVO.StarNum);
		}
		else{
			this.maxBox.visible=false;
		}
	}

	__proto.onShareSpace=function(){}
	__proto.onShareFriend=function(){
		this.boxDown.visible=false;
		if(this.type==0){
			var skillPer=SkillModel.getSkillPerformanceBySkillId(this._vo.Display);
			var shareDes=LanguageMgr.Ins.GetLan(skillPer.Description);
			var url=UrlParam.ROOTURL+"assets/textrue/share/skill/"+skillPer.Icon;
			var param={};
			param.imgURL=url;
			param.titleStr=shareDes;
			var arr=[];
			arr[0]=ShareConst.SKILL_LEVEL_UP;
			arr[1]=param;
			EventMgr.ins.event("SHARE",[arr]);
		}
		else{
			EventMgr.ins.event("SHARE",[ShareConst.SEASON_SETTLE]);
		}
	}

	__proto.shareCompleteFriend=function(){
		this.boxDown.visible=true;
	}

	__proto.onClickBack=function(){
		if(this.type==0){
			EventMgr.ins.event("SHARE_COMPLETE_CLOSE_CARDEFFECT");
		}
		UIMgr.ins.closeView("ShareCardsView");
	}

	__proto.initStar=function(star,maxStar){
		this.mpNodeStar.destroyChildren();
		var iconNum=maxStar;
		var isEven=iconNum % 2==1?0:1;
		for(var i=0;i < iconNum;i++){
			var tempStar=new StartItem();
			tempStar.anchorX=0.5
			tempStar.anchorY=0.5;
			var offset=(i-Math.floor(iconNum / 2));
			tempStar.x=offset *(tempStar.width)+isEven *tempStar.width/2;
			if(isEven==1 && iconNum==4){
				if(i==1){
					offset=0;
					}else if(i==0){
					offset=-1;
				}
				}else if(isEven==1 && iconNum==2){
				offset=0;
			}
			tempStar.y=Math.abs(offset)*9;
			if(Math.abs(offset)==2){
				if(offset > 0){
					tempStar.x=tempStar.x-8;
					}else{
					tempStar.x=tempStar.x+8;
				}
				tempStar.y=tempStar.y+10;
			}
			if(star > i){
				tempStar.mpImgStar.visible=true;
				}else{
				tempStar.mpImgStar.visible=false;
			}
			this.mpNodeStar.addChild(tempStar);
		}
	}

	return ShareCardsView;
})(ShareCardsViewUI)


//class modules.shareNewCard.ShareFbCardsView extends ui.shareNewCard.ShareFbCardsViewUI
var ShareFbCardsView=(function(_super){
	function ShareFbCardsView(){
		this._listData=null;
		this._callBack=null;
		ShareFbCardsView.__super.call(this);
		this.addEvent();
	}

	__class(ShareFbCardsView,'modules.shareNewCard.ShareFbCardsView',_super);
	var __proto=ShareFbCardsView.prototype;
	__proto.addEvent=function(){
		this.cardList.renderHandler=Handler.create(this,this.onRender,null,false);
		this.btn_back.clickHandler=new Handler(this,this.onClickBack);
		this.btn_sharefacebook.clickHandler=new Handler(this,this.onShareFriend);
	}

	__proto.onRender=function(item,index){
		if(index < this.cardList.array.length){
			item.setData(this.cardList.array[index]);
		}
	}

	__proto.removeEvent=function(){
		this.btn_back.clickHandler=new Handler(this,this.onClickBack);
		this.btn_sharefacebook.clickHandler=new Handler(this,this.onShareFriend);
	}

	__proto.onClickBack=function(){
		UIMgr.ins.closeView("ShareFbCardsView");
	}

	__proto.onShareFriend=function(){
		this.boxDown.visible=false;
		Laya.stage.timer.once(300,this,function(){
			ScreenshotUtil.captureToDataURL(this,Handler.create(this,this.get64baseURL),this.width,this.height,this.x,this.y);
		});
	}

	__proto.get64baseURL=function(base64Url){
		this.boxDown.visible=true;
		var shareCfg={
			intent :'SHARE',
			image :base64Url,
			title :JSMgr.randomTitle(1,5),
			text :JSMgr.fbRandomContent()
		};
	}

	// });
	__proto.initInfo=function(){
		this.cardList.array=this._listData;
		this.cardList.repeatX=this._listData.length;
		this.cardList.refresh();
	}

	__proto.listData=function(value,callBack){
		this._callBack=callBack;
		this._listData=value;
		this.initInfo();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this._callBack=null;
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return ShareFbCardsView;
})(ShareFbCardsViewUI)


//class modules.shareNewCard.ShareNewCardView extends ui.shareNewCard.ShareNewCardViewUI
var ShareNewCardView=(function(_super){
	function ShareNewCardView(){
		ShareNewCardView.__super.call(this);
		this.initView();
	}

	__class(ShareNewCardView,'modules.shareNewCard.ShareNewCardView',_super);
	var __proto=ShareNewCardView.prototype;
	__proto.initView=function(){
		this.lab_dec.text=LanguageMgr.Ins.GetLan("9070094");
		this.lists.renderHandler=Handler.create(this,this.onRender,null,false);
		this.btn_back.clickHandler=Handler.create(this,this.onBackHandler,null,false);
		this.btn_share.clickHandler=Handler.create(this,this.onShareHandler,null,false);
	}

	__proto.onRender=function(item,index){
		if(index < this.lists.array.length){
			item.setData(this.lists.array[index]);
		}
	}

	__proto.setData=function(cards){
		this.lists.array=cards;
		this.lists.refresh();
		if(cards.length > 4){
			this.lists.x=370;
			this.lists.y=265;
		}
		else{
			this.lists.x+=this.lists.width-cards.length*150 >> 1;
			this.lists.y=375;
		}
	}

	__proto.onShareHandler=function(){
		var vo=this.lists.getItem(0);
		var skillPer=SkillModel.getSkillPerformanceBySkillId(vo.Display);
		var des=LanguageMgr.Ins.GetLan(skillPer.Description);
		var url=UrlParam.ROOTURL+"assets/textrue/shared/card/"+skillPer.Icon;
		var param={};
		param.param=ShareGiftMgr.ins.shareCardID.toString();
		param.imgURL=url;
		param.titleStr=des;
		var arr=[];
		arr[0]=ShareConst.NEW_CARD;
		arr[1]=param;
		EventMgr.ins.event("SHARE",[arr]);
		UIMgr.ins.closeView("ShareNewCardView");
	}

	__proto.onBackHandler=function(){
		UIMgr.ins.closeView("ShareNewCardView");
	}

	__proto.closeHandler=function(e){}
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.lists.renderHandler){
			this.lists.renderHandler.recover();
			this.lists.renderHandler=null;
		}
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return ShareNewCardView;
})(ShareNewCardViewUI)


/**
*点击商城页面宝箱列表子项弹出的页面
*/
//class modules.shop.view.ChestCoinDlg extends ui.shop.ChestCoinDlgUI
var ChestCoinDlg=(function(_super){
	function ChestCoinDlg(){
		this._shopInfo=null;
		this.vo=null;
		this.box=null;
		this._isBuying=false;
		ChestCoinDlg.__super.call(this);
		this.init();
	}

	__class(ChestCoinDlg,'modules.shop.view.ChestCoinDlg',_super);
	var __proto=ChestCoinDlg.prototype;
	__proto.createBox=function(boxName){
		this.box=new AniSkeleton(boxName,"npc",0,false);
		this.box.x=193;
		this.box.y=190;
		this.box.scaleX=0.7;
		this.box.scaleY=0.7;
		this.addChild(this.box);
		this.box.play(0,false);
	}

	/**更新宝箱 */
	__proto.updateChest=function(){
		this.txtTitle.text=LanguageMgr.Ins.GetLan("9002275");
		var shopItem=this.vo.ShopItem;
		if(shopItem.indexOf("|")!=-1){
			var arr=shopItem.split("|");
			var str=arr[0];
			var arr1=str.split(",");
			var coinStr=arr[1];
			var coinArr=coinStr.split(",");
			this.txtCoin.text=coinArr[1];
			var itemVo=ItemModel.getItemConfigData(arr1[0]);
			if(itemVo){
				this.createBox(itemVo.OpenBoxAnim);
				this.txtChestName.text=LanguageMgr.Ins.GetLan(itemVo.Name.toString());
				var goldArr;
				var cardArr;
				var arr2=itemVo.Param2.split(",");
				for (var i=0;i < arr2.length;i++){
					var arr3=(arr2 [i]).split("|");
					if(arr3[0]==1){
						goldArr=arr3;
						if(goldArr.length<3){
							this.txt0.text=goldArr[1]+"";
							}else{
							this.txt0.text=goldArr[1]+"-"+goldArr[2];
						}
						}else if(arr3[0]==2){
						cardArr=arr3;
						if(cardArr.length<3){
							this.txtComm.text=cardArr[1]+"";
							}else{
							this.txtComm.text=cardArr[1]+"-"+cardArr[2];
						}
						}else if(arr3[0]==3){
						this.txtRare.text="x"+arr3[1];
						}else if(arr3[0]==4){
						this.box1.visible=true;
						this.txt1.text="x"+arr3[1];
						}else if(arr3[0]==5){
						this.box2.visible=true;
						this.txt2.text="x"+arr3[1];
					}
				}
				}else{
				this.txtCoin.text=arr1[1];
			}
			itemVo=null;
		}
		if(this.vo.CurrencyType==4){
			this.icon.skin=PathMgr.getBoxIcon("pink");
			}else if(this.vo.CurrencyType==2){
			this.icon.skin=PathMgr.getBoxIcon("gems");
		};
		var price=this.vo.Price;
		if(this.vo.Type==1){
			price=this.vo.Price+this._shopInfo.buyCount *this.vo.AddPrice;
		}
		this.txtPrice.text=price.toString();
		this.txtPrice.color=PlayerInfo.instance.pinkDiamond >this.vo.Price? "#ffffff":"#FF0000";
	}

	/**
	*设置商品数据
	*@param:info 商品数据
	*@param:type 商品类型
	**/
	__proto.setData=function(info,type){
		this._shopInfo=info;
		this.vo=ShopModel.getShopConfigByID(this._shopInfo.shopId);
		if(!this.vo)return;
		this.updateChest();
	}

	__proto.updateState=function(){
		if(UrlParam.PARAMS["PLID"]=="wx"){
			Laya.timer.clear(this,this.showLoadFun)
			if(Browser.window.wxutil)Browser.window.wxutil.hideload();
		}
		this.btnBuy.disabled=false;
	}

	__proto.init=function(){
		this.lab0.text=LanguageMgr.Ins.GetLan("9007001");
		this.lab1.text=LanguageMgr.Ins.GetLan("9007345");
		this.lab2.text=LanguageMgr.Ins.GetLan("9070090");
		this.card_0.text=LanguageMgr.Ins.GetLan("9007347");
		this.card_1.text=LanguageMgr.Ins.GetLan("9002299");
		this.card_2.text=LanguageMgr.Ins.GetLan("9002300");
		this.img_send.skin="language/"+LanguageMgr.Ins.country+"/shop/ui_zhengshong.png";
		this.btnClose.clickHandler=Handler.create(this,this.onClose,null,false);
		this.btnBuy.clickHandler=Handler.create(this,this.onBuy,null,false);
		this.chestIcon.visible=false;
		EventMgr.ins.on("recv_buyResult",this,this.onBuyResult);
	}

	__proto.onBuyResult=function(res){
		if(res.result==0){
			Laya.timer.once(2000,this,this.onClose);
			}else{
			this._isBuying=false;
			this.mouseEnabled=true;
		}
	}

	__proto.onBuy=function(){
		this._isBuying=true;
		this.mouseEnabled=false;
		if(UrlParam.PARAMS["PLID"]=="wx"){
			Laya.timer.frameOnce(2,this,this.showLoadFun)
		}
		ShopMgr.IS_BUYING_BOX=true;
		SocketManager.Instance.out.reqShopBuy(this._shopInfo.shopType,this._shopInfo.shopId);
	}

	__proto.showLoadFun=function(){
		Browser.window.wxutil.showload('发送请求中...');
	}

	__proto.onClose=function(){
		if(UrlParam.PARAMS["PLID"]=="wx"){
			Laya.timer.clear(this,this.showLoadFun)
			if(Browser.window.wxutil)Browser.window.wxutil.hideload();
		}
		UIMgr.ins.closeView("ChestCoinDlg",true);
	}

	__proto.closeHandler=function(e){
		if(this._isBuying)return;
		this.onClose();
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this,this.width/2,this.height/2,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName);
		Tween.from(this,{scaleX:1.2,scaleY:1.2},200);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		EventMgr.ins.off("recv_buyResult",this,this.onBuyResult);
		Tween.clearAll(this);
		if(this.btnClose.clickHandler){
			this.btnClose.clickHandler.recover();
			this.btnClose.clickHandler=null;
		}
		if(this.btnBuy.clickHandler){
			this.btnBuy.clickHandler.recover();
			this.btnBuy.clickHandler=null;
		}
		this._shopInfo=null;
		if(this.box){
			this.box.destroy();
			this.box=null;
		}
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return ChestCoinDlg;
})(ChestCoinDlgUI)


//class modules.shop.view.MoneyCoinDig extends ui.shop.MoneyCoinDigUI
var MoneyCoinDig=(function(_super){
	function MoneyCoinDig(){
		this._shopInfo=null;
		this.vo=null;
		this._isBuying=false;
		MoneyCoinDig.__super.call(this);
		this.init();
	}

	__class(MoneyCoinDig,'modules.shop.view.MoneyCoinDig',_super);
	var __proto=MoneyCoinDig.prototype;
	/**
	*设置商品数据
	*@param:info 商品数据
	*@param:type 商品类型
	**/
	__proto.setData=function(info,type){
		this._shopInfo=info;
		this.vo=ShopModel.getShopConfigByID(this._shopInfo.shopId);
		if(!this.vo)return;
		if(type==1){
			this.updateCoin();
		}
		else {
			this.updatePinkDmd();
		}
	}

	/**更新金币 */
	__proto.updateCoin=function(){
		this.coinImg.skin="assets/textrue/shop/"+this.vo.itemSkin;
		this.layout();
		this.txtPrice.text=(this.vo.Price+this._shopInfo.buyCount *this.vo.AddPrice).toString();
	}

	/**更新粉钻*/
	__proto.updatePinkDmd=function(){
		this.coinImg.skin="assets/textrue/shop/"+this.vo.itemSkin;
		this.layout();
	}

	__proto.layout=function(){
		this.showPresent();
		var shopItem=this.vo.ShopItem;
		if(shopItem.indexOf("|")==-1){
			var arr=shopItem.split(",");
			var item=ItemModel.getItemConfigData(arr[0]);
			if(item && item.Type==6 && item.SubType==1){
				this.txtCoinNum.visible=false;
				this.giftIcon.visible=false;
				this.monthCardTipsText.visible=true;
				this.monthCardTipsIcon.visible=true;
				this.getNumText.visible=true;
				var qVO=QuestConditionModel.getInfoById("9201100");
				var rewards=qVO.Rewards.split("|");
				var iVO=ItemModel.getItemConfigData(rewards[0]);
				this.monthCardTipsText.text=LanguageMgr.Ins.GetLan("14300183");
				this.getNumText.text=""+rewards[1];
				this.monthCardTipsIcon.skin=PathMgr.getBoxIcon(iVO.Icon);
			}
			else {
				this.txtCoinNum.visible=true;
				this.giftIcon.visible=true;
				this.monthCardTipsText.visible=false;
				this.monthCardTipsIcon.visible=false;
				this.getNumText.visible=false;
				this.txtCoinNum.text=arr[1];
				this.giftIcon.skin=PathMgr.getBoxIcon(item.Icon);
				this.giftIcon.x=this.txtCoinNum.x+(this.txtCoinNum.width>>1)-(this.txtCoinNum.textField.textWidth>>1)-42;
			}
		}
		this.txtTitle.text=LanguageMgr.Ins.GetLan(this.vo.Name);
		this.txtPrice.text=this.vo.Price.toString();
		if(this.vo.CurrencyType==4){
			this.icon.skin=PathMgr.getBoxIcon("pink");
			}else if(this.vo.CurrencyType==2){
			this.icon.skin=PathMgr.getBoxIcon("gems");
		}
	}

	__proto.showPresent=function(){
		if(this.vo.PresentItem){
			var arr=this.vo.PresentItem.split(",");
			var itemVo=ItemModel.getItemConfigData(arr[0]);
			if(itemVo){
				this.sendIcon.skin=PathMgr.getBoxIcon(itemVo.Icon);
				this.txtSend.text=arr[1]+"";
				this.txtSend.visible=itemVo.ItemID<0;
			}
		}
	}

	__proto.updateState=function(){
		if(UrlParam.PARAMS["PLID"]=="wx"){
			Laya.timer.clear(this,this.showLoadFun)
			if(Browser.window.wxutil)Browser.window.wxutil.hideload();
		}
	}

	__proto.init=function(){
		this.txt_send.text=LanguageMgr.Ins.GetLan("10001173");
		this.btnClose.clickHandler=Handler.create(this,this.onClose,null,false);
		this.btnBuy.clickHandler=Handler.create(this,this.onBuy,null,false);
		EventMgr.ins.on("recv_buyResult",this,this.onBuyResult);
	}

	__proto.onBuyResult=function(res){
		if(res.result==0){
			Laya.timer.once(2000,this,this.onClose);
			}else{
			this._isBuying=false;
			this.mouseEnabled=true;
		}
	}

	__proto.onBuy=function(){
		this._isBuying=true;
		this.mouseEnabled=false;
		if(UrlParam.PARAMS["PLID"]=="wx"){
			Laya.timer.frameOnce(2,this,this.showLoadFun)
		}
		ShopMgr.IS_BUYING_BOX=true;
		SocketManager.Instance.out.reqShopBuy(this._shopInfo.shopType,this._shopInfo.shopId);
	}

	__proto.showLoadFun=function(){
		Browser.window.wxutil.showload('发送请求中...');
	}

	__proto.onClose=function(){
		if(UrlParam.PARAMS["PLID"]=="wx"){
			Laya.timer.clear(this,this.showLoadFun)
			if(Browser.window.wxutil)Browser.window.wxutil.hideload();
		}
		UIMgr.ins.closeView("MoneyCoinDig",true);
	}

	__proto.closeHandler=function(e){
		if(this._isBuying)return;
		this.onClose();
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this,this.width/2,this.height/2,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName);
		Tween.from(this,{scaleX:1.2,scaleY:1.2},200);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		EventMgr.ins.off("recv_buyResult",this,this.onBuyResult);
		Tween.clearAll(this);
		if(this.btnClose.clickHandler){
			this.btnClose.clickHandler.recover();
			this.btnClose.clickHandler=null;
		}
		if(this.btnBuy.clickHandler){
			this.btnBuy.clickHandler.recover();
			this.btnBuy.clickHandler=null;
		}
		this._shopInfo=null;
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return MoneyCoinDig;
})(MoneyCoinDigUI)


/**
*商城主页面
*/
//class modules.shop.view.ShopView extends ui.shop.ShopViewUI
var ShopView=(function(_super){
	function ShopView(){
		this.BUY_PINK=4;
		this.BUY_COIN=1;
		this.BUY_DIAMOND=2;
		/**当前选中列表中的某一个 */
		this.curIndex=0;
		/**购买类型 */
		this.curType=0;
		this._$9_pos=null;
		this.curShopInfo=null;
		/**0金币 1粉钻 2钻石 */
		this._type=0;
		/**当前选中tab中的某一个 */
		this._selectIndex=0;
		this._diamondDataIsReady=false;
		this._openDiamondTab=false
		ShopView.__super.call(this);
		this.addEvent();
		this.init();
	}

	__class(ShopView,'modules.shop.view.ShopView',_super);
	var __proto=ShopView.prototype;
	__proto.onBuyResult=function(res){
		if(res.result==0){
			this.showCoinEffect();
			if(this._selectIndex==4 ||this._selectIndex==0||this._selectIndex==1){
				SocketManager.Instance.out.reqShopList();
				}else {
				this.onTab(this._selectIndex);
			}
		}
	}

	__proto.sortFunc=function(a,b){
		var bb=ShopModel.getShopConfigByID(b.shopId);
		var aa=ShopModel.getShopConfigByID(a.shopId);
		var result=aa.Price-bb.Price;
		aa=null;
		bb=null;
		return result;
	}

	/**更新个人账户 */
	__proto.onUpdate=function(){
		this.lab_gold.value=PlayerInfo.instance.gold.toString();
		this.lab_diamond.value=PlayerInfo.instance.diamond.toString();
		this.pinkGem.value=PlayerInfo.instance.pinkDiamond.toString();
	}

	/**显示金币或钻石动画 */
	__proto.showCoinEffect=function(){
		var pt;
		if(this._type==0){
			pt=new Point(this.box0.x+110,this.box0.y+25);
			DropItemUtil.showEffect("ui_gold",0,this._$9_pos,pt);
			}else if(this._type==1){
			pt=new Point(this.box1.x+120,this.box1.y+35);
			DropItemUtil.showEffect("ui_huodefenzuan",0,this._$9_pos,pt);
			}else if(this._type==2){
			pt=new Point(this.box2.x+110,this.box2.y+25);
			DropItemUtil.showEffect("ui_gems",0,this._$9_pos,pt);
		}
	}

	__proto.addEvent=function(){
		this.btnClose.clickHandler=Handler.create(this,this.onClose,null,false);
		this.btn_vipView.clickHandler=Handler.create(this,this.onClickVip,null,false);
		this.tab.selectHandler=Handler.create(this,this.onTab,null,false);
		this.chestList.renderHandler=Handler.create(this,this.onRendChestList,null,false);
		this.chestList.selectHandler=Handler.create(this,this.onSelectChestList,null,false);
		this.diamondList.renderHandler=Handler.create(this,this.onRendDiamondList,null,false);
		this.diamondList.selectHandler=Handler.create(this,this.onSelectDiamondList,null,false);
		this.privilegeList.renderHandler=Handler.create(this,this.onRenderPrivilegeList,null,false);
		this.privilegeList.mouseHandler=Handler.create(this,this.onClickPrivilegeList,null,false);
		EventMgr.ins.on("recv_buyResult",this,this.onBuyResult);
		EventMgr.ins.on("get_key",this,this.onGetKey);
		PlayerInfoMgr.ins.on("player_info_change",this,this.onUpdate);
		EventMgr.ins.on("update_shop_list",this,this.onUpdateShopList);
	}

	__proto.onUpdateShopList=function(){
		this.onTab(this._selectIndex);
	}

	__proto.init=function(){
		this.txtTip.text=LanguageMgr.Ins.GetLan("9070086");
		this.txt_Vipview.text=LanguageMgr.Ins.GetLan("14300366");
		this.txt_Vipview.underline=true;
		this.chestList.scrollBar.visible=false;
		this.diamondList.scrollBar.visible=false;
		this.diamondList.scrollBar.elasticBackTime=600;
		this.diamondList.scrollBar.elasticDistance=200;
		this.chestList.scrollBar.elasticBackTime=600;
		this.chestList.scrollBar.elasticDistance=200;
		this.chestList.selectEnable=true;
		this.diamondList.selectEnable=true;
		this.diamondList.spaceX=40;
		this.chestList.spaceX=40;
		this.chestList.array=[];
		this.tab.labels=this.tabLabel(0);
		this.box2.visible=true;
		this._$9_pos=new Point(ResizeMgr.bestFitWidth/2,ResizeMgr.bestFitHeight/2+50);
		this.tab.selectedIndex=ShopMgr.ins.selectedIndex;
		this.onTab(ShopMgr.ins.selectedIndex);
	}

	/**获得钥匙后播放宝箱动画 */
	__proto.onGetKey=function(type){
		(type===void 0)&& (type=0);
		if(type==0){
			var target;
			if(this._type==0){
				target=this.coinBg;
			}
			else if(this._type==1){
				target=this.pinkBg;
				}else if(this._type==2){
				target=this.dmdBg;
			}
			Tween.from(target,{scaleX:0.8,scaleY:0.8},100,null,Handler.create(this,function(){
				target.scaleX=target.scaleY=1;
			}));
		}
	}

	__proto.tabLabel=function(type){
		var str=LanguageMgr.Ins.GetLan('10001175');
		str+=","+LanguageMgr.Ins.GetLan('9007001');
		str+=","+LanguageMgr.Ins.GetLan('10001176');
		str+=","+LanguageMgr.Ins.GetLan('14300274');
		(ShopMgr.ins.IS_OPEN_PAY)&& (str+=","+LanguageMgr.Ins.GetLan('9007002'));
		return str;
	}

	/**选择宝箱列表事件处理 */
	__proto.onSelectChestList=function(index){
		if(index==-1)return;
		this.curIndex=index;
		this.curType=4;
		this.curShopInfo=this.chestList.array[index];
		this.openConfirmPage(this.curShopInfo);
	}

	/**
	*看广告
	*/
	__proto.showAD=function(){
		var maxRewardNum=ConfigModel.getConfigData(1143).ConfigValue;
		if(ADMgr.ins.rewardNum >=maxRewardNum){
			TipsManager.Instance().showLanTips(14300413);
			return;
		};
		var msg=new com.road.ddt.proto.AdvertiseRewardMsg();
		msg.type=5;
		msg.state=-1;
		SocketManager.Instance.sendSocketData(0x290a,msg);
		FBInterfaceMgr.ins.showAsync(Handler.create(this,this.onPlayOver),Handler.create(this,this.onPlayError));
	}

	__proto.onPlayOver=function(){
		ADMgr.ins.sendGetADReward(5,true);
	}

	__proto.onPlayError=function(){
		ADMgr.ins.sendGetADReward(5,false);
	}

	/**
	*打开二次确认购买界面
	*/
	__proto.openConfirmPage=function(value){
		var _$this=this;
		switch(this.tab.selectedIndex){
			case 0:{
					UIMgr.ins.openView("ChestCoinDlg",Handler.create(this,function(view){
						view.setData(value,_$this.tab.selectedIndex);
						if(_$this.tab.selectedIndex==0){
							_$this.chestList.selectedIndex=-1;
							}else{
							_$this.diamondList.selectedIndex=-1;
						}
						view=null;
					}));
					break ;
				}
			case 1:{
					UIMgr.ins.openView("MoneyCoinDig",Handler.create(this,function(view){
						view.setData(value,_$this.tab.selectedIndex);
						if(_$this.tab.selectedIndex==0){
							_$this.chestList.selectedIndex=-1;
							}else{
							_$this.diamondList.selectedIndex=-1;
						}
						view=null;
					}));
					break ;
				}
			case 2:{
					UIMgr.ins.openView("InvitePaySendView",Handler.create(this,function(view){
						view.dataSource=value.shopId;
						if(_$this.tab.selectedIndex==0){
							_$this.chestList.selectedIndex=-1;
							}else{
							_$this.diamondList.selectedIndex=-1;
						}
						view=null;
					}));
					break ;
				}
			case 3:{
					UIMgr.ins.openView("InvitePaySendView",Handler.create(this,function(view){
						view.dataSource=value.shopId;
						if(_$this.tab.selectedIndex==0){
							_$this.chestList.selectedIndex=-1;
							}else{
							_$this.diamondList.selectedIndex=-1;
						}
						view=null;
					}));
					break ;
				}
			}
	}

	__proto.buyCoin=function(shopVo){
		SocketManager.Instance.out.reqShopBuy(this.curShopInfo.shopType,this.curShopInfo.shopId);
	}

	__proto.buyDiamond=function(shopVo){
		if(shopVo.CurrencyType==3){
			if(!ShopMgr.ins.IS_OPEN_PAY){
				TipsManager.Instance().showAlertDialog("",LanguageMgr.Ins.GetLan(14300276));
				this.diamondList.selectedIndex=-1;
				return;
			}
			try{
				var count=shopVo.Price*10;
				var shopId=this.curShopInfo.shopId;
				if(UrlParam.PARAMS["PLID"]=="wx"){
					var isMidasTest=PlayerInfo.instance.isMidasTest;
					var env=isMidasTest;
					var offerId=this.PlatId==2?"1450013232":"1450013231";
					var pf=this.PlatId==2?"iap":"android";
					window.wxutil.buyGoods(env,count,offerId,pf,JSMgr.instance.wxBuyGoodsBack);
				}
				else {
					modules.pay.JSPay.instance.pay({n:count},null,shopId);
				}
			}catch(err){}
		}
		else {
			SocketManager.Instance.out.reqShopBuy(this.curShopInfo.shopType,this.curShopInfo.shopId);
		}
	}

	/**选择钻石列表事件处理 */
	__proto.onSelectDiamondList=function(index){
		if(index==-1)return;
		var shop=this.diamondList.array[index];
		var shopVo;
		shopVo=ShopModel.getShopConfigByID(shop.shopId);
		this.curIndex=index;
		this.curShopInfo=shop;
		if(this.tab.selectedIndex==4){
			if(FBInterfaceMgr.ins.getIsOpenPay()){
				FBPayMgr.ins.purchaseAsync((""+shop.shopId));
			}
			else {
				var apis=FBInterfaceMgr.ins.getSupportedAPIs();
				var apiIndex=apis.indexOf("payments.purchaseAsync");
				console.log("onReady状态:"+FBInterfaceMgr.ins.getIsOpenPay()+"\n"+"purchaseAsync 接口索引:"+apiIndex+"\n"+"所有接口列表:"+apis.join("\n"));
				TipsManager.Instance().showAlertDialog("",LanguageMgr.Ins.GetLan(14300276));
			}
			}else if(this.tab.selectedIndex==2 && index==1){
			if(Browser.window.fbConfig.isOpenAds)
				this.showAD();
			else this.openConfirmPage(this.curShopInfo);
			}else{
			this.openConfirmPage(this.curShopInfo);
		}
		this.curType=shopVo.CurrencyType;
		this.diamondList.selectedIndex=-1;
		shopVo=null;
		this.curShopInfo=null;
	}

	/**渲染宝箱列表 */
	__proto.onRendChestList=function(item,index){
		if(index < this.chestList.length){
			item.setData(this.chestList.array[index]);
		}
	}

	/**渲染钻石列表 */
	__proto.onRendDiamondList=function(item,index){
		if(index < this.diamondList.length){
			item.setData(this.diamondList.array[index],index);
		}
	}

	__proto.onRenderPrivilegeList=function($item,$index){
		var shopInfo=this.privilegeList.array[$index];
		var shopVO=ShopModel.getShopConfigByID(shopInfo.shopId);
		var items=shopVO.ShopItem.split(",");
		var itemVO=ItemModel.getItemConfigData(items[0]);
		$item.privilegeImg.skin="language/Chinese/shop/"+itemVO.Icon+".png";
		$item.periodText.text=LanguageMgr.Ins.GetLan("14300275",itemVO.Param1);
		$item.priceText.text=""+shopVO.Price;
		if(shopVO.CurrencyType==4){
			$item.priceIcon.skin=PathMgr.getBoxIcon("pink");
		}
		else if(shopVO.CurrencyType==2){
			$item.priceIcon.skin=PathMgr.getBoxIcon("gems");
		}
		switch(shopInfo.shopId){
			case 6370001:
				$item.nameImg.skin="language/Chinese/shop/ui_kptq.png";
				break ;
			case 6370002:
				$item.nameImg.skin="language/Chinese/shop/ui_cztq.png";
				break ;
			}
	}

	__proto.onClickPrivilegeList=function(e,index){
		if(e.type !="click")return;
		var shopVo;
		this.curShopInfo=this.privilegeList.array[index];
		shopVo=ShopModel.getShopConfigByID(this.curShopInfo.shopId);
		this.openConfirmPage(this.curShopInfo);
		this.curType=shopVo.CurrencyType;
		this.diamondList.selectedIndex=-1;
		shopVo=null;
		this.curShopInfo=null;
	}

	__proto.onClickVip=function(){
		UIMgr.ins.openView("VipView");
	}

	__proto.onTab=function(index){
		this._selectIndex=index;
		var dataList=[];
		this.txtTip.visible=false;
		this.chestList.visible=false;
		this.diamondList.visible=false;
		this.privilegeList.visible=false;
		this.titleBg.visible=false;
		this.btn_vipView.visible=false;
		switch(index){
			case 0:{
					this._type=0;
					this.txtTip.visible=true;
					this.chestList.visible=true;
					this.titleBg.visible=true;
					dataList=ShopMgr.ins.allShopDic[1];
					this.chestList.array=dataList.sort(this.sortFunc);
					this.chestList.refresh();
					break ;
				}
			case 1:{
					this._type=0;
					this.diamondList.visible=true;
					this.titleBg.visible=true;
					dataList=ShopMgr.ins.allShopDic[5];
					this.diamondList.array=dataList.sort(this.sortFunc);
					this.diamondList.refresh();
					break ;
				}
			case 2:{
					this._type=1;
					this.diamondList.visible=true;
					this.titleBg.visible=true;
					dataList=ShopMgr.ins.allShopDic[7].slice();
					if(!Browser.window.fbConfig.isOpenAds){
						for (var i=0;i < dataList.length;i++){
							if(dataList[i].shopId==6340002){
								dataList.splice(i,1);
								break ;
							}
						}
					}
					this.diamondList.array=dataList;
					this.diamondList.refresh();
					break ;
				}
			case 4:{
					this._type=2;
					this.diamondList.visible=true;
					this.titleBg.visible=true;
					this.btn_vipView.visible=true;
					dataList=ShopMgr.ins.allShopDic[2];
					this.diamondList.array=dataList.sort(this.sortFunc);
					this.diamondList.refresh();
					break ;
				}
			case 3:
				this._type=3;
				this.privilegeList.visible=true;
				dataList=ShopMgr.ins.allShopDic[12];
				this.privilegeList.array=dataList.sort(this.sortFunc);
				this.privilegeList.refresh();
				break ;
			}
	}

	// }
	__proto.onClose=function(){
		SocketManager.Instance.record.sceneChangeRecords(3,0,1)
		UIMgr.ins.closeView("ShopView",true);
	}

	__proto.closeHandler=function(e){
		this.onClose();
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this,$x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName);
		this.onUpdate();
		SocketManager.Instance.record.sceneChangeRecords(3,1,0)
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		PlayerInfoMgr.ins.off("player_info_change",this,this.onUpdate);
		EventMgr.ins.off("recv_buyResult",this,this.onBuyResult);
		EventMgr.ins.off("get_key",this,this.onGetKey);
		EventMgr.ins.off("update_shop_list",this,this.onUpdateShopList);
		if(this.btnClose.clickHandler){
			this.btnClose.clickHandler.recover();
			this.btnClose.clickHandler=null;
		}
		if(this.tab.selectHandler){
			this.tab.selectHandler.recover();
			this.tab.selectHandler=null;
		}
		if(this.chestList.renderHandler){
			this.chestList.renderHandler.recover();
			this.chestList.renderHandler=null;
		}
		if(this.diamondList.renderHandler){
			this.diamondList.renderHandler.recover();
			this.diamondList.renderHandler=null;
		}
		if(this.diamondList.selectHandler){
			this.diamondList.selectHandler.recover();
			this.diamondList.selectHandler=null;
		}
		if(this.privilegeList.renderHandler){
			this.privilegeList.renderHandler.recover();
			this.privilegeList.renderHandler=null;
		}
		if(this.privilegeList.selectHandler){
			this.privilegeList.selectHandler.recover();
			this.privilegeList.selectHandler=null;
		}
		if(this.chestList.selectHandler){
			this.chestList.selectHandler.recover();
			this.chestList.selectHandler=null;
		}
		this.chestList=null;
		this.diamondList=null;
		ShopMgr.ins.selectedIndex=0;
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	/**
	*获取当前平台ID
	*/
	__getset(0,__proto,'PlatId',function(){
		if(Browser.onMobile){
			if(Browser.onIOS){
				return 2;
			}
			else if(Browser.onAndriod){
				return 1;
			}
		}
		return 0;
	});

	return ShopView;
})(ShopViewUI)


//class modules.showGood.ShowGetGoodsView extends ui.activity.view.ShowGetGoodsViewUI
var ShowGetGoodsView=(function(_super){
	function ShowGetGoodsView(){
		this._data=null;
		this.listX=0;
		this._boxId=0;
		this.openQuestExtraRewardView=false
		ShowGetGoodsView.__super.call(this);
		this.listX=this.lists.x;
		this.mPanel.hScrollBar.hide=true;
		this.lists.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
		this.btnGet.on("click",this,this.onClickGet);
		this.btnFb.on("click",this,this.onClickFb);
	}

	__class(ShowGetGoodsView,'modules.showGood.ShowGetGoodsView',_super);
	var __proto=ShowGetGoodsView.prototype;
	/**
	*isFb 奖励是否翻倍
	*/
	__proto.setData=function(data,flag){
		SoundMgr.instance.playSound(4006017);
		this._boxId=data.boxId;
		this.lists.x=this.listX;
		this._data=data;
		this.lists.array=this._data.list;
		this.lists.repeatX=this._data.list.length;
		this.lists.refresh();
		var len=this._data.list.length;
		if(len < 5){
			this.lists.x+=((5-len)/ 2)*122;
		}
		if(flag){
			if(flag.isFb){
				this.btnGet.x=443
				this.btnFb.visible=true
			}
			if(flag.questExtraRewardView){
				this.openQuestExtraRewardView=true
			}
		}
	}

	__proto.onClickGet=function(){
		this.closeView();
		if(this.openQuestExtraRewardView){
			UIMgr.ins.openView("QuestExtraRewardView")
			this.openQuestExtraRewardView=false
		}
	}

	__proto.onClickFb=function(){
		EventMgr.ins.event("SHARE",[ShareConst.ACHIEVE]);
		this.closeView()
	}

	__proto.onRenderHandler=function(item,index){
		if(index < this.lists.array.length){
			item.setData(this.lists.array[index]);
		}
	}

	__proto.closeHandler=function(e){
		laya.ui.Window.prototype.closeHandler.call(this,e);
		this.closeView();
	}

	__proto.closeView=function(){
		if(this._data && this._data.boxItems && this._data.boxItems.length > 0){
			var openBoxDataList=[],info;
			for (var i=0;i < this._data.boxItems.length;i++){
				info=new PlayerItemInfo();
				info.itemID=this._data.boxItems[i].itemId;
				info.count=this._data.boxItems[i].count;
				openBoxDataList.push(info);
			}
			UIMgr.ins.openView("TreasureBoxOpenView"
			,Handler.create(this,function(view){
				view.init(this._boxId,openBoxDataList);
			}));
		}
		this._data=null;
		this.btnGet.off("click",this,this.onClickGet);
		UIMgr.ins.closeView("ShowGetGoodsView",true,false);
		EventMgr.ins.event("close_getGoodsView");
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.lists.renderHandler){
			this.lists.renderHandler.recover();
			this.lists.renderHandler=null;
		}
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return ShowGetGoodsView;
})(ShowGetGoodsViewUI)


/**
*卡牌信息界面
*@author baohua.chen
*
*/
//class modules.skill.sonView.CardMessageView extends ui.skill.sonView.CardMessageViewUI
var CardMessageView=(function(_super){
	function CardMessageView(){
		this._costCard=0;
		this.mSkillData=null;
		this.mSkillPerData=null;
		this.IsBattleDeck=false;
		this.attributes=null;
		this.nextAttAry=null;
		this.showAdd=true;
		this._lastCreatTime=NaN;
		this.costGold=0;
		this.guided=false;
		CardMessageView.__super.call(this);
		this.viewType="CardMessageView";
		this.init();
		this.addEvent();
	}

	__class(CardMessageView,'modules.skill.sonView.CardMessageView',_super);
	var __proto=CardMessageView.prototype;
	__proto.setData=function($skillData,$IsBattleDeck,isShowDownView,isShowTop){
		($IsBattleDeck===void 0)&& ($IsBattleDeck=true);
		(isShowDownView===void 0)&& (isShowDownView=true);
		(isShowTop===void 0)&& (isShowTop=false);
		this.card.skillVo=$skillData;
		this._costCard=$skillData.CostSkillPoint
		if(PlayerInfo.instance.isOpenMasterResourceCard){
			this._costCard=PrivilegeModel.getPrivilegePrice(this._costCard,3+"_"+4);
		}
		if($skillData.skillCard>=this._costCard){
			this.bar.skin="skill/progress_2.png";
			}else{
			this.bar.skin="skill/progress_1.png";
		}
		if($skillData.NextSkill==0){
			this.bar.skin="skill/progress_3.png";
		}
		$skillData.NextSkill=$skillData.SkillID==$skillData.NextSkill ? 0 :$skillData.NextSkill;
		if(!$skillData.IsHave && !isShowTop){
			this.mSkillData=SkillModel.getSkillConfigData($skillData.BasicSkill);
		}
		else{
			this.mSkillData=$skillData;
		}
		this.barTxt.text=$skillData.skillCard+"/"+this._costCard;
		this.bar.value=Number($skillData.skillCard / this._costCard);
		this.mSkillPerData=SkillModel.getSkillPerformanceBySkillId(this.mSkillData.Display);
		this.lab_title.text=LanguageMgr.Ins.GetLan("9007379",this.mSkillData.Level)+" "+LanguageMgr.Ins.GetLan(this.mSkillPerData.NameDisplay.toString());
		this.txt_area.text=LanguageMgr.Ins.GetLan(this.mSkillPerData.Description);
		this.lab_type.text=LanguageMgr.Ins.GetLan("9007313").split(",")[this.mSkillData.Type];
		this.IsBattleDeck=$IsBattleDeck;
		this.showAdd=isShowDownView;
		this.initSkillDes();
		if(this.mSkillData.BasicSkill==1009001){
			this.imgBG.height=this.labGroup.displayHeight+25;
		}
		else{
			this.imgBG.height=65;
		}
		this.initAttributes();
		this.updateState();
	}

	/**
	*技能描述
	**/
	__proto.initSkillDes=function(){
		this.labGroup.visible=false;
		this.imgBG.visible=false;
		if(this.mSkillPerData.GroupDescription.indexOf(",")!=-1){
			var ary=this.mSkillPerData.GroupDescription.split(",");
			this.labGroup.visible=true;
			this.imgBG.visible=true;
			var name0="<span style='font-size:18px;face:Arial;bold:true;color:#ff7700;'>"+LanguageMgr.Ins.GetLan(ary[0]).split("|")[0]+"</span>";
			var dec0=LanguageMgr.Ins.GetLan(ary[0]).split("|")[1];
			var name1="<span style='font-size:18px;face:Arial;bold:true;color:#ff7700;'>"+LanguageMgr.Ins.GetLan(ary[1]).split("|")[0]+"</span>";
			var dec1=LanguageMgr.Ins.GetLan(ary[1]).split("|")[1];
			this.labGroup.text=name0+":"+dec0+"<br/>"+name1+":"+dec1;
		}
		else{
			if(parseInt(this.mSkillPerData.GroupDescription)!=0){
				this.labGroup.visible=true;
				this.imgBG.visible=true;
				var name="<span style='font-size:18px;face:Arial;bold:true;color:#ff7700;'>"+LanguageMgr.Ins.GetLan(this.mSkillPerData.GroupDescription).split("|")[0]+"</span>";
				var dec=LanguageMgr.Ins.GetLan(this.mSkillPerData.GroupDescription).split("|")[1];
				this.labGroup.text=name+":"+dec;
			}
		}
	}

	/**
	*初始化属性列表
	*/
	__proto.initAttributes=function(){
		this.attributes=[];
		this.attributes=this.mSkillPerData.AttributeDescription.split(",");
		if(this.mSkillData.NextSkill > 0 && this.mSkillData.IsHave){
			var skillInfo=SkillModel.getSkillConfigData(this.mSkillData.NextSkill);
			var skillPerInfo=SkillModel.getSkillPerformanceBySkillId(skillInfo.Display);
			this.nextAttAry=[];
			this.nextAttAry=skillPerInfo.AttributeDescription.split(",");
		}
		if(this.attributes.length>4)this.attributes=this.attributes.slice(0,4);
		this.mList.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
		this.mList.array=this.attributes;
		this.mList.refresh();
	}

	__proto.onRenderHandler=function(item,index){
		if(index < this.mList.array.length){
			if(this.mSkillData.NextSkill > 0 && this.mSkillData.IsHave){
				var flag=this.mSkillData.skillCard >=this.mSkillData.CostSkillPoint && this.mSkillData.CostSkillPoint !=0;
				item.setData(this.mList.array[index],this.nextAttAry[index],this.showAdd,flag,"#a67153",true,this.mSkillData.CostGold);
			}
			else{
				item.setData(this.mList.array[index]);
			}
		}
	}

	__proto.updateState=function(){
		this.boxCardUpgrade.visible=this.btn_upgrade.visible=this.btn_use.visible=this.boxShowTop.visible=true;
		this.btnRemove.visible=false;
		this.tip_maxLevel.visible=false;
		var isUes=false;
		var isMaxGrade=this.mSkillData.NextSkill==0;
		if(this.attributes.length > 2){
			this.img_neiBG.height=307;
			this.img_neicengBG.height=87;
			this.mList.height=65;
			this.boxShowTop.y=470;
			if(this.mSkillData.IsHave){
				this.boxCardUpgrade.y=506;
				this.btn_upgrade.y=544;
				this.btn_use.y=542;
				this.btnRemove.y=542;
				isUes=!SkillMgr.ins.isUserSkill(this.mSkillData.SkillID);
				this.btn_use.visible=isUes;
				this.btnRemove.visible=!isUes;
				if(isMaxGrade){
					this.tip_maxLevel.visible=true;
					this.boxCardUpgrade.visible=this.btn_upgrade.visible=false;
					this.btn_use.x=577;
					this.btnRemove.x=577;
					this.img_bigBG.height=571;
					this.tip_maxLevel.y=589;
					}else{
					this.boxCardUpgrade.visible=this.btn_upgrade.visible=true;
					this.img_bigBG.height=542;
					if(this.mSkillData.slot<0){
						this.btn_upgrade.x=522;
						this.btn_use.x=744;
						this.btnRemove.x=744;
						}else{
						this.btn_upgrade.x=592;
					}
				}
				}else{
				this.tip_maxLevel.y=528;
				this.img_bigBG.height=474;
				this.btn_use.visible=false;
				this.btnRemove.visible=false;
			}
		}
		else{
			this.img_neiBG.height=267;
			this.img_neicengBG.height=49;
			this.boxShowTop.y=431;
			this.boxCardUpgrade.y=473;
			this.btn_upgrade.y=506;
			this.btn_use.y=this.btnRemove.y=506;
			if(this.mSkillData.IsHave){
				isUes=!SkillMgr.ins.isUserSkill(this.mSkillData.SkillID);
				this.btn_use.visible=isUes;
				this.btnRemove.visible=!isUes;
				if(isMaxGrade){
					this.tip_maxLevel.visible=true;
					this.boxCardUpgrade.visible=this.btn_upgrade.visible=false;
					this.btn_use.x=this.btnRemove.x=577;
					this.img_bigBG.height=529;
					this.tip_maxLevel.y=549;
					}else{
					this.boxCardUpgrade.visible=this.btn_upgrade.visible=true;
					this.btn_use.x=this.btnRemove.x=744;
					this.img_bigBG.height=502;
				}
				}else{
				this.img_bigBG.height=447;
				this.btn_use.visible=this.btnRemove.visible=false;
			}
		}
		this.costGold=this.mSkillData.CostGold
		if(PlayerInfo.instance.isOpenMasterResourceCard){
			this.costGold=PrivilegeModel.getPrivilegePrice(this.costGold,3+"_"+3);
		}
		this.lab_upgradGold.text=this.costGold.toString();
		if(!isMaxGrade){
			if(this.mSkillData.skillCard >=this._costCard && this._costCard !=0){
				this.btn_upgrade.gray=false;
			}
			else{
				this.btn_upgrade.gray=true;
			}
			this.boxCardUpgrade.visible=this.mSkillData.IsHave;
			this.btn_upgrade.visible=this.mSkillData.IsHave;
			var exp=this.mSkillData.Exp;
			if(PlayerInfo.instance.isOpenMasterGrowing){
				exp=PrivilegeModel.getPrivilegePrice(exp ,4+"_"+6);
			}
			this.lab_exp.text=exp.toString();
			this.btn_use.x=this.btnRemove.x=757;
		}
		if(PlayerInfo.instance.gold < this.costGold){
			this.lab_upgradGold.color="#ff0000";
		}
		else{
			this.lab_upgradGold.color="#ffffff";
		}
		if(!this.showAdd){
			this.boxCardUpgrade.visible=this.btn_upgrade.visible=this.btn_use.visible=this.boxShowTop.visible=this.btnRemove.visible=false;
			this.img_bigBG.height=this.boxShowTop.y-30;
		}
	}

	__proto.init=function(){
		this.tip_maxLevel.text=LanguageMgr.Ins.GetLan("9007382");
		this.lab_typeCard.text=LanguageMgr.Ins.GetLan("9007322");
		this.lab_show.text=LanguageMgr.Ins.GetLan("9007324");
		this.lab_upgrade.text=LanguageMgr.Ins.GetLan("9007325");
		this.additionBarText.text=LanguageMgr.Ins.GetLan("9020033");
		this.additionBarText.visible=(PlayerInfo.instance.isOpenMasterGrowing || PlayerInfo.instance.isOpenMasterResourceCard);;
		this.getExpBox.visible=false;
		this.setData(SkillMgr.ins.currentInfo,true,SkillMgr.ins.showDown);
	}

	__proto.addEvent=function(){
		this.btn_upgrade.clickHandler=Handler.create(this,this.onUpGrade,null,false);
		this.btn_use.clickHandler=Handler.create(this,this.UseHandler,null,false);
		this.btnRemove.clickHandler=Handler.create(this,this.removeUseHandler,null,false);
		this.btn_close.clickHandler=Handler.create(this,this.onClickClose,null,false);
		this.boxShowTop.on("mousedown",this,this.onShowTopLevel);
		EventMgr.ins.on("SKILL_UPGRADE",this,this.onUpgradeUpdate);
		EventMgr.ins.on("SKILL_UPDATE",this,this.updateRefresh);
	}

	__proto.updateRefresh=function(){
		this.setData(SkillMgr.ins.currentInfo);
	}

	__proto.onShowTopLevel=function(){
		Laya.stage.on("mouseup",this,this.onShowTopLevelUp);
		this.boxShowTop.gray=true;
		var value=ConfigModel.getConfigData(1015).ConfigValue.split(",")[int(this.mSkillData.Quality)+1];
		SkillMgr.ins.skillID=this.mSkillData.SkillID;
		var num=1;
		if(value>=10)num=2;
		var skillId=parseInt(this.mSkillData.BasicSkill.toString().substr(0,this.mSkillData.BasicSkill.toString().length-num)+value);
		var oldSkillVO=SkillModel.getSkillConfigData(skillId);
		var skillVO=new SkillVO();
		skillVO.SkillID=oldSkillVO.SkillID;
		skillVO.CostActPoint=oldSkillVO.CostActPoint;
		skillVO.Level=oldSkillVO.Level;
		skillVO.Type=oldSkillVO.Type;
		skillVO.Quality=oldSkillVO.Quality;
		skillVO.CostSkillPoint=oldSkillVO.CostSkillPoint;
		skillVO.Name=oldSkillVO.Name;
		skillVO.NextSkill=oldSkillVO.NextSkill;
		skillVO.Sort=oldSkillVO.Sort;
		skillVO.SubType=oldSkillVO.SubType;
		skillVO.BasicSkill=oldSkillVO.BasicSkill;
		skillVO.Display=oldSkillVO.Display;
		skillVO.skillCard=0;
		skillVO.IsHave=false;
		skillVO.cardBtnInfo=oldSkillVO.cardBtnInfo;
		this.setData(skillVO,this.IsBattleDeck,false,true);
	}

	__proto.onShowTopLevelUp=function(){
		Laya.stage.off("mouseup",this,this.onShowTopLevelUp);
		this.boxShowTop.gray=false;
		var skillVO=SkillModel.getSkillConfigData(SkillMgr.ins.skillID);
		this.setData(skillVO,this.IsBattleDeck,true,true);
	}

	__proto.onUpgradeUpdate=function(){
		var skillID=SkillMgr.ins.skillInfo.skillID;
		console.log("onUpgradeUpdate",skillID,this.mSkillData.NextSkill);
		if(skillID !=0){
			var skillNextInfo=SkillModel.getSkillConfigData(skillID);
			skillNextInfo.slot=SkillMgr.ins.skillInfo.slot;
			skillNextInfo.skillCard=SkillMgr.ins.skillInfo.skillCard;
			this.setData(skillNextInfo,this.IsBattleDeck);
			SoundMgr.instance.playSound(4006029);
			if(this.mSkillData.NextSkill > 0){
				UIMgr.ins.openView("CardUpdateEffectView",Handler.create(this,this.onViewComplete));
			}
		}
		if(NewGuideMgr.ins.curNodeId==140){
			console.log("CardMessageView onUpgradeUpdate");
			this.onClickClose();
		}
	}

	__proto.onUpGrade=function(){
		var _$this=this;
		if(Browser.now()-this._lastCreatTime < 2000){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("10001135"));
			return;
		}
		this._lastCreatTime=Browser.now();
		if(PlayerInfo.instance.gold < this.costGold){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007381",this.costGold));
			return;
		}
		if(this.btn_upgrade.gray==true){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007380",this.mSkillData.CostSkillPoint));
			return;
		}
		SocketManager.Instance.out.sendSkillUpgrade(this.mSkillData.SkillID);
		this.txtExp.text="+"+this.lab_exp.text;
		this.getExpBox.visible=true;
		Tween.to(this.getExpBox,{y:-30},1000,null,Handler.create(this,function(){
			_$this.getExpBox.y=15;
			_$this.getExpBox.visible=false;
			_$this.getExpBox.alpha=1;
			Tween.clearAll(_$this.getExpBox);
		}));
	}

	__proto.onViewComplete=function(view){
		var preSkillVO=SkillModel.getSkillConfigByPre(this.mSkillData.SkillID);
		var preData=SkillModel.getSkillPerformanceBySkillId(preSkillVO.Display);
		view.setData(this.mSkillData,preData);
	}

	__proto.removeUseHandler=function(){
		SkillMgr.ins.changeUserSkill(this.mSkillData.SkillID,-1);
		console.log("CardMessageView removeUseHandler");
		this.onClickClose();
	}

	__proto.UseHandler=function(){
		if(Browser.now()-this._lastCreatTime < 1000){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("10001135"));
			return;
		}
		this._lastCreatTime=Browser.now();
		SkillMgr.ins.skillInfo=SkillMgr.ins.model.getHasCard(this.mSkillData.SkillID);
		var pos=SkillMgr.ins.getCurrentCount();
		var max=SkillMgr.ins.model.getMaxUserSkillNum();
		if(pos>=max){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("14300070"));
			}else{
			SkillMgr.ins.changeUserSkill(this.mSkillData.SkillID,pos);
			console.log("CardMessageView UseHandler");
			this.onClickClose();
		}
	}

	__proto.onClickClose=function(){
		if(!this.mSkillData.IsHave){
			EventMgr.ins.event("UPDATE_SELECT_INDEX");
		}
		UIMgr.ins.closeView("CardMessageView",true,false);
	}

	__proto.closeHandler=function(e){
		console.log("CardMessageView closeHandler");
		if(!this.mSkillData.IsHave){
			EventMgr.ins.event("UPDATE_SELECT_INDEX");
		}
		UIMgr.ins.closeView("CardMessageView",true,false);
		laya.ui.Window.prototype.closeHandler.call(this,e);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.mList.renderHandler){
			this.mList.renderHandler.recover();
			this.mList.renderHandler=null;
		}
		Tween.clearAll(this);
		Laya.stage.off("mouseup",this,this.onShowTopLevelUp);
		this.boxShowTop.off("mousedown",this,this.onShowTopLevel);
		EventMgr.ins.off("SKILL_UPGRADE",this,this.onUpgradeUpdate);
		EventMgr.ins.off("SKILL_UPDATE",this,this.updateRefresh);
		SkillMgr.ins.showDown=true;
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return CardMessageView;
})(CardMessageViewUI)


/**
*技能展示界面（只能用于技能其它界面点击技能卡）
*@author baohua.chen
*
*/
//class modules.skill.sonView.CardShowMessageView extends ui.skill.sonView.CardShowMessageViewUI
var CardShowMessageView=(function(_super){
	function CardShowMessageView(){
		this.skillVo=null;
		this.mSkillData=null;
		this.attributes=null;
		CardShowMessageView.__super.call(this);
		this.viewType="CardShowMessageView";
		this.addEvent();
		this.initView();
	}

	__class(CardShowMessageView,'modules.skill.sonView.CardShowMessageView',_super);
	var __proto=CardShowMessageView.prototype;
	__proto.initView=function(){
		this.skillVo=SkillMgr.ins.currentInfo;
		this.mSkillData=SkillModel.getSkillPerformanceBySkillId(this.skillVo.Display);
		this.lab_title.text=LanguageMgr.Ins.GetLan("9007379",this.skillVo.Level)+" "+LanguageMgr.Ins.GetLan(this.mSkillData.NameDisplay.toString());
		this.txt_area.text=LanguageMgr.Ins.GetLan(this.mSkillData.Description);
		this.lab_type.text=LanguageMgr.Ins.GetLan("9007313").split(",")[this.skillVo.Type];
		this.lab_type.text=LanguageMgr.Ins.GetLan("9007313").split(",")[this.skillVo.Type];
		this.lab_typeCard.text=LanguageMgr.Ins.GetLan("9007322");
		this.card.skillVo=this.skillVo;
		this.initSkillDes();
		this.initAttributes();
		if(this.attributes.length > 2){
			this.neicengBG.height=91;
			this.bg.height=453;
			this.msgBg.height=307;
		}
		else{
			this.neicengBG.height=49;
			this.bg.height=400;
			this.msgBg.height=267;
		}
	}

	/**
	*技能描述
	**/
	__proto.initSkillDes=function(){
		this.labGroup.visible=false;
		this.imgBG.visible=false;
		if(this.mSkillData.GroupDescription.indexOf(",")!=-1){
			var ary=this.mSkillData.GroupDescription.split(",");
			this.labGroup.visible=true;
			this.imgBG.visible=true;
			var name0="<span style='font-size:18px;face:Arial;bold:true;color:#ff7700;'>"+LanguageMgr.Ins.GetLan(ary[0]).split("|")[0]+"</span>";
			var dec0=LanguageMgr.Ins.GetLan(ary[0]).split("|")[1];
			var name1="<span style='font-size:18px;face:Arial;bold:true;color:#ff7700;'>"+LanguageMgr.Ins.GetLan(ary[1]).split("|")[0]+"</span>";
			var dec1=LanguageMgr.Ins.GetLan(ary[1]).split("|")[1];
			this.labGroup.text=name0+":"+dec0+"<br/>"+name1+":"+dec1;
		}
		else{
			if(parseInt(this.mSkillData.GroupDescription)!=0){
				this.labGroup.visible=true;
				this.imgBG.visible=true;
				var name="<span style='font-size:18px;face:Arial;bold:true;color:#ff7700;'>"+LanguageMgr.Ins.GetLan(this.mSkillData.GroupDescription).split("|")[0]+"</span>";
				var dec=LanguageMgr.Ins.GetLan(this.mSkillData.GroupDescription).split("|")[1];
				this.labGroup.text=name+":"+dec;
			}
		}
	}

	/**
	*初始化属性列表
	*/
	__proto.initAttributes=function(){
		this.attributes=[];
		this.attributes=this.mSkillData.AttributeDescription.split(",");
		if(this.attributes.length>4)this.attributes=this.attributes.slice(0,4);
		this.mList.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
		this.mList.array=this.attributes;
		this.mList.refresh();
	}

	__proto.onRenderHandler=function(item,index){
		if(index < this.mList.array.length){
			item.setData(this.mList.array[index]);
		}
	}

	__proto.addEvent=function(){
		this.btn_close.on("click",this,this.onClickClose);
	}

	__proto.onClickClose=function(){
		UIMgr.ins.closeView("CardShowMessageView",true,false);
	}

	__proto.removeEvent=function(){
		this.btn_close.off("click",this,this.onClickClose);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.removeEvent()
		SkillMgr.ins.showDown=true;
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return CardShowMessageView;
})(CardShowMessageViewUI)


/**
*卡牌升级动画制作
*@author weiqiang.huang
*
*/
//class modules.skill.sonView.CardUpdateEffectView extends ui.skill.sonView.CardUpdateEffectViewUI
var CardUpdateEffectView=(function(_super){
	function CardUpdateEffectView(){
		this.mSkillData=null;
		this.mSkillPerData=null;
		this.attributes=null;
		this.nextAttAry=null;
		CardUpdateEffectView.__super.call(this);
		this.init();
	}

	__class(CardUpdateEffectView,'modules.skill.sonView.CardUpdateEffectView',_super);
	var __proto=CardUpdateEffectView.prototype;
	__proto.init=function(){
		this.additionBar.setPrivilegeVO(PrivilegeModel.getItemDataByTypes(3+"_"+3));
		this.additionBar.visible=PlayerInfo.instance.isOpenMasterResourceCard;
		this.lists.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
		this.btn_back.clickHandler=Handler.create(this,this.onBackHandler,null,false);
		this.btn_share.clickHandler=Handler.create(this,this.onShareHandler,null,false);
		this.btn_upgrade.clickHandler=Handler.create(this,this.onUpgradeHandler,null,false);
		EventMgr.ins.on("UPDATE_SHARE_RESPONSE",this,this.onShareResponse);
		EventMgr.ins.on("SHARE_COMPLETE_CLOSE_CARDEFFECT",this,this.onBackHandler);
	}

	__proto.onShareResponse=function(res){
		var info=res.shareUserInfo;
		if(info && info.type==ShareConst.SKILL_LEVEL_UP){
			this.updateShareTips();
		}
	}

	__proto.onShareHandler=function(){
		var shareDes=LanguageMgr.Ins.GetLan(this.mSkillPerData.Description);
		var url=UrlParam.ROOTURL+"assets/textrue/share/skill/"+this.mSkillPerData.Icon;
		var param={};
		param.imgURL=url;
		param.titleStr=shareDes;
		var arr=[];
		arr[0]=ShareConst.SKILL_LEVEL_UP;
		arr[1]=param;
		EventMgr.ins.event("SHARE",[arr]);
	}

	__proto.onUpgradeHandler=function(){
		SocketManager.Instance.out.sendSkillUpgrade(this.mSkillData.SkillID);
	}

	__proto.onBackHandler=function(){
		this.onResetHandler();
	}

	// Tween.to(this,{x:this.x-30,y:this.y+150,scaleX:0,scaleY:0},500,null,Handler.create(this,this.onResetHandler));
	__proto.onRenderHandler=function(item,index){
		if(this.destroyed)return;
		if(index < this.lists.array.length && this.nextAttAry){
			item.setData(this.lists.array[index],this.nextAttAry[index],true,true,"#ffffff",false);
		}
	}

	__proto.updateShareTips=function(){
		var shareInfo=ShareMgr.ins.checkShareInfo(ShareConst.SKILL_LEVEL_UP);
		var cardLevelCount=shareInfo==null ? 0 :shareInfo.count;
		var array=ConfigModel.getConfigData(1101).ConfigValue.split(",");
		var totalCount=parseInt(array[1]);
		this.shareTips.visible=cardLevelCount < totalCount;
		if(this.shareTips.visible==true){
			var gemsCount=array[0].split("|")[1];
			var decStr=LanguageMgr.Ins.GetLan("12300002",totalCount-cardLevelCount,totalCount,gemsCount);
			this.shareTips.setTipData(decStr,250);
		}
	}

	__proto.setData=function($skillVO,$skillPerformanceVO){
		this.updateShareTips();
		this.boxBtn.visible=false;
		this.scaleX=1;
		this.scaleY=1;
		this.lists.visible=false;
		this.mSkillData=$skillVO;
		this.mSkillPerData=$skillPerformanceVO;
		this.labName.text=LanguageMgr.Ins.GetLan(SkillModel.getSkillPerformanceBySkillId(this.mSkillData.Display).NameDisplay);
		this.card.skillVo=this.mSkillData;
		this.attributes=[];
		this.attributes=this.mSkillPerData.AttributeDescription.split(",");
		if (this.mSkillData.SkillID > 0){
			var skillInfo=SkillModel.getSkillConfigData(this.mSkillData.SkillID);
			var skillPerInfo=SkillModel.getSkillPerformanceBySkillId(skillInfo.Display);
			this.nextAttAry=[];
			this.nextAttAry=skillPerInfo.AttributeDescription.split(",");
		}
		if (this.nextAttAry.length==4){
			this.attributes.splice(3,0,null);
		}
		this.txtLevel0.text="LV."+(this.mSkillData.Level-1);
		this.txtLevel1.text="LV."+this.mSkillData.Level;
		this.lists.array=this.attributes;
		this.lists.repeatX=this.nextAttAry.length > 3 ? 2 :1;
		this.lists.repeatY=this.nextAttAry.length;
		this.lists.refresh();
		this.lists.x=this.nextAttAry.length > 3 ? 280 :420;
		this.imgBgLeft.height=this.imgBgRight.height=33+(this.nextAttAry.length > 3 ? 3 :this.nextAttAry.length)*55;
		var isMaxGrade=this.mSkillData.NextSkill==0;
		if (isMaxGrade || PlayerInfo.instance.gold < this.mSkillData.CostGold || (this.mSkillData.skillCard < this.mSkillData.CostSkillPoint || this.mSkillData.CostSkillPoint==0)){
			this.boxBtn.x=370;
			this.btn_upgrade.visible=false;
			this.additionBar.visible=false;
		}
		else{
			this.boxBtn.x=265;
			this.btn_upgrade.visible=true;
			var costGold=this.mSkillData.CostGold;
			if(PlayerInfo.instance.isOpenMasterResourceCard){
				costGold=PrivilegeModel.getPrivilegePrice(costGold,3+"_"+3);
			}
			this.lab_upgradGold.text=costGold.toString();
		};
		var effect=new AniSkeleton("ui12","ui",0,false,Handler.create(this,function(effect){
			effect && effect.destroy();
			effect=null;
		},null,false));
		effect.pos(558,215);
		effect.scale(1.2,1.2);
		this.addChild(effect);
		this.onCardEffectComplete();
	}

	__proto.onCardEffectComplete=function(){
		var _$this=this;
		this.lists.visible=true;
		var len=this.attributes.length;
		for (var i=0;i < len;i++){
			var item=(this.lists.getCell(i));
			Tween.from(item,{x:20},200,null,null,i*100);
		}
		Laya.timer.once(len*200,this,function(){
			_$this.boxBtn.visible=true;
		});
	}

	// }
	__proto.onResetHandler=function(){
		UIMgr.ins.closeView("CardUpdateEffectView");
		if(PlayerInfoMgr.ins.IsLevelUp && SkillMgr.ins.isInSkillView){
			PlayerInfoMgr.ins.IsLevelUp=false;
			UIMgr.ins.openView("LevelUp");
		}
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.lists.renderHandler){
			this.lists.renderHandler.recover();
			this.lists.renderHandler=null;
		}
		if(this.lists.renderHandler){
			this.lists.renderHandler.recover();
			this.lists.renderHandler=null;
		}
		Tween.clearAll(this);
		EventMgr.ins.event("guide_closeBtn");
		EventMgr.ins.off("UPDATE_SHARE_RESPONSE",this,this.onShareResponse);
		EventMgr.ins.off("SHARE_COMPLETE_CLOSE_CARDEFFECT",this,this.onBackHandler);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
		this.mSkillData=null;
		this.mSkillPerData=null;
		this.attributes && (this.attributes.length=0);
		this.attributes=null;
		this.nextAttAry && (this.nextAttAry.length=0);
		this.nextAttAry=null;
	}

	__proto.closeHandler=function(e){}
	__proto.onBoxCardEffect=function(){
		Tween.from(this.card,{scaleX:1.1,scaleY:1.1},1000,null,Handler.create(this,this.onBoxCardEffect));
	}

	return CardUpdateEffectView;
})(CardUpdateEffectViewUI)


/**
*标准提示框
*@author weiqiang.huang
*@modify by zhihua.zhou 2017-8-16
*/
//class modules.tips.AlertDialog extends ui.tips.AlertDialogUI
var AlertDialog=(function(_super){
	function AlertDialog(){
		this.okHandler=null;
		this.noHandler=null;
		this.clickCloseHandler=null;
		AlertDialog.__super.call(this);
	}

	__class(AlertDialog,'modules.tips.AlertDialog',_super);
	var __proto=AlertDialog.prototype;
	__proto.onNo=function(){
		if(this.noHandler){
			this.noHandler.run();
		}
		this.onClose();
	}

	__proto.onYes=function(){
		if(this.okHandler){
			this.okHandler.run();
		}
		this.onClose();
	}

	__proto.onClickClose=function(){
		if(this.clickCloseHandler){
			this.clickCloseHandler.run();
		}
		this.onClose();
	}

	/**
	*提示框初始化
	*@param title 标题
	*@param content 内容
	*@param yes 确认按钮文字
	*@param no 取消按钮文字
	*@param okcallBack 确认回调函数
	*@param noCallBack 取消回调函数
	*/
	__proto.init=function(title,content,ok,no,okcallBack,nocancelBack,closeCallBack){
		(title===void 0)&& (title="");
		(content===void 0)&& (content="");
		(ok===void 0)&& (ok="");
		(no===void 0)&& (no="");
		this.btnYes.clickHandler=new Handler(this,this.onYes);
		this.btnNo.clickHandler=new Handler(this,this.onNo);
		this.btnClose.clickHandler=new Handler(this,this.onClickClose);
		if (title==""){
			title=LanguageMgr.Ins.GetLan("9007368");
		}
		this.txt_title.text=title;
		this.lab_content.text=content;
		if (no==""){
			this.btnNo.visible=false;
			this.btnYes.x=301;
		}
		else{
			this.btnNo.label=no;
			this.btnNo.visible=true;
			this.btnYes.x=190;
		}
		if (ok !=""){
			this.btnYes.label=ok;
		}
		else{
			this.btnYes.label=LanguageMgr.Ins.GetLan("9002240");
		}
		this.okHandler=okcallBack;
		this.noHandler=nocancelBack;
		this.clickCloseHandler=closeCallBack;
		this.btnClose.visible=this.clickCloseHandler !=null;
		this.popup();
	}

	/**设置成沉默模式 */
	__proto.setBySilence=function(props){
		props.hasOwnProperty('title')&& (this.txt_title.text=props.title);
		props.hasOwnProperty('content')&& (this.lab_content.text=props.content);
		this._layer=LayerMgr.ins.flyWordLayer;
		this.showView()
		this._maskBg.off("click",this,this.closeHandler);
		this.btnConfirm.visible=true
		this.btnClose.visible=false
		this.btnYes.visible=false;
		this.btnNo.visible=false;
		this.btnConfirm.clickHandler=Handler.create(this,this.hideView);
	}

	__proto.popup=function(){
		LayerMgr.ins.addToLayer(this,3);
	}

	__proto.closeHandler=function(e){
		if(this.clickCloseHandler){
			this.clickCloseHandler.run();
			this.onClose();
		}
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("AlertDialog",true,false);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.okHandler=null;
		this.noHandler=null;
		this.clickCloseHandler=null;
		laya.ui.Window.prototype.destroy.call(this);
	}

	return AlertDialog;
})(AlertDialogUI)


//class modules.tips.CardTips extends ui.tips.CardTipsUI
var CardTips=(function(_super){
	function CardTips(){
		this._type=0;
		this._shopItem=null;
		CardTips.__super.call(this);
		this.btnClose.on("click",this,this.onClose);
	}

	__class(CardTips,'modules.tips.CardTips',_super);
	var __proto=CardTips.prototype;
	__proto.setData=function(itemID,type){
		(type===void 0)&& (type=0);
		this._type=type;
		var shopID=parseInt("636000"+type);
		this._shopItem=ShopModel.getShopConfigByID(shopID);
		var item=ItemModel.getItemConfigData(itemID);
		this.imgIcon.skin="assets/textrue/itemicon/"+item.Icon+".png";
		this.btnBuy.label=this._shopItem.Price+"";
		this.labTitle.text=LanguageMgr.Ins.GetLan(item.Name);
		this.labContent.text=LanguageMgr.Ins.GetLan(item.Desc);
		this.btnBuy.on("click",this,this.onSendBuy);
	}

	__proto.onSendBuy=function(){
		if(PlayerInfo.instance.pinkDiamond < this._shopItem.Price){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007370"));
			return;
		}
		SocketManager.Instance.out.reqShopBuy(11,this._shopItem.ID,1);
		this.onClose();
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("CardTips");
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.btnClose.off("click",this,this.onClose);
		this.btnBuy.off("click",this,this.onSendBuy);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return CardTips;
})(CardTipsUI)


/**
*游戏公告
*@author weiqiang.huang
*
*/
//class modules.tips.GameNoticeTips extends ui.tips.GameNoticeTipsUI
var GameNoticeTips=(function(_super){
	function GameNoticeTips(){
		this.prevX=0;
		this.prevY=0;
		this.isExit=false;
		GameNoticeTips.__super.call(this);
		this._layer=LayerMgr.ins.flyWordLayer;
		this.init();
	}

	__class(GameNoticeTips,'modules.tips.GameNoticeTips',_super);
	var __proto=GameNoticeTips.prototype;
	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this,$x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName);
		if(TipsManager.Instance().topicMsgInfo !=null){
			var isExit=TipsManager.Instance().topicMsgInfo.type==1 ? true :false;
			this.setData(TipsManager.Instance().topicMsgInfo.title,TipsManager.Instance().topicMsgInfo.content,isExit);
			if(isExit){
				EventMgr.ins.event("recv_marquee_scroll",[TipsManager.Instance().topicMsgInfo.content]);
			}
		}
	}

	__proto.setData=function(title,content,$isExit){
		($isExit===void 0)&& ($isExit=true);
		this.isExit=$isExit;
		this.labTitle.text=title;
		this.txtContent.text=content;
		this.txtContent.height=this.txtContent['measureHeight'];
	}

	__proto.init=function(){
		this.btnOK.clickHandler=new Handler(this,this.onCloseWindow);
	}

	__proto.onCloseWindow=function(){
		if(this.isExit){
			importJS("js/modules/qqsdk.js?v=2.0.0",function(){
				modules.qqsdk.H5jssdkManager.instance.sendCloseWindow();
			});
		}
		UIMgr.ins.closeView("GameNoticeTips",true);
	}

	/*开始滚动文本 */
	__proto.startScrollText=function(e){}
	/*停止滚动文本 */
	__proto.finishScrollText=function(e){}
	/*鼠标滚动文本 */
	__proto.scrollText=function(e){}
	// prevY=nowY;
	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return GameNoticeTips;
})(GameNoticeTipsUI)


//class modules.tips.LoseConnectDialog extends ui.tips.LoseConnectUI
var LoseConnectDialog=(function(_super){
	function LoseConnectDialog(){
		LoseConnectDialog.__super.call(this);
		this._layer=LayerMgr.ins.topLayer;
		this.notice.text=LanguageMgr.Ins.GetLan("9070095");
	}

	__class(LoseConnectDialog,'modules.tips.LoseConnectDialog',_super);
	var __proto=LoseConnectDialog.prototype;
	// addChild(ani);
	__proto.closeHandler=function(e){}
	return LoseConnectDialog;
})(LoseConnectUI)


//class modules.treasureBox.TreasureBoxDetailTips extends ui.treasureBox.TreasureBoxDetailTipsUI
var TreasureBoxDetailTips=(function(_super){
	function TreasureBoxDetailTips(){
		this._eventdispatch=null;
		this._isInit=false;
		this._openLastTime=0;
		this._data=null;
		this._box=null;
		TreasureBoxDetailTips.__super.call(this);}
	__class(TreasureBoxDetailTips,'modules.treasureBox.TreasureBoxDetailTips',_super);
	var __proto=TreasureBoxDetailTips.prototype;
	__proto.init=function(){
		var self=this;
		if(self._isInit)return;
		self._isInit=true;
		self._eventdispatch=new EventDispatcher();
		self.titleText.text="";
		self.list_1.array=[];
		self.list_2.array=[];
		self.decText.text=LanguageMgr.Ins.GetLan("9070090");
		self.addEvent();
	}

	__proto.addEvent=function(){
		var self=this;
		self.list_1.renderHandler=Handler.create(self,self.onRenderList_1,null,false);
		self.list_2.renderHandler=Handler.create(self,self.onRenderList_2,null,false);
	}

	__proto.removeEvent=function(){
		var self=this;
		Laya.timer.clearAll(self);
	}

	__proto.onRenderList_1=function($item,$index){
		var data=this.list_1.array[$index];
		this.changeItemStyle($item,data);
	}

	__proto.onRenderList_2=function($item,$index){
		var data=this.list_2.array[$index];
		this.changeItemStyle($item,data);
	}

	/**
	*修改Item样式
	*@param $$item
	*@param data
	*/
	__proto.changeItemStyle=function($item,data){
		if(!data){
			$item.countText.text="";
			$item.icon.skin="";
			return;
		};
		var id=data.id;
		var num1=data.num1;
		var num2=data.num2;
		var itemVO,itemName;
		switch(id){
			case 1:
				itemVO=ItemModel.getItemConfigData(-10)
				$item.icon.skin='assets/textrue/itemicon/'+itemVO.Icon+'.png'
				itemName=LanguageMgr.Ins.GetLan(""+itemVO.Name);
				$item.icon.width=40;
				$item.icon.height=40;
				break ;
			case 2:
				$item.icon.skin='common/ui_putong.png'
				itemName=LanguageMgr.Ins.GetLan("9007345");
				$item.icon.width=36;
				$item.icon.height=36;
				break ;
			case 3:
				$item.icon.skin='common/ui_teshu.png'
				itemName=LanguageMgr.Ins.GetLan("9007392");
				$item.icon.width=36;
				$item.icon.height=36;
				break ;
			case 4:
				$item.icon.skin='common/item_tips_ui_shishi.png'
				itemName=LanguageMgr.Ins.GetLan("9002299");
				$item.icon.width=36;
				$item.icon.height=36;
				break ;
			case 5:
				$item.icon.skin='common/item_tips_ui_chuanqi.png'
				itemName=LanguageMgr.Ins.GetLan("9002300");
				$item.icon.width=36;
				$item.icon.height=36;
				break ;
			case 6:
				itemVO=ItemModel.getItemConfigData(-20)
				$item.icon.skin='assets/textrue/itemicon/'+itemVO.Icon+'.png'
				itemName=LanguageMgr.Ins.GetLan(""+itemVO.Name);
				$item.icon.width=36;
				$item.icon.height=36;
				break ;
			case 7:
				itemVO=ItemModel.getItemConfigData(-60)
				$item.icon.skin='assets/textrue/itemicon/'+itemVO.Icon+'.png'
				itemName=LanguageMgr.Ins.GetLan(""+itemVO.Name);
				$item.icon.width=36;
				$item.icon.height=36;
				break ;
			}
		$item.countText.text=(num2>0 ? num1+" - "+num2 :"x "+num1);
	}

	/**
	*设置数据
	*@param $data :宝箱物品数据
	*@param $isTipsBox :是否为提示宝箱
	*/
	__proto.setData=function($data,$isTipsBox){
		($isTipsBox===void 0)&& ($isTipsBox=false);
		var self=this;
		self._data=$data;
		if(!self._isInit){
			self.init();
		};
		var openingBoxNum=TreasureBoxMgr.ins.openingBoxNum;
		self._openLastTime=(self._data.EndTime-TimeManager.Instance.NowTime())/1000;
		self._openLastTime < 0 && (self._openLastTime=0);
		self.titleText.text=LanguageMgr.Ins.GetLan(""+self._data.Name);
		var itemList_1=[],itemList_2=[];
		var paramArr=self._data.Param2.split(",");
		var item,arr,id=0;
		for (var i=0,len=paramArr.length;i < len;i++){
			item=paramArr[i];
			arr=item.split("|");
			id=parseInt(arr[0]);
			if(id >=3 && id <=5){
				itemList_2.push({id:id,num1:parseInt(arr[1]),num2:parseInt(arr[2])});
			}
			else {
				itemList_1.push({id:id,num1:parseInt(arr[1]),num2:parseInt(arr[2])});
			}
		};
		var topSortRule={6:1,7:2,1:3,2:4 }
		itemList_2.sort(function(a,b){
			return topSortRule[a.id] > topSortRule[b.id]
		});
		itemList_1.sort(function(a,b){
			return a.id-b.id
		});
		self.list_1.array=itemList_1;
		self.list_2.array=itemList_2;
		if(itemList_2.length > 0){
			self.listBg.visible=true;
			self.decText.visible=true;
			self.list_2.y=self.list_1.y+self.list_1.height+10;
			self.listBg.y=self.list_2.y;
			self.listBg.height=self.list_2.height+10;
			self.decText.y=self.listBg.y+16;
			self.decText.height=self.list_2.height;
			self.bg.height=self.listBg.y+self.listBg.height+8;
		}
		else {
			self.listBg.visible=false;
			self.decText.visible=false;
			self.bg.height=self.list_1.y+self.list_1.height+10;
		}
		self._box=new AniSkeleton(self._data.OpenBoxAnim,"npc",0,false,Handler.create(this,this.onStopHandler,null,false));
		self._box.width=210;
		self._box.height=200;
		self.boxItem.addChild(self._box);
		self._box.play("open",false);
	}

	__proto.onStopHandler=function(){
		if(!this._box)return;
		switch(this._box.nameOrIndex){
			case "open":
				this._box.play("idle",true);
				break ;
			}
	}

	/**关闭界面 **/
	__proto.onClose=function(){
		UIMgr.ins.closeView("TreasureBoxDetailTips");
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this);
		this.init();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		self._isInit=false;
		self._box && self._box.destroy();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
		self._box=null;
		self._data=null;
	}

	return TreasureBoxDetailTips;
})(TreasureBoxDetailTipsUI)


//class modules.treasureBox.TreasureBoxDetailWindow extends ui.treasureBox.TreasureBoxDetailWindowUI
var TreasureBoxDetailWindow=(function(_super){
	function TreasureBoxDetailWindow(){
		this._eventdispatch=null;
		this._moneyValue=0;
		//钻石消耗
		this._clock=null;
		//时钟
		this._cdCardSpeedTime=0;
		//CD卡加速时间(毫秒)
		this._isInit=false;
		this._openNowUseNum=0;
		//立即开启消耗钻石数量
		this._useCdCardNum=0;
		this._openLastTime=0;
		this._data=null;
		this._box=null;
		TreasureBoxDetailWindow.__super.call(this);}
	__class(TreasureBoxDetailWindow,'modules.treasureBox.TreasureBoxDetailWindow',_super);
	var __proto=TreasureBoxDetailWindow.prototype;
	__proto.init=function(){
		var self=this;
		if(self._isInit)return;
		self._isInit=true;
		self._eventdispatch=new EventDispatcher();
		self.titleText.text="";
		self.speedUpCardText.text=LanguageMgr.Ins.GetLan("14300059",FriendsMgr.ins.cdCardNum,FriendsMgr.ins.cdCardMax);
		self.list_1.array=[];
		self.list_2.array=[];
		self.decText.text=LanguageMgr.Ins.GetLan("9070090");
		self.cantLockedTiptext.text=LanguageMgr.Ins.GetLan("9007373");
		self.cantLockedTiptext.y=LanguageMgr.Ins.isChinese ? 200 :192;
		self.timeDownText.text=LanguageMgr.Ins.GetLan("9007348");
		self.timerText.text="";
		self.openNowBtnText.text=LanguageMgr.Ins.GetLan("9007349");
		self.openNowUseText.text="";
		self.cdOpenBtnText.text=LanguageMgr.Ins.GetLan("14300065",0);
		self.cdOpenUseText.text="";
		self.unlockBtnText.text=LanguageMgr.Ins.GetLan("9007401");
		self.txt_adBtn.text=LanguageMgr.Ins.GetLan("14300206");
		self.openNowBtn.visible=true;
		self.showAdBtn.visible=false;
		self._moneyValue=parseInt(ConfigModel.getConfigData(1093).ConfigValue)*1000;
		self._clock=new AniSkeleton("assets/animation/uieffect/ui3.sk");
		self.addChild(self._clock);
		self._clock.visible=false;
		var configVO=ConfigModel.getConfigData(1125);
		var cd=parseInt(configVO.ConfigValue);
		cd==0 && (cd=1800);
		self._cdCardSpeedTime=cd *1000;
		self.addEvent();
	}

	__proto.addEvent=function(){
		var self=this;
		self.unlockBtn.clickHandler=Handler.create(self,self.onUnlockHandler,null,false);
		self.cdOpenBtn.clickHandler=Handler.create(self,self.onUseCDCardHandler,null,false);
		self.openNowBtn.clickHandler=Handler.create(self,self.onOpenNowHandler,null,false);
		self.showAdBtn.clickHandler=Handler.create(self,self.onShowAdHandler,null,false);
		self.closeBtn.clickHandler=Handler.create(self,self.onClose,null,false);
		self.list_1.renderHandler=Handler.create(self,self.onRenderList_1,null,false);
		self.list_2.renderHandler=Handler.create(self,self.onRenderList_2,null,false);
	}

	__proto.removeEvent=function(){
		var self=this;
		Laya.timer.clearAll(self);
	}

	/**播放广告 **/
	__proto.onShowAdHandler=function(){
		var maxRewardNum=ConfigModel.getConfigData(1143).ConfigValue;
		if(ADMgr.ins.rewardNum >=maxRewardNum){
			TipsManager.Instance().showLanTips(14300413);
			return;
		};
		var msg=new com.road.ddt.proto.AdvertiseRewardMsg();
		msg.type=3;
		msg.state=-1;
		SocketManager.Instance.sendSocketData(0x290a,msg);
		FBInterfaceMgr.ins.showAsync(Handler.create(this,this.onPlayOver),Handler.create(this,this.onPlayError));
	}

	__proto.onPlayOver=function(){
		ADMgr.ins.sendGetADReward(3,true);
		this.onClose();
	}

	__proto.onPlayError=function(){
		ADMgr.ins.sendGetADReward(3,false);
	}

	/**立即打开 **/
	__proto.onOpenNowHandler=function(){
		var self=this;
		if(PlayerInfo.instance.pinkDiamond < self._openNowUseNum){
			TipsManager.Instance().showTips(LanguageMgr.Ins.GetLan("9007370"));
			return;
		}
		SocketManager.Instance.out.sendCleanBoxTime(self._data.Id);
		self.onClose();
	}

	/**使用加速卡 **/
	__proto.onUseCDCardHandler=function(){
		FriendsMgr.ins.sendUseCdCard(this._data.Id);
		this.onClose();
	}

	/**解锁 **/
	__proto.onUnlockHandler=function(){
		var self=this;
		if(self._data.isLocked){
			SoundMgr.instance.playSound(4006021);
			SocketManager.Instance.out.sendOpenLockedBox(self._data.Id);
		}
	}

	__proto.onRenderList_1=function($item,$index){
		var data=this.list_1.array[$index];
		this.changeItemStyle($item,data);
	}

	__proto.onRenderList_2=function($item,$index){
		var data=this.list_2.array[$index];
		this.changeItemStyle($item,data);
	}

	/**
	*修改Item样式
	*@param $$item
	*@param data
	*/
	__proto.changeItemStyle=function($item,data){
		if(!data){
			$item.countText.text="";
			$item.icon.skin="";
			return;
		};
		var id=data.id;
		var num1=data.num1;
		var num2=data.num2;
		var itemVO,itemName;
		switch(id){
			case 1:
				itemVO=ItemModel.getItemConfigData(-10)
				$item.icon.skin='assets/textrue/itemicon/'+itemVO.Icon+'.png'
				itemName=LanguageMgr.Ins.GetLan(""+itemVO.Name);
				$item.icon.width=40;
				$item.icon.height=40;
				break ;
			case 2:
				$item.icon.skin='common/ui_putong.png'
				itemName=LanguageMgr.Ins.GetLan("9007345");
				$item.icon.width=36;
				$item.icon.height=36;
				break ;
			case 3:
				$item.icon.skin='common/ui_teshu.png'
				itemName=LanguageMgr.Ins.GetLan("9007392");
				$item.icon.width=36;
				$item.icon.height=36;
				break ;
			case 4:
				$item.icon.skin='common/item_tips_ui_shishi.png'
				itemName=LanguageMgr.Ins.GetLan("9002299");
				$item.icon.width=36;
				$item.icon.height=36;
				break ;
			case 5:
				$item.icon.skin='common/item_tips_ui_chuanqi.png'
				itemName=LanguageMgr.Ins.GetLan("9002300");
				$item.icon.width=36;
				$item.icon.height=36;
				break ;
			case 6:
				itemVO=ItemModel.getItemConfigData(-20)
				$item.icon.skin='assets/textrue/itemicon/'+itemVO.Icon+'.png'
				itemName=LanguageMgr.Ins.GetLan(""+itemVO.Name);
				$item.icon.width=36;
				$item.icon.height=36;
				break ;
			case 7:
				itemVO=ItemModel.getItemConfigData(-60)
				$item.icon.skin='assets/textrue/itemicon/'+itemVO.Icon+'.png'
				itemName=LanguageMgr.Ins.GetLan(""+itemVO.Name);
				$item.icon.width=36;
				$item.icon.height=36;
				break ;
			}
		$item.countText.text=(num2>0 ? num1+"-"+num2 :"x"+num1);
	}

	/**
	*设置数据
	*@param $data :宝箱物品数据
	*@param $isTipsBox :是否为提示宝箱
	*/
	__proto.setData=function($data){
		var self=this;
		if(self._destroyed)return;
		self._data=$data;
		if(!self._isInit){
			self.init();
		};
		var openingBoxNum=TreasureBoxMgr.ins.openingBoxNum;
		self._openLastTime=(self._data.EndTime-TimeManager.Instance.NowTime())/1000;
		self._openLastTime < 0 && (self._openLastTime=0);
		self.titleText.text=LanguageMgr.Ins.GetLan(""+self._data.Name);
		var itemList_1=[],itemList_2=[];
		var paramArr=self._data.Param2.split(",");
		var item,arr,id=0;
		for (var i=0,len=paramArr.length;i < len;i++){
			item=paramArr[i];
			arr=item.split("|");
			id=parseInt(arr[0]);
			if(id >=3 && id <=5){
				itemList_2.push({id:id,num1:parseInt(arr[1]),num2:parseInt(arr[2])});
			}
			else {
				itemList_1.push({id:id,num1:parseInt(arr[1]),num2:parseInt(arr[2])});
			}
		};
		var topSortRule={6:1,7:2,1:3,2:4 }
		itemList_2.sort(function(a,b){
			return topSortRule[a.id] > topSortRule[b.id]
		});
		itemList_1.sort(function(a,b){
			return a.id-b.id
		});
		self.list_1.array=itemList_1;
		self.list_2.array=itemList_2;
		self.decText.visible=itemList_2.length>0;
		self.lockImg.visible=false;
		if(self._data.isLocked){
			var time=self._data.Time;
			if(PlayerInfo.instance.isOpenMasterResourceCard){
				time=PrivilegeModel.getPrivilegePrice(time,3+"_"+5);
			}
			self.timerText.text=TimeManager.Instance.convertTimeToStr(time);
			self.additionBar.visible=false;
			self.timeDownText.y=173;
			self.timerText.y=200;
		}
		else {
			if(self._openLastTime > 0){
				self.timeDownText.y=110;
				self.timerText.y=137;
				self.onTimerHandler();
				Laya.timer.loop(1000,self,self.onTimerHandler);
			}
			else {
				self.timerText.text=TimeManager.Instance.convertTimeToStr(self._openLastTime);
			}
		}
		if(!self._clock)return;
		self._clock.visible=true;
		self._clock.x=self.timerText.x-20;
		self._clock.y=self.timerText.y+10;
		if(self._data.isLocked && openingBoxNum > 0){
			self.timeDownText.visible=false;
			self.timerText.visible=false;
			self._clock.visible=false;
			self.unlockBtn.visible=false;
			self.cdOpenBtn.visible=false
			self.openNowBtn.visible=true;
			self.lockImg.visible=true;
			self.cantLockedTiptext.visible=true;
			self._openLastTime=self._data.Time;
			self.updateOpenNowUseText();
		}
		else {
			this.timeDownText.visible=true;
			self.timerText.visible=true;
			self.unlockBtn.visible=self._data.isLocked;
			self.cdOpenBtn.visible=self.openNowBtn.visible=!self._data.isLocked;
			self.cantLockedTiptext.visible=false;
		}
		self._box=new AniSkeleton(self._data.OpenBoxAnim,"npc",0,false,Handler.create(this,this.onStopHandler,null,false));
		self._box.width=210;
		self._box.height=200;
		self.boxItem.addChild(self._box);
		self._box.play("open",false);
	}

	__proto.onStopHandler=function(){
		if(!this._box)return;
		switch(this._box.nameOrIndex){
			case "open":
				this._box.play("idle",true);
				break ;
			}
	}

	/**
	*倒计时更新显示
	*/
	__proto.onTimerHandler=function(){
		var self=this;
		self.timerText.text=TimeManager.Instance.convertTimeToStr(self._openLastTime);
		self._openLastTime--;
		self.updateOpenNowUseText();
		self._useCdCardNum=Math.ceil((self._openLastTime *1000)/ self._cdCardSpeedTime);
		var hasCdCardNum=FriendsMgr.ins.cdCardNum;
		if(hasCdCardNum==0){
			self.cdOpenUseText.color="#ff0000";
			self.cdOpenBtn.disabled=true;
		}
		else {
			self.cdOpenUseText.color="#ffffff";
			hasCdCardNum < self._useCdCardNum && (self._useCdCardNum=hasCdCardNum);
			self.cdOpenBtn.disabled=false;
		}
		self.cdOpenUseText.text=""+self._useCdCardNum;
		var speedTimer=(self._useCdCardNum *self._cdCardSpeedTime)/ 1000 / 60 / 60;
		self.cdOpenBtnText.text=LanguageMgr.Ins.GetLan("14300065",speedTimer);
		if(self._openLastTime <=0){
			Laya.timer.clear(self,self.onTimerHandler);
			self.onClose();
		}
	}

	/**
	*更新立即打开钻石消耗
	*/
	__proto.updateOpenNowUseText=function(){
		var self=this;
		if(PlayerInfo.instance.openBoxFree){
			self._openNowUseNum=0;
			self.openNowUseText.color="#ffffff";
			self.openNowUseText.strokeColor="#cc5b00";
			self.openNowUseText.text=LanguageMgr.Ins.GetLan("9020032");
			self.additionBar.visible=false;
			return;
		}
		else if(PlayerInfo.instance.isOpenMasterGrowing){
			var privilegeVO=PrivilegeModel.getItemDataByTypes(3+"_"+5);
			self.additionBar.setPrivilegeVO(privilegeVO);
			self.additionBar.visible=true;
			self._openNowUseNum=Math.ceil((self._openLastTime *1000)/ self._moneyValue);
		}
		else {
			self._openNowUseNum=Math.ceil((self._openLastTime *1000)/ self._moneyValue);
			self.additionBar.visible=false;
		}
		if(PlayerInfo.instance.pinkDiamond < self._openNowUseNum && !Browser.onPC){
			if(!Browser.window.fbConfig.isOpenAds){
				self.showAdBtn.visible=false;
				self.showAdBtn.disabled=true;
				}else{
				self.showAdBtn.visible=true;
				self.showAdBtn.disabled=false;
			}
			self.openNowBtn.visible=false;
		}
		else {
			self.showAdBtn.visible=false;
			self.openNowBtn.visible=true;
			self.openNowUseText.color="#ffffff";
			self.openNowUseText.strokeColor="#cc5b00";
		}
		self.openNowUseText.text=""+self._openNowUseNum;
	}

	/**关闭界面 **/
	__proto.onClose=function(){
		UIMgr.ins.closeView("TreasureBoxDetailWindow");
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this);
		this.init();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		self._isInit=false;
		self._clock && self._clock.destroy();
		self._box && self._box.destroy();
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
		self._clock=null;
		self._box=null;
		self._data=null;
	}

	return TreasureBoxDetailWindow;
})(TreasureBoxDetailWindowUI)


//class modules.treasureBox.TreasureBoxOpenView extends ui.treasureBox.TreasureBoxOpenViewUI
var TreasureBoxOpenView=(function(_super){
	function TreasureBoxOpenView(){
		this.repeatX=5;
		//每行开出物品显示数量
		this._effectCardItem=null;
		//显示飞行效果的卡牌
		this._box=null;
		this._openBoxDatas=null;
		//宝箱开出的PlayerItemInfo数据
		this._itemList=[];
		this._isSpecialCard=false;
		//是否为特殊卡
		this._cardIndex=0;
		this._clickNum=0;
		//当前点击舞台的次数
		this._isPlayEffecting=false;
		this._isShowEffect=false;
		//是否为显示特效状态
		this._isCanSkipEffect=false;
		this._targetPos=new Point();
		TreasureBoxOpenView.__super.call(this);this.isOpenResize=true;}
	__class(TreasureBoxOpenView,'modules.treasureBox.TreasureBoxOpenView',_super);
	var __proto=TreasureBoxOpenView.prototype;
	//是否可跳过特效
	__proto.init=function($openBoxItemId,$openBoxDataList){
		var self=this;
		self.returnBtn.visible=false;
		self.addEvent();
		self._openBoxDatas=$openBoxDataList;
		var boxItem=ItemModel.getItemConfigData($openBoxItemId);
		var effectName=!boxItem ? "box1" :boxItem.OpenBoxAnim;
		self._box=new AniSkeleton(effectName,"npc",0,false,Handler.create(self,self.onBoxStoppedHandler,null,false));
		self._box.stop();
		self.boxPanel.addChild(self._box);
		var len=self._openBoxDatas.length;
		var item,info,initX=56,initY=71;
		for (var i=0;i < len;i++){
			info=self._openBoxDatas[i];
			item=new OpenBoxItem();
			item.data=info;
			item.questionVisible=false;
			item.visible=false;
			item.x=initX+(i % this.repeatX)*140;
			item.y=initY+Math.floor(i/this.repeatX)*162;
			self.box.addChild(item);
			self._itemList.push(item);
		};
		var boxWidth=0,boxHeight=Math.floor((len-1)/this.repeatX)*162
		if(len < this.repeatX){
			boxWidth=len *140;
		}
		else {
			boxWidth=this.repeatX *140;
		}
		self.box.x=((1136-boxWidth)>> 1);
		self.box.y=212-boxHeight;
		self._effectCardItem=new OpenBoxItem();
		self.addChild(self._effectCardItem);
		self._clickNum=0;
		self._cardIndex=0;
		self._isShowEffect=true;
		self.actionShowEffect(false);
		self._box.play("born",false);
	}

	__proto.addEvent=function(){
		var self=this;
		self.returnBtn.on("click",self,self.onClose);
		Laya.stage.on("click",self,self.onClickStage);
	}

	__proto.removeEvent=function(){
		var self=this;
		Laya.stage.off("click",self,self.onClickStage);
		Tween.clearAll(self);
	}

	__proto.onClickStage=function(e){
		var self=this;
		if(!self._isCanSkipEffect)return;
		if(self._clickNum==0){
			self._clickNum++;
			self.clearAvtionCardEffect();
		}
	}

	/**
	*宝箱动作播放完成执行
	*/
	__proto.onBoxStoppedHandler=function(){
		var self=this;
		if(!self._box)return;
		switch(self._box.nameOrIndex){
			case "born":
				self._isCanSkipEffect=true;
				self._box.play("open",false);
				self.flyCardEffect_1();
				break
			}
	}

	/**
	*移除所有显示效果,显示所有卡牌
	*/
	__proto.clearAvtionCardEffect=function(){
		var self=this;
		this._box.play("idle",true);
		self._clickNum=1;
		self._isShowEffect=false;
		var item;
		for (var i=0,len=self._itemList.length;i < len;i++){
			item=self._itemList[i];
			item.visible=true;
		}
		self.tipsImg.visible=false;
		self.returnBtn.visible=true;
		self._effectCardItem.visible=false;
		EventMgr.ins.event("GuideNode_130_Step_3");
	}

	/**
	*显示获得的物品
	*@param $isShowEffect
	*/
	__proto.actionShowEffect=function($isShowEffect){
		($isShowEffect===void 0)&& ($isShowEffect=true);
		var self=this;
		self._isPlayEffecting=false;
		if(!self._isShowEffect)return;
		if(self._cardIndex > 0)
			self._itemList[(self._cardIndex-1)].visible=true;
		if(self._cardIndex >=self._openBoxDatas.length){
			self.clearAvtionCardEffect();
			return;
		}
		self.tipsImg.visible=true;
		self.returnBtn.visible=false;
		var itemInfo=self._openBoxDatas[self._cardIndex];
		var temp=ItemModel.getItemConfigData(itemInfo.itemID);
		var skillInfo=SkillMgr.ins.model.getHasCard(itemInfo.itemID);
		self._effectCardItem.data=itemInfo;
		self._effectCardItem.scaleX=self._effectCardItem.scaleY=0.8;
		self._effectCardItem.questionVisible=true;
		self._effectCardItem.x=568;
		self._effectCardItem.y=360;
		self._effectCardItem.alpha=0;
		self._effectCardItem.rotation=330;
		var item=self._itemList[self._cardIndex];
		self._targetPos.x=self.box.x+item.x;
		self._targetPos.y=self.box.y+item.y;
		if(temp.Type==1){
			self._isSpecialCard=false;
		}
		else if(temp.Type==3){
			self._isSpecialCard=(!skillInfo || skillInfo.isNew || temp.Rarity >=2);
		}
		self._cardIndex++;
		if($isShowEffect){
			self._box.playSkeleton("open",false);
			self.flyCardEffect_1();
		}
	}

	/**卡牌飞到中间效果 **/
	__proto.flyCardEffect_1=function(){
		var self=this;
		if(self._isPlayEffecting)return;
		self._isPlayEffecting=true;
		Tween.to(self._effectCardItem
		,{y:230,alpha:1,rotation:360 }
		,200
		,null
		,Handler.create(self,self.openCardEffect));
	}

	/**打开卡牌效果 **/
	__proto.openCardEffect=function(){
		var self=this;
		if(self._isSpecialCard){
			self.specialCardOpenEffect();
		}
		else {
			self.commonCardOpenEffect();
		}
	}

	/**
	*通用卡牌飞行效果
	*/
	__proto.commonCardOpenEffect=function(){
		var self=this;
		Tween.to(self._effectCardItem,{x:self._targetPos.x,y:self._targetPos.y},300);
		Tween.to(self._effectCardItem
		,{scaleX:0 }
		,150
		,null
		,Handler.create(self,function(){
			self._effectCardItem.questionVisible=false;
			Tween.to(self._effectCardItem
			,{scaleX:1,scaleY:1 }
			,150
			,null
			,Handler.create(self,function(){
				self._itemList[(self._cardIndex-1)].actionOpenEffect();
				self.actionShowEffect();
			}));
		}));
	}

	/**
	*特殊卡牌飞行效果
	*/
	__proto.specialCardOpenEffect=function(){
		var self=this;
		Tween.to(self._effectCardItem
		,{scaleX:0 }
		,150
		,null
		,Handler.create(self,function(){
			self._effectCardItem.questionVisible=false;
			Tween.to(self._effectCardItem
			,{scaleX:1.4,scaleY:1.4 }
			,150
			,null
			,Handler.create(self,function(){
				self._effectCardItem.actionOpenEffect();
				Tween.to(self._effectCardItem
				,{x:self._targetPos.x,y:self._targetPos.y,scaleX:1,scaleY:1 }
				,300
				,null
				,Handler.create(self,function(){
					self.actionShowEffect();
				})
				,1200);
			}));
		}));
	}

	/**关闭界面 **/
	__proto.onClose=function(){
		UIMgr.ins.closeView("TreasureBoxOpenView",true,true,UIFactory.ins.getPassResArr("skillItem.atlas"));
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.6);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this);
	}

	__proto.onResize=function(_bestFitWidth,_bestFitHeight){
		this.scaleX=_bestFitWidth/1136;
		this.scaleY=_bestFitHeight/640;
	}

	__proto.closeHandler=function(e){
		if(this._isShowEffect)return;
		this.onClose();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		var self=this;
		self.removeEvent();
		if(self._box){
			self._box.destroy();
		}
		if(self._effectCardItem){
			self._effectCardItem.destroy();
		};
		var item;
		for (var i=0,len=self._itemList.length;i < len;i++){
			item=self._itemList[i];
			item.destroy();
			item=null;
		}
		self._itemList.length=0;
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
		self._box=null;
		self._effectCardItem=null;
		self._openBoxDatas=null;
		self._itemList=null;
		self._targetPos=null;
	}

	return TreasureBoxOpenView;
})(TreasureBoxOpenViewUI)


//class modules.vip.view.GetVipRewardView extends ui.vip.GetVIpRewardViewUI
var GetVipRewardView=(function(_super){
	function GetVipRewardView(){
		this._data=null;
		this.listX=0;
		this._boxId=0;
		GetVipRewardView.__super.call(this);
		this.initView();
		this.addEvents();
	}

	__class(GetVipRewardView,'modules.vip.view.GetVipRewardView',_super);
	var __proto=GetVipRewardView.prototype;
	__proto.initView=function(){
		this.listX=this.Itemlist.x;
		this.mPanel.hScrollBar.hide=true;
	}

	__proto.addEvents=function(){
		this.Itemlist.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
		this.btnGet.on("click",this,this.onClickGet);
	}

	__proto.removeEvents=function(){
		this._data=null;
		if(this.Itemlist.renderHandler){
			this.Itemlist.renderHandler.recover();
			this.Itemlist.renderHandler=null;
		}
		this.btnGet.off("click",this,this.onClickGet);
	}

	__proto.setData=function(data){
		SoundMgr.instance.playSound(4006017);
		this._boxId=data.boxId;
		this.Itemlist.x=this.listX;
		this._data=data;
		this.Itemlist.array=this._data.list;
		this.Itemlist.repeatX=this._data.list.length;
		this.Itemlist.refresh();
		var len=this._data.list.length;
		if(len < 5){
			this.Itemlist.x+=((5-len)/ 2)*122;
		}
	}

	__proto.onClickGet=function(){
		this.closeView();
	}

	__proto.closeView=function(){
		if(this._data && this._data.boxItems && this._data.boxItems.length > 0){
			var openBoxDataList=[],info;
			for(var i=0;i < this._data.boxItems.length;i++){
				info=new PlayerItemInfo();
				info.itemID=this._data.boxItems[i].itemId;
				info.count=this._data.boxItems[i].count;
				openBoxDataList.push(info);
			}
			UIMgr.ins.openView("TreasureBoxOpenView",
			Handler.create(this,function(view){
				view.init(this._boxId,openBoxDataList);
			}));
		}
		this.removeEvents();
		UIMgr.ins.closeView("GetVipRewardView",true,false);
	}

	__proto.onRenderHandler=function(item,index){
		if(index < this.Itemlist.array.length){
			item.setData(this.Itemlist.array[index]);
		}
	}

	__proto.closeHandler=function(e){
		laya.ui.Window.prototype.closeHandler.call(this,e);
		this.closeView();
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		if(this.Itemlist.renderHandler){
			this.Itemlist.renderHandler.recover();
			this.Itemlist.renderHandler=null;
		}
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return GetVipRewardView;
})(GetVIpRewardViewUI)


//class modules.vip.view.VipRewardPreView extends ui.vip.VipRewardPreviewUI
var VipRewardPreView=(function(_super){
	function VipRewardPreView(){
		this._list=null;
		VipRewardPreView.__super.call(this);
		this.initView();
		this.addEvents();
	}

	__class(VipRewardPreView,'modules.vip.view.VipRewardPreView',_super);
	var __proto=VipRewardPreView.prototype;
	__proto.initView=function(){
		this.txt_onBtn.text=LanguageMgr.Ins.GetLan("9002152");
		this.list_item.scrollBar.visible=false;
		this.list_item.scrollBar.elasticBackTime=600;
		this.list_item.scrollBar.elasticDistance=200;
	}

	__proto.addEvents=function(){
		this.btn_close.clickHandler=Handler.create(this,this.onClose,null,false);
		this.btn_ok.clickHandler=Handler.create(this,this.onClose,null,false);
		this.list_item.renderHandler=Handler.create(this,this.onRenderHandler,null,false);
		this.list_item.mouseHandler=Handler.create(this,this.onClickHandler,null,false);
	}

	__proto.onClickHandler=function(e,$index){
		if(e.type !="click")return;
		var data=this.list_item.array[$index];
		if(!data)return;
		var itemVO=ItemModel.getItemConfigData(data.itemId);
		TipsManager.Instance().addItemTip(itemVO,e);
	}

	__proto.onRenderHandler=function(item,index){
		if(index < this.list_item.array.length){
			item.setData(this.list_item.array[index]);
		}
	}

	__proto.setData=function(type,content){
		if(type==1){
			this.txt_title.text=LanguageMgr.Ins.GetLan(14300362);
		}
		if(type==2){
			this.txt_title.text=LanguageMgr.Ins.GetLan(14300363);
		}
		this.list_item.array=content;
		this.list_item.refresh();
	}

	__proto.onClose=function(){
		UIMgr.ins.closeView("VipRewardPreView",false);
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	return VipRewardPreView;
})(VipRewardPreviewUI)


//class modules.vip.view.VipUpgradePage extends ui.hall.VipUpgradePageUI
var VipUpgradePage=(function(_super){
	function VipUpgradePage(){
		this.skBG=null;
		this.skCenter=null;
		this.skNameEffect=null;
		VipUpgradePage.__super.call(this);
		SoundMgr.instance.playSound(4006018);
		this.isOpenResize=true;
		Tween.from(this.box,{scaleX:0.5,scaleY:0.5},300,Ease.backOut);
		this._layer=LayerMgr.ins.flyWordLayer;
		this.box_icon.visible=false;
		this.on("click",this,this.onClickClose);
	}

	__class(VipUpgradePage,'modules.vip.view.VipUpgradePage',_super);
	var __proto=VipUpgradePage.prototype;
	__proto.onClickClose=function(){
		Tween.clearTween(this.box);
		Tween.clearAll(this.box);
		UIMgr.ins.closeView("LevelUp");
	}

	__proto.destroy=function(destroyChild){
		(destroyChild===void 0)&& (destroyChild=true);
		this.off("click",this,this.onClickClose);
		if(this.skBG)this.skBG.destroy(true);this.skBG=null;
		if(this.skCenter)this.skCenter.destroy(true);this.skCenter=null;
		if(this.skNameEffect)this.skNameEffect.destroy(true);this.skNameEffect=null;
		laya.ui.Window.prototype.destroy.call(this,destroyChild);
	}

	__proto.showView=function($x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,$isShowMash){
		($x===void 0)&& ($x=0);
		($y===void 0)&& ($y=0);
		($hAlign===void 0)&& ($hAlign="center");
		($vAlign===void 0)&& ($vAlign="center");
		($isPopUp===void 0)&& ($isPopUp=false);
		($maskAlpha===void 0)&& ($maskAlpha=0.8);
		($blurDisplayName===void 0)&& ($blurDisplayName="curScene");
		($isShowMash===void 0)&& ($isShowMash=true);
		laya.ui.Window.prototype.showView.call(this,$x,$y,$hAlign,$vAlign,$isPopUp,$maskAlpha,$blurDisplayName,"LevelUp");
		this.updateView();
	}

	__proto.hideView=function(isPlaySound){
		(isPlaySound===void 0)&& (isPlaySound=false);
		laya.ui.Window.prototype.hideView.call(this,isPlaySound);
		if(this.skBG)this.skBG.destroy(true);this.skBG=null;
		if(this.skCenter)this.skCenter.destroy(true);this.skCenter=null;
		if(this.skNameEffect)this.skNameEffect.destroy(true);this.skNameEffect=null;
	}

	__proto.updateView=function(){
		this.boxContent.zOrder=5;
		this.img_prelevel.skin="assets/textrue/vip/ui_v"+PlayerInfo.instance.pre_viplevel+".png";
		this.img_level.skin="assets/textrue/vip/ui_v"+PlayerInfo.instance.vipLv+".png";
		this.txt.text=LanguageMgr.Ins.GetLan(14300356,PlayerInfo.instance.vipLv);
		this.img_vipIcon.skin="assets/textrue/vip/ui_icon_vip"+PlayerInfo.instance.vipLv+".png";
		this.boxunLock.visible=true;
		this.box_icon.visible=true;
		this.skBG=new AniSkeleton("juesheshengji_3","ui");
		this.skBG.x=366;
		this.skBG.y=229;
		this.skBG.blendMode="add";
		this.box.addChild(this.skBG);
		this.skCenter=new AniSkeleton("juesheshengji_2","ui",0,false,null,null,true);
		this.skCenter.x=355;
		this.skCenter.y=208;
		this.box.addChild(this.skCenter);
		this.skNameEffect=new AniSkeleton("juesheshengji_1","ui",0,true,null,null,true);
		this.skNameEffect.x=363;
		this.skNameEffect.y=200;
		this.skNameEffect.blendMode="add";
		this.box.addChild(this.skNameEffect);
	}

	return VipUpgradePage;
})(VipUpgradePageUI)


//class modules.vs.FourVSMenu extends modules.vs.VSMenu
var FourVSMenu=(function(_super){
	function FourVSMenu(battleCreateMsg){
		FourVSMenu.__super.call(this,battleCreateMsg);
		this.initGuildTips(1051);
	}

	__class(FourVSMenu,'modules.vs.FourVSMenu',_super);
	var __proto=FourVSMenu.prototype;
	__proto.initMenu=function(){
		_super.prototype.initMenu.call(this);
		this.isOpenResize=true;
		for (var i=0;i < 4;i++){
			var matchRole=new MatchRole$1();
			matchRole.x=70+250 *i;
			this.mpBoxRole.addChild(matchRole);
			this.matchRoles.push(matchRole);
		}
		if (NewGuideMgr.ins.isNewGuide){
			this.mpBoxCancel.visible=false;
		}
		else{
			this.mpBoxCancel.visible=true;
		}
	}

	__proto.syncBattleCreateMsg=function(msg){
		this._syncBattleCreateMsg(msg,false);
	}

	__proto.cancelMatch=function(){
		var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
		msg.opType=4;
		SocketManager.Instance.sendSocketData(0x2745,msg);
	}

	return FourVSMenu;
})(VSMenu)


//class modules.vs.MulitPveVSMenu extends modules.vs.VSMenu
var MulitPveVSMenu=(function(_super){
	function MulitPveVSMenu(battleCreateMsg){
		MulitPveVSMenu.__super.call(this,battleCreateMsg);
		this.initGuildTips(1051);
	}

	__class(MulitPveVSMenu,'modules.vs.MulitPveVSMenu',_super);
	var __proto=MulitPveVSMenu.prototype;
	__proto.initMenu=function(){
		_super.prototype.initMenu.call(this);
		this.isOpenResize=true;
		var stX=(1136-(this.battleCreateMsg.attackList.length *250-25))/ 2;
		for (var i=0;i < this.battleCreateMsg.attackList.length;i++){
			var matchRole=new MatchRole$1();
			matchRole.x=stX+250 *i;
			this.mpBoxRole.addChild(matchRole);
			this.matchRoles.push(matchRole);
		}
		this.mpImgMatch.visible=false;
		this.mpBoxCancel.visible=false;
	}

	__proto.syncBattleCreateMsg=function(msg){
		this._syncBattleCreateMsg(msg,false);
	}

	return MulitPveVSMenu;
})(VSMenu)


//class modules.vs.PveMenu extends modules.vs.VSMenu
var PveMenu=(function(_super){
	function PveMenu(battleCreateMsg){
		PveMenu.__super.call(this,battleCreateMsg);
		this.initGuildTips(1052);
	}

	__class(PveMenu,'modules.vs.PveMenu',_super);
	var __proto=PveMenu.prototype;
	__proto.initMenu=function(){
		_super.prototype.initMenu.call(this);
		this.isOpenResize=true;
		var matchRole=new MatchRole$1();
		matchRole.x=(1136-190)/ 2-30;
		this.mpBoxRole.addChild(matchRole);
		this.matchRoles.push(matchRole);
		this.mpImgMatch.visible=false;
		this.mpBtnCancel.visible=false;
	}

	__proto.syncBattleCreateMsg=function(msg){
		this._syncBattleCreateMsg(msg,true);
	}

	__proto.cancelMatch=function(){
		if (SceneMgr.ins.cursceneId==1){
			HallMgr.ins.show();
		}
		else{
			SocketManager.Instance.out.sendQuitMatch();
		}
	}

	return PveMenu;
})(VSMenu)


//class modules.vs.PvpVSMenu extends modules.vs.VSMenu
var PvpVSMenu=(function(_super){
	function PvpVSMenu(battleCreateMsg){
		this.vsImage=null;
		PvpVSMenu.__super.call(this,battleCreateMsg);
		this.initGuildTips(1051);
	}

	__class(PvpVSMenu,'modules.vs.PvpVSMenu',_super);
	var __proto=PvpVSMenu.prototype;
	__proto.initMenu=function(){
		_super.prototype.initMenu.call(this);
		this.isOpenResize=true;
		this.vsImage=new Image("vs/ui_vs.png");
		this.vsImage.anchorX=0.5;
		this.vsImage.anchorY=0.5;
		this.vsImage.x=this.mpBoxRole.width*0.5;
		this.vsImage.y=this.mpBoxRole.height*0.5-50;
		this.mpBoxRole.addChild(this.vsImage);
		var matchRole;
		var i=0;
		for (i=0;i < 2;i++){
			matchRole=new MatchRole$1();
			matchRole.x=70+200 *i;
			this.mpBoxRole.addChild(matchRole);
			this.matchRoles.push(matchRole);
		}
		for (i=2;i < 4;i++){
			matchRole=new MatchRole$1();
			matchRole.x=150+70+200 *i;
			this.mpBoxRole.addChild(matchRole);
			this.matchRoles.push(matchRole);
		}
		if (NewGuideMgr.ins.isNewGuide){
			this.mpBoxCancel.visible=false;
		}
		else{
			if(RoomMgr.ins.masterId==PlayerInfo.instance.userId+""){
				this.mpBoxCancel.visible=true;
			}
			else{
				this.mpBoxCancel.visible=false;
			}
		}
	}

	__proto.syncBattleCreateMsg=function(msg){
		this._syncBattleCreateMsg(msg,false);
	}

	__proto.cancelMatch=function(){
		var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
		msg.opType=4;
		SocketManager.Instance.sendSocketData(0x2745,msg);
	}

	return PvpVSMenu;
})(VSMenu)


//class modules.vs.TwoVSMenu extends modules.vs.VSMenu
var TwoVSMenu=(function(_super){
	function TwoVSMenu(battleCreateMsg){
		this.vsImage=null;
		TwoVSMenu.__super.call(this,battleCreateMsg);
		this.initGuildTips(1052);
	}

	__class(TwoVSMenu,'modules.vs.TwoVSMenu',_super);
	var __proto=TwoVSMenu.prototype;
	__proto.initMenu=function(){
		_super.prototype.initMenu.call(this);
		this.isOpenResize=true;
		this.vsImage=new Image("vs/ui_vs.png");
		this.vsImage.anchorX=0.5;
		this.vsImage.anchorY=0.5;
		this.vsImage.x=this.mpBoxRole.width*0.5;
		this.vsImage.y=this.mpBoxRole.height*0.5-50;
		this.mpBoxRole.addChild(this.vsImage);
		var iconNum=2;
		for (var i=0;i < iconNum;i++){
			var matchRole=new MatchRole$1();
			matchRole.x=i==0 ? 220 :670;
			this.mpBoxRole.addChild(matchRole);
			this.matchRoles.push(matchRole);
		}
		if (NewGuideMgr.ins.curNodeId==10 || NewGuideMgr.ins.curNodeId==120){
			this.mpBtnCancel.visible=false;
		}
		else{
			this.mpBtnCancel.visible=true;
		}
	}

	__proto.syncBattleCreateMsg=function(msg){
		this._syncBattleCreateMsg(msg,true);
	}

	__proto.cancelMatch=function(){
		if (SceneMgr.ins.cursceneId==1){
			HallMgr.ins.show();
		}
		else{
			var msg=new com.road.ddt.proto.battle.BattleMatchOpMsg();
			msg.opType=4;
			SocketManager.Instance.sendSocketData(0x2745,msg);
		}
	}

	return TwoVSMenu;
})(VSMenu)


/**
*训练营1
技能、移动
(不显示战斗倒计时、出手倒计时、飞机)
*/
//class modules.newguide.battlemenu.TwoBattleMenuGuide extends modules.battle.view.menu.TwoBattleMenu
var TwoBattleMenuGuide=(function(_super){
	function TwoBattleMenuGuide(hero,enemys,battleScene){
		/**当前回合 */
		this.round=-1;
		this._showMyTurn=false;
		this._msg=null;
		this._turnMsg=null;
		this._isMyTurn=false;
		this.flag=true;
		TwoBattleMenuGuide.__super.call(this,hero,enemys,battleScene);
	}

	__class(TwoBattleMenuGuide,'modules.newguide.battlemenu.TwoBattleMenuGuide',_super);
	var __proto=TwoBattleMenuGuide.prototype;
	__proto.initMenu=function(){
		_super.prototype.initMenu.call(this);
		EventMgr.ins.on("guide_useSkill",this,this.guideUseSkill);
		EventMgr.ins.on("guide_showSkillbox",this,this.showSkillbox);
		EventMgr.ins.on("battle_ballistic_cancel",this,this.cancel);
	}

	/**开始引导 */
	__proto.start=function(){
		EventMgr.ins.event("GuideNode_10_Step_2");
	}

	/**取消拉线*/
	__proto.cancel=function(){
		this.flag=false;
	}

	/**轮到我的回合 */
	__proto.myturn=function(msg,turnMsg){
		this._isMyTurn=true;
		this._msg=msg;
		this._turnMsg=turnMsg;
		this.hero.mouseEnabled=false;
		if(msg&&turnMsg)this.refreshPoint(msg,turnMsg);
		this.round++;
		if(this.round==0){
			this._showMyTurn=false;
			this.cardbox.mouseEnabled=false;
			this.start();
			}else{
			modules.battle.view.menu.BattleMenu.prototype.myturn.call(this,msg,turnMsg);
			if(this.round>1){
				this.cardbox.mouseEnabled=true;
				this.hero.mouseEnabled=true;
				EventMgr.ins.off("battle_ballistic_cancel",this,this.cancel);
			}
		}
	}

	__proto.overturn=function(){
		this._isMyTurn=false;
		if(this.round==0)return;
		var battleScene=SceneMgr.ins.curScene;
		if(!battleScene.isMyTurn)return;
		modules.battle.view.menu.BattleMenu.prototype.overturn.call(this);
	}

	__proto.cooldown=function(){
		var battleScene=SceneMgr.ins.curScene;
		if(!battleScene.isMyTurn)return;
		--this._time;
		this.time.value=this._time+"";
		if(this._time <=0){
			Laya.timer.clear(this,this.cooldown);
			modules.battle.view.menu.BattleMenu.prototype.myturn.call(this,this._msg,this._turnMsg);
			}else{
			this.time.visible=true;
			if(this._time > 3){
				SoundMgr.instance.playSound(4003003);
				}else{
				SoundMgr.instance.playSound(4003002);
			}
		}
	}

	__proto.showSkillbox=function(){
		EventMgr.ins.off("guide_showSkillbox",this,this.showSkillbox);
		this.myturn(this._msg,this._turnMsg);
		this.initCard();
	}

	/**等技能出卡动画完成后开始引导 */
	__proto.guideUseSkill=function(){
		EventMgr.ins.off("guide_useSkill",this,this.guideUseSkill);
		this.cardbox.mouseEnabled=true;
		EventMgr.ins.event("GuideNode_10_Step_3");
	}

	__proto.initCard=function(){
		this.initUseCards();
		EventMgr.ins.on("battle_ballistic_1",this,this.calcBallistic1);
	}

	/**拉线后要处理的 */
	__proto.calcBallistic1=function(){
		this._isMyTurn=false;
	}

	//_guideStep.onStayEnd();
	__proto.cardEnable=function(){
		this.cardbox.mouseEnabled=true;
	}

	/**等到第二回合再初始化技能卡 */
	__proto.initUseCards=function(){
		if(this.round==1){
			this.cardbox.mouseEnabled=false;
			this.cardbox.visible=true;
			modules.battle.view.menu.BattleMenu.prototype.initUseCards.call(this);
			this.initRandomSkill();
			this.playInitCardAni();
		}
	}

	__proto.initRandomSkill=function(){
		if(this.round==1){
			this.cardbox.mouseEnabled=false;
			modules.battle.view.menu.BattleMenu.prototype.initRandomSkill.call(this);
		}
	}

	__proto.playInitCardAni=function(){
		if(this.round==1){
			this.cardbox.mouseEnabled=false;
			modules.battle.view.menu.BattleMenu.prototype.playInitCardAni.call(this);
		}
	}

	__proto.destroyMenu=function(){
		EventMgr.ins.off("battle_ballistic_1",this,this.calcBallistic1);
		EventMgr.ins.off("battle_ballistic_cancel",this,this.cancel);
		EventMgr.ins.off("guide_showSkillbox",this,this.showSkillbox);
		EventMgr.ins.off("guide_useSkill",this,this.guideUseSkill);
		Laya.timer.clear(this,this.cooldown);
		_super.prototype.destroyMenu.call(this);
		this._turnMsg=null;
		this._msg=null;
	}

	__proto.getRoleDistance=function(){
		return Math.abs(this.hero.x-this.enemy.x);
	}

	return TwoBattleMenuGuide;
})(TwoBattleMenu)


	Laya.__init([PlayerMenuView,FBInterfaceMgr]);
	new Main();

})(window,document,Laya);

if (typeof define === 'function' && define.amd){
	define('laya.core', ['require', "exports"], function(require, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: true });
        for (var i in Laya) {
			var o = Laya[i];
            o && o.__isclass && (exports[i] = o);
        }
    });
}